
@interface ACFHTTPTransport : NSObject <ACFHTTPMethodInvocationDelegate, ACFHTTPTransportProtocol> {
    id /* block */  _completionBlock;
    NSTimer * _failoverTimer;
    NSDictionary * _httpGETParameters;
    NSDictionary * _httpHeader;
    NSString * _httpMethod;
    NSData * _httpPOSTBody;
    NSMutableArray * _inProgressServerInvocations;
    bool  _isCanceled;
    NSMutableArray * _queuedServerInvocations;
    NSString * _requestURLTemplate;
    id /* block */  _retryCheckBlock;
    NSArray * _serverAttemptsDelays;
    NSArray * _serverHosts;
    double  _timeout;
    unsigned long long  _tryCounter;
}

@property (nonatomic, copy) id /* block */ completionBlock;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSTimer *failoverTimer;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSDictionary *httpGETParameters;
@property (nonatomic, retain) NSDictionary *httpHeader;
@property (nonatomic, retain) NSString *httpMethod;
@property (nonatomic, retain) NSData *httpPOSTBody;
@property (nonatomic, retain) NSMutableArray *inProgressServerInvocations;
@property (nonatomic) bool isCanceled;
@property (nonatomic, retain) NSMutableArray *queuedServerInvocations;
@property (nonatomic, retain) NSString *requestURLTemplate;
@property (nonatomic, copy) id /* block */ retryCheckBlock;
@property (nonatomic, retain) NSArray *serverAttemptsDelays;
@property (nonatomic, retain) NSArray *serverHosts;
@property (readonly) Class superclass;
@property (nonatomic) double timeout;
@property (nonatomic) unsigned long long tryCounter;

- (void)addToQueuedServerInvocations:(id)arg1;
- (void)cancelAllInvocations;
- (void)cancelRequest;
- (id /* block */)completionBlock;
- (void)dealloc;
- (void)didEnd;
- (void)didStart;
- (id)failoverTimer;
- (bool)hasFinishedServerInvocations;
- (id)httpGETParameters;
- (id)httpHeader;
- (id)httpMethod;
- (void)httpMethodInvocation:(id)arg1 didFailWithError:(id)arg2;
- (void)httpMethodInvocation:(id)arg1 didFinishWithResult:(id)arg2;
- (id)httpPOSTBody;
- (id)inProgressServerInvocations;
- (void)invocation:(id)arg1 didFinishWithError:(id)arg2 response:(id)arg3;
- (bool)isCanceled;
- (void)performRequest;
- (void)performRequestWithCompletionBlock:(id /* block */)arg1;
- (id)queuedServerInvocations;
- (void)removeFromQueuedServerInvocations:(id)arg1;
- (id)requestString:(id)arg1;
- (id)requestURLTemplate;
- (id /* block */)retryCheckBlock;
- (void)scheduleInvocation:(id)arg1;
- (void)scheduleNextQueuedRequest;
- (void)scheduleTimerForNextAttempt;
- (id)serverAttemptsDelays;
- (id)serverHosts;
- (void)setCompletionBlock:(id /* block */)arg1;
- (void)setFailoverTimer:(id)arg1;
- (void)setHttpGETParameters:(id)arg1;
- (void)setHttpHeader:(id)arg1;
- (void)setHttpMethod:(id)arg1;
- (void)setHttpPOSTBody:(id)arg1;
- (void)setInProgressServerInvocations:(id)arg1;
- (void)setIsCanceled:(bool)arg1;
- (void)setQueuedServerInvocations:(id)arg1;
- (void)setRequestURLTemplate:(id)arg1;
- (void)setRetryCheckBlock:(id /* block */)arg1;
- (void)setServerAttemptsDelays:(id)arg1;
- (void)setServerHosts:(id)arg1;
- (void)setTimeout:(double)arg1;
- (void)setTryCounter:(unsigned long long)arg1;
- (double)timeout;
- (unsigned long long)tryCounter;
- (void)unscheduleInvocation:(id)arg1;
- (id)urlWithRequest:(id)arg1 address:(id)arg2;

@end
