
@interface ACMEUIController : NSObject <ACMExternalUIControllerProtocol, ACMSignInDialogDelegate> {
    NSString * _accountNameFieldPlaceholder;
    UIColor * _backgroundColor;
    id  _cancelButton;
    <ACMUIControllerDelegate> * _delegate;
    UIImage * _logoImage;
    <ACMBaseAuthenticationRequest> * _request;
    bool  _shouldAuthenticateOnUserInput;
    NSMutableSet * _shownAlerts;
    id  _signInButton;
    <ACMSignInDialogProtocol> * _signInDialog;
    unsigned long long  _signInStyle;
    NSString * _widgetAccountLabel;
    bool  _widgetEnabled;
    long long  _widgetPasswordReturnKeyType;
    struct CGPoint { 
        double x; 
        double y; 
    }  _widgetPosition;
}

@property (nonatomic, retain) NSString *accountNameFieldPlaceholder;
@property (nonatomic, retain) UIColor *backgroundColor;
@property (nonatomic, retain) id cancelButton;
@property (readonly) ACMAppleConnectImplComponents *components;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <ACMUIControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isWidgetShown;
@property (nonatomic, retain) UIImage *logoImage;
@property (readonly) UIView *managerApprovalDialogSummaryView;
@property (nonatomic) NSString *password;
@property (nonatomic, retain) <ACMBaseAuthenticationRequest> *request;
@property (nonatomic) bool shouldAuthenticateOnUserInput;
@property (nonatomic, retain) NSMutableSet *shownAlerts;
@property (nonatomic, retain) id signInButton;
@property (nonatomic, retain) <ACMSignInDialogProtocol> *signInDialog;
@property (readonly) unsigned long long signInDialogContentStyle;
@property (nonatomic) unsigned long long signInStyle;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSString *widgetAccountLabel;
@property (getter=isWidgetEnabled, nonatomic) bool widgetEnabled;
@property (nonatomic) long long widgetPasswordReturnKeyType;
@property (nonatomic) struct CGPoint { double x1; double x2; } widgetPosition;

- (id)accountNameFieldPlaceholder;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (id)backgroundColor;
- (id)cancelButton;
- (void)cancelSignInWidget;
- (id)components;
- (id)createAlertDialog;
- (id)createCustomWidget;
- (id)createStandardWidget;
- (Class)customSignInClass;
- (void)dealloc;
- (id)delegate;
- (void)hideSignInWidgetWithParentViewController:(id)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (Class)iTunesSignInClass;
- (id)init;
- (bool)isWidgetEnabled;
- (bool)isWidgetShown;
- (id)logoImage;
- (id)managerApprovalDialogSummaryView;
- (void)onIForgot:(id)arg1;
- (void)onManageAppleID:(id)arg1;
- (void)onSignIn:(id)arg1;
- (void)onSignInCancel:(id)arg1;
- (id)password;
- (id)request;
- (void)setAccountNameFieldPlaceholder:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setCancelButton:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setLogoImage:(id)arg1;
- (void)setPassword:(id)arg1;
- (void)setRequest:(id)arg1;
- (void)setShouldAuthenticateOnUserInput:(bool)arg1;
- (void)setShownAlerts:(id)arg1;
- (void)setSignInButton:(id)arg1;
- (void)setSignInDialog:(id)arg1;
- (void)setSignInStyle:(unsigned long long)arg1;
- (void)setWidgetAccountLabel:(id)arg1;
- (void)setWidgetEnabled:(bool)arg1;
- (void)setWidgetPasswordReturnKeyType:(long long)arg1;
- (void)setWidgetPosition:(struct CGPoint { double x1; double x2; })arg1;
- (bool)shouldAuthenticateOnUserInput;
- (void)showAlertWithAlertMessage:(id)arg1 buttonTitle:(id)arg2 cancelButtonTitle:(id)arg3 errorTag:(long long)arg4;
- (void)showSignInWidgetWithParentViewController:(id)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (id)shownAlerts;
- (id)signInButton;
- (id)signInDialog;
- (unsigned long long)signInDialogContentStyle;
- (void)signInDialogDidBecomeDisabled;
- (void)signInDialogDidBecomeEnabled;
- (void)signInDialogWillBecomeDisabled;
- (void)signInDialogWillBecomeEnabled;
- (unsigned long long)signInStyle;
- (Class)signInWidgetClass;
- (Class)standardSignInClass;
- (bool)useAlertView;
- (bool)useCustomWidget;
- (id)widgetAccountLabel;
- (long long)widgetPasswordReturnKeyType;
- (struct CGPoint { double x1; double x2; })widgetPosition;

@end
