
@interface AWDNWL2Report : PBCodable <NSCopying> {
    int  _cellularBand;
    int  _cellularBandInfo;
    int  _cellularBandwidth;
    int  _cellularBars;
    NSString * _cellularCellType;
    bool  _cellularKnownGood;
    int  _cellularLqm;
    int  _cellularMcc;
    int  _cellularMnc;
    int  _cellularPid;
    int  _cellularPowerCostDownload;
    int  _cellularPowerCostUpload;
    int  _cellularRadioTechnology;
    int  _cellularTac;
    int  _cellularUarfcn;
    struct { 
        unsigned int cellularBand : 1; 
        unsigned int cellularBandInfo : 1; 
        unsigned int cellularBandwidth : 1; 
        unsigned int cellularBars : 1; 
        unsigned int cellularLqm : 1; 
        unsigned int cellularMcc : 1; 
        unsigned int cellularMnc : 1; 
        unsigned int cellularPid : 1; 
        unsigned int cellularPowerCostDownload : 1; 
        unsigned int cellularPowerCostUpload : 1; 
        unsigned int cellularRadioTechnology : 1; 
        unsigned int cellularTac : 1; 
        unsigned int cellularUarfcn : 1; 
        unsigned int wifiLqm : 1; 
        unsigned int wifiRadioTechnology : 1; 
        unsigned int wifiRssi : 1; 
        unsigned int cellularKnownGood : 1; 
        unsigned int wifiKnownGood : 1; 
    }  _has;
    bool  _wifiKnownGood;
    int  _wifiLqm;
    int  _wifiRadioTechnology;
    int  _wifiRssi;
}

@property (nonatomic) int cellularBand;
@property (nonatomic) int cellularBandInfo;
@property (nonatomic) int cellularBandwidth;
@property (nonatomic) int cellularBars;
@property (nonatomic, retain) NSString *cellularCellType;
@property (nonatomic) bool cellularKnownGood;
@property (nonatomic) int cellularLqm;
@property (nonatomic) int cellularMcc;
@property (nonatomic) int cellularMnc;
@property (nonatomic) int cellularPid;
@property (nonatomic) int cellularPowerCostDownload;
@property (nonatomic) int cellularPowerCostUpload;
@property (nonatomic) int cellularRadioTechnology;
@property (nonatomic) int cellularTac;
@property (nonatomic) int cellularUarfcn;
@property (nonatomic) bool hasCellularBand;
@property (nonatomic) bool hasCellularBandInfo;
@property (nonatomic) bool hasCellularBandwidth;
@property (nonatomic) bool hasCellularBars;
@property (nonatomic, readonly) bool hasCellularCellType;
@property (nonatomic) bool hasCellularKnownGood;
@property (nonatomic) bool hasCellularLqm;
@property (nonatomic) bool hasCellularMcc;
@property (nonatomic) bool hasCellularMnc;
@property (nonatomic) bool hasCellularPid;
@property (nonatomic) bool hasCellularPowerCostDownload;
@property (nonatomic) bool hasCellularPowerCostUpload;
@property (nonatomic) bool hasCellularRadioTechnology;
@property (nonatomic) bool hasCellularTac;
@property (nonatomic) bool hasCellularUarfcn;
@property (nonatomic) bool hasWifiKnownGood;
@property (nonatomic) bool hasWifiLqm;
@property (nonatomic) bool hasWifiRadioTechnology;
@property (nonatomic) bool hasWifiRssi;
@property (nonatomic) bool wifiKnownGood;
@property (nonatomic) int wifiLqm;
@property (nonatomic) int wifiRadioTechnology;
@property (nonatomic) int wifiRssi;

- (int)StringAsCellularBand:(id)arg1;
- (int)StringAsCellularPowerCostDownload:(id)arg1;
- (int)StringAsCellularPowerCostUpload:(id)arg1;
- (int)StringAsCellularRadioTechnology:(id)arg1;
- (int)StringAsWifiRadioTechnology:(id)arg1;
- (int)cellularBand;
- (id)cellularBandAsString:(int)arg1;
- (int)cellularBandInfo;
- (int)cellularBandwidth;
- (int)cellularBars;
- (id)cellularCellType;
- (bool)cellularKnownGood;
- (int)cellularLqm;
- (int)cellularMcc;
- (int)cellularMnc;
- (int)cellularPid;
- (int)cellularPowerCostDownload;
- (id)cellularPowerCostDownloadAsString:(int)arg1;
- (int)cellularPowerCostUpload;
- (id)cellularPowerCostUploadAsString:(int)arg1;
- (int)cellularRadioTechnology;
- (id)cellularRadioTechnologyAsString:(int)arg1;
- (int)cellularTac;
- (int)cellularUarfcn;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (bool)hasCellularBand;
- (bool)hasCellularBandInfo;
- (bool)hasCellularBandwidth;
- (bool)hasCellularBars;
- (bool)hasCellularCellType;
- (bool)hasCellularKnownGood;
- (bool)hasCellularLqm;
- (bool)hasCellularMcc;
- (bool)hasCellularMnc;
- (bool)hasCellularPid;
- (bool)hasCellularPowerCostDownload;
- (bool)hasCellularPowerCostUpload;
- (bool)hasCellularRadioTechnology;
- (bool)hasCellularTac;
- (bool)hasCellularUarfcn;
- (bool)hasWifiKnownGood;
- (bool)hasWifiLqm;
- (bool)hasWifiRadioTechnology;
- (bool)hasWifiRssi;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (bool)readFrom:(id)arg1;
- (void)setCellularBand:(int)arg1;
- (void)setCellularBandInfo:(int)arg1;
- (void)setCellularBandwidth:(int)arg1;
- (void)setCellularBars:(int)arg1;
- (void)setCellularCellType:(id)arg1;
- (void)setCellularKnownGood:(bool)arg1;
- (void)setCellularLqm:(int)arg1;
- (void)setCellularMcc:(int)arg1;
- (void)setCellularMnc:(int)arg1;
- (void)setCellularPid:(int)arg1;
- (void)setCellularPowerCostDownload:(int)arg1;
- (void)setCellularPowerCostUpload:(int)arg1;
- (void)setCellularRadioTechnology:(int)arg1;
- (void)setCellularTac:(int)arg1;
- (void)setCellularUarfcn:(int)arg1;
- (void)setHasCellularBand:(bool)arg1;
- (void)setHasCellularBandInfo:(bool)arg1;
- (void)setHasCellularBandwidth:(bool)arg1;
- (void)setHasCellularBars:(bool)arg1;
- (void)setHasCellularKnownGood:(bool)arg1;
- (void)setHasCellularLqm:(bool)arg1;
- (void)setHasCellularMcc:(bool)arg1;
- (void)setHasCellularMnc:(bool)arg1;
- (void)setHasCellularPid:(bool)arg1;
- (void)setHasCellularPowerCostDownload:(bool)arg1;
- (void)setHasCellularPowerCostUpload:(bool)arg1;
- (void)setHasCellularRadioTechnology:(bool)arg1;
- (void)setHasCellularTac:(bool)arg1;
- (void)setHasCellularUarfcn:(bool)arg1;
- (void)setHasWifiKnownGood:(bool)arg1;
- (void)setHasWifiLqm:(bool)arg1;
- (void)setHasWifiRadioTechnology:(bool)arg1;
- (void)setHasWifiRssi:(bool)arg1;
- (void)setWifiKnownGood:(bool)arg1;
- (void)setWifiLqm:(int)arg1;
- (void)setWifiRadioTechnology:(int)arg1;
- (void)setWifiRssi:(int)arg1;
- (bool)wifiKnownGood;
- (int)wifiLqm;
- (int)wifiRadioTechnology;
- (id)wifiRadioTechnologyAsString:(int)arg1;
- (int)wifiRssi;
- (void)writeTo:(id)arg1;

@end
