
@interface NetworkQualityConfiguration : NSObject <NSCopying, NSSecureCoding> {
    NSString * _bonjourHost;
    bool  _download;
    bool  _edgeRelay;
    bool  _edgeRelayRemote;
    bool  _forceDisableL4S;
    bool  _forceHTTP1;
    bool  _forceHTTP2;
    bool  _forceHTTP3;
    bool  _forceL4S;
    NSString * _hostOverride;
    bool  _idleLatency;
    long long  _maxDownlinkData;
    long long  _maxDownloadFlows;
    long long  _maxRuntime;
    long long  _maxUplinkData;
    long long  _maxUploadFlows;
    long long  _minDownloadFlows;
    long long  _minRuntime;
    long long  _minUploadFlows;
    long long  _movingAveragePeriod;
    NSString * _networkInterfaceName;
    bool  _parallel;
    bool  _privateRelay;
    long long  _standardDeviationThreshold;
    bool  _telemetry;
    long long  _trimmedMeanThreshold;
    bool  _upload;
    bool  _validateCertificate;
    bool  _workingLatency;
    NSDictionary * customConfigurationDictionary;
    NSString * customConfigurationString;
}

@property (nonatomic, copy) NSString *bonjourHost;
@property (nonatomic, copy) NSObject *configuration;
@property bool download;
@property bool edgeRelay;
@property bool edgeRelayRemote;
@property bool forceDisableL4S;
@property bool forceHTTP1;
@property bool forceHTTP2;
@property bool forceHTTP3;
@property bool forceL4S;
@property (nonatomic, retain) NSString *hostOverride;
@property bool idleLatency;
@property long long maxDownlinkData;
@property long long maxDownloadFlows;
@property long long maxRuntime;
@property long long maxUplinkData;
@property long long maxUploadFlows;
@property long long minDownloadFlows;
@property long long minRuntime;
@property long long minUploadFlows;
@property long long movingAveragePeriod;
@property (nonatomic, copy) NSString *networkInterfaceName;
@property bool parallel;
@property bool privateRelay;
@property long long standardDeviationThreshold;
@property bool telemetry;
@property long long trimmedMeanThreshold;
@property bool upload;
@property bool validateCertificate;
@property bool workingLatency;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)bonjourHost;
- (id)configuration;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (bool)download;
- (bool)edgeRelay;
- (bool)edgeRelayRemote;
- (void)encodeWithCoder:(id)arg1;
- (bool)forceDisableL4S;
- (bool)forceHTTP1;
- (bool)forceHTTP2;
- (bool)forceHTTP3;
- (bool)forceL4S;
- (id)hostOverride;
- (bool)idleLatency;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (long long)maxDownlinkData;
- (long long)maxDownloadFlows;
- (long long)maxRuntime;
- (long long)maxUplinkData;
- (long long)maxUploadFlows;
- (long long)minDownloadFlows;
- (long long)minRuntime;
- (long long)minUploadFlows;
- (long long)movingAveragePeriod;
- (id)mutableCopyWithZone:(struct _NSZone { }*)arg1;
- (id)networkInterfaceName;
- (bool)parallel;
- (bool)privateRelay;
- (void)setBonjourHost:(id)arg1;
- (void)setConfiguration:(id)arg1;
- (void)setDownload:(bool)arg1;
- (void)setEdgeRelay:(bool)arg1;
- (void)setEdgeRelayRemote:(bool)arg1;
- (void)setForceDisableL4S:(bool)arg1;
- (void)setForceHTTP1:(bool)arg1;
- (void)setForceHTTP2:(bool)arg1;
- (void)setForceHTTP3:(bool)arg1;
- (void)setForceL4S:(bool)arg1;
- (void)setHostOverride:(id)arg1;
- (void)setIdleLatency:(bool)arg1;
- (void)setMaxDownlinkData:(long long)arg1;
- (void)setMaxDownloadFlows:(long long)arg1;
- (void)setMaxRuntime:(long long)arg1;
- (void)setMaxUplinkData:(long long)arg1;
- (void)setMaxUploadFlows:(long long)arg1;
- (void)setMinDownloadFlows:(long long)arg1;
- (void)setMinRuntime:(long long)arg1;
- (void)setMinUploadFlows:(long long)arg1;
- (void)setMovingAveragePeriod:(long long)arg1;
- (void)setNetworkInterfaceName:(id)arg1;
- (void)setParallel:(bool)arg1;
- (void)setPrivateRelay:(bool)arg1;
- (void)setStandardDeviationThreshold:(long long)arg1;
- (void)setTelemetry:(bool)arg1;
- (void)setTrimmedMeanThreshold:(long long)arg1;
- (void)setUpload:(bool)arg1;
- (void)setValidateCertificate:(bool)arg1;
- (void)setWorkingLatency:(bool)arg1;
- (long long)standardDeviationThreshold;
- (bool)telemetry;
- (long long)trimmedMeanThreshold;
- (bool)upload;
- (bool)validateCertificate;
- (bool)workingLatency;

@end
