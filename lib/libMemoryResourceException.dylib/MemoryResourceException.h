
@interface MemoryResourceException : NSObject <NSCopying> {
    NSString * _bundleID;
    NSDictionary * _cachedMetaDataDict;
    unsigned long long  _cid;
    NSString * _coalitionBundleID;
    unsigned long long  _crashedThreadId;
    NSDate * _currentTime;
    unsigned int  _dirtyFlags;
    long long  _exceptionCode0;
    long long  _exceptionType;
    NSString * _execName;
    NSString * _execPath;
    NSDictionary * _executionStack;
    NSDictionary * _footprintOutput;
    NSString * _hwModel;
    unsigned long long  _ioAccelDirtySwappedSize;
    NSArray * _ioAccelMemoryInfo;
    NSArray * _ioAccelMemoryInfoErrors;
    NSArray * _ioSurfaceInfo;
    bool  _is64Bit;
    bool  _isMSLEnabled;
    unsigned long long  _ledgerAlternateAccounting;
    unsigned long long  _ledgerAlternateAccountingCompressed;
    unsigned long long  _ledgerIOKitMapped;
    unsigned long long  _ledgerInternal;
    unsigned long long  _ledgerInternalCompressed;
    unsigned long long  _ledgerNetworkNonvolatile;
    unsigned long long  _ledgerNetworkNonvolatileCompressed;
    unsigned long long  _ledgerPageTable;
    unsigned long long  _ledgerPhysFootprint;
    unsigned long long  _ledgerPhysFootprintPeak;
    unsigned long long  _ledgerPurgeableNonvolatile;
    unsigned long long  _ledgerPurgeableNonvolatileCompressed;
    unsigned long long  _ledgerWiredMem;
    unsigned long long  _limitValue;
    NSString * _memgraphError;
    VMUProcessObjectGraph * _memoryGraph;
    NSArray * _osLogs;
    NSDictionary * _osVersion;
    int  _pid;
    int  _ppid;
    unsigned int  _procFlags;
    NSDate * _startTime;
    unsigned int  _suspensionToken;
    unsigned int  _task;
    long long  _upTime;
    long long  _version;
}

@property (readonly) NSString *bundleID;
@property (readonly) NSDictionary *cachedMetaDataDict;
@property (readonly) unsigned long long cid;
@property (readonly) NSString *coalitionBundleID;
@property (readonly) unsigned long long crashedThreadId;
@property (readonly) NSDate *currentTime;
@property (readonly) unsigned int dirtyFlags;
@property (readonly) long long exceptionCode0;
@property (readonly) long long exceptionType;
@property (readonly) NSString *execName;
@property (readonly) NSString *execPath;
@property (readonly) NSDictionary *executionStack;
@property (readonly) NSDictionary *footprintOutput;
@property (readonly) NSString *hwModel;
@property (readonly) NSArray *ioAccelMemoryInfo;
@property (readonly) NSArray *ioAccelMemoryInfoErrors;
@property (readonly) NSArray *ioSurfaceInfo;
@property (readonly) bool is64Bit;
@property bool isMSLEnabled;
@property (readonly) unsigned long long ledgerAlternateAccounting;
@property (readonly) unsigned long long ledgerAlternateAccountingCompressed;
@property (readonly) unsigned long long ledgerIOKitMapped;
@property (readonly) unsigned long long ledgerInternal;
@property (readonly) unsigned long long ledgerInternalCompressed;
@property (readonly) unsigned long long ledgerNetworkNonvolatile;
@property (readonly) unsigned long long ledgerNetworkNonvolatileCompressed;
@property (readonly) unsigned long long ledgerPageTable;
@property (readonly) unsigned long long ledgerPhysFootprint;
@property (readonly) unsigned long long ledgerPhysFootprintPeak;
@property (readonly) unsigned long long ledgerPurgeableNonvolatile;
@property (readonly) unsigned long long ledgerPurgeableNonvolatileCompressed;
@property (readonly) unsigned long long ledgerWiredMem;
@property (readonly) unsigned long long limitValue;
@property (retain) NSString *memgraphError;
@property (readonly) VMUProcessObjectGraph *memoryGraph;
@property (readonly) NSArray *osLogs;
@property (readonly) NSDictionary *osVersion;
@property (readonly) int pid;
@property (readonly) int ppid;
@property (readonly) unsigned int procFlags;
@property (readonly) NSDate *startTime;
@property (readonly) unsigned int suspensionToken;
@property (readonly) unsigned int task;
@property (readonly) long long upTime;
@property (readonly) long long version;

+ (void)extractExecNameAndBundleIDMinimal:(unsigned int)arg1 execNameOut:(id*)arg2 bundleIDOut:(id*)arg3;
+ (id)resourceExceptionFromLogFileHandle:(id)arg1 error:(id*)arg2;
+ (id)resourceExceptionFromTask:(unsigned int)arg1 error:(id*)arg2;

- (void).cxx_destruct;
- (void)_populateVerboseDiagnosticsWithOptions:(unsigned long long)arg1 contentLevel:(unsigned int)arg2 timeoutSecs:(unsigned long long)arg3 memgraphFailedReasonOut:(unsigned long long*)arg4;
- (long long)_saveLogFileWithHandle:(id)arg1 error:(id*)arg2;
- (id)_symbolOwners;
- (id)bundleID;
- (id)cachedMetaDataDict;
- (unsigned long long)cid;
- (id)coalitionBundleID;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (unsigned long long)crashedThreadId;
- (id)createLiteMetaDataDict;
- (id)createMetaDataDict;
- (id)currentTime;
- (void)dealloc;
- (unsigned int)dirtyFlags;
- (long long)exceptionCode0;
- (long long)exceptionType;
- (id)execName;
- (id)execPath;
- (id)executionStack;
- (id)footprintOutput;
- (bool)generateMemoryGraphWithContentLevel:(unsigned int)arg1 memgraphFailedReasonOut:(unsigned long long*)arg2;
- (id)hwModel;
- (id)ioAccelMemoryInfo;
- (id)ioAccelMemoryInfoErrors;
- (id)ioSurfaceInfo;
- (bool)is64Bit;
- (bool)isFirstParty;
- (bool)isMSLEnabled;
- (unsigned long long)ledgerAlternateAccounting;
- (unsigned long long)ledgerAlternateAccountingCompressed;
- (unsigned long long)ledgerIOKitMapped;
- (unsigned long long)ledgerInternal;
- (unsigned long long)ledgerInternalCompressed;
- (unsigned long long)ledgerNetworkNonvolatile;
- (unsigned long long)ledgerNetworkNonvolatileCompressed;
- (unsigned long long)ledgerPageTable;
- (unsigned long long)ledgerPhysFootprint;
- (unsigned long long)ledgerPhysFootprintPeak;
- (unsigned long long)ledgerPurgeableNonvolatile;
- (unsigned long long)ledgerPurgeableNonvolatileCompressed;
- (unsigned long long)ledgerWiredMem;
- (unsigned long long)limitValue;
- (id)memgraphError;
- (id)memoryGraph;
- (id)osLogs;
- (id)osVersion;
- (int)pid;
- (void)populateVerboseDiagnostics:(bool)arg1;
- (int)ppid;
- (id)prettyPrintBacktrace:(bool)arg1;
- (id)prettyPrintBinaryImages;
- (id)prettyPrintIOAccelMemoryInfo;
- (id)prettyPrintIOSurfaceInfo;
- (unsigned int)procFlags;
- (void)releaseAnalyzedTask;
- (bool)saveLogFileWithHandle:(id)arg1 error:(id*)arg2;
- (void)setIsMSLEnabled:(bool)arg1;
- (void)setMemgraphError:(id)arg1;
- (id)startTime;
- (unsigned int)suspensionToken;
- (unsigned int)task;
- (long long)upTime;
- (long long)version;

@end
