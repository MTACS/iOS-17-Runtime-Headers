
@interface _LTOspreySpeechTranslationSession : NSObject <FTSpeechTranslationResponseDelegate, _LTSpeechCompressorDelegate> {
    unsigned long long  _audioPacketCount;
    NSString * _cachedUserTypedText;
    id /* block */  _completionBlock;
    NSMutableArray * _confirmedTranslations;
    _LTTranslationContext * _context;
    <_LTSpeechTranslationDelegate> * _delegate;
    bool  _didReceiveAudioLimitExceededResponse;
    bool  _didReceiveFinalBlazarResponse;
    bool  _didReceiveFinalRecognitionResponse;
    bool  _didReceivePartialRecognitionResponse;
    bool  _didReceiveTTSResponse;
    bool  _didReceiveTranslationResponse;
    bool  _didTimeout;
    double  _endpointTimeout;
    bool  _endpointedSpeech;
    NSError * _error;
    NSMutableDictionary * _finalASRResults;
    double  _initialOnlineTimeout;
    bool  _isCancelled;
    _LTLanguageDetectionResult * _lidResult;
    NSMutableArray * _mtResults;
    double  _onlineTimeout;
    bool  _sentAudio;
    bool  _sentEndAudio;
    NSObject<OS_dispatch_source> * _serverTimer;
    _LTSpeechCompressor * _speechCompressor;
    FTSpeechTranslationStreamingContext * _streamContext;
    NSObject<OS_dispatch_queue> * _timerQueue;
    _LTTextToSpeechCache * _ttsCache;
}

@property (nonatomic, copy) id /* block */ completionBlock;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <_LTSpeechTranslationDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) double endpointTimeout;
@property (readonly) unsigned long long hash;
@property (nonatomic) double initialOnlineTimeout;
@property (nonatomic, readonly) bool isCancelled;
@property (nonatomic) double onlineTimeout;
@property (readonly) Class superclass;
@property (nonatomic, retain) _LTTextToSpeechCache *ttsCache;

- (void).cxx_destruct;
- (id)_bestSourceTextForResponse:(id)arg1;
- (void)_handleAudioLimitExceededResponse:(id)arg1;
- (void)_handleFinalBlazarResponse:(id)arg1;
- (void)_handleFinalRecognitionResponse:(id)arg1;
- (void)_handlePartialRecognitionResponse:(id)arg1;
- (void)_handleServerEndpointFeatures:(id)arg1;
- (void)_handleTTSResponse:(id)arg1;
- (void)_handleTranslationResponse:(id)arg1;
- (id)_primaryLanguageRecognized;
- (id)_translationForLocale:(id)arg1;
- (void)cancel;
- (void)cancelServerTimeout;
- (id /* block */)completionBlock;
- (void)confirmDataIfNeeded;
- (id)delegate;
- (id)description;
- (void)didCompressPackets:(id)arg1 totalPacketCount:(unsigned long long)arg2;
- (void)endpoint;
- (double)endpointTimeout;
- (void)initCommon;
- (id)initWithService:(id)arg1 context:(id)arg2 delegate:(id)arg3;
- (id)initWithService:(id)arg1 context:(id)arg2 text:(id)arg3 delegate:(id)arg4;
- (double)initialOnlineTimeout;
- (bool)isCancelled;
- (double)onlineTimeout;
- (void)sendAnalyticsEvent;
- (void)sendAudioData:(id)arg1;
- (void)sendEndAudio;
- (void)serverTimeoutFired;
- (void)setCompletionBlock:(id /* block */)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEndpointTimeout:(double)arg1;
- (void)setInitialOnlineTimeout:(double)arg1;
- (void)setLanguagesRecognized:(id)arg1;
- (void)setOnlineTimeout:(double)arg1;
- (void)setTtsCache:(id)arg1;
- (void)startServerTimeoutTimer;
- (void)streamDidReceiveSpeechTranslationStreamingResponse:(id)arg1;
- (void)streamFailVerifySpeechTranslationStreamingResponse:(id)arg1;
- (void)translationDidFinishWithError:(id)arg1;
- (id)ttsCache;
- (void)updateServerTimeout:(double)arg1;

@end
