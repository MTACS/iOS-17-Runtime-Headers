
@interface FTMutableStartSpeechRequest : FTStartSpeechRequest

@property (nonatomic, copy) NSString *application_name;
@property (nonatomic, copy) NSString *client_endpointer_model_version;
@property (nonatomic) long long codec;
@property (nonatomic, copy) NSString *device_os;
@property (nonatomic, copy) NSString *device_type;
@property (nonatomic) bool disable_auto_punctuation;
@property (nonatomic) bool enable_endpoint_candidate;
@property (nonatomic) bool enable_hybrid_endpoint;
@property (nonatomic) bool enable_server_side_endpoint;
@property (nonatomic) bool enable_utterance_detection;
@property (nonatomic) long long end_point_mode;
@property (nonatomic, copy) NSString *experiment_id;
@property (nonatomic, copy) NSString *fork_id;
@property (nonatomic) unsigned int initial_recognition_candidate_id;
@property (nonatomic) unsigned int initial_result_candidate_id;
@property (nonatomic, copy) NSString *input_origin;
@property (nonatomic) bool is_far_field;
@property (nonatomic) bool keyboard_dictation;
@property (nonatomic, copy) NSString *keyboard_identifier;
@property (nonatomic, copy) NSString *language;
@property (nonatomic, copy) NSString *metadata;
@property (nonatomic, copy) NSString *mic_type;
@property (nonatomic, copy) NSArray *multi_user_parameters;
@property (nonatomic, copy) NSString *request_locale;
@property (nonatomic, copy) NSString *session_id;
@property (nonatomic, copy) NSString *speech_id;
@property (nonatomic) long long speech_request_source;
@property (nonatomic) int start_audio_bookmark;
@property (nonatomic) unsigned long long start_endpointing_at;
@property (nonatomic) unsigned long long start_recognition_at;
@property (nonatomic) bool store_audio;
@property (nonatomic) bool stream_results;
@property (nonatomic) bool stream_unstable_results;
@property (nonatomic) bool tandem_mode;
@property (nonatomic, copy) NSString *task_name;
@property (nonatomic, copy) NSString *udm_host;
@property (nonatomic) int udm_port;

- (id)application_name;
- (id)client_endpointer_model_version;
- (long long)codec;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)device_os;
- (id)device_type;
- (bool)disable_auto_punctuation;
- (bool)enable_endpoint_candidate;
- (bool)enable_hybrid_endpoint;
- (bool)enable_server_side_endpoint;
- (bool)enable_utterance_detection;
- (long long)end_point_mode;
- (id)experiment_id;
- (id)fork_id;
- (id)init;
- (unsigned int)initial_recognition_candidate_id;
- (unsigned int)initial_result_candidate_id;
- (id)input_origin;
- (bool)is_far_field;
- (bool)keyboard_dictation;
- (id)keyboard_identifier;
- (id)language;
- (id)metadata;
- (id)mic_type;
- (id)multi_user_parameters;
- (id)request_locale;
- (id)session_id;
- (void)setApplication_name:(id)arg1;
- (void)setClient_endpointer_model_version:(id)arg1;
- (void)setCodec:(long long)arg1;
- (void)setDevice_os:(id)arg1;
- (void)setDevice_type:(id)arg1;
- (void)setDisable_auto_punctuation:(bool)arg1;
- (void)setEnable_endpoint_candidate:(bool)arg1;
- (void)setEnable_hybrid_endpoint:(bool)arg1;
- (void)setEnable_server_side_endpoint:(bool)arg1;
- (void)setEnable_utterance_detection:(bool)arg1;
- (void)setEnd_point_mode:(long long)arg1;
- (void)setExperiment_id:(id)arg1;
- (void)setFork_id:(id)arg1;
- (void)setInitial_recognition_candidate_id:(unsigned int)arg1;
- (void)setInitial_result_candidate_id:(unsigned int)arg1;
- (void)setInput_origin:(id)arg1;
- (void)setIs_far_field:(bool)arg1;
- (void)setKeyboard_dictation:(bool)arg1;
- (void)setKeyboard_identifier:(id)arg1;
- (void)setLanguage:(id)arg1;
- (void)setMetadata:(id)arg1;
- (void)setMic_type:(id)arg1;
- (void)setMulti_user_parameters:(id)arg1;
- (void)setRequest_locale:(id)arg1;
- (void)setSession_id:(id)arg1;
- (void)setSpeech_id:(id)arg1;
- (void)setSpeech_request_source:(long long)arg1;
- (void)setStart_audio_bookmark:(int)arg1;
- (void)setStart_endpointing_at:(unsigned long long)arg1;
- (void)setStart_recognition_at:(unsigned long long)arg1;
- (void)setStore_audio:(bool)arg1;
- (void)setStream_results:(bool)arg1;
- (void)setStream_unstable_results:(bool)arg1;
- (void)setTandem_mode:(bool)arg1;
- (void)setTask_name:(id)arg1;
- (void)setUdm_host:(id)arg1;
- (void)setUdm_port:(int)arg1;
- (id)speech_id;
- (long long)speech_request_source;
- (int)start_audio_bookmark;
- (unsigned long long)start_endpointing_at;
- (unsigned long long)start_recognition_at;
- (bool)store_audio;
- (bool)stream_results;
- (bool)stream_unstable_results;
- (bool)tandem_mode;
- (id)task_name;
- (id)udm_host;
- (int)udm_port;

@end
