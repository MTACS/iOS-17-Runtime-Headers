
@interface FHTransaction : NSObject <NSSecureCoding> {
    long long  _accountType;
    NSDecimalNumber * _amount;
    long long  _amountFromDatabase;
    long long  _category;
    NSString * _city;
    NSDictionary * _compoundFeatures;
    NSString * _country;
    NSString * _currencyCode;
    NSString * _displayName;
    NSDate * _disputeLastUpdatedDate;
    NSDate * _disputeOpenDate;
    unsigned long long  _disputeStatus;
    unsigned long long  _disputeType;
    bool  _hasLocation;
    NSString * _identifier;
    NSString * _industryCategory;
    long long  _industryCode;
    CLLocation * _location;
    unsigned long long  _mapsMerchantBrandID;
    int  _mapsMerchantBrandResultProviderID;
    unsigned long long  _mapsMerchantID;
    int  _mapsMerchantResultProviderID;
    NSString * _merchantDetailedCategory;
    NSString * _merchantUniqueIdentifier;
    NSString * _name;
    NSString * _peerPaymentCounterpartHandle;
    NSString * _peerPaymentMemo;
    long long  _peerPaymentType;
    NSString * _rawName;
    bool  _recurring;
    NSString * _state;
    NSString * _street;
    unsigned long long  _suggestedSuggestionCategory;
    NSTimeZone * _timeZone;
    NSDate * _transactionDate;
    unsigned long long  _transactionInternalState;
    unsigned long long  _transactionSource;
    NSString * _transactionSourceIdentifier;
    long long  _transactionStatus;
    NSDate * _transactionStatusChangedDate;
    long long  _transactionType;
    NSString * _zip;
}

@property (nonatomic) long long accountType;
@property (nonatomic, copy) NSDecimalNumber *amount;
@property (nonatomic) long long amountFromDatabase;
@property (nonatomic) long long category;
@property (nonatomic, copy) NSString *city;
@property (nonatomic, copy) NSDictionary *compoundFeatures;
@property (nonatomic, copy) NSString *country;
@property (nonatomic, copy) NSString *currencyCode;
@property (nonatomic, copy) NSString *displayName;
@property (nonatomic, copy) NSDate *disputeLastUpdatedDate;
@property (nonatomic, copy) NSDate *disputeOpenDate;
@property (nonatomic) unsigned long long disputeStatus;
@property (nonatomic) unsigned long long disputeType;
@property (nonatomic) bool hasLocation;
@property (nonatomic, copy) NSString *identifier;
@property (nonatomic, copy) NSString *industryCategory;
@property (nonatomic) long long industryCode;
@property (nonatomic, copy) CLLocation *location;
@property (nonatomic) unsigned long long mapsMerchantBrandID;
@property (nonatomic) int mapsMerchantBrandResultProviderID;
@property (nonatomic) unsigned long long mapsMerchantID;
@property (nonatomic) int mapsMerchantResultProviderID;
@property (nonatomic, copy) NSString *merchantDetailedCategory;
@property (nonatomic, copy) NSString *merchantUniqueIdentifier;
@property (nonatomic, copy) NSString *name;
@property (nonatomic, copy) NSString *peerPaymentCounterpartHandle;
@property (nonatomic, copy) NSString *peerPaymentMemo;
@property (nonatomic) long long peerPaymentType;
@property (nonatomic, copy) NSString *rawName;
@property (nonatomic) bool recurring;
@property (nonatomic, copy) NSString *state;
@property (nonatomic, copy) NSString *street;
@property (nonatomic) unsigned long long suggestedSuggestionCategory;
@property (nonatomic, retain) NSTimeZone *timeZone;
@property (nonatomic, copy) NSDate *transactionDate;
@property (nonatomic) unsigned long long transactionInternalState;
@property (nonatomic) unsigned long long transactionSource;
@property (nonatomic, copy) NSString *transactionSourceIdentifier;
@property (nonatomic) long long transactionStatus;
@property (nonatomic, copy) NSDate *transactionStatusChangedDate;
@property (nonatomic) long long transactionType;
@property (nonatomic, copy) NSString *zip;

+ (long long)FHMerchantCategoryFromString:(id)arg1;
+ (id)_allowedCountryCodesForMapsMerchant;
+ (id)fhProperties;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (long long)accountType;
- (id)amount;
- (long long)amountFromDatabase;
- (long long)category;
- (id)city;
- (id)compoundFeatures;
- (id)country;
- (id)currencyCode;
- (id)description;
- (id)displayName;
- (id)disputeLastUpdatedDate;
- (id)disputeOpenDate;
- (unsigned long long)disputeStatus;
- (unsigned long long)disputeType;
- (void)encodeWithCoder:(id)arg1;
- (bool)hasLocation;
- (unsigned long long)hash;
- (id)identifier;
- (id)industryCategory;
- (long long)industryCode;
- (id)initWithCoder:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithDictionary:(id)arg1 dateFormatter:(id)arg2;
- (id)initWithJsonString:(id)arg1;
- (bool)isEqual:(id)arg1;
- (id)location;
- (unsigned long long)mapsMerchantBrandID;
- (int)mapsMerchantBrandResultProviderID;
- (unsigned long long)mapsMerchantID;
- (int)mapsMerchantResultProviderID;
- (id)merchantDetailedCategory;
- (id)merchantUniqueIdentifier;
- (id)name;
- (id)peerPaymentCounterpartHandle;
- (id)peerPaymentMemo;
- (long long)peerPaymentType;
- (id)rawName;
- (bool)recurring;
- (void)setAccountType:(long long)arg1;
- (void)setAmount:(id)arg1;
- (void)setAmountFromDatabase:(long long)arg1;
- (void)setCategory:(long long)arg1;
- (void)setCity:(id)arg1;
- (void)setCompoundFeatures:(id)arg1;
- (void)setCountry:(id)arg1;
- (void)setCurrencyCode:(id)arg1;
- (void)setDisplayName:(id)arg1;
- (void)setDisputeLastUpdatedDate:(id)arg1;
- (void)setDisputeOpenDate:(id)arg1;
- (void)setDisputeStatus:(unsigned long long)arg1;
- (void)setDisputeType:(unsigned long long)arg1;
- (void)setHasLocation:(bool)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setIndustryCategory:(id)arg1;
- (void)setIndustryCode:(long long)arg1;
- (void)setLocation:(id)arg1;
- (void)setMapsMerchantBrandID:(unsigned long long)arg1;
- (void)setMapsMerchantBrandResultProviderID:(int)arg1;
- (void)setMapsMerchantID:(unsigned long long)arg1;
- (void)setMapsMerchantResultProviderID:(int)arg1;
- (void)setMerchantDetailedCategory:(id)arg1;
- (void)setMerchantUniqueIdentifier:(id)arg1;
- (void)setName:(id)arg1;
- (void)setPeerPaymentCounterpartHandle:(id)arg1;
- (void)setPeerPaymentMemo:(id)arg1;
- (void)setPeerPaymentType:(long long)arg1;
- (void)setRawName:(id)arg1;
- (void)setRecurring:(bool)arg1;
- (void)setState:(id)arg1;
- (void)setStreet:(id)arg1;
- (void)setSuggestedSuggestionCategory:(unsigned long long)arg1;
- (void)setTimeZone:(id)arg1;
- (void)setTransactionDate:(id)arg1;
- (void)setTransactionInternalState:(unsigned long long)arg1;
- (void)setTransactionSource:(unsigned long long)arg1;
- (void)setTransactionSourceIdentifier:(id)arg1;
- (void)setTransactionStatus:(long long)arg1;
- (void)setTransactionStatusChangedDate:(id)arg1;
- (void)setTransactionType:(long long)arg1;
- (void)setZip:(id)arg1;
- (id)state;
- (id)street;
- (unsigned long long)suggestedSuggestionCategory;
- (id)timeZone;
- (id)toDictionary;
- (id)toJson:(id)arg1;
- (id)transactionDate;
- (unsigned long long)transactionInternalState;
- (unsigned long long)transactionSource;
- (id)transactionSourceIdentifier;
- (long long)transactionStatus;
- (id)transactionStatusChangedDate;
- (long long)transactionType;
- (id)zip;

@end
