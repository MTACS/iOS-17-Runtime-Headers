
@interface FHDatabaseManager : NSObject {
    NSMutableDictionary * _amountAggregatesCache;
    FHBatchProcessor * _batchProcessor;
    bool  _databaseDeleted;
    NSDateFormatter * _dateFormatter;
    NSMutableDictionary * _dateTimeAggregatesCache;
    PQLConnection * _db;
    NSDecimalNumber * _decimalRmseThreshold;
    <FHFetchAllTransactionsDelegate> * _delegate;
    bool  _enableRecurChange;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lockDatabaseBookKeeping;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lockDatabaseExecute;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lockDatabaseFetch;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lockProcessingDate;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lockSQLStreaming;
    NSMutableDictionary * _merchantAggregatesCache;
    NSDecimalNumber * _secondsInDay;
    NSMutableArray * _transactionFeaturesCache;
    unsigned long long  _transactionFeaturesOffset;
}

@property (nonatomic) <FHFetchAllTransactionsDelegate> *delegate;
@property (nonatomic, readonly) long long mostRecentTransactionDate;

- (void).cxx_destruct;
- (void)_checkUniqueConstraints:(id)arg1 uniqueConstraintSet:(id)arg2;
- (void)_computeAllAggregateFeaturesWithTransactionId:(id)arg1;
- (id)_computeDisputeFeaturesForTransaction:(id)arg1;
- (id)_computePaymentFeaturesForTransaction:(id)arg1;
- (bool)_computeSingleAmountAggregateFeature:(id)arg1;
- (bool)_computeSingleDatetimeAggregateFeature:(id)arg1;
- (bool)_computeSingleMerchantAggregateFeature:(id)arg1;
- (void)_createDataDirectory;
- (id)_createFeatureResponseFromFeatures:(id)arg1 compoundFeatures:(id)arg2 locale:(id)arg3 forTxnID:(id)arg4;
- (id)_createFeatureResponseFromFeatures:(id)arg1 compoundFeatures:(id)arg2 locale:(id)arg3 forTxnID:(id)arg4 forApplication:(id)arg5;
- (bool)_execute:(id)arg1;
- (bool)_executeRaw:(id)arg1;
- (id)_fetch:(id)arg1;
- (id)_fetchv:(id)arg1 args:(char *)arg2;
- (id)_filterAggregateFeatureByCurrentWindow:(id)arg1;
- (id)_filterPeriodicCategories:(id)arg1;
- (id)_getAllTransactions:(unsigned long long)arg1 limit:(unsigned long long)arg2;
- (id)_getDataDirectory;
- (id)_getDisputeFeaturesForTransaction:(id)arg1;
- (id)_getRecurringTransactionIdentifiersByClass:(unsigned long long)arg1;
- (id)_getTransactionByIdentifier:(id)arg1;
- (id)_getTransactionsMarkedForRecurrChange;
- (bool)_hasDeterministicRealtime:(id)arg1;
- (bool)_insertOrUpdateTransactionFeatures:(id)arg1 compoundFeatures:(id)arg2 transactionID:(id)arg3;
- (void)_instrumentationTableMigration;
- (void)_invertFeaturesForTransactions:(id)arg1;
- (bool)_isDatabaseCorrupt;
- (bool)_isEligibleForSchemaMigration;
- (id)_lockFreeFetch:(id)arg1;
- (void)_logSchema:(id)arg1;
- (long long)_mostRecentTransactionDate;
- (void)_rebuildTablesAndIndexes:(bool)arg1;
- (id)_reconstructAggregateFeaturesWithProcessingWindow:(id)arg1;
- (bool)_signalMatchesSendSuggestionCriteria:(long long)arg1 periodicCategory:(unsigned long long)arg2;
- (long long)_startingDateSmartFeatureComputation;
- (bool)_truncateDatabase;
- (void)_updateAggregateTablesSchema;
- (void)_updateProcessingTimeForFeature:(id)arg1 processingDate:(unsigned long long)arg2;
- (bool)_updateTransaction:(id)arg1 withNewInternalState:(unsigned long long)arg2;
- (void)closeAndUnlock:(id)arg1;
- (void)computeAllAggregateFeatures;
- (bool)computeAmountAggregateFeatures;
- (void)computeAndPersistDisputeFeaturesForPendingTransactions;
- (void)computeAndPersistRecurringPeerPayments;
- (bool)computeDatetimeAggregateFeatures;
- (bool)computeMerchantAggregateFeatures;
- (void)computePaymentFeatures;
- (void)computeRecurringClassesWithMerchantCounts:(id)arg1 peerPaymentCounts:(id)arg2;
- (id)delegate;
- (bool)deleteAllFeatureRecordsForTransaction:(id)arg1;
- (bool)deleteAllMarkedTransactionFeatures;
- (bool)deleteAllRecordsFromTransactionFeatures;
- (bool)deleteAllRecordsInAccountInfoForTransactionSource:(id)arg1;
- (bool)deleteAllRecordsInPeerPaymentFeatures:(id)arg1;
- (bool)deleteAllRecordsInTransactionFeatures:(id)arg1;
- (bool)deleteAllRecordsInTransactions:(id)arg1;
- (bool)deleteDatabase:(id*)arg1;
- (bool)deleteTaggedButDeletedEvent:(id)arg1;
- (bool)deleteTaggedEventsInTimeRange:(id)arg1 startDate:(id)arg2 comparatorOfEndDate:(id)arg3 endDate:(id)arg4;
- (id)featuresForTransaction:(id)arg1;
- (id)getAllPeerPaymentSignalsFilterDismissed:(bool)arg1;
- (id)getCurrentCashBalance;
- (id)getDateFormatter;
- (id)getExpectedWeeklySpend;
- (id)getFHSmartFeatureByAmountType:(id)arg1;
- (id)getFHSmartFeatureByDateTimeType:(id)arg1;
- (id)getFHSmartFeatureByMerchantType:(id)arg1;
- (id)getFeaturePredicate:(id)arg1 FHSmartFeatureAggregateType:(id)arg2;
- (id)getFilteredPeerPaymentForecastingSignals;
- (id)getRecurringTransactionIdentifiers;
- (id)getTaggedPastCalendarEvents;
- (id)getTransactionByIdentifier:(id)arg1;
- (id)getTransactionIdsInTimeRangeFrom:(id)arg1 to:(id)arg2;
- (unsigned long long)getTransactionInternalState:(id)arg1;
- (id)getTransactionSmartFeaturesForApplication:(id)arg1;
- (id)getTransactionsByDetailedCategory:(id)arg1;
- (id)getTransactionsByInternalState:(unsigned long long)arg1 internalState:(unsigned long long)arg2;
- (id)getTransactionsByInternalState:(unsigned long long)arg1 internalState:(unsigned long long)arg2 offSet:(unsigned long long)arg3;
- (id)getTransactionsByInternalState:(unsigned long long)arg1 internalState:(unsigned long long)arg2 offSet:(unsigned long long)arg3 addCompoundFeatures:(bool)arg4;
- (id)init:(bool)arg1;
- (id)init:(bool)arg1 multiThreadingEnabled:(bool)arg2;
- (bool)insertFeatures:(id)arg1 realtimeFeatures:(id)arg2;
- (bool)insertFeaturesCompoundRealtime:(id)arg1 realtimeFeatures:(id)arg2;
- (bool)insertFeaturesCompoundRealtimeWithoutEvents:(id)arg1 realtimeFeatures:(id)arg2;
- (bool)insertFeaturesDeterminiticRealtime:(id)arg1 realtimeFeatures:(id)arg2;
- (bool)insertFeaturesEvents:(id)arg1;
- (bool)insertFeaturesPredictedRealtime:(id)arg1 realtimeFeatures:(id)arg2;
- (bool)insertInstrumentationRecord:(id)arg1;
- (bool)insertTransactionInInternalStateDirty:(id)arg1;
- (long long)mostRecentTransactionDate;
- (void)populateRecurringClassHistogramsForMerchants:(id)arg1 histogram:(id)arg2;
- (void)populateRecurringClassHistogramsWithPeerPaymentsCounts:(id)arg1 histogram:(id)arg2;
- (unsigned long long)processingTimeForFeature:(id)arg1;
- (void)publishEventsToBiome;
- (id)reconstructCompoundFeaturesForTransaction:(id)arg1;
- (id)reconstructTransaction:(id)arg1;
- (bool)recordPeerPaymentForecastingStatus:(unsigned long long)arg1 counterpartHandle:(id)arg2 amount:(id)arg3;
- (void)retrieveAll;
- (void)setDelegate:(id)arg1;
- (bool)shouldCallGetAllTransactions;
- (unsigned long long)streamGenericSQLFetch:(id /* block */)arg1 predicate:(id)arg2 sqlFetchQuery:(id)arg3;
- (unsigned long long)streamQueryResults:(id)arg1 usingFetchHandler:(id /* block */)arg2;
- (int)streamTransactionsByInternalState:(unsigned long long)arg1 internalState:(unsigned long long)arg2 offSet:(unsigned long long)arg3 onTransaction:(id /* block */)arg4;
- (int)streamTransactionsByInternalState:(unsigned long long)arg1 internalState:(unsigned long long)arg2 onTransaction:(id /* block */)arg3;
- (void)unsafeRemoveAllEntriesFromTable:(id)arg1;
- (bool)updateDeleteFlagInTransactionFeatures:(unsigned long long)arg1 forID:(id)arg2;
- (bool)updateGetAllStatus:(unsigned long long)arg1;
- (bool)updatePeerPaymentAccountBalance:(id)arg1 amount:(id)arg2 currencyCode:(id)arg3;
- (void)updateProcessingTimeForFeature:(id)arg1;
- (bool)updateTransactionInternalStateByIdentifier:(id)arg1 newInternalState:(unsigned long long)arg2;
- (bool)updateTransactionInternalStateByTransaction:(id)arg1 newInternalState:(unsigned long long)arg2;
- (bool)updateTransactionWholeRaw:(id)arg1;
- (bool)updateTransactionsInternalStateToState:(id)arg1 oldInternalState:(unsigned long long)arg2 newInternalState:(unsigned long long)arg3;

@end
