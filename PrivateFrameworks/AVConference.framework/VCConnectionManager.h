
@interface VCConnectionManager : NSObject <VCConnectionHealthMonitorDelegate, VCCoreMotionManagerDelegate, VCLinkProbingHandlerDelegate, VCWifiAssistManagerDelegate> {
    NSMutableDictionary * _aggregateStallTimeDuration;
    bool  _allowRequestForWRMNotification;
    bool  _brokenBackhaulDetectionStarted;
    double  _brokenBackhaulDetectionTriggerThreshold;
    unsigned long long  _budgetConsumingCellularRxBytes;
    unsigned long long  _budgetConsumingCellularTxBytes;
    unsigned int  _callID;
    NSObject<OS_dispatch_queue> * _callbackQueue;
    bool  _canUseP2PLinks;
    bool  _cellPrimaryInterfaceChangeEnabled;
    NSMutableArray * _connectionArray;
    <VCConnectionProtocol> * _connectionForDuplication;
    VCConnectionHealthMonitor * _connectionHealthMonitor;
    struct { 
        bool preferRelayOverP2P; 
        bool preferIPv6OverIPv4; 
        bool preferNonVPN; 
        bool e2eCriteriaEnabled; 
        bool preferE2E; 
    }  _connectionSelectionPolicy;
    int  _connectionSelectionVersion;
    VCConnectionSelector * _connectionSelector;
    VCCoreMotionManager * _coreMotionManager;
    id  _delegate;
    NSObject<OS_dispatch_queue> * _delegateQueue;
    bool  _disableRemoteInterfaceInference;
    unsigned int  _downlinkTargetBitrate;
    unsigned int  _downlinkTargetCellBitrateCap;
    bool  _dropLinkRecommendation;
    bool  _duplicateImportantPktsEnabled;
    int (* _duplicationCallback;
    void * _duplicationContext;
    bool  _duplicationEnhancementEnabled;
    VCDuplicationHandler * _duplicationHandler;
    bool  _duplicationPending;
    bool  _enableDuplication;
    bool  _enableMotionBasedDuplication;
    bool  _enableNetworkConditionMonitoring;
    int  _endToEndConnectionStatisticsHandlerIndex;
    bool  _fastMediaDuplicationEnabled;
    bool  _forceHandoverToCell;
    bool  _hasAssertedCell;
    bool  _iRATDuplicationEnabled;
    double  _iRATNotificationRequestTime;
    bool  _ignoreNWConnectionMonitorNotification;
    long long  _initialReceivedBytes;
    long long  _initialSentBytes;
    bool  _isAudioOnly;
    bool  _isDuplicationAllowed;
    bool  _isDuplicationAllowedForMediaDegraded;
    bool  _isInitialConnectionEstablished;
    bool  _isNWConnectionMonitorEnabled;
    bool  _isOneToOneModeEnabled;
    bool  _isOneToOneScreenEnabled;
    bool  _isPreWarmStateEnabled;
    bool  _isPrimaryLinkUsable;
    bool  _isPrimaryLocalUsingCell;
    bool  _isRTXSupported;
    bool  _isRemoteMediaQualityDegraded;
    bool  _isRemoteNetworkQualityDegraded;
    bool  _isStarted;
    bool  _isUplinkRetransmissionSupported;
    bool  _isUserMoving;
    bool  _isVideoExpected;
    bool  _isWRMNotificationPending;
    <VCConnectionProtocol> * _lastActivePrimaryConnection;
    double  _lastConnectionUnstableTime;
    double  _lastDefaultCheckTime;
    struct { 
        unsigned char version; 
        unsigned char direction; 
        unsigned char interfaceType; 
        unsigned long long timestamp; 
        unsigned long long maxThroughputBps; 
        unsigned long long totalByteCount; 
        unsigned int flushableQueueSize; 
        unsigned int nonFlushableQueueSize; 
        unsigned int averageDelayMillisecond; 
        unsigned long long averageThroughputBps; 
        int rateTrendSuggestion; 
        unsigned int packetLossPerFrame; 
        union { 
            struct { 
                unsigned char frequencyBand; 
                unsigned char intermittentState; 
                unsigned short estimatedIntermittentPeriod; 
                unsigned short singleOutagePeriod; 
                unsigned char btCoex; 
                unsigned char radioCoex; 
                unsigned char qualityScoreDelayRx; 
                unsigned char qualityScoreDelayTx; 
                unsigned char qualityScoreLossRx; 
                unsigned char qualityScoreLossTx; 
                unsigned char qualityScoreChannel; 
                float offChannelTimeRatio; 
                bool detectedFrequentOffChannelActivity; 
                unsigned short wlanDutyCycle; 
                unsigned int wifiObservedTxBitrate[6]; 
            } wifi; 
            struct { 
                unsigned char radioAccessTechnology; 
                short referenceSignalLevel; 
                short signalLevel; 
                BOOL signalQuality; 
                unsigned char uplinkBLER; 
                unsigned char downlinkBLER; 
                unsigned char bandwidthLimitationIndication; 
                unsigned char cdrxState; 
                unsigned short cdrxCycle; 
                unsigned short estimatedOutagePeriod; 
                unsigned char outageState; 
            } baseband; 
        } ; 
    }  _lastNWStatistics;
    <VCConnectionProtocol> * _lastPrimaryConnectionInUse;
    double  _lastReceivedFeedbackTime;
    double  _lastTransitionToFECTime;
    double  _lastiRATCheckTime;
    unsigned char  _linkConfidenceScore;
    unsigned char  _linkIPPreference;
    unsigned char  _linkPreferDecision;
    unsigned char  _linkPreferSuggestion;
    unsigned char  _linkProbingCapabilityVersion;
    VCLinkProbingHandler * _linkProbingHandler;
    struct { 
        double lastReceivedPacketTime; 
        double lastReceivedPacketOnPrimaryTime; 
        double lastReportTime; 
        double maxPrimaryNoPacketInterval; 
        double noPacketInterval; 
        bool isConnectionPaused; 
        int type; 
    }  _localConnectionStats;
    int  _localRATTypeOverride;
    int  _localWRMAlertFromDefaults;
    int  _localWRMLinkTypeFromDefaults;
    bool  _lowNetworkModeEnabled;
    unsigned long long  _mediaCellularRxBytes;
    unsigned long long  _mediaCellularTxBytes;
    NSMutableDictionary * _mediaDegradedHistories;
    NSMutableDictionary * _mediaDegradedHistoryIndices;
    double  _mediaDegradedThreshold;
    unsigned long long  _mediaExcessiveCellularRxBytes;
    unsigned long long  _mediaExcessiveCellularTxBytes;
    int  _mediaHealthStatisticsHandlerIndex;
    unsigned long long  _mediaWifiRxBytes;
    unsigned long long  _mediaWifiTxBytes;
    struct tagVCNetworkConditionMonitor { } * _networkConditionMonitor;
    double  _noRemoteDuplicationThresholdFast;
    double  _noRemotePacketInterval;
    NSObject<OS_dispatch_queue> * _nwConnectionMonitorQueue;
    struct tagVCNWConnectionMonitor { } * _nwMonitor;
    NSString * _nwMonitorInterfaceName;
    _Atomic unsigned long long  _onTheWireTotalBytesReceivedSinceLastCheck;
    _Atomic unsigned long long  _onTheWireTotalBytesSentSinceLastCheck;
    bool  _optIntoExistingSubscribedStreams;
    struct tagVCOverlaySource { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; long long x2; unsigned int x3; unsigned char x4; int x5; int x6; struct tagVCOverlaySourceInfo {} *x7; struct tagVCOverlaySourceInfo {} *x8; struct tagVCOverlaySourceInfo {} *x9; } * _overlaySource;
    long long  _overlayToken;
    bool  _preferRelayOverP2PEnabled;
    unsigned char  _preferRelayOverP2PReason;
    unsigned char  _preferredLocalInterfaceForDuplication;
    unsigned char  _preferredRemoteInterfaceForDuplication;
    bool  _previousNoRemoteInProgress;
    <VCConnectionProtocol> * _primaryConnection;
    unsigned int  _realRATType;
    int  _relayServerProvider;
    struct { 
        double lastReceivedPacketTime; 
        double lastReceivedPacketOnPrimaryTime; 
        double lastReportTime; 
        double maxPrimaryNoPacketInterval; 
        double noPacketInterval; 
        bool isConnectionPaused; 
        int type; 
    }  _remoteConnectionStats;
    unsigned char  _remoteLinkProbingCapabilityVersion;
    double  _remoteNoRemotePacketInterval;
    bool  _remotePreWarmStateEnabled;
    bool  _reportLinkPreferSuggestion;
    struct opaqueRTCReporting { } * _reportingAgent;
    NSObject<OS_dispatch_queue> * _reportingQueue;
    bool  _resetMediaHealthStats;
    struct { 
        int applicationType; 
        int linkTypeSuggestion; 
        unsigned long long linkTypeChangeReasonCode; 
        BOOL linkTypeChangeReasonString[128]; 
        unsigned long long linkBandwidthMin; 
        unsigned long long linkBandwidthMax; 
    }  _savedWRMNotification;
    <VCConnectionProtocol> * _secondaryConnection;
    _Atomic unsigned int  _sendFailureCountSinceLastCheck;
    _Atomic unsigned int  _sendSuccessCountSinceLastCheck;
    int  _serverBasedConnectionStatisticsHandlerIndex;
    int  _shouldForceRelayLinksWhenScreenEnabled;
    unsigned long long  _signalingExcessiveCellularRxBytes;
    unsigned long long  _signalingExcessiveCellularTxBytes;
    bool  _startConnectionHealthMonitoring;
    struct _opaque_pthread_rwlock_t { 
        long long __sig; 
        BOOL __opaque[192]; 
    }  _stateRWlock;
    AVCStatisticsCollector * _statisticsCollector;
    VCStatsRecorder * _statsRecorder;
    bool  _supportDuplication;
    bool  _useIDSLinkSuggestionFeatureFlag;
    bool  _useMediaDrivenDuplication;
    bool  _useMediaDrivenDuplicationFeatureFlag;
    struct tagVCConnectionManagerRealtimeInstanceVTable { 
        int (*copyConnection)(); 
        int (*updateConnectionForDuplication)(); 
        int (*synchronizeParticipantGenerationCounter)(); 
        int (*isSourceOnCellularIPv6)(); 
        int (*copyPrimaryConnection)(); 
        int (*setPrimaryConnection)(); 
        int (*updatePacketAndByteCount)(); 
        int (*addLinkProbingTelemetry)(); 
    }  _vTable;
    VCWifiAssistManager * _vcWifiAssist;
    void * _wrmCallbacksContext;
    VCWRMHandler * _wrmHandler;
    int  _wrmPendingBitrateCapDelta;
    int (* _wrmRequestNotificationCallback;
    int (* _wrmStatusUpdateCallback;
}

@property (readonly) unsigned long long budgetConsumingCellularRxBytes;
@property (readonly) unsigned long long budgetConsumingCellularTxBytes;
@property unsigned int callID;
@property bool cellPrimaryInterfaceChangeEnabled;
@property (readonly) int connectionCount;
@property (nonatomic, retain) <VCConnectionProtocol> *connectionForDuplication;
@property (nonatomic, readonly) VCConnectionHealthMonitor *connectionHealthMonitor;
@property (readonly, copy) NSString *debugDescription;
@property <VCConnectionManagerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property bool duplicateImportantPktsEnabled;
@property bool duplicationEnhancementEnabled;
@property (readonly) bool enableMotionBasedDuplication;
@property (readonly) bool enableNetworkConditionMonitoring;
@property bool fastMediaDuplicationEnabled;
@property (readonly) unsigned long long hash;
@property (setter=setiRATDuplicationEnabled:, nonatomic) bool iRATDuplicationEnabled;
@property bool isAudioOnly;
@property (nonatomic) bool isDuplicationAllowed;
@property (readonly) bool isLocalCellularInterfaceUsed;
@property (nonatomic) bool isOneToOneModeEnabled;
@property (nonatomic) bool isOneToOneScreenEnabled;
@property (readonly) bool isPreWarmStateEnabled;
@property (nonatomic) bool isRemoteMediaQualityDegraded;
@property (nonatomic) bool isRemoteNetworkQualityDegraded;
@property (nonatomic) bool isUplinkRetransmissionSupported;
@property (nonatomic, retain) <VCConnectionProtocol> *lastPrimaryConnectionInUse;
@property (readonly) unsigned char linkProbingCapabilityVersion;
@property bool lowNetworkModeEnabled;
@property (readonly) unsigned long long mediaCellularRxBytes;
@property (readonly) unsigned long long mediaCellularTxBytes;
@property (readonly) unsigned long long mediaExcessiveCellularRxBytes;
@property (readonly) unsigned long long mediaExcessiveCellularTxBytes;
@property (readonly) unsigned long long mediaWifiRxBytes;
@property (readonly) unsigned long long mediaWifiTxBytes;
@property double noRemoteDuplicationThresholdFast;
@property (readonly) double noRemotePacketInterval;
@property (readonly) _Atomic unsigned long long onTheWireTotalBytesReceivedSinceLastCheck;
@property (readonly) _Atomic unsigned long long onTheWireTotalBytesSentSinceLastCheck;
@property bool optIntoExistingSubscribedStreams;
@property long long overlayToken;
@property (setter=setPreferRelayOverP2PEnabled:, nonatomic) bool preferRelayOverP2PEnabled;
@property unsigned char preferredLocalInterfaceForDuplication;
@property unsigned char preferredRemoteInterfaceForDuplication;
@property (readonly) double primaryConnHealthAllowedDelay;
@property unsigned int realRATType;
@property int relayServerProvider;
@property (nonatomic) unsigned char remoteLinkProbingCapabilityVersion;
@property (readonly) double remoteNoRemotePacketInterval;
@property (nonatomic) bool remotePreWarmStateEnabled;
@property (nonatomic, retain) <VCConnectionProtocol> *secondaryConnection;
@property (readonly) unsigned int sendFailureCountSinceLastCheck;
@property (readonly) unsigned int sendSuccessCountSinceLastCheck;
@property (readonly) unsigned long long signalingExcessiveCellularRxBytes;
@property (readonly) unsigned long long signalingExcessiveCellularTxBytes;
@property (nonatomic) bool startConnectionHealthMonitoring;
@property (nonatomic, retain) AVCStatisticsCollector *statisticsCollector;
@property (nonatomic, readonly) VCStatsRecorder *statsRecorder;
@property (readonly) Class superclass;
@property bool supportDuplication;
@property (nonatomic) bool useMediaDrivenDuplication;

- (id)activeConnectionRegistry;
- (int)addConnection:(id)arg1;
- (void)addMediaHealthStatsHistoryEntryForParticipantID:(id)arg1;
- (void)aggregateStallTimeDuration:(struct { double x1; bool x2; double x3; double x4; }*)arg1 idsParticipantID:(id)arg2;
- (void)applyLinkFlags:(unsigned short)arg1 isCellular:(bool)arg2;
- (void)applyLinkRecommendation;
- (void)applyRemoteLinkFlags:(unsigned short)arg1 isCellular:(bool)arg2;
- (unsigned long long)budgetConsumingCellularRxBytes;
- (unsigned long long)budgetConsumingCellularTxBytes;
- (unsigned int)callID;
- (bool)cellPrimaryInterfaceChangeEnabled;
- (void)checkAndUpdatePrimaryConnection;
- (void)checkForCachedWRMNotification;
- (void)checkMediaQualityDegradedForParticipantID:(id)arg1;
- (void)checkpointPrimaryConnection:(id)arg1;
- (void)configureNWConnectionMonitor:(id)arg1;
- (int)connectionCount;
- (id)connectionForDuplication;
- (void)connectionHealthDidUpdate:(int)arg1 isLocalConnection:(bool)arg2;
- (id)connectionHealthMonitor;
- (void)createOverlaySource;
- (void)dealloc;
- (id)delegate;
- (void)deregisterPeriodicTask;
- (void)destroyNWMonitor;
- (void)destroyNWMonitorInternal;
- (void)didChangeWifiAssistAvailable:(bool)arg1 reason:(unsigned char)arg2;
- (void)didUpdateMotionActivity:(id)arg1;
- (void)disableRemotePreferredInterfaceInference:(bool)arg1;
- (bool)duplicateImportantPktsEnabled;
- (bool)duplicationEnhancementEnabled;
- (void)duplicationStateUpdateWithEvent:(struct { unsigned char x1; bool x2; bool x3; bool x4; bool x5; bool x6; bool x7; bool x8; int x9; bool x10; bool x11; })arg1;
- (bool)enableMotionBasedDuplication;
- (bool)enableNetworkConditionMonitoring;
- (bool)fastMediaDuplicationEnabled;
- (void)flushLinkProbingStatusWithOptions:(id)arg1;
- (unsigned int)getByteCountWithIndex:(unsigned char)arg1 isOutgoing:(bool)arg2;
- (int)getCellularMTUForActiveConnectionWithQuality:(int)arg1;
- (int)getCellularTechForActiveConnectionWithQuality:(int)arg1 forLocalInterface:(bool)arg2;
- (struct { bool x1; bool x2; bool x3; bool x4; bool x5; }*)getConnectionSelectionPolicy;
- (int)getConnectionSelectionVersionFromFrameworkVersion:(id)arg1;
- (int)getConnectionTypeForActiveConnectionWithQuality:(int)arg1 forLocalInterface:(bool)arg2;
- (unsigned int)getPacketCountWithIndex:(unsigned char)arg1 isOutgoing:(bool)arg2;
- (void)getSentBytes:(long long*)arg1 receivedBytes:(long long*)arg2;
- (bool)iRATDuplicationEnabled;
- (id)init;
- (void)invalidateNetworkConditionMonitor;
- (bool)isAudioOnly;
- (bool)isBetterConnection:(id)arg1 asPrimary:(bool)arg2;
- (bool)isBetterPrimaryConnectionAvailable;
- (bool)isConnectedOnIPv6ForActiveConnectionWithQuality:(int)arg1;
- (bool)isConnectedOnRelayForActiveConnectionWithQuality:(int)arg1;
- (bool)isDuplicationAllowed;
- (bool)isDuplicationAllowedForParticipantID:(id)arg1 bucketsToSum:(int)arg2 threshold:(double)arg3;
- (bool)isDuplicationEnabled;
- (bool)isLocalCellularInterfaceUsed;
- (bool)isOneToOneModeEnabled;
- (bool)isOneToOneScreenEnabled;
- (bool)isOptimalConnection:(id)arg1 asPrimary:(bool)arg2 interfaceMask:(int)arg3;
- (bool)isPreWarmStateEnabled;
- (bool)isRemoteMediaQualityDegraded;
- (bool)isRemoteNetworkQualityDegraded;
- (bool)isUplinkRetransmissionSupported;
- (id)lastPrimaryConnectionInUse;
- (unsigned char)linkProbingCapabilityVersion;
- (bool)lowNetworkModeEnabled;
- (unsigned long long)mediaCellularRxBytes;
- (unsigned long long)mediaCellularTxBytes;
- (unsigned long long)mediaExcessiveCellularRxBytes;
- (unsigned long long)mediaExcessiveCellularTxBytes;
- (unsigned long long)mediaWifiRxBytes;
- (unsigned long long)mediaWifiTxBytes;
- (double)noRemoteDuplicationThresholdFast;
- (double)noRemotePacketInterval;
- (unsigned long long)onTheWireTotalBytesReceivedSinceLastCheck;
- (unsigned long long)onTheWireTotalBytesSentSinceLastCheck;
- (bool)optIntoExistingSubscribedStreams;
- (long long)overlayToken;
- (void)periodicTask:(void*)arg1;
- (bool)preferRelayOverP2PEnabled;
- (unsigned char)preferredLocalInterfaceForDuplication;
- (unsigned char)preferredRemoteInterfaceForDuplication;
- (double)primaryConnHealthAllowedDelay;
- (void)primaryConnectionChanged:(id)arg1 oldPrimaryConnection:(id)arg2;
- (int)processConnectionHealthFromControlInfo:(void*)arg1;
- (int)processRemoteWRMSuggestion:(int)arg1 isRemoteDuplicating:(bool)arg2;
- (void)processWRMCoexMetrics:(id)arg1;
- (void)promoteSecondaryConnectionToPrimary:(id)arg1;
- (void)queryProbingResultsWithOptions:(id)arg1;
- (unsigned int)realRATType;
- (void)registerPeriodicTask;
- (void)registerStatisticsHandlers;
- (int)relayServerProvider;
- (unsigned char)remoteLinkProbingCapabilityVersion;
- (double)remoteNoRemotePacketInterval;
- (bool)remotePreWarmStateEnabled;
- (int)removeConnection:(id)arg1;
- (void)removeMediaHealthStatsHistoryEntryForParticipantID:(id)arg1;
- (void)renewNWMonitor;
- (void)reportActiveConnectionOneToOne:(id)arg1 isAudioOnly:(bool)arg2;
- (void)reportConnection:(id)arg1 isInitialConnection:(bool)arg2;
- (void)reportConnectionUpdateWithRespCode:(unsigned short)arg1;
- (void)reportConnectionUpdateWithResponseCode:(unsigned short)arg1 delay:(double)arg2;
- (void)reportCurrentPrimaryConnection;
- (void)reportFirstActiveConnectionOneToOne:(id)arg1 remoteOSVersion:(id)arg2 redState:(bool)arg3 isAudioOnly:(bool)arg4;
- (void)reportLinkProbingStatsWithDuplicationJustStarted:(bool)arg1;
- (void)reportLinkSuggestion;
- (void)reportNoPacketUpdateUsingCurrentTime:(double)arg1 lastReceivedPacketTime:(double)arg2;
- (void)reselectPrimaryConnection;
- (void)resetConnectionStatTimers;
- (void)resetMediaHealthStats;
- (id)secondaryConnection;
- (unsigned int)sendFailureCountSinceLastCheck;
- (unsigned int)sendSuccessCountSinceLastCheck;
- (void)setCallID:(unsigned int)arg1;
- (void)setCellPrimaryInterfaceChangeEnabled:(bool)arg1;
- (void)setConnectionForDuplication:(id)arg1;
- (int)setConnectionHealthOnControlInfo:(void*)arg1;
- (void)setConnectionPause:(bool)arg1 isLocalConnection:(bool)arg2;
- (void)setConnectionSelectionVersionWithLocalFrameworkVersion:(id)arg1 remoteFrameworkVersion:(id)arg2;
- (void)setDefaultLinkProbingCapabilityVersionForDeviceRole:(int)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDuplicateImportantPktsEnabled:(bool)arg1;
- (void)setDuplicationCallback:(int (*)arg1 withContext:(void*)arg2;
- (void)setDuplicationDownlinkCellBitrateCap:(unsigned int)arg1 currentBitrate:(unsigned int)arg2;
- (void)setDuplicationEnhancementEnabled:(bool)arg1;
- (void)setFastMediaDuplicationEnabled:(bool)arg1;
- (void)setIsAudioOnly:(bool)arg1;
- (void)setIsDuplicationAllowed:(bool)arg1;
- (void)setIsOneToOneModeEnabled:(bool)arg1;
- (void)setIsOneToOneScreenEnabled:(bool)arg1;
- (void)setIsRemoteMediaQualityDegraded:(bool)arg1;
- (void)setIsRemoteNetworkQualityDegraded:(bool)arg1;
- (void)setIsUplinkRetransmissionSupported:(bool)arg1;
- (void)setLastPrimaryConnectionInUse:(id)arg1;
- (void)setLowNetworkModeEnabled:(bool)arg1;
- (void)setNoRemoteDuplicationThresholdFast:(double)arg1;
- (void)setOptIntoExistingSubscribedStreams:(bool)arg1;
- (void)setOverlayToken:(long long)arg1;
- (void)setPreferRelayOverP2P:(bool)arg1 reason:(unsigned char)arg2;
- (void)setPreferRelayOverP2PEnabled:(bool)arg1;
- (void)setPreferredLocalInterfaceForDuplication:(unsigned char)arg1;
- (void)setPreferredRemoteInterfaceForDuplication:(unsigned char)arg1;
- (void)setRealRATType:(unsigned int)arg1;
- (void)setRelayServerProvider:(int)arg1;
- (void)setRemoteLinkProbingCapabilityVersion:(unsigned char)arg1;
- (void)setRemotePreWarmStateEnabled:(bool)arg1;
- (void)setReportingAgent:(struct opaqueRTCReporting { }*)arg1;
- (void)setSecondaryConnection:(id)arg1;
- (void)setStartConnectionHealthMonitoring:(bool)arg1;
- (void)setStatisticsCollector:(id)arg1;
- (void)setSupportDuplication:(bool)arg1;
- (void)setUpVTable;
- (void)setUseMediaDrivenDuplication:(bool)arg1;
- (void)setVCNWConnectionMonitorStatisticsHandler;
- (int)setWRMUpdateCallback:(int (*)arg1 requestNotificationCallback:(int (*)arg2 withContext:(void*)arg3 completionHandler:(id /* block */)arg4;
- (void)setiRATDuplicationEnabled:(bool)arg1;
- (void)setupConnectionHealthMonitor;
- (void)setupConnectionHealthMonitorMultiway;
- (void)setupNetworkConditionMonitor;
- (bool)shouldAcceptDataFromSourceDestinationInfo:(struct tagVCSourceDestinationInfo { int x1; union { struct { struct tagIPPORT { int x_1_3_1; BOOL x_1_3_2[16]; union { unsigned int x_3_4_1; unsigned char x_3_4_2[16]; } x_1_3_3; unsigned short x_1_3_4; } x_1_2_1; struct tagIPPORT { int x_2_3_1; BOOL x_2_3_2[16]; union { unsigned int x_3_4_1; unsigned char x_3_4_2[16]; } x_2_3_3; unsigned short x_2_3_4; } x_1_2_2; struct { bool x_3_3_1; unsigned short x_3_3_2; } x_1_2_3; } x_2_1_1; struct { int x_2_2_1; int x_2_2_2; struct tagIPPORT { int x_3_3_1; BOOL x_3_3_2[16]; union { unsigned int x_3_4_1; unsigned char x_3_4_2[16]; } x_3_3_3; unsigned short x_3_3_4; } x_2_2_3; int x_2_2_4; } x_2_1_2; struct { unsigned int x_3_2_1; struct { BOOL x_2_3_1; unsigned short x_2_3_2; unsigned char x_2_3_3; unsigned short x_2_3_4; unsigned char x_2_3_5; } x_3_2_2; bool x_3_2_3; } x_2_1_3; struct { id x_4_2_1; } x_2_1_4; } x2; unsigned int x3; struct tagVCSourceDestinationInfo {} *x4; void *x5; }*)arg1;
- (bool)shouldDropCurrentPrimaryConnectionWithConnectionStats:(struct { double x1; double x2; double x3; double x4; double x5; bool x6; int x7; }*)arg1;
- (unsigned long long)signalingExcessiveCellularRxBytes;
- (unsigned long long)signalingExcessiveCellularTxBytes;
- (void)start;
- (void)startActiveProbingWithOptions:(id)arg1;
- (void)startBrokenNetworkDetection;
- (bool)startConnectionHealthMonitoring;
- (id)statisticsCollector;
- (id)statsRecorder;
- (void)stop;
- (void)stopActiveProbingWithOptions:(id)arg1;
- (void)stopBrokenNetworkDetection;
- (bool)supportDuplication;
- (void)unregisterStatisticsHandlers;
- (void)updateAllBitrateCapsForConnection:(id)arg1;
- (void)updateCellularMTU:(int)arg1;
- (void)updateCellularTech:(int)arg1 forLocalInterface:(bool)arg2;
- (void)updateConnectionHealthWithVCStatisticsMessage:(struct tagVCStatisticsMessage { int x1; int x2; double x3; bool x4; bool x5; bool x6; bool x7; union { struct { unsigned int x_1_2_1; unsigned int x_1_2_2; unsigned int x_1_2_3; unsigned int x_1_2_4; unsigned int x_1_2_5; unsigned int x_1_2_6; double x_1_2_7; double x_1_2_8; double x_1_2_9; double x_1_2_10; double x_1_2_11; BOOL x_1_2_12[64]; int x_1_2_13; } x_8_1_1; struct { unsigned int x_2_2_1; unsigned int x_2_2_2; unsigned int x_2_2_3; unsigned int x_2_2_4; unsigned int x_2_2_5; unsigned int x_2_2_6; unsigned int x_2_2_7; unsigned int x_2_2_8; unsigned int x_2_2_9; unsigned int x_2_2_10; unsigned int x_2_2_11; unsigned int x_2_2_12; double x_2_2_13; double x_2_2_14; unsigned int x_2_2_15; unsigned int x_2_2_16; double x_2_2_17; unsigned int x_2_2_18; bool x_2_2_19; struct { int x_20_3_1; unsigned int x_20_3_2; unsigned int x_20_3_3; unsigned int x_20_3_4; double x_20_3_5; double x_20_3_6; double x_20_3_7; unsigned int x_20_3_8; unsigned int x_20_3_9; } x_2_2_20; struct { unsigned short x_21_3_1; bool x_21_3_2; bool x_21_3_3; unsigned int x_21_3_4; } x_2_2_21; struct tagVCStatisticsECNStats { unsigned short x_22_3_1; unsigned short x_22_3_2; } x_2_2_22; struct tagVCStatisticsECNStats { unsigned short x_23_3_1; unsigned short x_23_3_2; } x_2_2_23; bool x_2_2_24; } x_8_1_2; } x8; })arg1;
- (void)updateConnectionSelectionPolicyWithPreferE2E:(bool)arg1;
- (void)updateConnectionStatsWithIndicatorNoPacket:(struct { double x1; double x2; double x3; double x4; double x5; bool x6; int x7; }*)arg1;
- (void)updateConnectionStatsWithIndicatorNone:(struct { double x1; double x2; double x3; double x4; double x5; bool x6; int x7; }*)arg1;
- (void)updateConnectionStatsWithIndicatorOnlyPrimaryNoPacket:(struct { double x1; double x2; double x3; double x4; double x5; bool x6; int x7; }*)arg1;
- (void)updateConnectionStatsWithIndicatorPrimaryImproved:(struct { double x1; double x2; double x3; double x4; double x5; bool x6; int x7; }*)arg1;
- (void)updateDuplicationStateWithEventType:(unsigned char)arg1;
- (void)updateLinkPreferSuggestion:(id)arg1;
- (void)updateMediaDegradedHistoryWithCurrentAudioErasure:(double)arg1 idsParticipantID:(id)arg2;
- (void)updateMediaDegradedHistoryWithCurrentVideoStallDuration:(double)arg1 idsParticipantID:(id)arg2;
- (void)updateMediaDegradedHistoryWithValue:(double)arg1 idsParticipantID:(id)arg2;
- (void)updateMediaHealthStats:(struct { double x1; bool x2; double x3; double x4; }*)arg1 idsParticipantID:(id)arg2;
- (void)updateNegotiatedSettingsOnetoOne:(id)arg1;
- (void)updateOneToOneBitrateCapsForConnection:(id)arg1;
- (void)updateOverlaySource:(bool)arg1 isRemoteOnCellular:(bool)arg2 isRelay:(bool)arg3;
- (void)updateProbingResults:(id)arg1;
- (void)updateSessionStats:(unsigned short)arg1;
- (void)updateStatResponseResult:(id)arg1;
- (void)updateWRMDuplicationForHandover;
- (void)updateWithRemoteMediaHealthDuplication:(bool)arg1;
- (void)useConnectionAsPrimary:(id)arg1;
- (bool)useMediaDrivenDuplication;

@end
