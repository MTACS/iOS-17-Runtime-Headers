
@interface AVCRateController : NSObject <VCRateSharingClient> {
    unsigned int  _actualBitrate;
    struct tagVCRateControlAlgorithmConfig { 
        unsigned int serverBagProfileNumber; 
        unsigned int *tierBitrates; 
        int initialTierIndex; 
        int maxTierIndex; 
        int minTierIndex; 
        int softMaxTierIndex[2]; 
        int lowestNonEmergencyTierIndex; 
        int lowestNonEmergencyTierIndexWiFi; 
        int lowestEffectiveBWETierIndex; 
        int lowestTierIndexReactToNoServerActivity; 
        int rampUpTierNumber; 
        int rampDownTierNumber; 
        int rampUpAdditionalTierAtInitial; 
        int rampDownAdditionalTierAtInitial; 
        int rampDownBurstyLossThreshold; 
        int lowestTierForBurstyLossRampDown; 
        int lowestTierToDisableRateLimited; 
        double rampDownNOWRDThreshold; 
        double rampDownNOWRDAccThreshold; 
        double rampDownAggressiveNOWRDThreshold; 
        double rampDownAggressiveNOWRDAccThreshold; 
        double rampDownConstantOWRDDuration; 
        double rampDownOvershootDuration; 
        double rampDownOvershootNextTierRatio; 
        double rampUpFrozenDuration; 
        double rampUpSettleDuration; 
        double rampUpOWRDThreshold; 
        double rampUpNOWRDThreshold; 
        double rampUpNOWRDAccThreshold; 
        double rampUpOverBandwidthCalmDuration; 
        double rampUpBlockedTimeout; 
        int rampUpOverBandwidthTierNumber; 
        int rampDownLossEventThreshold; 
        int rampDownLossEventBadTrendThreshold; 
        double rampDownLossEventThresholdRatio; 
        double rampDownLossEventWindowDuration; 
        double rampDownLossEventNOWRDThreshold; 
        double rampUpFrozenPLRThreshold; 
        double rampUpRateLimitedRatio; 
        double unstableRateLimitedDuration; 
        double congestionWaitDuration; 
        double owrdWindowDuration; 
        double owrdShortWindowDuration; 
        double minimumNOWRDTimeDifference; 
        double owrdInitialRampUpReadyDuration; 
        unsigned int owrdHistorySize; 
        unsigned int owrdMininumHistorySize; 
        unsigned int fastRampDownBitrateRange; 
        unsigned int fastRampUpBitrateRange; 
        unsigned int consecutiveRampDownThresholdForCongestion; 
        bool receivedBandwidthEstimationEnabled; 
        bool basebandAdaptationEnabled; 
        bool rateLimitedEnabled; 
        bool randomRampUpFrozenDurationEnabled; 
        bool oscillationAvoidanceEnabled; 
        bool fastRampUpEnabled; 
        bool blockRampUpInSaturatedNetworkEnabled; 
        bool blockRampUpInBluetoothCoexEnabled; 
        bool wifiEmergencyTiersEnabled; 
        bool burstyTrafficEnabled; 
        bool lowLatencyWANEnabled; 
        bool rampDownToActualSendBitrate; 
        int rampDownToActualSendBitrateMinTier; 
        bool rampDownSuppressionEnabled; 
        double rampDownSuppressionMinRTT; 
        double rampDownSuppressionFactor; 
        int fastRampUpHighestTier; 
        double fastRampUpRTTRatio; 
        int fastRampUpTierGap; 
        double fastRampUpNetworkStableDuration; 
        double networkSaturatedRTTToMinRTTRatio; 
        double networkSaturatedOWRDToMinRTTRatio; 
        int networkSaturatedPersistFeedbackNumber; 
        double networkSaturatedRTTDecreasingThreshold; 
        int oscillationAvoidanceTierChangeThreshold; 
        int oscillationAvoidanceTiersHitThreshold; 
        double oscillationAvoidanceDurationRatio; 
        double oscillationAvoidanceDurationRatioAggressive; 
        int stabilizationScheme; 
        double rampDownNBDCDThreshold; 
        double rampDownAggressiveNBDCDThreshold; 
        double rampDownNormalizedQueuingDelayThreshold; 
        double rampDownMediumQueuingDelayThreshold; 
        double rampDownHighQueuingDelayThreshold; 
        double rampDownEmergencyTierCoolDownTime; 
        double rampDownWiFiEmergencyTierCoolDownTime; 
        double rampUpNBDCDThreshold; 
        double rampUpQueuingDelayThreshold; 
        double rampUpNBDCDCoolDownTime; 
        double rampUpAudioFractionCoolDownTime; 
        double basebandRATSwitchCoolDownTime; 
        double basebandAdaptationCrossTrafficRatio; 
        double rampUpNetworkUnstableCoolDownTime; 
        double autoResumeDurationAfterPaused; 
        double pauseOffChannelHighRatio; 
        double unpauseOffChannelLowRatio; 
        bool oscillationDetectionEnabled; 
        double oscillationCoolDownTime; 
        int oscillationDeviationTierNumber; 
        int oscillationDeviationCountThreshold; 
        bool preventBasebandRampDownCloseToKeyFrame; 
        int basebandRampDownSlowDownFactor; 
        double networkUnstableRTTThreshold; 
        double networkUnstablePLRThreshold; 
        double packetLossRateThresholdInitial; 
        double packetLossRateThresholdMin; 
        double packetLossRateThresholdMax; 
        double packetLossRateThresholdTarget; 
        unsigned int rampUpUplinkBLERThreshold; 
        unsigned int rampDownUplinkBLERThreshold; 
        double rampUpUplinkBLERDuration; 
        double rampDownUplinkBLERDuration; 
        double rampDownECNCERatioLow; 
        double rampDownECNCERatioMedium; 
        double rampDownECNCERatioHigh; 
        unsigned int rampDownECNBitrateHigh; 
        unsigned int rampDownECNBitrateMedium; 
        unsigned int rampDownECNBitrateLow; 
        double ceRatioDurationToRTTFactor; 
        double ceRatioDurationMin; 
        double ceRatioDurationMax; 
        int smartBrakeStrategy; 
    }  _algorithmConfigCache;
    AVCBasebandCongestionDetector * _basebandCongestionDetector;
    int  _btNotificationHandlerIndex;
    unsigned int  _burstPacketLoss;
    struct AVCRateControlConfig { 
        unsigned int mode; 
        unsigned int localRadioAccessTechnology; 
        unsigned int remoteRadioAccessTechnology; 
        unsigned int maxBitrate; 
        unsigned int minBitrate; 
        unsigned int initialBitrate; 
        bool isTrafficBursty; 
        struct tagVCRateControlAlgorithmConfig {} *algorithmConfig; 
        unsigned int featureFlags; 
    }  _configuration;
    unsigned int  _countPeriodicTaskUpdate;
    bool  _didCacheAlgorithmConfig;
    bool  _didConfigured;
    NSString * _dumpID;
    unsigned int  _estimatedBandwidthCap;
    unsigned int  _expectedBitrate;
    AVCRateControlFeedbackController * _feedbackController;
    int  _forcedMaxBitrate;
    int  _forcedMaxBitrateFromTestMonitor;
    int  _forcedTargetBitrate;
    int  _forcedTargetBitrateFromTestMonitor;
    unsigned int  _initialBitrate;
    bool  _initialRampUpDeltaReported;
    double  _initialRampUpStartTime;
    bool  _isBWEDumpFileEnabled;
    bool  _isBasebandEnabled;
    bool  _isCongestedForReport;
    bool  _isECNEnabled;
    bool  _isForSimulation;
    bool  _isNetworkCongested;
    bool  _isNetworkForcingECN;
    bool  _isNoServerStatsIdleActivityReported;
    bool  _isPeriodicLoggingEnabled;
    bool  _isRateControlDumpFileEnabled;
    bool  _isRegisteredForRateSharing;
    bool  _isUplink;
    double  _lastDefaultsReadTime;
    unsigned int  _lastRecordedTargetBitrate;
    unsigned int  _lastReportFlushedAudioPacketCount;
    unsigned int  _lastReportFlushedVideoPacketCount;
    unsigned int  _lastReportedBandwidthEstimation;
    unsigned int  _lastReportedRateControlAlgorithmStatsIndex;
    double  _lastTimeServerStatsActivityRecorded;
    double  _lastTimeSustainedHighDownlinkPacketLossReported;
    double  _lastTimeSustainedHighUplinkPacketLossReported;
    double  _lastTimeTargetBitrateOvershootRecorded;
    double  _lastTimeUnexpectedLowTargetBitrateRecorded;
    double  _lastTimeUnexpectedRampUpFrozenRecorded;
    void * _logBWEDump;
    void * _logBasebandDump;
    void * _logDump;
    void * _logFeedbackDump;
    void * _logNWDump;
    unsigned int  _maxTargetBitrate;
    VCRateControlMediaController * _mediaController;
    unsigned int  _minTargetBitrate;
    struct _opaque_pthread_mutex_t { 
        long long __sig; 
        BOOL __opaque[56]; 
    }  _mutex;
    NSObject<OS_nw_activity> * _noServerStatsDownlinkNwActivity;
    NSObject<OS_nw_activity> * _noServerStatsUplinkNwActivity;
    VCNWConnectionCongestionDetector * _nwConnectionCongestionDetector;
    unsigned int  _nwNotificationProcessed;
    unsigned int  _owrd;
    double  _packetLossPercentage;
    double  _packetLossPercentageAudio;
    double  _packetLossPercentageVideo;
    NSObject<OS_nw_activity> * _parentNWActivity;
    bool  _paused;
    unsigned int  _rateChangeCounter;
    <VCRateControlAlgorithm> * _rateControlAlgorithm;
    <AVCRateControllerDelegate> * _rateControllerDelegate;
    struct OpaqueFigCFWeakReference { } * _rateControllerDelegateWeak;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _registrationLock;
    unsigned int  _remoteCEReceiveCount;
    unsigned int  _remoteECT1ReceiveCount;
    unsigned int  _remotePacketReceivedAudio;
    unsigned int  _remotePacketReceivedVideo;
    id  _reportingAgent;
    struct opaqueRTCReporting { } * _reportingAgentStrong;
    struct OpaqueFigCFWeakReference { } * _reportingAgentWeak;
    int  _reportingModuleID;
    NSObject<OS_dispatch_queue> * _reportingQueue;
    unsigned int  _roundTripTimeMilliseconds;
    VCRateControlServerBag * _serverBag;
    VCRateSharingGroup * _sharingGroup;
    AVCStatisticsCollector * _statisticsCollector;
    unsigned int  _sumOverShootSendBitrate;
    unsigned int  _sumOverUtilizedBandwidth;
    double  _sumPLR;
    double  _sumPLRVideo;
    unsigned int  _sumUnderShootSendBitrate;
    unsigned int  _sumUnderUtilizedBandwidth;
    unsigned int  _sumWorstRecentBurstLoss;
    unsigned int  _sumWorstRecentRTTInMillisecond;
    unsigned int  _targetBitrate;
    unsigned int  _targetBitrateCap;
    unsigned int  _totalBytesReceived;
    unsigned int  _totalBytesSent;
    unsigned int  _totalMBLRampDownCount;
    unsigned int  _totalPacketsReceived;
    unsigned int  _totalPacketsSent;
    unsigned int  _totalSuddenBandwidthDropCount;
    bool  _useBTNotificationMonitor;
    bool  _useExternalThread;
    bool  _useNWConnectionNotification;
    struct OpaqueFigCFWeakReferenceHolder { } * _weakSelf;
    unsigned int  _wifiNonAVCTxMediaBitrate;
    unsigned int  _wifiTxMediaBitrate;
}

@property (nonatomic, readonly) struct tagVCRateControlAlgorithmConfig { unsigned int x1; unsigned int *x2; int x3; int x4; int x5; int x6[2]; int x7; int x8; int x9; int x10; int x11; int x12; int x13; int x14; int x15; int x16; int x17; double x18; double x19; double x20; double x21; double x22; double x23; double x24; double x25; double x26; double x27; double x28; double x29; double x30; double x31; int x32; int x33; int x34; double x35; double x36; double x37; double x38; double x39; double x40; double x41; double x42; double x43; double x44; double x45; unsigned int x46; unsigned int x47; unsigned int x48; unsigned int x49; unsigned int x50; bool x51; bool x52; bool x53; bool x54; bool x55; bool x56; bool x57; bool x58; bool x59; bool x60; bool x61; bool x62; int x63; bool x64; double x65; double x66; int x67; double x68; int x69; double x70; double x71; double x72; int x73; double x74; int x75; int x76; double x77; double x78; int x79; double x80; double x81; double x82; double x83; double x84; double x85; double x86; double x87; double x88; double x89; double x90; double x91; } algorithmConfig;
@property (nonatomic, retain) AVCBasebandCongestionDetector *basebandCongestionDetector;
@property (nonatomic, readonly) struct AVCRateControlConfig { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; bool x7; struct tagVCRateControlAlgorithmConfig {} *x8; unsigned int x9; } configuration;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) unsigned int estimatedBandwidthCap;
@property (nonatomic) unsigned int expectedBitrate;
@property (nonatomic, retain) AVCRateControlFeedbackController *feedbackController;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isStarted;
@property (nonatomic, readonly) unsigned int maxTargetBitrate;
@property (nonatomic, retain) VCRateControlMediaController *mediaController;
@property (nonatomic, readonly) unsigned int minTargetBitrate;
@property (nonatomic, retain) VCNWConnectionCongestionDetector *nwConnectionCongestionDetector;
@property (nonatomic, readonly) unsigned int nwNotificationProcessed;
@property (getter=isPaused, nonatomic) bool paused;
@property (nonatomic, readonly) struct tagAVCRateControlExperimentConfig { int x1; int x2; unsigned int x3; } rateControlExperimentConfig;
@property (readonly) id reportingAgent;
@property (nonatomic, retain) AVCStatisticsCollector *statisticsCollector;
@property (readonly) Class superclass;
@property (nonatomic, readonly) unsigned int targetBitrate;
@property (nonatomic) unsigned int targetBitrateCap;

- (void)accumulateStatsForPeriodicTaskUpdate;
- (struct tagVCRateControlAlgorithmConfig { unsigned int x1; unsigned int *x2; int x3; int x4; int x5; int x6[2]; int x7; int x8; int x9; int x10; int x11; int x12; int x13; int x14; int x15; int x16; int x17; double x18; double x19; double x20; double x21; double x22; double x23; double x24; double x25; double x26; double x27; double x28; double x29; double x30; double x31; int x32; int x33; int x34; double x35; double x36; double x37; double x38; double x39; double x40; double x41; double x42; double x43; double x44; double x45; unsigned int x46; unsigned int x47; unsigned int x48; unsigned int x49; unsigned int x50; bool x51; bool x52; bool x53; bool x54; bool x55; bool x56; bool x57; bool x58; bool x59; bool x60; bool x61; bool x62; int x63; bool x64; double x65; double x66; int x67; double x68; int x69; double x70; double x71; double x72; int x73; double x74; int x75; int x76; double x77; double x78; int x79; double x80; double x81; double x82; double x83; double x84; double x85; double x86; double x87; double x88; double x89; double x90; double x91; })algorithmConfig;
- (id)basebandCongestionDetector;
- (void)cleanupNwActivity;
- (void)completeAndReleaseNwActivity:(id)arg1 withReason:(int)arg2;
- (struct AVCRateControlConfig { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; bool x7; struct tagVCRateControlAlgorithmConfig {} *x8; unsigned int x9; })configuration;
- (void)configure:(struct AVCRateControlConfig { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; bool x7; struct tagVCRateControlAlgorithmConfig {} *x8; unsigned int x9; })arg1;
- (void)configureWithOperatingMode:(int)arg1 isLocalCellular:(bool)arg2 localCellTech:(int)arg3 isRemoteCellular:(bool)arg4 remoteCellTech:(int)arg5 bitrateCapKbps:(unsigned int)arg6 isTrafficBursty:(bool)arg7 featureFlags:(unsigned int)arg8;
- (void)createBasebandLogDumpFile;
- (void)createNWConnectionLogDumpFile;
- (void)dealloc;
- (void)deregisterForRateSharing;
- (void)deregisterPeriodicTask;
- (unsigned int)estimatedBandwidthCap;
- (unsigned int)expectedBitrate;
- (id)feedbackController;
- (void)getRealTimeStats:(struct __CFDictionary { }*)arg1;
- (void)getRealTimeStatsForLowLatency:(struct __CFDictionary { }*)arg1;
- (void)getRealTimeStatsForServerBasedRxOnly:(struct __CFDictionary { }*)arg1;
- (void)getRealTimeStatsForServerBasedTxOnly:(struct __CFDictionary { }*)arg1;
- (id)initWithDelegate:(id)arg1 dumpID:(id)arg2 isUplink:(bool)arg3 reportingAgent:(id)arg4;
- (id)initWithDelegate:(id)arg1 params:(const struct tagVCRateControlParams { id x1; bool x2; bool x3; id x4; id x5; bool x6; id x7; bool x8; id x9; }*)arg2;
- (bool)isPaused;
- (bool)isStarted;
- (unsigned int)loadDefaultVCRCFeatureFlags:(unsigned int)arg1;
- (unsigned int)maxTargetBitrate;
- (id)mediaController;
- (unsigned int)minTargetBitrate;
- (id)nwConnectionCongestionDetector;
- (unsigned int)nwNotificationProcessed;
- (void)periodicTask:(void*)arg1;
- (void)printRateControllerHealthPrint;
- (unsigned int)radioAccessTechnologyFromAVConferenceCellTech:(int)arg1 isCellular:(bool)arg2;
- (struct tagAVCRateControlExperimentConfig { int x1; int x2; unsigned int x3; })rateControlExperimentConfig;
- (unsigned int)rateControlModeFromAVConferenceOperatingMode:(int)arg1;
- (void)registerForRateSharing:(unsigned int)arg1;
- (void)registerPeriodicTask;
- (void)releaseAllLogDumpFiles;
- (void)releaseLogDumpFile:(void**)arg1;
- (id)reportingAgent;
- (void)resetStatsForPeriodicTaskReport;
- (void)setBasebandCongestionDetector:(id)arg1;
- (void)setBtNotificationMonitor;
- (void)setEstimatedBandwidthCap:(unsigned int)arg1;
- (void)setExpectedBitrate:(unsigned int)arg1;
- (void)setFeedbackController:(id)arg1;
- (void)setMediaController:(id)arg1;
- (void)setNwConnectionCongestionDetector:(id)arg1;
- (void)setPaused:(bool)arg1;
- (void)setShareProfile:(id)arg1;
- (void)setStatisticsCollector:(id)arg1;
- (void)setTargetBitrateCap:(unsigned int)arg1;
- (bool)start;
- (id)statisticsCollector;
- (bool)stop;
- (unsigned int)targetBitrate;
- (unsigned int)targetBitrateCap;

@end
