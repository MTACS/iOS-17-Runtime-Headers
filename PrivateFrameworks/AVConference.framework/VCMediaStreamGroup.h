
@interface VCMediaStreamGroup : VCObject <VCMediaCaptureController, VCMediaStreamDelegate, VCMediaStreamNotification, VCSecurityEventHandler> {
    bool  _areStreamsSuspended;
    id  _captureController;
    double  _creationTime;
    id  _delegate;
    NSObject<OS_dispatch_queue> * _delegateQueue;
    bool  _encryptionInfoReceived;
    bool  _firstMediaFrameGapDetected;
    VCMediaKeyIndex * _firstMediaKeyIndex;
    double  _firstMediaKeyIndexTime;
    double  _firstMediaPacketTime;
    NSDictionary * _groupEntries;
    bool  _hasRepairedStreams;
    unsigned long long  _idsParticipantID;
    struct tagVCJBTargetEstimatorSynchronizer { } * _jbTargetEstimatorSynchronizer;
    VCMediaRecorder * _mediaRecorder;
    NSArray * _mediaStreamInfoArray;
    NSArray * _mediaStreams;
    unsigned int  _mediaSubtype;
    unsigned int  _mediaType;
    VCNetworkFeedbackController * _networkFeedbackController;
    NSString * _participantUUID;
    TimingCollection * _perfTimers;
    unsigned int  _rtpTimestampRate;
    VCSecurityKeyManager * _securityKeyManager;
    NSString * _sessionUUID;
    unsigned int  _state;
    NSObject<OS_dispatch_queue> * _stateQueue;
    AVCStatisticsCollector * _statisticsCollector;
    unsigned int  _streamGroupID;
    NSDictionary * _streamIDToMediaStreamMap;
    long long  _streamToken;
    unsigned int  _syncGroupID;
}

@property (nonatomic) <VCMediaCaptureController> *captureController;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool encryptionInfoReceived;
@property (nonatomic, readonly) bool hasRepairedStreams;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) VCMediaRecorder *mediaRecorder;
@property (nonatomic, readonly) NSArray *mediaStreamInfoArray;
@property (nonatomic) unsigned int mediaSubtype;
@property (nonatomic) unsigned int mediaType;
@property (nonatomic, readonly) unsigned int state;
@property (nonatomic, retain) AVCStatisticsCollector *statisticsCollector;
@property (nonatomic, readonly) unsigned int streamGroupID;
@property (nonatomic, readonly) NSDictionary *streamIDToMediaStreamMap;
@property (nonatomic, readonly) long long streamToken;
@property (readonly) Class superclass;
@property (nonatomic) unsigned int syncGroupID;

- (bool)addSyncDestination:(id)arg1;
- (void)callDelegateWithBlock:(id /* block */)arg1;
- (id)captureController;
- (void)collectAndLogChannelMetrics:(struct { unsigned int x1; unsigned int x2[5]; unsigned int x3; double x4; struct CGSize { double x_5_1_1; double x_5_1_2; } x5; double x6; unsigned int x7; double x8; unsigned int x9; unsigned int x10; }*)arg1;
- (bool)configureStreams;
- (bool)containsStreamWithIDSStreamID:(unsigned short)arg1;
- (bool)containsStreamWithSSRC:(unsigned int)arg1;
- (void)dealloc;
- (id)description;
- (void)didEncryptionKeyRollTimeout;
- (void)didPause:(bool)arg1;
- (void)didReceiveRTCPPackets:(struct _RTCPPacketList { union tagNTP { unsigned long long x_1_1_1; struct { unsigned int x_2_2_1; unsigned int x_2_2_2; } x_1_1_2; } x1; unsigned char x2; struct tagRTCPPACKET {} *x3[10]; struct OpaqueCMBlockBuffer {} *x4; char *x5; unsigned long long x6; unsigned int x7; unsigned char x8[1472]; unsigned short x9[12]; unsigned char x10; bool x11; unsigned long long x12; struct { struct _RTCPPacketList {} *x_13_1_1; } x13; }*)arg1;
- (void)didStart;
- (void)didStop;
- (bool)encryptionInfoReceived;
- (void)finalizePerfTimersForFirstMediaFrameWithTime:(double)arg1;
- (void)handleActiveConnectionChange:(id)arg1;
- (bool)handleEncryptionInfoChange:(id)arg1;
- (bool)hasRepairedStreams;
- (id)initWithConfig:(id)arg1;
- (id)mediaRecorder;
- (void)mediaStream:(id)arg1 didReceiveNewMediaKeyIndex:(id)arg2;
- (void)mediaStream:(id)arg1 didReceiveRTPGapForMediaKeyIndex:(id)arg2;
- (id)mediaStreamInfoArray;
- (unsigned int)mediaSubtype;
- (unsigned int)mediaType;
- (id)pause;
- (id)pauseMediaStreams;
- (void)registerMediaStreamNotificationDelegate;
- (bool)removeSyncDestination:(id)arg1;
- (void)resetDecryptionTimeout;
- (id)resume;
- (id)resumeMediaStreams;
- (void)setCaptureController:(id)arg1;
- (void)setEncryptionInfoReceived:(bool)arg1;
- (void)setFirstMKIToFirstMediaReceivedTimerForMKIReceivedTime;
- (void)setMediaRecorder:(id)arg1;
- (void)setMediaSubtype:(unsigned int)arg1;
- (void)setMediaType:(unsigned int)arg1;
- (void)setParticipantJoinedToFirstMKITimer;
- (id)setPauseOnMediaStreams:(bool)arg1;
- (void)setStatisticsCollector:(id)arg1;
- (void)setSyncGroupID:(unsigned int)arg1;
- (void)setTotalMediaStallSaveIntervalWithTime:(double)arg1;
- (void)setupPerfTimersWithMediaKeyIndex:(id)arg1 perfTimerIndexToStart:(int)arg2;
- (bool)setupStreamsWithConfig:(id)arg1;
- (bool)shouldSetPause:(bool)arg1 onStream:(id)arg2;
- (id)start;
- (id)startCapture;
- (id)startMediaStreams;
- (unsigned int)state;
- (id)statisticsCollector;
- (id)stop;
- (id)stopCapture;
- (id)stopMediaStreams;
- (unsigned int)streamGroupID;
- (id)streamIDToMediaStreamMap;
- (long long)streamToken;
- (unsigned int)syncGroupID;
- (void)unregisterMediaStreamNotificationDelegate;
- (void)vcMediaStreamServerDidDie:(id)arg1;
- (id)willStart;
- (void)willStop;

@end
