
@interface VCAudioManager : VCObject <VCAudioIOControllerControl, VCAudioSessionDelegate> {
    NSMutableArray * _allClients;
    VCAudioSession * _audioSession;
    NSMutableDictionary * _audioSessionSinkMuted;
    VCAudioSessionMediaProperties * _currentAudioSessionMediaProperties;
    VCAudioUnitProperties * _currentAudioUnitProperties;
    VCAudioUnitSpatialContext * _currentSpatialContext;
    NSObject<OS_dispatch_queue> * _dispatchQueue;
    bool  _followSystemInput;
    bool  _followSystemOutput;
    struct tagHANDLE { int x1; } * _hAUIO;
    AVAudioDevice * _inputDevice;
    struct _opaque_pthread_mutex_t { 
        long long __sig; 
        BOOL __opaque[56]; 
    }  _inputDeviceMutex;
    VCAudioRelay * _interruptThread;
    VCAudioRelayIO * _interruptThreadClient;
    int  _interruptThreadState;
    struct _opaque_pthread_mutex_t { 
        long long __sig; 
        BOOL __opaque[56]; 
    }  _interruptingMutex;
    bool  _isGKVoiceChat;
    bool  _isInDaemon;
    bool  _isInputMeteringEnabled;
    bool  _isInterrupting;
    bool  _isMediaPlaybackOnExternalDevice;
    bool  _isMicrophoneMuted;
    bool  _isMixingVoiceWithMediaEnabled;
    bool  _isOutputMeteringEnabled;
    bool  _isSpeakerPhoneEnabled;
    bool  _isSuspended;
    id /* block */  _mutedTalkerNotificationHandler;
    AVAudioDevice * _outputDevice;
    struct _opaque_pthread_mutex_t { 
        long long __sig; 
        BOOL __opaque[56]; 
    }  _outputDeviceMutex;
    int  _playbackMode;
    struct _VCAudioIOControllerIOState { 
        bool timestampInitialized; 
        double lastHostTime; 
        unsigned int lastInputTimestamp; 
        unsigned int lastInputSampleCount; 
        double lastBlockSize; 
        unsigned long long lastTimestamp; 
        struct _VCSingleLinkedList { 
            struct _VCSingleLinkedListEntry {} *head; 
            bool initialized; 
            int (*compare)(); 
            unsigned long long countEntries; 
        } clientIOList; 
        struct opaqueCMSimpleQueue {} *eventQueue; 
        struct opaqueVCAudioLimiter {} *audioLimiter; 
        struct opaqueVCAudioBufferList {} *secondarySampleBuffer; 
        struct opaqueVCAudioBufferList {} *interruptMixDownSampleBuffer; 
        unsigned int audioSessionId; 
        unsigned long long channelStateBitmap; 
        unsigned long long prevUsedChannelStateBitmap; 
        BOOL logPrefix[40]; 
        bool isMuted; 
        bool isVoiceActivityEnabled; 
        bool isMediaPriorityEnabled; 
        double forcedMediaPriorityLastUpdateTime; 
        bool isForcedMediaPriorityEnabled; 
        unsigned char forcedMediaPriority; 
        struct opaqueVCVoiceDetector {} *voiceDetector; 
    }  _sinkData;
    struct _VCAudioIOControllerIOState { 
        bool timestampInitialized; 
        double lastHostTime; 
        unsigned int lastInputTimestamp; 
        unsigned int lastInputSampleCount; 
        double lastBlockSize; 
        unsigned long long lastTimestamp; 
        struct _VCSingleLinkedList { 
            struct _VCSingleLinkedListEntry {} *head; 
            bool initialized; 
            int (*compare)(); 
            unsigned long long countEntries; 
        } clientIOList; 
        struct opaqueCMSimpleQueue {} *eventQueue; 
        struct opaqueVCAudioLimiter {} *audioLimiter; 
        struct opaqueVCAudioBufferList {} *secondarySampleBuffer; 
        struct opaqueVCAudioBufferList {} *interruptMixDownSampleBuffer; 
        unsigned int audioSessionId; 
        unsigned long long channelStateBitmap; 
        unsigned long long prevUsedChannelStateBitmap; 
        BOOL logPrefix[40]; 
        bool isMuted; 
        bool isVoiceActivityEnabled; 
        bool isMediaPriorityEnabled; 
        double forcedMediaPriorityLastUpdateTime; 
        bool isForcedMediaPriorityEnabled; 
        unsigned char forcedMediaPriority; 
        struct opaqueVCVoiceDetector {} *voiceDetector; 
    }  _sourceData;
    bool  _spatialAudioDisabled;
    NSMutableDictionary * _spatialContexts;
    ATSpatialStreamDescriptions * _spatialStreamDescriptions;
    NSMutableArray * _startingIOClients;
    unsigned int  _state;
    NSArray * _stateStrings;
    NSDictionary * _vpOperatingModeToAudioSessionMediaFormatMapping;
}

@property (nonatomic, retain) VCAudioSessionMediaProperties *currentAudioSessionMediaProperties;
@property (nonatomic, retain) VCAudioUnitProperties *currentAudioUnitProperties;
@property (retain) AVAudioDevice *currentInputDevice;
@property (retain) AVAudioDevice *currentOutputDevice;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isGKVoiceChat;
@property (nonatomic) bool isInDaemon;
@property (getter=isMicrophoneMuted, nonatomic) bool microphoneMuted;
@property (getter=isMixingVoiceWithMediaEnabled, nonatomic) bool mixingVoiceWithMediaEnabled;
@property (nonatomic, readonly) NSDictionary *reportingStats;
@property (nonatomic, readonly) struct _VCAudioIOControllerIOState { bool x1; double x2; unsigned int x3; unsigned int x4; double x5; unsigned long long x6; struct _VCSingleLinkedList { struct _VCSingleLinkedListEntry {} *x_7_1_1; bool x_7_1_2; int (*x_7_1_3)(); unsigned long long x_7_1_4; } x7; struct opaqueCMSimpleQueue {} *x8; struct opaqueVCAudioLimiter {} *x9; struct opaqueVCAudioBufferList {} *x10; struct opaqueVCAudioBufferList {} *x11; unsigned int x12; unsigned long long x13; unsigned long long x14; BOOL x15[40]; bool x16; bool x17; bool x18; double x19; bool x20; unsigned char x21; struct opaqueVCVoiceDetector {} *x22; }*sinkIO;
@property (nonatomic, readonly) struct _VCAudioIOControllerIOState { bool x1; double x2; unsigned int x3; unsigned int x4; double x5; unsigned long long x6; struct _VCSingleLinkedList { struct _VCSingleLinkedListEntry {} *x_7_1_1; bool x_7_1_2; int (*x_7_1_3)(); unsigned long long x_7_1_4; } x7; struct opaqueCMSimpleQueue {} *x8; struct opaqueVCAudioLimiter {} *x9; struct opaqueVCAudioBufferList {} *x10; struct opaqueVCAudioBufferList {} *x11; unsigned int x12; unsigned long long x13; unsigned long long x14; BOOL x15[40]; bool x16; bool x17; bool x18; double x19; bool x20; unsigned char x21; struct opaqueVCVoiceDetector {} *x22; }*sourceIO;
@property (getter=isSpeakerPhoneEnabled, nonatomic) bool speakerPhoneEnabled;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsVoiceActivityDetection;
@property (nonatomic, retain) NSDictionary *vpOperatingModeToAudioSessionMediaFormatMapping;

+ (unsigned char)audioIOType:(id)arg1 shouldEnableAudioInput:(bool)arg2;
+ (id)audioSessionForMode:(int)arg1;
+ (struct AudioStreamBasicDescription { double x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; })sessionFormatForSampleRate:(double)arg1;
+ (id)sharedSystemAudioInputInstance;
+ (id)sharedSystemAudioOutputInstance;
+ (id)sharedVoiceChatInstance;
+ (void)terminateProcess:(id)arg1 terminateSource:(id)arg2 agent:(struct opaqueRTCReporting { }*)arg3;

- (void)_cleanupDeadClients;
- (void)activateSpatialContext:(id)arg1 shouldApplySpatialMetadata:(bool)arg2;
- (void)activateStartingClient:(id)arg1 applyControllerFormat:(bool)arg2;
- (bool)addClient:(id)arg1;
- (void)applyAudioSessionMute;
- (void)applyControllerFormatToClients:(id)arg1;
- (void)applySessionContextToAudioUnitProperties:(id)arg1 preferredClient:(id)arg2;
- (void)applySpatialMetadata:(struct OpaqueCMBlockBuffer { }*)arg1;
- (bool)audioCallbacksRunning;
- (id)autorelease;
- (void)cleanupInterruptThread;
- (void)completeStartForAllStartingClients;
- (bool)computeAllowAudioRecordingWithPreferredClient:(id)arg1;
- (void)computeFormatDescription:(struct AudioStreamBasicDescription { double x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; }*)arg1 withPreferredClient:(id)arg2;
- (void)computeHardwarePreferences;
- (unsigned int)computeSamplePerFrameWithPreferredClient:(id)arg1 sampleRate:(unsigned int)arg2;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)currentAudioSessionMediaProperties;
- (id)currentAudioUnitProperties;
- (id)currentInputDevice;
- (id)currentOutputDevice;
- (void)dealloc;
- (id)description;
- (void)didSessionEnd;
- (void)didSessionPause;
- (void)didSessionResume;
- (void)didSessionStop;
- (void)didUpdateBasebandCodec:(const struct _VCRemoteCodecInfo { unsigned int x1; double x2; }*)arg1;
- (void)enterStateStarted;
- (void)flushEventQueue:(struct opaqueCMSimpleQueue { }*)arg1;
- (bool)getAudioSessionMediaProperties:(id)arg1 forVPOperatingMode:(unsigned int)arg2;
- (void)getPreferredFormat:(struct AudioStreamBasicDescription { double x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; }*)arg1 blockSize:(double*)arg2 vpOperatingMode:(unsigned int*)arg3 forOperatingMode:(int)arg4 deviceRole:(int)arg5 suggestedFormat:(struct AudioStreamBasicDescription { double x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; }*)arg6;
- (id)initWithAudioSessionMode:(int)arg1;
- (bool)isGKVoiceChat;
- (bool)isInDaemon;
- (bool)isMicrophoneMuted;
- (bool)isMixingVoiceWithMediaEnabled;
- (bool)isSpeakerPhoneEnabled;
- (id)newAudioSessionMediaPropertiesForSystemAudioWithPreferredClient:(id)arg1 audioUnitProperties:(id)arg2 isInput:(bool)arg3;
- (id)newAudioSessionMediaPropertiesWithPreferredClient:(id)arg1 audioUnitProperties:(id)arg2;
- (id)newAudioUnitPropertiesForSystemAudioWithPreferredClient:(id)arg1 isInput:(bool)arg2;
- (id)newAudioUnitPropertiesWithPreferredClient:(id)arg1;
- (id)preferredClientWithNewClient:(id)arg1;
- (int)prewarmingClientOperatingMode;
- (void)refreshInputMetering;
- (void)refreshOutputMetering;
- (void)refreshRemoteCodecType:(unsigned int)arg1 sampleRate:(double)arg2;
- (int)registerAudioSessionId:(unsigned int)arg1 maxChannelCountMic:(unsigned int)arg2 maxChannelCountSpeaker:(unsigned int)arg3 spatialMetadata:(struct OpaqueCMBlockBuffer { }*)arg4;
- (void)registerClientIO:(struct _VCAudioIOControllerClientIO { void *x1; int (*x2)(); id x3; unsigned int x4; unsigned int x5; unsigned int x6; struct opaqueVCAudioBufferList {} *x7; bool x8; bool x9; }*)arg1 controllerIO:(struct _VCAudioIOControllerIOState { bool x1; double x2; unsigned int x3; unsigned int x4; double x5; unsigned long long x6; struct _VCSingleLinkedList { struct _VCSingleLinkedListEntry {} *x_7_1_1; bool x_7_1_2; int (*x_7_1_3)(); unsigned long long x_7_1_4; } x7; struct opaqueCMSimpleQueue {} *x8; struct opaqueVCAudioLimiter {} *x9; struct opaqueVCAudioBufferList {} *x10; struct opaqueVCAudioBufferList {} *x11; unsigned int x12; unsigned long long x13; unsigned long long x14; BOOL x15[40]; bool x16; bool x17; bool x18; double x19; bool x20; unsigned char x21; struct opaqueVCVoiceDetector {} *x22; }*)arg2;
- (int)registerForMutedTalkerNotification:(id /* block */)arg1;
- (int)registerForMutedTalkerNotificationWithAUIO:(struct tagHANDLE { int x1; }*)arg1;
- (oneway void)release;
- (void)removeAllClientsForIO:(struct _VCAudioIOControllerIOState { bool x1; double x2; unsigned int x3; unsigned int x4; double x5; unsigned long long x6; struct _VCSingleLinkedList { struct _VCSingleLinkedListEntry {} *x_7_1_1; bool x_7_1_2; int (*x_7_1_3)(); unsigned long long x_7_1_4; } x7; struct opaqueCMSimpleQueue {} *x8; struct opaqueVCAudioLimiter {} *x9; struct opaqueVCAudioBufferList {} *x10; struct opaqueVCAudioBufferList {} *x11; unsigned int x12; unsigned long long x13; unsigned long long x14; BOOL x15[40]; bool x16; bool x17; bool x18; double x19; bool x20; unsigned char x21; struct opaqueVCVoiceDetector {} *x22; }*)arg1;
- (bool)removeClient:(id)arg1;
- (bool)resetAUIOWithProperties:(id)arg1;
- (bool)resetAudioLimiterWithProperties:(id)arg1;
- (bool)resetAudioSessionWithProperties:(id)arg1 interruptSuccessful:(bool*)arg2;
- (void)resetAudioTimestamps;
- (void)resetChannelMask;
- (id)retain;
- (unsigned long long)retainCount;
- (void)serverDidDie;
- (void)setCurrentAudioSessionMediaProperties:(id)arg1;
- (void)setCurrentAudioUnitProperties:(id)arg1;
- (void)setCurrentInputDevice:(id)arg1;
- (void)setCurrentInputDeviceInternal:(id)arg1;
- (void)setCurrentOutputDevice:(id)arg1;
- (void)setCurrentOutputDeviceInternal:(id)arg1;
- (void)setInputMetering;
- (void)setIsGKVoiceChat:(bool)arg1;
- (void)setIsInDaemon:(bool)arg1;
- (void)setMediaPlaybackOnExternalDevice:(bool)arg1;
- (void)setMicrophoneMuted:(bool)arg1;
- (void)setMixingVoiceWithMediaEnabled:(bool)arg1;
- (void)setMute:(bool)arg1 forClient:(id)arg2;
- (void)setOutputMetering;
- (void)setSpatialMetadata:(struct OpaqueCMBlockBuffer { }*)arg1 audioSessionId:(unsigned int)arg2 completionHandler:(id /* block */)arg3;
- (void)setSpeakerPhoneEnabled:(bool)arg1;
- (int)setVolume:(float)arg1 withRampTime:(float)arg2;
- (void)setVpOperatingModeToAudioSessionMediaFormatMapping:(id)arg1;
- (void)setupDynamicDuckingVolumeHandlerForAUIO:(struct tagHANDLE { int x1; }*)arg1;
- (void)setupIODevicesForAUIO:(struct tagHANDLE { int x1; }*)arg1;
- (bool)setupInterruptThread;
- (bool)setupVAD;
- (bool)shouldResetAudioSessionWithProperties:(id)arg1;
- (bool)shouldResetAudioUnitWithProperties:(id)arg1;
- (struct _VCAudioIOControllerIOState { bool x1; double x2; unsigned int x3; unsigned int x4; double x5; unsigned long long x6; struct _VCSingleLinkedList { struct _VCSingleLinkedListEntry {} *x_7_1_1; bool x_7_1_2; int (*x_7_1_3)(); unsigned long long x_7_1_4; } x7; struct opaqueCMSimpleQueue {} *x8; struct opaqueVCAudioLimiter {} *x9; struct opaqueVCAudioBufferList {} *x10; struct opaqueVCAudioBufferList {} *x11; unsigned int x12; unsigned long long x13; unsigned long long x14; BOOL x15[40]; bool x16; bool x17; bool x18; double x19; bool x20; unsigned char x21; struct opaqueVCVoiceDetector {} *x22; }*)sinkIO;
- (struct _VCAudioIOControllerIOState { bool x1; double x2; unsigned int x3; unsigned int x4; double x5; unsigned long long x6; struct _VCSingleLinkedList { struct _VCSingleLinkedListEntry {} *x_7_1_1; bool x_7_1_2; int (*x_7_1_3)(); unsigned long long x_7_1_4; } x7; struct opaqueCMSimpleQueue {} *x8; struct opaqueVCAudioLimiter {} *x9; struct opaqueVCAudioBufferList {} *x10; struct opaqueVCAudioBufferList {} *x11; unsigned int x12; unsigned long long x13; unsigned long long x14; BOOL x15[40]; bool x16; bool x17; bool x18; double x19; bool x20; unsigned char x21; struct opaqueVCVoiceDetector {} *x22; }*)sourceIO;
- (bool)startAUIOWithProperties:(id)arg1;
- (bool)startAudioSessionWithProperties:(id)arg1;
- (void)startClient:(id)arg1;
- (void)startInterruptThread;
- (void)startVADWithAudioUnitProperties:(id)arg1;
- (bool)stateIdleWithAudioUnitProperties:(id)arg1 sessionProperties:(id)arg2 client:(id)arg3 newState:(unsigned int*)arg4;
- (bool)stateInterruptedShouldGoToRunning:(id)arg1;
- (bool)stateInterruptedShouldGoToStarted:(id)arg1;
- (bool)stateInterruptedWithAudioUnitProperties:(id)arg1 sessionProperties:(id)arg2 client:(id)arg3 newState:(unsigned int*)arg4;
- (bool)stateRunningShouldTransitionToInterrupted:(id)arg1;
- (bool)stateRunningShouldTransitionToStarted:(id)arg1;
- (void)stateRunningToSessionStarted;
- (bool)stateRunningWithAudioUnitProperties:(id)arg1 sessionProperties:(id)arg2 client:(id)arg3 newState:(unsigned int*)arg4;
- (bool)stateSessionStartedWithAudioUnitProperties:(id)arg1 sessionProperties:(id)arg2 client:(id)arg3 newState:(unsigned int*)arg4;
- (void)stateTransitionInterruptedToRunning;
- (void)stateTransitionInterruptedToStarted;
- (void)stateTransitionRunningToInterrupted;
- (void)stopAUIO;
- (void)stopAudioSession;
- (void)stopClient:(id)arg1;
- (void)stopInterruptThread;
- (bool)supportsVoiceActivityDetection;
- (void)unregisterAudioSessionId:(unsigned int)arg1;
- (void)unregisterClientIO:(struct _VCAudioIOControllerClientIO { void *x1; int (*x2)(); id x3; unsigned int x4; unsigned int x5; unsigned int x6; struct opaqueVCAudioBufferList {} *x7; bool x8; bool x9; }*)arg1 controllerIO:(struct _VCAudioIOControllerIOState { bool x1; double x2; unsigned int x3; unsigned int x4; double x5; unsigned long long x6; struct _VCSingleLinkedList { struct _VCSingleLinkedListEntry {} *x_7_1_1; bool x_7_1_2; int (*x_7_1_3)(); unsigned long long x_7_1_4; } x7; struct opaqueCMSimpleQueue {} *x8; struct opaqueVCAudioLimiter {} *x9; struct opaqueVCAudioBufferList {} *x10; struct opaqueVCAudioBufferList {} *x11; unsigned int x12; unsigned long long x13; unsigned long long x14; BOOL x15[40]; bool x16; bool x17; bool x18; double x19; bool x20; unsigned char x21; struct opaqueVCVoiceDetector {} *x22; }*)arg2;
- (int)unregisterForMutedTalkerNotificationWithAUIO:(struct tagHANDLE { int x1; }*)arg1;
- (int)unregisterFromMutedTalkerNotification;
- (void)updateClient:(id)arg1 settings:(const struct tagVCAudioIOControllerClientSettings { unsigned char x1; bool x2; bool x3; bool x4; }*)arg2;
- (void)updateCurrentInputDevice:(id)arg1;
- (void)updateCurrentOutputDevice:(id)arg1;
- (void)updateDirectionWithClient:(id)arg1 settings:(const struct tagVCAudioIOControllerClientSettings { unsigned char x1; bool x2; bool x3; bool x4; }*)arg2 isClientRegistered:(bool)arg3;
- (void)updateSpatialAudioWithClient:(id)arg1 settings:(const struct tagVCAudioIOControllerClientSettings { unsigned char x1; bool x2; bool x3; bool x4; }*)arg2 isClientRegistered:(bool)arg3;
- (bool)updateStateWithAudioIOClient:(id)arg1;
- (void)updateVoiceProcessingWithClient:(id)arg1 settings:(const struct tagVCAudioIOControllerClientSettings { unsigned char x1; bool x2; bool x3; bool x4; }*)arg2 isClientRegistered:(bool)arg3;
- (id)vpOperatingModeToAudioSessionMediaFormatMapping;
- (unsigned int)vpOperationModeForConferenceOperatingMode:(int)arg1 deviceRole:(int)arg2;
- (void)waitIdleForClient:(id)arg1;

@end
