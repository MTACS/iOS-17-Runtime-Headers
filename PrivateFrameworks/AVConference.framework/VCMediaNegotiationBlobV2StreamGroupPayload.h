
@interface VCMediaNegotiationBlobV2StreamGroupPayload : PBCodable <NSCopying> {
    unsigned int  _cipherSuite;
    unsigned int  _codecType;
    unsigned int  _encoderUsage;
    struct { 
        unsigned int cipherSuite : 1; 
        unsigned int codecType : 1; 
        unsigned int encoderUsage : 1; 
        unsigned int mediaFlags : 1; 
        unsigned int pTime : 1; 
        unsigned int profileLevelId : 1; 
        unsigned int rtcpFlags : 1; 
        unsigned int rtpPayload : 1; 
        unsigned int rtpSampleRate : 1; 
    }  _has;
    unsigned int  _mediaFlags;
    unsigned int  _pTime;
    NSData * _packedPayload;
    unsigned int  _profileLevelId;
    unsigned int  _rtcpFlags;
    unsigned int  _rtpPayload;
    unsigned int  _rtpSampleRate;
}

@property (nonatomic) unsigned int cipherSuite;
@property (nonatomic) unsigned int codecType;
@property (nonatomic) unsigned int encoderUsage;
@property (nonatomic) bool hasCipherSuite;
@property (nonatomic) bool hasCodecType;
@property (nonatomic) bool hasEncoderUsage;
@property (nonatomic) bool hasMediaFlags;
@property (nonatomic) bool hasPTime;
@property (nonatomic, readonly) bool hasPackedPayload;
@property (nonatomic) bool hasProfileLevelId;
@property (nonatomic) bool hasRtcpFlags;
@property (nonatomic) bool hasRtpPayload;
@property (nonatomic) bool hasRtpSampleRate;
@property (nonatomic) unsigned int mediaFlags;
@property (nonatomic) unsigned int pTime;
@property (nonatomic, retain) NSData *packedPayload;
@property (nonatomic) unsigned int profileLevelId;
@property (nonatomic) unsigned int rtcpFlags;
@property (nonatomic) unsigned int rtpPayload;
@property (nonatomic) unsigned int rtpSampleRate;

+ (unsigned int)cipherSuiteWithNegotiationCipherSuite:(unsigned int)arg1;
+ (long long)codecTypeWithNegotiationCodecType:(unsigned int)arg1;
+ (id)defaultDataCodecConfig;
+ (id)defaultFTXTCodecConfig;
+ (id)defaultMMJIConfig;
+ (id)defaultMoCapConfig;
+ (id)defaultPayloadConfigurationsForStreamGroupID:(unsigned int)arg1;
+ (unsigned int)defaultRTPSampleRateForStreamGroupID:(unsigned int)arg1;
+ (bool)isDefaultPayloadConfig:(id)arg1 index:(unsigned int)arg2 rtpSampleRate:(unsigned int)arg3 streamGroupID:(unsigned int)arg4;
+ (bool)isNegotiationCodecTypeAudio:(unsigned int)arg1;
+ (bool)isPTimePackable:(unsigned int)arg1;
+ (unsigned int)mediaFlagsWithPayloadConfig:(id)arg1;
+ (unsigned int)negotiationCipherSuiteWithCipherSuite:(unsigned int)arg1;
+ (unsigned int)negotiationCodecTypeWithCodecType:(long long)arg1;
+ (unsigned char)negotiationPackedPTimeWithPTime:(unsigned int)arg1;
+ (int)negotiationPackedRtpSampleRateWithRTPSampleRate:(unsigned int)arg1;
+ (unsigned int)pTimeWithNegotiationPackedPTime:(unsigned char)arg1;
+ (void)printWithLogFile:(void*)arg1 prefix:(id)arg2 payloadConfig:(id)arg3;
+ (id)rtcpFlagStringWithPayloadConfig:(id)arg1;
+ (unsigned int)rtcpFlagsWithPayloadConfig:(id)arg1;
+ (unsigned int)rtpSampleRateWithNegotiationPackedSampleRate:(int)arg1;

- (unsigned int)cipherSuite;
- (unsigned int)codecType;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (unsigned int)encoderUsage;
- (void)getStreamGroupPayload:(struct tagStreamGroupPayload { unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; union { struct { unsigned char x_1_2_1; unsigned char x_1_2_2; } x_6_1_1; struct { unsigned int x_2_2_1; unsigned char x_2_2_2; } x_6_1_2; } x6; }*)arg1;
- (bool)hasCipherSuite;
- (bool)hasCodecType;
- (bool)hasEncoderUsage;
- (bool)hasMediaFlags;
- (bool)hasPTime;
- (bool)hasPackedPayload;
- (bool)hasProfileLevelId;
- (bool)hasRtcpFlags;
- (bool)hasRtpPayload;
- (bool)hasRtpSampleRate;
- (unsigned long long)hash;
- (id)initWithPayloadConfig:(id)arg1 index:(unsigned int)arg2 rtpSampleRate:(unsigned int)arg3 streamGroupID:(unsigned int)arg4;
- (id)initWithPayloadConfig:(id)arg1 rtpSampleRate:(unsigned int)arg2;
- (bool)isEqual:(id)arg1;
- (unsigned int)mediaFlags;
- (void)mergeFrom:(id)arg1;
- (id)newCompactPayloadWithPayloadConfig:(id)arg1 rtpSampleRate:(unsigned int)arg2;
- (unsigned int)pTime;
- (id)packedPayload;
- (id)payloadConfigurationWithPayloadConfig:(id)arg1;
- (id)payloadConfigurationWithStreamGroupID:(unsigned int)arg1 index:(unsigned int)arg2;
- (unsigned int)profileLevelId;
- (bool)readFrom:(id)arg1;
- (unsigned int)rtcpFlags;
- (unsigned int)rtpPayload;
- (unsigned int)rtpSampleRate;
- (unsigned int)rtpSampleRateWithStreamGroupID:(unsigned int)arg1;
- (void)setCipherSuite:(unsigned int)arg1;
- (void)setCodecType:(unsigned int)arg1;
- (void)setEncoderUsage:(unsigned int)arg1;
- (void)setHasCipherSuite:(bool)arg1;
- (void)setHasCodecType:(bool)arg1;
- (void)setHasEncoderUsage:(bool)arg1;
- (void)setHasMediaFlags:(bool)arg1;
- (void)setHasPTime:(bool)arg1;
- (void)setHasProfileLevelId:(bool)arg1;
- (void)setHasRtcpFlags:(bool)arg1;
- (void)setHasRtpPayload:(bool)arg1;
- (void)setHasRtpSampleRate:(bool)arg1;
- (void)setMediaFlags:(unsigned int)arg1;
- (void)setNegotiationPackedPayloadWithStreamGroupPayload:(struct tagStreamGroupPayload { unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; union { struct { unsigned char x_1_2_1; unsigned char x_1_2_2; } x_6_1_1; struct { unsigned int x_2_2_1; unsigned char x_2_2_2; } x_6_1_2; } x6; }*)arg1;
- (void)setPTime:(unsigned int)arg1;
- (void)setPackedPayload:(id)arg1;
- (void)setProfileLevelId:(unsigned int)arg1;
- (void)setRtcpFlags:(unsigned int)arg1;
- (void)setRtpPayload:(unsigned int)arg1;
- (void)setRtpSampleRate:(unsigned int)arg1;
- (void)writeTo:(id)arg1;

@end
