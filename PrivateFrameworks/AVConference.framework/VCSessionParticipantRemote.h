
@interface VCSessionParticipantRemote : VCSessionParticipant <VCSessionDownlinkBandwidthAllocatorClient> {
    struct _VCSessionParticipantCapabilities { 
        bool isPeace; 
        unsigned int participantType; 
        int controlChannelVersion; 
        bool supportsGFTSwitchToOneToOne; 
        bool isDawnburstOrLater; 
    }  _capabilities;
    VCAudioCaptionsCoordinator * _captionsCoordinator;
    bool  _haveReportedPerfTimers;
    bool  _isMediaSuspended;
    bool  _isRedundancyRequested;
    bool  _isRemoteMediaStalled;
    bool  _isServerRTxEnabled;
    bool  _isVideoDegraded;
    bool  _isVideoExpected;
    bool  _isVideoJitterForPlayoutEnabled;
    NSMutableDictionary * _jbSynchronizerPerSyncGroupID;
    double  _lastVideoExpectationSwitch;
    struct tagVCAudioStreamGroupPriorityInfo { 
        bool isAudioActive; 
        unsigned int audioActiveProbabilityThreshold; 
        unsigned int audioInactiveProbabilityThreshold; 
        unsigned int audioActiveAccumulationThreshold; 
        unsigned int audioInactiveAccumulationThreshold; 
        unsigned int audioActiveCount; 
        unsigned int lastAudioPriority; 
        unsigned int refreshCounter; 
    }  _mediaPriorityInfo;
    VCSessionBandwidthAllocationTable * _mediaTable;
    struct __CFDictionary { } * _mediaTypeToSpatialAudioMetadataEntryMap;
    NSObject<OS_nw_activity> * _nwActivity;
    bool  _oneToOneVideoEnabled;
    bool  _outOfProcessCodecsEnabled;
    NSObject<OS_nw_activity> * _participantMediaStallNwActivity;
    NSObject<OS_nw_activity> * _participantPoorConnectionNwActivity;
    TimingCollection * _perfTimers;
    VCPositionalInfo * _positionalInfo;
    unsigned int  _prominenceIndex;
    bool  _receivedFirstFrame;
    bool  _remoteAudioEnabled;
    bool  _remoteAudioPaused;
    NSMutableDictionary * _remoteMediaStates;
    bool  _remoteScreenEnabled;
    bool  _remoteScreenEnabledStateChanged;
    NSObject<OS_dispatch_source> * _remoteStreamGroupStateUpdateTimer;
    bool  _remoteSystemAudioPaused;
    bool  _remoteVideoEnabled;
    bool  _remoteVideoPaused;
    VCSessionBandwidthAllocationTable * _repairMediaTable;
    bool  _screenControlEnabled;
    int  _thermalLevel;
    unsigned char  _videoQuality;
    unsigned int  _visibilityIndex;
}

@property (nonatomic, readonly) VCSessionParticipantMediaStreamInfo *cameraStreamInfo;
@property (nonatomic) struct _VCSessionParticipantCapabilities { bool x1; unsigned int x2; int x3; bool x4; bool x5; } capabilities;
@property (nonatomic) bool isServerRTxEnabled;
@property (nonatomic, readonly) bool isVideoExpected;
@property (readonly) bool isVisible;
@property (nonatomic, readonly) unsigned int lastDisplayedFrameRTPTimestamp;
@property (readonly) NSArray *mediaEntries;
@property (nonatomic, readonly) VCSessionParticipantMediaStreamInfo *micStreamInfo;
@property (nonatomic, readonly) NSNumber *optedInAudioStreamID;
@property (nonatomic, readonly) NSNumber *optedInVideoStreamID;
@property (nonatomic, readonly) NSDictionary *participantSpatialAudioSourceIDs;
@property (nonatomic, readonly) VCPositionalInfo *positionalInfo;
@property (nonatomic) unsigned int prominenceIndex;
@property (getter=isRemoteAudioEnabled, nonatomic) bool remoteAudioEnabled;
@property (getter=isRemoteAudioPaused, nonatomic) bool remoteAudioPaused;
@property (getter=isRemoteScreenEnabled, nonatomic) bool remoteScreenEnabled;
@property (getter=isRemoteVideoEnabled, nonatomic) bool remoteVideoEnabled;
@property (getter=isRemoteVideoPaused, nonatomic) bool remoteVideoPaused;
@property (getter=isScreenControlEnabled, nonatomic) bool screenControlEnabled;
@property (nonatomic, readonly) VCSessionParticipantMediaStreamInfo *screenStreamInfo;
@property (readonly) NSString *uuid;
@property (nonatomic) unsigned char videoQuality;
@property (nonatomic) unsigned int visibilityIndex;

+ (bool)isDeviceLargeScreen;
+ (unsigned int)maxAudioNetworkBitrateForLocalInterfaceOnWiFi:(bool)arg1 isLowLatencyAudio:(bool)arg2;
+ (unsigned int)maxBdatNetworkBitrateForVideoQuality:(unsigned char)arg1 isLocalOnWiFi:(bool)arg2 isRedundancyRequested:(bool)arg3;
+ (unsigned int)maxCameraNetworkBitrateForVideoQuality:(unsigned char)arg1 isLocalOnWiFi:(bool)arg2 isRedundancyRequested:(bool)arg3 isSharingEnabled:(bool)arg4;
+ (unsigned int)maxCameraNetworkBitrateForVideoQuality:(unsigned char)arg1 useWiFiBitrate:(bool)arg2 isSharingEnabled:(bool)arg3;
+ (unsigned int)maxCameraNetworkBitrateWithRedundancyForVideoQuality:(unsigned char)arg1 useWiFiBitrate:(bool)arg2;
+ (unsigned int)maxFdatNetworkBitrateForVideoQuality:(unsigned char)arg1 isLocalOnWiFi:(bool)arg2 isRedundancyRequested:(bool)arg3;
+ (unsigned int)maxFtxtNetworkBitrateForVideoQuality:(unsigned char)arg1 isLocalOnWiFi:(bool)arg2 isRedundancyRequested:(bool)arg3;
+ (unsigned int)maxNetworkBitrateForStreamGroupID:(unsigned int)arg1 videoQuality:(unsigned char)arg2 isLocalOnWiFi:(bool)arg3 isRedundancyRequested:(bool)arg4 isSharingEnabled:(bool)arg5;

- (id)activeDownlinkStreamIDForStreamGroupID:(unsigned int)arg1;
- (unsigned int)actualNetworkBitrateForStreamGroup:(unsigned int)arg1;
- (unsigned int)actualNetworkBitrateWithAudioBitrates:(id)arg1;
- (bool)addOneToOneStreamConfigToMediaStreamInfo:(id)arg1 negotiatorStreamGroupConfig:(id)arg2;
- (void)appendOptedInStreamID:(id)arg1 toOptInStreamsIDs:(id)arg2 targetBandwidthEntry:(id)arg3 forceSeamlessTransition:(bool)arg4;
- (void)appendStreamGroup:(id)arg1 maxBitrate:(unsigned int)arg2 mediaEntries:(id)arg3;
- (void)appendStreamGroupsMediaEntries:(id)arg1;
- (id)applyVideoEnabledSetting:(bool)arg1;
- (id)audioGroup;
- (id)cameraStreamInfo;
- (void)cancelAndReleaseFetchTimer;
- (struct _VCSessionParticipantCapabilities { bool x1; unsigned int x2; int x3; bool x4; bool x5; })capabilities;
- (unsigned char)cappedVideoQualityWithShouldLimitCameraQualityForPIP:(bool)arg1;
- (id)checkSubstreams:(id)arg1 forLowerQualityIndex:(unsigned int)arg2;
- (void)cleanupNwActivity;
- (void)cleanupSpatialAudio;
- (void)collectAudioChannelMetrics:(struct { unsigned int x1; unsigned int x2[5]; unsigned int x3; double x4; struct CGSize { double x_5_1_1; double x_5_1_2; } x5; double x6; unsigned int x7; double x8; unsigned int x9; unsigned int x10; }*)arg1;
- (void)collectVideoChannelMetrics:(struct { unsigned int x1; unsigned int x2[5]; unsigned int x3; double x4; struct CGSize { double x_5_1_1; double x_5_1_2; } x5; double x6; unsigned int x7; double x8; unsigned int x9; unsigned int x10; }*)arg1;
- (void)completeAndReleaseNwActivity:(id)arg1 withReason:(int)arg2;
- (bool)configureAudioIOWithDeviceRole:(int)arg1 operatingMode:(int)arg2;
- (bool)configureWithOneToOneParticipantConfig:(id)arg1 operatingMode:(int)arg2;
- (void)createAndResumeFetchTimer;
- (void)createJitterBufferTargetEstimatorSynchronizer:(struct tagVCJBTargetEstimatorSynchronizer {}**)arg1 syncGroupID:(unsigned int)arg2;
- (void)dealloc;
- (bool)didNegotiateStreamGroupWithID:(unsigned int)arg1;
- (void)didReceiveFirstFrameForStreamGroup:(id)arg1;
- (void)didStopReacting;
- (void)dispatchedSetRemoteAudioEnabled:(bool)arg1;
- (void)dispatchedSetRemoteAudioPaused:(bool)arg1;
- (void)dispatchedSetRemoteScreenEnabled:(bool)arg1;
- (void)dispatchedSetRemoteSystemAudioPaused:(bool)arg1;
- (void)dispatchedSetRemoteVideoEnabled:(bool)arg1;
- (void)dispatchedSetRemoteVideoPaused:(bool)arg1;
- (void)dispatchedSetScreenControlEnabled:(bool)arg1;
- (void)dispatchedSetVideoReceiverFeedbackDelegate:(id)arg1;
- (id)entryForStreamID:(id)arg1;
- (id)getAudioDumpName;
- (id)getMajorVersionNumber;
- (id)initWithConfig:(id)arg1 delegate:(id)arg2;
- (void)initializeParticipantType;
- (bool)isActiveMediaType:(unsigned int)arg1;
- (bool)isAudioActive;
- (bool)isInCanvas;
- (bool)isParticipantDawnburstOrLater;
- (bool)isParticipantPeace:(id)arg1;
- (bool)isRemoteAudioEnabled;
- (bool)isRemoteAudioPaused;
- (bool)isRemoteScreenEnabled;
- (bool)isRemoteVideoEnabled;
- (bool)isRemoteVideoPaused;
- (bool)isScreenActive;
- (bool)isScreenControlEnabled;
- (bool)isSeamlessTransitionSupportedForStreamGroup:(id)arg1;
- (bool)isServerRTxEnabled;
- (bool)isStreamGroupActive:(id)arg1;
- (bool)isVideoExpected;
- (bool)isVisible;
- (unsigned int)lastDisplayedFrameRTPTimestamp;
- (id)mediaEntries;
- (id)micStreamInfo;
- (void)negotiateAudioRules:(id)arg1;
- (void)networkQualityDidDegrade:(bool)arg1 isLocalNetworkQualityDegraded:(bool)arg2;
- (id)newCaptionsStreamGroupWithStreamGroupConfig:(id)arg1;
- (id)newMediaStreamConfigWithStreamConfig:(id)arg1 streamGroupConfig:(id)arg2 maxIDSStreamIDCount:(unsigned int)arg3;
- (id)newMediaStreamConfigWithStreamGroupConfig:(id)arg1 streamConfig:(id)arg2 rateControlConfig:(id)arg3 multiwayConfig:(id)arg4;
- (id)newMediaStreamInfoWithNegotiationConfig:(id)arg1 streamToken:(long long)arg2;
- (id)newMediaStreamWithNegotiationConfig:(id)arg1 streamToken:(long long)arg2;
- (id)newMultiwayConfigWithStreamGroupStreamConfig:(id)arg1 maxIDSStreamIDCount:(unsigned int)arg2 groupID:(unsigned int)arg3;
- (id)newStreamGroupConfigWithNegotiationConfig:(id)arg1;
- (id)newSupportedRemoteMediaTypeStatesDict:(id)arg1;
- (id)newVideoStreamGroupWithStreamGroupConfig:(id)arg1;
- (bool)oneToOneIsSupportedAudioStreamGroup:(unsigned int)arg1;
- (bool)oneToOneIsSupportedVideoStreamGroup:(unsigned int)arg1;
- (id)optedInAudioStreamID;
- (unsigned int)optedInNetworkBitrateForStreamGroup:(unsigned int)arg1;
- (id)optedInStreamIDForStreamGroupID:(unsigned int)arg1;
- (id)optedInVideoStreamID;
- (long long)participantMicrophoneToken;
- (long long)participantScreenToken;
- (id)participantSpatialAudioSourceIDs;
- (id)positionalInfo;
- (bool)processParticipantInfo;
- (unsigned int)prominenceIndex;
- (void)pushEventToNwActivity:(long long)arg1 started:(bool)arg2;
- (void)reactionDidStart:(id)arg1;
- (id)recommendedStreamIDsForSelectedMediaEntries:(id)arg1 forceSeamlessTransition:(bool)arg2;
- (void)redundancyController:(id)arg1 redundancyIntervalDidChange:(double)arg2;
- (void)redundancyController:(id)arg1 redundancyPercentageDidChange:(unsigned int)arg2;
- (unsigned int)remoteMediaStateForMediaType:(unsigned int)arg1;
- (void)reportCameraCompositionEnabled:(bool)arg1;
- (id)screenGroup;
- (id)screenStreamInfo;
- (void)setActiveStreamIDs:(id)arg1;
- (void)setAudioPaused:(bool)arg1;
- (void)setCapabilities:(struct _VCSessionParticipantCapabilities { bool x1; unsigned int x2; int x3; bool x4; bool x5; })arg1;
- (void)setIsServerRTxEnabled:(bool)arg1;
- (void)setMediaRecorder:(id)arg1;
- (void)setMediaSuspended:(bool)arg1 forStreamToken:(id)arg2;
- (void)setMuted:(bool)arg1;
- (void)setProminenceIndex:(unsigned int)arg1;
- (void)setRemoteAudioEnabled:(bool)arg1;
- (void)setRemoteAudioPaused:(bool)arg1;
- (void)setRemoteMediaStalled:(bool)arg1;
- (void)setRemoteMediaState:(id)arg1 forMediaType:(id)arg2;
- (void)setRemoteMediaTypeStates:(id)arg1;
- (void)setRemoteScreenEnabled:(bool)arg1;
- (void)setRemoteSystemAudioPaused:(bool)arg1;
- (void)setRemoteVideoEnabled:(bool)arg1;
- (void)setRemoteVideoPaused:(bool)arg1;
- (void)setScreenControlEnabled:(bool)arg1;
- (void)setSharingEnabled:(bool)arg1;
- (void)setShouldEnableFaceZoom:(bool)arg1;
- (bool)setShouldEnableMLEnhance:(bool)arg1 streamWithVideoResolution:(long long)arg2 videoStreamGroup:(id)arg3;
- (void)setStreamGroup:(unsigned int)arg1 syncSourceStreamGroupID:(unsigned int)arg2;
- (void)setTransitionToDisabled:(unsigned int)arg1;
- (void)setTransitionToEnabled:(unsigned int)arg1;
- (void)setTransitionToPaused:(unsigned int)arg1;
- (void)setVideoDegraded:(bool)arg1;
- (void)setVideoPaused:(bool)arg1;
- (void)setVideoQuality:(unsigned char)arg1;
- (void)setVideoReceiverFeedbackDelegate:(id)arg1;
- (void)setVideoStreamDelegate:(id)arg1 delegateFunctions:(const struct tagVCVideoStreamDelegateRealtimeInstanceVTable { int (*x1)(); }*)arg2;
- (void)setVisibilityIndex:(unsigned int)arg1;
- (bool)setupAudioStreamConfiguration:(id)arg1 withStreamGroupConfig:(id)arg2 streamGroupStreamConfig:(id)arg3;
- (bool)setupBandwidthAllocationTableForMediaStreamConfigs:(id)arg1 streamGroupID:(unsigned int)arg2 entryType:(unsigned char)arg3;
- (void)setupJBTargetSynchronizers;
- (void)setupMediaStreamGroupConfig:(id)arg1 withNegotiationConfig:(id)arg2;
- (int)setupSpatialAudioWithMetadata:(void*)arg1 spatialMetadataEntryMap:(struct __CFDictionary { }*)arg2;
- (int)setupSpatialInfoForStreamGroupConfig:(id)arg1;
- (bool)setupStreamConfigWithCodecs:(id)arg1 streamConfig:(id)arg2 codecConfigs:(id)arg3 featureStringsDict:(id)arg4;
- (bool)setupStreamGroupWithConfig:(id)arg1;
- (bool)setupStreamGroups;
- (id)setupStreamRTP:(id)arg1;
- (bool)setupVideoStreamConfiguration:(id)arg1 withStreamGroupStreamConfig:(id)arg2 codecConfigs:(id)arg3 multiwayConfig:(id)arg4 groupID:(unsigned int)arg5;
- (bool)shouldEnableMLEnhanceHighTier;
- (bool)shouldEnableMLEnhanceLowTier;
- (bool)shouldEnableMLEnhanceOneToOne;
- (bool)shouldEnablePacketRetransmissionForStreamGroupID:(unsigned int)arg1;
- (bool)shouldSetupStreamGroupWithID:(unsigned int)arg1;
- (int)spatialChannelIndex:(unsigned int*)arg1 spatialAudioSourceID:(unsigned long long*)arg2 forMediaType:(unsigned int)arg3;
- (void*)spatialMetadataEntryForMediaType:(unsigned int)arg1;
- (void)start;
- (id)startAudioIO;
- (id)startScreenGroup;
- (void)stop;
- (id)stopAudioStreams;
- (int)storeSpatialAudioMetadataEntry:(void*)arg1 forMediaType:(unsigned int)arg2;
- (bool)supportsGFTSwitchToOneToOne;
- (bool)supportsNegotiatedCoordinateSystem;
- (id)systemAudioStreamInfo;
- (void)updateAndHandleVideoMediaStall:(bool)arg1 isOneToOneStream:(bool)arg2;
- (void)updateAudioSpectrumState;
- (void)updateDownlinkBandwithAllocatorClientConfigurations:(id)arg1;
- (id)updateMediaState:(unsigned int)arg1 forStreamGroup:(id)arg2;
- (void)updateOneToOneAudioPositionalInfo:(const struct tagVCSpatialAudioMetadataPositionalInfo { float x1; float x2; float x3; unsigned int x4; unsigned int x5; unsigned int x6; }*)arg1;
- (void)updatePositionalInfo:(id)arg1 shouldReapply:(bool)arg2;
- (void)updateScreenStreamConfigurationWithStreamGroupResult:(id)arg1 multiwayConfig:(id)arg2 screenStreamConfig:(id)arg3;
- (void)updateShouldEnableFaceZoom;
- (void)updateShouldEnableMLEnhance;
- (void)updateShouldEnableMLEnhanceHighTierMultiway;
- (void)updateShouldEnableMLEnhanceLowTierMultiway;
- (void)updateShouldEnableMLEnhanceOneToOne;
- (void)updateStreamConfigWithMLEnhance:(id)arg1;
- (void)updateThermalLevel:(int)arg1;
- (void)updateVideoMultiwayConfig:(id)arg1 withStreamGroupStreamConfig:(id)arg2;
- (void)validateMediaEntries:(id)arg1;
- (id)videoGroup;
- (unsigned char)videoQuality;
- (unsigned int)visibilityIndex;

@end
