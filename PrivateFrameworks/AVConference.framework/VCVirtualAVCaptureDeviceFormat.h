
@interface VCVirtualAVCaptureDeviceFormat : AVCaptureDeviceFormat {
    long long  _autoFocusSystem;
    bool  _cinematicFramingSupported;
    struct opaqueCMFormatDescription { } * _formatDescription;
    bool  _globalToneMappingSupported;
    bool  _highPhotoQualitySupported;
    struct { 
        int width; 
        int height; 
    }  _highResolutionStillImageDimensions;
    bool  _highestPhotoQualitySupported;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _maxExposureDuration;
    float  _maxISO;
    NSString * _mediaType;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _minExposureDuration;
    float  _minISO;
    NSArray * _secondaryNativeResolutionZoomFactors;
    NSArray * _supportedColorSpaces;
    NSArray * _supportedDepthDataFormats;
    NSArray * _supportedMaxPhotoDimensions;
    NSArray * _supportedVideoZoomFactorsForDepthDataDelivery;
    NSArray * _unsupportedCaptureOutputClasses;
    bool  _videoBinned;
    float  _videoFieldOfView;
    bool  _videoHDRSupported;
    double  _videoMaxZoomFactor;
    double  _videoMaxZoomFactorForDepthDataDelivery;
    double  _videoMinZoomFactorForDepthDataDelivery;
    bool  _videoStabilizationMode;
    bool  _videoStabilizationSupported;
    NSArray * _videoSupportedFrameRateRanges;
    double  _videoZoomFactorUpscaleThreshold;
}

@property (nonatomic) long long autoFocusSystem;
@property (getter=isCinematicFramingSupported, nonatomic) bool cinematicFramingSupported;
@property (nonatomic) struct opaqueCMFormatDescription { }*formatDescription;
@property (getter=isGlobalToneMappingSupported, nonatomic) bool globalToneMappingSupported;
@property (getter=isHighPhotoQualitySupported, nonatomic) bool highPhotoQualitySupported;
@property (nonatomic) struct { int x1; int x2; } highResolutionStillImageDimensions;
@property (getter=isHighestPhotoQualitySupported, nonatomic) bool highestPhotoQualitySupported;
@property (nonatomic) struct { long long x1; int x2; unsigned int x3; long long x4; } maxExposureDuration;
@property (nonatomic) float maxISO;
@property (nonatomic, copy) NSString *mediaType;
@property (nonatomic) struct { long long x1; int x2; unsigned int x3; long long x4; } minExposureDuration;
@property (nonatomic) float minISO;
@property (nonatomic, retain) NSArray *secondaryNativeResolutionZoomFactors;
@property (nonatomic, retain) NSArray *supportedColorSpaces;
@property (nonatomic, retain) NSArray *supportedDepthDataFormats;
@property (nonatomic, retain) NSArray *supportedMaxPhotoDimensions;
@property (nonatomic, retain) NSArray *supportedVideoZoomFactorsForDepthDataDelivery;
@property (nonatomic, retain) NSArray *unsupportedCaptureOutputClasses;
@property (getter=isVideoBinned, nonatomic) bool videoBinned;
@property (nonatomic) float videoFieldOfView;
@property (getter=isVideoHDRSupported, nonatomic) bool videoHDRSupported;
@property (nonatomic) double videoMaxZoomFactor;
@property (nonatomic) double videoMaxZoomFactorForDepthDataDelivery;
@property (nonatomic) double videoMinZoomFactorForDepthDataDelivery;
@property (getter=isVideoStabilizationSupported, nonatomic) bool videoStabilizationSupported;
@property (nonatomic, retain) NSArray *videoSupportedFrameRateRanges;
@property (nonatomic) double videoZoomFactorUpscaleThreshold;

- (long long)autoFocusSystem;
- (void)dealloc;
- (id)description;
- (id)descriptionWithLocale:(id)arg1;
- (id)descriptionWithLocale:(id)arg1 indent:(unsigned long long)arg2;
- (struct opaqueCMFormatDescription { }*)formatDescription;
- (struct { int x1; int x2; })highResolutionStillImageDimensions;
- (bool)isCinematicFramingSupported;
- (bool)isEqual:(id)arg1;
- (bool)isGlobalToneMappingSupported;
- (bool)isHighPhotoQualitySupported;
- (bool)isHighestPhotoQualitySupported;
- (bool)isVideoBinned;
- (bool)isVideoHDRSupported;
- (bool)isVideoStabilizationModeSupported:(long long)arg1;
- (bool)isVideoStabilizationSupported;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })maxExposureDuration;
- (float)maxISO;
- (id)mediaType;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })minExposureDuration;
- (float)minISO;
- (id)secondaryNativeResolutionZoomFactors;
- (void)setAutoFocusSystem:(long long)arg1;
- (void)setCinematicFramingSupported:(bool)arg1;
- (void)setFormatDescription:(struct opaqueCMFormatDescription { }*)arg1;
- (void)setGlobalToneMappingSupported:(bool)arg1;
- (void)setHighPhotoQualitySupported:(bool)arg1;
- (void)setHighResolutionStillImageDimensions:(struct { int x1; int x2; })arg1;
- (void)setHighestPhotoQualitySupported:(bool)arg1;
- (void)setMaxExposureDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setMaxISO:(float)arg1;
- (void)setMediaType:(id)arg1;
- (void)setMinExposureDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setMinISO:(float)arg1;
- (void)setSecondaryNativeResolutionZoomFactors:(id)arg1;
- (void)setSupportedColorSpaces:(id)arg1;
- (void)setSupportedDepthDataFormats:(id)arg1;
- (void)setSupportedMaxPhotoDimensions:(id)arg1;
- (void)setSupportedVideoZoomFactorsForDepthDataDelivery:(id)arg1;
- (void)setUnsupportedCaptureOutputClasses:(id)arg1;
- (void)setVideoBinned:(bool)arg1;
- (void)setVideoFieldOfView:(float)arg1;
- (void)setVideoHDRSupported:(bool)arg1;
- (void)setVideoMaxZoomFactor:(double)arg1;
- (void)setVideoMaxZoomFactorForDepthDataDelivery:(double)arg1;
- (void)setVideoMinZoomFactorForDepthDataDelivery:(double)arg1;
- (void)setVideoStabilizationSupported:(bool)arg1;
- (void)setVideoSupportedFrameRateRanges:(id)arg1;
- (void)setVideoZoomFactorUpscaleThreshold:(double)arg1;
- (id)supportedColorSpaces;
- (id)supportedDepthDataFormats;
- (id)supportedMaxPhotoDimensions;
- (id)supportedVideoZoomFactorsForDepthDataDelivery;
- (id)unsupportedCaptureOutputClasses;
- (float)videoFieldOfView;
- (double)videoMaxZoomFactor;
- (double)videoMaxZoomFactorForDepthDataDelivery;
- (double)videoMinZoomFactorForDepthDataDelivery;
- (id)videoSupportedFrameRateRanges;
- (double)videoZoomFactorUpscaleThreshold;

@end
