
@interface VCHardwareSettingsMac : VCHardwareSettings <VCHardwareSettingsMacProtocol> {
    NSData * _boardId;
    int  _cpuFamily;
    NSString * _cpuType;
    int  _hardwareScore;
    bool  _hiDefEncoding;
    int  _isG5;
    bool  _isGVAEncoderAvailable;
    bool  _isGVAEncoderAvailableInitialized;
    NSString * _machineName;
    int  _machineType;
    unsigned long long  _maxScreenEncodingSizeSupported;
    int  _mhrtz;
    NSString * _modelName;
    unsigned int  _modelRevision;
    unsigned int  _modelVersion;
    int  _numProcessors;
    unsigned int  _screenHeight;
    unsigned int  _screenWidth;
    bool  _supportsFilteredScreenCapture;
}

@property (nonatomic, readonly) bool canDoHEVC;
@property (nonatomic, readonly) bool canDoHiDefDecoding;
@property (nonatomic, readonly) bool canDoHiDefEncoding;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) int hardwareScore;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) unsigned int hwEncoderEnterBitrate;
@property (nonatomic, readonly) unsigned int hwEncoderExitBitrate;
@property (nonatomic, readonly) bool isCaptionsSupported;
@property (nonatomic, readonly) bool isCellularTappingSupported;
@property (nonatomic, readonly) bool isDeviceLargeScreen;
@property (nonatomic, readonly) bool isExternalCameraSupported;
@property (nonatomic, readonly) bool isIMac;
@property (nonatomic, readonly) bool isMLEnhanceOneToOneSupported;
@property (nonatomic, readonly) bool isMacBookWVGA;
@property (nonatomic, readonly) bool isMacPro;
@property (nonatomic, readonly) bool isMacmini;
@property (nonatomic, readonly) bool isMediaRecordingSupported;
@property (nonatomic, readonly) bool isPixelFormatAvailable;
@property (nonatomic, readonly) bool isRemoteCameraSenderSupported;
@property (nonatomic, readonly) bool isSiriVoicePlayoutSupported;
@property (nonatomic, readonly) bool isSiriVoiceTapSupported;
@property (nonatomic, readonly) bool isSmartBrakeSupported;
@property (nonatomic, readonly) bool isSpatialAudioSupported;
@property (nonatomic, readonly) bool isViewPointCorrectionSupported;
@property (nonatomic, readonly) NSString *machineName;
@property (nonatomic, readonly) unsigned int maxActiveScreenEncoders;
@property (nonatomic, readonly) unsigned int maxActiveVideoDecoders;
@property (nonatomic, readonly) unsigned int maxActiveVideoEncoders;
@property (nonatomic, readonly) unsigned int maxDisplayRefreshRate;
@property (nonatomic, readonly) unsigned int maxFrameRateSupportedScreenShare;
@property (nonatomic, readonly) unsigned long long maxScreenEncodingSizeSupported;
@property (nonatomic, readonly) unsigned int screenHeight;
@property (nonatomic, readonly) long long screenShareCapabilities;
@property (nonatomic, readonly) unsigned int screenWidth;
@property (nonatomic, readonly) bool shouldEnforceScreenFrameRateLimit;
@property (nonatomic, readonly) bool shouldOverrideGPUMuxing;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportHEVC;
@property (nonatomic, readonly) NSArray *supportedVideoPayloads;
@property (nonatomic, readonly) bool supports1080pDecoding;
@property (nonatomic, readonly) bool supports1080pEncoding;
@property (nonatomic, readonly) bool supportsAVFCapture;
@property (nonatomic, readonly) bool supportsHEIFEncoding;
@property (nonatomic, readonly) bool supportsMultiway1080pStream;
@property (nonatomic, readonly) bool supportsMultiway720pStream;
@property (nonatomic, readonly) bool useSoftFramerateSwitching;
@property (nonatomic, readonly) bool vcpSupportsHEVCEncoder;

+ (long long)deviceClass;
+ (id)sharedInstance;
+ (id)virtualHardwareSettings:(id)arg1;

- (int)_getCPUFamilyType;
- (id)_getCPUTypeStringForMachineType:(int)arg1;
- (void)_initializeScreenDimension;
- (bool)_isMachineNewerThanSandybridge:(int)arg1;
- (bool)_isModel:(id)arg1;
- (void)addPixelFormat;
- (bool)canDoHEVC;
- (bool)canDoHiDefDecoding;
- (bool)canDoHiDefEncoding;
- (void)dealloc;
- (bool)disableMLScalarDuringSharing;
- (int)hardwareScore;
- (unsigned int)hwEncoderEnterBitrate;
- (unsigned int)hwEncoderExitBitrate;
- (id)init;
- (id)initForDevice:(id)arg1;
- (bool)isAppleSiliconMac;
- (bool)isCaptionsSupported;
- (bool)isCellularTappingSupported;
- (bool)isDeviceLargeScreen;
- (bool)isExternalCameraSupported;
- (bool)isGVAEncoderAvailable;
- (bool)isIMac;
- (bool)isIMacPro;
- (bool)isMLEnhanceOneToOneSupported;
- (bool)isMacBookAir;
- (bool)isMacBookWVGA;
- (bool)isMacPro;
- (bool)isMacmini;
- (bool)isMediaRecordingSupported;
- (bool)isPixelFormatAvailable;
- (bool)isRemoteCameraSenderSupported;
- (bool)isSmartBrakeSupported;
- (bool)isSpatialAudioSupported;
- (bool)isViewPointCorrectionSupported;
- (bool)limitCameraDownlinkBitrateDuringSharing;
- (id)machineName;
- (unsigned int)maxActiveScreenEncoders;
- (unsigned int)maxActiveVideoDecoders;
- (unsigned int)maxActiveVideoEncoders;
- (unsigned int)maxDisplayRefreshRate;
- (unsigned int)maxFpsCameraCaptureDuringSharing;
- (unsigned int)maxFrameRateSupportedScreenShare;
- (unsigned int)maxMultiwayFramerateSupported;
- (unsigned int)maxOneToOneFramerateSupported;
- (unsigned int)maxRemoteParticipants30fps;
- (unsigned long long)maxScreenEncodingSizeSupported;
- (bool)preferPresentationTimestamp;
- (double)previewPreferredAspectRatio;
- (id)queryBoardId;
- (unsigned int)screenHeight;
- (unsigned int)screenHeightForDisplayID:(unsigned int)arg1;
- (long long)screenShareCapabilities;
- (unsigned int)screenWidth;
- (unsigned int)screenWidthForDisplayID:(unsigned int)arg1;
- (void)setupMachineName;
- (bool)shouldEnforceScreenFrameRateLimit;
- (bool)shouldOverrideGPUMuxing;
- (id)supportedVideoPayloads;
- (bool)supports1080pDecoding;
- (bool)supports1080pEncoding;
- (bool)supportsAVFCapture;
- (bool)supportsDedicatedSystemAudioStream;
- (bool)supportsFilteredScreenCapture;
- (bool)supportsHEIFEncoding;
- (bool)supportsMultiway1080pStream;
- (bool)supportsMultiway720pStream;
- (bool)supportsScreenCapture;
- (bool)supportsSystemAudioTap;
- (bool)useSoftFramerateSwitching;

@end
