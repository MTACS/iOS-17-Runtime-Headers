
@interface VCRateControlAlgorithmBase : NSObject <VCRateControlAlgorithm> {
    unsigned int  _actualBitrate;
    bool  _belowNoRampUpBandwidth;
    struct tagVCRateControlAlgorithmConfig { 
        unsigned int serverBagProfileNumber; 
        unsigned int *tierBitrates; 
        int initialTierIndex; 
        int maxTierIndex; 
        int minTierIndex; 
        int softMaxTierIndex[2]; 
        int lowestNonEmergencyTierIndex; 
        int lowestNonEmergencyTierIndexWiFi; 
        int lowestEffectiveBWETierIndex; 
        int lowestTierIndexReactToNoServerActivity; 
        int rampUpTierNumber; 
        int rampDownTierNumber; 
        int rampUpAdditionalTierAtInitial; 
        int rampDownAdditionalTierAtInitial; 
        int rampDownBurstyLossThreshold; 
        int lowestTierForBurstyLossRampDown; 
        int lowestTierToDisableRateLimited; 
        double rampDownNOWRDThreshold; 
        double rampDownNOWRDAccThreshold; 
        double rampDownAggressiveNOWRDThreshold; 
        double rampDownAggressiveNOWRDAccThreshold; 
        double rampDownConstantOWRDDuration; 
        double rampDownOvershootDuration; 
        double rampDownOvershootNextTierRatio; 
        double rampUpFrozenDuration; 
        double rampUpSettleDuration; 
        double rampUpOWRDThreshold; 
        double rampUpNOWRDThreshold; 
        double rampUpNOWRDAccThreshold; 
        double rampUpOverBandwidthCalmDuration; 
        double rampUpBlockedTimeout; 
        int rampUpOverBandwidthTierNumber; 
        int rampDownLossEventThreshold; 
        int rampDownLossEventBadTrendThreshold; 
        double rampDownLossEventThresholdRatio; 
        double rampDownLossEventWindowDuration; 
        double rampDownLossEventNOWRDThreshold; 
        double rampUpFrozenPLRThreshold; 
        double rampUpRateLimitedRatio; 
        double unstableRateLimitedDuration; 
        double congestionWaitDuration; 
        double owrdWindowDuration; 
        double owrdShortWindowDuration; 
        double minimumNOWRDTimeDifference; 
        double owrdInitialRampUpReadyDuration; 
        unsigned int owrdHistorySize; 
        unsigned int owrdMininumHistorySize; 
        unsigned int fastRampDownBitrateRange; 
        unsigned int fastRampUpBitrateRange; 
        unsigned int consecutiveRampDownThresholdForCongestion; 
        bool receivedBandwidthEstimationEnabled; 
        bool basebandAdaptationEnabled; 
        bool rateLimitedEnabled; 
        bool randomRampUpFrozenDurationEnabled; 
        bool oscillationAvoidanceEnabled; 
        bool fastRampUpEnabled; 
        bool blockRampUpInSaturatedNetworkEnabled; 
        bool blockRampUpInBluetoothCoexEnabled; 
        bool wifiEmergencyTiersEnabled; 
        bool burstyTrafficEnabled; 
        bool lowLatencyWANEnabled; 
        bool rampDownToActualSendBitrate; 
        int rampDownToActualSendBitrateMinTier; 
        bool rampDownSuppressionEnabled; 
        double rampDownSuppressionMinRTT; 
        double rampDownSuppressionFactor; 
        int fastRampUpHighestTier; 
        double fastRampUpRTTRatio; 
        int fastRampUpTierGap; 
        double fastRampUpNetworkStableDuration; 
        double networkSaturatedRTTToMinRTTRatio; 
        double networkSaturatedOWRDToMinRTTRatio; 
        int networkSaturatedPersistFeedbackNumber; 
        double networkSaturatedRTTDecreasingThreshold; 
        int oscillationAvoidanceTierChangeThreshold; 
        int oscillationAvoidanceTiersHitThreshold; 
        double oscillationAvoidanceDurationRatio; 
        double oscillationAvoidanceDurationRatioAggressive; 
        int stabilizationScheme; 
        double rampDownNBDCDThreshold; 
        double rampDownAggressiveNBDCDThreshold; 
        double rampDownNormalizedQueuingDelayThreshold; 
        double rampDownMediumQueuingDelayThreshold; 
        double rampDownHighQueuingDelayThreshold; 
        double rampDownEmergencyTierCoolDownTime; 
        double rampDownWiFiEmergencyTierCoolDownTime; 
        double rampUpNBDCDThreshold; 
        double rampUpQueuingDelayThreshold; 
        double rampUpNBDCDCoolDownTime; 
        double rampUpAudioFractionCoolDownTime; 
        double basebandRATSwitchCoolDownTime; 
        double basebandAdaptationCrossTrafficRatio; 
        double rampUpNetworkUnstableCoolDownTime; 
        double autoResumeDurationAfterPaused; 
        double pauseOffChannelHighRatio; 
        double unpauseOffChannelLowRatio; 
        bool oscillationDetectionEnabled; 
        double oscillationCoolDownTime; 
        int oscillationDeviationTierNumber; 
        int oscillationDeviationCountThreshold; 
        bool preventBasebandRampDownCloseToKeyFrame; 
        int basebandRampDownSlowDownFactor; 
        double networkUnstableRTTThreshold; 
        double networkUnstablePLRThreshold; 
        double packetLossRateThresholdInitial; 
        double packetLossRateThresholdMin; 
        double packetLossRateThresholdMax; 
        double packetLossRateThresholdTarget; 
        unsigned int rampUpUplinkBLERThreshold; 
        unsigned int rampDownUplinkBLERThreshold; 
        double rampUpUplinkBLERDuration; 
        double rampDownUplinkBLERDuration; 
        double rampDownECNCERatioLow; 
        double rampDownECNCERatioMedium; 
        double rampDownECNCERatioHigh; 
        unsigned int rampDownECNBitrateHigh; 
        unsigned int rampDownECNBitrateMedium; 
        unsigned int rampDownECNBitrateLow; 
        double ceRatioDurationToRTTFactor; 
        double ceRatioDurationMin; 
        double ceRatioDurationMax; 
        int smartBrakeStrategy; 
    }  _config;
    unsigned int  _consecutiveRampDown;
    struct tagVCStatisticsECNStats { 
        unsigned short ecnECT1Count; 
        unsigned short ecnCECount; 
    }  _currentECNStats;
    int  _currentTierIndex;
    bool  _didMBLRampDown;
    double  _firstBelowNoRampUpBandwidthTime;
    double  _firstLossEventRampDownTime;
    bool  _isCongested;
    bool  _isFirstInitialRampUpDone;
    bool  _isFirstTimestampArrived;
    bool  _isNewRateSentOut;
    bool  _isOWRDConstant;
    bool  _isOWRDListReady;
    bool  _isOvershoot;
    bool  _isPeriodicLoggingEnabled;
    bool  _isSendBitrateLimited;
    double  _lastCongestionTime;
    double  _lastLossEventRampDownTime;
    double  _lastNoOvershootBWEstimationTime;
    double  _lastOWRDChangeTime;
    double  _lastRampDownTimeDueToBaseband;
    double  _lastRampDownTimeDueToFeedback;
    double  _lastTimeStartRampingDown;
    unsigned int  _localBandwidthEstimation;
    void * _logBasebandDump;
    void * _logDump;
    unsigned int  _lossEventBandwidthConfidence;
    unsigned int  _lossEventBandwidthLimit;
    struct tagVCRateControlLossEvent { 
        double time; 
        double packetLossRate; 
        double packetLossRateVideo; 
        bool isLossIncreasing; 
        struct tagVCStatisticsECNStats { 
            unsigned short ecnECT1Count; 
            unsigned short ecnCECount; 
        } ecnStats; 
    }  _lossEventBuffer;
    unsigned int  _lossEventBufferIndex;
    VCRateControlMediaController * _mediaController;
    unsigned int  _mostBurstLoss;
    double  _nowrd;
    double  _nowrdAcc;
    double  _nowrdShort;
    double  _owrd;
    struct { 
        double time[100]; 
        double owrd[100]; 
        int frontIndex; 
        int rearIndex; 
        unsigned int size; 
        double nowrd; 
        double nowrdShort; 
        double nowrdAcc; 
        bool isOWRDListTooShortDuringInitialRampUp; 
    }  _owrdList;
    double  _packetLossRate;
    double  _packetLossRateAudio;
    double  _packetLossRateAvgLong;
    double  _packetLossRateAvgLongAtLBAExit;
    double  _packetLossRateAvgLongAtLBAStart;
    double  _packetLossRateAvgLongPrevious;
    int  _packetLossRateBadTrendCount;
    double  _packetLossRateThreshold;
    double  _packetLossRateVideo;
    double  _pauseStartTime;
    _Atomic bool  _paused;
    double  _previousPacketLossRate;
    int  _previousTierIndex;
    int  _rampDownStatus;
    double  _rampUpFrozenTime;
    int  _rampUpStatus;
    unsigned int  _rateChangeCounter;
    unsigned int  _rateControlCounter;
    double  _rateControlTime;
    unsigned int  _rateSharingCount;
    unsigned int  _remoteBandwidthEstimation;
    struct tagVCRateControlAlgorithmReportStats { 
        unsigned int index; 
        int type; 
        union { 
            struct tagVCRateControlAlgorithmSmartBrakeStats { 
                double duration; 
                int bandwidthEnd; 
                int bandwidthStart; 
                int targetBitrateStart; 
                unsigned char trialVersion; 
            } smartBrake; 
        } ; 
    }  _reportStatistics;
    double  _roundTripTime;
    bool  _shouldConsiderVideoInLossEvent;
    double  _stabilizationTime;
    int  _state;
    unsigned int  _targetBitrate;
    double  _targetBitrateContinuous;
    unsigned int  _totalPacketReceived;
    struct tagVCRateControlAlgorithmVTable { 
        int (*configure)(); 
        int (*doRateControl)(); 
        int (*stateEnter)(); 
        int (*stateExit)(); 
    }  _vTable;
    unsigned int  _worstRecentBurstLoss;
    double  _worstRecentRoundTripTime;
}

@property (nonatomic, readonly) unsigned int actualBitrate;
@property (nonatomic, readonly) struct tagVCRateControlAlgorithmConfig { unsigned int x1; unsigned int *x2; int x3; int x4; int x5; int x6[2]; int x7; int x8; int x9; int x10; int x11; int x12; int x13; int x14; int x15; int x16; int x17; double x18; double x19; double x20; double x21; double x22; double x23; double x24; double x25; double x26; double x27; double x28; double x29; double x30; double x31; int x32; int x33; int x34; double x35; double x36; double x37; double x38; double x39; double x40; double x41; double x42; double x43; double x44; double x45; unsigned int x46; unsigned int x47; unsigned int x48; unsigned int x49; unsigned int x50; bool x51; bool x52; bool x53; bool x54; bool x55; bool x56; bool x57; bool x58; bool x59; bool x60; bool x61; bool x62; int x63; bool x64; double x65; double x66; int x67; double x68; int x69; double x70; double x71; double x72; int x73; double x74; int x75; int x76; double x77; double x78; int x79; double x80; double x81; double x82; double x83; double x84; double x85; double x86; double x87; double x88; double x89; double x90; double x91; } config;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool didMBLRampDown;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isCongested;
@property (nonatomic, readonly) bool isFirstInitialRampUpDone;
@property (nonatomic) bool isFirstTimestampArrived;
@property (nonatomic, readonly) bool isLossBasedAdaptationOn;
@property (nonatomic, readonly) bool isNewRateSentOut;
@property (nonatomic, readonly) bool isSendBitrateLimited;
@property (nonatomic) unsigned int localBandwidthEstimation;
@property (nonatomic, retain) VCRateControlMediaController *mediaController;
@property (nonatomic, readonly) unsigned int mostBurstLoss;
@property (nonatomic, readonly) double owrd;
@property (nonatomic, readonly) double packetLossRate;
@property (nonatomic, readonly) double packetLossRateAudio;
@property (nonatomic, readonly) double packetLossRateVideo;
@property (nonatomic, readonly) unsigned int rateChangeCounter;
@property (nonatomic) unsigned int rateSharingCount;
@property (nonatomic, readonly) unsigned int remoteBandwidthEstimation;
@property (nonatomic, readonly) struct tagVCRateControlAlgorithmReportStats { unsigned int x1; int x2; union { struct tagVCRateControlAlgorithmSmartBrakeStats { double x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; unsigned char x_1_2_5; } x_3_1_1; } x3; } reportStatistics;
@property (nonatomic, readonly) double roundTripTime;
@property (readonly) Class superclass;
@property (nonatomic, readonly) unsigned int targetBitrate;
@property (nonatomic, readonly) unsigned int totalPacketReceived;
@property (nonatomic, readonly) unsigned int worstRecentBurstLoss;
@property (nonatomic, readonly) double worstRecentRoundTripTime;

- (unsigned int)actualBitrate;
- (struct tagVCRateControlAlgorithmConfig { unsigned int x1; unsigned int *x2; int x3; int x4; int x5; int x6[2]; int x7; int x8; int x9; int x10; int x11; int x12; int x13; int x14; int x15; int x16; int x17; double x18; double x19; double x20; double x21; double x22; double x23; double x24; double x25; double x26; double x27; double x28; double x29; double x30; double x31; int x32; int x33; int x34; double x35; double x36; double x37; double x38; double x39; double x40; double x41; double x42; double x43; double x44; double x45; unsigned int x46; unsigned int x47; unsigned int x48; unsigned int x49; unsigned int x50; bool x51; bool x52; bool x53; bool x54; bool x55; bool x56; bool x57; bool x58; bool x59; bool x60; bool x61; bool x62; int x63; bool x64; double x65; double x66; int x67; double x68; int x69; double x70; double x71; double x72; int x73; double x74; int x75; int x76; double x77; double x78; int x79; double x80; double x81; double x82; double x83; double x84; double x85; double x86; double x87; double x88; double x89; double x90; double x91; })config;
- (void)dealloc;
- (bool)didMBLRampDown;
- (id)init;
- (bool)isCongested;
- (bool)isFirstInitialRampUpDone;
- (bool)isFirstTimestampArrived;
- (bool)isLossBasedAdaptationOn;
- (bool)isNewRateSentOut;
- (bool)isSendBitrateLimited;
- (unsigned int)localBandwidthEstimation;
- (id)mediaController;
- (unsigned int)mostBurstLoss;
- (double)owrd;
- (double)packetLossRate;
- (double)packetLossRateAudio;
- (double)packetLossRateVideo;
- (unsigned int)rateChangeCounter;
- (unsigned int)rateSharingCount;
- (unsigned int)remoteBandwidthEstimation;
- (struct tagVCRateControlAlgorithmReportStats { unsigned int x1; int x2; union { struct tagVCRateControlAlgorithmSmartBrakeStats { double x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; unsigned char x_1_2_5; } x_3_1_1; } x3; })reportStatistics;
- (double)roundTripTime;
- (void)setDidMBLRampDown:(bool)arg1;
- (void)setIsFirstTimestampArrived:(bool)arg1;
- (void)setLocalBandwidthEstimation:(unsigned int)arg1;
- (void)setMediaController:(id)arg1;
- (void)setRateSharingCount:(unsigned int)arg1;
- (bool)setUpVTable;
- (unsigned int)targetBitrate;
- (unsigned int)totalPacketReceived;
- (unsigned int)worstRecentBurstLoss;
- (double)worstRecentRoundTripTime;

@end
