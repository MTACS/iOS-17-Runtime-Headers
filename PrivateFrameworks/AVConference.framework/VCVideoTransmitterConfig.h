
@interface VCVideoTransmitterConfig : NSObject {
    int  _accessNetworkType;
    int  _captureSource;
    long long  _codecType;
    NSDictionary * _colorInfo;
    NSMutableDictionary * _customFeatureListStrings;
    unsigned long long  _customHeight;
    unsigned long long  _customWidth;
    unsigned long long  _cvoExtensionID;
    bool  _enableCVO;
    unsigned int  _encoderBitrateAveragingInterval;
    int  _encoderUsage;
    int  _encodingMode;
    bool  _fecEnabled;
    bool  _fecHeaderV1Enabled;
    unsigned long long  _framerate;
    bool  _isFecGeneratorEnabled;
    bool  _isIPv6;
    unsigned long long  _keyFrameInterval;
    int  _ltrAckFeedbackType;
    unsigned long long  _maxEncoderPixels;
    unsigned int  _maxSupportedTemporalLayers;
    void * _mediaControlInfoGenerator;
    VCRateControlMediaController * _mediaController;
    double  _minKeyFrameGenerationIntervalInSeconds;
    int  _mode;
    unsigned int  _parameterSets;
    unsigned int  _pixelFormat;
    NSString * _profileLevel;
    unsigned int  _qualityIndex;
    unsigned long long  _recommendedMTU;
    bool  _reinitEncoderOnFrameSizeChangeEnabled;
    unsigned long long  _remoteIDSParticipantID;
    struct opaqueRTCReporting { } * _reportingAgent;
    int  _reportingClientType;
    int  _reportingParentID;
    unsigned int  _rtpTimestampRate;
    bool  _rtxEnabled;
    bool  _setupBWEstimationOptionWithFeatureString;
    struct tagVCCryptor { } * _sframeCryptor;
    AVCStatisticsCollector * _statisticsCollector;
    struct tagVCVideoTransmitterStreamConfig { struct tagHANDLE {} *x1; unsigned short x2; int x3; unsigned int x4; struct tagVCCryptor {} *x5; } * _streamConfigs;
    int  _streamCount;
    bool  _temporalScalingEnabled;
    int  _tilesPerFrame;
    unsigned long long  _txMaxBitrate;
    unsigned long long  _txMinBitrate;
    bool  _useInBandFec;
    bool  _useRateControl;
    int  _videoPayload;
    _Atomic unsigned char * _videoPriorityPointer;
    long long  _videoResolution;
    int  _videoSource;
}

@property (nonatomic) int accessNetworkType;
@property (nonatomic) int captureSource;
@property (nonatomic) long long codecType;
@property (nonatomic) NSDictionary *colorInfo;
@property (nonatomic, readonly) NSDictionary *customFeatureListStrings;
@property (nonatomic) unsigned long long customHeight;
@property (nonatomic) unsigned long long customWidth;
@property (nonatomic) unsigned long long cvoExtensionID;
@property (nonatomic) bool enableCVO;
@property (nonatomic) unsigned int encoderBitrateAveragingInterval;
@property (nonatomic) int encoderUsage;
@property (nonatomic) int encodingMode;
@property (nonatomic) bool fecEnabled;
@property (nonatomic) bool fecHeaderV1Enabled;
@property (nonatomic) unsigned long long framerate;
@property (nonatomic) bool isFecGeneratorEnabled;
@property (nonatomic) bool isIPv6;
@property (nonatomic) unsigned long long keyFrameInterval;
@property (nonatomic) int ltrAckFeedbackType;
@property (nonatomic) unsigned long long maxEncoderPixels;
@property (nonatomic) unsigned int maxSupportedTemporalLayers;
@property (nonatomic) void*mediaControlInfoGenerator;
@property (nonatomic, retain) VCRateControlMediaController *mediaController;
@property (nonatomic) double minKeyFrameGenerationIntervalInSeconds;
@property (nonatomic) int mode;
@property (nonatomic) unsigned int parameterSets;
@property (nonatomic) unsigned int pixelFormat;
@property (nonatomic, retain) NSString *profileLevel;
@property (nonatomic) unsigned int qualityIndex;
@property (nonatomic) unsigned long long recommendedMTU;
@property (nonatomic) bool reinitEncoderOnFrameSizeChangeEnabled;
@property (nonatomic) unsigned long long remoteIDSParticipantID;
@property (nonatomic) struct opaqueRTCReporting { }*reportingAgent;
@property (nonatomic) int reportingClientType;
@property (nonatomic) int reportingParentID;
@property (nonatomic) unsigned int rtpTimestampRate;
@property (nonatomic) bool rtxEnabled;
@property (nonatomic) bool setupBWEstimationOptionWithFeatureString;
@property (nonatomic) struct tagVCCryptor { }*sframeCryptor;
@property (nonatomic, retain) AVCStatisticsCollector *statisticsCollector;
@property (nonatomic, readonly) struct tagVCVideoTransmitterStreamConfig { struct tagHANDLE {} *x1; unsigned short x2; int x3; unsigned int x4; struct tagVCCryptor {} *x5; }*streamConfigs;
@property (nonatomic) int streamCount;
@property (nonatomic) bool temporalScalingEnabled;
@property (nonatomic) int tilesPerFrame;
@property (nonatomic) unsigned long long txMaxBitrate;
@property (nonatomic) unsigned long long txMinBitrate;
@property (nonatomic) bool useInBandFec;
@property (nonatomic) bool useRateControl;
@property (nonatomic) int videoPayload;
@property (nonatomic) _Atomic unsigned char*videoPriorityPointer;
@property (nonatomic) long long videoResolution;
@property (nonatomic) int videoSource;

- (int)accessNetworkType;
- (void)addCustomFeatureListString:(id)arg1 payload:(int)arg2;
- (int)captureSource;
- (long long)codecType;
- (id)colorInfo;
- (id)customFeatureListStrings;
- (unsigned long long)customHeight;
- (unsigned long long)customWidth;
- (unsigned long long)cvoExtensionID;
- (void)dealloc;
- (id)description;
- (bool)enableCVO;
- (unsigned int)encoderBitrateAveragingInterval;
- (int)encoderUsage;
- (int)encodingMode;
- (bool)fecEnabled;
- (bool)fecHeaderV1Enabled;
- (unsigned long long)framerate;
- (id)init;
- (bool)isFecGeneratorEnabled;
- (bool)isIPv6;
- (unsigned long long)keyFrameInterval;
- (int)ltrAckFeedbackType;
- (unsigned long long)maxEncoderPixels;
- (unsigned int)maxSupportedTemporalLayers;
- (void*)mediaControlInfoGenerator;
- (id)mediaController;
- (double)minKeyFrameGenerationIntervalInSeconds;
- (int)mode;
- (unsigned int)parameterSets;
- (unsigned int)pixelFormat;
- (id)profileLevel;
- (unsigned int)qualityIndex;
- (unsigned long long)recommendedMTU;
- (bool)reinitEncoderOnFrameSizeChangeEnabled;
- (unsigned long long)remoteIDSParticipantID;
- (struct opaqueRTCReporting { }*)reportingAgent;
- (int)reportingClientType;
- (int)reportingParentID;
- (unsigned int)rtpTimestampRate;
- (bool)rtxEnabled;
- (void)setAccessNetworkType:(int)arg1;
- (void)setCaptureSource:(int)arg1;
- (void)setCodecType:(long long)arg1;
- (void)setColorInfo:(id)arg1;
- (void)setCustomHeight:(unsigned long long)arg1;
- (void)setCustomWidth:(unsigned long long)arg1;
- (void)setCvoExtensionID:(unsigned long long)arg1;
- (void)setEnableCVO:(bool)arg1;
- (void)setEncoderBitrateAveragingInterval:(unsigned int)arg1;
- (void)setEncoderUsage:(int)arg1;
- (void)setEncodingMode:(int)arg1;
- (void)setFecEnabled:(bool)arg1;
- (void)setFecHeaderV1Enabled:(bool)arg1;
- (void)setFramerate:(unsigned long long)arg1;
- (void)setIsFecGeneratorEnabled:(bool)arg1;
- (void)setIsIPv6:(bool)arg1;
- (void)setKeyFrameInterval:(unsigned long long)arg1;
- (void)setLtrAckFeedbackType:(int)arg1;
- (void)setMaxEncoderPixels:(unsigned long long)arg1;
- (void)setMaxSupportedTemporalLayers:(unsigned int)arg1;
- (void)setMediaControlInfoGenerator:(void*)arg1;
- (void)setMediaController:(id)arg1;
- (void)setMinKeyFrameGenerationIntervalInSeconds:(double)arg1;
- (void)setMode:(int)arg1;
- (void)setParameterSets:(unsigned int)arg1;
- (void)setPixelFormat:(unsigned int)arg1;
- (void)setProfileLevel:(id)arg1;
- (void)setQualityIndex:(unsigned int)arg1;
- (void)setRecommendedMTU:(unsigned long long)arg1;
- (void)setReinitEncoderOnFrameSizeChangeEnabled:(bool)arg1;
- (void)setRemoteIDSParticipantID:(unsigned long long)arg1;
- (void)setReportingAgent:(struct opaqueRTCReporting { }*)arg1;
- (void)setReportingClientType:(int)arg1;
- (void)setReportingParentID:(int)arg1;
- (void)setRtpTimestampRate:(unsigned int)arg1;
- (void)setRtxEnabled:(bool)arg1;
- (void)setSetupBWEstimationOptionWithFeatureString:(bool)arg1;
- (void)setSframeCryptor:(struct tagVCCryptor { }*)arg1;
- (void)setStatisticsCollector:(id)arg1;
- (void)setStreamCount:(int)arg1;
- (void)setTemporalScalingEnabled:(bool)arg1;
- (void)setTilesPerFrame:(int)arg1;
- (void)setTxMaxBitrate:(unsigned long long)arg1;
- (void)setTxMinBitrate:(unsigned long long)arg1;
- (void)setUseInBandFec:(bool)arg1;
- (void)setUseRateControl:(bool)arg1;
- (void)setVideoPayload:(int)arg1;
- (void)setVideoPriorityPointer:(void *)arg1; // needs 1 arg types, found 2: _Atomic /* Warning: Unrecognized filer type: '' using 'void*' */ void**, unsigned char
- (void)setVideoResolution:(long long)arg1;
- (void)setVideoSource:(int)arg1;
- (bool)setupBWEstimationOptionWithFeatureString;
- (struct tagVCCryptor { }*)sframeCryptor;
- (id)statisticsCollector;
- (struct tagVCVideoTransmitterStreamConfig { struct tagHANDLE {} *x1; unsigned short x2; int x3; unsigned int x4; struct tagVCCryptor {} *x5; }*)streamConfigs;
- (int)streamCount;
- (bool)temporalScalingEnabled;
- (int)tilesPerFrame;
- (unsigned long long)txMaxBitrate;
- (unsigned long long)txMinBitrate;
- (bool)useInBandFec;
- (bool)useRateControl;
- (int)videoPayload;
- (_Atomic /* Warning: Unrecognized filer type: '' using 'void*' */ void**)videoPriorityPointer:(SEL)arg1;
- (long long)videoResolution;
- (int)videoSource;

@end
