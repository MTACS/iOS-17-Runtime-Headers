
@interface SGSqlEntityStore : NSObject <CSSearchableIndexDelegate> {
    SGCoalescingDropBox * _cnToSGContactsCachePendingUpdateRequests;
    id /* block */  _crLookup;
    SGSqliteDatabase * _db;
    NSMutableArray * _deallocNotifications;
    bool  _entityMigrationRequiresMergeBlobUpdate;
    NSDictionary * _entityMigrations;
    unsigned int  _entityVersion;
    bool  _executeJournals;
    SGSuggestHistory * _history;
    _Atomic bool  _identityStoreDirty;
    struct atomic_flag { 
        _Atomic bool _Value; 
    }  _isClosed;
    bool  _isEphemeral;
    SGJournal * _journal;
    SGKeyValueCacheManager * _kvCacheManager;
    id  _lockStateNotificationRegistrationToken;
    unsigned long long  _lostMessageOverflow;
    SGBloomFilter * _messageRecipients;
    NSMutableOrderedSet * _otherDetailsWithNoContact;
    unsigned long long  _parentMessagesLimit;
    NSObject<OS_dispatch_queue> * _precomputationQueue;
    NSSet * _prematchedContactIdentifiers;
    _PASLock * _recentlyDeletedEmailKeys;
    unsigned long long  _serializedContactsLimit;
    SGSGtoCNContactsCacheUpdateAdapter * _sgToCNContactsCacheUpdateAdapter;
    SGMIFeatureStore * _sgmiFeatureStore;
    SGSqliteDatabaseSharedLock * _sharedWriteLock;
    SGSqliteDatabase * _snippetDb;
    NSString * _snippetDbPath;
    SGDatabaseJournal * _snippetsJournal;
    NSDictionary * _snippetsMigrations;
    unsigned int  _snippetsVersion;
    SGSpotlightContactsAdapter * _spotlightContactsAdapter;
    _Atomic int  _spotlightReindexCount;
    NSObject<OS_dispatch_queue> * _spotlightReindexQueue;
    bool  _waitForMigrations;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isEphemeral;
@property (readonly) SGKeyValueCacheManager *kvCacheManager;
@property (readonly) SGSGtoCNContactsCacheUpdateAdapter *sgToCNContactsCacheUpdateAdapter;
@property (readonly) SGSpotlightContactsAdapter *spotlightContactsAdapter;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool waitForMigrations;

+ (id)_cachedVIPEmailAddresses;
+ (id)_deserializeDateComponents:(id)arg1;
+ (id)_fieldValuesClassWhitelist;
+ (id)_initializeDatabaseNolock:(id)arg1 withProtection:(bool)arg2 sharedLock:(id)arg3 newDatabaseCreated:(bool*)arg4;
+ (id)_recreateCorruptDatabase:(id)arg1 sharedLock:(id)arg2 withProtection:(bool)arg3;
+ (id)_serializeDate:(id)arg1;
+ (void)addPathToFutureDbSchemas:(id)arg1;
+ (bool)canStoreEventsForAccountType:(id)arg1;
+ (void)clearMigrationCompletedForPaths;
+ (id)cnContactIdentifiersForContact:(id)arg1;
+ (id)cnContactIdentifiersSpotlightQueryStringForContact:(id)arg1;
+ (bool)contactContainsEphemeralId:(id)arg1;
+ (id)defaultHarvestStore;
+ (id)defaultPath;
+ (id)defaultPathCreatingSuggestionsDirectoryIfNeeded:(bool)arg1;
+ (id)defaultSnippetPath;
+ (id)defaultStore;
+ (void)deletePreparedSqlStoreInMemory;
+ (id)escapeLike:(id)arg1;
+ (id)globPrefix:(id)arg1;
+ (id)initializeDatabase:(id)arg1 withProtection:(bool)arg2 sharedLock:(id)arg3 newDatabaseCreated:(bool*)arg4;
+ (bool)isEphemeralIdentifier:(long long)arg1;
+ (id)journalNameForDbPath:(id)arg1;
+ (id)likePrefix:(id)arg1;
+ (bool)pathHasFutureDbSchema:(id)arg1;
+ (void)prepareSqlStoreInMemory;
+ (void)prepareSqlStoreInMemoryByClearingExistingStore:(id)arg1;
+ (void)releaseInstanceAndWaitForDealloc:(id*)arg1;
+ (void)setCachedVIPEmailAddresses:(id)arg1;
+ (id)sqlStoreInMemory;
+ (id)sqlStoreWithEntityDbPath:(id)arg1 snippetDbPath:(id)arg2 isEphemeral:(bool)arg3 executeJournals:(bool)arg4;
+ (id)sqlStoreWithEntityDbPath:(id)arg1 snippetDbPath:(id)arg2 isEphemeral:(bool)arg3 sharedLock:(id)arg4 executeJournals:(bool)arg5;
+ (id)sqlStoreWithEntityDbPathNoMigrate:(id)arg1 snippetDbPath:(id)arg2 isEphemeral:(bool)arg3 executeJournals:(bool)arg4;
+ (id)storeWithDefaultLocationAndExecuteJournals:(bool)arg1;

- (void).cxx_destruct;
- (void)_addIndexingTagsTo:(id)arg1;
- (void)_addIndexingTagsToParent:(id)arg1;
- (void)_addLocations:(id)arg1 toEntityWriteDictionary:(id)arg2;
- (void)_addStringToNoContactsCache:(id)arg1;
- (void)_addTimeRange:(id)arg1 toEntityWriteDictionary:(id)arg2;
- (bool)_analyzeMergeBlobsIncremental:(id)arg1;
- (void)_clearPendingJobs;
- (id)_computeBlobsRaw:(id*)arg1;
- (id)_computePseudoContactContentHash:(id)arg1 contactDetails:(id)arg2;
- (id)_contactForMasterEntityId:(id)arg1 withSnippets:(bool)arg2 filterConfirmRejectDetails:(bool)arg3;
- (id)_contactIdForInteractionContactIdentifierMatch:(id)arg1;
- (void)_contactIdsForContactDetailMatches:(id)arg1 detailContactIds:(id)arg2 socialProfileContactIds:(id)arg3;
- (void)_contactIdsForContactNameMatches:(id)arg1 strongNameIds:(id)arg2 weakNameIds:(id)arg3;
- (id)_contactsForMasterEntityIds:(id)arg1 withSnippets:(bool)arg2;
- (void)_contentWriteEnrichmentToDb:(id)arg1;
- (bool)_createEntityFTSTableWithName:(id)arg1;
- (id)_deleteChildEntitiesByRecordIdsInTable:(id)arg1;
- (void)_deleteContactDetailsByRecordIds:(id)arg1;
- (id)_deleteEntitiesByDuplicateKeyNoRecurse:(id)arg1;
- (void)_deleteEventsByRecordIds:(id)arg1;
- (void)_deleteIfNoSpotlightReferences:(id)arg1 addToRecentlyDeletedCache:(bool)arg2;
- (id)_deleteMessageMetadataByDuplicateKeyNoRecurse:(id)arg1;
- (void)_deleteOldInteractionContactDetails:(id)arg1 currentIdentifiers:(id)arg2;
- (void)_deleteOrphanedItems;
- (void)_deleteRemindersByRecordIds:(id)arg1;
- (void)_deltaSyncContactsWithChangeHistory:(id)arg1;
- (id)_derefChildrenOf:(id)arg1;
- (id)_deserializeRange:(id)arg1;
- (void)_dumpTable:(id)arg1 columns:(id)arg2 limitTo:(int)arg3;
- (id)_duplicateKeysWithZeroSpotlightReferencesFromRecordIds:(id)arg1;
- (void)_emitChangeNotificationForEnrichment:(id)arg1;
- (void)_emitChangeNotifications:(id)arg1;
- (void)_enqueueBatchOfCNContactIds:(id)arg1;
- (void)_enumerateContactsForMasterEntityIds:(id)arg1 withSnippets:(bool)arg2 filterConfirmRejectDetails:(bool)arg3 usingBlock:(id /* block */)arg4;
- (void)_enumerateContactsForMasterEntityIds:(id)arg1 withSnippets:(bool)arg2 usingBlock:(id /* block */)arg3;
- (id)_filterOutAllButAcceptedWithUpdatedFields:(id)arg1;
- (id)_filterOutCancelledEvents:(id)arg1;
- (id)_filterOutOlderVersionsOfPseudoEvents:(id)arg1;
- (void)_fullSyncContactsWithStore:(id)arg1;
- (void)_hashAttachedPseudoContacts:(id)arg1;
- (id)_hashWithDuplicateKeysMatchingTags:(id)arg1;
- (bool)_isBlobAnalysisQueueEmpty;
- (bool)_isIdentityStoreDirty;
- (bool)_isStringInNoContactsCache:(id)arg1;
- (void)_joinIncompleteIdentityEmailWithOthersOfItsIlk:(id)arg1 name:(id)arg2 recordId:(id)arg3;
- (void)_joinIncompleteIdentityPhonesWithOthersOfTheirIlk:(id)arg1 name:(id)arg2 recordId:(id)arg3;
- (void)_joinIncompleteIdentitySocialProfilesWithOthersOfTheirIlk:(id)arg1 name:(id)arg2 recordId:(id)arg3;
- (id)_journalEntryFromEntity:(id)arg1;
- (id)_journalEntryFromReminderEntity:(id)arg1;
- (id)_labelIdentityBlobs:(id)arg1;
- (void)_linkNamelessEmailsIfAppropriate:(struct graph_t { unsigned int x1; unsigned int x2; struct _vertex_t {} *x3; }*)arg1 nameToVertex:(id)arg2 disjointSets:(struct DisjointSetHandle { }*)arg3 edges:(id)arg4;
- (void)_linkNamelessPhonesIfAppropriate:(struct graph_t { unsigned int x1; unsigned int x2; struct _vertex_t {} *x3; }*)arg1 nameToVertex:(id)arg2 disjointSets:(struct DisjointSetHandle { }*)arg3 edges:(id)arg4;
- (void)_linkNamelessSocialProfilesIfAppropriate:(struct graph_t { unsigned int x1; unsigned int x2; struct _vertex_t {} *x3; }*)arg1 nameToVertex:(id)arg2 disjointSets:(struct DisjointSetHandle { }*)arg3 edges:(id)arg4;
- (id)_loadIdentityBlobs;
- (id)_loadMessageByKey:(id)arg1;
- (id)_loadReimportRequestsWithWhereClause:(id)arg1;
- (void)_logConfirmPercentWithConfirmCount:(double)arg1 rejectCount:(double)arg2 domain:(id)arg3 suffix:(id)arg4;
- (id)_makeBlobsFromConnectedComponents:(id)arg1 edges:(id)arg2;
- (void)_markIdentityStoreClean;
- (void)_markIdentityStoreDirty;
- (void)_markRecordsLostIfNoSpotlightReferences:(id)arg1;
- (id)_matchableUTF8TokenRangesInMatchExpression:(id)arg1;
- (unsigned long long)_minEntityIdFromMinEntityId:(unsigned long long)arg1 withContactIdentifiers:(id)arg2;
- (id)_popBatchOfCNContactIds;
- (id)_popMergeBlobForAnalysis;
- (long long)_popQueuedSerializedContactId;
- (bool)_prepareToCopyFrom:(id)arg1 toNewTableNamed:(id)arg2;
- (bool)_processBatchOfSerializedContactJobs;
- (struct _PASDBIterAction_ { bool x1; })_processContactMatchWithContacts:(id)arg1 matches:(id)arg2 limit:(long long)arg3 masterEntityId:(id)arg4 detailEntityId:(id)arg5 contactEntityId:(id)arg6 matchinfoData:(id)arg7 tokens:(id)arg8 requireName:(bool)arg9;
- (void)_prunePseudoContactGeneratingEmails:(id)arg1;
- (id)_queryForAllContactsWithExtractionDates;
- (id)_queryForAllContactsWithLimit;
- (id)_rankSGContacts:(id)arg1 bySimilarityToContact:(id)arg2;
- (id)_recordIdsFromRemovingSpotlightReferencesWithBundleIdentifier:(id)arg1 uniqueIdentifiers:(id)arg2;
- (void)_recordPseudoContactsWithDeletedDetailsInTable:(id)arg1 deletedChildrenTable:(id)arg2;
- (void)_removeCorruptionMarker;
- (void)_removeSnippetsForEmails:(id)arg1;
- (bool)_renameTable:(id)arg1 to:(id)arg2;
- (void)_reportDbStatsBackground;
- (bool)_runInitMigrationTasks:(id)arg1 noMigrate:(bool)arg2;
- (float)_scoreContactDetail:(id)arg1;
- (double)_scoreSGContact:(id)arg1 bySimilarityToContact:(id)arg2 cnContactFullname:(id)arg3;
- (id)_selectingDomainsForDomainIdentifier:(id)arg1;
- (id)_serializeRange:(id)arg1;
- (bool)_shouldContinueReindex:(int)arg1;
- (void)_slowCopyFromTable:(id)arg1 toTable:(id)arg2 startingAtEntityId:(unsigned long long)arg3;
- (bool)_tombstoneExistsForBundleIdentifier:(id)arg1;
- (void)_trimSerializedContacts;
- (id)_uniqueGoodDetailMatchFrom:(id)arg1 toDetails:(id)arg2 nonUnique:(bool*)arg3;
- (struct _PASDBIterAction_ { bool x1; })_updateURLs:(id)arg1 stmt:(id)arg2;
- (void)_writeContactDetails:(id)arg1;
- (void)_writeContactEntityToJournal:(id)arg1;
- (long long)_writeEnrichmentToDb:(id)arg1;
- (void)_writeEnrichmentToSnippetsDb:(id)arg1;
- (void)_writeEntityParentageFor:(id)arg1 entityId:(long long)arg2;
- (void)_writeEventEntitiesToJournal:(id)arg1;
- (void)_writeEventEntityToJournal:(id)arg1;
- (void)_writeFTSTermsForEnrichment:(id)arg1 entityId:(long long)arg2;
- (void)_writeLabeledBlobs:(id)arg1 deletedMasterEntityIds:(id)arg2;
- (void)_writeMergeBlobSnapshotForAnalysis:(id)arg1;
- (long long)_writeMessageEntityToDb:(id)arg1;
- (void)_writeMessageEntityToSnippetsDb:(id)arg1;
- (long long)_writeOneEntityToDb:(id)arg1;
- (void)_writeReminderEntitiesToJournal:(id)arg1;
- (void)addDeallocNotification:(id /* block */)arg1;
- (void)addInterdictFrom:(id)arg1 with:(id)arg2;
- (bool)addSpotlightReferenceToEmailIfFullyDownloaded:(id)arg1 withBundleIdentifier:(id)arg2 uniqueIdentifier:(id)arg3 domainIdentifier:(id)arg4;
- (void)addSpotlightReferenceToEmailRecordId:(id)arg1 withBundleIdentifier:(id)arg2 uniqueIdentifier:(id)arg3 domainIdentifier:(id)arg4;
- (id)allContactsMasterEntityIdsLimitedTo:(unsigned long long)arg1;
- (id)allContactsWithEntityType:(unsigned long long)arg1;
- (id)allContactsWithExtractionStartDate:(id)arg1 extractionEndDate:(id)arg2;
- (id)allContactsWithSnippets:(bool)arg1 limitTo:(unsigned long long)arg2;
- (id)allDeliveriesWithLimit:(unsigned long long)arg1;
- (id)allEntitiesOfType:(long long)arg1 limitedTo:(unsigned long long)arg2;
- (id)allEntitiesOfType:(long long)arg1 limitedTo:(unsigned long long)arg2 onlyMLExtractions:(bool)arg3;
- (id)allPseudoContacts;
- (id)allRemindersLimitedTo:(unsigned long long)arg1;
- (void)analyzeDatabase;
- (void)analyzeMergeBlobs:(id)arg1;
- (bool)anyEmailAddressIsSignificant:(id)arg1;
- (bool)anyHandleIsSignificant:(id)arg1;
- (void)applyCappingPolicy:(id)arg1 byDiscardingTokensCounts:(id)arg2 withMargin:(float)arg3;
- (bool)areSubModelsEmpty;
- (id)batch:(id /* block */)arg1;
- (id)batchOf:(unsigned long long)arg1 contactsStartingAtEntityId:(unsigned long long)arg2;
- (void)bindCheckContactRow:(id)arg1 isMe:(bool)arg2;
- (void)bindStatementsForCommit:(id)arg1 storageEvent:(id)arg2;
- (long long)checkExistsEventForDuplicateKey:(id)arg1;
- (long long)checkExistsSaliencyForMessageId:(id)arg1;
- (id)childrenFromParentKey:(id)arg1;
- (void)clearAllTables;
- (void)clearAllTombstonesForSpotlightReferencesIf:(id /* block */)arg1;
- (void)clearCaches;
- (void)clearChangeHistory:(id)arg1;
- (long long)clearDatabase:(id)arg1;
- (bool)clearDatabases;
- (void)clearMailIntelligence;
- (void)clearMailIntelligenceSaliencyDetection;
- (void)clearMasterEntityCache;
- (void)clearNoContactsCache;
- (void)clearSaliencyTable;
- (void)closeDatabases;
- (id)cnContactMatchesForRecordId:(id)arg1 found:(bool*)arg2;
- (id)columnQueryPrefixSelect;
- (long long)commitContactDetail:(id)arg1;
- (long long)commitEvent:(id)arg1;
- (unsigned long long)commitExtractionInfo:(id)arg1;
- (void)commitNaiveBayesModel:(id)arg1 probabilityFeatureName:(long long)arg2;
- (void)commitNaiveBayesModel:(id)arg1 probabilityFeatureName:(long long)arg2 updateDate:(id)arg3;
- (long long)commitSaliency:(id)arg1;
- (long long)commitSpotlightMapping:(id)arg1 bundleIdentifier:(id)arg2 domainIdentifier:(id)arg3 uniqueIdentifier:(id)arg4;
- (long long)commitStorageLocation:(id)arg1;
- (long long)commitStorageLocation:(id)arg1 withEventId:(long long)arg2;
- (long long)commitStorageReminder:(id)arg1;
- (long long)commitTag:(id)arg1;
- (id)computeBlobs;
- (long long)configureMigratorThenMigrateToVersion:(unsigned long long)arg1;
- (bool)confirm:(bool)arg1 orRejectContactByRecordID:(id)arg2 error:(id*)arg3;
- (bool)confirmContactByRecordID:(id)arg1 error:(id*)arg2;
- (bool)confirmContactDetailByRecordID:(id)arg1 error:(id*)arg2;
- (bool)confirmEventByRecordId:(id)arg1 error:(id*)arg2;
- (void)confirmFieldValues:(id)arg1 forEntity:(id)arg2;
- (bool)confirmRealtimeContact:(id)arg1 error:(id*)arg2;
- (bool)confirmRealtimeEvent:(id)arg1 error:(id*)arg2;
- (bool)confirmReminderByRecordId:(id)arg1 error:(id*)arg2;
- (bool)confirmStoredEvent:(id)arg1 error:(id*)arg2;
- (bool)confirmStoredReminder:(id)arg1 error:(id*)arg2;
- (id)confirmedFieldValuesForEntity:(id)arg1;
- (id)confirmedFieldValuesForEvent:(id)arg1;
- (id)contactDetailEntityIdForDuplicateKey:(id)arg1;
- (long long)contactDetailPrimaryKeyForDuplicateKey:(id)arg1;
- (id)contactIdsMergedWithMasterEntityId:(id)arg1;
- (bool)contactIsDisplayable:(id)arg1;
- (bool)contactIsSignificant:(id)arg1;
- (bool)contactIsSignificant:(id)arg1 usingCoreRecents:(bool)arg2;
- (bool)contactIsSignificantOrSignificanceIsDisabled:(id)arg1;
- (bool)contactIsSignificantOrSignificanceIsDisabled:(id)arg1 usingCoreRecents:(bool)arg2;
- (long long)contactMatchedRecordTypeFromEntityType:(long long)arg1;
- (long long)contactMatchedRecordTypeFromIdentityKeyType:(unsigned long long)arg1;
- (id)contactsWithIdentifiers:(id)arg1;
- (bool)corruptionMarkerPresent;
- (id)curatedRecordIds;
- (bool)databasecheck_BrokenEntityIDReferences;
- (bool)databasecheck_IntegrityCheck;
- (bool)databasecheck_contactMergeGroupConsistency;
- (id)dbHandleForTesting;
- (id)dbStats;
- (void)dealloc;
- (void)deleteAllCNContactMatches;
- (void)deleteAllCNContactMatchesForEntityID:(long long)arg1;
- (void)deleteAllCNContactMatchesForIdSet:(id)arg1;
- (void)deleteAllReimportRequestsOlderThanDate:(id)arg1;
- (void)deleteByRecordId:(id)arg1;
- (void)deleteCNContactMatchForContactId:(id)arg1;
- (void)deleteCompletedReimportRequests;
- (void)deleteEntitiesByDuplicateKey:(id)arg1 emitChangeNotifications:(bool)arg2;
- (void)deleteEntitiesByDuplicateKey:(id)arg1 preserveEventConfirmationHistory:(bool)arg2 emitChangeNotifications:(bool)arg3;
- (void)deleteInteractionEntitiesExceedingLimit:(id)arg1 withSuspensionHandler:(id /* block */)arg2;
- (void)deleteInteractionsWithBundleId:(id)arg1;
- (void)deleteInteractionsWithBundleId:(id)arg1 groupIdentifiers:(id)arg2;
- (void)deleteInteractionsWithBundleId:(id)arg1 identifiers:(id)arg2;
- (void)deleteItemsWithEntityTag:(id)arg1;
- (void)deleteItemsWithEntityTag:(id)arg1 preserveEventConfirmationHistory:(bool)arg2;
- (void)deleteMailIntelligenceForMessageIds:(id)arg1;
- (void)deleteMessages:(id)arg1;
- (void)deleteMessagesByDuplicateKey:(id)arg1;
- (void)deleteNaiveBayesModelForProbabilityFeatureName:(long long)arg1;
- (void)deleteSerializedContactForId:(long long)arg1;
- (void)deleteSerializedContactsForIdSet:(id)arg1;
- (void)deleteSpotlightReferencesWithBundleIdentifier:(id)arg1;
- (void)deleteSpotlightReferencesWithBundleIdentifier:(id)arg1 domainIdentifiers:(id)arg2;
- (void)deleteSpotlightReferencesWithBundleIdentifier:(id)arg1 uniqueIdentifiers:(id)arg2;
- (void)deleteSpotlightReferencesWithNoBundleIdentifier;
- (void)deleteTokensForDeletedEmailAddresses:(id)arg1;
- (bool)deleteURLsFromBundleIdentifier:(id)arg1;
- (bool)deleteURLsFromBundleIdentifier:(id)arg1 documentIdentifiers:(id)arg2;
- (bool)deleteURLsFromBundleIdentifier:(id)arg1 groupIdentifierGlobs:(id)arg2;
- (bool)deleteURLsOlderThanDate:(id)arg1 deletionCount:(long long*)arg2;
- (void)deleteValueForKey:(id)arg1;
- (id)displayableEntities:(id)arg1;
- (id)domainIdentifierForSpotlightReferenceForBundleIdentifier:(id)arg1 uniqueIdentifier:(id)arg2;
- (id)dumpTables:(id)arg1 columns:(id)arg2;
- (id)duplicateKeysFromMailMessageKeys:(id)arg1;
- (id)duplicateKeysFromRecordIds:(id)arg1;
- (id)duplicateKeysMatchingAnyEventHash:(id)arg1;
- (id)duplicateKeysMatchingAnyReminderHash:(id)arg1;
- (id)duplicateKeysMatchingAnyTag:(id)arg1;
- (id)duplicateKeysMatchingInteractionBundleId:(id)arg1 andTags:(id)arg2;
- (id)emailsPendingVerification;
- (unsigned long long)entityCount;
- (id)entityFromSqlResult:(struct sqlite3_stmt { }*)arg1;
- (id)entityFromSqlResult:(struct sqlite3_stmt { }*)arg1 withSnippets:(bool)arg2;
- (id)entityKeyCountsForEntityType:(long long)arg1 startDate:(id)arg2 endDate:(id)arg3;
- (long long)entityTypeFromIdentityKeyType:(unsigned long long)arg1;
- (bool)entityWantsFullDownload:(id)arg1;
- (void)enumerateAllContactsWithExtractionStartDate:(id)arg1 extractionEndDate:(id)arg2 withSnippets:(bool)arg3 limitTo:(unsigned long long)arg4 usingBlock:(id /* block */)arg5;
- (void)enumerateAllContactsWithSnippets:(bool)arg1 limitTo:(unsigned long long)arg2 usingBlock:(id /* block */)arg3;
- (void)enumerateContactsByMasterEntityQuery:(id)arg1 withSnippets:(bool)arg2 limit:(unsigned long long)arg3 bindings:(id /* block */)arg4 usingBlock:(id /* block */)arg5;
- (id)eventFromSqlResult:(struct sqlite3_stmt { }*)arg1;
- (bool)eventIsCancelled:(id)arg1;
- (void)filterOutRejectedDetailsFromContact:(id)arg1;
- (id)filterOutUndisplayableEntities:(id)arg1;
- (long long)fixupVersionMismatch;
- (void)forceBlobSync;
- (id)getAllLinks;
- (id)getDoubleNSNumberForKey:(id)arg1;
- (id)getForKey:(id)arg1 binder:(id /* block */)arg2;
- (id)getInt64NSNumberForKey:(id)arg1;
- (long long)getMaxEntityId;
- (id)getNSDateForKey:(id)arg1;
- (id)getNSStringForKey:(id)arg1;
- (id)getNewBlobsIfChanged;
- (id)getReminder:(long long)arg1;
- (id)getReminderWithDuplicateKey:(id)arg1;
- (id)getReminderWithRecordId:(id)arg1;
- (id)getSGMIStoredAddresses;
- (id)getUnsubscriptionOpportunitiesSuggestionsDenyListForField:(long long)arg1;
- (id)getViolationsToTokenCountsPolicy:(id)arg1;
- (void)handleDeviceLockStateEvent:(int)arg1;
- (bool)hasSpotlightReferenceForBundleIdentifier:(id)arg1 uniqueIdentifier:(id)arg2;
- (id)highlyDiscriminantTokensForFeature:(long long)arg1 minCount:(unsigned long long)arg2 minRatio:(double)arg3;
- (id)historyForTesting;
- (bool)historyHasContact:(id)arg1;
- (double)incStatsCounterWithKey:(id)arg1;
- (double)incStatsCounterWithKey:(id)arg1 byValue:(double)arg2;
- (void)incrementInt64NSNumber:(id)arg1 forKey:(id)arg2;
- (id)initForDbStatsOnlyWithError:(id*)arg1;
- (id)initForMigratorTestWithEntityDb:(id)arg1 snippetDb:(id)arg2;
- (id)initForRawDatabaseAccessWithEntityPath:(id)arg1 snippetsPath:(id)arg2 error:(id*)arg3;
- (void)initRefreshSuggestionsContactDropBox;
- (id)initWithEntityDbPath:(id)arg1 snippetDbPath:(id)arg2 isEphemeral:(bool)arg3 sharedLock:(id)arg4 executeJournals:(bool)arg5 noMigrate:(bool)arg6;
- (long long)insertEvent:(id)arg1;
- (void)insertEventTagsAndLocations:(id)arg1 primaryKey:(long long)arg2;
- (long long)insertSaliency:(id)arg1;
- (bool)isEphemeral;
- (bool)isRecentlyDeleted:(id)arg1;
- (id)journal;
- (id)kvCacheManager;
- (id)languageToUpdateEntityFTSTo;
- (struct SGUnixTimestamp_ { double x1; })lastSeenTimestampForKey:(id)arg1;
- (void)link:(id)arg1 to:(id)arg2 type:(unsigned int)arg3 strength:(double)arg4;
- (id)loadAllContactDetailsForRecordId:(id)arg1;
- (id)loadAllContactDetailsFromTableForRecordId:(id)arg1;
- (id)loadAllContactDetailsFromTableForRecordId:(id)arg1 type:(unsigned long long)arg2;
- (id)loadAllContactDetailsWithWhereClause:(id)arg1 onPrep:(id /* block */)arg2 dedupeAgainst:(id)arg3;
- (id)loadAllPrecomputedContactMatches;
- (id)loadAllReimportRequests;
- (id)loadAllSerializedContacts;
- (id)loadCNContactMatchesForContact:(id)arg1 andGetMaxEntityId:(long long*)arg2;
- (id)loadContactDetailsForRecordId:(id)arg1 type:(unsigned long long)arg2;
- (id)loadContactDetailsWithWhereClause:(id)arg1 onPrep:(id /* block */)arg2 type:(unsigned long long)arg3 dedupeAgainst:(id)arg4 recordId:(id)arg5;
- (id)loadContactForStorageContact:(id)arg1 usingSerializedContactCache:(bool)arg2;
- (id)loadDuplicateKeyByRecordId:(id)arg1;
- (id)loadEntitiesByEntityKey:(id)arg1 entityType:(long long)arg2 resolveDuplicates:(id /* block */)arg3;
- (id)loadEntitiesFoundInEmail:(id)arg1 entityType:(long long)arg2;
- (id)loadEntityByKey:(id)arg1;
- (id)loadEntityByRecordId:(id)arg1;
- (id)loadEventByDuplicateKey:(id)arg1;
- (id)loadEventByKeyForOldCodePathTesting:(id)arg1;
- (id)loadEventByRecordId:(id)arg1;
- (id)loadEventForDuplicateKey:(id)arg1;
- (id)loadEventForPrimaryKey:(long long)arg1;
- (id)loadEventForRecordId:(id)arg1;
- (id)loadEventsWithInteractionIdentifiers:(id)arg1 fromBundleIdentifier:(id)arg2;
- (id)loadExtractionInfoForPrimaryKey:(long long)arg1;
- (id)loadFullDownloadRequestBatch:(unsigned long long)arg1;
- (id)loadInterdicts;
- (id)loadMessagesToRefresh;
- (id)loadOriginByRecordId:(id)arg1;
- (id)loadReminderByKey:(id)arg1;
- (id)loadReminderByKeyOld:(id)arg1;
- (id)loadReminderByRecordId:(id)arg1;
- (id)loadReminderByRecordIdOld:(id)arg1;
- (id)loadSerializedContactForId:(long long)arg1;
- (id)loadSourceKeyByRecordId:(id)arg1;
- (id)loadStatsCounterWithKey:(id)arg1;
- (id)loadStorageContactByRecordId:(id)arg1;
- (id)loadStorageContactByRecordId:(id)arg1 error:(id*)arg2;
- (id)loadTagForPrimaryKey:(long long)arg1;
- (id)loadUnexecutedReimportRequests;
- (id)loadUnqueriedReimportRequests;
- (id)loadUnseenReimportItemsForRequest:(unsigned long long)arg1;
- (void)logConfirmPercentAfterContactConfirmation;
- (void)logConfirmPercentAfterContactDetailConfirmation;
- (void)logConfirmPercentAfterContactDetailRejection;
- (void)logConfirmPercentAfterContactRejection;
- (id)mailIntelligenceStagedLogsForMessageId:(id)arg1;
- (id)makeInterdictsForBlob:(id)arg1 withContactStore:(id)arg2;
- (void)markEntityAsDupeByRecordId:(id)arg1;
- (void)markLostSpotlightReferencesWithBundleIdentifier:(id)arg1 uniqueIdentifiers:(id)arg2;
- (void)markMailIntelligenceStagedLogsAsLoggedAndClearLogPayloadForMessageId:(id)arg1;
- (void)markMessagesFound:(id)arg1;
- (void)markMessagesLost:(id)arg1;
- (void)markMessagesUndisplayablyLost:(id)arg1;
- (void)markReimportItemAsSeenByReceiverWithBundleId:(id)arg1 uniqueId:(id)arg2;
- (void)markReimportItemsAsSeenByReceiverWithBundleId:(id)arg1 items:(id)arg2;
- (void)markReimportRequestAsExecutedWithRequestId:(unsigned long long)arg1;
- (id)masterEntityIDsForMasterEntityQuery:(id)arg1 bindings:(id /* block */)arg2;
- (id)masterEntityIdForContactOrContactDetailRecord:(id)arg1;
- (unsigned long long)maxKnownDbVersion;
- (bool)mayHaveSentMessageToEmail:(id)arg1;
- (bool)mayHaveSentMessageToHandle:(id)arg1;
- (id)messageIdForBundleIdentifier:(id)arg1 uniqueIdentifier:(id)arg2;
- (id)messageIdsForBundleIdentifier:(id)arg1 domainIdentifierGlobs:(id)arg2 limit:(unsigned long long)arg3;
- (id)messageIdsForBundleIdentifier:(id)arg1 limit:(unsigned long long)arg2;
- (id)messageIdsForBundleIdentifier:(id)arg1 uniqueIdentifiers:(id)arg2;
- (long long)migrate;
- (long long)migrateDatabases;
- (long long)migrateToVersion:(unsigned long long)arg1;
- (bool)migrationNeeded;
- (long long)migration_AddAuthorColumnIfMissing;
- (long long)migration_AddNewishTablesIfMissing;
- (long long)migration_ConvertContentAndDupKeyHashesToBlobs;
- (long long)migration_CreateFTSTableWithITS;
- (long long)migration_DeduplicateIdentityPhones;
- (long long)migration_DropMessagingTermsWithPhoneExtensions;
- (long long)migration_FixUpColumnsForDevicesWhoMissedTheImprovedLegacyMigration;
- (long long)migration_FixupMergeGroups;
- (long long)migration_MoveContentToSnippets;
- (long long)migration_RebuildIdentityTables;
- (long long)migration_RecreateFTSTableWithITS;
- (long long)migration_RemoveEntityReferencesWithoutBundleIdentifier;
- (long long)migration_addAppleMailMessageIdToEvents;
- (long long)migration_deleteEmergencyExtractions;
- (long long)migration_deleteInteractions;
- (long long)migration_deleteInternalExtractionsFromML;
- (long long)migration_deleteLegacyMessages;
- (long long)migration_deleteNilDateEvents;
- (long long)migration_deleteSerializedContacts;
- (long long)migration_newContactDetailsSchema;
- (long long)migration_newEventsSchema;
- (long long)migration_newRemindersSchema;
- (long long)migration_rebuildFTSWithDetailEntityIDDocIDs;
- (long long)migration_reimport;
- (long long)migration_separateMessageEntities;
- (long long)migration_separateMessageSnippets;
- (id)mostRecentParentKeyForDuplicateKey:(id)arg1;
- (id)naiveBayesModelQueryResultForFeature:(long long)arg1 unigramTokens:(id)arg2 bigramTokens:(id)arg3;
- (bool)needsFullSync;
- (id)nextPendingGeocode;
- (id)normalizeHandleForRecipientFilterAndRemoveFromDetailsCache:(id)arg1;
- (unsigned long long)numberOfRowsInTable:(id)arg1;
- (id)parentKeysForDuplicateKey:(id)arg1;
- (bool)performDatabaseCheck;
- (bool)performIntegrityCheckOnly;
- (id)prematchedContactIdentifiers;
- (void)prepMigrator;
- (void)preventUnsubscriptionOpportunitiesSuggestionsForField:(long long)arg1 toValues:(id)arg2;
- (bool)processContactEnrichment:(id)arg1 recordId:(id)arg2;
- (bool)processPseudoContactEntity:(id)arg1 recordId:(id)arg2;
- (void)pruneDuplicateEventExtractions:(id)arg1;
- (void)pruneEntitiesOlderThan:(struct SGUnixTimestamp_ { double x1; })arg1 suspensionHandler:(id /* block */)arg2;
- (void)pruneEntitiesOlderThan:(struct SGUnixTimestamp_ { double x1; })arg1 suspensionHandler:(id /* block */)arg2 batchSize:(unsigned long long)arg3;
- (void)pruneEntitiesOlderThanOneYearWithSuspensionHandler:(id /* block */)arg1;
- (void)pruneLostMessagesWithSource:(id)arg1 count:(unsigned long long)arg2;
- (void)pruneMailIntelligenceOlderThanOneYearWithSuspensionHandler:(id /* block */)arg1;
- (void)pruneNLEventEntitiesOlderThan:(struct SGUnixTimestamp_ { double x1; })arg1;
- (void)pruneNLEventEntitiesOlderThanTwoWeeks;
- (void)pruneReminders;
- (void)purgeTokensWhichLastUpdateWasBefore:(id)arg1;
- (bool)realtimeContactIsSignificant:(id)arg1;
- (bool)realtimeContactIsSignificantOrSignificanceIsDisabled:(id)arg1;
- (void)rebuildContactDetailsCacheWithShouldContinueBlock:(id /* block */)arg1;
- (bool)rebuildIdentityTables;
- (id)recentURLsWithLimit:(long long)arg1;
- (bool)recentsContainSomeOfEmails:(id)arg1 phoneNumbers:(id)arg2 instantMessageAddresses:(id)arg3;
- (id)recordIdForKey:(id)arg1;
- (void)refreshSuggestionsContact:(id)arg1;
- (bool)registerAndLinkIdentity:(id)arg1 recordId:(id)arg2 phones:(id)arg3 socialProfiles:(id)arg4 email:(id)arg5 curated:(bool)arg6;
- (bool)registerAndLinkIdentity:(id)arg1 recordId:(id)arg2 phones:(id)arg3 socialProfiles:(id)arg4 email:(id)arg5 curated:(bool)arg6 isSent:(bool)arg7;
- (void)registerCachePrecomputationWithCTS;
- (void)registerJournalUnlockHandler;
- (void)registerSentMailMessage:(id)arg1;
- (void)registerSentTextMessage:(id)arg1;
- (bool)registerURLFeedback:(unsigned char)arg1 absoluteURL:(id)arg2;
- (id)reimportRequestDBStats;
- (bool)reimportRequestsContainBundleIdentifier:(id)arg1 uniqueIdentifier:(id)arg2;
- (void)reindexSearchableItemsWithMinimumEntityId:(unsigned long long)arg1 searchableIndex:(id)arg2 acknowledgementHandler:(id /* block */)arg3 reindexCount:(int)arg4;
- (bool)rejectContactByRecordID:(id)arg1 error:(id*)arg2;
- (bool)rejectContactDetailByRecordID:(id)arg1 error:(id*)arg2;
- (bool)rejectEventByRecordId:(id)arg1 error:(id*)arg2;
- (id)rejectFieldValuesForRecordId:(id)arg1;
- (bool)rejectRealtimeContact:(id)arg1 error:(id*)arg2;
- (bool)rejectRealtimeEvent:(id)arg1 error:(id*)arg2;
- (bool)rejectReminderByKey:(id)arg1 error:(id*)arg2;
- (bool)rejectReminderByRecordId:(id)arg1 error:(id*)arg2;
- (bool)rejectStoredEvent:(id)arg1 error:(id*)arg2;
- (bool)rejectStoredReminder:(id)arg1 error:(id*)arg2;
- (bool)reminderAlarmTriggeredForRecordId:(id)arg1 error:(id*)arg2;
- (bool)reminderAlarmTriggeredForStorageReminder:(id)arg1 error:(id*)arg2;
- (id)reminderDuplicateKeyForEntityId:(id)arg1;
- (id)reminderEntityIdForDuplicateKey:(id)arg1;
- (id)reminderEntityIdForPrimaryKey:(long long)arg1;
- (id)reminderOriginForPrimaryKey:(long long)arg1;
- (long long)reminderPrimaryKeyForEntityId:(id)arg1;
- (id)reminderSourceKeyForDuplicateKey:(id)arg1;
- (void)removeSnippetsForEntities:(id)arg1;
- (void)removeStringFromNoContactsCache:(id)arg1;
- (void)reportDbStats;
- (void)resolveFullDownloadRequests:(id)arg1;
- (long long)runQueries:(id)arg1 forVersion:(unsigned int)arg2 inTransactionOnDb:(id)arg3;
- (long long)runQuery:(id)arg1 onDb:(id)arg2;
- (void)runWithWriteLockAcquired:(id /* block */)arg1;
- (id)saliencyForMessageId:(id)arg1;
- (void)searchableIndex:(id)arg1 reindexAllSearchableItemsWithAcknowledgementHandler:(id /* block */)arg2;
- (void)searchableIndex:(id)arg1 reindexSearchableItemsWithIdentifiers:(id)arg2 acknowledgementHandler:(id /* block */)arg3;
- (void)selectAuthoritativeDetailsForContactWithId:(long long)arg1;
- (id)selectEntityQuery:(id)arg1;
- (id)selectMigrationQueue;
- (unsigned long long)serializedContactsLimit;
- (id)serializedEntityIds;
- (void)setAllMailIntelligenceAsNotSalient;
- (void)setAllMailIntelligenceAsSalient;
- (void)setCRLookupForTesting:(id /* block */)arg1;
- (void)setDoubleNSNumber:(id)arg1 forKey:(id)arg2;
- (void)setHasFullSync;
- (void)setInt64NSNumber:(id)arg1 forKey:(id)arg2;
- (void)setLostMessageOverflow:(unsigned long long)arg1;
- (void)setMailIntelligenceStagedLogs:(id)arg1 forMessageId:(id)arg2;
- (void)setMalformedEventWhenRangeForTesting;
- (void)setNSDate:(id)arg1 forKey:(id)arg2;
- (void)setNSString:(id)arg1 forKey:(id)arg2;
- (void)setParentMessagesLimitForTesting:(unsigned long long)arg1;
- (void)setSerializedContactsLimit:(unsigned long long)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2 binder:(id /* block */)arg3;
- (id)sgToCNContactsCacheUpdateAdapter;
- (id)sgmiFeatureStore;
- (long long)skipFromZeroSchema;
- (id)snippetsDbHandleForTesting;
- (id)sortedSaliencyResultsRestrictedToMailboxTypes:(id)arg1 mailboxIds:(id)arg2 receivedOnOrAfter:(id)arg3 ascending:(bool)arg4 limit:(unsigned long long)arg5;
- (id)sortedUnsubscriptionOpportunitiesForField:(long long)arg1 limit:(unsigned long long)arg2;
- (id)sortedUnsubscriptionOpportunitiesForField:(long long)arg1 minCount:(unsigned long long)arg2 minScore:(double)arg3 limit:(unsigned long long)arg4;
- (id)splitBlob:(id)arg1 withInterdicts:(id)arg2 edges:(id)arg3 curatedRecordIds:(id)arg4;
- (id)splitNeededFor:(id)arg1 withInterdicts:(id)arg2 curatedRecordIds:(id)arg3;
- (id)spotlightContactsAdapter;
- (id)spotlightUniqueIdentifierForBundleIdentifier:(id)arg1 messageId:(id)arg2;
- (void)startJournaling;
- (void)stopJournaling;
- (id)storageContactByKey:(id)arg1;
- (id)storageContactByMasterEntityId:(long long)arg1 withSnippets:(bool)arg2;
- (id)storageContactByRecordId:(id)arg1 withSnippets:(bool)arg2;
- (id)storageLocationWithPrimaryKey:(long long)arg1;
- (void)storeReimportItems:(id)arg1 requestId:(unsigned long long)arg2;
- (unsigned long long)storeReimportRequest:(id)arg1;
- (void)storeStatsCounterWithKey:(id)arg1 value:(double)arg2;
- (id)subModelsStats;
- (id)suggestContactByIdentityKey:(id)arg1 parentKey:(id)arg2;
- (id)suggestContactByKey:(id)arg1;
- (id)suggestContactByRecordId:(id)arg1;
- (id)suggestContactByRecordId:(id)arg1 withSnippets:(bool)arg2 filterConfirmRejectDetails:(bool)arg3;
- (id)suggestContactMatchesByContactDetailTag:(id)arg1;
- (id)suggestContactMatchesByContactDetailTag:(id)arg1 matchType:(long long)arg2;
- (id)suggestContactMatchesByEmailAddress:(id)arg1;
- (id)suggestContactMatchesByEmailAddress:(id)arg1 isMaybe:(bool)arg2 onlySignificant:(bool)arg3;
- (id)suggestContactMatchesByPhoneNumber:(id)arg1;
- (id)suggestContactMatchesByPhoneNumber:(id)arg1 isMaybe:(bool)arg2 onlySignificant:(bool)arg3;
- (id)suggestContactMatchesBySocialProfile:(id)arg1;
- (id)suggestContactMatchesBySocialProfile:(id)arg1 isMaybe:(bool)arg2 onlySignificant:(bool)arg3;
- (id)suggestContactMatchesByType:(long long)arg1 searchString:(id)arg2 isMaybe:(bool)arg3 onlySignificant:(bool)arg4;
- (id)suggestContactMatchesWithContact:(id)arg1 limitTo:(unsigned long long)arg2;
- (id)suggestContactMatchesWithFullTextSearch:(id)arg1 limitTo:(unsigned long long)arg2;
- (id)suggestContactMatchesWithMessagingPrefix:(id)arg1 limitTo:(unsigned long long)arg2;
- (id)suggestContactsByMasterEntityQuery:(id)arg1 limit:(unsigned long long)arg2 bindings:(id /* block */)arg3;
- (id)suggestContactsByMasterEntityQuery:(id)arg1 withSnippets:(bool)arg2 limit:(unsigned long long)arg3 bindings:(id /* block */)arg4;
- (id)suggestContactsWithContact:(id)arg1 withSnippets:(bool)arg2 filterConfirmRejectDetails:(bool)arg3 limitTo:(unsigned long long)arg4;
- (id)suggestContactsWithPrefix:(id)arg1 limitTo:(unsigned long long)arg2;
- (id)suggestEventsStartingAt:(struct SGUnixTimestamp_ { double x1; })arg1 endingAt:(struct SGUnixTimestamp_ { double x1; })arg2 limitTo:(unsigned long long)arg3;
- (id)suggestEventsStartingAt:(struct SGUnixTimestamp_ { double x1; })arg1 endingAt:(struct SGUnixTimestamp_ { double x1; })arg2 limitTo:(unsigned long long)arg3 additionalWhereClause:(id)arg4 options:(unsigned int)arg5 onPrep:(id /* block */)arg6;
- (id)suggestEventsStartingAt:(struct SGUnixTimestamp_ { double x1; })arg1 endingAt:(struct SGUnixTimestamp_ { double x1; })arg2 limitTo:(unsigned long long)arg3 options:(unsigned int)arg4;
- (id)suggestEventsStartingAt:(struct SGUnixTimestamp_ { double x1; })arg1 endingAt:(struct SGUnixTimestamp_ { double x1; })arg2 prefix:(id)arg3 limitTo:(unsigned long long)arg4;
- (id)suggestEventsStartingAt:(struct SGUnixTimestamp_ { double x1; })arg1 endingAt:(struct SGUnixTimestamp_ { double x1; })arg2 prefix:(id)arg3 limitTo:(unsigned long long)arg4 options:(unsigned int)arg5;
- (void)syncContactsWithStore:(id)arg1;
- (bool)syncNewBlobsIfChanged;
- (bool)tombstoneExistsForSpotlightReferenceWithBundleIdentifier:(id)arg1 uniqueIdentifier:(id)arg2 domainIdentifier:(id)arg3;
- (id)topSalienciesForMailboxId:(id)arg1 limit:(long long)arg2;
- (bool)trimURLTableDownToLimit:(long long)arg1 deletionCount:(long long*)arg2;
- (bool)trimURLs;
- (void)truncateContactDetailTable;
- (void)tryExecuteSnippetsJournal;
- (id)uniqueIdentifierForMessageId:(id)arg1;
- (id)unmergedCandidatesLimitedTo:(int)arg1;
- (long long)unmigrateDatabases;
- (void)unsafeMigrateToVersionForTesting:(unsigned long long)arg1;
- (void)updateCNContactMatches:(id)arg1;
- (long long)updateEvent:(id)arg1 primaryKey:(long long)arg2;
- (void)updateLanguageForFTSTablesToLanguage:(id)arg1;
- (void)updateMessages:(id)arg1 state:(unsigned long long)arg2;
- (void)updateReimportItemUniqueIdForBundleId:(id)arg1 oldValue:(id)arg2 newValue:(id)arg3;
- (long long)updateSaliency:(long long)arg1 saliency:(id)arg2;
- (long long)updateSaliencyCreationTimestampForTesting:(long long)arg1 timestamp:(struct SGUnixTimestamp_ { double x1; })arg2;
- (void)updateSerializedContacts:(id)arg1;
- (id)urlsFoundBetweenStartDate:(id)arg1 endDate:(id)arg2 bundleIdentifier:(id)arg3;
- (id)urlsFoundBetweenStartDate:(id)arg1 endDate:(id)arg2 excludingBundleIdentifiers:(id)arg3 containingSubstring:(id)arg4 flagFilter:(unsigned char)arg5 limit:(long long)arg6;
- (void)vacuum;
- (bool)waitForMigrations;
- (void)writeCNContactMatchAndUpdateSetForContact:(id)arg1 withMatches:(id)arg2 andMaxEntityId:(long long)arg3;
- (void)writeCNContactMatchForContact:(id)arg1 withMatches:(id)arg2 andMaxEntityId:(long long)arg3;
- (void)writeCNContactMissForRecordId:(id)arg1;
- (void)writeEmailVerificationResultForEmailWithKey:(id)arg1 eventEntities:(id)arg2;
- (long long)writeEnrichment:(id)arg1;
- (long long)writeEntity:(id)arg1;
- (long long)writeEntity:(id)arg1 withSpotlightReferenceForBundleIdentifier:(id)arg2 uniqueIdentifier:(id)arg3 domainIdentifier:(id)arg4;
- (void)writeEntityGeocodeResultToDb:(id)arg1;
- (void)writeIdentityBlobs:(id)arg1 forceRewrite:(bool)arg2;
- (void)writeInteractionEventEntities:(id)arg1;
- (void)writeSerializedContact:(id)arg1;
- (void)writeSerializedContactAndUpdateEntityIDSet:(id)arg1;
- (void)writeSerializedContactPlaceholder:(long long)arg1;
- (void)writeTombstoneForSpotlightReferenceWithBundleIdentifier:(id)arg1;
- (void)writeTombstoneForSpotlightReferenceWithBundleIdentifier:(id)arg1 domainIdentifier:(id)arg2;
- (void)writeTombstoneForSpotlightReferenceWithBundleIdentifier:(id)arg1 domainIdentifiers:(id)arg2;
- (void)writeTombstoneForSpotlightReferenceWithBundleIdentifier:(id)arg1 uniqueIdentifier:(id)arg2;
- (void)writeTombstoneForSpotlightReferenceWithBundleIdentifier:(id)arg1 uniqueIdentifiers:(id)arg2;
- (bool)writeURL:(id)arg1;

@end
