
@interface BNBannerSourceListenerPresentableViewController : UIViewController <BNBannerSourceListenerPresentable, BNBannerSourceListenerPresentableViewControllerViewDelegate, BNPresentableContext, BNPresentableContextClientToHostInterface, BSServiceConnectionListenerDelegate> {
    int  _bannerAppearState;
    BSServiceConnection<BSServiceConnectionHost> * _connection;
    BSServiceConnectionListener * _connectionListener;
    long long  _contentBehavior;
    UIView * _contentView;
    <BNBannerSourceListenerPresentableDelegate> * _delegate;
    bool  _draggingDismissalEnabled;
    bool  _draggingInteractionEnabled;
    NSHashTable * _observers;
    <BNPresentable> * _presentable;
    long long  _presentableBehavior;
    NSObject<OS_dispatch_queue> * _queue;
    id /* block */  _readyCompletion;
    NSString * _requestIdentifier;
    NSString * _requesterIdentifier;
    NSString * _serviceDomain;
    bool  _touchOutsideDismissalEnabled;
    NSUUID * _uniquePresentableIdentifier;
}

@property (nonatomic, readonly) int bannerAppearState;
@property (nonatomic, readonly) long long contentBehavior;
@property (getter=isContentHosted, nonatomic, readonly) bool contentHosted;
@property (setter=_setContentView:, nonatomic, retain) UIView *contentView;
@property (nonatomic, readonly) UIView *contentView;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <BNBannerSourceListenerPresentableDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (getter=isDraggingDismissalEnabled, nonatomic, readonly) bool draggingDismissalEnabled;
@property (getter=isDraggingInteractionEnabled, nonatomic, readonly) bool draggingInteractionEnabled;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) <BNPresentable> *presentable;
@property (nonatomic, readonly) long long presentableBehavior;
@property (nonatomic) <BNPresentableContext> *presentableContext;
@property (getter=_isPresentableContextInterfaceAvailable, nonatomic, readonly) bool presentableContextInterfaceAvailable;
@property (nonatomic, readonly) long long presentableType;
@property (getter=isReady, nonatomic, readonly) bool ready;
@property (setter=_setReadyCompletion:, nonatomic, copy) id /* block */ readyCompletion;
@property (nonatomic, readonly, copy) NSString *requestIdentifier;
@property (nonatomic, readonly, copy) NSString *requesterIdentifier;
@property (nonatomic, readonly) FBScene *scene;
@property (readonly) Class superclass;
@property (getter=isTouchOutsideDismissalEnabled, nonatomic, readonly) bool touchOutsideDismissalEnabled;
@property (nonatomic, readonly, copy) NSUUID *uniqueIdentifier;
@property (nonatomic, readonly, copy) NSUUID *uniquePresentableIdentifier;
@property (nonatomic, readonly) UIViewController *viewController;

- (void).cxx_destruct;
- (void)__setDraggingDismissalEnabled:(id)arg1 error:(out id*)arg2;
- (void)__setDraggingInteractionEnabled:(id)arg1 error:(out id*)arg2;
- (void)__setTouchOutsideDismissalEnabled:(id)arg1 error:(out id*)arg2;
- (bool)_canShowWhileLocked;
- (void)_enumerateObserversRespondingToSelector:(SEL)arg1 usingBlock:(id /* block */)arg2;
- (id)_initWithPresentableIdentification:(id)arg1 presentableBehavior:(long long)arg2 contentBehavior:(long long)arg3 serviceDomain:(id)arg4 readyCompletion:(id /* block */)arg5;
- (bool)_isPresentableContextInterfaceAvailable;
- (void)_setBannerAppearState:(int)arg1 forPresentable:(id)arg2 reason:(id)arg3;
- (void)_setContentView:(id)arg1;
- (void)_setReadyCompletion:(id /* block */)arg1;
- (void)_setUserInteractionWillBegin:(bool)arg1 forPresentable:(id)arg2;
- (void)addPresentableObserver:(id)arg1;
- (int)bannerAppearState;
- (void)bannerSourceListenerPresentableViewControllerViewDidChangeSize:(id)arg1;
- (long long)contentBehavior;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })contentInsetsForBannerSourceListenerPresentableViewControllerView:(id)arg1;
- (id)contentView;
- (void)dealloc;
- (id)delegate;
- (id)description;
- (void)handleTemplateContentEvent:(long long)arg1;
- (id)initWithPresentable:(id)arg1;
- (id)initWithSpecification:(id)arg1 serviceDomain:(id)arg2 readyCompletion:(id /* block */)arg3;
- (id)initWithWithPresentable:(id)arg1;
- (id)initWithWithSpecification:(id)arg1 serviceDomain:(id)arg2 readyCompletion:(id /* block */)arg3;
- (void)invalidate;
- (bool)isDraggingDismissalEnabled;
- (bool)isDraggingInteractionEnabled;
- (bool)isReady;
- (bool)isTouchOutsideDismissalEnabled;
- (void)listener:(id)arg1 didReceiveConnection:(id)arg2 withContext:(id)arg3;
- (void)loadView;
- (void)makeReadyIfPossible;
- (id)presentable;
- (long long)presentableBehavior;
- (id)presentableDescription;
- (void)presentableDidAppearAsBanner:(id)arg1;
- (void)presentableDidDisappearAsBanner:(id)arg1 withReason:(id)arg2;
- (void)presentableWillAppearAsBanner:(id)arg1;
- (void)presentableWillDisappearAsBanner:(id)arg1 withReason:(id)arg2;
- (void)presentableWillNotAppearAsBanner:(id)arg1 withReason:(id)arg2;
- (id /* block */)readyCompletion;
- (void)removePresentableObserver:(id)arg1;
- (id)requestIdentifier;
- (id)requesterIdentifier;
- (void)setDelegate:(id)arg1;
- (void)setHostNeedsUpdate;
- (id)uniquePresentableIdentifier;
- (void)userInteractionDidEndForBannerForPresentable:(id)arg1;
- (void)userInteractionWillBeginForBannerForPresentable:(id)arg1;
- (void)viewDidLoad;

@end
