
@interface WiFiUsageRealTimeCoexSession : WiFiUsageSession {
    NSDate * _firstIPUpdateAfterSSIDTransition;
    NSDate * _firstManualJoin;
    NSDate * _firstManualJoinAfterSSIDTransition;
    NSDate * _firstRtCoexOptimal;
    NSDate * _firstSSIDTransition;
    bool  _hasCandidates;
    bool  _hasDifferentIpv4DetailsAfterSSIDTransition;
    bool  _hasDifferentIpv6DetailsAfterSSIDTransition;
    bool  _isRtCoexOptimal;
    bool  _isSplitSSID;
    NSDate * _lastEnterPreferredBand;
    NSDate * _lastEnterPreferredChannel;
    bool  _lastRequestDifferentSSID;
    NSString * _lastRequestPreferredBSS;
    int  _lastRequestPreferredBand;
    unsigned long long  _lastRequestPreferredChannel;
    NSString * _lastRequestPreferredSSID;
    unsigned long long  _lastRequestType;
    NSDate * _lastRtCoexOptimalStatusChange;
    double  _preferredBandDuration;
    double  _preferredChannelDuration;
    unsigned long long  _requestDisconnectCount;
    unsigned long long  _requestSteerCount;
    unsigned long long  _requestSteerToPreferredChannelCount;
    double  _rtCoexInOptimalDuration;
    NSString * _rtCoexSubType;
    unsigned long long  _rtCoexType;
}

@property (retain) NSDate *firstIPUpdateAfterSSIDTransition;
@property (retain) NSDate *firstManualJoin;
@property (retain) NSDate *firstManualJoinAfterSSIDTransition;
@property (retain) NSDate *firstRtCoexOptimal;
@property (retain) NSDate *firstSSIDTransition;
@property bool hasCandidates;
@property bool hasDifferentIpv4DetailsAfterSSIDTransition;
@property bool hasDifferentIpv6DetailsAfterSSIDTransition;
@property bool isRtCoexOptimal;
@property bool isSplitSSID;
@property (retain) NSDate *lastEnterPreferredBand;
@property (retain) NSDate *lastEnterPreferredChannel;
@property bool lastRequestDifferentSSID;
@property (retain) NSString *lastRequestPreferredBSS;
@property int lastRequestPreferredBand;
@property unsigned long long lastRequestPreferredChannel;
@property (retain) NSString *lastRequestPreferredSSID;
@property unsigned long long lastRequestType;
@property (retain) NSDate *lastRtCoexOptimalStatusChange;
@property double preferredBandDuration;
@property double preferredChannelDuration;
@property unsigned long long requestDisconnectCount;
@property unsigned long long requestSteerCount;
@property unsigned long long requestSteerToPreferredChannelCount;
@property double rtCoexInOptimalDuration;
@property (retain) NSString *rtCoexSubType;
@property unsigned long long rtCoexType;

- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)eventDictionary:(bool)arg1;
- (id)eventDictionaryByBand:(int)arg1 isFirst:(bool)arg2;
- (id)firstIPUpdateAfterSSIDTransition;
- (id)firstManualJoin;
- (id)firstManualJoinAfterSSIDTransition;
- (id)firstRtCoexOptimal;
- (id)firstSSIDTransition;
- (bool)hasCandidates;
- (bool)hasDifferentIpv4DetailsAfterSSIDTransition;
- (bool)hasDifferentIpv6DetailsAfterSSIDTransition;
- (bool)infraIsPartOfSplitSSID;
- (id)initWithInterfaceName:(id)arg1;
- (bool)isCurrentBandPreferredBand;
- (bool)isCurrentChannelPreferredChannel;
- (bool)isRtCoexOptimal;
- (bool)isSplitSSID;
- (void)joinStateDidChange:(id)arg1 withReason:(unsigned long long)arg2 lastDisconnectReason:(long long)arg3 lastJoinFailure:(long long)arg4 andNetworkDetails:(id)arg5;
- (id)lastEnterPreferredBand;
- (id)lastEnterPreferredChannel;
- (bool)lastRequestDifferentSSID;
- (id)lastRequestPreferredBSS;
- (int)lastRequestPreferredBand;
- (unsigned long long)lastRequestPreferredChannel;
- (id)lastRequestPreferredSSID;
- (unsigned long long)lastRequestType;
- (id)lastRtCoexOptimalStatusChange;
- (void)linkStateDidChange:(bool)arg1 isInvoluntary:(bool)arg2 linkChangeReason:(long long)arg3 linkChangeSubreason:(long long)arg4 withNetworkDetails:(id)arg5;
- (id)metricName;
- (double)preferredBandDuration;
- (double)preferredChannelDuration;
- (void)processIPv4Changes:(id)arg1;
- (void)processIPv6Changes:(id)arg1;
- (unsigned long long)requestDisconnectCount;
- (unsigned long long)requestSteerCount;
- (unsigned long long)requestSteerToPreferredChannelCount;
- (double)rtCoexInOptimalDuration;
- (id)rtCoexSubType;
- (unsigned long long)rtCoexType;
- (void)sessionDidStart;
- (void)setFirstIPUpdateAfterSSIDTransition:(id)arg1;
- (void)setFirstManualJoin:(id)arg1;
- (void)setFirstManualJoinAfterSSIDTransition:(id)arg1;
- (void)setFirstRtCoexOptimal:(id)arg1;
- (void)setFirstSSIDTransition:(id)arg1;
- (void)setHasCandidates:(bool)arg1;
- (void)setHasDifferentIpv4DetailsAfterSSIDTransition:(bool)arg1;
- (void)setHasDifferentIpv6DetailsAfterSSIDTransition:(bool)arg1;
- (void)setIsRtCoexOptimal:(bool)arg1;
- (void)setIsSplitSSID:(bool)arg1;
- (void)setLastEnterPreferredBand:(id)arg1;
- (void)setLastEnterPreferredChannel:(id)arg1;
- (void)setLastRequestDifferentSSID:(bool)arg1;
- (void)setLastRequestPreferredBSS:(id)arg1;
- (void)setLastRequestPreferredBand:(int)arg1;
- (void)setLastRequestPreferredChannel:(unsigned long long)arg1;
- (void)setLastRequestPreferredSSID:(id)arg1;
- (void)setLastRequestType:(unsigned long long)arg1;
- (void)setLastRtCoexOptimalStatusChange:(id)arg1;
- (void)setPreferredBandDuration:(double)arg1;
- (void)setPreferredChannelAndBandUsageWithReferenceDate:(id)arg1;
- (void)setPreferredChannelDuration:(double)arg1;
- (void)setRealTimeCoexStatus:(bool)arg1 type:(unsigned long long)arg2;
- (void)setRealtimeCoexStarted:(bool)arg1 type:(unsigned long long)arg2 reasons:(id)arg3;
- (void)setRequestDisconnectCount:(unsigned long long)arg1;
- (void)setRequestSteerCount:(unsigned long long)arg1;
- (void)setRequestSteerToPreferredChannelCount:(unsigned long long)arg1;
- (void)setRtCoexInOptimalDuration:(double)arg1;
- (void)setRtCoexSubType:(id)arg1;
- (void)setRtCoexType:(unsigned long long)arg1;
- (void)setSteeringRequest:(unsigned long long)arg1 preferredChannel:(unsigned long long)arg2 preferredBand:(int)arg3 preferredSSID:(id)arg4 targetSSIDDiffersFromCurrent:(bool)arg5 preferredBSS:(id)arg6 ssidIsSplit:(bool)arg7 transitionCandidates:(bool)arg8;
- (void)summarizeSession;
- (void)updateAssociatedNetworkDetails:(id)arg1;
- (void)updatePreferredChannelAndBandUsageWithReferenceDate:(id)arg1;
- (void)updateRtCoexInOptimalDuration:(bool)arg1;

@end
