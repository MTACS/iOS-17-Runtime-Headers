
@interface SPSearchQueryContext : NSObject <NSCopying> {
    bool  _allowInternet;
    CSSuggestion * _backingSearchModel;
    double  _currentTime;
    bool  _disableOCR;
    NSArray * _disabledApps;
    NSArray * _disabledBundles;
    NSArray * _disabledDomains;
    CSAttributeEvaluator * _evaluator;
    CSAttributeEvaluator * _evaluatorForPersonMatching;
    bool  _fetchL2Signals;
    bool  _forceQueryEvenIfSame;
    NSArray * _groupingRules;
    bool  _internalDebug;
    bool  _internalValidation;
    bool  _isAdvancedSyntax;
    bool  _isPasscodeLocked;
    NSString * _keyboardLanguage;
    NSString * _keyboardPrimaryLanguage;
    NSArray * _markedTextArray;
    bool  _noTokenize;
    NSString * _normalizedSearchString;
    bool  _promoteLocalResults;
    bool  _promoteParsecResults;
    unsigned long long  _queryIdent;
    unsigned long long  _queryKind;
    NSDictionary * _queryUnderstandingOutput;
    double  _scaleFactor;
    NSArray * _searchDomains;
    NSArray * _searchEntities;
    NSString * _searchString;
    unsigned long long  _whyClear;
    unsigned long long  _whyQuery;
}

@property (nonatomic) bool allowInternet;
@property (nonatomic, retain) CSSuggestion *backingSearchModel;
@property (nonatomic) double currentTime;
@property (nonatomic) bool disableOCR;
@property (nonatomic, retain) NSArray *disabledApps;
@property (nonatomic, retain) NSArray *disabledBundles;
@property (nonatomic, retain) NSArray *disabledDomains;
@property (nonatomic, readonly) NSString *displayedText;
@property (nonatomic) bool fetchL2Signals;
@property (nonatomic) bool forceQueryEvenIfSame;
@property (nonatomic, retain) NSArray *groupingRules;
@property (nonatomic, readonly) bool hasMarkedText;
@property (nonatomic) bool internalDebug;
@property (nonatomic) bool internalValidation;
@property (nonatomic) bool isAdvancedSyntax;
@property (nonatomic) bool isPasscodeLocked;
@property (nonatomic, retain) NSString *keyboardLanguage;
@property (nonatomic, retain) NSString *keyboardPrimaryLanguage;
@property (nonatomic, retain) NSArray *markedTextArray;
@property (nonatomic) bool noTokenize;
@property (nonatomic, readonly) NSString *normalizedSearchString;
@property (nonatomic) bool promoteLocalResults;
@property (nonatomic) bool promoteParsecResults;
@property (nonatomic) unsigned long long queryIdent;
@property (nonatomic) unsigned long long queryKind;
@property (nonatomic, copy) NSDictionary *queryUnderstandingOutput;
@property (nonatomic) double scaleFactor;
@property (nonatomic, retain) NSArray *searchDomains;
@property (nonatomic, retain) NSArray *searchEntities;
@property (nonatomic, retain) NSString *searchString;
@property (getter=getTrimmedSearchString, readonly) NSString *trimmedSearchString;
@property (nonatomic) unsigned long long whyClear;
@property (nonatomic) unsigned long long whyQuery;

+ (id)queryContextWithSearchString:(id)arg1;

- (void).cxx_destruct;
- (bool)allowInternet;
- (id)backingSearchModel;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (double)currentTime;
- (bool)disableOCR;
- (id)disabledApps;
- (id)disabledBundles;
- (id)disabledDomains;
- (id)displayedText;
- (id)evaluator;
- (id)evaluatorForPersonMatching;
- (id)evaluatorWithSearchString:(id)arg1;
- (bool)fetchL2Signals;
- (bool)forceQueryEvenIfSame;
- (id)getTrimmedSearchString;
- (id)groupingRules;
- (bool)hasMarkedText;
- (void)incrementQueryId;
- (id)init;
- (id)initWithSearchString:(id)arg1;
- (bool)internalDebug;
- (bool)internalValidation;
- (bool)isAdvancedSyntax;
- (bool)isPasscodeLocked;
- (id)keyboardLanguage;
- (id)keyboardPrimaryLanguage;
- (id)markedTextArray;
- (bool)noTokenize;
- (id)normalizedSearchString;
- (bool)promoteLocalResults;
- (bool)promoteParsecResults;
- (unsigned long long)queryIdent;
- (unsigned long long)queryKind;
- (id)queryUnderstandingOutput;
- (double)scaleFactor;
- (id)searchDomains;
- (id)searchEntities;
- (id)searchString;
- (void)setAllowInternet:(bool)arg1;
- (void)setBackingSearchModel:(id)arg1;
- (void)setCurrentTime:(double)arg1;
- (void)setDisableOCR:(bool)arg1;
- (void)setDisabledApps:(id)arg1;
- (void)setDisabledBundles:(id)arg1;
- (void)setDisabledDomains:(id)arg1;
- (void)setFetchL2Signals:(bool)arg1;
- (void)setForceQueryEvenIfSame:(bool)arg1;
- (void)setGroupingRules:(id)arg1;
- (void)setInternalDebug:(bool)arg1;
- (void)setInternalValidation:(bool)arg1;
- (void)setIsAdvancedSyntax:(bool)arg1;
- (void)setIsPasscodeLocked:(bool)arg1;
- (void)setKeyboardLanguage:(id)arg1;
- (void)setKeyboardPrimaryLanguage:(id)arg1;
- (void)setMarkedTextArray:(id)arg1;
- (void)setNoTokenize:(bool)arg1;
- (void)setPromoteLocalResults:(bool)arg1;
- (void)setPromoteParsecResults:(bool)arg1;
- (void)setQueryIdent:(unsigned long long)arg1;
- (void)setQueryKind:(unsigned long long)arg1;
- (void)setQueryUnderstandingOutput:(id)arg1;
- (void)setScaleFactor:(double)arg1;
- (void)setSearchDomains:(id)arg1;
- (void)setSearchEntities:(id)arg1;
- (void)setSearchString:(id)arg1;
- (void)setWhyClear:(unsigned long long)arg1;
- (void)setWhyQuery:(unsigned long long)arg1;
- (unsigned long long)whyClear;
- (unsigned long long)whyQuery;

@end
