
@interface HUIHeadphoneLevelView : UIControl <HACCContentModule> {
    UIView * _centerContainer;
    NSNumberFormatter * _dbFormatter;
    bool  _isRTL;
    UIVisualEffectView * _labelContainer;
    int  _layoutViewSize;
    HUIHeadphoneLevelGroup * _levelGroup;
    UILabel * _maxLabel;
    UILabel * _minLabel;
    UIView * _subtitleContainer;
    UILabel * _subtitleLeftLabel;
    UILabel * _subtitleRightLabel;
    UILabel * _thresholdLabel;
    UIVisualEffectView * _titleContainer;
    UILabel * _titleLabel;
    NSArray * _viewConstraints;
    <HACCContentModuleDelegate> * delegate;
    unsigned long long  module;
}

@property (nonatomic, retain) UIView *centerContainer;
@property (nonatomic, retain) NSNumberFormatter *dbFormatter;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <HACCContentModuleDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isRTL;
@property (nonatomic, retain) UIVisualEffectView *labelContainer;
@property (nonatomic) int layoutViewSize;
@property (nonatomic, retain) HUIHeadphoneLevelGroup *levelGroup;
@property (nonatomic, retain) UILabel *maxLabel;
@property (nonatomic, retain) UILabel *minLabel;
@property (nonatomic) unsigned long long module;
@property (nonatomic) bool providesOwnSeparator;
@property (nonatomic, retain) UIView *subtitleContainer;
@property (nonatomic, retain) UILabel *subtitleLeftLabel;
@property (nonatomic, retain) UILabel *subtitleRightLabel;
@property (readonly) Class superclass;
@property (nonatomic, retain) UILabel *thresholdLabel;
@property (nonatomic, retain) UIVisualEffectView *titleContainer;
@property (nonatomic, retain) UILabel *titleLabel;
@property (nonatomic, retain) NSArray *viewConstraints;

- (void).cxx_destruct;
- (id)_accessibilityUserTestingChildren;
- (id)accessibilityLabel;
- (unsigned long long)accessibilityTraits;
- (id)accessibilityValue;
- (id)centerContainer;
- (id)contentValue;
- (id)dbFormatter;
- (void)dealloc;
- (id)delegate;
- (bool)enabled;
- (id)formatLevel:(id)arg1 baseFont:(id)arg2;
- (id)formatLevelRating:(id)arg1 threshold:(unsigned long long)arg2;
- (id)init;
- (bool)isAccessibilityElement;
- (bool)isRTL;
- (id)labelContainer;
- (void)layoutSubviews;
- (int)layoutViewSize;
- (id)levelGroup;
- (id)maxLabel;
- (id)minLabel;
- (unsigned long long)module;
- (void)setCenterContainer:(id)arg1;
- (void)setDbFormatter:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setLabelContainer:(id)arg1;
- (void)setLayoutViewSize:(int)arg1;
- (void)setLevelGroup:(id)arg1;
- (void)setMaxLabel:(id)arg1;
- (void)setMinLabel:(id)arg1;
- (void)setModule:(unsigned long long)arg1;
- (void)setSubtitleContainer:(id)arg1;
- (void)setSubtitleLeftLabel:(id)arg1;
- (void)setSubtitleRightLabel:(id)arg1;
- (void)setThresholdLabel:(id)arg1;
- (void)setTitleContainer:(id)arg1;
- (void)setTitleLabel:(id)arg1;
- (void)setViewConstraints:(id)arg1;
- (id)subtitleContainer;
- (id)subtitleLeftLabel;
- (id)subtitleRightLabel;
- (id)thresholdLabel;
- (id)titleContainer;
- (id)titleLabel;
- (void)updateConstraints;
- (void)updateValue;
- (void)updateViewsWithSlowLeq:(double)arg1 fastLeq:(double)arg2 andThreshold:(unsigned long long)arg3;
- (id)viewConstraints;

@end
