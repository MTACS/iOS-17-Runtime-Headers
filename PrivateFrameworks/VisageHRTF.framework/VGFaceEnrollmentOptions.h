
@interface VGFaceEnrollmentOptions : NSObject <NSSecureCoding> {
    bool  _applyBaconLighting;
    VGFaceCaptureOptions * _captureOptions;
    bool  _deterministicMode;
    bool  _generateBaconPanel;
    bool  _generatePIFu;
    unsigned long long  _identityFittingOp;
    NSString * _saveDirectory;
}

@property (nonatomic) bool applyBaconLighting;
@property (nonatomic) float bottomMarginHeadRatio;
@property (nonatomic, retain) NSString *cameraImageColorSpaceName;
@property (nonatomic, readonly) VGFaceCaptureOptions *captureOptions;
@property (nonatomic) bool deterministicMode;
@property (nonatomic) bool ensureAlmostNeutralExpressionOnAllPoses;
@property (nonatomic) bool ensureEyesForwardOnFrontPose;
@property (nonatomic) bool ensureEyesOpenOnAllPoses;
@property (nonatomic) bool ensureEyesOpenOnFrontPose;
@property (nonatomic) float eyesForwardPitchSensitivity;
@property (nonatomic) float eyesForwardYawSensitivity;
@property (nonatomic) float eyesOpenSensitivity;
@property (nonatomic) bool generateBaconPanel;
@property (nonatomic) bool generatePIFu;
@property (nonatomic) unsigned long long identityFittingOp;
@property (nonatomic) float leftMarginHeadRatio;
@property (nonatomic) float neutralExpressionLowerBound;
@property (nonatomic) float neutralExpressionUpperBound;
@property (nonatomic) float pitchLimit;
@property (nonatomic) float pitchSensitivity;
@property (nonatomic, retain) NSArray *requiredExpressions;
@property (nonatomic) unsigned long long requiredPitchPoses;
@property (nonatomic) unsigned long long requiredYawPoses;
@property (nonatomic) float rightMarginHeadRatio;
@property (nonatomic, retain) NSString *saveDirectory;
@property (nonatomic) float topMarginHeadRatio;
@property (nonatomic) bool useFaceTrackingDictionary;
@property (nonatomic) float yawLimit;
@property (nonatomic) float yawSensitivity;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (void)_setDefaultsWithSuiteName:(id)arg1;
- (bool)applyBaconLighting;
- (float)bottomMarginHeadRatio;
- (id)cameraImageColorSpaceName;
- (id)captureOptions;
- (id)description;
- (bool)deterministicMode;
- (void)encodeWithCoder:(id)arg1;
- (bool)ensureAlmostNeutralExpressionOnAllPoses;
- (bool)ensureEyesForwardOnFrontPose;
- (bool)ensureEyesOpenOnAllPoses;
- (bool)ensureEyesOpenOnFrontPose;
- (float)eyesForwardPitchSensitivity;
- (float)eyesForwardYawSensitivity;
- (float)eyesOpenSensitivity;
- (bool)generateBaconPanel;
- (bool)generatePIFu;
- (unsigned long long)identityFittingOp;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (bool)isEqual:(id)arg1;
- (float)leftMarginHeadRatio;
- (float)neutralExpressionLowerBound;
- (float)neutralExpressionUpperBound;
- (float)pitchLimit;
- (float)pitchSensitivity;
- (id)requiredExpressions;
- (unsigned long long)requiredPitchPoses;
- (unsigned long long)requiredYawPoses;
- (float)rightMarginHeadRatio;
- (id)saveDirectory;
- (void)setApplyBaconLighting:(bool)arg1;
- (void)setBottomMarginHeadRatio:(float)arg1;
- (void)setCameraImageColorSpaceName:(id)arg1;
- (void)setDeterministicMode:(bool)arg1;
- (void)setEnsureAlmostNeutralExpressionOnAllPoses:(bool)arg1;
- (void)setEnsureEyesForwardOnFrontPose:(bool)arg1;
- (void)setEnsureEyesOpenOnAllPoses:(bool)arg1;
- (void)setEnsureEyesOpenOnFrontPose:(bool)arg1;
- (void)setEyesForwardPitchSensitivity:(float)arg1;
- (void)setEyesForwardYawSensitivity:(float)arg1;
- (void)setEyesOpenSensitivity:(float)arg1;
- (void)setGenerateBaconPanel:(bool)arg1;
- (void)setGeneratePIFu:(bool)arg1;
- (void)setIdentityFittingOp:(unsigned long long)arg1;
- (void)setLeftMarginHeadRatio:(float)arg1;
- (void)setNeutralExpressionLowerBound:(float)arg1;
- (void)setNeutralExpressionUpperBound:(float)arg1;
- (void)setPitchLimit:(float)arg1;
- (void)setPitchSensitivity:(float)arg1;
- (void)setRequiredExpressions:(id)arg1;
- (void)setRequiredPitchPoses:(unsigned long long)arg1;
- (void)setRequiredYawPoses:(unsigned long long)arg1;
- (void)setRightMarginHeadRatio:(float)arg1;
- (void)setSaveDirectory:(id)arg1;
- (void)setTopMarginHeadRatio:(float)arg1;
- (void)setUseFaceTrackingDictionary:(bool)arg1;
- (void)setYawLimit:(float)arg1;
- (void)setYawSensitivity:(float)arg1;
- (float)topMarginHeadRatio;
- (bool)useFaceTrackingDictionary;
- (float)yawLimit;
- (float)yawSensitivity;

@end
