
@interface IMAVPlayer : NSObject <AVAudioSessionDelegate> {
    AVAudioSession * _audioSession;
    unsigned long long  _autoStop;
    double  _autoStopMediaTime;
    NSTimer * _autoStopTimer;
    double  _autoStopTimerPausedTime;
    double  _autoStopTimerTime;
    unsigned long long  _backgroundTask;
    NSObject<IMAVPlaybackCausalityObserver> * _causalityObserver;
    unsigned long long  _chapterMetadataMode;
    MPRemoteCommandCenter * _commandCenter;
    unsigned long long  _currentChapterIndex;
    IMPlayerItem * _currentItem;
    double  _currentTime;
    <IMAVPlayerDelegate> * _delegate;
    struct { 
        unsigned int delegateStateChanged : 1; 
        unsigned int delegateErrorDidOccur : 1; 
        unsigned int delegateMediaTypeAvailable : 1; 
        unsigned int delegateDurationAvailable : 1; 
        unsigned int delegateCallbackForTime : 1; 
        unsigned int delegatePeriodicUpdate : 1; 
        unsigned int delegateHasDidChangePlayerItem : 1; 
        unsigned int delegateHasDidStopPlayerItem : 1; 
        unsigned int delegateHasDidEndedPlayerItem : 1; 
        unsigned int delegateLoadedDurationChanged : 1; 
        unsigned int delegateChapterStarted : 1; 
        unsigned int delegateCurrentManifestItemChanged : 1; 
    }  _delegateFlags;
    bool  _externalDisplay;
    UIWindow * _externalVideoWindow;
    NSObject<OS_dispatch_source> * _fadeOutTimer;
    NSTimer * _hdcpTimer;
    MPNowPlayingInfoCenter * _infoCenter;
    bool  _isUpdatingCurrentTime;
    NSURL * _lastPlayingURL;
    int  _loops;
    IMPlayerManifest * _manifest;
    id  _nowPlayingInfoPeriodicTimeObserver;
    NSMutableArray * _observingTimes;
    id  _periodicTimeObserver;
    id /* block */  _playbackErrorFallback;
    unsigned long long  _playbackSpeed;
    AVPlayer * _player;
    AVPlayerItem * _playerItem;
    bool  _providesVideoView;
    float  _scanRate;
    bool  _scrubbing;
    bool  _seekForward;
    NSTimer * _seekTimer;
    unsigned long long  _state;
    bool  _stateChangeInterruptionFlag;
    bool  _timeObserverNeedsUpdate;
    NSMutableArray * _timeObservers;
    AVPlayerLayer * _videoLayer;
    unsigned long long  _videoScale;
    IMAVPlayerVideoViewController * _videoViewController;
    bool  _wasInterrupted;
    bool  _wasInterruptedEarly;
}

@property (nonatomic, readonly) float actualRate;
@property (nonatomic, readonly) bool airplayVideoActive;
@property (nonatomic, retain) AVAudioSession *audioSession;
@property (nonatomic) unsigned long long autoStop;
@property (nonatomic) double autoStopMediaTime;
@property (nonatomic, readonly) double autoStopTimeRemaining;
@property (nonatomic, retain) NSTimer *autoStopTimer;
@property (nonatomic) double autoStopTimerPausedTime;
@property (nonatomic) double autoStopTimerTime;
@property (nonatomic) unsigned long long backgroundTask;
@property (nonatomic, readonly) bool bufferEmpty;
@property (nonatomic) NSObject<IMAVPlaybackCausalityObserver> *causalityObserver;
@property (nonatomic, readonly) unsigned long long chapterCount;
@property (nonatomic) unsigned long long chapterMetadataMode;
@property (nonatomic, retain) MPRemoteCommandCenter *commandCenter;
@property (nonatomic, readonly) IMPlayerChapterInfo *currentChapter;
@property (nonatomic) unsigned long long currentChapterIndex;
@property (nonatomic, retain) IMPlayerItem *currentItem;
@property (nonatomic) double currentTime;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <IMAVPlayerDelegate> *delegate;
@property (nonatomic) struct { unsigned int x1 : 1; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 1; unsigned int x5 : 1; unsigned int x6 : 1; unsigned int x7 : 1; unsigned int x8 : 1; unsigned int x9 : 1; unsigned int x10 : 1; unsigned int x11 : 1; unsigned int x12 : 1; } delegateFlags;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) double duration;
@property (nonatomic, readonly) bool externalDisplay;
@property (nonatomic, retain) UIWindow *externalVideoWindow;
@property (nonatomic, retain) NSObject<OS_dispatch_source> *fadeOutTimer;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSTimer *hdcpTimer;
@property (nonatomic, retain) MPNowPlayingInfoCenter *infoCenter;
@property (nonatomic, readonly) bool isPlaybackActive;
@property (nonatomic, readonly) bool isPlaybackRequested;
@property (nonatomic, readonly) bool isScanning;
@property (nonatomic, readonly) bool isSeeking;
@property (nonatomic) bool isUpdatingCurrentTime;
@property (nonatomic, retain) NSURL *lastPlayingURL;
@property (nonatomic, readonly) unsigned long long loadState;
@property (nonatomic, readonly) double loadedDuration;
@property (nonatomic) int loops;
@property (nonatomic, readonly) IMPlayerManifest *manifest;
@property (nonatomic, retain) id nowPlayingInfoPeriodicTimeObserver;
@property (nonatomic, retain) NSMutableArray *observingTimes;
@property (nonatomic, retain) id periodicTimeObserver;
@property (nonatomic, copy) id /* block */ playbackErrorFallback;
@property (nonatomic) unsigned long long playbackSpeed;
@property (nonatomic, retain) AVPlayer *player;
@property (nonatomic, retain) AVPlayerItem *playerItem;
@property (nonatomic) bool providesVideoView;
@property (nonatomic) float requestedRate;
@property (nonatomic) float scanRate;
@property (nonatomic) bool scrubbing;
@property (nonatomic) bool seekForward;
@property (nonatomic, retain) NSTimer *seekTimer;
@property (nonatomic) bool shouldEnforceHDCP;
@property (nonatomic) unsigned long long state;
@property (nonatomic) bool stateChangeInterruptionFlag;
@property (readonly) Class superclass;
@property (nonatomic) bool timeObserverNeedsUpdate;
@property (nonatomic, retain) NSMutableArray *timeObservers;
@property (nonatomic, retain) AVPlayerLayer *videoLayer;
@property (nonatomic) unsigned long long videoScale;
@property (nonatomic, retain) IMAVPlayerVideoViewController *videoViewController;
@property (nonatomic) float volume;
@property (nonatomic) bool wasInterrupted;
@property (nonatomic) bool wasInterruptedEarly;

+ (id)avPlaybackSpeedForSpeed:(unsigned long long)arg1;
+ (id)availableSpeeds;
+ (unsigned long long)decrementPlaybackSpeed:(unsigned long long)arg1;
+ (unsigned long long)incrementPlaybackSpeed:(unsigned long long)arg1;
+ (bool)isMaxSpeed:(unsigned long long)arg1;
+ (bool)isMinSpeed:(unsigned long long)arg1;
+ (void)performOnAvSessionQueue:(id /* block */)arg1;
+ (void)performOnMainQueue:(id /* block */)arg1;
+ (unsigned long long)playbackSpeedForRate:(float)arg1;
+ (float)rateForPlaybackSpeed:(unsigned long long)arg1;
+ (id)sharedPlayer;

- (void).cxx_destruct;
- (void)_assertMainThread;
- (void)_autoStopTimerFired;
- (void)_clearAutoStop;
- (void)_clearAutoStopTimmer;
- (void)_configureAudioSessionWithCompletion:(id /* block */)arg1;
- (void)_createPlayer;
- (void)_durationAvailable;
- (void)_failedToPlayToEndNotification:(id)arg1;
- (bool)_pause;
- (bool)_pause:(bool)arg1;
- (void)_pauseAutoStopTimer;
- (void)_postNotificationName:(id)arg1 userInfo:(id)arg2;
- (void)_primitiveSetCurrentItem:(id)arg1;
- (void)_setChapterIndex:(unsigned long long)arg1;
- (void)_setCurrentTime:(double)arg1;
- (void)_setupAutoStopTimer;
- (struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })_skipToPreviousThreshold;
- (bool)_stopWithReason:(unsigned long long)arg1 initiator:(unsigned long long)arg2 stopBlock:(id /* block */)arg3;
- (void)_updateForCurrentRateAndTimeControlStatus;
- (void)_updatePlayerForCurrentItem;
- (void)_updatePlayerTimeCompleted:(double)arg1 completion:(id /* block */)arg2;
- (void)_updatePlayerToCurrentTime:(id /* block */)arg1;
- (bool)_validatePlay;
- (float)actualRate;
- (void)addCMTimeObserver:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)addPeriodicTimeObservers;
- (void)addTimeObserver:(double)arg1;
- (bool)airplayVideoActive;
- (id)audioSession;
- (unsigned long long)autoStop;
- (double)autoStopMediaTime;
- (double)autoStopTimeRemaining;
- (id)autoStopTimer;
- (double)autoStopTimerPausedTime;
- (double)autoStopTimerTime;
- (unsigned long long)backgroundTask;
- (void)becomeActiveMediaPlayer;
- (void)beginBackgroundTask;
- (bool)bufferEmpty;
- (void)cancelFadeOut;
- (void)cancelSeek;
- (id)causalityObserver;
- (unsigned long long)chapterCount;
- (unsigned long long)chapterMetadataMode;
- (void)clearTimeObservers;
- (id)commandCenter;
- (void)configureAudioSessionAndSetActive:(bool)arg1 withCompletion:(id /* block */)arg2;
- (id)currentChapter;
- (unsigned long long)currentChapterIndex;
- (id)currentItem;
- (double)currentTime;
- (void)dealloc;
- (id)delegate;
- (struct { unsigned int x1 : 1; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 1; unsigned int x5 : 1; unsigned int x6 : 1; unsigned int x7 : 1; unsigned int x8 : 1; unsigned int x9 : 1; unsigned int x10 : 1; unsigned int x11 : 1; unsigned int x12 : 1; })delegateFlags;
- (double)duration;
- (void)endBackgroundTask;
- (void)endSeek;
- (void)enforceAutoStopForMode:(unsigned long long)arg1;
- (bool)externalDisplay;
- (id)externalVideoWindow;
- (void)fadeOut;
- (id)fadeOutTimer;
- (void)fadeOutWithDuration:(double)arg1;
- (void)fadeOutWithDuration:(double)arg1 completion:(id /* block */)arg2;
- (void)forceTriggerTimeObserverAt:(double)arg1;
- (void)handleAudioSessionInterruption:(id)arg1;
- (void)handlePlayerInterruption:(id)arg1;
- (bool)hasChapters;
- (id)hdcpTimer;
- (void)hdcpTimer:(id)arg1;
- (id)infoCenter;
- (id)init;
- (id)initWithCommandCenter:(id)arg1 infoCenter:(id)arg2 audioSession:(id)arg3;
- (bool)isAtEnd;
- (bool)isDurationReady;
- (bool)isPlaybackActive;
- (bool)isPlaybackRequested;
- (bool)isScanning;
- (bool)isSeeking;
- (bool)isStalled;
- (bool)isUpdatingCurrentTime;
- (id)lastPlayingURL;
- (unsigned long long)loadState;
- (double)loadedDuration;
- (int)loops;
- (id)manifest;
- (void)manifestCurrentItemDidChange;
- (void)nextChapter;
- (void)nextMediaItem;
- (bool)nextRemote;
- (id)nowPlayingInfoPeriodicTimeObserver;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (id)observingTimes;
- (void)onChaptersLoaded:(id)arg1;
- (void)onRouteChange:(id)arg1;
- (void)onSeekTimer:(id)arg1;
- (bool)pause;
- (bool)pauseWithInitiator:(unsigned long long)arg1;
- (bool)pauseWithInitiator:(unsigned long long)arg1 interruptionEvent:(bool)arg2;
- (id)periodicTimeObserver;
- (bool)play;
- (void)play:(id /* block */)arg1 interruptionEvent:(bool)arg2;
- (id /* block */)playbackErrorFallback;
- (unsigned long long)playbackSpeed;
- (id)player;
- (id)playerItem;
- (void)playerItemDidReachEnd:(id)arg1;
- (void)previousChapter;
- (void)previousMediaItem;
- (bool)previousRemote;
- (bool)previousRemote:(bool)arg1;
- (bool)providesVideoView;
- (void)registerAVSessionCategoryAndMode;
- (void)removeAllTimeObservers;
- (void)removeCMTimeObserver:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)removePeriodicTimeObservers;
- (void)removeTimeObserver:(double)arg1;
- (float)requestedRate;
- (void)resetPlayer:(id)arg1;
- (float)scanRate;
- (void)scanWithRate:(float)arg1;
- (bool)scrubbing;
- (bool)seekForward;
- (id)seekTimer;
- (void)sendItemEndedNotification;
- (void)sendPeriodicTimeEvent:(double)arg1 duration:(double)arg2 finished:(bool)arg3;
- (void)setAudioSession:(id)arg1;
- (void)setAutoStop:(unsigned long long)arg1;
- (void)setAutoStopMediaTime:(double)arg1;
- (void)setAutoStopTimer:(id)arg1;
- (void)setAutoStopTimerPausedTime:(double)arg1;
- (void)setAutoStopTimerTime:(double)arg1;
- (void)setBackgroundTask:(unsigned long long)arg1;
- (void)setCausalityObserver:(id)arg1;
- (void)setChapterMetadataMode:(unsigned long long)arg1;
- (void)setCommandCenter:(id)arg1;
- (void)setCurrentChapterIndex:(unsigned long long)arg1;
- (void)setCurrentItem:(id)arg1;
- (void)setCurrentTime:(double)arg1;
- (void)setCurrentTime:(double)arg1 fromMediaRemote:(bool)arg2;
- (void)setCurrentTimeRemote:(double)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDelegateFlags:(struct { unsigned int x1 : 1; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 1; unsigned int x5 : 1; unsigned int x6 : 1; unsigned int x7 : 1; unsigned int x8 : 1; unsigned int x9 : 1; unsigned int x10 : 1; unsigned int x11 : 1; unsigned int x12 : 1; })arg1;
- (void)setExternalVideoWindow:(id)arg1;
- (void)setFadeOutTimer:(id)arg1;
- (void)setHdcpTimer:(id)arg1;
- (void)setInfoCenter:(id)arg1;
- (void)setIsUpdatingCurrentTime:(bool)arg1;
- (void)setLastPlayingURL:(id)arg1;
- (void)setLoops:(int)arg1;
- (void)setManifest:(id)arg1 completion:(id /* block */)arg2;
- (void)setNowPlayingInfoPeriodicTimeObserver:(id)arg1;
- (void)setObservingTimes:(id)arg1;
- (void)setPeriodicTimeObserver:(id)arg1;
- (void)setPlaybackErrorFallback:(id /* block */)arg1;
- (void)setPlaybackSpeed:(unsigned long long)arg1;
- (void)setPlayer:(id)arg1;
- (void)setPlayerItem:(id)arg1;
- (void)setProvidesVideoView:(bool)arg1;
- (void)setRequestedRate:(float)arg1;
- (void)setScanRate:(float)arg1;
- (void)setScrubbing:(bool)arg1;
- (void)setSeekForward:(bool)arg1;
- (void)setSeekTimer:(id)arg1;
- (void)setShouldEnforceHDCP:(bool)arg1;
- (void)setState:(unsigned long long)arg1;
- (void)setState:(unsigned long long)arg1 additionalUserInfo:(id)arg2 completion:(id /* block */)arg3;
- (void)setStateChangeInterruptionFlag:(bool)arg1;
- (void)setTimeObserverNeedsUpdate:(bool)arg1;
- (void)setTimeObservers:(id)arg1;
- (void)setVideoLayer:(id)arg1;
- (void)setVideoScale:(unsigned long long)arg1;
- (void)setVideoViewController:(id)arg1;
- (void)setVolume:(float)arg1;
- (void)setWasInterrupted:(bool)arg1;
- (void)setWasInterruptedEarly:(bool)arg1;
- (void)setupChapterAtTime:(double)arg1;
- (void)setupChapterTimeObservers;
- (void)setupTimeObserver:(id)arg1;
- (bool)shouldEnforceHDCP;
- (void)sleep;
- (void)startSeek:(bool)arg1;
- (unsigned long long)state;
- (bool)stateChangeInterruptionFlag;
- (id)stillFrameAt:(double)arg1 maxSize:(struct CGSize { double x1; double x2; })arg2 scale:(double)arg3;
- (bool)stop;
- (void)stopObservingPlayer:(id)arg1;
- (void)stopObservingPlayerItem:(id)arg1;
- (bool)stopWithReason:(unsigned long long)arg1 initiator:(unsigned long long)arg2;
- (float)storedVolume;
- (bool)timeObserverNeedsUpdate;
- (id)timeObservers;
- (bool)togglePlayPause;
- (void)toggleVideoAspectScaleMode;
- (void)triggerTimeObserverAt:(id)arg1;
- (void)updateInfoCenterPlaybackState;
- (void)updateNowPlayingDurationSnapshot;
- (void)updateNowPlayingMetadataIncludingArtwork:(bool)arg1;
- (void)updateRateForCurrentState;
- (void)updateRateForCurrentState:(id /* block */)arg1;
- (void)updateTimeObservers;
- (id)videoLayer;
- (unsigned long long)videoScale;
- (id)videoViewController;
- (float)volume;
- (bool)wasInterrupted;
- (bool)wasInterruptedEarly;

@end
