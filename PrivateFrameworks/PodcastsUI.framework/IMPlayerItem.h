
@interface IMPlayerItem : NSObject {
    NSString * _album;
    NSURL * _alternatePaidURL;
    bool  _areChaptersLoaded;
    bool  _areChaptersLoading;
    MPArtworkCatalog * _artworkCatalog;
    NSURL * _artworkUrl;
    AVURLAsset * _asset;
    NSString * _author;
    long long  _channelStoreId;
    NSObject<OS_dispatch_queue> * _chapterLoadingQueue;
    NSArray * _chapters;
    MPNowPlayingContentItem * _contentItem;
    double  _duration;
    long long  _editingStyleFlags;
    bool  _enqueuedByAnotherUser;
    bool  _entitled;
    MTEpisode * _episode;
    IMPlayerArtwork * _episodeArtworkProperties;
    NSString * _episodeGuid;
    long long  _episodeNumber;
    NSManagedObjectID * _episodeObjectID;
    long long  _episodePID;
    NSURL * _episodeShareUrl;
    long long  _episodeStoreId;
    long long  _episodeType;
    NSString * _episodeUuid;
    NSUUID * _instanceIdentifier;
    bool  _isAppleMusicEpisode;
    bool  _isAppleNewsEpisode;
    bool  _isExplicit;
    bool  _isNotSubscribeable;
    bool  _isPlaceholder;
    NSString * _itemDescription;
    IMPlayerManifest * _manifest;
    unsigned long long  _manifestIndex;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _objectIDLock;
    bool  _paidSubscriptionActive;
    long long  _playCount;
    double  _playhead;
    NSString * _podcastDisplayType;
    NSString * _podcastFeedUrl;
    bool  _podcastIsSerial;
    NSURL * _podcastShareUrl;
    long long  _podcastStoreId;
    NSString * _podcastUuid;
    NSString * _priceType;
    NSDate * _pubDate;
    long long  _seasonNumber;
    IMAVSecureKeyLoader * _secureKeyLoader;
    IMPlayerArtwork * _showArtworkProperties;
    NSString * _subtitle;
    NSString * _title;
    IMPlayerArtwork * _uberArtworkProperties;
    NSURL * _url;
    bool  _video;
}

@property (nonatomic, copy) NSString *album;
@property (nonatomic, copy) NSURL *alternatePaidURL;
@property (nonatomic) bool areChaptersLoaded;
@property (nonatomic) bool areChaptersLoading;
@property (nonatomic, retain) MPArtworkCatalog *artworkCatalog;
@property (nonatomic, copy) NSURL *artworkUrl;
@property (nonatomic, retain) AVURLAsset *asset;
@property (nonatomic, copy) NSString *author;
@property (nonatomic) long long channelStoreId;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *chapterLoadingQueue;
@property (nonatomic, retain) NSArray *chapters;
@property (nonatomic, retain) MPNowPlayingContentItem *contentItem;
@property (nonatomic) double duration;
@property (nonatomic) long long editingStyleFlags;
@property (nonatomic) bool enqueuedByAnotherUser;
@property (getter=isEntitled, nonatomic) bool entitled;
@property (nonatomic, readonly) MTEpisode *episode;
@property (nonatomic, retain) IMPlayerArtwork *episodeArtworkProperties;
@property (nonatomic, retain) NSString *episodeGuid;
@property (nonatomic) long long episodeNumber;
@property (nonatomic, retain) NSManagedObjectID *episodeObjectID;
@property (nonatomic) long long episodePID;
@property (nonatomic, retain) NSURL *episodeShareUrl;
@property (nonatomic) long long episodeStoreId;
@property (nonatomic) long long episodeType;
@property (nonatomic, retain) NSString *episodeUuid;
@property (nonatomic, retain) NSUUID *instanceIdentifier;
@property (nonatomic) bool isAppleMusicEpisode;
@property (nonatomic) bool isAppleNewsEpisode;
@property (nonatomic) bool isExplicit;
@property (nonatomic) bool isNotSubscribeable;
@property (nonatomic) bool isPlaceholder;
@property (nonatomic, retain) NSString *itemDescription;
@property (getter=isLocal, nonatomic, readonly) bool local;
@property (nonatomic) IMPlayerManifest *manifest;
@property (nonatomic) unsigned long long manifestIndex;
@property (nonatomic, readonly) NSArray *metadataChapters;
@property (nonatomic) bool paidSubscriptionActive;
@property (nonatomic) long long playCount;
@property (getter=isPlayable, nonatomic, readonly) bool playable;
@property (nonatomic) double playhead;
@property (nonatomic, copy) NSString *podcastDisplayType;
@property (nonatomic, copy) NSString *podcastFeedUrl;
@property (nonatomic) bool podcastIsSerial;
@property (nonatomic, copy) NSURL *podcastShareUrl;
@property (nonatomic) long long podcastStoreId;
@property (nonatomic, copy) NSString *podcastUuid;
@property (nonatomic, retain) NSString *priceType;
@property (nonatomic, retain) NSDate *pubDate;
@property (nonatomic) long long seasonNumber;
@property (nonatomic, retain) IMAVSecureKeyLoader *secureKeyLoader;
@property (nonatomic, retain) IMPlayerArtwork *showArtworkProperties;
@property (nonatomic, retain) NSString *subtitle;
@property (nonatomic, readonly) NSArray *timeChapters;
@property (nonatomic, copy) NSString *title;
@property (nonatomic, retain) IMPlayerArtwork *uberArtworkProperties;
@property (nonatomic, retain) NSURL *url;
@property (getter=isVideo, setter=setIsVideo:, nonatomic) bool video;

- (void).cxx_destruct;
- (bool)_isContentItemLoaded;
- (id)album;
- (id)alternatePaidURL;
- (bool)areChaptersLoaded;
- (bool)areChaptersLoading;
- (id)artworkCatalog;
- (id)artworkIdentifier;
- (id)artworkUrl;
- (id)asset;
- (id)author;
- (void)beginLoadingArtworkForAVPlayerItem:(id)arg1;
- (long long)channelStoreId;
- (id)chapterAtTime:(double)arg1;
- (id)chapterLoadingQueue;
- (id)chapters;
- (void)cleanupAfterError;
- (id)contentItem;
- (id)contentItemIdentifier;
- (id)createAssetForUrl:(id)arg1;
- (double)duration;
- (long long)editingStyleFlags;
- (bool)enqueuedByAnotherUser;
- (id)episode;
- (id)episodeArtworkProperties;
- (id)episodeGuid;
- (long long)episodeNumber;
- (id)episodeObjectID;
- (long long)episodePID;
- (id)episodeShareUrl;
- (long long)episodeStoreId;
- (long long)episodeType;
- (id)episodeUuid;
- (id)externalMetadata;
- (id)fetchArtworkItemProviderForSize:(struct CGSize { double x1; double x2; })arg1;
- (bool)hasChapterArtworkAtTime:(double)arg1;
- (unsigned long long)hash;
- (id)init;
- (id)initWithEpisode:(id)arg1;
- (id)initWithUrl:(id)arg1;
- (id)instanceIdentifier;
- (void)invalidateAsset;
- (bool)isAppleMusicEpisode;
- (bool)isAppleNewsEpisode;
- (bool)isAssetLoaded;
- (bool)isEntitled;
- (bool)isEqual:(id)arg1;
- (bool)isExplicit;
- (bool)isLocal;
- (bool)isNotSubscribeable;
- (bool)isPlaceholder;
- (bool)isPlayable;
- (bool)isShareable;
- (bool)isStreamable;
- (bool)isVideo;
- (id)itemDescription;
- (void)loadChapters;
- (id)manifest;
- (unsigned long long)manifestIndex;
- (id)metadataChapters;
- (bool)notifyUserIsNotPlayable;
- (bool)paidSubscriptionActive;
- (long long)playCount;
- (double)playhead;
- (id)podcastDisplayType;
- (id)podcastFeedUrl;
- (bool)podcastIsSerial;
- (id)podcastShareUrl;
- (long long)podcastStoreId;
- (id)podcastUuid;
- (void)populateContentItem:(id)arg1;
- (id)priceType;
- (id)pubDate;
- (void)recreateContentItem;
- (void)reset;
- (void)retrieveArtwork:(id /* block */)arg1 withSize:(struct CGSize { double x1; double x2; })arg2;
- (void)retrieveArtwork:(id /* block */)arg1 withSize:(struct CGSize { double x1; double x2; })arg2 atTime:(double)arg3;
- (id)retrieveChapterArtworkAtTime:(double)arg1;
- (long long)seasonNumber;
- (id)secureKeyLoader;
- (void)setAlbum:(id)arg1;
- (void)setAlternatePaidURL:(id)arg1;
- (void)setAreChaptersLoaded:(bool)arg1;
- (void)setAreChaptersLoading:(bool)arg1;
- (void)setArtworkCatalog:(id)arg1;
- (void)setArtworkUrl:(id)arg1;
- (void)setAsset:(id)arg1;
- (void)setAuthor:(id)arg1;
- (void)setChannelStoreId:(long long)arg1;
- (void)setChapterLoadingQueue:(id)arg1;
- (void)setChapters:(id)arg1;
- (void)setContentItem:(id)arg1;
- (void)setDuration:(double)arg1;
- (void)setEditingStyleFlags:(long long)arg1;
- (void)setEnqueuedByAnotherUser:(bool)arg1;
- (void)setEntitled:(bool)arg1;
- (void)setEpisodeArtworkProperties:(id)arg1;
- (void)setEpisodeGuid:(id)arg1;
- (void)setEpisodeNumber:(long long)arg1;
- (void)setEpisodeObjectID:(id)arg1;
- (void)setEpisodePID:(long long)arg1;
- (void)setEpisodeShareUrl:(id)arg1;
- (void)setEpisodeStoreId:(long long)arg1;
- (void)setEpisodeType:(long long)arg1;
- (void)setEpisodeUuid:(id)arg1;
- (void)setInstanceIdentifier:(id)arg1;
- (void)setIsAppleMusicEpisode:(bool)arg1;
- (void)setIsAppleNewsEpisode:(bool)arg1;
- (void)setIsExplicit:(bool)arg1;
- (void)setIsNotSubscribeable:(bool)arg1;
- (void)setIsPlaceholder:(bool)arg1;
- (void)setIsVideo:(bool)arg1;
- (void)setItemDescription:(id)arg1;
- (void)setManifest:(id)arg1;
- (void)setManifestIndex:(unsigned long long)arg1;
- (void)setPaidSubscriptionActive:(bool)arg1;
- (void)setPlayCount:(long long)arg1;
- (void)setPlayhead:(double)arg1;
- (void)setPodcastDisplayType:(id)arg1;
- (void)setPodcastFeedUrl:(id)arg1;
- (void)setPodcastIsSerial:(bool)arg1;
- (void)setPodcastShareUrl:(id)arg1;
- (void)setPodcastStoreId:(long long)arg1;
- (void)setPodcastUuid:(id)arg1;
- (void)setPriceType:(id)arg1;
- (void)setPubDate:(id)arg1;
- (void)setSeasonNumber:(long long)arg1;
- (void)setSecureKeyLoader:(id)arg1;
- (void)setShowArtworkProperties:(id)arg1;
- (void)setSubtitle:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setUberArtworkProperties:(id)arg1;
- (void)setUrl:(id)arg1;
- (id)showArtworkProperties;
- (id)streamUrl;
- (id)subtitle;
- (bool)supportsArtworkUrl;
- (id)timeChapters;
- (id)title;
- (id)uberArtworkProperties;
- (void)updateActivity:(id)arg1;
- (void)updateContentItem;
- (bool)upgradeToAlternatePaidVersionIfNeeded;
- (id)url;

@end
