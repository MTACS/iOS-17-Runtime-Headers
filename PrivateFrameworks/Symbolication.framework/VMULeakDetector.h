
@interface VMULeakDetector : NSObject {
    void * _abandoned;
    bool  _checkAbandoned;
    VMUDebugTimer * _debugTimer;
    bool  _fcloseOutput;
    bool  _fullStacks;
    VMUProcessObjectGraph * _graph;
    bool  _groupByType;
    NSMutableArray * _leakTreeRootsArray;
    VMUProcessObjectGraph * _leakedGraph;
    void * _leakedNodes;
    unsigned long long  _max_contents_bytes;
    unsigned int  _numExcluded;
    unsigned int  _objectContentLevel;
    struct __sFILE { char *x1; int x2; int x3; short x4; short x5; struct __sbuf { char *x_6_1_1; int x_6_1_2; } x6; int x7; void *x8; int (*x9)(); int (*x10)(); int (*x11)(); int (*x12)(); struct __sbuf { char *x_13_1_1; int x_13_1_2; } x13; struct __sFILEX {} *x14; int x15; unsigned char x16[3]; unsigned char x17[1]; struct __sbuf { char *x_18_1_1; int x_18_1_2; } x18; int x19; long long x20; } * _outputFile;
    NSMutableString * _outputString;
    bool  _referenceTreeShowRegionVirtualSize;
    VMUTaskMemoryScanner * _scanner;
    bool  _showBinaryContents;
    bool  _showContext;
    bool  _showLeakedVMregions;
    bool  _showListOfLeaks;
    bool  _showOnlyVMregions;
    bool  _showRawClassNames;
    <VMUStackLogReader> * _stackLogReader;
    bool  _suppressOutput;
    VMUTask * _task;
}

@property (nonatomic) void*abandoned;
@property (nonatomic) bool checkAbandoned;
@property (nonatomic, retain) VMUDebugTimer *debugTimer;
@property (nonatomic) bool fcloseOutput;
@property (nonatomic) bool fullStacks;
@property (nonatomic, readonly) VMUProcessObjectGraph *graph;
@property (nonatomic) bool groupByType;
@property (nonatomic, retain) NSMutableArray *leakTreeRootsArray;
@property (nonatomic, retain) VMUProcessObjectGraph *leakedGraph;
@property (nonatomic) void*leakedNodes;
@property (nonatomic) unsigned int objectContentLevel;
@property (nonatomic) struct __sFILE { char *x1; int x2; int x3; short x4; short x5; struct __sbuf { char *x_6_1_1; int x_6_1_2; } x6; int x7; void *x8; int (*x9)(); int (*x10)(); int (*x11)(); int (*x12)(); struct __sbuf { char *x_13_1_1; int x_13_1_2; } x13; struct __sFILEX {} *x14; int x15; unsigned char x16[3]; unsigned char x17[1]; struct __sbuf { char *x_18_1_1; int x_18_1_2; } x18; int x19; long long x20; }*outputFile;
@property (nonatomic, retain) NSMutableString *outputString;
@property (nonatomic) bool referenceTreeShowRegionVirtualSize;
@property (nonatomic, readonly) VMUTaskMemoryScanner *scanner;
@property (nonatomic) bool showBinaryContents;
@property (nonatomic) bool showContext;
@property (nonatomic) bool showLeakedVMregions;
@property (nonatomic) bool showListOfLeaks;
@property (nonatomic) bool showOnlyVMregions;
@property (nonatomic) bool showRawClassNames;
@property (nonatomic, readonly) <VMUStackLogReader> *stackLogReader;
@property (nonatomic) bool suppressOutput;
@property (nonatomic, readonly) VMUTask *task;

+ (id)_consolidatedRootLeakDescriptionsForTree:(id)arg1;
+ (id)consolidatedRootLeakDescriptionsForTree:(id)arg1;
+ (id)referenceDescription:(struct { struct { /* ? */ } *x1; struct { unsigned long long x_2_1_1; unsigned int x_2_1_2; unsigned long long x_2_1_3; } x2; struct { /* ? */ } *x3; })arg1 dstDescription:(id)arg2 is64bit:(bool)arg3;

- (void).cxx_destruct;
- (void*)abandoned;
- (void)buildLeakTree;
- (bool)checkAbandoned;
- (bool)checkTaskExistence;
- (void)dealloc;
- (id)debugTimer;
- (unsigned int)doNormalLeakDetectionWithError:(out id*)arg1;
- (bool)fcloseOutput;
- (bool)fullStacks;
- (id)graph;
- (bool)groupByType;
- (id)initWithTask:(unsigned int)arg1 graph:(id)arg2 scanner:(id)arg3 stackLogReader:(id)arg4;
- (id)initWithVMUTask:(id)arg1 graph:(id)arg2 scanner:(id)arg3 stackLogReader:(id)arg4;
- (id)labelForNode:(unsigned int)arg1 details:(struct { unsigned long long x1; unsigned int x2 : 60; unsigned int x3 : 4; id x4; })arg2 shortLabel:(bool)arg3;
- (id)leakTreeRootsArray;
- (id)leakedGraph;
- (void*)leakedNodes;
- (id)nodeDescription:(unsigned int)arg1;
- (id)nodeDescription:(unsigned int)arg1 usingDetails:(struct { unsigned long long x1; unsigned int x2 : 60; unsigned int x3 : 4; id x4; }*)arg2;
- (id)nodeTypeDescription:(unsigned int)arg1 details:(struct { unsigned long long x1; unsigned int x2 : 60; unsigned int x3 : 4; id x4; }*)arg2 mallocBySize:(bool)arg3;
- (unsigned int)objectContentLevel;
- (struct __sFILE { char *x1; int x2; int x3; short x4; short x5; struct __sbuf { char *x_6_1_1; int x_6_1_2; } x6; int x7; void *x8; int (*x9)(); int (*x10)(); int (*x11)(); int (*x12)(); struct __sbuf { char *x_13_1_1; int x_13_1_2; } x13; struct __sFILEX {} *x14; int x15; unsigned char x16[3]; unsigned char x17[1]; struct __sbuf { char *x_18_1_1; int x_18_1_2; } x18; int x19; long long x20; }*)outputFile;
- (id)outputString;
- (void)printContents:(void*)arg1 size:(unsigned long long)arg2;
- (void)printLeak:(const char *)arg1 node:(unsigned int)arg2 details:(struct { unsigned long long x1; unsigned int x2 : 60; unsigned int x3 : 4; id x4; })arg3 region:(id)arg4 stop:(bool*)arg5;
- (void)printLeakTree;
- (void)printout:(const char *)arg1;
- (id)referenceDescription:(struct { struct { /* ? */ } *x1; struct { unsigned long long x_2_1_1; unsigned int x_2_1_2; unsigned long long x_2_1_3; } x2; struct { /* ? */ } *x3; })arg1 dstDescription:(id)arg2 is64bit:(bool)arg3;
- (bool)referenceTreeShowRegionVirtualSize;
- (id)scanner;
- (id)scannerOrGraph;
- (void)setAbandoned:(void*)arg1;
- (void)setCheckAbandoned:(bool)arg1;
- (void)setDebugTimer:(id)arg1;
- (void)setFcloseOutput:(bool)arg1;
- (void)setFullStacks:(bool)arg1;
- (void)setGroupByType:(bool)arg1;
- (void)setLeakTreeRootsArray:(id)arg1;
- (void)setLeakedGraph:(id)arg1;
- (void)setLeakedNodes:(void*)arg1;
- (void)setObjectContentLevel:(unsigned int)arg1;
- (void)setOutputFile:(struct __sFILE { char *x1; int x2; int x3; short x4; short x5; struct __sbuf { char *x_6_1_1; int x_6_1_2; } x6; int x7; void *x8; int (*x9)(); int (*x10)(); int (*x11)(); int (*x12)(); struct __sbuf { char *x_13_1_1; int x_13_1_2; } x13; struct __sFILEX {} *x14; int x15; unsigned char x16[3]; unsigned char x17[1]; struct __sbuf { char *x_18_1_1; int x_18_1_2; } x18; int x19; long long x20; }*)arg1;
- (void)setOutputString:(id)arg1;
- (void)setReferenceTreeShowRegionVirtualSize:(bool)arg1;
- (void)setShowBinaryContents:(bool)arg1;
- (void)setShowContext:(bool)arg1;
- (void)setShowLeakedVMregions:(bool)arg1;
- (void)setShowListOfLeaks:(bool)arg1;
- (void)setShowOnlyVMregions:(bool)arg1;
- (void)setShowRawClassNames:(bool)arg1;
- (void)setSuppressOutput:(bool)arg1;
- (bool)showBinaryContents;
- (bool)showContext;
- (bool)showLeakedVMregions;
- (bool)showListOfLeaks;
- (bool)showOnlyVMregions;
- (bool)showRawClassNames;
- (id)stackLogReader;
- (bool)suppressOutput;
- (id)task;

@end
