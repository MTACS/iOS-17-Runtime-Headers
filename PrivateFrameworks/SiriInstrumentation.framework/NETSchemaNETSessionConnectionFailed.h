
@interface NETSchemaNETSessionConnectionFailed : SISchemaInstrumentationMessage {
    int  _connectionMode;
    int  _connectionType;
    NETSchemaNETError * _error;
    struct { 
        unsigned int connectionType : 1; 
        unsigned int connectionMode : 1; 
        unsigned int sessionType : 1; 
        unsigned int networkSessionState : 1; 
        unsigned int isWwanPreferred : 1; 
        unsigned int isDormant : 1; 
        unsigned int sendBufferSize : 1; 
    }  _has;
    bool  _hasError;
    bool  _hasPolicyId;
    bool  _hasUnderlyingError;
    bool  _isDormant;
    bool  _isWwanPreferred;
    int  _networkSessionState;
    NSString * _policyId;
    unsigned long long  _sendBufferSize;
    int  _sessionType;
    NETSchemaNETError * _underlyingError;
}

@property (nonatomic) int connectionMode;
@property (nonatomic) int connectionType;
@property (nonatomic, retain) NETSchemaNETError *error;
@property (nonatomic) bool hasConnectionMode;
@property (nonatomic) bool hasConnectionType;
@property (nonatomic) bool hasError;
@property (nonatomic) bool hasIsDormant;
@property (nonatomic) bool hasIsWwanPreferred;
@property (nonatomic) bool hasNetworkSessionState;
@property (nonatomic) bool hasPolicyId;
@property (nonatomic) bool hasSendBufferSize;
@property (nonatomic) bool hasSessionType;
@property (nonatomic) bool hasUnderlyingError;
@property (nonatomic) bool isDormant;
@property (nonatomic) bool isWwanPreferred;
@property (nonatomic, readonly) NSData *jsonData;
@property (nonatomic) int networkSessionState;
@property (nonatomic, copy) NSString *policyId;
@property (nonatomic) unsigned long long sendBufferSize;
@property (nonatomic) int sessionType;
@property (nonatomic, retain) NETSchemaNETError *underlyingError;

- (void).cxx_destruct;
- (id)applySensitiveConditionsPolicy:(id)arg1;
- (int)connectionMode;
- (int)connectionType;
- (void)deleteConnectionMode;
- (void)deleteConnectionType;
- (void)deleteError;
- (void)deleteIsDormant;
- (void)deleteIsWwanPreferred;
- (void)deleteNetworkSessionState;
- (void)deletePolicyId;
- (void)deleteSendBufferSize;
- (void)deleteSessionType;
- (void)deleteUnderlyingError;
- (id)dictionaryRepresentation;
- (id)error;
- (bool)hasConnectionMode;
- (bool)hasConnectionType;
- (bool)hasError;
- (bool)hasIsDormant;
- (bool)hasIsWwanPreferred;
- (bool)hasNetworkSessionState;
- (bool)hasPolicyId;
- (bool)hasSendBufferSize;
- (bool)hasSessionType;
- (bool)hasUnderlyingError;
- (unsigned long long)hash;
- (id)initWithDictionary:(id)arg1;
- (id)initWithJSON:(id)arg1;
- (bool)isDormant;
- (bool)isEqual:(id)arg1;
- (bool)isWwanPreferred;
- (id)jsonData;
- (int)networkSessionState;
- (id)policyId;
- (bool)readFrom:(id)arg1;
- (unsigned long long)sendBufferSize;
- (int)sessionType;
- (void)setConnectionMode:(int)arg1;
- (void)setConnectionType:(int)arg1;
- (void)setError:(id)arg1;
- (void)setHasConnectionMode:(bool)arg1;
- (void)setHasConnectionType:(bool)arg1;
- (void)setHasError:(bool)arg1;
- (void)setHasIsDormant:(bool)arg1;
- (void)setHasIsWwanPreferred:(bool)arg1;
- (void)setHasNetworkSessionState:(bool)arg1;
- (void)setHasPolicyId:(bool)arg1;
- (void)setHasSendBufferSize:(bool)arg1;
- (void)setHasSessionType:(bool)arg1;
- (void)setHasUnderlyingError:(bool)arg1;
- (void)setIsDormant:(bool)arg1;
- (void)setIsWwanPreferred:(bool)arg1;
- (void)setNetworkSessionState:(int)arg1;
- (void)setPolicyId:(id)arg1;
- (void)setSendBufferSize:(unsigned long long)arg1;
- (void)setSessionType:(int)arg1;
- (void)setUnderlyingError:(id)arg1;
- (id)suppressMessageUnderConditions;
- (id)underlyingError;
- (void)writeTo:(id)arg1;

@end
