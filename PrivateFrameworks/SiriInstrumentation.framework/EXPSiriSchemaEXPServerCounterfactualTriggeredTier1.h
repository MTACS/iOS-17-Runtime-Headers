
@interface EXPSiriSchemaEXPServerCounterfactualTriggeredTier1 : SISchemaInstrumentationMessage {
    NSArray * _allocations;
    SISchemaUUID * _codepathId;
    float  _compareRankingAtK;
    NSArray * _counterfactualAllocations;
    EXPSiriSchemaEXPSiriPegasusResponseSummary * _counterfactualSummary;
    int  _diffOutcome;
    struct { 
        unsigned int isCounterfactualDifferent : 1; 
        unsigned int compareRankingAtK : 1; 
        unsigned int kValue : 1; 
        unsigned int diffOutcome : 1; 
    }  _has;
    bool  _hasCodepathId;
    bool  _hasCounterfactualSummary;
    bool  _hasPegasusId;
    bool  _hasTreatmentSummary;
    bool  _isCounterfactualDifferent;
    long long  _kValue;
    SISchemaUUID * _pegasusId;
    EXPSiriSchemaEXPSiriPegasusResponseSummary * _treatmentSummary;
}

@property (nonatomic, copy) NSArray *allocations;
@property (nonatomic, retain) SISchemaUUID *codepathId;
@property (nonatomic) float compareRankingAtK;
@property (nonatomic, copy) NSArray *counterfactualAllocations;
@property (nonatomic, retain) EXPSiriSchemaEXPSiriPegasusResponseSummary *counterfactualSummary;
@property (nonatomic) int diffOutcome;
@property (nonatomic) bool hasCodepathId;
@property (nonatomic) bool hasCompareRankingAtK;
@property (nonatomic) bool hasCounterfactualSummary;
@property (nonatomic) bool hasDiffOutcome;
@property (nonatomic) bool hasIsCounterfactualDifferent;
@property (nonatomic) bool hasKValue;
@property (nonatomic) bool hasPegasusId;
@property (nonatomic) bool hasTreatmentSummary;
@property (nonatomic) bool isCounterfactualDifferent;
@property (nonatomic, readonly) NSData *jsonData;
@property (nonatomic) long long kValue;
@property (nonatomic, retain) SISchemaUUID *pegasusId;
@property (nonatomic, retain) EXPSiriSchemaEXPSiriPegasusResponseSummary *treatmentSummary;

- (void).cxx_destruct;
- (void)addAllocation:(id)arg1;
- (void)addCounterfactualAllocation:(id)arg1;
- (id)allocationAtIndex:(unsigned long long)arg1;
- (unsigned long long)allocationCount;
- (id)allocations;
- (id)applySensitiveConditionsPolicy:(id)arg1;
- (void)clearAllocation;
- (void)clearCounterfactualAllocation;
- (id)codepathId;
- (float)compareRankingAtK;
- (id)counterfactualAllocationAtIndex:(unsigned long long)arg1;
- (unsigned long long)counterfactualAllocationCount;
- (id)counterfactualAllocations;
- (id)counterfactualSummary;
- (void)deleteAllocation;
- (void)deleteCodepathId;
- (void)deleteCompareRankingAtK;
- (void)deleteCounterfactualAllocation;
- (void)deleteCounterfactualSummary;
- (void)deleteDiffOutcome;
- (void)deleteIsCounterfactualDifferent;
- (void)deleteKValue;
- (void)deletePegasusId;
- (void)deleteTreatmentSummary;
- (id)dictionaryRepresentation;
- (int)diffOutcome;
- (bool)hasCodepathId;
- (bool)hasCompareRankingAtK;
- (bool)hasCounterfactualSummary;
- (bool)hasDiffOutcome;
- (bool)hasIsCounterfactualDifferent;
- (bool)hasKValue;
- (bool)hasPegasusId;
- (bool)hasTreatmentSummary;
- (unsigned long long)hash;
- (id)initWithDictionary:(id)arg1;
- (id)initWithJSON:(id)arg1;
- (bool)isCounterfactualDifferent;
- (bool)isEqual:(id)arg1;
- (id)jsonData;
- (long long)kValue;
- (id)pegasusId;
- (bool)readFrom:(id)arg1;
- (void)setAllocations:(id)arg1;
- (void)setCodepathId:(id)arg1;
- (void)setCompareRankingAtK:(float)arg1;
- (void)setCounterfactualAllocations:(id)arg1;
- (void)setCounterfactualSummary:(id)arg1;
- (void)setDiffOutcome:(int)arg1;
- (void)setHasCodepathId:(bool)arg1;
- (void)setHasCompareRankingAtK:(bool)arg1;
- (void)setHasCounterfactualSummary:(bool)arg1;
- (void)setHasDiffOutcome:(bool)arg1;
- (void)setHasIsCounterfactualDifferent:(bool)arg1;
- (void)setHasKValue:(bool)arg1;
- (void)setHasPegasusId:(bool)arg1;
- (void)setHasTreatmentSummary:(bool)arg1;
- (void)setIsCounterfactualDifferent:(bool)arg1;
- (void)setKValue:(long long)arg1;
- (void)setPegasusId:(id)arg1;
- (void)setTreatmentSummary:(id)arg1;
- (id)suppressMessageUnderConditions;
- (id)treatmentSummary;
- (void)writeTo:(id)arg1;

@end
