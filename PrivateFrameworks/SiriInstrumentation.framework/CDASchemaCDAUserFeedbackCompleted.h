
@interface CDASchemaCDAUserFeedbackCompleted : SISchemaInstrumentationMessage {
    int  _dataCollectionGroup;
    SISchemaUUID * _expectedWinnerSiriSpeechId;
    NSString * _experimentId;
    NSString * _failureReasonCategory;
    struct { 
        unsigned int userFeedbackStatus : 1; 
        unsigned int isCorrectDeviceSelected : 1; 
        unsigned int userReportedResponseDeviceDistance : 1; 
        unsigned int dataCollectionGroup : 1; 
        unsigned int hasResponseFromMultipleDevices : 1; 
    }  _has;
    bool  _hasExpectedWinnerSiriSpeechId;
    bool  _hasExperimentId;
    bool  _hasFailureReasonCategory;
    bool  _hasResponseFromMultipleDevices;
    bool  _hasSurveyId;
    bool  _isCorrectDeviceSelected;
    NSString * _surveyId;
    int  _userFeedbackStatus;
    double  _userReportedResponseDeviceDistance;
}

@property (nonatomic) int dataCollectionGroup;
@property (nonatomic, retain) SISchemaUUID *expectedWinnerSiriSpeechId;
@property (nonatomic, copy) NSString *experimentId;
@property (nonatomic, copy) NSString *failureReasonCategory;
@property (nonatomic) bool hasDataCollectionGroup;
@property (nonatomic) bool hasExpectedWinnerSiriSpeechId;
@property (nonatomic) bool hasExperimentId;
@property (nonatomic) bool hasFailureReasonCategory;
@property (nonatomic) bool hasHasResponseFromMultipleDevices;
@property (nonatomic) bool hasIsCorrectDeviceSelected;
@property (nonatomic) bool hasResponseFromMultipleDevices;
@property (nonatomic) bool hasSurveyId;
@property (nonatomic) bool hasUserFeedbackStatus;
@property (nonatomic) bool hasUserReportedResponseDeviceDistance;
@property (nonatomic) bool isCorrectDeviceSelected;
@property (nonatomic, readonly) NSData *jsonData;
@property (nonatomic, copy) NSString *surveyId;
@property (nonatomic) int userFeedbackStatus;
@property (nonatomic) double userReportedResponseDeviceDistance;

- (void).cxx_destruct;
- (id)applySensitiveConditionsPolicy:(id)arg1;
- (int)dataCollectionGroup;
- (void)deleteDataCollectionGroup;
- (void)deleteExpectedWinnerSiriSpeechId;
- (void)deleteExperimentId;
- (void)deleteFailureReasonCategory;
- (void)deleteHasResponseFromMultipleDevices;
- (void)deleteIsCorrectDeviceSelected;
- (void)deleteSurveyId;
- (void)deleteUserFeedbackStatus;
- (void)deleteUserReportedResponseDeviceDistance;
- (id)dictionaryRepresentation;
- (id)expectedWinnerSiriSpeechId;
- (id)experimentId;
- (id)failureReasonCategory;
- (bool)hasDataCollectionGroup;
- (bool)hasExpectedWinnerSiriSpeechId;
- (bool)hasExperimentId;
- (bool)hasFailureReasonCategory;
- (bool)hasHasResponseFromMultipleDevices;
- (bool)hasIsCorrectDeviceSelected;
- (bool)hasResponseFromMultipleDevices;
- (bool)hasSurveyId;
- (bool)hasUserFeedbackStatus;
- (bool)hasUserReportedResponseDeviceDistance;
- (unsigned long long)hash;
- (id)initWithDictionary:(id)arg1;
- (id)initWithJSON:(id)arg1;
- (bool)isCorrectDeviceSelected;
- (bool)isEqual:(id)arg1;
- (id)jsonData;
- (bool)readFrom:(id)arg1;
- (void)setDataCollectionGroup:(int)arg1;
- (void)setExpectedWinnerSiriSpeechId:(id)arg1;
- (void)setExperimentId:(id)arg1;
- (void)setFailureReasonCategory:(id)arg1;
- (void)setHasDataCollectionGroup:(bool)arg1;
- (void)setHasExpectedWinnerSiriSpeechId:(bool)arg1;
- (void)setHasExperimentId:(bool)arg1;
- (void)setHasFailureReasonCategory:(bool)arg1;
- (void)setHasHasResponseFromMultipleDevices:(bool)arg1;
- (void)setHasIsCorrectDeviceSelected:(bool)arg1;
- (void)setHasResponseFromMultipleDevices:(bool)arg1;
- (void)setHasSurveyId:(bool)arg1;
- (void)setHasUserFeedbackStatus:(bool)arg1;
- (void)setHasUserReportedResponseDeviceDistance:(bool)arg1;
- (void)setIsCorrectDeviceSelected:(bool)arg1;
- (void)setSurveyId:(id)arg1;
- (void)setUserFeedbackStatus:(int)arg1;
- (void)setUserReportedResponseDeviceDistance:(double)arg1;
- (id)suppressMessageUnderConditions;
- (id)surveyId;
- (int)userFeedbackStatus;
- (double)userReportedResponseDeviceDistance;
- (void)writeTo:(id)arg1;

@end
