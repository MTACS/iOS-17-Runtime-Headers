
@interface NWStatsManager : NSObject {
    NWStatsPollHandler * _activePoll;
    NSObject<OS_dispatch_queue> * _clientQueue;
    struct combined_counts { 
        unsigned long long numRemoves; 
        unsigned long long numRemovesAfterDrop; 
        unsigned long long numRemovesAfterFilter; 
        unsigned long long numRemoveSources; 
        unsigned long long numRemoveSourcesAfterDrop; 
        unsigned long long numRemoveSourcesAfterFilter; 
    }  _combinedCounts;
    bool  _configured;
    unsigned int  _consecutiveReadLimit;
    unsigned int  _continuationCount;
    unsigned long long  _currentPollReference;
    unsigned long long  _currentQueryAllReference;
    int  _currentRcvBufSize;
    double  _currentRcvBufTimestamp;
    <NWStatsManagerDelegate> * _delegate;
    bool  _eagerInstantiate;
    bool  _handlingSocketReads;
    char * _iftracebuf;
    NSMutableSet * _interfaceSources;
    int  _interfaceTraceFd;
    NSMutableDictionary * _internalSources;
    bool  _invalidated;
    unsigned long long  _nextPollReference;
    int  _numAdaptiveRcvBufIncrements;
    struct provider_counts { 
        unsigned long long numSrcsAdded; 
        unsigned long long numUpdatesOnOpen; 
        unsigned long long numUpdatesOnPoll; 
        unsigned long long numUpdatesOnEvent; 
        unsigned long long numUpdatesOnClose; 
    }  _providerCounts;
    unsigned long long  _querySequenceNumber;
    NSMutableArray * _queuedPolls;
    char * _readBuffer;
    NSObject<OS_dispatch_source> * _readSource;
    int  _sockfd;
    NWStatsMonitor * _statsMonitor;
    double  _trafficDeltaAdjustmentFactor;
}

@property (retain) NWStatsPollHandler *activePoll;
@property (retain) NSObject<OS_dispatch_queue> *clientQueue;
@property bool configured;
@property unsigned long long currentQueryAllReference;
@property (nonatomic) <NWStatsManagerDelegate> *delegate;
@property (retain) NSMutableSet *interfaceSources;
@property (retain) NSMutableDictionary *internalSources;
@property (getter=isInvalidated) bool invalidated;
@property unsigned long long querySequenceNumber;
@property (retain) NSMutableArray *queuedPolls;
@property char *readBuffer;
@property (retain) NSObject<OS_dispatch_source> *readSource;
@property int sockfd;
@property (retain) NWStatsMonitor *statsMonitor;

- (void).cxx_destruct;
- (void)_adaptAfterDrop;
- (void)_addAllForProvider:(int)arg1 filter:(unsigned long long)arg2 events:(unsigned long long)arg3;
- (void)_drainReadBuffer;
- (void)_handleCompletion:(unsigned long long)arg1;
- (void)_handleCounts:(struct nstat_msg_src_counts { struct nstat_msg_hdr { unsigned long long x_1_1_1; unsigned int x_1_1_2; unsigned short x_1_1_3; unsigned short x_1_1_4; } x1; unsigned long long x2; unsigned long long x3; struct nstat_counts { unsigned long long x_4_1_1; unsigned long long x_4_1_2; unsigned long long x_4_1_3; unsigned long long x_4_1_4; unsigned long long x_4_1_5; unsigned long long x_4_1_6; unsigned long long x_4_1_7; unsigned long long x_4_1_8; unsigned long long x_4_1_9; unsigned long long x_4_1_10; unsigned int x_4_1_11; unsigned int x_4_1_12; unsigned int x_4_1_13; unsigned int x_4_1_14; unsigned int x_4_1_15; unsigned int x_4_1_16; unsigned int x_4_1_17; unsigned int x_4_1_18; } x4; }*)arg1;
- (void)_handleMessage:(struct nstat_msg_hdr { unsigned long long x1; unsigned int x2; unsigned short x3; unsigned short x4; }*)arg1 length:(long long)arg2;
- (void)_handleReads:(long long)arg1;
- (void)_handleRemoveForSource:(id)arg1;
- (void)_noteInterfaceSrcRef:(unsigned long long)arg1 forInterface:(unsigned int)arg2 threshold:(unsigned long long)arg3;
- (int)_refreshSyncUsingBlock:(id /* block */)arg1;
- (int)_refreshUsingBlock:(id /* block */)arg1 completionBlock:(id /* block */)arg2;
- (void)_removeSourceInternal:(unsigned long long)arg1;
- (void)_restartPoll:(id)arg1;
- (void)_sendMessage:(struct nstat_msg_hdr { unsigned long long x1; unsigned int x2; unsigned short x3; unsigned short x4; }*)arg1 length:(long long)arg2;
- (void)_sendPoll;
- (void)_sendRemoveSource:(unsigned long long)arg1;
- (void)_sendUpdateRequestMessage:(unsigned long long)arg1;
- (void)_setInterfaceTraceFd:(int)arg1;
- (void)_setThreshold:(unsigned long long)arg1 onInterface:(unsigned int)arg2;
- (int)_setThresholds:(id)arg1;
- (void)_startPoll:(id)arg1;
- (void)_startQueuedPoll;
- (void)_trace:(char *)arg1;
- (void)_traceMemoryBuf:(char *)arg1 length:(long long)arg2 tag:(char *)arg3;
- (id)activePoll;
- (id)clientQueue;
- (int)configure:(id)arg1;
- (bool)configured;
- (unsigned long long)currentQueryAllReference;
- (void)dealloc;
- (id)delegate;
- (void)dumpState;
- (id)getState;
- (id)identifierForUUID:(id)arg1 derivation:(int*)arg2;
- (void)ignoreFlow:(unsigned long long)arg1;
- (void)ignoreSource:(unsigned long long)arg1;
- (id)initWithQueue:(id)arg1;
- (int)initialConfigure:(id)arg1;
- (id)interfaceSources;
- (id)internalSources;
- (void)invalidate;
- (bool)isInvalidated;
- (unsigned long long)querySequenceNumber;
- (id)queuedPolls;
- (char *)readBuffer;
- (id)readSource;
- (int)reconfigure:(id)arg1;
- (int)refresh:(id /* block */)arg1;
- (int)refreshSync;
- (int)refreshSyncUsingBlock:(id /* block */)arg1;
- (int)refreshUsingBlock:(id /* block */)arg1 completionBlock:(id /* block */)arg2;
- (void)setActivePoll:(id)arg1;
- (void)setClientQueue:(id)arg1;
- (void)setConfigured:(bool)arg1;
- (void)setCurrentQueryAllReference:(unsigned long long)arg1;
- (void)setDelegate:(id)arg1;
- (void)setInterfaceSources:(id)arg1;
- (void)setInternalSources:(id)arg1;
- (void)setInvalidated:(bool)arg1;
- (void)setQuerySequenceNumber:(unsigned long long)arg1;
- (void)setQueuedPolls:(id)arg1;
- (bool)setRcvBufsize:(int)arg1;
- (void)setReadBuffer:(char *)arg1;
- (void)setReadSource:(id)arg1;
- (void)setSockfd:(int)arg1;
- (void)setStatsMonitor:(id)arg1;
- (int)sockfd;
- (id)stateDictionary;
- (id)statsMonitor;
- (int)statsRefreshCurrentUsage;

@end
