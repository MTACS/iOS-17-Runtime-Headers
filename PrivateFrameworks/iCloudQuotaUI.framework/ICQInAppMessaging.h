
@interface ICQInAppMessaging : NSObject <CoreTelephonyClientDataDelegate, RadiosPreferencesDelegate> {
    ACAccountStore * _accountStore;
    NSString * _bundleID;
    struct __CTServerConnection { } * _cellularDataConnection;
    NSObject<OS_nw_path_monitor> * _connectivityMonitor;
    NSObject<OS_dispatch_queue> * _connectivityQueue;
    CoreTelephonyClient * _ctClient;
    ICQOffer * _defaultOffer;
    NSUserDefaults * _defaults;
    bool  _hasNewObserver;
    bool  _iCloudReachable;
    bool  _isRegisteredForNotifications;
    ICQInAppMessage * _lastMessage;
    NSObject<OS_dispatch_queue> * _messageQueue;
    ICQInAppMessage * _mockMessage;
    ICQPremiumOffer * _premiumOffer;
    RadiosPreferences * _radioPrefs;
    ICQOffer * _regularOffer;
    ICQOfferManager * _sharedOfferManager;
    ICQUnfairLock * _unfairLock;
}

@property (nonatomic, retain) ACAccountStore *accountStore;
@property (nonatomic, copy) NSString *bundleID;
@property (nonatomic, retain) NSObject<OS_nw_path_monitor> *connectivityMonitor;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, retain) ICQOffer *defaultOffer;
@property (nonatomic, retain) NSUserDefaults *defaults;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool hasNewObserver;
@property (readonly) unsigned long long hash;
@property (getter=isICloudReachable, nonatomic) bool iCloudReachable;
@property (nonatomic) bool isRegisteredForNotifications;
@property (nonatomic, retain) ICQInAppMessage *lastMessage;
@property (nonatomic, retain) ICQInAppMessage *mockMessage;
@property (nonatomic, retain) ICQPremiumOffer *premiumOffer;
@property (nonatomic, retain) RadiosPreferences *radioPrefs;
@property (nonatomic, retain) ICQOffer *regularOffer;
@property (nonatomic, retain) ICQOfferManager *sharedOfferManager;
@property (readonly) Class superclass;
@property (nonatomic, retain) ICQUnfairLock *unfairLock;

+ (id)shared;

- (void).cxx_destruct;
- (id)_actionsForBannerSpecification:(id)arg1 offer:(id)arg2;
- (unsigned long long)_contentTypeForDriveWithOffer:(id)arg1;
- (unsigned long long)_contentTypeForMessageWithOffer:(id)arg1;
- (unsigned long long)_contentTypeForQuotaOffer:(id)arg1;
- (id)_dismissActionForBannerSpecification:(id)arg1 offer:(id)arg2;
- (void)_fetchDefaultOffer;
- (void)_fetchInitialOfferStates;
- (void)_fetchPremiumOffer;
- (void)_fetchRegularOffer;
- (bool)_isCellularDataOff;
- (void)_observeUpdatesForBundleID:(id)arg1;
- (void)_recalculateAndPostCurrentMessage;
- (id)_recalculateCurrentMessage;
- (void)_registerForNotifications;
- (void)_startMonitoringNetworkStatus;
- (id)_symbolNameForQuotaOffer:(id)arg1;
- (bool)_termsNotAccepted;
- (id)accountStore;
- (void)airplaneModeChanged;
- (id)airplaneModeOnMessageFromDefaultOffer:(id)arg1;
- (id)bundleID;
- (id)cellularDataOffMessageFromDefaultOffer:(id)arg1;
- (id)connectivityMonitor;
- (void)dataSettingsChanged:(id)arg1;
- (id)defaultOffer;
- (id)defaults;
- (void)fetchMessageForReason:(id)arg1 pendingItemsCount:(id)arg2 withCompletion:(id /* block */)arg3;
- (void)fetchMessageForReason:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)fetchMessageWithCompletion:(id /* block */)arg1;
- (bool)hasNewObserver;
- (id)init;
- (bool)isICloudReachable;
- (bool)isRegisteredForNotifications;
- (id)lastMessage;
- (id)mockMessage;
- (void)observeUpdates;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (id)premiumOffer;
- (id)quotaMessageForOffer:(id)arg1;
- (id)radioPrefs;
- (id)regularOffer;
- (id)serverUnreachableMessageFromDefaultOffer:(id)arg1;
- (void)setAccountStore:(id)arg1;
- (void)setBundleID:(id)arg1;
- (void)setConnectivityMonitor:(id)arg1;
- (void)setDefaultOffer:(id)arg1;
- (void)setDefaults:(id)arg1;
- (void)setHasNewObserver:(bool)arg1;
- (void)setICloudReachable:(bool)arg1;
- (void)setIsRegisteredForNotifications:(bool)arg1;
- (void)setLastMessage:(id)arg1;
- (void)setMockMessage:(id)arg1;
- (void)setPremiumOffer:(id)arg1;
- (void)setRadioPrefs:(id)arg1;
- (void)setRegularOffer:(id)arg1;
- (void)setSharedOfferManager:(id)arg1;
- (void)setUnfairLock:(id)arg1;
- (id)sharedOfferManager;
- (void)stopObservingUpdates;
- (id)termsNotAcceptedMessageFromDefaultOffer:(id)arg1;
- (id)unfairLock;
- (id)uploadFailureMessageForPendingItemCount:(id)arg1 defaultOffer:(id)arg2;

@end
