
@interface CaptureMTLIntersectionFunctionTable : NSObject <CaptureMTLObject, MTLIntersectionFunctionTable, MTLResourceSPI> {
    <MTLIntersectionFunctionTableSPI><MTLResourceSPI> * _baseObject;
    NSMutableArray * _buffers;
    <MTLBuffer> * _captureBuffer;
    <MTLComputePipelineState> * _captureComputePipelineState;
    <MTLDevice> * _captureDevice;
    <MTLHeap> * _captureHeap;
    <MTLRenderPipelineState> * _captureRenderPipelineState;
    NSMutableArray * _functions;
    struct GTTraceContext { } * _traceContext;
    struct GTTraceStream { } * _traceStream;
}

@property (readonly) unsigned long long allocatedSize;
@property (readonly) unsigned long long allocationID;
@property (readonly) <MTLIntersectionFunctionTable> *baseObject;
@property (readonly) unsigned long long cpuCacheMode;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) <MTLDevice> *device;
@property (readonly) NSArray *functionArray;
@property (readonly) struct MTLResourceID { unsigned long long x1; } gpuResourceID;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned long long hazardTrackingMode;
@property (readonly) <MTLHeap> *heap;
@property (readonly) unsigned long long heapOffset;
@property (copy) NSString *label;
@property (readonly) unsigned long long protectionOptions;
@property (readonly) unsigned long long resourceOptions;
@property int responsibleProcess;
@property (readonly) unsigned long long storageMode;
@property (readonly) unsigned long long streamReference;
@property (readonly) Class superclass;
@property (readonly) struct GTTraceContext { }*traceContext;
@property (readonly) struct GTTraceStream { }*traceStream;
@property (readonly) unsigned long long unfilteredResourceOptions;

- (void).cxx_destruct;
- (unsigned long long)allocatedSize;
- (unsigned long long)allocationID;
- (id)baseObject;
- (unsigned long long)bufferAddressAtIndex:(unsigned long long)arg1;
- (bool)conformsToProtocol:(id)arg1;
- (unsigned long long)cpuCacheMode;
- (void)dealloc;
- (id)description;
- (id)device;
- (bool)doesAliasAllResources:(const id*)arg1 count:(unsigned long long)arg2;
- (bool)doesAliasAnyResources:(const id*)arg1 count:(unsigned long long)arg2;
- (bool)doesAliasResource:(id)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (id)functionArray;
- (id)globalBuffer;
- (unsigned long long)globalBufferOffset;
- (unsigned long long)gpuHandle;
- (struct MTLResourceID { unsigned long long x1; })gpuResourceID;
- (unsigned long long)hazardTrackingMode;
- (id)heap;
- (unsigned long long)heapOffset;
- (id)initWithBaseObject:(id)arg1 captureComputePipelineState:(id)arg2 descriptor:(id)arg3;
- (id)initWithBaseObject:(id)arg1 captureDevice:(id)arg2 descriptor:(id)arg3;
- (id)initWithBaseObject:(id)arg1 captureRenderPipelineState:(id)arg2 descriptor:(id)arg3;
- (bool)isAliasable;
- (bool)isComplete;
- (bool)isPurgeable;
- (id)label;
- (void)makeAliasable;
- (id)originalObject;
- (unsigned long long)protectionOptions;
- (unsigned long long)resourceIndex;
- (unsigned long long)resourceOptions;
- (bool)respondsToSelector:(SEL)arg1;
- (int)responsibleProcess;
- (void)setBuffer:(id)arg1 offset:(unsigned long long)arg2 atIndex:(unsigned long long)arg3;
- (void)setBuffers:(const id*)arg1 offsets:(const unsigned long long*)arg2 withRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3;
- (void)setFunction:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)setFunctions:(const id*)arg1 withRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)setGlobalBuffer:(id)arg1;
- (void)setGlobalBufferOffset:(unsigned long long)arg1;
- (void)setLabel:(id)arg1;
- (void)setOpaqueTriangleIntersectionFunctionWithSignature:(unsigned long long)arg1 atIndex:(unsigned long long)arg2;
- (void)setOpaqueTriangleIntersectionFunctionWithSignature:(unsigned long long)arg1 withRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (unsigned long long)setPurgeableState:(unsigned long long)arg1;
- (void)setResponsibleProcess:(int)arg1;
- (void)setVisibleFunctionTable:(id)arg1 atBufferIndex:(unsigned long long)arg2;
- (void)setVisibleFunctionTables:(const id*)arg1 withBufferRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (unsigned long long)storageMode;
- (unsigned long long)streamReference;
- (void)touch;
- (struct GTTraceContext { }*)traceContext;
- (struct GTTraceStream { }*)traceStream;
- (unsigned long long)unfilteredResourceOptions;
- (unsigned long long)uniqueIdentifier;
- (void)waitUntilComplete;

@end
