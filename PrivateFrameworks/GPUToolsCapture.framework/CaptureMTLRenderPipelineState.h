
@interface CaptureMTLRenderPipelineState : NSObject <CaptureMTLObject, MTLRenderPipelineStateSPI> {
    <MTLRenderPipelineStateSPI> * _baseObject;
    CaptureMTLDevice * _captureDevice;
    CaptureMTLRenderPipelineState * _capturePipelineState;
    MTLRenderPipelineDescriptor * _descriptor;
    NSMapTable * _functionHandleMap;
    MTLMeshRenderPipelineDescriptor * _meshDescriptor;
    MTLRenderPipelineReflection * _reflection;
    MTLTileRenderPipelineDescriptor * _tileDescriptor;
    struct GTTraceContext { struct _opaque_pthread_mutex_t { long long x_1_1_1; BOOL x_1_1_2[56]; } x1; struct GTTraceStore {} *x2; _Atomic unsigned long long x3; _Atomic unsigned long long x4; struct apr_hash_t {} *x5; union { /* Warning: Unrecognized filer type: 'F' using 'void*' */ void*x_6_1_1; const void*x_6_1_2; void*x_6_1_3; inout out double x_6_1_4; void*x_6_1_5; } *x6; _Atomic int x7; BOOL x8[4]; struct GTTraceStream {} *x9; _Atomic bool x10; BOOL x11[7]; struct GTTraceStoreList { union { void*x_1_2_1; void*x_1_2_2; void*x_1_2_3; const void*x_1_2_4; BOOL x_1_2_5; void*x_1_2_6; unsigned short x_1_2_7; void*x_1_2_8; out const void*x_1_2_9; inout out double x_1_2_10; void*x_1_2_11; } *x_12_1_1; union { void*x_2_2_1; void*x_2_2_2; void*x_2_2_3; const void*x_2_2_4; BOOL x_2_2_5; void*x_2_2_6; unsigned short x_2_2_7; void*x_2_2_8; out const void*x_2_2_9; inout out double x_2_2_10; void*x_2_2_11; } *x_12_1_2; _Atomic int x_12_1_3; _Atomic int x_12_1_4; } x12[16]; } * _traceContext;
    struct GTTraceStream { unsigned long long x1; unsigned long long x2; unsigned long long x3; struct GTTraceMemPool {} *x4; struct GTTraceStoreList { union { /* Warning: Unrecognized filer type: 'G' using 'void*' */ void*x_1_2_1; void*x_1_2_2; void*x_1_2_3; const void*x_1_2_4; BOOL x_1_2_5; void*x_1_2_6; unsigned short x_1_2_7; void*x_1_2_8; out const void*x_1_2_9; inout out double x_1_2_10; void*x_1_2_11; } *x_5_1_1; union { void*x_2_2_1; void*x_2_2_2; void*x_2_2_3; const void*x_2_2_4; BOOL x_2_2_5; void*x_2_2_6; unsigned short x_2_2_7; void*x_2_2_8; out const void*x_2_2_9; inout out double x_2_2_10; void*x_2_2_11; } *x_5_1_2; _Atomic int x_5_1_3; _Atomic int x_5_1_4; } x5; _Atomic unsigned long long x6; } * _traceStream;
}

@property (nonatomic, readonly) unsigned long long allocatedSize;
@property (readonly) <MTLRenderPipelineState> *baseObject;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) MTLRenderPipelineDescriptor *descriptor;
@property (readonly) <MTLDevice> *device;
@property (nonatomic, readonly) unsigned int explicitVisibilityGroupID;
@property (nonatomic, readonly, retain) MTLDebugInstrumentationData *fragmentDebugInstrumentationData;
@property (nonatomic, readonly) unsigned long long gpuAddress;
@property (readonly) unsigned long long gpuHandle;
@property (readonly) struct MTLResourceID { unsigned long long x1; } gpuResourceID;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned long long imageblockSampleLength;
@property (readonly) NSString *label;
@property (readonly) unsigned long long maxTotalThreadgroupsPerMeshGrid;
@property (readonly) unsigned long long maxTotalThreadsPerMeshThreadgroup;
@property (readonly) unsigned long long maxTotalThreadsPerObjectThreadgroup;
@property (readonly) unsigned long long maxTotalThreadsPerThreadgroup;
@property (nonatomic, readonly, retain) MTLDebugInstrumentationData *meshDebugInstrumentationData;
@property (nonatomic, copy) MTLMeshRenderPipelineDescriptor *meshDescriptor;
@property (readonly) unsigned long long meshThreadExecutionWidth;
@property (nonatomic, readonly, retain) MTLDebugInstrumentationData *objectDebugInstrumentationData;
@property (readonly) unsigned long long objectThreadExecutionWidth;
@property (nonatomic, retain) MTLRenderPipelineReflection *reflection;
@property (nonatomic, readonly) unsigned long long resourceIndex;
@property (readonly) unsigned long long streamReference;
@property (readonly) Class superclass;
@property (readonly) bool supportIndirectCommandBuffers;
@property (readonly) long long textureWriteRoundingMode;
@property (readonly) bool threadgroupSizeMatchesTileSize;
@property (nonatomic, readonly, retain) MTLDebugInstrumentationData *tileDebugInstrumentationData;
@property (nonatomic, copy) MTLTileRenderPipelineDescriptor *tileDescriptor;
@property (readonly) struct GTTraceContext { struct _opaque_pthread_mutex_t { long long x_1_1_1; BOOL x_1_1_2[56]; } x1; struct GTTraceStore {} *x2; _Atomic unsigned long long x3; _Atomic unsigned long long x4; struct apr_hash_t {} *x5; union { /* Warning: Unrecognized filer type: 'F' using 'void*' */ void*x_6_1_1; const void*x_6_1_2; void*x_6_1_3; inout out double x_6_1_4; void*x_6_1_5; } *x6; _Atomic int x7; BOOL x8[4]; struct GTTraceStream {} *x9; _Atomic bool x10; BOOL x11[7]; struct GTTraceStoreList { union { void*x_1_2_1; void*x_1_2_2; void*x_1_2_3; const void*x_1_2_4; BOOL x_1_2_5; void*x_1_2_6; unsigned short x_1_2_7; void*x_1_2_8; out const void*x_1_2_9; inout out double x_1_2_10; void*x_1_2_11; } *x_12_1_1; union { void*x_2_2_1; void*x_2_2_2; void*x_2_2_3; const void*x_2_2_4; BOOL x_2_2_5; void*x_2_2_6; unsigned short x_2_2_7; void*x_2_2_8; out const void*x_2_2_9; inout out double x_2_2_10; void*x_2_2_11; } *x_12_1_2; _Atomic int x_12_1_3; _Atomic int x_12_1_4; } x12[16]; }*traceContext;
@property (readonly) struct GTTraceStream { unsigned long long x1; unsigned long long x2; unsigned long long x3; struct GTTraceMemPool {} *x4; struct GTTraceStoreList { union { /* Warning: Unrecognized filer type: 'G' using 'void*' */ void*x_1_2_1; void*x_1_2_2; void*x_1_2_3; const void*x_1_2_4; BOOL x_1_2_5; void*x_1_2_6; unsigned short x_1_2_7; void*x_1_2_8; out const void*x_1_2_9; inout out double x_1_2_10; void*x_1_2_11; } *x_5_1_1; union { void*x_2_2_1; void*x_2_2_2; void*x_2_2_3; const void*x_2_2_4; BOOL x_2_2_5; void*x_2_2_6; unsigned short x_2_2_7; void*x_2_2_8; out const void*x_2_2_9; inout out double x_2_2_10; void*x_2_2_11; } *x_5_1_2; _Atomic int x_5_1_3; _Atomic int x_5_1_4; } x5; _Atomic unsigned long long x6; }*traceStream;
@property (readonly) unsigned long long uniqueIdentifier;
@property (nonatomic, readonly, retain) MTLDebugInstrumentationData *vertexDebugInstrumentationData;

- (void).cxx_destruct;
- (unsigned long long)allocatedSize;
- (id)baseObject;
- (bool)conformsToProtocol:(id)arg1;
- (void)dealloc;
- (id)description;
- (id)descriptor;
- (id)device;
- (unsigned int)explicitVisibilityGroupID;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (id)fragmentFunctionHandleWithFunction:(id)arg1;
- (id)functionHandleMap;
- (id)functionHandleWithFunction:(id)arg1 stage:(unsigned long long)arg2;
- (unsigned int)getFragmentShaderTelemetryID;
- (unsigned int)getVertexShaderTelemetryID;
- (unsigned long long)gpuAddress;
- (unsigned long long)gpuHandle;
- (struct MTLResourceID { unsigned long long x1; })gpuResourceID;
- (unsigned long long)imageblockMemoryLengthForDimensions:(struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; })arg1;
- (unsigned long long)imageblockSampleLength;
- (id)initWithBaseObject:(id)arg1 captureDevice:(id)arg2;
- (id)initWithBaseObject:(id)arg1 capturePipelineState:(id)arg2;
- (id)label;
- (unsigned long long)maxTotalThreadgroupsPerMeshGrid;
- (unsigned long long)maxTotalThreadsPerMeshThreadgroup;
- (unsigned long long)maxTotalThreadsPerObjectThreadgroup;
- (unsigned long long)maxTotalThreadsPerThreadgroup;
- (id)meshDescriptor;
- (id)meshFunctionHandleWithFunction:(id)arg1;
- (unsigned long long)meshThreadExecutionWidth;
- (id)newFragmentIntersectionFunctionTableWithDescriptor:(id)arg1;
- (id)newFragmentShaderDebugInfo;
- (bool)newFunctionHandle:(out id*)arg1 associatedWithBaseFunctionHandle:(id)arg2 captureFunction:(id)arg3;
- (id)newIntersectionFunctionTableWithDescriptor:(id)arg1 stage:(unsigned long long)arg2;
- (id)newMeshIntersectionFunctionTableWithDescriptor:(id)arg1;
- (id)newObjectIntersectionFunctionTableWithDescriptor:(id)arg1;
- (id)newRenderPipelineStateWithAdditionalBinaryFunctions:(id)arg1 error:(id*)arg2;
- (id)newRenderPipelineStateWithAdditionalBinaryFunctions:(id)arg1 fragmentAdditionalBinaryFunctions:(id)arg2 error:(id*)arg3;
- (id)newTileIntersectionFunctionTableWithDescriptor:(id)arg1;
- (id)newTileRenderPipelineStateWithAdditionalBinaryFunctions:(id)arg1 error:(id*)arg2;
- (id)newVertexIntersectionFunctionTableWithDescriptor:(id)arg1;
- (id)newVertexShaderDebugInfo;
- (id)newVisibleFunctionTableFromFragmentStageWithDescriptor:(id)arg1;
- (id)newVisibleFunctionTableFromMeshStageWithDescriptor:(id)arg1;
- (id)newVisibleFunctionTableFromObjectStageWithDescriptor:(id)arg1;
- (id)newVisibleFunctionTableFromTileStageWithDescriptor:(id)arg1;
- (id)newVisibleFunctionTableFromVertexStageWithDescriptor:(id)arg1;
- (id)newVisibleFunctionTableWithDescriptor:(id)arg1 stage:(unsigned long long)arg2;
- (id)objectFunctionHandleWithFunction:(id)arg1;
- (unsigned long long)objectThreadExecutionWidth;
- (id)originalObject;
- (id)reflection;
- (unsigned long long)resourceIndex;
- (bool)respondsToSelector:(SEL)arg1;
- (void)setDescriptor:(id)arg1;
- (void)setMeshDescriptor:(id)arg1;
- (void)setReflection:(id)arg1;
- (void)setTileDescriptor:(id)arg1;
- (unsigned long long)streamReference;
- (bool)supportIndirectCommandBuffers;
- (void)swapObject:(id)arg1;
- (long long)textureWriteRoundingMode;
- (bool)threadgroupSizeMatchesTileSize;
- (id)tileDescriptor;
- (id)tileFunctionHandleWithFunction:(id)arg1;
- (void)touch;
- (struct GTTraceContext { struct _opaque_pthread_mutex_t { long long x_1_1_1; BOOL x_1_1_2[56]; } x1; struct GTTraceStore {} *x2; _Atomic unsigned long long x3; _Atomic unsigned long long x4; struct apr_hash_t {} *x5; union { /* Warning: Unrecognized filer type: 'F' using 'void*' */ void*x_6_1_1; const void*x_6_1_2; void*x_6_1_3; inout out double x_6_1_4; void*x_6_1_5; } *x6; _Atomic int x7; BOOL x8[4]; struct GTTraceStream {} *x9; _Atomic bool x10; BOOL x11[7]; struct GTTraceStoreList { union { void*x_1_2_1; void*x_1_2_2; void*x_1_2_3; const void*x_1_2_4; BOOL x_1_2_5; void*x_1_2_6; unsigned short x_1_2_7; void*x_1_2_8; out const void*x_1_2_9; inout out double x_1_2_10; void*x_1_2_11; } *x_12_1_1; union { void*x_2_2_1; void*x_2_2_2; void*x_2_2_3; const void*x_2_2_4; BOOL x_2_2_5; void*x_2_2_6; unsigned short x_2_2_7; void*x_2_2_8; out const void*x_2_2_9; inout out double x_2_2_10; void*x_2_2_11; } *x_12_1_2; _Atomic int x_12_1_3; _Atomic int x_12_1_4; } x12[16]; }*)traceContext;
- (struct GTTraceStream { unsigned long long x1; unsigned long long x2; unsigned long long x3; struct GTTraceMemPool {} *x4; struct GTTraceStoreList { union { /* Warning: Unrecognized filer type: 'G' using 'void*' */ void*x_1_2_1; void*x_1_2_2; void*x_1_2_3; const void*x_1_2_4; BOOL x_1_2_5; void*x_1_2_6; unsigned short x_1_2_7; void*x_1_2_8; out const void*x_1_2_9; inout out double x_1_2_10; void*x_1_2_11; } *x_5_1_1; union { void*x_2_2_1; void*x_2_2_2; void*x_2_2_3; const void*x_2_2_4; BOOL x_2_2_5; void*x_2_2_6; unsigned short x_2_2_7; void*x_2_2_8; out const void*x_2_2_9; inout out double x_2_2_10; void*x_2_2_11; } *x_5_1_2; _Atomic int x_5_1_3; _Atomic int x_5_1_4; } x5; _Atomic unsigned long long x6; }*)traceStream;
- (unsigned long long)uniqueIdentifier;
- (id)vertexFunctionHandleWithFunction:(id)arg1;

@end
