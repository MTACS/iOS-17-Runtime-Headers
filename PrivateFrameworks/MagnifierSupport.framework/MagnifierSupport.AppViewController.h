
@interface MagnifierSupport.AppViewController : MagnifierSupport.LensFilteringViewController <ARReplayConfigurationDelegate, ARSessionDelegate, AVCapturePhotoCaptureDelegate, AVCaptureVideoDataOutputSampleBufferDelegate, AVSpeechSynthesizerDelegate, AXUIEventHandler, CAAnimationDelegate, MTKViewDelegate, UIGestureRecognizerDelegate> {
    void $__lazy_storage_$_cameraTrayViewController;
    void $__lazy_storage_$_cameraVideoPreviewView;
    void $__lazy_storage_$_coachingLabel;
    void $__lazy_storage_$_controlContainer;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  $__lazy_storage_$_currentRecordingURL;
    void $__lazy_storage_$_detectionInformationLabel;
    void $__lazy_storage_$_doubleTapGesture;
    void $__lazy_storage_$_focusIndicator;
    void $__lazy_storage_$_handPoseRequest;
    void $__lazy_storage_$_landscapeCoachingLabel;
    void $__lazy_storage_$_landscapeDetectionInformationLabel;
    void $__lazy_storage_$_mainCardViewController;
    void $__lazy_storage_$_personDetectionManager;
    void DOOR_ATTRIBUTES_UPDATE_INTERVAL;
    void DOOR_ATTRIUBTES_CACHE_MAX_DISTANCE;
    void DOOR_ATTRIUBTES_CACHE_TIMEOUT;
    void DOOR_CACHE_MAX_DISTANCE;
    void DOOR_MAX_DEPTH;
    void DOOR_SIGN_UPDATE_INTERVAL;
    void DOOR_TEXT_SMALL_BBOX_THRESHOLD;
    void DOOR_TEXT_UPDATE_INTERVAL;
    void DOOR_UPDATE_INTERVAL;
    void HAND_POSE_MAX_AREA_THRESHOLD;
    void HAND_POSE_MIN_AREA_THRESHOLD;
    void HAND_POSE_MIN_LENGTH_THRESHOLD;
    void POINT_SPEAK_ROTATION_BUFFER;
    void POINT_SPEAK_ROTATION_RATE_THRESHOLD;
    void POINT_SPEAK_TEXT_FINGER_DISTANCE_MAX;
    void POINT_SPEAK_TEXT_FINGER_DISTANCE_MIN;
    void POINT_SPEAK_TEXT_FINGER_DISTANCE_SWITCH_PITCH;
    void POINT_SPEAK_TEXT_FINGER_HAPTICS_PITCH;
    void TEXT_SMALL_BBOX_THRESHOLD;
    void TEXT_UPDATE_INTERVAL;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _capturedImage;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _capturedPhoto;
    void _stillImageStore;
    void activeControlDescriptionPublishers;
    void activitiesNameController;
    void activityZoomPercentageSubscripton;
    void arFrame;
    void arIsRecording;
    void arRecordingConfiguration;
    void arReplayConfiguration;
    void arSession;
    void arSessionIsInterrupted;
    void arSessionQueue;
    void audioQueue;
    void backTapEventProcessor;
    void cachedDetectedDoorTextDocument;
    void cachedDetectedTextBlocks;
    void cachedDetectedTextDocument;
    void cachedSignDetectorResults;
    void cameraDeviceInput;
    void cameraPhotoOutput;
    void cameraTypeSubscription;
    void cameraVideoDataOutput;
    void cameraVideoPreviewLayer;
    void cancellables;
    void captionLabel;
    void captureAttemptDidSucceed;
    void captureDevice;
    void captureSession;
    void capturedPhotoSubscription;
    void coachingHideAnimator;
    void coachingSubscription;
    void commitActivityButton;
    void consecutiveFramesWithBlur;
    void consecutiveFramesWithHand;
    void consecutiveFramesWithoutDeviceDirectionMessage;
    void consecutiveFramesWithoutFingerDirectionMessage;
    void consecutiveFramesWithoutHandPoseForMessage;
    void consecutiveFramesWithoutHandPoseForQueue;
    void consecutiveFramesWithoutText;
    void contentSizeCategorySubscription;
    void controlRestorationSubscriptions;
    void controlSubscriptionProvider;
    void controlSubscriptions;
    void controlsQueue;
    void currentLiveView;
    void currentPointSpeakAnnouncement;
    void currentPointSpeakSpeechAnnouncement;
    void currentQuickActivityName;
    void currentTextAnnouncement;
    void currentTextSpeechAnnouncement;
    void dRotationSubscription;
    void dataOutputQueue;
    void deactivationReasons;
    void detectedPersonView;
    void detectionModeFlashlightDispatchItem;
    void detectionModeSubscription;
    void detectionModeToneGenerator;
    void detectionModeTooDarkToDetect;
    void detectionModeView;
    void detector;
    void didRestartZoomGestureAfterLastHaptic;
    void didSetupCardUI;
    void displayedPointerDetectedBanner;
    void doorAttributesCache;
    void doorDecorationsCache;
    void doorDetectionDoorBoxLayers;
    void doorDetectionSubscription;
    void doorSignDetectorModel;
    void doorToneGenerator;
    void engine;
    void fingerDebugLayer;
    void flashlightBarButtonItem;
    void focusIndicatorFadeTime;
    void focusLockSubscriptions;
    void freezeFrameModeDescriptionPublisher;
    void freezeFrameScrubberTray;
    void freezeFrameViewController;
    void globalTorchMode;
    void handPoseModelNotAvailable;
    void imageCaptionSubscription;
    void inflightAnnouncement;
    void inflightText;
    void informationSubscription;
    void isARSessionStarted;
    void isControlContainerViewLoaded;
    void isDetectionModeTransitioning;
    void isInformationLabelVisible;
    void isPeopleDetectionTransitioning;
    void kAXSMagnifierClosedNotification;
    void kAXSMagnifierLaunchedNotification;
    void kDetectionInformationLabelPadding;
    void kPersonLabelPoolSize;
    void landscapeControlSubscriptionProvider;
    void landscapeControlSubscriptions;
    void languageTranslator;
    void lastARFrameTimestamp;
    void lastAnnouncement;
    void lastAnnouncementWasUpsideDownNotification;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  lastDetectedDoorTextCheckTime;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  lastDetectedTextCheckTime;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  lastDoorAttributesCheckTime;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  lastDoorCheckTime;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  lastDoorDetectionTextDisplayTime;
    void lastFingerPoint;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  lastHandPoseTime;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  lastImageCacheTime;
    void lastImageDescriptionString;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  lastImageDescriptionTextTime;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  lastRecordingURL;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  lastScreenRecordingURL;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  lastSignCheckTime;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  lastSpeechDate;
    void lastSpokenDepthValue;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  lastTextDetectionTextDisplayTime;
    void lastUnobstructedDocument;
    void lastUnobstructedDocumentUpsideDown;
    void lastUnobstructedFrame;
    void lastUnobstructedTextBlocks;
    void liveLensDisplayAppearanceSubscription;
    void liveLensInterruptionBlurView;
    void luminanceManager;
    void maxCompareLengthForEditDistance;
    void metalOverlayView;
    void modelsManager;
    void normalizedThresholdForEditDistance;
    void openStateConfidenceThreshold;
    void overlayRenderer;
    void panStartZoomFactor;
    void passthroughView;
    void peopleDetectionSubscription;
    void personsLabelPool;
    void pinchStartZoomFactor;
    void pointSpeakDistanceToneGenerator;
    void pointSpeakFeedbacksSubscription;
    void pointSpeakFrequencyGenerator;
    void pointSpeakHandAbsentDispatchItem;
    void pointSpeakHandAbsentToneGenerator;
    void pointSpeakInstructionsAlertController;
    void pointSpeakPitchGenerator;
    void pointSpeakSubscription;
    void pointSpeakTextToneGenerator;
    void pointSpeakToggledDetectionModeFlashlightOn;
    void pointSpeakVolumeGenerator;
    void previousGestureZoomFactor;
    void rotationRateManager;
    void sceneEventAnimator;
    void sessionQueue;
    void sessionSubscriptions;
    void setupResult;
    void shortSpeechAnnouncements;
    void speechDepthArray;
    void speechGenerator;
    void speechMaxFrameCount;
    void speechPauseTime;
    void speechQueueAtPause;
    void springBoardServer;
    void startedPulseForOutOfFrame;
    void textBoxLayer;
    void textDetectionFeedbacksSubscription;
    void textDetectionSubscription;
    void textDetectionToggledDetectionModeFlashlightOn;
    void textQueue;
    void toggledDetectionModeFlashlightOff;
    void toneGenerator;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  tooFastLastDate;
    void useDoorSpeechFeedback;
    void usePointSpeakSpeechFeedback;
    void useSpeechFeedback;
    void useTextDetectionSpeechFeedback;
    void usedCachedTextBlock;
    void wasTooDarkToDetect;
    void wasTooFastToDetect;
    void wifiConnected;
    void wifiMonitor;
    void zoomGestureFeedbackGenerator;
    void zoomPanGesture;
    void zoomPinchGesture;
}

@property (nonatomic, retain) AVCaptureDeviceInput *cameraDeviceInput;
@property (nonatomic, readonly) bool prefersStatusBarHidden;

- (void).cxx_destruct;
- (bool)_canShowWhileLocked;
- (void)_dismissActivityCustomizationPane;
- (void)_dismissActivityCustomizationPaneWithText;
- (void)applicationDidRemoveDeactivationReasonWithNotification:(id)arg1;
- (void)applicationWillAddDeactivationReasonWithNotification:(id)arg1;
- (id)cameraDeviceInput;
- (void)captureOutput:(id)arg1 didCapturePhotoForResolvedSettings:(id)arg2;
- (void)captureOutput:(id)arg1 didFinishProcessingPhoto:(id)arg2 error:(id)arg3;
- (void)captureOutput:(id)arg1 didOutputSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg2 fromConnection:(id)arg3;
- (void)captureOutput:(id)arg1 willBeginCaptureForResolvedSettings:(id)arg2;
- (void)deviceOrientationDidChange:(id)arg1;
- (void)didActivateCardHidingGesture:(id)arg1;
- (void)didActivateCardVisibilityGesture:(id)arg1;
- (void)didLongPressToFocus:(id)arg1;
- (void)didPanPreviewView:(id)arg1;
- (void)didPinchToZoom:(id)arg1;
- (void)didTapToChangeFocus:(id)arg1;
- (void)drawInMTKView:(id)arg1;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)imageDescriptionsTextFeedback;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)loadView;
- (void)mtkView:(id)arg1 drawableSizeWillChange:(struct CGSize { double x1; double x2; })arg2;
- (void)openDetectionSettings:(id)arg1;
- (bool)prefersStatusBarHidden;
- (void)replayConfigurationDidFinishReplaying:(id)arg1;
- (void)session:(id)arg1 didUpdateFrame:(id)arg2;
- (void)sessionInterruptionEnded:(id)arg1;
- (void)sessionInterruptionEndedWithNotification:(id)arg1;
- (void)sessionRuntimeErrorWithNotification:(id)arg1;
- (void)sessionWasInterrupted:(id)arg1;
- (void)sessionWasInterruptedWithNotification:(id)arg1;
- (void)setCameraDeviceInput:(id)arg1;
- (void)speechSynthesizer:(id)arg1 didFinishSpeechUtterance:(id)arg2;
- (void)stopSpeechForVoiceOverFocusChange;
- (void)toggleAVTorchForApplicationDeactivation:(bool)arg1;
- (void)updateAppearanceForReduceTransparency:(id)arg1;
- (void)userDidEndMutliShotMode:(id)arg1;
- (void)userDidExitDetectionMode:(id)arg1;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillLayoutSubviews;
- (void)volumeDownButtonPressed:(id)arg1;
- (void)volumeUpButtonPressed:(id)arg1;

@end
