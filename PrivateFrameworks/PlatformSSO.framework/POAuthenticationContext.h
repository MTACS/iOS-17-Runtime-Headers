
@interface POAuthenticationContext : NSObject {
    NSString * _apv;
    PODeviceConfiguration * _deviceConfiguration;
    struct __SecCertificate { } * _embeddedAssertionCertificate;
    struct __SecKey { } * _embeddedAssertionSigningKey;
    NSString * _encryptionContext;
    bool  _federated;
    <POJWKSStorageProvider> * _jwksStorageProvider;
    POLoginConfiguration * _loginConfiguration;
    unsigned long long  _loginType;
    NSString * _nonce;
    NSMutableData * _password;
    NSString * _refreshToken;
    NSString * _requestIdentifier;
    NSString * _scope;
    NSString * _serverNonce;
    NSString * _tokenTypeNamespace;
    NSURLSession * _urlSession;
    NSString * _userName;
    NSURL * _wsTrustFederationMexURL;
    NSString * _wsTrustFederationNonce;
    NSURL * _wsTrustFederationURL;
    unsigned long long  _wsTrustVersion;
}

@property (nonatomic, retain) NSString *apv;
@property (nonatomic, retain) PODeviceConfiguration *deviceConfiguration;
@property (nonatomic) struct __SecCertificate { }*embeddedAssertionCertificate;
@property (nonatomic) struct __SecKey { }*embeddedAssertionSigningKey;
@property (nonatomic, retain) NSString *encryptionContext;
@property (nonatomic) bool federated;
@property (nonatomic, retain) <POJWKSStorageProvider> *jwksStorageProvider;
@property (nonatomic, retain) POLoginConfiguration *loginConfiguration;
@property unsigned long long loginType;
@property (nonatomic, retain) NSString *nonce;
@property (nonatomic, retain) NSMutableData *password;
@property (nonatomic, retain) NSString *refreshToken;
@property (nonatomic, retain) NSString *requestIdentifier;
@property (nonatomic, retain) NSString *scope;
@property (nonatomic, retain) NSString *serverNonce;
@property (nonatomic, retain) NSString *tokenTypeNamespace;
@property (nonatomic, retain) NSURLSession *urlSession;
@property (nonatomic, retain) NSString *userName;
@property (nonatomic, retain) NSURL *wsTrustFederationMexURL;
@property (nonatomic, retain) NSString *wsTrustFederationNonce;
@property (nonatomic, retain) NSURL *wsTrustFederationURL;
@property unsigned long long wsTrustVersion;

- (void).cxx_destruct;
- (void)addRequiredScope:(id)arg1;
- (id)apv;
- (id)deviceConfiguration;
- (struct __SecCertificate { }*)embeddedAssertionCertificate;
- (struct __SecKey { }*)embeddedAssertionSigningKey;
- (id)encryptionContext;
- (bool)federated;
- (id)init;
- (id)jwksStorageProvider;
- (id)loginConfiguration;
- (unsigned long long)loginType;
- (id)nonce;
- (id)password;
- (id)refreshToken;
- (id)requestIdentifier;
- (id)scope;
- (id)serverNonce;
- (void)setApv:(id)arg1;
- (void)setDeviceConfiguration:(id)arg1;
- (void)setEmbeddedAssertionCertificate:(struct __SecCertificate { }*)arg1;
- (void)setEmbeddedAssertionSigningKey:(struct __SecKey { }*)arg1;
- (void)setEncryptionContext:(id)arg1;
- (void)setFederated:(bool)arg1;
- (void)setJwksStorageProvider:(id)arg1;
- (void)setLoginConfiguration:(id)arg1;
- (void)setLoginType:(unsigned long long)arg1;
- (void)setNonce:(id)arg1;
- (void)setPassword:(id)arg1;
- (void)setRefreshToken:(id)arg1;
- (void)setRequestIdentifier:(id)arg1;
- (void)setScope:(id)arg1;
- (void)setServerNonce:(id)arg1;
- (void)setTokenTypeNamespace:(id)arg1;
- (void)setUrlSession:(id)arg1;
- (void)setUserName:(id)arg1;
- (void)setWsTrustFederationMexURL:(id)arg1;
- (void)setWsTrustFederationNonce:(id)arg1;
- (void)setWsTrustFederationURL:(id)arg1;
- (void)setWsTrustVersion:(unsigned long long)arg1;
- (id)tokenTypeNamespace;
- (id)urlSession;
- (id)userName;
- (id)wsTrustFederationMexURL;
- (id)wsTrustFederationNonce;
- (id)wsTrustFederationURL;
- (unsigned long long)wsTrustVersion;

@end
