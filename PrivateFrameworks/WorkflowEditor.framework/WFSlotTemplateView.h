
@interface WFSlotTemplateView : UIControl <WFSlotTemplateTextStorageDelegate, WFSlotTemplateTypingTextViewDelegate, WFTextAttachmentInteractionDelegate> {
    NSArray * _accessibilityElements;
    NSMutableDictionary * _cachedHeightsByWidths;
    <WFSlotTemplateViewDelegate> * _delegate;
    bool  _disclosureArrowIsOpen;
    UIButton * _disclosureButton;
    NSArray * _exclusionRects;
    double  _horizontalPadding;
    unsigned long long  _lastLayoutManagerLineCount;
    WFSlotTemplateLayoutManager * _layoutManager;
    bool  _menuIsPresented;
    UIButton * _outputButton;
    bool  _outputButtonIsOpen;
    bool  _showsDisclosureArrow;
    bool  _showsOutputButton;
    NSTextContainer * _textContainer;
    WFSlotTemplateTextStorage * _textStorage;
    NSDate * _touchDownTimestamp;
    bool  _typingAllowsMultipleLines;
    WFTextAttachmentInteraction * _typingAttachmentInteraction;
    WFSlotTemplateLayoutManager * _typingLayoutManager;
    WFSlotIdentifier * _typingSlotIdentifier;
    NSTextContainer * _typingTextContainer;
    WFSlotTemplateTextStorage * _typingTextStorage;
    WFSlotTemplateTypingTextView * _typingTextView;
}

@property (nonatomic, retain) NSArray *accessibilityElements;
@property (nonatomic, readonly) NSMutableDictionary *cachedHeightsByWidths;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <WFSlotTemplateViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) UIColor *disabledSlotBackgroundColor;
@property (nonatomic, readonly) UIColor *disabledSlotTitleColor;
@property (nonatomic) bool disclosureArrowIsOpen;
@property (nonatomic) UIButton *disclosureButton;
@property (nonatomic, copy) NSArray *exclusionRects;
@property (nonatomic) bool extendSlotBackgroundOffEdges;
@property (nonatomic, retain) UIFont *font;
@property (readonly) unsigned long long hash;
@property (nonatomic) double horizontalPadding;
@property (nonatomic) unsigned long long lastLayoutManagerLineCount;
@property (nonatomic, retain) WFSlotTemplateLayoutManager *layoutManager;
@property (nonatomic) bool menuIsPresented;
@property (nonatomic) UIButton *outputButton;
@property (nonatomic) bool outputButtonIsOpen;
@property (nonatomic, retain) NSParagraphStyle *paragraphStyle;
@property (nonatomic, readonly) WFSlotIdentifier *selectedSlotIdentifier;
@property (nonatomic) bool showsDisclosureArrow;
@property (nonatomic) bool showsOutputButton;
@property (readonly) Class superclass;
@property (nonatomic) long long textAlignment;
@property (nonatomic, retain) UIColor *textColor;
@property (nonatomic, retain) NSTextContainer *textContainer;
@property (nonatomic, retain) WFSlotTemplateTextStorage *textStorage;
@property (nonatomic, retain) NSDate *touchDownTimestamp;
@property (nonatomic) bool typingAllowsMultipleLines;
@property (nonatomic, retain) WFTextAttachmentInteraction *typingAttachmentInteraction;
@property (nonatomic, retain) WFSlotTemplateLayoutManager *typingLayoutManager;
@property (nonatomic, readonly) WFSlotIdentifier *typingSlotIdentifier;
@property (nonatomic, retain) NSTextContainer *typingTextContainer;
@property (nonatomic, retain) WFSlotTemplateTextStorage *typingTextStorage;
@property (nonatomic, retain) WFSlotTemplateTypingTextView *typingTextView;
@property (nonatomic, retain) UIFont *unpopulatedFont;

+ (double)heightForWidth:(double)arg1 withContents:(id)arg2 horizontalPadding:(double)arg3 font:(id)arg4 unpopulatedFont:(id)arg5 alignment:(long long)arg6;
+ (id)paragraphStyleWithAlignment:(long long)arg1;

- (void).cxx_destruct;
- (void)_deselectSlotAndNotifyDelegate:(bool)arg1 completionHandler:(id /* block */)arg2;
- (void)_selectSlot:(id)arg1 notifyDelegate:(bool)arg2;
- (id)accessibilityElementAtIndex:(long long)arg1;
- (long long)accessibilityElementCount;
- (id)accessibilityElements;
- (void)accessibilityShiftFocusBackToView;
- (id)attachmentAtPoint:(struct CGPoint { double x1; double x2; })arg1 characterRange:(out struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg2;
- (void)beginTypingInSlotWithIdentifier:(id)arg1;
- (id)cachedHeightsByWidths;
- (id)configureMenuAtLocation:(struct CGPoint { double x1; double x2; })arg1 wasTriggeredByTap:(bool)arg2;
- (id)contextMenuInteraction:(id)arg1 configurationForMenuAtLocation:(struct CGPoint { double x1; double x2; })arg2;
- (void)contextMenuInteraction:(id)arg1 willDisplayMenuForConfiguration:(id)arg2 animator:(id)arg3;
- (void)contextMenuInteraction:(id)arg1 willEndForConfiguration:(id)arg2 animator:(id)arg3;
- (id)delegate;
- (void)deselectSlot;
- (void)didTapDisclosureArrow;
- (void)didTapOutputButton;
- (void)didTapTextAttachment:(id)arg1 inSlotWithIdentifier:(id)arg2;
- (id)disabledSlotBackgroundColor;
- (id)disabledSlotTitleColor;
- (bool)disclosureArrowIsOpen;
- (id)disclosureButton;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)endTyping;
- (id)exclusionRects;
- (bool)extendSlotBackgroundOffEdges;
- (id)font;
- (void)handleTouch:(id)arg1 withPhase:(unsigned long long)arg2;
- (void)handleTouchWithPhase:(unsigned long long)arg1 atLocation:(struct CGPoint { double x1; double x2; })arg2;
- (double)heightForWidth:(double)arg1;
- (void)highlightSlotWithIdentifier:(id)arg1;
- (id)highlightedSlot;
- (id)highlightedSlotIdentifier;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (double)horizontalPadding;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)invalidateDisplay;
- (void)invalidateIntrinsicContentSize;
- (bool)isAccessibilityElement;
- (unsigned long long)lastLayoutManagerLineCount;
- (id)layoutManager;
- (void)layoutSubviews;
- (struct CGPoint { double x1; double x2; })menuAttachmentPointForConfiguration:(id)arg1;
- (bool)menuIsPresented;
- (void)menuWillPresent;
- (id)outputButton;
- (bool)outputButtonIsOpen;
- (id)paragraphStyle;
- (void)performFadeTransition:(id /* block */)arg1;
- (void)positionTypingAboveSlot:(id)arg1;
- (void)presentedMenuDidDismiss;
- (void)resetTextView;
- (void)selectSlotWithIdentifier:(id)arg1;
- (id)selectedSlot;
- (id)selectedSlotIdentifier;
- (void)setAccessibilityElements:(id)arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setContents:(id)arg1 animated:(bool)arg2;
- (void)setDelegate:(id)arg1;
- (void)setDisabledSlotTitleColor:(id)arg1 backgroundColor:(id)arg2 animated:(bool)arg3;
- (void)setDisclosureArrowIsOpen:(bool)arg1;
- (void)setDisclosureButton:(id)arg1;
- (void)setExclusionRects:(id)arg1;
- (void)setExtendSlotBackgroundOffEdges:(bool)arg1;
- (void)setFont:(id)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setHorizontalPadding:(double)arg1;
- (void)setLastLayoutManagerLineCount:(unsigned long long)arg1;
- (void)setLayoutManager:(id)arg1;
- (void)setMenuIsPresented:(bool)arg1;
- (void)setOutputButton:(id)arg1;
- (void)setOutputButtonIsOpen:(bool)arg1;
- (void)setParagraphStyle:(id)arg1;
- (void)setShowsDisclosureArrow:(bool)arg1;
- (void)setShowsOutputButton:(bool)arg1;
- (void)setTextAlignment:(long long)arg1;
- (void)setTextColor:(id)arg1;
- (void)setTextContainer:(id)arg1;
- (void)setTextStorage:(id)arg1;
- (void)setTouchDownTimestamp:(id)arg1;
- (void)setTypingAllowsMultipleLines:(bool)arg1;
- (void)setTypingAttachmentInteraction:(id)arg1;
- (void)setTypingLayoutManager:(id)arg1;
- (void)setTypingTextContainer:(id)arg1;
- (void)setTypingTextStorage:(id)arg1;
- (void)setTypingTextView:(id)arg1;
- (void)setUnpopulatedFont:(id)arg1;
- (void)setupTextEntry;
- (bool)shouldPresentMenuAboveView;
- (bool)shouldRecognizeTapOnTextAttachment:(id)arg1 inSlotWithIdentifier:(id)arg2;
- (bool)showsDisclosureArrow;
- (bool)showsOutputButton;
- (id)slotAfterSlotIdentifier:(id)arg1;
- (id)slotAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)slotBeforeSlotIdentifier:(id)arg1;
- (id)slotIdentifierBeforeSlot:(id)arg1 inContents:(id)arg2;
- (id)slotIdentifierForAttachmentInteraction:(id)arg1 characterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)slotTemplateStorageDidInvalidateDisplay:(id)arg1;
- (void)slotTemplateTypingTextViewDidCopy:(id)arg1 withOriginalBlock:(id /* block */)arg2;
- (void)slotTemplateTypingTextViewDidCut:(id)arg1 withOriginalBlock:(id /* block */)arg2;
- (void)slotTemplateTypingTextViewDidDelete:(id)arg1;
- (void)slotTemplateTypingTextViewDidPaste:(id)arg1 withOriginalBlock:(id /* block */)arg2;
- (void)slotTemplateTypingTextViewDidTabBackwards:(id)arg1 withOriginalBlock:(id /* block */)arg2;
- (void)slotTemplateTypingTextViewDidTabForwards:(id)arg1 withOriginalBlock:(id /* block */)arg2;
- (id)slotWithIdentifier:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })sourceRectForSlot:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })sourceRectForSlotWithIdentifier:(id)arg1;
- (bool)startEditingHighlightedSlot;
- (long long)textAlignment;
- (void)textAttachmentInteraction:(id)arg1 didTapTextAttachment:(id)arg2 inCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3;
- (bool)textAttachmentInteraction:(id)arg1 shouldRecognizeTapOnTextAttachment:(id)arg2 inCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3;
- (id)textColor;
- (id)textContainer;
- (id)textStorage;
- (bool)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 replacementText:(id)arg3;
- (void)textViewDidBeginEditing:(id)arg1;
- (void)textViewDidChange:(id)arg1;
- (void)textViewDidEndEditing:(id)arg1;
- (void)tintColorDidChange;
- (id)touchDownTimestamp;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)traitCollectionDidChange:(id)arg1;
- (bool)typingAllowsMultipleLines;
- (id)typingAttachmentInteraction;
- (id)typingLayoutManager;
- (id)typingParagraphStyleForParagraphStyle:(id)arg1;
- (id)typingSlotIdentifier;
- (id)typingTextContainer;
- (id)typingTextStorage;
- (id)typingTextView;
- (void)typingTextViewDidBeginEditing;
- (void)typingTextViewDidChange;
- (void)typingTextViewDidEndEditing;
- (void)unhighlightSlot;
- (id)unpopulatedFont;
- (void)updateAccessibilityElements;
- (void)updateDisclosureButtonPosition;
- (void)updateDisclosureButtonTransformAnimated:(bool)arg1;
- (void)updateExclusionRectsWithBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)updateOutputButtonPosition;
- (void)updateOutputButtonTransformAnimated:(bool)arg1;
- (void)updateTintColorInTextStorage;
- (void)updateTypingFont;
- (void)updateTypingParagraphStyle;
- (void)updateTypingTextContainerSize;
- (void)updateTypingTextContents:(id)arg1;
- (void)updateTypingUnpopulatedFont;
- (void)updateVariableAttachmentAppearanceInContents;

@end
