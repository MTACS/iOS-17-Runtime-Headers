
@interface CKPinnedConversationView : UIView <CNAvatarViewDelegate> {
    NSMutableArray * _activeActivitySuppressionReasons;
    UIView * _activityBoundingParentView;
    double  _activityItemTopInset;
    CKPinnedConversationActivityView * _activityView;
    VNFaceLandmarkRegion2D * _avatarMouthRegion;
    UIImage * _avatarSnapshot;
    UIImageView * _avatarSnapshotImageView;
    CKAvatarView * _avatarView;
    CKConversation * _conversation;
    <CKPinnedConversationViewDelegate> * _delegate;
    bool  _dimmed;
    CAFilter * _dimmingFilter;
    bool  _isFilteredByFocus;
    bool  _isSelectedWithDarkAppearance;
    long long  _layoutStyle;
    bool  _needsUnreadIndicatorLeadingEdgePadding;
    bool  _preferShortConversationName;
    UIImageView * _radiantShadowImageView;
    NSArray * _recentMessagesInPinnedConversations;
    bool  _showsLiveActivity;
    CKLabel * _titleLabel;
    UIImageView * _unreadIndicator;
}

@property (nonatomic, retain) NSMutableArray *activeActivitySuppressionReasons;
@property (nonatomic) UIView *activityBoundingParentView;
@property (nonatomic) long long activityItemOriginationDirection;
@property (nonatomic) double activityItemTopInset;
@property (nonatomic, retain) CKPinnedConversationActivityView *activityView;
@property (nonatomic, retain) VNFaceLandmarkRegion2D *avatarMouthRegion;
@property (nonatomic, retain) UIImage *avatarSnapshot;
@property (nonatomic, retain) UIImageView *avatarSnapshotImageView;
@property (nonatomic, retain) CKAvatarView *avatarView;
@property (nonatomic, retain) CKConversation *conversation;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CKPinnedConversationViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (getter=isDimmed, nonatomic) bool dimmed;
@property (nonatomic, retain) CAFilter *dimmingFilter;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isFilteredByFocus;
@property (nonatomic) bool isSelectedWithDarkAppearance;
@property (nonatomic) long long layoutStyle;
@property (nonatomic) bool needsUnreadIndicatorLeadingEdgePadding;
@property (nonatomic) bool preferShortConversationName;
@property (nonatomic, retain) UIImageView *radiantShadowImageView;
@property (nonatomic, copy) NSArray *recentMessagesInPinnedConversations;
@property (nonatomic) bool showsLiveActivity;
@property (readonly) Class superclass;
@property (getter=isSuppressingActivity, nonatomic, readonly) bool suppressingActivity;
@property (nonatomic, retain) CKLabel *titleLabel;
@property (nonatomic, retain) UIImageView *unreadIndicator;
@property (getter=isUnreadIndicatorHidden, nonatomic) bool unreadIndicatorHidden;

+ (id)_cachedMouthRegionForContact:(id)arg1;
+ (void)_determineMouthRegionForContact:(id)arg1 completion:(id /* block */)arg2;
+ (double)_maximumAvatarViewWidthFittingSize:(struct CGSize { double x1; double x2; })arg1;
+ (id)_mouthRegionDetectionDispatchQueue;
+ (bool)_mouthRegionDetectionEnabled;
+ (id)_mouthRegionForContactImageCache;
+ (id)_mouthRegionForContactImageCacheKeyForContact:(id)arg1;
+ (double)_preferredAvatarViewDiameterForLayoutStyle:(long long)arg1;
+ (id)_requiredContactKeys;
+ (long long)_titleIconImageTypeForConversation:(id)arg1;
+ (void)_updateCachedMouthRegionIfNecessaryForContact:(id)arg1 completion:(id /* block */)arg2;
+ (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })avatarViewPadding;
+ (struct CGSize { double x1; double x2; })avatarViewSizeFittingSize:(struct CGSize { double x1; double x2; })arg1 layoutStyle:(long long)arg2;
+ (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })titleLabelVerticalPadding;

- (void).cxx_destruct;
- (bool)_activityIsSuppressedForLayoutStyle:(long long)arg1;
- (struct CGPoint { double x1; double x2; })_centerPointOfFaceLandmarkRegion:(id)arg1 inImageOfSize:(struct CGSize { double x1; double x2; })arg2;
- (id)_unreadIndicatorColor;
- (id)_unreadIndicatorImage;
- (double)_unreadIndicatorLeadingEdgePadding;
- (void)_updateAvatarMouthRegion;
- (void)_updateAvatarView;
- (void)_updateRadiantShadowAffineTranform;
- (void)_updateRadiantShadowImageView;
- (void)_updateTitleLabel;
- (void)_updateTitleLabelColor;
- (void)_updateTitleLabelFont;
- (void)_updateTitleLabelWithText:(id)arg1;
- (void)_updateUnreadIndicator;
- (id)activeActivitySuppressionReasons;
- (id)activityBoundingParentView;
- (long long)activityItemOriginationDirection;
- (double)activityItemTopInset;
- (id)activityView;
- (id)avatarMouthRegion;
- (id)avatarSnapshot;
- (id)avatarSnapshotImageView;
- (id)avatarView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })avatarViewFrameForSize:(struct CGSize { double x1; double x2; })arg1 layoutStyle:(long long)arg2;
- (void)beginSuppressingActivityWithReason:(id)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (void)configureAsPrototypeCell;
- (void)contentSizeCategoryChanged:(id)arg1;
- (id)conversation;
- (id)delegate;
- (void)didEndDisplaying;
- (void)didUpdateContentForAvatarView:(id)arg1;
- (void)dimAvatarView;
- (id)dimmingFilter;
- (void)endSuppressingActivityWithReason:(id)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (id)init;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isDimmed;
- (bool)isFilteredByFocus;
- (bool)isSelectedWithDarkAppearance;
- (bool)isSuppressingActivity;
- (bool)isUnreadIndicatorHidden;
- (long long)layoutStyle;
- (void)layoutSubviews;
- (bool)needsUnreadIndicatorLeadingEdgePadding;
- (bool)preferShortConversationName;
- (void)prepareForReuse;
- (id)presentingViewControllerForAvatarView:(id)arg1;
- (id)radiantShadowImageView;
- (void)reapplyPreviouslyDisplayedActivitySnapshot:(id)arg1;
- (id)recentMessagesInPinnedConversations;
- (void)removeDimmingFilter;
- (void)setActiveActivitySuppressionReasons:(id)arg1;
- (void)setActivityBoundingParentView:(id)arg1;
- (void)setActivityItemOriginationDirection:(long long)arg1;
- (void)setActivityItemTopInset:(double)arg1;
- (void)setActivityView:(id)arg1;
- (void)setAvatarMouthRegion:(id)arg1;
- (void)setAvatarSnapshot:(id)arg1;
- (void)setAvatarSnapshotImageView:(id)arg1;
- (void)setAvatarView:(id)arg1;
- (void)setConversation:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDimmed:(bool)arg1;
- (void)setDimmingFilter:(id)arg1;
- (void)setIsFilteredByFocus:(bool)arg1;
- (void)setIsFilteredByFocus:(bool)arg1 animated:(bool)arg2;
- (void)setIsSelectedWithDarkAppearance:(bool)arg1;
- (void)setLayoutStyle:(long long)arg1;
- (void)setNeedsUnreadIndicatorLeadingEdgePadding:(bool)arg1;
- (void)setPreferShortConversationName:(bool)arg1;
- (void)setRadiantShadowImageView:(id)arg1;
- (void)setRecentMessagesInPinnedConversations:(id)arg1;
- (void)setShowsLiveActivity:(bool)arg1;
- (void)setTitleLabel:(id)arg1;
- (void)setUnreadIndicator:(id)arg1;
- (void)setUnreadIndicatorHidden:(bool)arg1;
- (void)setUnreadIndicatorHidden:(bool)arg1 animated:(bool)arg2;
- (bool)showsLiveActivity;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (id)titleLabel;
- (struct CGSize { double x1; double x2; })titleLabelSizeFittingSize:(struct CGSize { double x1; double x2; })arg1;
- (id)unreadIndicator;
- (struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })unreadIndicatorMinimumPadding;
- (struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })unreadIndicatorPreferredPadding;
- (struct CGSize { double x1; double x2; })unreadIndicatorSize;
- (void)updateActivityViewAnimated:(bool)arg1 completion:(id /* block */)arg2;

@end
