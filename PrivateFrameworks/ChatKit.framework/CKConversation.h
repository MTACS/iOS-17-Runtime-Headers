
@interface CKConversation : NSObject <NSItemProviderWriting> {
    CNGroupIdentity * __conversationVisualIdentity;
    bool  _allowedByPersonListInActiveFocus;
    NSNumber * _businessConversation;
    IMHandle * _businessHandle;
    IMChat * _chat;
    struct { 
        unsigned int ignoringTypingUpdates : 1; 
    }  _conversationFlags;
    NSString * _conversationListCollectionViewJunkItemIdentifier;
    NSString * _conversationListCollectionViewListItemIdentifier;
    NSString * _conversationListCollectionViewPinnedItemIdentifier;
    NSString * _conversationListCollectionViewRecentlyDeletedListItemIdentifier;
    NSDate * _dateLastViewed;
    bool  _elevateCheckIn;
    NSString * _groupIdentityUpdateHandleID;
    NSAttributedString * _groupName;
    bool  _hasLoadedAllMessages;
    bool  _hasSetWasKnownSender;
    bool  _holdInUnreadFilter;
    bool  _isReportedAsSpam;
    unsigned int  _limitToLoad;
    NSString * _name;
    bool  _needsReload;
    bool  _needsUpdatedContactsForVisualIdentity;
    bool  _needsUpdatedGroupNameForVisualIdentity;
    bool  _needsUpdatedGroupPhotoForVisualIdentity;
    NSArray * _pendingHandles;
    NSSet * _pendingRecipients;
    NSAttributedString * _previewText;
    NSArray * _recipients;
    NSString * _selectedLastAddressedHandle;
    NSString * _selectedLastAddressedSIMID;
    bool  _shouldShowGroupNameUpdateBanner;
    bool  _shouldShowGroupPhotoUpdateBanner;
    int  _wasDetectedAsSMSCategory;
    int  _wasDetectedAsSMSSpam;
    int  _wasDetectedAsSpam;
    int  _wasDetectedAsiMessageSpam;
    bool  _wasKnownSender;
}

@property (nonatomic, retain) CNGroupIdentity *_conversationVisualIdentity;
@property (nonatomic) bool allowedByPersonListInActiveFocus;
@property (nonatomic, retain) NSNumber *businessConversation;
@property (nonatomic, retain) IMHandle *businessHandle;
@property (nonatomic, readonly) BOOL buttonColor;
@property (nonatomic, readonly) bool canLeave;
@property (nonatomic, retain) IMChat *chat;
@property (nonatomic, retain) NSString *conversationListCollectionViewJunkItemIdentifier;
@property (nonatomic, retain) NSString *conversationListCollectionViewListItemIdentifier;
@property (nonatomic, retain) NSString *conversationListCollectionViewPinnedItemIdentifier;
@property (nonatomic, retain) NSString *conversationListCollectionViewRecentlyDeletedListItemIdentifier;
@property (nonatomic, retain) NSDate *dateLastViewed;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSString *deviceIndependentID;
@property (nonatomic, readonly) unsigned long long disclosureAtomStyle;
@property (nonatomic, retain) NSString *displayName;
@property (getter=shouldElevateCheckIn, nonatomic) bool elevateCheckIn;
@property (nonatomic) bool forceMMS;
@property (nonatomic, readonly) NSArray *frequentReplies;
@property (getter=isGroupConversation, nonatomic, readonly) bool groupConversation;
@property (nonatomic, readonly) NSString *groupID;
@property (nonatomic, retain) NSString *groupIdentityUpdateHandleID;
@property (nonatomic, readonly) NSAttributedString *groupName;
@property (nonatomic, readonly) NSArray *handles;
@property (nonatomic, readonly) bool hasDisplayName;
@property (nonatomic) bool hasLoadedAllMessages;
@property (nonatomic) bool hasSetWasKnownSender;
@property (nonatomic, readonly) bool hasUnreadMessages;
@property (readonly) unsigned long long hash;
@property (getter=shouldHoldInUnreadFilter, nonatomic) bool holdInUnreadFilter;
@property (getter=isIgnoringTypingUpdates, nonatomic) bool ignoringTypingUpdates;
@property (nonatomic, readonly) bool isPinned;
@property (nonatomic, readonly) bool isPreviewTextForAttachment;
@property (nonatomic) bool isReportedAsSpam;
@property (nonatomic, readonly) bool isToEmailAddress;
@property (nonatomic, readonly) NSString *lastAddressedHandle;
@property (nonatomic, readonly) NSString *lastAddressedSIMID;
@property (getter=hasLeft, nonatomic, readonly) bool left;
@property (getter=hasLeftGroupChat, nonatomic, readonly) bool leftGroupChat;
@property (nonatomic) unsigned int limitToLoad;
@property (nonatomic, copy) NSString *localUserIsComposing;
@property (nonatomic) bool localUserIsRecording;
@property (nonatomic) bool localUserIsTyping;
@property (nonatomic, readonly) NSSet *mergedPinningIdentifiers;
@property (getter=isMuted, nonatomic, readonly) bool muted;
@property (nonatomic, retain) NSString *name;
@property (nonatomic, readonly) bool needsReload;
@property (nonatomic) bool needsUpdatedContactsForVisualIdentity;
@property (nonatomic) bool needsUpdatedGroupNameForVisualIdentity;
@property (nonatomic) bool needsUpdatedGroupPhotoForVisualIdentity;
@property (getter=isPending, nonatomic, readonly) bool pending;
@property (nonatomic, readonly, copy) NSArray *pendingEntities;
@property (nonatomic, copy) NSArray *pendingHandles;
@property (nonatomic, retain) NSSet *pendingRecipients;
@property (nonatomic, readonly) NSString *pinningIdentifier;
@property (nonatomic, copy) NSAttributedString *previewText;
@property (nonatomic, readonly) NSString *rawAddressedName;
@property (getter=isReadOnlyChat, nonatomic, readonly) bool readOnlyChat;
@property (nonatomic, readonly) CKEntity *recipient;
@property (nonatomic, readonly) unsigned long long recipientCount;
@property (nonatomic, readonly, copy) NSSet *recipientNames;
@property (nonatomic, readonly, copy) NSArray *recipientStrings;
@property (nonatomic, retain) NSArray *recipients;
@property (nonatomic, retain) NSString *selectedLastAddressedHandle;
@property (nonatomic, retain) NSString *selectedLastAddressedSIMID;
@property (getter=shouldSendReadReceipts, nonatomic, readonly) bool sendReadReceipts;
@property (nonatomic, readonly, copy) NSString *senderIdentifier;
@property (nonatomic, readonly) IMService *sendingService;
@property (nonatomic, readonly) NSString *serviceDisplayName;
@property (nonatomic, readonly) bool shouldShowCharacterCount;
@property (nonatomic) bool shouldShowGroupNameUpdateBanner;
@property (nonatomic) bool shouldShowGroupPhotoUpdateBanner;
@property (nonatomic, readonly) long long spamCategory;
@property (nonatomic, readonly) long long spamSubCategory;
@property (getter=isStewieConversation, nonatomic, readonly) bool stewieConversation;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsMessageEditing;
@property (nonatomic, readonly) bool supportsMutatingGroupMembers;
@property (nonatomic, readonly) unsigned long long unreadCount;
@property (nonatomic, retain) CKComposition *unsentComposition;
@property (getter=isUserDeletable, nonatomic, readonly) bool userDeletable;
@property (nonatomic) int wasDetectedAsSMSCategory;
@property (nonatomic) int wasDetectedAsSMSSpam;
@property (nonatomic) int wasDetectedAsSpam;
@property (nonatomic) int wasDetectedAsiMessageSpam;
@property (nonatomic) bool wasKnownSender;
@property (getter=isWithMyself, nonatomic, readonly) bool withMyself;
@property (nonatomic, readonly, copy) NSArray *writableTypeIdentifiersForItemProvider;

+ (bool)_iMessage_canAcceptMediaObjectType:(int)arg1 givenMediaObjects:(id)arg2;
+ (bool)_iMessage_canSendComposition:(id)arg1 lastAddressedHandle:(id)arg2 lastAddressedSIMID:(id)arg3 currentService:(id)arg4 forceSMS:(bool)arg5 error:(id*)arg6;
+ (bool)_iMessage_canSendMessageWithMediaObjectTypes:(int*)arg1;
+ (bool)_iMessage_canSendMessageWithMediaObjectTypes:(int*)arg1 errorCode:(long long*)arg2;
+ (id)_iMessage_localizedErrorForReason:(long long)arg1;
+ (long long)_iMessage_maxAttachmentCount;
+ (unsigned long long)_iMessage_maxTransferFileSizeForWiFi:(bool)arg1;
+ (double)_iMessage_maxTrimDurationForMediaType:(int)arg1;
+ (bool)_sms_canAcceptMediaObjectType:(int)arg1 givenMediaObjects:(id)arg2 phoneNumber:(id)arg3 simID:(id)arg4;
+ (bool)_sms_canSendComposition:(id)arg1 lastAddressedHandle:(id)arg2 lastAddressedSIMID:(id)arg3 error:(id*)arg4;
+ (bool)_sms_canSendMessageWithMediaObjectTypes:(int*)arg1 phoneNumber:(id)arg2 simID:(id)arg3;
+ (bool)_sms_canSendMessageWithMediaObjectTypes:(int*)arg1 phoneNumber:(id)arg2 simID:(id)arg3 errorCode:(long long*)arg4;
+ (id)_sms_localizedErrorForReason:(long long)arg1;
+ (long long)_sms_maxAttachmentCountForPhoneNumber:(id)arg1 simID:(id)arg2;
+ (double)_sms_maxTrimDurationForMediaType:(int)arg1;
+ (bool)_sms_mediaObjectPassesDurationCheck:(id)arg1;
+ (bool)_sms_mediaObjectPassesRestriction:(id)arg1;
+ (id)conversationForAddresses:(id)arg1 allowRetargeting:(bool)arg2 candidateConversation:(id)arg3;
+ (id)conversationForContacts:(id)arg1 candidateConversation:(id)arg2;
+ (bool)isSMSSpamFilteringEnabled;
+ (id)newPendingConversation;
+ (id)writableTypeIdentifiersForItemProvider;

- (void).cxx_destruct;
- (bool)_allowedByScreenTime;
- (id)_backwardCompatabilityTextForEditedMessagePartText:(id)arg1;
- (bool)_chatHasValidUnreadMessageToLoad;
- (void)_chatItemsDidChange:(id)arg1;
- (void)_chatPropertiesChanged:(id)arg1;
- (bool)_chatSupportsTypingIndicators;
- (void)_clearTypingIndicatorsIfNecessary;
- (bool)_contactsForVisualIdentityHaveKeys:(id)arg1;
- (id)_contactsForVisualIdentityWithKeys:(id)arg1 numberOfContacts:(unsigned long long)arg2;
- (id)_conversationList;
- (id)_conversationVisualIdentity;
- (void)_createConversationVisualIdentityWithKeys:(id)arg1 numberOfContacts:(unsigned long long)arg2;
- (void)_deleteAllMessagesAndRemoveGroup:(bool)arg1;
- (bool)_earlyReturnHistoryLoad;
- (id)_groupPhotoFileURL;
- (void)_handleChatJoinStateDidChange:(id)arg1;
- (void)_handleChatParticipantsDidChange:(id)arg1;
- (void)_handleEngroupFinishedUpdating:(id)arg1;
- (bool)_handleIsForThisConversation:(id)arg1;
- (void)_handlePreferredServiceChangedNotification:(id)arg1;
- (id)_headerTitleForPendingMediaObjects:(id)arg1 subject:(id)arg2 onService:(id)arg3;
- (id)_headerTitleForService:(id)arg1 shouldListParticipants:(bool)arg2;
- (bool)_iMessage_canSendToRecipients:(id)arg1 alertIfUnable:(bool)arg2;
- (bool)_iMessage_supportsCharacterCountForAddresses:(id)arg1;
- (void)_invalidateApplicationSnapshotIfNeeded;
- (id)_nameForHandle:(id)arg1;
- (void)_setProofReadingInfoForChat:(id)arg1 withMessage:(id)arg2;
- (bool)_sms_canSendToRecipients:(id)arg1 alertIfUnable:(bool)arg2;
- (bool)_sms_supportsCharacterCountForAddresses:(id)arg1;
- (bool)_sms_willSendMMSByDefaultForAddresses:(id)arg1;
- (bool)_unknownFilteringEnabled;
- (void)_updateContactsForVisualIdentityWithKeys:(id)arg1 numberOfContacts:(unsigned long long)arg2;
- (void)_updateGroupNameForVisualIdentity;
- (void)_updateGroupPhotoForVisualIdentity;
- (void)acceptTransfer:(id)arg1;
- (id)activityForNewScene;
- (void)addRecipientHandles:(id)arg1;
- (bool)allowedByPersonListInActiveFocus;
- (bool)allowsMentions;
- (id)businessConversation;
- (id)businessHandle;
- (BOOL)buttonColor;
- (bool)canAcceptMediaObjectType:(int)arg1 givenMediaObjects:(id)arg2;
- (bool)canInsertMoreRecipients;
- (bool)canLeave;
- (bool)canMuteStateBeToggled;
- (bool)canReadStateBeToggled;
- (bool)canReplyToChatItem:(id)arg1;
- (bool)canSendComposition:(id)arg1 error:(id*)arg2;
- (bool)canSendToRecipients:(id)arg1 alertIfUnable:(bool)arg2;
- (void)canShareFocusStatusWithCompletion:(id /* block */)arg1;
- (id)chat;
- (void)clearConversationLoadFromSpotlight;
- (long long)compareBySequenceNumberAndDateDescending:(id)arg1;
- (id)contactNameByHandle;
- (bool)containsHandleWithUID:(id)arg1;
- (id)conversationListCollectionViewJunkItemIdentifier;
- (id)conversationListCollectionViewListItemIdentifier;
- (id)conversationListCollectionViewPinnedItemIdentifier;
- (id)conversationListCollectionViewRecentlyDeletedListItemIdentifier;
- (id)conversationVisualIdentityWithKeys:(id)arg1 requestedNumberOfContactsToFetch:(unsigned long long)arg2;
- (id)copyForPendingConversation;
- (id)date;
- (id)dateLastViewed;
- (void)dealloc;
- (void)deleteAllMessages;
- (void)deleteAllMessagesAndRemoveGroup;
- (id)description;
- (id)deviceIndependentID;
- (void)didBecomeActive;
- (unsigned long long)disclosureAtomStyle;
- (id)displayName;
- (id)displayNameForMediaObjects:(id)arg1 subject:(id)arg2 shouldListParticipants:(bool)arg3;
- (void)editMessageItem:(id)arg1 partIndex:(long long)arg2 withNewComposition:(id)arg3;
- (id)ensureMessageWithGUIDIsLoaded:(id)arg1;
- (id)entityMatchingHandle:(id)arg1;
- (void)enumerateMessagesWithOptions:(unsigned long long)arg1 usingBlock:(id /* block */)arg2;
- (id)fastPreviewTextIgnoringPluginContent;
- (void)fetchAllMessages:(id /* block */)arg1;
- (void)fetchMoreMessages:(id /* block */)arg1;
- (void)fetchMoreMessagesAfterLastMessage:(id /* block */)arg1;
- (void)fetchMoreMessagesBeforeFirstMessage:(id /* block */)arg1;
- (void)fetchSuggestedNameIfNecessary;
- (bool)forceMMS;
- (id)frequentReplies;
- (id)groupID;
- (id)groupIdentityUpdateHandleID;
- (id)groupName;
- (id)groupPhotoData;
- (id)handles;
- (bool)hasDisplayName;
- (bool)hasLeft;
- (bool)hasLeftGroupChat;
- (bool)hasLoadedAllMessages;
- (bool)hasLoadedFromSpotlight;
- (bool)hasReplyEnabled;
- (bool)hasSetWasKnownSender;
- (bool)hasUnreadMessages;
- (bool)hasVerifiedBusiness;
- (id)init;
- (id)initWithChat:(id)arg1;
- (bool)isAdHocGroupConversation;
- (bool)isAppleConversation;
- (bool)isBlockedByCommunicationLimits;
- (bool)isBusinessChatDisabled;
- (bool)isBusinessConversation;
- (bool)isDowngraded;
- (bool)isGroupConversation;
- (bool)isIgnoringTypingUpdates;
- (bool)isKnownSender;
- (bool)isMakoConversation;
- (bool)isMuted;
- (bool)isPending;
- (bool)isPinned;
- (bool)isPlaceholder;
- (bool)isPreviewTextForAttachment;
- (bool)isReadOnlyChat;
- (bool)isReportedAsSpam;
- (bool)isStewieConversation;
- (bool)isToEmailAddress;
- (bool)isUserDeletable;
- (bool)isWithMyself;
- (id)lastAddressedHandle;
- (id)lastAddressedSIMID;
- (unsigned int)limitToLoad;
- (void)loadAllMessages;
- (void)loadAllUnreadMessagesUpToMessageGUID:(id)arg1;
- (id)loadDataWithTypeIdentifier:(id)arg1 forItemProviderCompletionHandler:(id /* block */)arg2;
- (void)loadFrequentReplies;
- (void)loadMoreMessages;
- (void)loadMoreMessagesAfterLastMessage;
- (void)loadMoreMessagesBeforeFirstMessage;
- (id)localUserIsComposing;
- (bool)localUserIsRecording;
- (bool)localUserIsTyping;
- (void)markAllMessagesAsRead;
- (void)markLastMessageAsUnread;
- (double)maxTrimDurationForMedia:(id)arg1;
- (long long)maximumRecipientsForSendingService;
- (id)mergedPinningIdentifiers;
- (id)messageWithComposition:(id)arg1;
- (id)messagesFromComposition:(id)arg1;
- (id)name;
- (id)nameWithRawAddresses:(bool)arg1;
- (bool)needsReload;
- (bool)needsUpdatedContactsForVisualIdentity;
- (bool)needsUpdatedGroupNameForVisualIdentity;
- (bool)needsUpdatedGroupPhotoForVisualIdentity;
- (bool)noAvailableServices;
- (id)orderedContactsForAvatar3DTouchUIWithKeysToFetch:(id)arg1;
- (id)orderedContactsForAvatarView;
- (id)orderedContactsWithMaxCount:(unsigned long long)arg1 keysToFetch:(id)arg2;
- (BOOL)outgoingBubbleColor;
- (id)pendingEntities;
- (id)pendingHandles;
- (id)pendingRecipients;
- (id)pinnedConversationDisplayNamePreferringShortName:(bool)arg1;
- (id)pinningIdentifier;
- (void)prepareForRecoverableDeletionWithDeleteDate:(id)arg1;
- (id)previewText;
- (id)rawAddressedName;
- (id)recipient;
- (unsigned long long)recipientCount;
- (id)recipientEmailAddresses;
- (id)recipientNames;
- (id)recipientPhoneNumbers;
- (id)recipientStrings;
- (id)recipients;
- (id)recipientsSortedByIsContact:(bool)arg1 alphabetically:(bool)arg2;
- (void)recoverableDeleteAllMessagesGivenDeleteDate:(id)arg1;
- (void)refreshServiceForSending;
- (void)reloadIfNeeded;
- (void)removeRecipientHandles:(id)arg1;
- (void)resendEditedMessageItem:(id)arg1 forPartIndex:(long long)arg2;
- (void)resetCaches;
- (void)resetNameCaches;
- (void)resortMessagesIfNecessary;
- (void)retractMessagePart:(id)arg1;
- (void)retryMessage:(id)arg1 onService:(id)arg2;
- (id)selectedLastAddressedHandle;
- (id)selectedLastAddressedSIMID;
- (BOOL)sendButtonColor;
- (void)sendMessage:(id)arg1 newComposition:(bool)arg2;
- (void)sendMessage:(id)arg1 onService:(id)arg2 newComposition:(bool)arg3;
- (id)senderIdentifier;
- (id)sendingService;
- (id)serviceDisplayName;
- (void)setAllowedByPersonListInActiveFocus:(bool)arg1;
- (void)setBusinessConversation:(id)arg1;
- (void)setBusinessHandle:(id)arg1;
- (void)setChat:(id)arg1;
- (void)setConversationListCollectionViewJunkItemIdentifier:(id)arg1;
- (void)setConversationListCollectionViewListItemIdentifier:(id)arg1;
- (void)setConversationListCollectionViewPinnedItemIdentifier:(id)arg1;
- (void)setConversationListCollectionViewRecentlyDeletedListItemIdentifier:(id)arg1;
- (void)setDateLastViewed:(id)arg1;
- (void)setDisplayName:(id)arg1;
- (void)setElevateCheckIn:(bool)arg1;
- (void)setForceMMS:(bool)arg1;
- (void)setGroupIdentityUpdateHandleID:(id)arg1;
- (void)setHasLoadedAllMessages:(bool)arg1;
- (void)setHasSetWasKnownSender:(bool)arg1;
- (void)setHoldInUnreadFilter:(bool)arg1;
- (void)setIgnoringTypingUpdates:(bool)arg1;
- (void)setIsReportedAsSpam:(bool)arg1;
- (void)setLimitToLoad:(unsigned int)arg1;
- (void)setLoadedMessageCount:(unsigned long long)arg1;
- (void)setLoadedMessageCount:(unsigned long long)arg1 loadImmediately:(bool)arg2;
- (void)setLocalUserIsComposing:(id)arg1;
- (void)setLocalUserIsComposing:(id)arg1 typingIndicatorIcon:(id)arg2;
- (void)setLocalUserIsRecording:(bool)arg1;
- (void)setLocalUserIsTyping:(bool)arg1;
- (void)setMutedUntilDate:(id)arg1;
- (void)setName:(id)arg1;
- (void)setNeedsReload;
- (void)setNeedsUpdatedContactOrderForVisualIdentity;
- (void)setNeedsUpdatedContactsForVisualIdentity:(bool)arg1;
- (void)setNeedsUpdatedGroupNameForVisualIdentity;
- (void)setNeedsUpdatedGroupNameForVisualIdentity:(bool)arg1;
- (void)setNeedsUpdatedGroupPhotoForVisualIdentity;
- (void)setNeedsUpdatedGroupPhotoForVisualIdentity:(bool)arg1;
- (void)setPendingComposeRecipients:(id)arg1;
- (void)setPendingHandles:(id)arg1;
- (void)setPendingRecipients:(id)arg1;
- (void)setPreviewText:(id)arg1;
- (void)setRecipients:(id)arg1;
- (void)setSelectedLastAddressedHandle:(id)arg1;
- (void)setSelectedLastAddressedSIMID:(id)arg1;
- (void)setSendReadReceipts:(bool)arg1;
- (void)setShouldShowGroupNameUpdateBanner:(bool)arg1;
- (void)setShouldShowGroupPhotoUpdateBanner:(bool)arg1;
- (void)setUnsentComposition:(id)arg1;
- (void)setWasDetectedAsSMSCategory:(int)arg1;
- (void)setWasDetectedAsSMSSpam:(int)arg1;
- (void)setWasDetectedAsSpam:(int)arg1;
- (void)setWasDetectedAsiMessageSpam:(int)arg1;
- (void)setWasKnownSender:(bool)arg1;
- (void)set_conversationVisualIdentity:(id)arg1;
- (id)shortDescription;
- (bool)shouldElevateCheckIn;
- (bool)shouldHoldInUnreadFilter;
- (bool)shouldSendReadReceipts;
- (bool)shouldShowCharacterCount;
- (bool)shouldShowGroupNameUpdateBanner;
- (bool)shouldShowGroupPhotoUpdateBanner;
- (id)sortedHandles;
- (long long)spamCategory;
- (long long)spamSubCategory;
- (bool)supportsMessageEditing;
- (bool)supportsMutatingGroupMembers;
- (bool)supportsSurf;
- (bool)supportsWaldo;
- (id)uniqueIdentifier;
- (void)unmute;
- (unsigned long long)unreadCount;
- (id)unsentComposition;
- (void)updateConversationVisualIdentityDisplayNameWithSender:(id)arg1;
- (void)updateConversationVisualIdentityGroupPhotoWithSender:(id)arg1;
- (void)updateDisplayNameIfSMSSpam;
- (void)updateLastViewedDate;
- (void)updateUnsentCompositionByAppendingComposition:(id)arg1;
- (void)updateUserActivity;
- (void)updateWasKnownSender;
- (bool)wantsLabelForDSDS;
- (int)wasDetectedAsSMSCategory;
- (int)wasDetectedAsSMSSpam;
- (int)wasDetectedAsSpam;
- (int)wasDetectedAsiMessageSpam;
- (bool)wasKnownSender;
- (void)willBecomeInactive;

@end
