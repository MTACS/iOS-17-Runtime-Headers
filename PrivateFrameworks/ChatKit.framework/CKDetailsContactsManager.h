
@interface CKDetailsContactsManager : NSObject <CKDetailsContactsManagerAtomContextMenuProviding> {
    NSArray * _contactsViewModels;
    CKConversation * _conversation;
    <CKDetailsContactsManagerDelegate> * _delegate;
    NSDictionary * _facetimeAudioIDStatuses;
    NSDictionary * _facetimeIDStatuses;
    NSDictionary * _screenSharingIDSStatuses;
    NSString * _serviceAvailabilityKey;
}

@property (nonatomic, readonly, copy) NSArray *contacts;
@property (nonatomic, copy) NSArray *contactsViewModels;
@property (nonatomic, retain) CKConversation *conversation;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CKDetailsContactsManagerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSDictionary *facetimeAudioIDStatuses;
@property (nonatomic, retain) NSDictionary *facetimeIDStatuses;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSDictionary *screenSharingIDSStatuses;
@property (nonatomic, retain) NSString *serviceAvailabilityKey;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_callButtonPressedWithVideoEnabled:(bool)arg1;
- (void)_conversationJoinStateDidChange:(id)arg1;
- (long long)_facetimeAudioIDStatusForEntity:(id)arg1;
- (long long)_facetimeIDStatusForEntity:(id)arg1;
- (void)_handleAddressBookChange:(id)arg1;
- (void)_handleConversationPendingRecipientsDidChange:(id)arg1;
- (void)_handleConversationRecipientsDidChange:(id)arg1;
- (void)_handleLocationChanged:(id)arg1;
- (void)_handleMultiwayStateChanged:(id)arg1;
- (bool)_hasLinkedTelephoneNumbersForEntity:(id)arg1;
- (void)_inviteEntityToShareTheirScreen:(id)arg1;
- (bool)_isHandleActiveParticipantInTUConversation:(id)arg1;
- (void)_performUpdateViewModels;
- (id)_preferredCallServiceToIDMap;
- (bool)_preferredRoutesDisabledViaServerBag;
- (void)_refreshIDSStatusWithCompletion:(id /* block */)arg1;
- (long long)_screenSharingStatusForEntity:(id)arg1;
- (void)_setPreferredCallServiceToIDMap:(id)arg1;
- (void)_shareMyScreenWithEntity:(id)arg1;
- (bool)_showFaceTimeVideoButtonForEntity:(id)arg1;
- (bool)_showMessageButtonForEntity:(id)arg1;
- (bool)_showPhoneButtonForEntity:(id)arg1;
- (void)_startCallWithEntity:(id)arg1 phoneAddress:(id)arg2;
- (void)_startCommunicationForEntity:(id)arg1 usePreferredRouteIfAvailable:(bool)arg2;
- (void)_startFacetimeCommunicationForEntity:(id)arg1 audioOnly:(bool)arg2;
- (void)_startMessageWithEntity:(id)arg1;
- (void)_updateViewModelsWithDelay:(bool)arg1;
- (void)beginFacetimeCallWithVideo:(bool)arg1;
- (id)callActionsForEntity:(id)arg1;
- (id)callMenuForEntity:(id)arg1;
- (void)callableAddressesForEntity:(id)arg1 withResult:(id /* block */)arg2;
- (id)contacts;
- (id)contactsViewModels;
- (id)contextMenuForEntity:(id)arg1 atom:(id)arg2;
- (id)contextMenuForUnknownRecipient:(id)arg1 atom:(id)arg2;
- (id)conversation;
- (id)conversationContextMenuConfigForEntity:(id)arg1 allowConversationRemoval:(bool)arg2;
- (id)conversationContextMenuForEntity:(id)arg1 allowConversationRemoval:(bool)arg2;
- (id)conversationContextMenuForUnknownEntity:(id)arg1 allowConversationRemoval:(bool)arg2 showUnknownContactActionInPopover:(bool)arg3 unknownContactActionHandler:(id /* block */)arg4;
- (void)dealloc;
- (id)delegate;
- (id)facetimeAudioIDStatuses;
- (id)facetimeIDStatuses;
- (bool)hasPreferredCallServiceForEntity:(id)arg1;
- (id)initWithConversation:(id)arg1 delegate:(id)arg2;
- (bool)isFaceTimeAudioAvailableForEntity:(id)arg1;
- (bool)isFaceTimeVideoAvailableForEntity:(id)arg1;
- (bool)isTelephonyCallAvailableForEntity:(id)arg1;
- (unsigned long long)preferredCallServiceForID:(id)arg1;
- (id)recipientsSortedByIsContact:(bool)arg1 alphabetically:(bool)arg2;
- (id)screenSharingIDSStatuses;
- (void)sendEmail;
- (id)serviceAvailabilityKey;
- (void)setContactsViewModels:(id)arg1;
- (void)setConversation:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setFacetimeAudioIDStatuses:(id)arg1;
- (void)setFacetimeIDStatuses:(id)arg1;
- (void)setPreferredCallService:(unsigned long long)arg1 forID:(id)arg2;
- (void)setScreenSharingIDSStatuses:(id)arg1;
- (void)setServiceAvailabilityKey:(id)arg1;
- (bool)shouldAlwaysShowCallMenuForEntity:(id)arg1;
- (bool)showScreenSharingButtonForEntity:(id)arg1;
- (void)startAudioCommunicationUsingPreferredRouteIfAvailable:(bool)arg1;
- (void)startCommunicationForEntity:(id)arg1 action:(unsigned long long)arg2 address:(id)arg3;
- (void)startCommunicationForEntity:(id)arg1 action:(unsigned long long)arg2 address:(id)arg3 usePreferredRouteIfAvailable:(bool)arg4;
- (void)startCommunicationForViewModel:(id)arg1 action:(unsigned long long)arg2 address:(id)arg3;

@end
