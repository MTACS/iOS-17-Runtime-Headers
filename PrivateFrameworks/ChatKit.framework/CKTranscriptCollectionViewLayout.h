
@interface CKTranscriptCollectionViewLayout : UICollectionViewLayout <CKTranscriptLayoutCompatibility> {
    double  _anchorYPosition;
    NSArray * _associatedLayoutAttributes;
    unsigned char  _chatStyle;
    bool  _coalesceInvalidations;
    struct CGSize { 
        double width; 
        double height; 
    }  _contentSize;
    NSArray * _decorationLayoutAttributes;
    bool  _disableDynamicsWhileScrolling;
    CADisplayLink * _displayLink;
    IMScheduledUpdater * _dynamicsUpdater;
    bool  _easingUp;
    NSMutableDictionary * _finalParentVerticalOffsets;
    bool  _hasLoadMore;
    bool  _holdingBoundsInvalidation;
    NSIndexSet * _indicesOfChatItemsToBeInsertedWithoutFading;
    NSIndexSet * _indicesOfChatItemsToBeRemovedWithoutFading;
    NSIndexSet * _indicesOfReplyChatItemsToBeInserted;
    NSMutableDictionary * _initialParentLayoutAttributes;
    bool  _inlineAnimatingOut;
    NSMutableIndexSet * _insertedAssociatedLayoutAttributes;
    bool  _isResting;
    NSDate * _lastTouchTime;
    NSArray * _layoutAttributes;
    NSArray * _oldAssociatedLayoutAttributes;
    double  _prevTimestamp;
    bool  _sizeCategoryIsAccessibilitySizeCategory;
    struct CGSize { 
        double width; 
        double height; 
    }  _sizeForRotation;
    struct CGPoint { 
        double x; 
        double y; 
    }  _targetContentOffset;
    bool  _useFastQuanta;
    bool  _useInitialLayoutAttributesForRotation;
    bool  _useOverlayLayout;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _visibleBounds;
}

@property (nonatomic) double anchorYPosition;
@property (nonatomic, copy) NSArray *associatedLayoutAttributes;
@property (nonatomic) unsigned char chatStyle;
@property (nonatomic) bool coalesceInvalidations;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, copy) NSArray *decorationLayoutAttributes;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool disableDynamicsWhileScrolling;
@property (nonatomic, retain) IMScheduledUpdater *dynamicsUpdater;
@property (nonatomic, retain) NSMutableDictionary *finalParentVerticalOffsets;
@property (nonatomic) bool hasLoadMore;
@property (readonly) unsigned long long hash;
@property (getter=isHoldingBoundsInvalidation, nonatomic) bool holdingBoundsInvalidation;
@property (nonatomic, retain) NSIndexSet *indicesOfChatItemsToBeInsertedWithoutFading;
@property (nonatomic, retain) NSIndexSet *indicesOfChatItemsToBeRemovedWithoutFading;
@property (nonatomic, retain) NSIndexSet *indicesOfReplyChatItemsToBeInserted;
@property (nonatomic, retain) NSMutableDictionary *initialParentLayoutAttributes;
@property (getter=isInlineAnimatingOut, nonatomic) bool inlineAnimatingOut;
@property (nonatomic, retain) NSMutableIndexSet *insertedAssociatedLayoutAttributes;
@property (nonatomic, readonly) bool isResting;
@property (nonatomic, retain) NSDate *lastTouchTime;
@property (nonatomic, copy) NSArray *layoutAttributes;
@property (nonatomic, copy) NSArray *oldAssociatedLayoutAttributes;
@property (nonatomic) bool sizeCategoryIsAccessibilitySizeCategory;
@property (nonatomic) struct CGSize { double x1; double x2; } sizeForRotation;
@property (readonly) Class superclass;
@property (nonatomic) struct CGPoint { double x1; double x2; } targetContentOffset;
@property (getter=isUsingInitialLayoutAttributesForRotation, nonatomic) bool useInitialLayoutAttributesForRotation;
@property (getter=isUsingOverlayLayout, nonatomic) bool useOverlayLayout;

+ (double)bottomTranscriptSpaceWithLastChatItem:(id)arg1;
+ (Class)layoutAttributesClass;
+ (long long)translateLayoutIndexToEffectIndex:(long long)arg1;

- (void).cxx_destruct;
- (void)_applyAttributeUpdatesWithTargetMap:(id)arg1 layoutAttributes:(id)arg2 updateBlock:(id /* block */)arg3;
- (void)_applyCurrentFrameOffsetsForLayoutAttributesIfNeeded:(id)arg1;
- (void)_applyTargetFrameOffsetsForLayoutAttributesIfNeeded:(id)arg1;
- (void)_configureThreadGroupsForAttributes:(id)arg1 outMaxYAnchorAttribute:(id*)arg2 forVisibleBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_convertScreenFrameToLocalFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_dealloc;
- (bool)_getEasingUpForTesting;
- (void)_kickDynamicsIfNeeded;
- (void)_setDisplayLinkForTesting:(id)arg1;
- (void)_setEasingUpForTesting:(bool)arg1;
- (void)_setVisibleBoundsForTesting:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_visibleRectInsectsForMaxYAnchorLayoutAttribute:(id)arg1 forVisibleBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (double)anchorYPosition;
- (id)associatedLayoutAttributes;
- (void)beginHoldingDynamicsUpdatesForKey:(id)arg1;
- (double)bezierPointForPercentage:(double)arg1 anchor1:(double)arg2 anchor2:(double)arg3 control1:(double)arg4 control2:(double)arg5;
- (unsigned char)chatStyle;
- (void)clearParentInitialIndexesAndFinalOffsets;
- (bool)coalesceInvalidations;
- (struct CGSize { double x1; double x2; })collectionViewContentSize;
- (void)dealloc;
- (id)decorationLayoutAttributes;
- (bool)disableDynamicsWhileScrolling;
- (void)displayLinkFired:(id)arg1;
- (id)dynamicsUpdater;
- (long long)effectIndexForDecorationViewAtIndex:(long long)arg1;
- (void)endHoldingDynamicsUpdatesForKey:(id)arg1;
- (id)finalLayoutAttributesForDisappearingItemAtIndexPath:(id)arg1;
- (id)finalParentVerticalOffsets;
- (double)handleInvalidCaseForChatItem:(id)arg1 withPrevChatItem:(id)arg2;
- (bool)hasLoadMore;
- (id)indicesOfChatItemsToBeInsertedWithoutFading;
- (id)indicesOfChatItemsToBeRemovedWithoutFading;
- (id)indicesOfReplyChatItemsToBeInserted;
- (id)init;
- (id)initialLayoutAttributesForAppearingItemAtIndexPath:(id)arg1;
- (id)initialParentLayoutAttributes;
- (id)insertedAssociatedLayoutAttributes;
- (void)invalidateDisplayLink;
- (void)invalidateLayoutWithContext:(id)arg1;
- (bool)isHoldingBoundsInvalidation;
- (bool)isInlineAnimatingOut;
- (bool)isResting;
- (bool)isUsingInitialLayoutAttributesForRotation;
- (bool)isUsingOverlayLayout;
- (id)lastTouchTime;
- (id)layoutAttributes;
- (id)layoutAttributesForDecorationViewOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)layoutAttributesForElementsInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)layoutAttributesForItemAtIndexPath:(id)arg1;
- (bool)needsAdditionalBracketPaddingForChatItem:(id)arg1 prevChatItem:(id)arg2;
- (bool)nextItemIsOriginatorWithRepliesForIndex:(unsigned long long)arg1;
- (bool)nextMessageIsReplyForIndex:(unsigned long long)arg1;
- (id)oldAssociatedLayoutAttributes;
- (void)prepareLayout;
- (void)prepareLayoutForRotisserieScrolling;
- (bool)previousReplyCount:(unsigned long long)arg1 isOccludedForAssociatedFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 outMaxY:(double*)arg3;
- (void)reduceMotionSettingChanged:(id)arg1;
- (void)reloadData;
- (void)reloadLayout;
- (void)setAnchorYPosition:(double)arg1;
- (void)setAssociatedLayoutAttributes:(id)arg1;
- (void)setChatStyle:(unsigned char)arg1;
- (void)setCoalesceInvalidations:(bool)arg1;
- (void)setDecorationLayoutAttributes:(id)arg1;
- (void)setDisableDynamicsWhileScrolling:(bool)arg1;
- (void)setDynamicsUpdater:(id)arg1;
- (void)setFinalParentVerticalOffsets:(id)arg1;
- (void)setHasLoadMore:(bool)arg1;
- (void)setHoldingBoundsInvalidation:(bool)arg1;
- (void)setIndicesOfChatItemsToBeInsertedWithoutFading:(id)arg1;
- (void)setIndicesOfChatItemsToBeRemovedWithoutFading:(id)arg1;
- (void)setIndicesOfReplyChatItemsToBeInserted:(id)arg1;
- (void)setInitialIndex:(unsigned long long)arg1 forParentOfAssociatedItemInsertedAtIndex:(unsigned long long)arg2;
- (void)setInitialParentLayoutAttributes:(id)arg1;
- (void)setInlineAnimatingOut:(bool)arg1;
- (void)setInsertedAssociatedLayoutAttributes:(id)arg1;
- (void)setLastTouchTime:(id)arg1;
- (void)setLayoutAttributes:(id)arg1;
- (void)setNeedsDynamicsUpdate;
- (void)setOldAssociatedLayoutAttributes:(id)arg1;
- (void)setSizeCategoryIsAccessibilitySizeCategory:(bool)arg1;
- (void)setSizeForRotation:(struct CGSize { double x1; double x2; })arg1;
- (void)setTargetContentOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)setUseInitialLayoutAttributesForRotation:(bool)arg1;
- (void)setUseOverlayLayout:(bool)arg1;
- (void)setVerticalOffset:(double)arg1 forParentOfAssociatedItemDeletedAtIndex:(unsigned long long)arg2;
- (bool)shouldInvalidateLayoutForBoundsChange:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)sizeCategoryDidChange:(id)arg1;
- (bool)sizeCategoryIsAccessibilitySizeCategory;
- (struct CGSize { double x1; double x2; })sizeForRotation;
- (struct CGPoint { double x1; double x2; })targetContentOffset;
- (void)updateAssociatedLayoutAttributesIfNecessary;
- (void)updateAttributesForAnchorYChangeWithAttributes:(id)arg1;
- (void)updateAttributesForTargetContentOffsetChangeWithAttributes:(id)arg1;
- (void)updateContentSize;
- (void)updateFrames;

@end
