
@interface CKTranscriptBalloonCell : CKTranscriptMessageContentCell <CKQuickActionButtonAnimationDelegate, CKQuickActionButtonDelegate, IMPhotoLibraryPersistenceManagerListener> {
    bool  _animatingInDarkEffect;
    <CKTranscriptBalloonCellDelegate> * _balloonCellDelegate;
    CKBalloonSwipeController * _balloonSwipeController;
    CKBalloonView * _balloonView;
    bool  _canInlineReply;
    bool  _canShowQuickActionButton;
    bool  _hasQueuedQuickActionButtonRemoval;
    bool  _insertingReply;
    bool  _isRichLink;
    CKTranscriptCollectionViewLayoutAttributes * _layoutAttributes;
    double  _lineHorizontalOffset;
    bool  _lineIsExtended;
    unsigned long long  _lineType;
    CKLineView * _lineView;
    double  _lineViewExpansionFactor;
    double  _lineViewReferenceY;
    bool  _mayReparentPluginViews;
    unsigned long long  _numberOfMomentSharePhotos;
    unsigned long long  _numberOfMomentShareSavedAssets;
    unsigned long long  _numberOfMomentShareVideos;
    CKQuickActionButton * _quickActionButton;
    id /* block */  _quickActionButtonTappedCallback;
    NSArray * _syndicationIdentifiers;
    NSArray * _threadGroupLayoutAttributes;
    NSArray * _threadLineDescription;
}

@property (nonatomic, readonly) bool allowsSwipeToReply;
@property (nonatomic) bool animatingInDarkEffect;
@property (nonatomic) <CKTranscriptBalloonCellDelegate> *balloonCellDelegate;
@property (nonatomic, retain) CKBalloonSwipeController *balloonSwipeController;
@property (nonatomic, retain) CKBalloonView *balloonView;
@property (nonatomic) bool canInlineReply;
@property (nonatomic) bool canShowQuickActionButton;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool hasQueuedQuickActionButtonRemoval;
@property (readonly) unsigned long long hash;
@property (getter=isInsertingReply, nonatomic) bool insertingReply;
@property (nonatomic, readonly) bool isAudioMessage;
@property (nonatomic) bool isRichLink;
@property (nonatomic, copy) CKTranscriptCollectionViewLayoutAttributes *layoutAttributes;
@property (nonatomic) double lineHorizontalOffset;
@property (nonatomic, readonly) bool lineIsExtended;
@property (nonatomic) unsigned long long lineType;
@property (nonatomic, retain) CKLineView *lineView;
@property (nonatomic) double lineViewExpansionFactor;
@property (nonatomic) double lineViewReferenceY;
@property (nonatomic) bool mayReparentPluginViews;
@property (nonatomic) unsigned long long numberOfMomentSharePhotos;
@property (nonatomic) unsigned long long numberOfMomentShareSavedAssets;
@property (nonatomic) unsigned long long numberOfMomentShareVideos;
@property (nonatomic, readonly) CKQuickActionButton *quickActionButton;
@property (nonatomic, copy) id /* block */ quickActionButtonTappedCallback;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSArray *syndicationIdentifiers;
@property (nonatomic, copy) NSArray *threadGroupLayoutAttributes;
@property (nonatomic, copy) NSArray *threadLineDescription;

- (void).cxx_destruct;
- (void)_addQuickActionButtonIfNeededAnimated:(bool)arg1;
- (void)_animateLineExtension:(id /* block */)arg1;
- (void)_animateLowerBracketToLoop:(id /* block */)arg1;
- (void)_animateReplyContextPreview:(id /* block */)arg1;
- (void)_animateUpperBracket:(id /* block */)arg1;
- (void)_ck_setEditing:(bool)arg1 animated:(bool)arg2;
- (id)_createLinePathForFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withThreadGroupLayoutAttributes:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_createLineViewFrameForThreadGroupLayoutAttributes:(id)arg1;
- (void)_drawLoopForPath:(id*)arg1 withLayout:(id)arg2;
- (void)_drawLowerBracketForPath:(id*)arg1 lineViewMaxX:(double)arg2 lineViewMaxY:(double)arg3;
- (id)_drawLowerBracketLoopForPath:(id)arg1 withLayout:(id)arg2 lineViewMaxY:(double)arg3;
- (void)_drawStraightLineForPath:(id*)arg1 withLayout:(id)arg2 lineViewMaxY:(double)arg3 isTerminal:(bool)arg4;
- (void)_drawUpperBracketForPath:(id*)arg1 withLayout:(id)arg2 lineViewMaxX:(double)arg3 lineViewMaxY:(double)arg4;
- (id)_extendPath:(id*)arg1 withFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)_fadeInBalloonAlpha:(double)arg1 atBeginTime:(double)arg2;
- (void)_fadeInContactImageAlpha:(double)arg1 atBeginTime:(double)arg2;
- (bool)_isCommSafetyRestrictedForChatItem:(id)arg1;
- (id)_lineDescriptionForThreadGroupLayoutAttributes:(id)arg1 setLineType:(bool)arg2;
- (void)_removeQuickActionButtonIfNeededAnimated:(bool)arg1;
- (void)_slideContactImageWithTranslate:(double)arg1 duration:(double)arg2 beginTime:(double)arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_swipeToReplySafeSwipeRect;
- (void)_updateLineForThreadGroupLayoutAttributes:(id)arg1;
- (void)addFilter:(id)arg1;
- (void)addFilter:(id)arg1 fromTriggeringMessage:(bool)arg2;
- (bool)allowsSwipeToReply;
- (bool)animatingInDarkEffect;
- (id)animationWithKeyPath:(id)arg1 fromValue:(id)arg2 toValue:(id)arg3 beginTime:(double)arg4 duration:(double)arg5 timingFunction:(id)arg6;
- (id)animationWithKeyPath:(id)arg1 fromValue:(id)arg2 toValue:(id)arg3 beginTime:(double)arg4 duration:(double)arg5 timingFunctionName:(id)arg6;
- (void)applyLayoutAttributes:(id)arg1;
- (id)balloonCellDelegate;
- (id)balloonSwipeController;
- (id)balloonView;
- (bool)canInlineReply;
- (bool)canShowQuickActionButton;
- (void)clearFilters;
- (void)configureForChatItem:(id)arg1 context:(id)arg2;
- (void)configureQuickActionButtonForChatItem:(id)arg1;
- (void)dealloc;
- (id)description;
- (bool)hasQueuedQuickActionButtonRemoval;
- (id)init;
- (long long)insertionAnimationType;
- (double)insertionDurationForInsertionType:(long long)arg1;
- (bool)isAudioMessage;
- (bool)isInsertingReply;
- (bool)isPointInAllowedSwipingArea:(struct CGPoint { double x1; double x2; })arg1;
- (bool)isRichLink;
- (id)layoutAttributes;
- (void)layoutSubviewsForAlignmentContents;
- (void)layoutSubviewsForContents;
- (double)lineHorizontalOffset;
- (bool)lineIsExtended;
- (unsigned long long)lineType;
- (id)lineView;
- (double)lineViewExpansionFactor;
- (double)lineViewReferenceY;
- (bool)mayReparentPluginViews;
- (id)messageDisplayView;
- (unsigned long long)numberOfMomentSharePhotos;
- (unsigned long long)numberOfMomentShareSavedAssets;
- (unsigned long long)numberOfMomentShareVideos;
- (void)performInsertion:(id /* block */)arg1;
- (void)photoLibraryPersistedSyndicatedAssetSetDidChange;
- (void)prepareForReuse;
- (id)quickActionButton;
- (void)quickActionButtonAnimationDidBegin:(id)arg1;
- (void)quickActionButtonAnimationDidEnd:(id)arg1;
- (id /* block */)quickActionButtonTappedCallback;
- (void)quickActionButtonWasTapped:(id)arg1;
- (void)setAnimatingInDarkEffect:(bool)arg1;
- (void)setAnimationPauseReasons:(long long)arg1;
- (void)setBalloonCellDelegate:(id)arg1;
- (void)setBalloonSwipeController:(id)arg1;
- (void)setBalloonView:(id)arg1;
- (void)setCanInlineReply:(bool)arg1;
- (void)setCanShowQuickActionButton:(bool)arg1;
- (void)setHasQueuedQuickActionButtonRemoval:(bool)arg1;
- (void)setInsertingReply:(bool)arg1;
- (void)setIsRichLink:(bool)arg1;
- (void)setLayoutAttributes:(id)arg1;
- (void)setLineHorizontalOffset:(double)arg1;
- (void)setLineType:(unsigned long long)arg1;
- (void)setLineView:(id)arg1;
- (void)setLineViewExpansionFactor:(double)arg1;
- (void)setLineViewReferenceY:(double)arg1;
- (void)setMayReparentPluginViews:(bool)arg1;
- (void)setNumberOfMomentSharePhotos:(unsigned long long)arg1;
- (void)setNumberOfMomentShareSavedAssets:(unsigned long long)arg1;
- (void)setNumberOfMomentShareVideos:(unsigned long long)arg1;
- (void)setQuickActionButtonTappedCallback:(id /* block */)arg1;
- (void)setSyndicationIdentifiers:(id)arg1;
- (void)setThreadGroupLayoutAttributes:(id)arg1;
- (void)setThreadLineDescription:(id)arg1;
- (void)swipeToReplyGestureHandler:(id)arg1;
- (double)swipeToReplyLayoutOffset;
- (id)syndicationIdentifiers;
- (id)threadGroupLayoutAttributes;
- (id)threadLineDescription;
- (void)updateQuickActionButtonVisibility;
- (void)willLayoutDrawerLabelFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1;

@end
