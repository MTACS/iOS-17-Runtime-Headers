
@interface CKEffectPickerMacViewController : UIViewController <CKEffectPickerViewControllerProtocol, CKEffectPreviewCollectionViewControllerDelegate, CKEffectSelectionViewControllerDelegate> {
    UIView * _balloonContainer;
    NSLayoutConstraint * _balloonHeightConstraint;
    CKBalloonView * _balloonView;
    struct CGPoint { 
        double x; 
        double y; 
    }  _balloonViewOrigin;
    NSLayoutConstraint * _balloonWidthConstraint;
    UIButton * _closeButton;
    BOOL  _color;
    CKComposition * _composition;
    UIView * _contentView;
    <CKEffectPickerViewControllerDelegate> * _delegate;
    CKChatControllerDummyAnimator * _dummyAnimator;
    CKEffectPreviewCollectionViewController * _effectCollectionViewController;
    NSString * _effectIdentifier;
    UIView * _effectPreviewOverlayView;
    UIView * _effectsPresentingView;
    UIViewController * _effectsPresentingViewController;
    CKMessageEntryView * _entryView;
    CKFullScreenEffectManager * _fsem;
    bool  _hasSelectedDefaultEffect;
    NSLayoutConstraint * _heightConstraint;
    bool  _isInlineReply;
    CKEffectSelectionViewController * _selectionViewController;
    UIView * _sendButton;
    bool  _showingInStandAloneWindow;
    UIVisualEffectView * _titleContainerView;
    UILabel * _titleLabel;
    UIVibrancyEffect * _titleVibrancyEffect;
    UIViewController * _wolfEffectSelectionVC;
}

@property (nonatomic, retain) UIView *balloonContainer;
@property (nonatomic, retain) NSLayoutConstraint *balloonHeightConstraint;
@property (nonatomic, retain) CKBalloonView *balloonView;
@property (nonatomic) struct CGPoint { double x1; double x2; } balloonViewOrigin;
@property (nonatomic, retain) NSLayoutConstraint *balloonWidthConstraint;
@property (nonatomic, retain) UIButton *closeButton;
@property (nonatomic) BOOL color;
@property (nonatomic, retain) CKComposition *composition;
@property (nonatomic, retain) UIView *contentView;
@property (nonatomic) <CKEffectPickerViewControllerDelegate> *delegate;
@property (nonatomic, retain) CKChatControllerDummyAnimator *dummyAnimator;
@property (nonatomic, retain) CKEffectPreviewCollectionViewController *effectCollectionViewController;
@property (nonatomic, retain) NSString *effectIdentifier;
@property (nonatomic, retain) UIView *effectPreviewOverlayView;
@property (nonatomic) UIView *effectsPresentingView;
@property (nonatomic) UIViewController *effectsPresentingViewController;
@property (nonatomic, readonly) CKMessageEntryView *entryView;
@property (nonatomic, retain) CKFullScreenEffectManager *fsem;
@property (nonatomic) bool hasSelectedDefaultEffect;
@property (nonatomic, retain) NSLayoutConstraint *heightConstraint;
@property (nonatomic) bool isInlineReply;
@property (nonatomic, retain) CKEffectSelectionViewController *selectionViewController;
@property (nonatomic, retain) UIView *sendButton;
@property (nonatomic) bool showingInStandAloneWindow;
@property (nonatomic, retain) UIVisualEffectView *titleContainerView;
@property (nonatomic, retain) UILabel *titleLabel;
@property (nonatomic, retain) UIVibrancyEffect *titleVibrancyEffect;
@property (nonatomic, retain) UIViewController *wolfEffectSelectionVC;

- (void).cxx_destruct;
- (id)_defaultSendAnimationContextForAnimationPreview;
- (id)balloonContainer;
- (id)balloonHeightConstraint;
- (id)balloonView;
- (struct CGPoint { double x1; double x2; })balloonViewOrigin;
- (id)balloonWidthConstraint;
- (id)closeButton;
- (void)closeButtonPressed:(id)arg1;
- (BOOL)color;
- (id)composition;
- (id)contentView;
- (void)createBalloonView;
- (id)createSendButton;
- (void)createTranscriptBlurBackground;
- (id)delegate;
- (void)dismissViewControllerKeepingSideMount:(bool)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (id)dummyAnimator;
- (id)effectCollectionViewController;
- (void)effectCollectionViewController:(id)arg1 willDisplayEffect:(id)arg2;
- (id)effectIdentifier;
- (id)effectPreviewOverlayView;
- (bool)effectSelectionViewController:(id)arg1 didSelectEffectWithIdentifier:(id)arg2;
- (bool)effectShouldDisplayOverBalloon:(id)arg1;
- (id)effectsPresentingView;
- (id)effectsPresentingViewController;
- (id)entryView;
- (id)fsem;
- (void)handleTouchMoved:(struct CGPoint { double x1; double x2; })arg1;
- (void)handleTouchUp:(struct CGPoint { double x1; double x2; })arg1;
- (bool)hasSelectedDefaultEffect;
- (id)heightConstraint;
- (id)initWithComposition:(id)arg1 balloonViewOrigin:(struct CGPoint { double x1; double x2; })arg2 color:(BOOL)arg3;
- (id)initWithEntryView:(id)arg1 balloonViewOrigin:(struct CGPoint { double x1; double x2; })arg2 color:(BOOL)arg3 isInlineReply:(bool)arg4;
- (bool)isInlineReply;
- (void)keyCommandReturn:(id)arg1;
- (id)keyCommands;
- (void)placeBalloonContainer:(id)arg1;
- (void)placeSendButton;
- (void)presentPicker;
- (id)selectionViewController;
- (id)sendButton;
- (void)setBalloonContainer:(id)arg1;
- (void)setBalloonHeightConstraint:(id)arg1;
- (void)setBalloonView:(id)arg1;
- (void)setBalloonViewOrigin:(struct CGPoint { double x1; double x2; })arg1;
- (void)setBalloonWidthConstraint:(id)arg1;
- (void)setCloseButton:(id)arg1;
- (void)setCloseButtonYPosition:(double)arg1;
- (void)setColor:(BOOL)arg1;
- (void)setComposition:(id)arg1;
- (void)setContentView:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDummyAnimator:(id)arg1;
- (void)setEffectCollectionViewController:(id)arg1;
- (void)setEffectIdentifier:(id)arg1;
- (void)setEffectPreviewOverlayView:(id)arg1;
- (void)setEffectsPresentingView:(id)arg1;
- (void)setEffectsPresentingViewController:(id)arg1;
- (void)setFsem:(id)arg1;
- (void)setHasSelectedDefaultEffect:(bool)arg1;
- (void)setHeightConstraint:(id)arg1;
- (void)setIsInlineReply:(bool)arg1;
- (void)setSelectionViewController:(id)arg1;
- (void)setSendButton:(id)arg1;
- (void)setShowingInStandAloneWindow:(bool)arg1;
- (void)setTitleContainerView:(id)arg1;
- (void)setTitleLabel:(id)arg1;
- (void)setTitleVibrancyEffect:(id)arg1;
- (void)setWolfEffectSelectionVC:(id)arg1;
- (void)showCloseButton;
- (bool)showingInStandAloneWindow;
- (void)startAnimationPreviewForIdentifier:(id)arg1;
- (id)titleContainerView;
- (id)titleLabel;
- (id)titleVibrancyEffect;
- (void)touchUpInsideSendButton:(id)arg1;
- (void)updateColor:(BOOL)arg1;
- (void)updateHintTransition:(double)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (id)wolfEffectSelectionVC;

@end
