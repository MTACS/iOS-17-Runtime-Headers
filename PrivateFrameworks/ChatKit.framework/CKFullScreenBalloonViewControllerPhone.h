
@interface CKFullScreenBalloonViewControllerPhone : CKFullScreenBalloonViewController <CKAttributionViewControllerDelegate, CKBalloonViewDelegate, CKMessageHighlightButtonDelegate, CKStickerDetailViewControllerDelegate, PHLivePhotoViewDelegate> {
    bool  _animationsDisabledForTesting;
    UIViewController * _attributionViewController;
    UIView * _balloonView;
    double  _balloonYOffsetFromTranscript;
    bool  _hideBalloonView;
    CKMessageHighlightButton * _highlightButton;
    NSArray * _interfaceActions;
    CKLivePhotoBalloonView * _livePhotoBalloonView;
    CAShapeLayer * _replyButtonBorderLayer;
    UIVisualEffectView * _replyButtonEffectView;
    CAShapeLayer * _replyButtonMaskLayer;
    UIView * _replyButtonView;
    bool  _shouldLayoutViews;
    CAShapeLayer * _tintViewMaskLayer;
}

@property (nonatomic) bool animationsDisabledForTesting;
@property (nonatomic, retain) UIViewController *attributionViewController;
@property (nonatomic, retain) UIView *balloonView;
@property (nonatomic) double balloonYOffsetFromTranscript;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool hideBalloonView;
@property (nonatomic, retain) CKMessageHighlightButton *highlightButton;
@property (nonatomic, copy) NSArray *interfaceActions;
@property (nonatomic, retain) CKLivePhotoBalloonView *livePhotoBalloonView;
@property (nonatomic, retain) CAShapeLayer *replyButtonBorderLayer;
@property (nonatomic, retain) UIVisualEffectView *replyButtonEffectView;
@property (nonatomic, retain) CAShapeLayer *replyButtonMaskLayer;
@property (nonatomic, retain) UIView *replyButtonView;
@property (readonly) Class superclass;
@property (nonatomic, retain) CAShapeLayer *tintViewMaskLayer;

- (void).cxx_destruct;
- (bool)_shouldShowVotingView;
- (void)_stickerDetailViewControllerCloseButtonPressed:(id)arg1;
- (void)addHighlightButtonIfNeeded;
- (bool)animationsDisabledForTesting;
- (id)attributionViewController;
- (void)attributionViewController:(id)arg1 deleteSentSticker:(id)arg2;
- (void)attributionViewController:(id)arg1 downloadCustomSticker:(id)arg2;
- (void)attributionViewController:(id)arg1 showStickerInStore:(id)arg2;
- (void)audioBalloonScrubberDidChangeValue:(double)arg1;
- (void)audioBalloonScrubberWithRecognizer:(id)arg1 didChangeValue:(double)arg2;
- (id)balloonView;
- (void)balloonView:(id)arg1 userDidDragOutsideBalloonWithPoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)balloonViewDoubleTapped:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })balloonViewFrameWithoutTransform;
- (void)balloonViewLongTouched:(id)arg1;
- (void)balloonViewSelected:(id)arg1 keyModifierFlags:(long long)arg2 selectedText:(id)arg3;
- (void)balloonViewSelected:(id)arg1 withModifierFlags:(long long)arg2 selectedText:(id)arg3;
- (void)balloonViewShouldCopyToPasteboard:(id)arg1;
- (void)balloonViewShowInlineReply:(id)arg1;
- (void)balloonViewTapped:(id)arg1 withModifierFlags:(long long)arg2 selectedText:(id)arg3;
- (void)balloonViewTextViewDidChangeSelection:(id)arg1 selectedText:(id)arg2 textView:(id)arg3;
- (double)balloonYOffsetFromTranscript;
- (void)dealloc;
- (void)disableAnimationsForTesting;
- (void)dismissTapGestureRecognized:(id)arg1;
- (bool)hideBalloonView;
- (id)highlightButton;
- (id)initWithChatItem:(id)arg1 title:(id)arg2 interfaceActions:(id)arg3 gradientReferenceView:(id)arg4 isGroupConversation:(bool)arg5 pluginBalloonSnapshot:(id)arg6 delegate:(id)arg7;
- (void)interactionStartedFromPreviewItemControllerInBalloonView:(id)arg1;
- (void)interactionStartedWithPluginBalloonView:(id)arg1;
- (void)interactionStoppedFromPreviewItemControllerInBalloonView:(id)arg1;
- (id)interfaceActions;
- (void)launchReaderViewForBalloonView:(id)arg1;
- (void)liveBalloonTouched:(id)arg1;
- (id)livePhotoBalloonView;
- (void)livePhotoView:(id)arg1 didEndPlaybackWithStyle:(long long)arg2;
- (void)loadLivePhotoBalloonViewIfNeeded;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })messageHightlightButtonBalloonViewFrame:(id)arg1;
- (void)messageHightlightButtonDidFinishAnimating:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })messageHightlightButtonReplyButtonFrame:(id)arg1;
- (BOOL)messageHightlightButtonTranscriptOrientation:(id)arg1;
- (void)messageHightlightButtonWasClicked:(id)arg1;
- (void)performClosingAnimationsAnimated:(bool)arg1 withSendAnimation:(bool)arg2 withCompletion:(id /* block */)arg3;
- (void)performInitialAnimations;
- (void)playbackSpeedDidChangeForAudioMessageBalloonView:(id)arg1 playbackSpeed:(double)arg2;
- (void)presentStickerDetailControllerWithStickers:(id)arg1;
- (void)reloadLayoutForBalloonView:(id)arg1;
- (id)replyButtonBorderLayer;
- (id)replyButtonEffectView;
- (double)replyButtonHeightFromBalloon;
- (id)replyButtonMaskLayer;
- (double)replyButtonVerticalOffset;
- (id)replyButtonView;
- (void)setAnimationsDisabledForTesting:(bool)arg1;
- (void)setAttributionViewController:(id)arg1;
- (void)setBalloonView:(id)arg1;
- (void)setBalloonYOffsetFromTranscript:(double)arg1;
- (void)setHideBalloonView:(bool)arg1;
- (void)setHighlightButton:(id)arg1;
- (void)setInterfaceActions:(id)arg1;
- (void)setLivePhotoBalloonView:(id)arg1;
- (void)setReplyButtonBorderLayer:(id)arg1;
- (void)setReplyButtonEffectView:(id)arg1;
- (void)setReplyButtonMaskLayer:(id)arg1;
- (void)setReplyButtonView:(id)arg1;
- (void)setTintViewMaskLayer:(id)arg1;
- (void)setupReplyButton;
- (void)stickerDetailViewController:(id)arg1 deletedStickerWithTransferGUID:(id)arg2;
- (void)stickerDetailViewController:(id)arg1 selectedStickerPackWithAdamID:(id)arg2;
- (unsigned long long)supportedInterfaceOrientations;
- (id)tintViewMaskLayer;
- (void)traitCollectionDidChange:(id)arg1;
- (void)updateReplyButtonColor;
- (void)updateReplyButtonSizeAndLocation:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 layoutRelativeToHighlightButton:(bool)arg2;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;

@end
