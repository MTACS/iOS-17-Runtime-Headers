
@interface HUNCCameraPlayerViewController : AVPlayerViewController <AVPlayerViewControllerDelegate, AVPlayerViewControllerDelegatePrivate, HFCameraPlaybackEngineObserver, HFItemManagerDelegate, HUCameraPlayerAVBehaviorDelegate> {
    HUCameraPlayerAccessoryViewController * _accessoryViewController;
    HUCameraPlayerAVBehavior * _behavior;
    HUCameraBlurViewController * _blurViewController;
    HFCameraItem * _cameraItem;
    HMCameraProfile * _cameraProfile;
    NSUUID * _clipUUID;
    HMCameraClip * _currentClip;
    bool  _hu_playbackControlsAreVisible;
    HFItemManager * _itemManager;
    HFCameraAnalyticsCameraPlayerLaunchEvent * _launchEvent;
    HUCameraLiveButtonView * _liveButtonView;
    HUCameraPlayerLiveContentViewController * _liveContentViewController;
    HUNCCameraScrubberViewController * _miniScrubberViewController;
    NSUUID * _notificationUUID;
    unsigned long long  _numberOfAssociatedAccessoriesDisplayed;
    HUNCCameraPlayerPlaceholderContentViewController * _placeholderContentViewController;
    HFCameraPlaybackEngine * _playbackEngine;
    NSDate * _playbackStartDateFromSignificantEvent;
    NAUILayoutConstraintSet * _scrubberConstraintSet;
    NAUILayoutConstraintSet * _staticConstraintSet;
}

@property (nonatomic, retain) HUCameraPlayerAccessoryViewController *accessoryViewController;
@property (nonatomic, retain) HUCameraPlayerAVBehavior *behavior;
@property (nonatomic, retain) HUCameraBlurViewController *blurViewController;
@property (nonatomic, retain) HFCameraItem *cameraItem;
@property (nonatomic, retain) HMCameraProfile *cameraProfile;
@property (nonatomic, retain) NSUUID *clipUUID;
@property (nonatomic) HMCameraClip *currentClip;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool hu_playbackControlsAreVisible;
@property (nonatomic, retain) HFItemManager *itemManager;
@property (nonatomic, retain) HFCameraAnalyticsCameraPlayerLaunchEvent *launchEvent;
@property (nonatomic, retain) HUCameraLiveButtonView *liveButtonView;
@property (nonatomic, retain) HUCameraPlayerLiveContentViewController *liveContentViewController;
@property (nonatomic, retain) HUNCCameraScrubberViewController *miniScrubberViewController;
@property (nonatomic, retain) NSUUID *notificationUUID;
@property (nonatomic) unsigned long long numberOfAssociatedAccessoriesDisplayed;
@property (nonatomic, retain) HUNCCameraPlayerPlaceholderContentViewController *placeholderContentViewController;
@property (nonatomic, retain) HFCameraPlaybackEngine *playbackEngine;
@property (nonatomic, retain) NSDate *playbackStartDateFromSignificantEvent;
@property (nonatomic, retain) NAUILayoutConstraintSet *scrubberConstraintSet;
@property (nonatomic, retain) NAUILayoutConstraintSet *staticConstraintSet;
@property (readonly) Class superclass;

+ (bool)usesSecondGenerationControls;

- (void).cxx_destruct;
- (void)_setupConstraintSets;
- (void)_setupPlaybackEngine;
- (bool)_shouldAutoPlayOnViewAppearance;
- (void)_updateCameraStatus;
- (void)_updateLivePreviewAspectRatio;
- (void)_updatePlayerVolumeSliderState;
- (void)_updateStateForPlaybackPosition:(id)arg1 animated:(bool)arg2;
- (void)_updateStateForScrubbingStatus:(bool)arg1 animated:(bool)arg2;
- (void)_updatedRecordedClipInterfaceAvailabilityAnimated:(bool)arg1;
- (id)accessoryViewController;
- (void)addPlaybackEngineObservation;
- (id)behavior;
- (id)blurViewController;
- (id)cameraItem;
- (id)cameraProfile;
- (id)clipUUID;
- (id)currentClip;
- (double)currentScrubberResolutionForBehavior:(id)arg1;
- (void)dealloc;
- (id)home;
- (bool)hu_playbackControlsAreVisible;
- (id)initWithCameraProfile:(id)arg1 notificationUUID:(id)arg2 clipUUID:(id)arg3 imageURL:(id)arg4;
- (id)itemManager;
- (void)itemManager:(id)arg1 didUpdateResultsForSourceItem:(id)arg2;
- (id)launchEvent;
- (id)liveButtonView;
- (id)liveContentViewController;
- (void)loadCameraClip;
- (id)miniScrubberViewController;
- (id)notificationUUID;
- (unsigned long long)numberOfAssociatedAccessoriesDisplayed;
- (id)placeholderContentViewController;
- (void)playbackControlsDidChangePlayerVolume:(float)arg1;
- (void)playbackControlsDidToggleMuted:(bool)arg1;
- (void)playbackControlsDidUpdateVisibilityOfLoadingIndicator:(bool)arg1;
- (id)playbackEngine;
- (void)playbackEngine:(id)arg1 didUpdateEvents:(id)arg2;
- (void)playbackEngine:(id)arg1 didUpdateLiveCameraSource:(id)arg2;
- (void)playbackEngine:(id)arg1 didUpdatePlaybackError:(id)arg2;
- (void)playbackEngine:(id)arg1 didUpdatePlaybackPosition:(id)arg2;
- (void)playbackEngine:(id)arg1 didUpdateScrubbingStatus:(bool)arg2;
- (void)playbackEngine:(id)arg1 didUpdateTimeControlStatus:(unsigned long long)arg2;
- (id)playbackStartDateFromSignificantEvent;
- (void)playerViewController:(id)arg1 willTransitionToVisibilityOfPlaybackControls:(bool)arg2 withAnimationCoordinator:(id)arg3;
- (void)reloadAfterNotificationUpdate;
- (void)reloadForCurrentClip;
- (id)scrubberConstraintSet;
- (void)setAccessoryViewController:(id)arg1;
- (void)setBehavior:(id)arg1;
- (void)setBlurViewController:(id)arg1;
- (void)setCameraItem:(id)arg1;
- (void)setCameraProfile:(id)arg1;
- (void)setClipUUID:(id)arg1;
- (void)setCurrentClip:(id)arg1;
- (void)setHu_playbackControlsAreVisible:(bool)arg1;
- (void)setItemManager:(id)arg1;
- (void)setLaunchEvent:(id)arg1;
- (void)setLiveButtonView:(id)arg1;
- (void)setLiveContentViewController:(id)arg1;
- (void)setMiniScrubberViewController:(id)arg1;
- (void)setNotificationUUID:(id)arg1;
- (void)setNumberOfAssociatedAccessoriesDisplayed:(unsigned long long)arg1;
- (void)setPlaceholderContentViewController:(id)arg1;
- (void)setPlaybackEngine:(id)arg1;
- (void)setPlaybackStartDateFromSignificantEvent:(id)arg1;
- (void)setScrubberConstraintSet:(id)arg1;
- (void)setStaticConstraintSet:(id)arg1;
- (bool)shouldDisplayMicrophoneControl;
- (id)staticConstraintSet;
- (void)toggleLive;
- (void)toggleMicrophoneState;
- (void)updateLiveButton;
- (void)updateMicrophone;
- (void)updateMicrophoneVisibility;
- (void)updateViewConstraints;
- (void)updateVolumeControlVisibility;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillLayoutSubviews;

@end
