
@interface HUCameraView : UIView {
    UIActivityIndicatorView * _activityIndicatorView;
    UIView * _backgroundView;
    NSLayoutYAxisAnchor * _badgeBottomAnchor;
    NSLayoutConstraint * _badgeBottomConstraint;
    struct UIOffset { 
        double horizontal; 
        double vertical; 
    }  _badgeOffset;
    NSLayoutConstraint * _badgeTrailingConstraint;
    HUCameraBadgeView * _badgeView;
    NSLayoutConstraint * _cameraAspectRatioConstraint;
    HURemoteContextHostingView * _cameraContainerView;
    UIView * _cameraDimmingView;
    UIView * _cameraOverlayView;
    UIImageView * _demoSnapshotImageView;
    HUCameraErrorContent * _errorContent;
    UIView<HUCameraErrorViewable> * _errorView;
    bool  _hideCameraContentWhenDisplayingErrors;
    unsigned long long  _maskedCameraCorners;
    UIView<HUCameraErrorViewable> * _overrideErrorView;
    bool  _shouldRespectAspectRatio;
    bool  _showActivityIndicator;
    NADecayingTimer * _snapshotAgeUpdateTimer;
    NSArray * _staticConstraints;
}

@property (nonatomic, retain) UIActivityIndicatorView *activityIndicatorView;
@property (nonatomic, retain) UIView *backgroundView;
@property (nonatomic, retain) NSLayoutYAxisAnchor *badgeBottomAnchor;
@property (nonatomic, retain) NSLayoutConstraint *badgeBottomConstraint;
@property (getter=isBadgeHidden, nonatomic) bool badgeHidden;
@property (nonatomic) struct UIOffset { double x1; double x2; } badgeOffset;
@property (nonatomic, retain) NSLayoutConstraint *badgeTrailingConstraint;
@property (nonatomic, readonly) HUCameraBadgeView *badgeView;
@property (nonatomic, retain) NSLayoutConstraint *cameraAspectRatioConstraint;
@property (nonatomic, readonly) HURemoteContextHostingView *cameraContainerView;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } cameraContentFrame;
@property (nonatomic, retain) UIView *cameraDimmingView;
@property (nonatomic, readonly) UIView *cameraOverlaySnapshot;
@property (nonatomic, readonly) UIView *cameraOverlayView;
@property (nonatomic, retain) HMCameraSource *cameraSource;
@property (nonatomic, readonly) HMCameraView *cameraView;
@property (nonatomic, retain) UIImageView *demoSnapshotImageView;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } derivedCameraContentFrame;
@property (nonatomic, retain) HUCameraErrorContent *errorContent;
@property (nonatomic, retain) UIView<HUCameraErrorViewable> *errorView;
@property (nonatomic) bool hideCameraContentWhenDisplayingErrors;
@property (nonatomic) unsigned long long maskedCameraCorners;
@property (nonatomic, retain) UIView<HUCameraErrorViewable> *overrideErrorView;
@property (nonatomic) bool shouldRespectAspectRatio;
@property (nonatomic) bool showActivityIndicator;
@property (nonatomic, retain) NADecayingTimer *snapshotAgeUpdateTimer;
@property (nonatomic, retain) NSArray *staticConstraints;

+ (bool)requiresConstraintBasedLayout;

- (void).cxx_destruct;
- (double)_continuousCornerRadius;
- (void)_scheduleNextSnapshotAgeUpdateForCaptureDate:(id)arg1;
- (void)_setContinuousCornerRadius:(double)arg1;
- (void)_updateBadgeView;
- (void)_updateBadgeViewReschedulingTimerIfNecessary:(bool)arg1;
- (void)_updateErrorAndActivityIndicatorVisibilityAnimated:(bool)arg1;
- (void)_updateMaskedCameraCorners;
- (id)activityIndicatorView;
- (id)backgroundColor;
- (id)backgroundView;
- (id)badgeBottomAnchor;
- (id)badgeBottomConstraint;
- (struct UIOffset { double x1; double x2; })badgeOffset;
- (id)badgeTrailingConstraint;
- (id)badgeView;
- (id)cameraAspectRatioConstraint;
- (id)cameraContainerView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })cameraContentFrame;
- (id)cameraContentSnapshot;
- (id)cameraDimmingView;
- (id)cameraOverlaySnapshot;
- (id)cameraOverlayView;
- (id)cameraSource;
- (id)cameraView;
- (long long)contentModeForAspectRatio:(double)arg1;
- (void)dealloc;
- (id)demoSnapshotImageView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })derivedCameraContentFrame;
- (id)errorContent;
- (id)errorView;
- (bool)hideCameraContentWhenDisplayingErrors;
- (id)init;
- (id)initWithBadgeView:(id)arg1;
- (bool)isBadgeHidden;
- (void)layoutSubviews;
- (unsigned long long)maskedCameraCorners;
- (id)overrideErrorView;
- (void)setActivityIndicatorView:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setBackgroundView:(id)arg1;
- (void)setBadgeBottomAnchor:(id)arg1;
- (void)setBadgeBottomConstraint:(id)arg1;
- (void)setBadgeHidden:(bool)arg1;
- (void)setBadgeOffset:(struct UIOffset { double x1; double x2; })arg1;
- (void)setBadgeTrailingConstraint:(id)arg1;
- (void)setCameraAspectRatioConstraint:(id)arg1;
- (void)setCameraContentMode:(long long)arg1;
- (void)setCameraDimmingView:(id)arg1;
- (void)setCameraSource:(id)arg1;
- (void)setCameraSource:(id)arg1 animated:(bool)arg2;
- (void)setCameraSource:(id)arg1 withDemoSnapshotURL:(id)arg2 animated:(bool)arg3;
- (void)setContentMode:(long long)arg1;
- (void)setDemoSnapshotImageView:(id)arg1;
- (void)setErrorContent:(id)arg1;
- (void)setErrorContent:(id)arg1 animated:(bool)arg2;
- (void)setErrorView:(id)arg1;
- (void)setHideCameraContentWhenDisplayingErrors:(bool)arg1;
- (void)setMaskedCameraCorners:(unsigned long long)arg1;
- (void)setOverrideErrorView:(id)arg1;
- (void)setShouldRespectAspectRatio:(bool)arg1;
- (void)setShowActivityIndicator:(bool)arg1;
- (void)setShowActivityIndicator:(bool)arg1 animated:(bool)arg2;
- (void)setSnapshotAgeUpdateTimer:(id)arg1;
- (void)setStaticConstraints:(id)arg1;
- (bool)shouldRespectAspectRatio;
- (bool)showActivityIndicator;
- (id)snapshotAgeUpdateTimer;
- (id)staticConstraints;
- (void)updateConstraints;

@end
