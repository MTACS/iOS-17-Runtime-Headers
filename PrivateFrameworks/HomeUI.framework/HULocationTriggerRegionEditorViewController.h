
@interface HULocationTriggerRegionEditorViewController : UIViewController <HFLocationManagerObserver, HULocationTriggerEditorMapDragRadiusViewDelegate, HUPreloadableViewController, MKMapViewDelegatePrivate, UISearchBarDelegate, UITableViewDataSource, UITableViewDelegate> {
    NSArray * _constraints;
    <HULocationTriggerRegionEditorViewControllerDelegate> * _delegate;
    MKPointAnnotation * _desiredAddressAnnotation;
    UIView * _dividerView;
    HULocationTriggerEditorMapDragRadiusView * _dragView;
    HMHome * _home;
    MKLocalSearch * _localSearch;
    NSArray * _localSearchResults;
    GEOLocationShifter * _locationShifter;
    MKMapView * _mapView;
    double  _radiusInPoints;
    NSArray * _recents;
    HULocationTriggerRegion * _region;
    UISearchBar * _searchBar;
    NSIndexPath * _selectedIndexPath;
    UITableView * _tableView;
}

@property (nonatomic, retain) NSArray *constraints;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <HULocationTriggerRegionEditorViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) MKPointAnnotation *desiredAddressAnnotation;
@property (nonatomic, retain) UIView *dividerView;
@property (nonatomic, retain) HULocationTriggerEditorMapDragRadiusView *dragView;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) HMHome *home;
@property (nonatomic, retain) MKLocalSearch *localSearch;
@property (nonatomic, retain) NSArray *localSearchResults;
@property (nonatomic, retain) GEOLocationShifter *locationShifter;
@property (nonatomic, retain) MKMapView *mapView;
@property (nonatomic) double radiusInPoints;
@property (nonatomic, retain) NSArray *recents;
@property (nonatomic, retain) HULocationTriggerRegion *region;
@property (nonatomic, retain) UISearchBar *searchBar;
@property (nonatomic, retain) NSIndexPath *selectedIndexPath;
@property (readonly) Class superclass;
@property (nonatomic, retain) UITableView *tableView;

+ (id)_homeImage;
+ (id)_pinImage;

- (void).cxx_destruct;
- (void)_cancel:(id)arg1;
- (void)_displayLocation:(id)arg1;
- (void)_done:(id)arg1;
- (long long)_firstLocalSearchResultRowIndex;
- (long long)_firstRecentRowIndex;
- (bool)_hasLocation;
- (long long)_homeRowIndex;
- (long long)_lastRecentRowIndex;
- (id)_locationForRecentMetadataDictionary:(id)arg1;
- (unsigned long long)_proximityType;
- (void)_reloadData;
- (void)_resetSearchResults;
- (void)_setupMap;
- (id)_shiftLocationIfNeeded:(id)arg1;
- (id)_shiftLocationIfNeeded:(id)arg1 isRetry:(bool)arg2;
- (void)_showMapRegionForCoordinate:(struct CLLocationCoordinate2D { double x1; double x2; })arg1 radius:(double)arg2 animated:(bool)arg3;
- (void)_updateRecentsWithSearchText:(id)arg1;
- (void)_updateUI;
- (void)_updateUIWithRegion:(id)arg1;
- (id)constraints;
- (id)delegate;
- (id)desiredAddressAnnotation;
- (id)dividerView;
- (id)dragView;
- (id)home;
- (id)hu_preloadContent;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithRegion:(id)arg1 home:(id)arg2 delegate:(id)arg3;
- (void)loadView;
- (id)localSearch;
- (id)localSearchResults;
- (id)locationShifter;
- (void)mapRadiusView:(id)arg1 radiusDidChange:(double)arg2 radiusInPoints:(double)arg3;
- (id)mapView;
- (double)radiusInPoints;
- (id)recents;
- (id)region;
- (id)searchBar;
- (void)searchBar:(id)arg1 textDidChange:(id)arg2;
- (id)selectedIndexPath;
- (void)setConstraints:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDesiredAddressAnnotation:(id)arg1;
- (void)setDividerView:(id)arg1;
- (void)setDragView:(id)arg1;
- (void)setLocalSearch:(id)arg1;
- (void)setLocalSearchResults:(id)arg1;
- (void)setLocationShifter:(id)arg1;
- (void)setMapView:(id)arg1;
- (void)setRadiusInPoints:(double)arg1;
- (void)setRecents:(id)arg1;
- (void)setRegion:(id)arg1;
- (void)setSearchBar:(id)arg1;
- (void)setSelectedIndexPath:(id)arg1;
- (void)setTableView:(id)arg1;
- (id)showLocationRegionInvalidAlert;
- (id)tableView;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)updateViewConstraints;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;

@end
