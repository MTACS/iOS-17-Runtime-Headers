
@interface FBKDraftingController : NSObject {
    FBKData * _FBKData;
    NSDictionary * _cachedDiffableSections;
    NSArray * _cachedVisibleGroups;
    NSMutableDictionary * _cachedVisibleQuestions;
    FBKDraftModelSnapshot * _currentSnapshot;
    <FBKDraftingDelegate> * _delegate;
    FBKQuestionDependencyGraph * _dependencyGraph;
    FBKDeviceDiagnosticsController * _diagnosticsController;
    FBKFormResponse * _formResponse;
    FBKBugFormStub * _formStub;
    bool  _isDirty;
    bool  _isLoading;
    bool  _isSubmitting;
    NSMutableSet * _questionIDsInErrorState;
    bool  _spamDebugLogs;
    FBKTeam * _team;
}

@property (nonatomic) FBKData *FBKData;
@property (nonatomic, readonly) NSArray *allVisibleAnswers;
@property (nonatomic, retain) NSDictionary *cachedDiffableSections;
@property (nonatomic, retain) NSArray *cachedVisibleGroups;
@property (nonatomic, retain) NSMutableDictionary *cachedVisibleQuestions;
@property (nonatomic, retain) FBKDraftModelSnapshot *currentSnapshot;
@property (nonatomic) <FBKDraftingDelegate> *delegate;
@property (retain) FBKQuestionDependencyGraph *dependencyGraph;
@property (nonatomic, retain) FBKDeviceDiagnosticsController *diagnosticsController;
@property (nonatomic, retain) FBKFormResponse *formResponse;
@property (nonatomic, retain) FBKBugFormStub *formStub;
@property bool isDirty;
@property bool isLoading;
@property bool isSubmitting;
@property (nonatomic, retain) NSMutableSet *questionIDsInErrorState;
@property (nonatomic) bool spamDebugLogs;
@property (nonatomic, retain) FBKTeam *team;
@property (nonatomic, readonly) NSArray *unansweredRequiredModalQuestions;

- (void).cxx_destruct;
- (id)FBKData;
- (void)_initForFormResponse;
- (void)_loadNewResponseForBugForm:(id)arg1 orBugFormStub:(id)arg2 withTeam:(id)arg3 requestPlugIns:(id)arg4 appToken:(id)arg5;
- (void)_loadResponseWithFormResponse:(id)arg1 item:(id)arg2;
- (void)_resetInternalEntities;
- (id)allVisibleAnswers;
- (bool)answer:(id)arg1 isValidForQuestion:(id)arg2;
- (void)attachAnswersToQuestionsWithGivenData:(id)arg1;
- (void)automaticallyFillInAllAnswers;
- (id)cachedDiffableSections;
- (id)cachedVisibleGroups;
- (id)cachedVisibleQuestions;
- (id)choiceSetResolverWithValue:(id)arg1 givenChoices:(id)arg2;
- (void)configure;
- (id)currentSnapshot;
- (id)delegate;
- (id)dependencyGraph;
- (id)diagnosticsController;
- (void)didChangeAnswerToQuestion:(id)arg1;
- (void)didMakeDeviceAttachmentChanges;
- (id)firstVisibleInvalidQuestion;
- (id)formResponse;
- (id)formStub;
- (id)generateSnapshotIdentifiers:(bool)arg1;
- (id)identifierForVisibleQuestion:(id)arg1 hasAttemptedSubmission:(bool)arg2;
- (id)indexPathForQuestion:(id)arg1;
- (id)init;
- (id)initWithFBKData:(id)arg1;
- (id)invalidQuestionIDs;
- (bool)isDirty;
- (bool)isLoading;
- (bool)isQuestionVisible:(id)arg1;
- (bool)isSubmitting;
- (void)loadFormResponseFromContentItem:(id)arg1;
- (void)loadNewResponseForBugForm:(id)arg1;
- (void)loadNewResponseForBugForm:(id)arg1 withTeam:(id)arg2;
- (void)loadNewResponseForBugFormStub:(id)arg1;
- (void)loadNewResponseForBugFormStub:(id)arg1 requestPlugIns:(id)arg2 appToken:(id)arg3;
- (void)loadNewResponseForBugFormStub:(id)arg1 withTeam:(id)arg2;
- (void)loadResponseForFeedbackObject:(id)arg1;
- (void)loadResponseForFeedbackObject:(id)arg1 withTeam:(id)arg2;
- (id)newModelSnapshot;
- (void)preemptivelyRemoveQuestionFromErrorStateWithQuestion:(id)arg1;
- (id)questionGroupForSectionIdentifier:(id)arg1;
- (id)questionIDsInErrorState;
- (id)questionsForSectionIdentifier:(id)arg1;
- (void)reevaluateDependenciesWithQuestionChanged:(id)arg1 toAdd:(id)arg2 toRemove:(id)arg3;
- (void)runResolvers;
- (void)sendSnapshotUpdate;
- (void)setCachedDiffableSections:(id)arg1;
- (void)setCachedVisibleGroups:(id)arg1;
- (void)setCachedVisibleQuestions:(id)arg1;
- (void)setCurrentSnapshot:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDependencyGraph:(id)arg1;
- (void)setDiagnosticsController:(id)arg1;
- (void)setFBKData:(id)arg1;
- (void)setFormResponse:(id)arg1;
- (void)setFormStub:(id)arg1;
- (void)setIsDirty:(bool)arg1;
- (void)setIsLoading:(bool)arg1;
- (void)setIsSubmitting:(bool)arg1;
- (void)setQuestionIDsInErrorState:(id)arg1;
- (void)setResponse:(id)arg1 forQuestion:(id)arg2;
- (void)setSpamDebugLogs:(bool)arg1;
- (void)setTeam:(id)arg1;
- (bool)spamDebugLogs;
- (id)team;
- (id)unansweredRequiredModalQuestions;
- (bool)updateQuestionVisibility;
- (void)updateUIAfterAutoFill;
- (void)updateVisibilityForChangedQuestion:(id)arg1;
- (bool)validate:(id*)arg1;
- (id)visibleQuestionForIndexPath:(id)arg1;
- (id)visibleQuestionForSectionIdentifier:(id)arg1 itemIdentifier:(id)arg2;
- (id)visibleQuestionGroups;
- (id)visibleQuestionsForGroup:(id)arg1;

@end
