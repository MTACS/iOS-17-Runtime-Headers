
@interface ICEvernoteNoteParser : NSObject <NSXMLParserDelegate> {
    NSMutableString * _bufferString;
    long long  _contentLevel;
    NSMutableString * _contentString;
    NSURL * _currentImportDirectory;
    NSMutableDictionary * _currentImportItem;
    ICEvernoteNote * _currentNote;
    ICEvernoteResource * _currentResource;
    NSMutableArray * _importItems;
    unsigned long long  _noteCount;
    NSMutableArray * _notes;
    NSError * _parseError;
    NSObject<OS_dispatch_queue> * _parseQueue;
    NSObject<OS_dispatch_semaphore> * _parseSemaphore;
    bool  _shouldCountOnly;
    bool  _shouldIgnoreCurrentNote;
}

@property (nonatomic, retain) NSMutableString *bufferString;
@property (nonatomic) long long contentLevel;
@property (nonatomic, retain) NSMutableString *contentString;
@property (nonatomic, retain) NSURL *currentImportDirectory;
@property (nonatomic, retain) NSMutableDictionary *currentImportItem;
@property (nonatomic, retain) ICEvernoteNote *currentNote;
@property (nonatomic, retain) ICEvernoteResource *currentResource;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSURL *importDirectory;
@property (nonatomic, retain) NSMutableArray *importItems;
@property (nonatomic) unsigned long long noteCount;
@property (nonatomic, retain) NSMutableArray *notes;
@property (nonatomic, retain) NSError *parseError;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *parseQueue;
@property (nonatomic, retain) NSObject<OS_dispatch_semaphore> *parseSemaphore;
@property (nonatomic) bool shouldCountOnly;
@property (nonatomic) bool shouldIgnoreCurrentNote;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)archiveEvernoteNote:(id)arg1;
- (void)archiveEvernoteResource:(id)arg1;
- (id)archiveItemsFromBookmarkData:(id)arg1 error:(id*)arg2;
- (id)bufferString;
- (void)cleanupArchiveId:(id)arg1;
- (long long)contentLevel;
- (id)contentString;
- (unsigned long long)countEvernoteNotesFromBookmarkData:(id)arg1;
- (id)currentImportDirectory;
- (id)currentImportItem;
- (id)currentNote;
- (id)currentResource;
- (id)dateFromDateString:(id)arg1;
- (id)importDirectory;
- (id)importDirectoryURLWithImportIdentifier:(id)arg1;
- (id)importItems;
- (id)init;
- (unsigned long long)noteCount;
- (id)notes;
- (id)parseError;
- (void)parseFileAtBookmarkData:(id)arg1 shouldCountOnly:(bool)arg2;
- (id)parseQueue;
- (id)parseSemaphore;
- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (void)parser:(id)arg1 foundCharacters:(id)arg2;
- (void)parser:(id)arg1 parseErrorOccurred:(id)arg2;
- (void)parserDidEndDocument:(id)arg1;
- (void)setBufferString:(id)arg1;
- (void)setContentLevel:(long long)arg1;
- (void)setContentString:(id)arg1;
- (void)setCurrentImportDirectory:(id)arg1;
- (void)setCurrentImportItem:(id)arg1;
- (void)setCurrentNote:(id)arg1;
- (void)setCurrentResource:(id)arg1;
- (void)setImportItems:(id)arg1;
- (void)setNoteCount:(unsigned long long)arg1;
- (void)setNotes:(id)arg1;
- (void)setParseError:(id)arg1;
- (void)setParseQueue:(id)arg1;
- (void)setParseSemaphore:(id)arg1;
- (void)setShouldCountOnly:(bool)arg1;
- (void)setShouldIgnoreCurrentNote:(bool)arg1;
- (bool)shouldCountOnly;
- (bool)shouldIgnoreCurrentNote;
- (id)unarchiveEvernoteNoteFromArchiveId:(id)arg1 noteArchiveId:(id)arg2;
- (id)unarchiveEvernoteResourceFromArchiveId:(id)arg1 resourceArchiveId:(id)arg2;

@end
