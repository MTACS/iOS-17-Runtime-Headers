
@interface ICAttachment : ICBaseAttachment <ICCloudObject, ICSearchIndexable> {
    NSURL * _URL;
    ICAttachmentModel * _attachmentModel;
    short  _attachmentType;
    ICAssetGenerationManager * _fallbackImageGenerationManager;
    ICAssetGenerationManager * _fallbackPDFGenerationManager;
    ICSynapseLinkPreviewLoadingOperation * _loadOperation;
    NSDictionary * _metadata;
    AVAsset * _movie;
    NSURL * _remoteFileURL;
    bool  settingMergeableData;
    bool  suppressesFileDeletion;
}

@property (nonatomic, retain) NSURL *URL;
@property (nonatomic, retain) NSString *additionalIndexableText;
@property (nonatomic, readonly) NSArray *authorsExcludingCurrentUser;
@property (nonatomic) bool checkedForLocation;
@property (nonatomic, readonly, copy) NSString *contentIdentifier;
@property (nonatomic, readonly, copy) NSDate *creationDate;
@property (nonatomic, retain) NSDate *creationDate;
@property (nonatomic, copy) ICDocCamImageQuad *croppingQuad;
@property (nonatomic) double croppingQuadBottomLeftX;
@property (nonatomic) double croppingQuadBottomLeftY;
@property (nonatomic) double croppingQuadBottomRightX;
@property (nonatomic) double croppingQuadBottomRightY;
@property (nonatomic) double croppingQuadTopLeftX;
@property (nonatomic) double croppingQuadTopLeftY;
@property (nonatomic) double croppingQuadTopRightX;
@property (nonatomic) double croppingQuadTopRightY;
@property (nonatomic, readonly) <ICAttachmentCryptoStrategy> *cryptoStrategy;
@property (nonatomic, readonly, copy) NSString *dataSourceIdentifier;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) long long docCamPDFVersion;
@property (nonatomic) double duration;
@property (nonatomic, retain) NSData *fallbackImageCryptoInitializationVector;
@property (nonatomic, retain) NSData *fallbackImageCryptoTag;
@property (nonatomic, readonly) NSString *fallbackImageGeneration;
@property (nonatomic, readonly) ICAssetGenerationManager *fallbackImageGenerationManager;
@property (nonatomic, readonly) LPLinkMetadata *fallbackMapMetadata;
@property (nonatomic, retain) NSData *fallbackPDFCryptoInitializationVector;
@property (nonatomic, retain) NSData *fallbackPDFCryptoTag;
@property (nonatomic, readonly) NSString *fallbackPDFGeneration;
@property (nonatomic, readonly) ICAssetGenerationManager *fallbackPDFGenerationManager;
@property (nonatomic, retain) NSString *fallbackSubtitleIOS;
@property (nonatomic, retain) NSString *fallbackSubtitleMac;
@property (nonatomic, retain) NSString *fallbackTitle;
@property (nonatomic, readonly) LPLinkMetadata *fallbackWebMetadata;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *filePreviewGenerationQueue;
@property (nonatomic) long long fileSize;
@property (nonatomic, retain) NSString *handwritingSummary;
@property (nonatomic) short handwritingSummaryVersion;
@property (nonatomic, readonly) bool hasCroppingQuad;
@property (nonatomic, readonly) bool hasImageFilterType;
@property (nonatomic) bool hasMarkupData;
@property (nonatomic, readonly) bool hasMetadata;
@property (nonatomic, readonly) bool hasOrientation;
@property (nonatomic, readonly) bool hasVisibleInlineAttachments;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) UIImage *image;
@property (nonatomic, retain) NSString *imageClassificationSummary;
@property (nonatomic) short imageClassificationSummaryVersion;
@property (nonatomic) short imageFilterType;
@property (nonatomic, retain) NSSet *inlineAttachments;
@property (nonatomic, readonly) bool isDeletable;
@property (nonatomic, readonly) bool isHiddenFromSearch;
@property (nonatomic, readonly) bool isInICloudAccount;
@property (nonatomic, readonly) bool isMovable;
@property (nonatomic, readonly) bool isReadOnly;
@property (nonatomic, readonly) bool isUnsupportedOnCurrentPlatform;
@property (nonatomic, readonly) bool isValidObject;
@property (nonatomic, retain) NSData *linkPresentationArchivedMetadata;
@property (nonatomic, retain) ICAttachmentLocation *location;
@property (nonatomic, readonly, copy) NSString *loggingDescription;
@property (nonatomic, readonly) NSManagedObjectContext *managedObjectContext;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *mapPreviewGenerationQueue;
@property (nonatomic, retain) NSData *markupModelData;
@property (nonatomic, retain) ICMedia *media;
@property (nonatomic, retain) NSData *mergeableData;
@property (nonatomic, retain) NSData *mergeablePreferredViewSize;
@property (nonatomic, retain) NSDictionary *metadata;
@property (nonatomic, retain) NSData *metadataData;
@property (nonatomic) long long minimumSupportedNotesVersion;
@property (nonatomic, readonly, copy) NSDate *modificationDate;
@property (nonatomic, retain) NSDate *modificationDate;
@property (nonatomic, readonly) NSString *modificationDateForSpeaking;
@property (nonatomic, retain) AVAsset *movie;
@property (nonatomic, readonly) NSString *movieDurationForSpeaking;
@property (nonatomic) bool needsInitialRelationshipSetup;
@property (nonatomic, readonly) bool needsToBeDeletedFromCloud;
@property (nonatomic, readonly) bool needsToBeFetchedFromCloud;
@property (nonatomic, readonly) bool needsToBePushedToCloud;
@property (nonatomic, readonly) bool needsToSaveUserSpecificRecord;
@property (nonatomic, retain) ICNote *noteUsingTitleForNoteTitle;
@property (nonatomic, readonly) NSManagedObjectID *objectID;
@property (nonatomic, retain) NSString *ocrSummary;
@property (nonatomic) short ocrSummaryVersion;
@property (nonatomic) short orientation;
@property (nonatomic) double originX;
@property (nonatomic) double originY;
@property (nonatomic, readonly) ICNotePasteboardData *pasteboardData;
@property (nonatomic) short preferredViewSize;
@property (nonatomic, retain) NSSet *previewImages;
@property (nonatomic, retain) NSDate *previewUpdateDate;
@property (nonatomic, readonly) NSString *quotedText;
@property (nonatomic, readonly, copy) CKRecordID *recordID;
@property (nonatomic, readonly, copy) NSString *recordType;
@property (nonatomic, retain) NSURL *remoteFileURL;
@property (nonatomic, retain) NSString *remoteFileURLString;
@property (nonatomic, readonly, copy) NSString *searchDomainIdentifier;
@property (nonatomic, readonly, copy) NSString *searchIndexingIdentifier;
@property (nonatomic, readonly) bool searchResultCanBeDeletedFromNoteContext;
@property (nonatomic, readonly) unsigned long long searchResultType;
@property (nonatomic, readonly) unsigned long long searchResultsSection;
@property (nonatomic, readonly) CSSearchableItemAttributeSet *searchableItemAttributeSet;
@property (readonly) CSSearchableItemAttributeSet *searchableItemViewAttributeSet;
@property (nonatomic) short section;
@property (getter=isSettingMergeableData, nonatomic) bool settingMergeableData;
@property (nonatomic) double sizeHeight;
@property (nonatomic) double sizeWidth;
@property (nonatomic, retain) NSSet *subAttachments;
@property (nonatomic, retain) NSString *summary;
@property (readonly) Class superclass;
@property (nonatomic) bool suppressesFileDeletion;
@property (nonatomic, retain) NSData *synapseData;
@property (nonatomic, retain) NSString *title;
@property (nonatomic, readonly) UIImage *unprocessedDocumentImage;
@property (nonatomic) bool urlExpired;
@property (nonatomic, retain) NSString *urlString;
@property (nonatomic, readonly) CSSearchableItemAttributeSet *userActivityContentAttributeSet;
@property (nonatomic, readonly, copy) CKRecordID *userSpecificRecordID;
@property (nonatomic, readonly, retain) CKRecord *userSpecificServerRecord;
@property (nonatomic, retain) NSString *userTitle;
@property (nonatomic, readonly) long long visibilityTestingType;
@property (nonatomic, readonly) NSSet *visibleInlineAttachments;
@property (nonatomic, readonly) bool wantsUserSpecificRecord;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *webPreviewGenerationQueue;

// Image: /System/Library/PrivateFrameworks/NotesShared.framework/NotesShared

+ (void)addPreviewImages:(id)arg1 toRecord:(id)arg2;
+ (id)allAttachmentsInContext:(id)arg1;
+ (id)attachmentIdentifiersForAccount:(id)arg1;
+ (id)attachmentSectionSortOrder;
+ (id)attachmentTypeUTIsToHideFromAttachmentBrowser;
+ (unsigned long long)countOfAttachmentsMatchingPredicate:(id)arg1 context:(id)arg2;
+ (id)defaultTitleForAttachmentType:(short)arg1;
+ (void)deleteAttachment:(id)arg1;
+ (void)enumerateAttachmentsInContext:(id)arg1 batchSize:(unsigned long long)arg2 visibleOnly:(bool)arg3 saveAfterBatch:(bool)arg4 usingBlock:(id /* block */)arg5;
+ (id)existingCloudObjectForRecordID:(id)arg1 accountID:(id)arg2 context:(id)arg3;
+ (id)fallbackImageContainerURLForIdentifier:(id)arg1 account:(id)arg2;
+ (id)fallbackImageEncryptedFallbackURLForIdentifier:(id)arg1 account:(id)arg2;
+ (id)fallbackImageFallbackURLForIdentifier:(id)arg1 account:(id)arg2;
+ (id)fallbackImageUTI;
+ (id)fallbackPDFContainerURLForIdentifier:(id)arg1 account:(id)arg2;
+ (id)fallbackPDFEncryptedFallbackURLForIdentifier:(id)arg1 account:(id)arg2;
+ (id)fallbackPDFFallbackURLForIdentifier:(id)arg1 account:(id)arg2;
+ (id)fallbackPDFUTI;
+ (id)filenameExtensionForUTI:(id)arg1;
+ (id)filenameFromUTI:(id)arg1;
+ (void)initialize;
+ (id)internalImageCache;
+ (id)isBeingEditedLocallyOnDeviceSet;
+ (bool)isPathExtensionSupportedForPasswordProtectedNotes:(id)arg1;
+ (bool)isTypeUTISupportedForPasswordProtectedNotes:(id)arg1;
+ (bool)isTypeUTISupportedInExtensions:(id)arg1;
+ (id)keyPathsForValuesAffectingIsSharedViaICloud;
+ (id)keyPathsForValuesAffectingParentCloudObject;
+ (id)mentionNotificationSnippetForAttachmentType:(short)arg1;
+ (id)mergeableWallClockValueKeyPaths;
+ (id)mimeTypeFromUTI:(id)arg1;
+ (id)newCloudObjectForRecord:(id)arg1 accountID:(id)arg2 context:(id)arg3;
+ (id)newFetchRequestForAttachments;
+ (id)noteFromAttachmentRecord:(id)arg1 accountID:(id)arg2 context:(id)arg3;
+ (id)noteFromAttachmentUserSpecificRecord:(id)arg1 accountID:(id)arg2 context:(id)arg3;
+ (id)predicateForAttachmentBrowserWithContext:(id)arg1;
+ (id)predicateForInlineDrawing;
+ (id)predicateForPasswordProtected:(bool)arg1;
+ (id)predicateForSearchableAttachmentsInContext:(id)arg1;
+ (id)predicateForUnsupportedAttachmentsInContext:(id)arg1;
+ (id)predicateForVisibleAttachmentsWithTypeUTI:(id)arg1 inContext:(id)arg2;
+ (void)purgeAttachment:(id)arg1;
+ (void)purgeAttachmentFilesForIdentifiers:(id)arg1 account:(id)arg2;
+ (short)sectionFromTypeUTI:(id)arg1 url:(id)arg2;
+ (bool)supportsNotesVersionTracking;
+ (bool)supportsUserSpecificRecords;
+ (id)temporaryPaperBundleURLForIdentifier:(id)arg1 account:(id)arg2;
+ (bool)typeUTIIsDrawing:(id)arg1;
+ (bool)typeUTIIsImage:(id)arg1;
+ (bool)typeUTIIsInlineDrawing:(id)arg1;
+ (bool)typeUTIIsPlayableAudio:(id)arg1;
+ (bool)typeUTIIsPlayableMovie:(id)arg1;
+ (bool)typeUTIIsSystemPaper:(id)arg1;
+ (void)undeleteAttachment:(id)arg1;

- (void).cxx_destruct;
- (id)URL;
- (void)accountWillChangeToAccount:(id)arg1;
- (id)addInlineAttachmentWithIdentifier:(id)arg1;
- (void)addLocationIfNeeded;
- (id)addLocationWithLatitude:(double)arg1 longitude:(double)arg2;
- (id)addMediaWithData:(id)arg1 filename:(id)arg2;
- (id)addMediaWithData:(id)arg1 filename:(id)arg2 updateFileBasedAttributes:(bool)arg3;
- (id)addMediaWithFileWrapper:(id)arg1;
- (id)addMediaWithURL:(id)arg1;
- (id)addMediaWithURL:(id)arg1 updateFileBasedAttributes:(bool)arg2;
- (void)addPaperBundleToRecordIfAppropriate:(id)arg1;
- (id)additionalIndexableText;
- (unsigned long long)approximateArchiveSizeIncludingPreviews:(bool)arg1;
- (void)attachmentDidChange;
- (id)attachmentModel;
- (id)attachmentPreviewImageCreatingIfNecessaryWithWidth:(double)arg1 height:(double)arg2 scale:(double)arg3 appearanceType:(unsigned long long)arg4 scaleWhenDrawing:(bool)arg5 metadata:(id)arg6;
- (id)attachmentPreviewImageWithMinSize:(struct CGSize { double x1; double x2; })arg1 scale:(double)arg2;
- (id)attachmentPreviewImageWithMinSize:(struct CGSize { double x1; double x2; })arg1 scale:(double)arg2 appearanceType:(unsigned long long)arg3;
- (id)attachmentPreviewImageWithMinSize:(struct CGSize { double x1; double x2; })arg1 scale:(double)arg2 appearanceType:(unsigned long long)arg3 matchScale:(bool)arg4 matchAppearance:(bool)arg5;
- (id)attachmentPreviewImageWithMinSize:(struct CGSize { double x1; double x2; })arg1 scale:(double)arg2 appearanceType:(unsigned long long)arg3 requireAppearance:(bool)arg4;
- (short)attachmentType;
- (id)authorsExcludingCurrentUser;
- (void)awakeFromFetch;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })bounds;
- (bool)checkPreviewImagesIntegrity;
- (id)childCloudObjects;
- (id)childCloudObjectsForMinimumSupportedVersionPropagation;
- (void)clearCachedImages;
- (void)clearDecryptedData;
- (id)contentIdentifier;
- (id)cryptoStrategyProtocol;
- (id)dataForTypeIdentifier:(id)arg1;
- (id)dataSourceIdentifier;
- (void)dealloc;
- (id)defaultTitle;
- (void)deleteAttachmentPreviewImages;
- (void)deleteFromLocalDatabase;
- (id)description;
- (void)deserializeAndMergeValues:(id)arg1;
- (void)didRefresh:(bool)arg1;
- (void)didTurnIntoFault;
- (id)drawingModel;
- (id)fallbackImageData;
- (id)fallbackImageEncryptedURL;
- (id)fallbackImageGenerationManager;
- (id)fallbackImageGenerationManager;
- (id)fallbackImageURL;
- (id)fallbackPDFData;
- (id)fallbackPDFEncryptedURL;
- (id)fallbackPDFGenerationManager;
- (id)fallbackPDFGenerationManager;
- (id)fallbackPDFURL;
- (id)fallbackSubtitleIOS;
- (id)fallbackSubtitleMac;
- (id)fallbackTitle;
- (id)fileSizeString;
- (id)fileURLForTypeIdentifier:(id)arg1;
- (void)fixBrokenReferences;
- (void)fixMarkedForDeletionForScannedDocuments;
- (id)galleryModel;
- (id)handwritingSummary;
- (bool)hasAllMandatoryFields;
- (bool)hasAnyPNGPreviewImageFiles;
- (bool)hasCroppingQuad;
- (bool)hasDeepLink;
- (bool)hasFallbackImage;
- (bool)hasFallbackPDF;
- (bool)hasImageFilterType;
- (bool)hasMetadata;
- (bool)hasOrientation;
- (bool)hasSynapseLink;
- (bool)hasVisibleInlineAttachments;
- (id)ic_loggingValues;
- (id)imageCacheKey;
- (id)imageClassificationSummary;
- (id)inlineDrawingModel;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (long long)intrinsicNotesVersionForScenario:(unsigned long long)arg1;
- (void)invalidateAttachmentPreviewImages;
- (bool)isAppStore;
- (bool)isAudio;
- (bool)isBeingEditedLocallyOnDevice;
- (bool)isChildOfDocumentGallery;
- (bool)isDrawing;
- (bool)isEncryptableKeyBinaryData:(id)arg1;
- (bool)isFolder;
- (bool)isHiddenFromSearch;
- (bool)isImage;
- (bool)isInICloudAccount;
- (bool)isInNoteTitleOrSnippet;
- (bool)isLoadingFromCloud;
- (bool)isMap;
- (bool)isMovable;
- (bool)isNews;
- (bool)isPencilKitDrawing;
- (bool)isPodcasts;
- (bool)isReadOnly;
- (bool)isScannedDocument;
- (bool)isSettingMergeableData;
- (bool)isTable;
- (bool)isURL;
- (bool)isUnsupported;
- (bool)isiTunes;
- (id)linkPresentationArchivedMetadata;
- (void)loadFromArchive:(const void*)arg1 dataPersister:(id)arg2 withIdentifierMap:(id)arg3;
- (void)loadLinkPreviewForSynapseItem:(id)arg1;
- (void)loadPreviewArchive:(const void*)arg1 previewDataIdentifier:(id)arg2 dataPersister:(id)arg3;
- (bool)locationNeedsUpdate;
- (id)makeCloudKitRecordForApproach:(long long)arg1 mergeableFieldState:(id)arg2;
- (id)makeUserSpecificCloudKitRecordForApproach:(long long)arg1;
- (void)markForDeletion;
- (id)markupModelData;
- (bool)mergeCloudKitRecord:(id)arg1 accountID:(id)arg2 approach:(long long)arg3 mergeableFieldState:(id)arg4;
- (bool)mergeCloudKitRecord:(id)arg1 accountID:(id)arg2 approach:(long long)arg3 mergeableFieldState:(id)arg4 newAttachment:(bool)arg5;
- (bool)mergeDataFromUserSpecificRecord:(id)arg1 accountID:(id)arg2;
- (id)mergeDecryptedValue:(id)arg1 withOldValue:(id)arg2 forKey:(id)arg3;
- (void)mergeFallbackImageAndPDFFromRecord:(id)arg1;
- (void)mergePaperBundleFromRecord:(id)arg1;
- (id)mergeableData;
- (id)metadata;
- (id)metadataData;
- (id)movie;
- (bool)needsToBePushedToCloud;
- (bool)needsToBeRequested;
- (void)objectWasFetchedFromCloudWithRecord:(id)arg1 accountID:(id)arg2 force:(bool)arg3;
- (void)objectWasPushedToCloudWithOperation:(id)arg1 serverRecord:(id)arg2;
- (id)objectsToBeDeletedBeforeThisObject;
- (id)ocrSummary;
- (id)paperBundleModel;
- (id)paperCoherenceContextURL;
- (id)parentAttachmentFromRecord:(id)arg1 accountID:(id)arg2 context:(id)arg3;
- (id)parentEncryptableObject;
- (void)persistPendingChanges;
- (bool)preferLocalPreviewImages;
- (short)preferredViewSize;
- (void)prepareForDeletion;
- (id)previewImageCacheKey;
- (id)previewItemTitle;
- (id)previewItemURL;
- (bool)previewsSupportMultipleAppearances;
- (bool)processFallbackAsset:(id)arg1 fallbackAssetType:(long long)arg2;
- (void)purgeAttachmentPreviewImages;
- (id)quotedText;
- (id)recordType;
- (id)recordZoneName;
- (void)recursivelyAddSubAttachments:(id)arg1;
- (void)regenerateTitle;
- (id)remoteFileURL;
- (void)removeTemporaryPaperBundle;
- (void)resetPreferredViewSizeIfNecessary;
- (void)saveMergeableDataIfNeeded;
- (void)savePreview:(id)arg1 toArchive:(void*)arg2 previewDataIdentifier:(id)arg3 dataPersister:(id)arg4;
- (bool)saveToArchive:(void*)arg1 dataPersister:(id)arg2 stripImageMarkupMetadata:(bool)arg3 error:(id*)arg4;
- (id)searchDomainIdentifier;
- (id)searchIndexingIdentifier;
- (bool)searchResultCanBeDeletedFromNoteContext;
- (unsigned long long)searchResultType;
- (unsigned long long)searchResultsSection;
- (id)searchableItemAttributeSet;
- (id)searchableTextContent;
- (id)searchableTextContentWithoutTitle;
- (void)setAdditionalIndexableText:(id)arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setFallbackSubtitleIOS:(id)arg1;
- (void)setFallbackSubtitleMac:(id)arg1;
- (void)setFallbackTitle:(id)arg1;
- (void)setHandwritingSummary:(id)arg1;
- (void)setImageClassificationSummary:(id)arg1;
- (void)setImageFilterType:(short)arg1;
- (void)setIsBeingEditedLocallyOnDevice:(bool)arg1;
- (void)setLinkPresentationArchivedMetadata:(id)arg1;
- (void)setMarkupModelData:(id)arg1;
- (void)setMergeableData:(id)arg1;
- (void)setMergeablePreferredViewSize:(id)arg1;
- (void)setMetadata:(id)arg1;
- (void)setMetadataData:(id)arg1;
- (void)setMovie:(id)arg1;
- (void)setNote:(id)arg1;
- (void)setOcrSummary:(id)arg1;
- (void)setOrientation:(short)arg1;
- (void)setParentAttachment:(id)arg1;
- (void)setPreferredViewSize:(short)arg1;
- (void)setRemoteFileURL:(id)arg1;
- (void)setSettingMergeableData:(bool)arg1;
- (void)setSummary:(id)arg1;
- (void)setSuppressesFileDeletion:(bool)arg1;
- (void)setSynapseData:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setTypeUTI:(id)arg1;
- (void)setTypeUTI:(id)arg1 resetToIntrinsicNotesVersion:(bool)arg2;
- (void)setURL:(id)arg1;
- (void)setUrlString:(id)arg1;
- (void)setUserTitle:(id)arg1;
- (bool)shouldEmbedMarkupDataInMedia;
- (bool)shouldShowInContentInfoText;
- (bool)shouldSyncMinimumSupportedNotesVersion;
- (bool)showsLoadingPlaceholder;
- (double)sizeHeight;
- (double)sizeWidth;
- (id)summary;
- (bool)supportsDeletionByTTL;
- (bool)supportsEncryptedValuesDictionary;
- (bool)supportsPhotosProcessing;
- (bool)supportsQuickLook;
- (bool)supportsRenaming;
- (bool)supportsSavingAttachmentToExternalFile;
- (void)suppressFileDeletion;
- (bool)suppressesFileDeletion;
- (id)synapseBasedMetadata;
- (id)synapseData;
- (id)systemPaperModel;
- (id)tableModel;
- (id)temporaryPaperBundleURL;
- (id)title;
- (void)undeleteAttachmentPreviewImages;
- (void)unmarkForDeletion;
- (id)unsupportedAttachmentSubtitle;
- (id)unsupportedAttachmentTitle;
- (void)updateAfterMediaChange;
- (id)updateAttachmentPreviewImageWithImageData:(id)arg1 size:(struct CGSize { double x1; double x2; })arg2 scale:(double)arg3 appearanceType:(unsigned long long)arg4 scaleWhenDrawing:(bool)arg5 metadata:(id)arg6 sendNotification:(bool)arg7;
- (id)updateAttachmentPreviewImageWithImageSrc:(struct CGImageSource { }*)arg1 maxDimension:(double)arg2 scale:(double)arg3 appearanceType:(unsigned long long)arg4 scaleWhenDrawing:(bool)arg5 metadata:(id)arg6 sendNotification:(bool)arg7;
- (void)updateAttachmentSectionWithTypeUTI:(id)arg1;
- (void)updateCombinedSummary;
- (void)updateMarkedForDeletionStateAttachmentIsInUse:(bool)arg1;
- (void)updateParentReferenceIfNecessary;
- (void)updatePlaceInLocationIfNeededHandler:(id /* block */)arg1;
- (void)updatePreviewsFromRecord:(id)arg1;
- (id)urlString;
- (id)userActivityContentAttributeSet;
- (id)userTitle;
- (long long)visibilityTestingType;
- (id)visibleInlineAttachments;
- (void)willRefresh:(bool)arg1;
- (void)willSave;
- (void)willTurnIntoFault;
- (void)willUpdateDeviceReplicaIDsToNotesVersion:(long long)arg1;
- (bool)writeFallbackImageData:(id)arg1;
- (bool)writeFallbackPDFData:(id)arg1;

// Image: /System/Library/PrivateFrameworks/NotesUI.framework/NotesUI

+ (id)imageCache;
+ (id)imageLoadingOperationQueue;
+ (id)thumbnailOperationQueue;

- (id)activityItems;
- (void)addPreviewImageToMetadata:(id)arg1;
- (bool)alwaysUsesSmallSize;
- (id)archiveLinkmetadata:(id)arg1;
- (id)attributedString;
- (id)cachedImage;
- (id)croppingQuad;
- (id)dataForTypeIdentifier:(id)arg1;
- (id)deviceInfosWithoutPreviewImagesFromDeviceInfos:(id)arg1;
- (long long)docCamPDFVersion;
- (id)fallbackMapMetadata;
- (id)fallbackRemoteAttachmentMetadata;
- (id)fallbackWebMetadata;
- (bool)fetchThumbnailImageWithMinSize:(struct CGSize { double x1; double x2; })arg1 scale:(double)arg2 appearanceInfo:(id)arg3 cache:(id)arg4 cacheKey:(id)arg5 processingBlock:(id /* block */)arg6 completionBlock:(id /* block */)arg7 fallbackBlock:(id /* block */)arg8 aboutToLoadHandler:(id /* block */)arg9;
- (id)fileMetadata;
- (id)filePreviewGenerationQueue;
- (id)fileURLForTypeIdentifier:(id)arg1;
- (void)filterInlineAttachmentsInTableColumnTextStorage:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (id)image;
- (id)inlineAttachmentFromObject:(id)arg1 createIfNecessary:(bool)arg2;
- (id)inlineAttachmentWithICTTAttachment:(id)arg1;
- (bool)isUnsupportedOnCurrentPlatform;
- (id /* block */)loadImage:(id /* block */)arg1;
- (id /* block */)loadImage:(id /* block */)arg1 aboutToLoadHandler:(id /* block */)arg2 forceFullSizeImage:(bool)arg3;
- (id)loadingAttachmentsMetadata;
- (id)lpImageFromFallbackPDF;
- (id)lpImageFromPreviewImage:(id)arg1;
- (id)mapPreviewGenerationQueue;
- (bool)metadataExists;
- (id)modificationDateForSpeaking;
- (id)movieDurationForSpeaking;
- (void)notifyDocCamFrameworkAttachmentWasDeleted;
- (id)pasteboardData;
- (void)persistLinkMetadata:(id)arg1;
- (id)plainURLMetadata;
- (void)redactAuthorAttributionsToCurrentUser;
- (void)requestFileMetadataIfNecessary;
- (void)requestRemoteMetadata;
- (id)retrieveLinkMetadata;
- (id)scannedDocumentsMetadata;
- (void)setCachedImage:(id)arg1;
- (void)setCroppingQuad:(id)arg1;
- (bool)thumbnailImage:(id*)arg1 minSize:(struct CGSize { double x1; double x2; })arg2 scale:(double)arg3 appearanceType:(unsigned long long)arg4 requireAppearance:(bool)arg5 imageScaling:(unsigned long long*)arg6 showAsFileIcon:(bool*)arg7 isMovie:(bool*)arg8 movieDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; }*)arg9;
- (bool)thumbnailImage:(id*)arg1 minSize:(struct CGSize { double x1; double x2; })arg2 scale:(double)arg3 imageScaling:(unsigned long long*)arg4 showAsFileIcon:(bool*)arg5 isMovie:(bool*)arg6 movieDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; }*)arg7;
- (id)unprocessedDocumentImage;
- (id)updateAttachmentPreviewImageWithImage:(id)arg1 scale:(double)arg2 appearanceType:(unsigned long long)arg3 scaleWhenDrawing:(bool)arg4 metadata:(id)arg5 sendNotification:(bool)arg6;
- (id)updateAttachmentPreviewImageWithImage:(id)arg1 scale:(double)arg2 scaleWhenDrawing:(bool)arg3 metadata:(id)arg4 sendNotification:(bool)arg5;
- (bool)usesLinkPresentation;
- (id)webPreviewGenerationQueue;

@end
