
@interface _UIKeyboardArbiterClient : NSObject <_UIAssertionControllerSubject, _UIKBArbiterDelegateProtocol, _UIKeyboardArbiterClient, _UIRemoteKeyboardControllerDelegate, _UIRemoteKeyboardDistributedViewSource, _UIRemoteKeyboardsEventObserverDelegate> {
    _UIAssertionController * _assertionController;
    bool  _avoidDisableKeyboard;
    _UIKeyboardChangedInformation * _backupState;
    <_UIKBArbiterClientKeyboardChangeDelegate> * _changeInfoDelegate;
    NSXPCConnection * _connection;
    _UIKeyboardChangedInformation * _currentClientState;
    bool  _currentInputDestination;
    _UIKeyboardUIInformation * _currentUIState;
    bool  _deactivatedByControlCenter;
    bool  _deactivatedBySystemGesture;
    bool  _didSignalKeyboardChangedForCurrentKeyboard;
    bool  _disableBecomeFirstResponder;
    bool  _enqueuedWillEnterForegroundActions;
    _UIRemoteKeyboardsEventObserver * _eventObserver;
    bool  _expectedSuppression;
    bool  _expectingInitialState;
    int  _externalSuppression;
    bool  _handlingKeyboardTransition;
    bool  _handlingRemoteEvent;
    double  _heightForRemoteIAVPlaceholderIfNecessary;
    unsigned long long  _hostedCount;
    int  _ignoreLayoutSubviews;
    UIInputWindowController * _inputWindowRootViewController;
    <_UIKeyboardUIStateDelegate> * _kbUIStateDelegate;
    UIView * _keyboardSnapshot;
    long long  _keyboardSource;
    bool  _keyboardUIHost;
    long long  _lastEventSource;
    int  _recursionCheck;
    FBSScene * _requiredScene;
    bool  _shouldFence;
    bool  _snapshotting;
    bool  _updatingHeight;
    NSHashTable * _windowControllers;
    bool  _windowEnabled;
}

@property bool avoidDisableKeyboard;
@property (nonatomic, retain) _UIKeyboardChangedInformation *backupState;
@property (nonatomic) <_UIKBArbiterClientKeyboardChangeDelegate> *changeInfoDelegate;
@property (nonatomic, retain) NSXPCConnection *connection;
@property (nonatomic, retain) _UIKeyboardChangedInformation *currentClientState;
@property (nonatomic) bool currentInputDestination;
@property (nonatomic, retain) _UIKeyboardUIInformation *currentUIState;
@property (nonatomic) bool deactivatedByControlCenter;
@property (nonatomic) bool deactivatedBySystemGesture;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool didSignalKeyboardChangedForCurrentKeyboard;
@property (nonatomic) bool disableBecomeFirstResponder;
@property (nonatomic) bool enqueuedWillEnterForegroundActions;
@property (nonatomic, retain) _UIRemoteKeyboardsEventObserver *eventObserver;
@property (nonatomic) bool expectedSuppression;
@property bool expectingInitialState;
@property (nonatomic) bool handlingKeyboardTransition;
@property (nonatomic) bool handlingRemoteEvent;
@property (readonly) unsigned long long hash;
@property (nonatomic) double heightForRemoteIAVPlaceholderIfNecessary;
@property (nonatomic) unsigned long long hostedCount;
@property (nonatomic, retain) UIInputWindowController *inputWindowRootViewController;
@property (nonatomic) <_UIKeyboardUIStateDelegate> *kbUIStateDelegate;
@property (readonly) bool keyboardActive;
@property (nonatomic, retain) UIView *keyboardSnapshot;
@property (nonatomic) long long keyboardSource;
@property (nonatomic) bool keyboardUIHost;
@property (readonly) bool keyboardVisible;
@property (nonatomic) long long lastEventSource;
@property (readonly) bool remoteKeyboardUndocked;
@property (nonatomic, retain) FBSScene *requiredScene;
@property (nonatomic) bool shouldFence;
@property (nonatomic) bool snapshotting;
@property (readonly) Class superclass;
@property bool updatingHeight;
@property (nonatomic) bool windowEnabled;

+ (id)automaticSharedArbiterClient;
+ (bool)enabled;
+ (id)keyboardClientFBSSceneIdentityStringOrIdentifierFromScene:(id)arg1;
+ (id)mainBundleIdentifier;
+ (id)serviceName;

- (void).cxx_destruct;
- (bool)_didHandleKeyboardClientChange:(id)arg1 shouldConsiderSnapshottingKeyboard:(bool)arg2 isLocalEvent:(bool)arg3;
- (void)_handleKeyboardChanged:(id)arg1 isLocal:(bool)arg2 onComplete:(id /* block */)arg3;
- (void)_layoutKeyboardViews:(id)arg1;
- (void)_performOnDistributedControllersExceptSelf:(id /* block */)arg1;
- (void)_postInputSourceDidChangeNotificationForResponder:(id)arg1;
- (void)_preserveInputViewsForClientChange:(bool)arg1 clientInfo:(id)arg2 snapshotIfNecessary:(bool)arg3;
- (void)_updateEventSource:(long long)arg1 options:(unsigned long long)arg2;
- (void)_updateEventSource:(long long)arg1 options:(unsigned long long)arg2 responder:(id)arg3;
- (void)addWindowHostingPID:(int)arg1 callerID:(id)arg2;
- (bool)allowedToShowKeyboard;
- (void)applicationResume:(id)arg1;
- (id)arbiterConnection;
- (id)arbiterProxy;
- (void)assertionActivationStateChangedToState:(bool)arg1 forType:(unsigned long long)arg2;
- (bool)assertionActivationStateForType:(unsigned long long)arg1;
- (bool)avoidDisableKeyboard;
- (id)backupState;
- (id)changeInfoDelegate;
- (void)checkConnection;
- (void)checkState;
- (void)cleanSuppression;
- (void)completeTransition:(id)arg1 withInfo:(id)arg2;
- (void)configureArbiterCommunication:(id)arg1;
- (id)connection;
- (void)controllerDidLayoutSubviews:(id)arg1;
- (id)currentClientState;
- (id)currentHostedPIDs;
- (bool)currentInputDestination;
- (id)currentUIState;
- (bool)deactivatedByControlCenter;
- (bool)deactivatedBySystemGesture;
- (void)dealloc;
- (void)didFailArbiterConnection;
- (bool)didSignalKeyboardChangedForCurrentKeyboard;
- (void)didSuspend:(id)arg1;
- (bool)disableBecomeFirstResponder;
- (bool)enqueuedWillEnterForegroundActions;
- (id)eventObserver;
- (id)existingInputWindowRootViewController;
- (bool)expectedSuppression;
- (bool)expectingInitialState;
- (void)finishWithHostedWindow;
- (bool)handlingKeyboardTransition;
- (bool)handlingRemoteEvent;
- (bool)hasAnyHostedViews;
- (bool)hasWindowHostingCallerID:(id)arg1;
- (bool)hasWindowHostingPID:(int)arg1;
- (double)heightForRemoteIAVPlaceholderIfNecessary;
- (unsigned long long)hostedCount;
- (void)ignoreLayoutNotifications:(id /* block */)arg1;
- (id)init;
- (id)initWithShouldConnect:(bool)arg1;
- (id)inputWindowRootViewController;
- (bool)isHostedInAnotherProcess;
- (bool)isOnScreenRotating;
- (bool)isSpotlight:(id)arg1;
- (id)kbUIStateDelegate;
- (bool)keyboardActive;
- (void)keyboardChangedCompleted;
- (bool)keyboardClientDidChange:(id)arg1;
- (id)keyboardSnapshot;
- (long long)keyboardSource;
- (bool)keyboardUIHost;
- (bool)keyboardVisible;
- (long long)lastEventSource;
- (unsigned long long)localSceneCount;
- (void)peekApplicationEvent:(id)arg1;
- (void)performOnControllers:(id /* block */)arg1;
- (void)performOnDistributedControllers:(id /* block */)arg1;
- (void)performOnExistingControllers:(id /* block */)arg1;
- (void)performOnLocalDistributedControllers:(id /* block */)arg1;
- (id)prepareForHostedWindowWithScene:(id)arg1;
- (void)queue_failedConnection:(id)arg1;
- (void)queue_getDebugInfoWithCompletion:(id /* block */)arg1;
- (void)queue_keyboardChanged:(id)arg1 onComplete:(id /* block */)arg2;
- (void)queue_keyboardChangedWithCompletion:(id /* block */)arg1;
- (void)queue_keyboardIAVChanged:(double)arg1 onComplete:(id /* block */)arg2;
- (void)queue_keyboardSuppressed:(bool)arg1 withCompletion:(id /* block */)arg2;
- (void)queue_keyboardTransition:(id)arg1 event:(unsigned long long)arg2 withInfo:(id)arg3 onComplete:(id /* block */)arg4;
- (void)queue_keyboardUIDidChange:(id)arg1 onComplete:(id /* block */)arg2;
- (void)queue_sceneBecameFocused:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)queue_setLastEventSource:(long long)arg1 withCompletion:(id /* block */)arg2;
- (void)registerController:(id)arg1;
- (void)reloadForSnapshotting;
- (bool)remoteKeyboardUndocked;
- (bool)remoteKeyboardUndocked:(bool)arg1;
- (void)removeWindowHostingPID:(int)arg1 callerID:(id)arg2;
- (id)requiredScene;
- (void)resetSnapshotWithWindowCheck:(bool)arg1;
- (void)resignFirstResponderIfNeeded;
- (void)restorePreservedInputViewsIfNecessary;
- (void)sceneUpdated;
- (void)setAvoidDisableKeyboard:(bool)arg1;
- (void)setBackupState:(id)arg1;
- (void)setChangeInfoDelegate:(id)arg1;
- (void)setConnection:(id)arg1;
- (void)setCurrentClientState:(id)arg1;
- (void)setCurrentInputDestination:(bool)arg1;
- (void)setCurrentUIState:(id)arg1;
- (void)setDeactivatedByControlCenter:(bool)arg1;
- (void)setDeactivatedBySystemGesture:(bool)arg1;
- (void)setDidSignalKeyboardChangedForCurrentKeyboard:(bool)arg1;
- (void)setDisableBecomeFirstResponder:(bool)arg1;
- (void)setDisableBecomeFirstResponder:(bool)arg1 forSuppressionAssertion:(bool)arg2;
- (void)setDisableBecomeFirstResponder:(bool)arg1 forSuppressionAssertion:(bool)arg2 updatePlacement:(bool)arg3;
- (void)setEnqueuedWillEnterForegroundActions:(bool)arg1;
- (void)setEventObserver:(id)arg1;
- (void)setExpectedSuppression:(bool)arg1;
- (void)setExpectingInitialState:(bool)arg1;
- (void)setHandlingKeyboardTransition:(bool)arg1;
- (void)setHandlingRemoteEvent:(bool)arg1;
- (void)setHeightForRemoteIAVPlaceholderIfNecessary:(double)arg1;
- (void)setHostedCount:(unsigned long long)arg1;
- (void)setInputWindowRootViewController:(id)arg1;
- (void)setKbUIStateDelegate:(id)arg1;
- (void)setKeyboardSnapshot:(id)arg1;
- (void)setKeyboardSource:(long long)arg1;
- (void)setKeyboardUIHost:(bool)arg1;
- (void)setLastEventSource:(long long)arg1;
- (void)setPlacement:(id)arg1 quietly:(bool)arg2 animated:(bool)arg3 generateSplitNotification:(bool)arg4;
- (void)setRequiredScene:(id)arg1;
- (void)setShouldFence:(bool)arg1;
- (void)setSnapshotting:(bool)arg1;
- (void)setSuppressingKeyboard:(bool)arg1 forScene:(id)arg2;
- (void)setUpdatingHeight:(bool)arg1;
- (void)setWindowEnabled:(bool)arg1;
- (bool)shouldAllowInputViewsRestoredForId:(id)arg1;
- (bool)shouldFence;
- (bool)shouldSnapshot;
- (void)signalToProxyKeyboardChanged:(id)arg1 onCompletion:(id /* block */)arg2;
- (void)snapsShotKeyboard;
- (bool)snapshotting;
- (void)startConnection;
- (void)startConnectionWithCompletion:(id /* block */)arg1;
- (void)startTransition:(id)arg1 withInfo:(id)arg2;
- (void)stopConnection;
- (void)syncKeyboardUIChangeInfo:(id)arg1;
- (void)unregisterController:(id)arg1;
- (void)updateEventSource:(long long)arg1 options:(unsigned long long)arg2;
- (void)updateEventSource:(long long)arg1 options:(unsigned long long)arg2 responder:(id)arg3;
- (void)updateTransition:(id)arg1 withInfo:(id)arg2;
- (bool)updatingHeight;
- (id)vendKeyboardSuppressionAssertionForReason:(id)arg1;
- (id)vendKeyboardSuppressionAssertionForReason:(id)arg1 type:(unsigned long long)arg2;
- (void)verifyPlacement;
- (void)willResume:(id)arg1;
- (bool)windowEnabled;

@end
