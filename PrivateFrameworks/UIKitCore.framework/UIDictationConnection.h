
@interface UIDictationConnection : NSObject <AFDictationDelegate> {
    NSObject<OS_dispatch_queue> * _analyticsQueue;
    unsigned int  _charAfterInsertionPointOnDictationStart;
    unsigned int  _charBeforeInsertionPointOnDictationStart;
    AFDictationConnection * _connection;
    <UIDictationConnectionDelegate> * _delegate;
    AFDictationOptions * _dictationOptions;
    bool  _ignoreSpeechRecognitionResults;
    NSMutableDictionary * _lastReceivedPartials;
    NSString * _lastUsedDetectedLanguage;
    NSString * _lastUsedPrimaryLanguage;
    NSMutableArray * _lastUsedTopLanguages;
    bool  _lowConfidenceAboutLanguageDetection;
    bool  _offlineOnly;
    bool  _receivedMultilingualResultsCommand;
    <UIDictationConnectionTokenFilterProtocol> * _tokenFilter;
}

@property (nonatomic, retain) NSObject<OS_dispatch_queue> *analyticsQueue;
@property (nonatomic) unsigned int charAfterInsertionPointOnDictationStart;
@property (nonatomic) unsigned int charBeforeInsertionPointOnDictationStart;
@property (nonatomic, retain) AFDictationConnection *connection;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <UIDictationConnectionDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) AFDictationOptions *dictationOptions;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool ignoreSpeechRecognitionResults;
@property (nonatomic, retain) NSMutableDictionary *lastReceivedPartials;
@property (nonatomic, copy) NSString *lastUsedDetectedLanguage;
@property (nonatomic, copy) NSString *lastUsedPrimaryLanguage;
@property (nonatomic, retain) NSMutableArray *lastUsedTopLanguages;
@property (nonatomic) bool lowConfidenceAboutLanguageDetection;
@property (nonatomic) bool offlineOnly;
@property (nonatomic) bool receivedMultilingualResultsCommand;
@property (readonly) Class superclass;
@property (nonatomic) <UIDictationConnectionTokenFilterProtocol> *tokenFilter;

+ (id)_log;
+ (void)_updateFromGlobalOptions:(id)arg1;
+ (void)afDelegate:(id)arg1 didReceiveSearchResults:(id)arg2 recognizedText:(id)arg3 stable:(bool)arg4 final:(bool)arg5;
+ (id)analytics;
+ (void)cacheSupportedDictationLanguages;
+ (bool)dictationIsSupportedForLanguageCode:(id)arg1 error:(id*)arg2;
+ (bool)dictationRestricted;
+ (bool)hasSpeechRecognitionPauseAckPhrases:(id)arg1;
+ (id)interpretationFromSpeechTokens:(id)arg1 startIndex:(unsigned long long)arg2 filterBlock:(id /* block */)arg3;
+ (bool)isDictationAvailable;

- (void).cxx_destruct;
- (id)_createConnectionOptions;
- (id)_dictationOptions:(id)arg1;
- (id)_initializeWithOptions:(id)arg1;
- (id)_speechOptions:(id)arg1;
- (void)_startWithOptions:(id)arg1;
- (id)analyticsQueue;
- (float)averagePower;
- (void)beginAvailabilityMonitoring;
- (void)cancelAvailabilityMonitoring;
- (void)cancelSpeech;
- (unsigned int)charAfterInsertionPointOnDictationStart;
- (unsigned int)charBeforeInsertionPointOnDictationStart;
- (id)connection;
- (id)delegate;
- (void)dictationConnection:(id)arg1 didBeginLocalRecognitionWithModelInfo:(id)arg2;
- (void)dictationConnection:(id)arg1 didDetectLanguage:(id)arg2 confidenceScores:(id)arg3 isConfident:(bool)arg4;
- (void)dictationConnection:(id)arg1 didReceiveSearchResults:(id)arg2 recognizedText:(id)arg3 stable:(bool)arg4 final:(bool)arg5;
- (void)dictationConnection:(id)arg1 didRecognizeFinalResultCandidatePackage:(id)arg2;
- (void)dictationConnection:(id)arg1 didRecognizeMultilingualSpeech:(id)arg2;
- (void)dictationConnection:(id)arg1 didRecognizePartialPackage:(id)arg2 nluResult:(id)arg3 languageModel:(id)arg4;
- (void)dictationConnection:(id)arg1 didRecognizePartialResult:(id)arg2;
- (void)dictationConnection:(id)arg1 didRecognizePhrases:(id)arg2 languageModel:(id)arg3 correctionIdentifier:(id)arg4;
- (void)dictationConnection:(id)arg1 didRecognizeTokens:(id)arg2 languageModel:(id)arg3;
- (void)dictationConnection:(id)arg1 didRecognizeVoiceCommandCandidatePackage:(id)arg2 nluResult:(id)arg3;
- (void)dictationConnection:(id)arg1 languageDetectorFailedWithError:(id)arg2;
- (void)dictationConnection:(id)arg1 speechRecognitionDidFail:(id)arg2;
- (void)dictationConnection:(id)arg1 speechRecordingDidBeginWithOptions:(id)arg2;
- (void)dictationConnection:(id)arg1 speechRecordingDidFail:(id)arg2;
- (void)dictationConnectionDidPauseRecognition:(id)arg1;
- (void)dictationConnectionSpeechRecognitionDidSucceed:(id)arg1;
- (void)dictationConnectionSpeechRecordingDidBegin:(id)arg1;
- (void)dictationConnectionSpeechRecordingDidCancel:(id)arg1;
- (void)dictationConnectionSpeechRecordingDidEnd:(id)arg1;
- (void)dictationConnectionSpeechRecordingWillBegin:(id)arg1;
- (void)dictationConnnectionDidChangeAvailability:(id)arg1;
- (bool)dictationIsAvailableForLanguage:(id)arg1;
- (id)dictationOptions;
- (id)dictationSerializedResultWithPhrases:(id)arg1 languageModel:(id)arg2;
- (void)endSession;
- (bool)ignoreSpeechRecognitionResults;
- (bool)isSecureInput;
- (id)languageDetectionUserContext;
- (id)lastReceivedPartials;
- (id)lastUsedDetectedLanguage;
- (id)lastUsedPrimaryLanguage;
- (id)lastUsedTopLanguages;
- (void)logDidAcceptDictationResult:(id)arg1 reason:(id)arg2 result:(id)arg3 correctionIdentifier:(id)arg4;
- (void)logDidAcceptReplacement:(id)arg1 replacementLanguageCode:(id)arg2 originalText:(id)arg3 correctionIdentifier:(id)arg4 interactionIdentifier:(id)arg5;
- (void)logDidSelectAlternative:(id)arg1 correctionIdentifier:(id)arg2 interactionIdentifier:(id)arg3;
- (void)logDidShowAlternatives:(id)arg1 correctionIdentifier:(id)arg2 interactionIdentifier:(id)arg3;
- (bool)lowConfidenceAboutLanguageDetection;
- (bool)offlineOnly;
- (void)pauseSpeechRecognition;
- (void)preheat;
- (bool)receivedMultilingualResultsCommand;
- (void)requestOfflineDictationSupportForLanguage:(id)arg1 completion:(id /* block */)arg2;
- (void)restartDictation;
- (void)resumeSpeechRecognitionWithPrefixText:(id)arg1 postfixText:(id)arg2 selectedText:(id)arg3;
- (void)sendSpeechCorrection:(id)arg1 forIdentifier:(id)arg2;
- (void)sendSpeechCorrection:(id)arg1 interactionIdentifier:(id)arg2;
- (void)setAnalyticsQueue:(id)arg1;
- (void)setCharAfterInsertionPointOnDictationStart:(unsigned int)arg1;
- (void)setCharBeforeInsertionPointOnDictationStart:(unsigned int)arg1;
- (void)setConnection:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDictationOptions:(id)arg1;
- (void)setIgnoreSpeechRecognitionResults:(bool)arg1;
- (void)setLastReceivedPartials:(id)arg1;
- (void)setLastUsedDetectedLanguage:(id)arg1;
- (void)setLastUsedPrimaryLanguage:(id)arg1;
- (void)setLastUsedTopLanguages:(id)arg1;
- (void)setLowConfidenceAboutLanguageDetection:(bool)arg1;
- (void)setOfflineOnly:(bool)arg1;
- (void)setReceivedMultilingualResultsCommand:(bool)arg1;
- (void)setTokenFilter:(id)arg1;
- (long long)speechEventTypeForDictationActivationType:(unsigned long long)arg1;
- (void)start;
- (void)startForFileAtURL:(id)arg1 forLanguage:(id)arg2;
- (void)stopSpeech:(id)arg1 activationType:(unsigned long long)arg2 result:(id)arg3 suppressAlert:(bool)arg4;
- (void)suppressLowStorageNotificationForLanguage:(id)arg1 suppress:(bool)arg2;
- (void)synthesizeDidRecognizePhrases:(id)arg1 languageModel:(id)arg2 correctionIdentifier:(id)arg3;
- (void)synthesizeDidRecognizeTokens:(id)arg1 languageModel:(id)arg2;
- (id)tokenFilter;

@end
