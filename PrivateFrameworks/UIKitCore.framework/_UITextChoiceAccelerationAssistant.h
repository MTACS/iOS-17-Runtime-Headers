
@interface _UITextChoiceAccelerationAssistant : NSObject {
    TIKeyboardCandidate * _candidate;
    <_UITextChoicesAssistantDelegate> * _delegate;
    NSString * _documentTextToReplace;
    <_UIAssertion> * _grabberSuppressionAssertion;
    UITextInteractionAssistant * _interactionAssistant;
    bool  _keepPromptActive;
    UITextPosition * _lastAddedPosition;
    TIAutocorrectionList * _lastList;
    UITextRange * _lastRange;
    bool  _needsUpdate;
    _UITextChoiceAccelerationBubble * _prompt;
    NSTimer * _promptDisplayTimer;
    NSMutableDictionary * _savedLists;
    _UITextSelectionHighlightView * _selectionHighlightView;
    UIResponder<UITextInput> * _textInputResponder;
    NSMutableArray * _underlinedRanges;
    NSMutableDictionary * _underlinedWordData;
}

@property (nonatomic, readonly) TIKeyboardCandidate *candidate;
@property (nonatomic) <_UITextChoicesAssistantDelegate> *delegate;
@property (nonatomic, retain) NSString *documentTextToReplace;
@property (nonatomic) <_UIAssertion> *grabberSuppressionAssertion;
@property (nonatomic, readonly) UITextInteractionAssistant *interactionAssistant;
@property (nonatomic) bool keepPromptActive;
@property (nonatomic, retain) UITextPosition *lastAddedPosition;
@property (nonatomic, retain) TIAutocorrectionList *lastList;
@property (nonatomic, retain) UITextRange *lastRange;
@property (nonatomic) bool needsUpdate;
@property (nonatomic, retain) _UITextChoiceAccelerationBubble *prompt;
@property (nonatomic, retain) NSTimer *promptDisplayTimer;
@property (nonatomic, retain) NSMutableDictionary *savedLists;
@property (nonatomic, retain) _UITextSelectionHighlightView *selectionHighlightView;
@property (nonatomic, readonly) UIResponder<UITextInput> *textInputResponder;
@property (nonatomic, retain) NSMutableArray *underlinedRanges;
@property (nonatomic, retain) NSMutableDictionary *underlinedWordData;

- (void).cxx_destruct;
- (void)_addUnderlineView;
- (id)_document;
- (id)_existingUnderlineView;
- (id)_rangeOfText:(id)arg1 endingAtPosition:(id)arg2;
- (void)_removeUnderlinesRelativeToPosition:(id)arg1 compare:(long long)arg2;
- (id)_underlineView;
- (void)activateUnderlineViewIfNeeded;
- (void)addList:(id)arg1 forCandidate:(id)arg2;
- (void)addUnderlineForCandidate:(id)arg1 range:(id)arg2;
- (void)addUnderlinesForRects:(id)arg1 forCandidate:(id)arg2 range:(id)arg3;
- (void)adjustRangesAfterPosition:(id)arg1 byOffset:(long long)arg2;
- (id)alternateCorrectionsForList:(id)arg1;
- (id)anchorRangeForText:(id)arg1;
- (id)autocorrectionForList:(id)arg1;
- (void)cancelPromptDisplay;
- (id)candidate;
- (id)candidateForFinalString:(id)arg1;
- (void)clearUnderlineForPosition:(id)arg1;
- (void)clearUnderlinesIfNeededBeforePosition:(id)arg1;
- (void)clearUnderlinesInRange:(id)arg1 animated:(bool)arg2;
- (id)currentKeyboardSceneDelegate;
- (id)defaultUnderlineColor;
- (id)delegate;
- (bool)dismissIfPresented;
- (void)dismissWithoutSelection;
- (id)documentTextToReplace;
- (void)fullAutocorrectionForWord:(id)arg1 atPosition:(id)arg2 completionHandler:(id /* block */)arg3;
- (id)grabberSuppressionAssertion;
- (void)informAnalyticsOfCompletedCandidateReplacement;
- (void)informAnalyticsOfUpcomingCandidateReplacement;
- (id)init;
- (id)initWithInteractionAssistant:(id)arg1;
- (id)initWithTextInputResponder:(id)arg1;
- (id)interactionAssistant;
- (bool)keepPromptActive;
- (id)keyFromRange:(id)arg1;
- (id)lastAddedPosition;
- (id)lastList;
- (id)lastRange;
- (id)listForFinalString:(id)arg1;
- (bool)needsUpdate;
- (id)parentViewForPrompt;
- (bool)positionIsAtDocumentStart:(id)arg1;
- (void)presentIfNeededForRange:(id)arg1;
- (bool)presentTextChoicePromptForText:(id)arg1 delay:(double)arg2 autocorrectionRects:(id)arg3;
- (id)prompt;
- (id)promptDisplayTimer;
- (id)rangeForTextChoicesAtPosition:(id)arg1;
- (id)rangeOfAutocorrectionForString:(id)arg1 atPosition:(id)arg2 inDocument:(id)arg3;
- (void)refreshExistingUnderlines;
- (void)releaseSelectionGrabberAssertion;
- (void)removeActivePromptAndUnderline;
- (void)removeAllUnderlines;
- (void)removeUnderlinesAfterPosition:(id)arg1;
- (void)removeUnderlinesBeforePosition:(id)arg1;
- (void)removeWordForRange:(id)arg1;
- (void)removeWordForRange:(id)arg1 animated:(bool)arg2;
- (id)savedLists;
- (id)selectionHighlightView;
- (id)selectionRectsForRange:(id)arg1;
- (id)selectionViewManager;
- (void)setDelegate:(id)arg1;
- (void)setDocumentTextToReplace:(id)arg1;
- (void)setGrabberSuppressionAssertion:(id)arg1;
- (void)setKeepPromptActive:(bool)arg1;
- (void)setLastAddedPosition:(id)arg1;
- (void)setLastList:(id)arg1;
- (void)setLastRange:(id)arg1;
- (void)setNeedsUnderlineUpdate;
- (void)setNeedsUpdate:(bool)arg1;
- (void)setPrompt:(id)arg1;
- (void)setPromptDisplayTimer:(id)arg1;
- (void)setSavedLists:(id)arg1;
- (void)setSelectionHighlightView:(id)arg1;
- (void)setUnderlinedRanges:(id)arg1;
- (void)setUnderlinedWordData:(id)arg1;
- (void)shouldShowPromptForWebKitText:(id)arg1 atPosition:(id)arg2 completionHandler:(id /* block */)arg3;
- (bool)showChoicesForAutocorrectionCandidate:(id)arg1 range:(id)arg2;
- (bool)showChoicesForAutocorrectionCandidate:(id)arg1 range:(id)arg2 delay:(double)arg3;
- (bool)showChoicesForTextInRange:(id)arg1;
- (bool)showChoicesForTextInRange:(id)arg1 withReplacements:(id)arg2 delay:(double)arg3;
- (bool)showPromptForReplacementCandidate:(id)arg1;
- (bool)showPromptForReplacementCandidate:(id)arg1 delay:(double)arg2;
- (bool)showPromptForReplacementCandidate:(id)arg1 originalCandidate:(id)arg2 delay:(double)arg3;
- (bool)showingAutocorrectInlinePrompt;
- (bool)showingPrompt;
- (id)textHighlightColor;
- (id)textInputResponder;
- (id)textInputView;
- (void)trackUnderlineForWebKitCandidate:(id)arg1;
- (id)underlineRectForTextSelectionRect:(id)arg1 forCandidate:(id)arg2;
- (id)underlineRectFromDocumentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)underlineRectsForCandidate:(id)arg1 range:(id)arg2;
- (id)underlineRectsForInput:(id)arg1;
- (void)underlineTextInRange:(id)arg1 revertText:(id)arg2;
- (id)underlinedRanges;
- (id)underlinedWordData;
- (void)updateActivePromptForCandidate:(id)arg1 displayRects:(id)arg2 highlightOnly:(bool)arg3;
- (void)updateDocument;
- (void)updatePromptForReplacementCandidate:(id)arg1;
- (void)updateReplacements:(id)arg1 forCandidate:(id)arg2;
- (void)updateReplacementsForSavedCandidate:(id)arg1;
- (void)updateSelectedRects:(id)arg1 byTrimmingWhitespaceInRange:(id)arg2 inDocument:(id)arg3;
- (void)updateSelectionHighlights;
- (void)updateUnderlineGeometryIfNeeded;
- (id)updateUnderlineRects:(id)arg1 forRange:(id)arg2;
- (void)updateUnderlinesForAddedRange:(id)arg1;
- (void)updateUnderlinesIfNeededAfterPosition:(id)arg1;

@end
