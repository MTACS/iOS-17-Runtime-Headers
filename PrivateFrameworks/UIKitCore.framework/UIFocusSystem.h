
@interface UIFocusSystem : NSObject <_UIFocusEnvironmentInternal, _UIFocusEnvironmentPrivate> {
    <UIFocusEnvironment> * _appearingFocusEnvironment;
    <UIFocusEnvironment> * _deepestPreferredFocusEnvironment;
    <UIFocusItem> * _deferredFocusUpdateTarget;
    <_UIFocusSystemDelegate> * _delegate;
    <UIFocusEnvironment> * _disappearingFocusEnvironment;
    bool  _enabled;
    _UIFocusEventDelivery * _eventDelivery;
    struct { 
        unsigned int hasReceivedTeardownNotification : 1; 
        unsigned int shouldIgnoreFocusUpdateIfNeeded : 1; 
        unsigned int isPendingFocusRestoration : 1; 
        unsigned int isPostponingUpdates : 1; 
        unsigned int hasSeenFocusedItem : 1; 
        unsigned int wantsModernRing : 1; 
        unsigned int delegateRespondsToPreferredFocusEnvironments : 1; 
        unsigned int delegateRespondsToPrefersDeferralForFocusUpdateInContext : 1; 
        unsigned int delegateRespondsToShouldRestoreFocusInContext : 1; 
        unsigned int delegateRespondsToDidFinishUpdatingFocusInContext : 1; 
        unsigned int delegateRespondsToFocusMapContainer : 1; 
        unsigned int delegateRespondsToFocusItemContainer : 1; 
    }  _flags;
    _UIFocusAnimationCoordinatorManager * _focusAnimationCoordinatorManager;
    _UIFocusCastingController * _focusCastingController;
    _UIFocusEffectManager * _focusEffectManager;
    _UIFocusGroupHistory * _focusGroupHistory;
    <_UIFocusHapticFeedbackGenerator> * _focusHapticFeedbackGenerator;
    _UIFocusItemFrameReporter * _focusItemFrameReporter;
    _UIFocusLinearMovementCache * _focusMovementCache;
    _UIFocusSoundGenerator * _focusSoundGenerator;
    <UIFocusItem> * _focusedItem;
    NSTimer * _hasSeenFocusedItemDidExpireTimer;
    NSNumber * _overrideFocusDeferralBehavior;
    UIResponder * _overridePreferredFirstResponder;
    UIFocusMovementAction * _pendingFocusMovementAction;
    _UIFocusUpdateRequest * _pendingFocusUpdateRequest;
    <UIFocusItem> * _previousFocusedItem;
    _UIFocusSystemSceneComponent * _sceneComponent;
    _UIFocusUpdateThrottle * _updateThrottle;
    bool  _waitingForFocusMovementAction;
}

@property (nonatomic, readonly) <UIFocusEnvironment> *_deepestPreferredFocusEnvironment;
@property (nonatomic, readonly) _UIFocusEventDelivery *_eventDelivery;
@property (nonatomic) bool areChildrenFocused;
@property (getter=_currentFocusAnimationCoordinator, nonatomic, readonly) UIFocusAnimationCoordinator *currentFocusAnimationCoordinator;
@property (readonly, copy) NSString *debugDescription;
@property (getter=_delegate, setter=_setDelegate:, nonatomic) <_UIFocusSystemDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (getter=_disappearingFocusEnvironment, nonatomic, readonly) <UIFocusEnvironment> *disappearingFocusEnvironment;
@property (getter=_isEligibleForFocusInteraction, nonatomic, readonly) bool eligibleForFocusInteraction;
@property (getter=_isEligibleForFocusOcclusion, nonatomic, readonly) bool eligibleForFocusOcclusion;
@property (getter=_isEnabled, setter=_setEnabled:, nonatomic) bool enabled;
@property (getter=_focusAnimationCoordinatorManager, setter=_setFocusAnimationCoordinatorManager:, nonatomic, retain) _UIFocusAnimationCoordinatorManager *focusAnimationCoordinatorManager;
@property (getter=_focusBehavior, nonatomic, readonly) <_UIFocusBehavior> *focusBehavior;
@property (getter=_focusCastingController, setter=_setFocusCastingController:, nonatomic, retain) _UIFocusCastingController *focusCastingController;
@property (getter=_focusEffectManager, nonatomic, readonly) _UIFocusEffectManager *focusEffectManager;
@property (getter=_focusGroupHistory, nonatomic, readonly) _UIFocusGroupHistory *focusGroupHistory;
@property (nonatomic, readonly, copy) NSString *focusGroupIdentifier;
@property (getter=_focusHapticFeedbackGenerator, setter=_setFocusHapticFeedbackGenerator:, nonatomic, retain) <_UIFocusHapticFeedbackGenerator> *focusHapticFeedbackGenerator;
@property (nonatomic, readonly) <UIFocusItemContainer> *focusItemContainer;
@property (getter=_focusItemFrameReporter, setter=_setFocusItemFrameReporter:, nonatomic, retain) _UIFocusItemFrameReporter *focusItemFrameReporter;
@property (getter=_focusMapContainer, nonatomic, readonly) <_UIFocusRegionContainer> *focusMapContainer;
@property (getter=_focusMovementCache, setter=_setFocusMovementCache:, nonatomic, retain) _UIFocusLinearMovementCache *focusMovementCache;
@property (getter=_focusSoundGenerator, setter=_setFocusSoundGenerator:, nonatomic, retain) _UIFocusSoundGenerator *focusSoundGenerator;
@property (nonatomic, readonly) <UIFocusItem> *focusedItem;
@property (getter=_focusedView, nonatomic, readonly) UIView *focusedView;
@property (readonly) unsigned long long hash;
@property (getter=_hostFocusSystem, nonatomic, readonly) UIFocusSystem *hostFocusSystem;
@property (getter=_linearFocusMovementSequences, nonatomic, readonly, copy) NSArray *linearFocusMovementSequences;
@property (getter=_overrideFocusDeferralBehavior, setter=_setOverrideFocusDeferralBehavior:, nonatomic, retain) NSNumber *overrideFocusDeferralBehavior;
@property (nonatomic, readonly) <UIFocusEnvironment> *parentFocusEnvironment;
@property (nonatomic, retain) UIFocusMovementAction *pendingFocusMovementAction;
@property (getter=_preferredFirstResponder, nonatomic, readonly) UIResponder *preferredFirstResponder;
@property (getter=_preferredFirstResponderFocusSystem, nonatomic, readonly) UIFocusSystem *preferredFirstResponderFocusSystem;
@property (nonatomic, readonly, copy) NSArray *preferredFocusEnvironments;
@property (getter=_preferredFocusMovementStyle, nonatomic, readonly) long long preferredFocusMovementStyle;
@property (nonatomic, readonly) UIView *preferredFocusedView;
@property (getter=_previousFocusedItem, nonatomic, readonly) <UIFocusItem> *previousFocusedItem;
@property (readonly) Class superclass;
@property (nonatomic, readonly) _UIFocusUpdateThrottle *updateThrottle;
@property (nonatomic) bool waitingForFocusMovementAction;

+ (id)_allFocusSystems;
+ (id)_focusSystemForEnvironment:(id)arg1;
+ (bool)environment:(id)arg1 containsEnvironment:(id)arg2;
+ (id)focusSystemForEnvironment:(id)arg1;
+ (void)registerURL:(id)arg1 forSoundIdentifier:(id)arg2;

- (void).cxx_destruct;
- (void)_cancelPendingFocusRestoration;
- (void)_clearDeferredFocusUpdateTarget;
- (id)_configureFocusDeferralIfNecessaryForContext:(id)arg1 report:(id)arg2;
- (id)_contextForUpdateToEnvironment:(id)arg1 withAnimationCoordinator:(id)arg2;
- (id)_contextForUpdateToEnvironment:(id)arg1 withAnimationCoordinator:(id)arg2 allowsOverridingPreferedFocusEnvironments:(bool)arg3 allowsDeferral:(bool)arg4;
- (id)_currentFocusAnimationCoordinator;
- (bool)_debug_isEnvironmentEligibleForFocusUpdate:(id)arg1 debugReport:(id)arg2;
- (id)_deepestPreferredFocusEnvironment;
- (id)_delegate;
- (void)_didFinishUpdatingFocusInContext:(id)arg1;
- (id)_disappearingFocusEnvironment;
- (void)_dropFocusAndStartDeferring:(bool)arg1 suppressUpdate:(bool)arg2;
- (long long)_effectiveFocusDeferralBehavior;
- (void)_enableWithoutFocusRestoration;
- (id)_eventDelivery;
- (void)_firstResponderDidUpdateFromResponder:(id)arg1;
- (id)_focusAnimationCoordinatorManager;
- (id)_focusBehavior;
- (void)_focusBehaviorDidChange:(id)arg1;
- (id)_focusCastingController;
- (id)_focusEffectManager;
- (void)_focusEnvironmentDidAppear:(id)arg1;
- (void)_focusEnvironmentDidBecomeVisible:(id)arg1;
- (void)_focusEnvironmentWillBecomeInvisible:(id)arg1;
- (void)_focusEnvironmentWillDisappear:(id)arg1;
- (id)_focusGroupHistory;
- (id)_focusHapticFeedbackGenerator;
- (id)_focusItemForValidation;
- (id)_focusItemFrameReporter;
- (id)_focusMapContainer;
- (id)_focusMovementCache;
- (id)_focusSoundGenerator;
- (bool)_focusSystemIsValid;
- (id)_focusedItemOrDeferralTarget;
- (id)_focusedView;
- (id)_focusedWindow;
- (void)_handleFocusMovementAction:(id)arg1;
- (void)_hasSeenFocusedItemDidExpire;
- (bool)_hasValidItemForCurrentDeferralState;
- (id)_hostFocusSystem;
- (id)_init;
- (id)_initWithFocusEnabled:(bool)arg1 sceneComponent:(id)arg2;
- (bool)_isEligibleForFocusInteraction;
- (bool)_isEligibleForFocusOcclusion;
- (bool)_isEnabled;
- (bool)_isEnvironmentEligibleForFocusUpdate:(id)arg1 fallbackToEnvironment:(id*)arg2 debugReport:(id)arg3;
- (id)_overrideFocusDeferralBehavior;
- (bool)_performDeferredFocusUpdateIfAvailable;
- (void)_performWithoutFocusUpdates:(id /* block */)arg1;
- (bool)_postsFocusUpdateNotifications;
- (id)_preferredFirstResponder;
- (id)_preferredFirstResponderFocusSystem;
- (id)_preferredFirstResponderFocusSystemForFocusedItem:(id)arg1;
- (bool)_prefersDeferralForFocusUpdateInContext:(id)arg1;
- (bool)_prefersFocusContainment;
- (void)_prepareForTeardown;
- (id)_previousFocusedItem;
- (void)_reevaluateLockedEnvironments;
- (void)_requestFocusEffectUpdateToEnvironment:(id)arg1;
- (void)_requestFocusUpdate:(id)arg1;
- (bool)_requiresFocusedItemToHaveContainingView;
- (void)_resetFocusDeferral;
- (bool)_safari_moveFocusToNextGroup;
- (bool)_safari_moveFocusToPreviousGroup;
- (id)_sceneComponent;
- (void)_sendDidUpdateFocusNotificationsInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (void)_sendNotificationsForFocusUpdateInContext:(id)arg1 withAnimationCoordinator:(id)arg2 usingBlock:(id /* block */)arg3;
- (void)_sendWillUpdateFocusNotificationsInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (void)_setDeferredFocusUpdateTarget:(id)arg1;
- (void)_setDelegate:(id)arg1;
- (void)_setEnabled:(bool)arg1;
- (void)_setEnabled:(bool)arg1 withAnimationCoordinator:(id)arg2;
- (void)_setFocusAnimationCoordinatorManager:(id)arg1;
- (void)_setFocusCastingController:(id)arg1;
- (void)_setFocusHapticFeedbackGenerator:(id)arg1;
- (void)_setFocusItemFrameReporter:(id)arg1;
- (void)_setFocusMovementCache:(id)arg1;
- (void)_setFocusSoundGenerator:(id)arg1;
- (void)_setNeedsFocusRestoration;
- (void)_setOverrideFocusDeferralBehavior:(id)arg1;
- (bool)_shouldRestoreFocusInContext:(id)arg1;
- (id)_simulatedNonDeferredProgrammaticFocusUpdateToEnvironment:(id)arg1;
- (void)_startDeferringFocusIfSupported;
- (id)_syncResponderWithFocusUpdateContext:(id)arg1;
- (void)_tickHasSeenFocusedItemTimer:(bool)arg1;
- (id)_topEnvironment;
- (void)_uiktest_disableFocusDeferral;
- (void)_uiktest_disableThrottle;
- (void)_uiktest_setPreviousFocusedItem:(id)arg1;
- (bool)_uiktest_updateFocusToItem:(id)arg1;
- (void)_updateFocusEffectForItem:(id)arg1;
- (bool)_updateFocusImmediatelyToEnvironment:(id)arg1;
- (bool)_updateFocusImmediatelyToEnvironment:(id)arg1 startDeferringOnLostFocus:(bool)arg2 suppressLostFocusUpdate:(bool)arg3;
- (bool)_updateFocusImmediatelyWithContext:(id)arg1;
- (void)_updateFocusUpdateThrottle;
- (bool)_updateFocusWithContext:(id)arg1 report:(id)arg2;
- (void)_updateWantsModernRing;
- (void)_validateFocusedItemForFirstResponder:(id)arg1;
- (id)_validatedAppearingFocusEnvironmentRequest;
- (id)_validatedPendingFocusUpdateRequest;
- (id)description;
- (void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (id)focusItemContainer;
- (id)focusedItem;
- (id)init;
- (void)invalidateFocusItemContainer:(id)arg1;
- (id)parentFocusEnvironment;
- (id)pendingFocusMovementAction;
- (id)preferredFocusEnvironments;
- (void)requestFocusUpdateToEnvironment:(id)arg1;
- (void)setNeedsFocusUpdate;
- (void)setPendingFocusMovementAction:(id)arg1;
- (void)setWaitingForFocusMovementAction:(bool)arg1;
- (bool)shouldUpdateFocusInContext:(id)arg1;
- (void)updateFocusIfNeeded;
- (id)updateThrottle;
- (bool)waitingForFocusMovementAction;

@end
