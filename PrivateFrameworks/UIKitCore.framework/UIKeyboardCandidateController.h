
@interface UIKeyboardCandidateController : NSObject <TUICandidateViewDelegate, UIGestureRecognizerDelegate, UIKeyboardCandidateList> {
    long long  _activeCandidateViewType;
    NSMutableArray * _activeViews;
    double  _additionalExtendedBarBackdropOffset;
    bool  _adjustForLeftHandBias;
    UIViewPropertyAnimator * _animator;
    TUICandidateView * _bar;
    UIKeyboardCandidateViewConfiguration * _barConfiguration;
    UIKeyboardCandidateViewState * _barState;
    <UIKeyboardCandidateListDelegate> * _candidateListDelegate;
    TIKeyboardCandidateResultSet * _candidateResultSet;
    TIKeyboardCandidate * _currentCandidate;
    bool  _darkKeyboard;
    bool  _darkKeyboardChanged;
    <UIKeyboardCandidateControllerDelegate> * _delegate;
    UIKeyboardCandidateViewState * _extendedBarState;
    UIKeyboardCandidateViewState * _extendedInlineViewState;
    UIKeyboardCandidateViewState * _extendedKeyState;
    UIKeyboardCandidateViewState * _extendedScrolledBarState;
    UIKeyboardCandidateViewConfiguration * _inlineConfiguration;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _inlineRect;
    bool  _inlineRectIsVertical;
    NSString * _inlineText;
    TUICandidateView * _inlineView;
    UIKeyboardCandidateInlineFloatingView * _inlineViewContainer;
    UIKeyboardCandidateViewState * _inlineViewState;
    bool  _isExtended;
    TUICandidateView * _key;
    UIKeyboardCandidateViewConfiguration * _keyConfiguration;
    UIKeyboardCandidateViewState * _keyState;
    NSDictionary * _opacities;
    UIPanGestureRecognizer * _panGestureRecognizer;
    UIKBRenderConfig * _renderConfig;
    bool  _reuseArrowButtonToExpandAssistantBarItems;
    UIKBScreenTraits * _screenTraits;
    double  _singleSlottedCellMargin;
    double  _splitGap;
}

@property (nonatomic) long long activeCandidateViewType;
@property (nonatomic, readonly) NSArray *activeCandidateViews;
@property (nonatomic, retain) NSMutableArray *activeViews;
@property (nonatomic) double additionalExtendedBarBackdropOffset;
@property (nonatomic) bool adjustForLeftHandBias;
@property (nonatomic, retain) UIViewPropertyAnimator *animator;
@property (nonatomic, retain) TUICandidateView *bar;
@property (nonatomic, retain) UIKeyboardCandidateViewConfiguration *barConfiguration;
@property (nonatomic, readonly) bool barIsExtended;
@property (nonatomic, retain) UIKeyboardCandidateViewState *barState;
@property (nonatomic, readonly) UIView *candidateBar;
@property (nonatomic, readonly) UIView *candidateKey;
@property (nonatomic) <UIKeyboardCandidateListDelegate> *candidateListDelegate;
@property (nonatomic, retain) TIKeyboardCandidateResultSet *candidateResultSet;
@property (nonatomic, retain) TIKeyboardCandidate *currentCandidate;
@property (nonatomic) bool darkKeyboard;
@property (nonatomic) bool darkKeyboardChanged;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <UIKeyboardCandidateControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) UIKeyboardCandidateViewState *extendedBarState;
@property (nonatomic, retain) UIKeyboardCandidateViewState *extendedInlineViewState;
@property (nonatomic, retain) UIKeyboardCandidateViewState *extendedKeyState;
@property (nonatomic, retain) UIKeyboardCandidateViewState *extendedScrolledBarState;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) UIView *inlineCandidateView;
@property (nonatomic, retain) UIKeyboardCandidateViewConfiguration *inlineConfiguration;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } inlineRect;
@property (nonatomic) bool inlineRectIsVertical;
@property (nonatomic, copy) NSString *inlineText;
@property (nonatomic, retain) TUICandidateView *inlineView;
@property (nonatomic, retain) UIKeyboardCandidateInlineFloatingView *inlineViewContainer;
@property (nonatomic, readonly) bool inlineViewIsExtended;
@property (nonatomic, retain) UIKeyboardCandidateViewState *inlineViewState;
@property (nonatomic) bool isExtended;
@property (nonatomic, retain) TUICandidateView *key;
@property (nonatomic, retain) UIKeyboardCandidateViewConfiguration *keyConfiguration;
@property (nonatomic, retain) UIKeyboardCandidateViewState *keyState;
@property (nonatomic, retain) NSDictionary *opacities;
@property (nonatomic, retain) UIPanGestureRecognizer *panGestureRecognizer;
@property (nonatomic, retain) UIKBRenderConfig *renderConfig;
@property (nonatomic) bool reuseArrowButtonToExpandAssistantBarItems;
@property (nonatomic, retain) UIKBScreenTraits *screenTraits;
@property (nonatomic) double singleSlottedCellMargin;
@property (nonatomic) double splitGap;
@property (readonly) Class superclass;

+ (double)candidateViewAnimationDuration;
+ (id)sharedInstance;

- (void).cxx_destruct;
- (void)_setRenderConfig:(id)arg1;
- (void)acceptSelectedCandidate;
- (long long)activeCandidateViewType;
- (id)activeCandidateViews;
- (id)activeViews;
- (double)additionalExtendedBarBackdropOffset;
- (bool)adjustForLeftHandBias;
- (id)animator;
- (id)bar;
- (id)barConfiguration;
- (bool)barIsExtended;
- (id)barState;
- (void)candidateAcceptedAtIndex:(unsigned long long)arg1;
- (id)candidateAtIndex:(unsigned long long)arg1;
- (id)candidateBar;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })candidateBarEdgeInsetsForOrientation:(long long)arg1;
- (double)candidateBarHeight;
- (double)candidateBarHeightForOrientation:(long long)arg1;
- (double)candidateBarWidth;
- (id)candidateKey;
- (id)candidateListDelegate;
- (id)candidateResultSet;
- (void)candidateView:(id)arg1 didAcceptCandidate:(id)arg2 atIndexPath:(id)arg3 inGridType:(long long)arg4;
- (void)candidateView:(id)arg1 didAcceptCandidate:(id)arg2 atIndexPath:(id)arg3 inGridType:(long long)arg4 generateFeedback:(bool)arg5;
- (void)candidateViewDidTapArrowButton:(id)arg1;
- (void)candidateViewDidTapInlineText:(id)arg1;
- (void)candidateViewNeedsToExpand:(id)arg1;
- (void)candidateViewSelectionDidChange:(id)arg1 inGridType:(long long)arg2;
- (long long)candidateViewTypeForView:(id)arg1;
- (void)candidateViewWillBeginDragging:(id)arg1;
- (id)candidates;
- (void)candidatesDidChange;
- (void)clearCurrentCandidate;
- (void)collapse;
- (id)currentCandidate;
- (unsigned long long)currentIndex;
- (bool)darkKeyboard;
- (bool)darkKeyboardChanged;
- (void)dealloc;
- (id)delegate;
- (void)dimKeys:(id)arg1;
- (void)extendKeyboardBackdropHeight:(double)arg1;
- (id)extendedBarState;
- (id)extendedInlineViewState;
- (id)extendedKeyState;
- (id)extendedScrolledBarState;
- (id)firstNonEmptyActiveCandidateView;
- (bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (bool)handleNumberKey:(unsigned long long)arg1;
- (bool)handleTabKeyWithShift:(bool)arg1;
- (bool)hasCandidateInForwardDirection:(bool)arg1 granularity:(int)arg2;
- (bool)hasCandidates;
- (id)init;
- (id)inlineCandidateView;
- (id)inlineConfiguration;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })inlineRect;
- (bool)inlineRectIsVertical;
- (id)inlineText;
- (id)inlineView;
- (id)inlineViewContainer;
- (bool)inlineViewIsExtended;
- (id)inlineViewState;
- (bool)isExtended;
- (bool)isExtendedList;
- (bool)isFloatingList;
- (bool)isKeyExtended;
- (id)key;
- (id)keyConfiguration;
- (id)keyState;
- (id)keyboardBehaviors;
- (long long)layoutDirectionForCurrentInputMode;
- (id)loadCandidateBar;
- (void)loadDefaultStates;
- (id)loadInlineCandidateView;
- (struct CGSize { double x1; double x2; })maximumSizeForInlineView;
- (id)newCandidateKeyWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 configuration:(id)arg2;
- (id)opacities;
- (id)panGestureRecognizer;
- (void)panGestureRecognizerAction:(id)arg1;
- (void)removeInlineView;
- (id)renderConfig;
- (void)resetSortControlIndexAfterCandidatesChanged;
- (bool)reuseArrowButtonToExpandAssistantBarItems;
- (void)revealHiddenCandidates;
- (long long)rowForCandidateAtIndex:(unsigned long long)arg1;
- (double)rowHeightForBarForOrientation:(long long)arg1;
- (id)screenTraits;
- (id)secureCandidateRenderTraits;
- (unsigned long long)selectedSortIndex;
- (void)setActiveCandidateViewType:(long long)arg1;
- (void)setActiveViews:(id)arg1;
- (void)setAdditionalExtendedBarBackdropOffset:(double)arg1;
- (void)setAdjustForLeftHandBias:(bool)arg1;
- (void)setAnimator:(id)arg1;
- (void)setBar:(id)arg1;
- (void)setBarConfiguration:(id)arg1;
- (void)setBarState:(id)arg1;
- (void)setCandidateListDelegate:(id)arg1;
- (void)setCandidateResultSet:(id)arg1;
- (void)setCandidates:(id)arg1 inlineText:(id)arg2 inlineRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 maxX:(double)arg4 layout:(bool)arg5;
- (void)setCandidates:(id)arg1 type:(int)arg2 inlineText:(id)arg3 inlineRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg4 maxX:(double)arg5 layout:(bool)arg6;
- (void)setCurrentCandidate:(id)arg1;
- (void)setDarkKeyboard:(bool)arg1;
- (void)setDarkKeyboardChanged:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setExtendedBarState:(id)arg1;
- (void)setExtendedInlineViewState:(id)arg1;
- (void)setExtendedKeyState:(id)arg1;
- (void)setExtendedScrolledBarState:(id)arg1;
- (void)setInlineConfiguration:(id)arg1;
- (void)setInlineRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setInlineRectIsVertical:(bool)arg1;
- (void)setInlineText:(id)arg1;
- (void)setInlineView:(id)arg1;
- (void)setInlineViewContainer:(id)arg1;
- (void)setInlineViewState:(id)arg1;
- (void)setIsExtended:(bool)arg1;
- (void)setKey:(id)arg1;
- (void)setKeyConfiguration:(id)arg1;
- (void)setKeyState:(id)arg1;
- (void)setOpacities:(id)arg1;
- (void)setPanGestureRecognizer:(id)arg1;
- (void)setRenderConfig:(id)arg1;
- (void)setReuseArrowButtonToExpandAssistantBarItems:(bool)arg1;
- (void)setScreenTraits:(id)arg1;
- (void)setSingleSlottedCellMargin:(double)arg1;
- (void)setSplitGap:(double)arg1;
- (void)setUIKeyboardCandidateListDelegate:(id)arg1;
- (void)setupAnimatorWithCurve:(long long)arg1;
- (void)setupPanGestureRecognizerIfNeeded;
- (bool)shouldShowDisambiguationCandidates;
- (bool)shouldShowDisambiguationCandidatesInExtendedView;
- (bool)shouldShowSortControlForConfiguration:(id)arg1;
- (bool)showCandidate:(id)arg1;
- (bool)showCandidate:(id)arg1 animated:(bool)arg2 scrollPosition:(unsigned long long)arg3;
- (void)showCandidateAtIndex:(unsigned long long)arg1;
- (void)showCandidateAtIndex:(unsigned long long)arg1 animated:(bool)arg2 scrollPosition:(unsigned long long)arg3;
- (void)showCandidateInForwardDirection:(bool)arg1 granularity:(int)arg2;
- (double)singleSlottedCellMargin;
- (id)snapshot;
- (double)splitGap;
- (id)statisticsIdentifier;
- (void)syncIsExtended;
- (void)toggleBarExtended;
- (void)toggleBarExtendedUnanimated;
- (void)toggleBarExtendedWithAnimator:(id)arg1;
- (void)toggleCandidateView:(id)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (void)toggleInlineViewExtendedAnimated:(bool)arg1 completion:(id /* block */)arg2;
- (void)toggleKeyViewExtendedAnimated:(bool)arg1 completion:(id /* block */)arg2;
- (void)updateConfigurations;
- (void)updateOpacitiesToState:(id)arg1;
- (void)updateStates;
- (void)updateStatesForBar;
- (void)updateStatesForInlineView;
- (void)updateStatesForKey;
- (void)updateStyles;
- (long long)viewOffsetForCandidateAtIndex:(unsigned long long)arg1;

@end
