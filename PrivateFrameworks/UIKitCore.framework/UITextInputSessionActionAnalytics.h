
@interface UITextInputSessionActionAnalytics : NSObject {
    NSMutableSet * _accumulators;
    unsigned long long  _allowCursorMovementCounter;
    unsigned long long  _beginTimestamp;
    <UITextInputSessionActionAnalyticsDelegateSource> * _delegateSource;
    NSMutableSet * _dynamicAccumulators;
    NSMutableSet * _efficacyAccumulators;
    NSDictionary * _keyboardTrialParameters;
    unsigned long long  _maxDepth;
    NSObject<OS_dispatch_queue> * _queue;
    NSMutableOrderedSet * _recentActions;
    NSSet * _separateCycleAccumulatorNames;
    NSUUID * _sessionIdentifier;
    bool  _trackingDuration;
}

@property (nonatomic, readonly) unsigned long long allowCursorMovementCounter;
@property (nonatomic) <UITextInputSessionActionAnalyticsDelegateSource> *delegateSource;
@property (nonatomic, copy) NSDictionary *keyboardTrialParameters;
@property (nonatomic, copy) NSUUID *sessionIdentifier;

+ (void)addEndingObserver:(id)arg1;
+ (void)addObserver:(id)arg1;
+ (id)allowedValuesForTextInputSource;
+ (void)populateActionInputMode:(id)arg1;
+ (void)populateActionInputMode:(id)arg1 withLanguage:(id)arg2;
+ (void)q_notifyEndingObserversWithSessionAnalytics:(id)arg1;
+ (void)q_notifyStartingObservers;
+ (void)removeEndingObserver:(id)arg1;
+ (void)removeObserver:(id)arg1;
+ (id)sharedPunctuationCharacterSet;
+ (id)stringForKeyboardDockItemButtonPressResult:(unsigned long long)arg1;
+ (id)stringForKeyboardDockItemButtonType:(unsigned long long)arg1;
+ (id)stringForReplaceWithCandidateType:(long long)arg1;
+ (id)stringValueForSource:(long long)arg1;

- (void).cxx_destruct;
- (void)_didDeleteBackwardAction:(id)arg1;
- (void)_didDeleteBackwardCount:(unsigned long long)arg1 shouldOverrideInputActionCountToZero:(bool)arg2 withLanguage:(id)arg3;
- (void)_didDeleteBackwardText:(id)arg1 shouldOverrideInputActionCountToZero:(bool)arg2 withLanguage:(id)arg3;
- (void)_didInsertTextAction:(id)arg1 numCharsDeleted:(unsigned long long)arg2 withLanguage:(id)arg3;
- (unsigned long long)_emojiCountForText:(id)arg1;
- (id)_instanceOfActionClass:(Class)arg1;
- (unsigned long long)_normalizedTextLength:(id)arg1;
- (unsigned long long)_optionsForText:(id)arg1;
- (unsigned long long)_punctuationCountForText:(id)arg1;
- (id)_textInsertionActionForText:(id)arg1 relativeRangeBefore:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 withLanguage:(id)arg3;
- (void)addAccumulator:(id)arg1;
- (void)addDynamicAccumulator:(id)arg1;
- (void)addEfficacyAccumulator:(id)arg1;
- (id)allAccumulatorNames;
- (id)allEfficacyAccumulatorNames;
- (unsigned long long)allowCursorMovementCounter;
- (void)beginTrackingSessionDurationIfNecessary;
- (void)decrementAllowCursorMovementCount;
- (id)delegateSource;
- (void)didAutocorrectReplacementForText:(id)arg1 withText:(id)arg2;
- (void)didBegin;
- (void)didCalloutBarReplacementForText:(id)arg1 withText:(id)arg2;
- (void)didCandidateBarReplacementForText:(id)arg1 withText:(id)arg2;
- (void)didChangeToSelection:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 relativeRangeBefore:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)didCopy;
- (void)didCut;
- (void)didDeleteBackwardCount:(unsigned long long)arg1;
- (void)didDeleteBackwardText:(id)arg1;
- (void)didDeleteKeyPressWithInputSource:(long long)arg1;
- (void)didDictationBegin:(bool)arg1 usesMultiModalDictation:(bool)arg2;
- (void)didDictationEnd;
- (void)didInlineCompletionReplacementForText:(id)arg1 withText:(id)arg2;
- (void)didInsertKeyPressWithInputSource:(long long)arg1;
- (void)didInsertText:(id)arg1 relativeRangeBefore:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)didInsertText:(id)arg1 relativeRangeBefore:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 selectedTextBefore:(id)arg3 withLanguage:(id)arg4;
- (void)didInsertText:(id)arg1 relativeRangeBefore:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 withLanguage:(id)arg3;
- (void)didInsertText:(id)arg1 relativeRangeBefore:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 withNumAlternatives:(long long)arg3;
- (void)didKeyPress:(id)arg1 inputSource:(long long)arg2;
- (void)didKeyboardDockItemButtonPress:(unsigned long long)arg1 buttonType:(unsigned long long)arg2 buttonSize:(struct CGSize { double x1; double x2; })arg3 touchDown:(struct CGPoint { double x1; double x2; })arg4 touchUp:(struct CGPoint { double x1; double x2; })arg5 touchDuration:(double)arg6 inputSource:(long long)arg7;
- (void)didOther;
- (void)didPaste;
- (void)didRedo;
- (void)didReplaceWithCandidate:(long long)arg1;
- (void)didReplacementForText:(id)arg1 withText:(id)arg2 withSource:(long long)arg3 withType:(long long)arg4 withInputActionCount:(long long)arg5;
- (void)didRevisionBubbleReplacementForText:(id)arg1 withText:(id)arg2;
- (void)didRevisionBubbleTap;
- (void)didSessionEnd;
- (void)didUndo;
- (void)enumerateAnalytics:(id /* block */)arg1;
- (void)enumerateSeparateCycleAnalytics:(id /* block */)arg1;
- (void)enumerateTextInputActionAnalytics:(id /* block */)arg1;
- (id)getAppBundleId;
- (id)getDynamicAccumulatorWithName:(id)arg1;
- (id)getEfficacyAccumulatorWithName:(id)arg1;
- (void)incrementAllowCursorMovementCount;
- (id)init;
- (id)keyboardTrialParameters;
- (void)q_addAccumulator:(id)arg1;
- (void)q_addActionAndUpdate:(id)arg1;
- (void)q_addDynamicAccumulator:(id)arg1;
- (void)q_addEfficacyAccumulator:(id)arg1;
- (id)q_copyAccumulatorWithName:(id)arg1;
- (void)q_flushRecentActions;
- (void)q_setSeparateCycleAccumulatorNames:(id)arg1;
- (void)q_setupDefaultAnalytics;
- (void)q_updateAnalyticsFromAccumulators;
- (id)sessionIdentifier;
- (void)setDelegateSource:(id)arg1;
- (void)setKeyboardTrialParameters:(id)arg1;
- (void)setSessionIdentifier:(id)arg1;
- (void)writeAnalytics;

@end
