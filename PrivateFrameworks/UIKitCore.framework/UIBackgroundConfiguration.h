
@interface UIBackgroundConfiguration : NSObject <NSCopying, NSSecureCoding, _UIBackgroundConfigurationInternal> {
    UIColor * _backgroundColor;
    id /* block */  _backgroundColorTransformer;
    long long  _backgroundColorTransformerIdentifier;
    struct NSDirectionalEdgeInsets { 
        double top; 
        double leading; 
        double bottom; 
        double trailing; 
    }  _backgroundInsets;
    struct { 
        unsigned int hasCustomizedCustomView : 1; 
        unsigned int hasCustomizedCornerRadius : 1; 
        unsigned int hasCustomizedBackgroundInsets : 1; 
        unsigned int hasCustomizedEdgesAddingLayoutMarginsToBackgroundInsets : 1; 
        unsigned int hasCustomizedBackgroundColor : 1; 
        unsigned int hasCustomizedBackgroundColorTransformer : 1; 
        unsigned int hasCustomizedVisualEffect : 1; 
        unsigned int hasCustomizedVisualEffectGroupName : 1; 
        unsigned int hasCustomizedImage : 1; 
        unsigned int hasCustomizedImageContentMode : 1; 
        unsigned int hasCustomizedStrokeColor : 1; 
        unsigned int hasCustomizedStrokeColorTransformer : 1; 
        unsigned int hasCustomizedStrokeWidth : 1; 
        unsigned int hasCustomizedStrokeOutset : 1; 
        unsigned int hasCustomizedMaskedCorners : 1; 
    }  _configurationFlags;
    double  _cornerRadius;
    UIView * _customView;
    long long  _defaultStyle;
    unsigned long long  _edgesAddingLayoutMarginsToBackgroundInsets;
    UIImage * _image;
    long long  _imageContentMode;
    unsigned long long  _maskedCorners;
    long long  _shadowType;
    UIColor * _strokeColor;
    id /* block */  _strokeColorTransformer;
    long long  _strokeColorTransformerIdentifier;
    long long  _strokeLocation;
    double  _strokeOutset;
    double  _strokeWidth;
    UIVisualEffect * _visualEffect;
    NSString * _visualEffectGroupName;
}

@property (setter=__setMaskedCorners:, nonatomic) unsigned long long __maskedCorners;
@property (setter=__setVisualEffectGroupName:, nonatomic, copy) NSString *__visualEffectGroupName;
@property (setter=_setCornerRadius:, nonatomic) double _cornerRadius;
@property (setter=_setMaskedCorners:, nonatomic) unsigned long long _maskedCorners;
@property (setter=_setShadowType:, nonatomic) long long _shadowType;
@property (setter=_setVisualEffectGroupName:, nonatomic, copy) NSString *_visualEffectGroupName;
@property (nonatomic, retain) UIColor *backgroundColor;
@property (nonatomic, copy) id /* block */ backgroundColorTransformer;
@property (nonatomic) struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; } backgroundInsets;
@property (nonatomic) double cornerRadius;
@property (nonatomic, retain) UIView *customView;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) unsigned long long edgesAddingLayoutMarginsToBackgroundInsets;
@property (getter=_hasBackgroundColor, nonatomic, readonly) bool hasBackgroundColor;
@property (getter=_hasBackgroundFill, nonatomic, readonly) bool hasBackgroundFill;
@property (getter=_hasStroke, nonatomic, readonly) bool hasStroke;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) UIImage *image;
@property (nonatomic) long long imageContentMode;
@property (nonatomic, readonly) bool isTintBackgroundColor;
@property (nonatomic, retain) UIColor *strokeColor;
@property (nonatomic, copy) id /* block */ strokeColorTransformer;
@property (getter=_strokeLocation, setter=_setStrokeLocation:, nonatomic) long long strokeLocation;
@property (nonatomic) double strokeOutset;
@property (nonatomic) double strokeWidth;
@property (readonly) Class superclass;
@property (nonatomic, copy) UIVisualEffect *visualEffect;

+ (id)_listInsetGroupedCellConfiguration;
+ (id)_listInsetGroupedHeaderFooterConfiguration;
+ (id)clearConfiguration;
+ (id)listAccompaniedSidebarCellConfiguration;
+ (id)listGroupedCellConfiguration;
+ (id)listGroupedHeaderFooterConfiguration;
+ (id)listPlainCellConfiguration;
+ (id)listPlainHeaderFooterConfiguration;
+ (id)listSidebarCellConfiguration;
+ (id)listSidebarHeaderConfiguration;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (unsigned long long)__maskedCorners;
- (void)__setMaskedCorners:(unsigned long long)arg1;
- (void)__setVisualEffectGroupName:(id)arg1;
- (id)__visualEffectGroupName;
- (bool)_backgroundFillIsEqual:(id)arg1 withTintColor:(id)arg2;
- (double)_cornerRadius;
- (bool)_hasBackgroundColor;
- (bool)_hasBackgroundFill;
- (bool)_hasStroke;
- (bool)_isEqualToInternalConfigurationQuick:(id)arg1;
- (unsigned long long)_maskedCorners;
- (void)_setCornerRadius:(double)arg1;
- (void)_setMaskedCorners:(unsigned long long)arg1;
- (void)_setShadowType:(long long)arg1;
- (void)_setStrokeLocation:(long long)arg1;
- (void)_setVisualEffectGroupName:(id)arg1;
- (long long)_shadowType;
- (long long)_strokeLocation;
- (id)_updatedConfigurationForState:(id)arg1;
- (id)_visualEffectGroupName;
- (id)backgroundColor;
- (id /* block */)backgroundColorTransformer;
- (struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })backgroundInsets;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (double)cornerRadius;
- (id)customView;
- (id)description;
- (unsigned long long)edgesAddingLayoutMarginsToBackgroundInsets;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)hash;
- (id)image;
- (long long)imageContentMode;
- (id)initWithCoder:(id)arg1;
- (bool)isEqual:(id)arg1;
- (bool)isTintBackgroundColor;
- (id)resolvedBackgroundColorForTintColor:(id)arg1;
- (id)resolvedStrokeColorForTintColor:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setBackgroundColorTransformer:(id /* block */)arg1;
- (void)setBackgroundInsets:(struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setCornerRadius:(double)arg1;
- (void)setCustomView:(id)arg1;
- (void)setEdgesAddingLayoutMarginsToBackgroundInsets:(unsigned long long)arg1;
- (void)setImage:(id)arg1;
- (void)setImageContentMode:(long long)arg1;
- (void)setStrokeColor:(id)arg1;
- (void)setStrokeColorTransformer:(id /* block */)arg1;
- (void)setStrokeOutset:(double)arg1;
- (void)setStrokeWidth:(double)arg1;
- (void)setVisualEffect:(id)arg1;
- (id)strokeColor;
- (id /* block */)strokeColorTransformer;
- (double)strokeOutset;
- (double)strokeWidth;
- (id)updatedConfigurationForState:(id)arg1;
- (id)visualEffect;

@end
