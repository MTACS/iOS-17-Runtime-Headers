
@interface UIViewInProcessAnimationManager : NSObject <_UIViewInProcessAnimationManagerDriver> {
    bool  _advancingOnCommitDisabled;
    NSThread * _animationThread;
    NSObject<OS_dispatch_semaphore> * _animationThreadKeepAliveSemaphore;
    NSRunLoop * _animationThreadRunLoop;
    bool  _animationsShouldCompleteImmediately;
    bool  _animationsSuspended;
    <_UIViewInProcessAnimationManagerDriver> * _animatorAdvancer;
    bool  _appSuspended;
    NSObject<OS_dispatch_queue> * _backlightQueue;
    _UIAppCACommitFuture * _caCommitFuture;
    struct { 
        unsigned int preferredFrameRateRange : 1; 
        unsigned int updateReasonsArray : 1; 
    }  _clean;
    NSThread * _currentTickThread;
    double  _deltaTime;
    CADisplayLink * _displayLink;
    NSObject<OS_dispatch_queue> * _displayLinkAccessQueue;
    bool  _displayLinkInvalidated;
    NSMutableArray * _entries;
    NSObject<OS_dispatch_queue> * _entryLockingQueue;
    unsigned long long  _executionMode;
    NSCountedSet * _maximumFrameRates;
    NSCountedSet * _minimumFrameRates;
    NSMutableArray * _newlyAddedEntries;
    unsigned long long  _numberOfEntriesNotAllowingVFD;
    NSMutableArray * _observedWindowScenes;
    NSMutableArray * _postTickBlocks;
    NSObject<OS_dispatch_semaphore> * _postTicksDelaySemaphore;
    NSMutableArray * _preCommitBlocks;
    NSMutableArray * _preExitBlocks;
    struct CAFrameRateRange { 
        float minimum; 
        float maximum; 
        float preferred; 
    }  _preferredFrameRateRange;
    NSCountedSet * _preferredFrameRates;
    NSHashTable * _presentationGroups;
    NSMutableArray * _presentationModifierGroupRequestBlocks;
    unsigned long long  _presentationModifierRequestCount;
    bool  _processingPreCommits;
    double  _refreshInterval;
    int  _screenDimmingNotificationToken;
    bool  _screenIsOff;
    bool  _skipNextFrame;
    NSObject<OS_dispatch_queue> * _tickPrepQueue;
    NSObject<OS_dispatch_queue> * _tickQueue;
    double  _time;
    NSObject<OS_dispatch_queue> * _timerQueue;
    NSObject<OS_dispatch_source> * _timerSource;
    _UIViewInProcessAnimationReasonArray * _updateReasonArray;
    NSCountedSet * _updateReasons;
    struct _UIUpdateRequest { 
        unsigned int flags; 
        unsigned int minRate; 
        unsigned int preferredRate; 
        unsigned int maxRate; 
        unsigned long long phase; 
        unsigned long long load; 
    }  _updateRequest;
    bool  _usesMainThreadExecution;
    bool  _waitingForAnimatorAdvancerToStart;
}

@property (nonatomic) bool advancingOnCommitDisabled;
@property NSThread *animationThread;
@property (retain) NSObject<OS_dispatch_semaphore> *animationThreadKeepAliveSemaphore;
@property NSRunLoop *animationThreadRunLoop;
@property NSThread *currentTickThread;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) unsigned long long executionMode;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) struct CAFrameRateRange { float x1; float x2; float x3; } preferredFrameRateRange;
@property (readonly) Class superclass;
@property (nonatomic, readonly) _UIViewInProcessAnimationReasonArray *updateReasonArray;
@property (nonatomic) bool usesMainThreadExecution;

+ (void)_cancelPresentationModifierGroupRequest:(id)arg1;
+ (void)_dispatchAsyncOntoMainBeforeExit:(id /* block */)arg1;
+ (id)_requestPresentationModifierGroup:(id /* block */)arg1;
+ (void)_setExternalAnimationDriver:(id)arg1;
+ (id)sharedManager;

- (void).cxx_destruct;
- (void)_advanceWithTime:(double)arg1;
- (void)_applicationBecameActive;
- (void)_applicationDidEnterBackground;
- (void)_cancelAllAnimationsImmediately;
- (void)_cancelPresentationModifierGroupRequest:(id)arg1;
- (void)_commitSynchronously;
- (void)_displayLinkFire:(id)arg1;
- (bool)_isInvalidated;
- (void)_performTick:(double)arg1 cancel:(bool)arg2 force:(bool)arg3 eventName:(id)arg4 entry:(id /* block */)arg5 exit:(id /* block */)arg6;
- (void)_performWhenInProcessAnimationsTransactionCommits:(id /* block */)arg1;
- (void)_prepareForTick;
- (void)_processEntriesCollectingEntriesToRemove:(id)arg1 cancel:(bool)arg2;
- (void)_processPostTicks;
- (void)_processPostTicksDelayIfNecessary:(double)arg1;
- (void)_processPreCommitBlocks;
- (void)_processPresentationModifierRequestsAndFlush;
- (void)_processTickExitRemovingEntries:(id)arg1;
- (void)_registerBacklightChangedNotification;
- (id)_requestPresentationModifierGroup:(id /* block */)arg1;
- (unsigned long long)_runPreCommitBlocks;
- (void)_screenBasedSceneDidDisconnect:(id)arg1;
- (void)_screenBasedSceneWillAttachWindow:(id)arg1;
- (void)_setAnimationExecutionParameters;
- (void)_setAnimationsSuspended:(bool)arg1;
- (void)_setCurrentMediaTime:(double)arg1;
- (bool)_shouldKeepAnimationThreadAlive;
- (void)_updateAnimationSuspensionForAppStateChange;
- (void)addEntry:(id)arg1;
- (bool)advancingOnCommitDisabled;
- (id)animationThread;
- (id)animationThreadKeepAliveSemaphore;
- (id)animationThreadRunLoop;
- (id)currentTickThread;
- (void)dealloc;
- (unsigned long long)executionMode;
- (void)finishAdvancingAnimationManager;
- (id)init;
- (void)performAfterTick:(id /* block */)arg1;
- (void)performBeforeExiting:(id /* block */)arg1;
- (struct CAFrameRateRange { float x1; float x2; float x3; })preferredFrameRateRange;
- (double)refreshInterval;
- (void)scheduleAnimatorAdvancerToStart;
- (void)setAdvancingOnCommitDisabled:(bool)arg1;
- (void)setAnimationThread:(id)arg1;
- (void)setAnimationThreadKeepAliveSemaphore:(id)arg1;
- (void)setAnimationThreadRunLoop:(id)arg1;
- (void)setCurrentTickThread:(id)arg1;
- (void)setExecutionMode:(unsigned long long)arg1;
- (void)setUsesMainThreadExecution:(bool)arg1;
- (void)startAdvancingAnimationManager:(id)arg1;
- (void)startAnimationAdvancerIfNeeded;
- (id)updateReasonArray;
- (bool)usesMainThreadExecution;

@end
