
@interface ICiOSTableAttachmentViewController : ICTableAttachmentViewController <NSLayoutManagerDelegate, UIGestureRecognizerDelegate, UIScrollViewDelegate, UITextViewDelegate> {
    UITextView * _biuTextView;
    ICNAEventReporter * _eventReporter;
    struct CGPoint { 
        double x; 
        double y; 
    }  _initialDragOffset;
    bool  _isObservingContentOffset;
    bool  _isTrackingAnalyticsEdit;
    <NSObject> * _keyboardWillShowScrollObservation;
    bool  _menuHiding;
    struct CGPoint { 
        double x; 
        double y; 
    }  _previousNoteContentOffset;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _previousSelectedRange;
    struct CGPoint { 
        double x; 
        double y; 
    }  _previousViewOrigin;
    UILongPressGestureRecognizer * _rowLongPress;
    bool  _showingTextStyleOptions;
    bool  _touchingColumnButton;
    bool  _touchingRowButton;
}

@property (nonatomic, retain) UITextView *biuTextView;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) ICNAEventReporter *eventReporter;
@property (readonly) unsigned long long hash;
@property (nonatomic) struct CGPoint { double x1; double x2; } initialDragOffset;
@property (nonatomic) bool isObservingContentOffset;
@property (nonatomic) bool isTrackingAnalyticsEdit;
@property (nonatomic, retain) <NSObject> *keyboardWillShowScrollObservation;
@property (getter=isMenuHiding, nonatomic) bool menuHiding;
@property (nonatomic) struct CGPoint { double x1; double x2; } previousNoteContentOffset;
@property (nonatomic) struct _NSRange { unsigned long long x1; unsigned long long x2; } previousSelectedRange;
@property (nonatomic) struct CGPoint { double x1; double x2; } previousViewOrigin;
@property (nonatomic) UILongPressGestureRecognizer *rowLongPress;
@property (getter=isShowingTextStyleOptions, nonatomic) bool showingTextStyleOptions;
@property (readonly) Class superclass;
@property (getter=isTouchingColumnButton, nonatomic) bool touchingColumnButton;
@property (getter=isTouchingRowButton, nonatomic) bool touchingRowButton;

- (void).cxx_destruct;
- (id)addColumnAction;
- (id)addRowAction;
- (void)adjustScrollPositionByOffset:(struct CGPoint { double x1; double x2; })arg1;
- (id)auxiliaryTextViewHost;
- (bool)becomeFirstResponderForAuxStyling;
- (void)beginEditingCellWithColumnID:(id)arg1 andRowID:(id)arg2 textRange:(id /* block */)arg3;
- (void)beginEditingNoteAtRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)biuTextView;
- (void)buildMenuWithBuilder:(id)arg1;
- (bool)canConvertToTag;
- (bool)canConvertToText;
- (bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)cellFirstResponderChanged;
- (void)cleanUpKVOIfNeeded;
- (void)columnButtonMenuActionTriggered:(id)arg1;
- (void)columnButtonPressed:(id)arg1;
- (void)columnButtonTouched:(id)arg1;
- (id)columnMenu;
- (void)convertToTag:(id)arg1;
- (void)convertToText:(id)arg1;
- (void)convertUnconfirmedHashtagsMentionsIfNecessary;
- (void)copy:(id)arg1;
- (void)copySelection:(id)arg1;
- (id)copySelectionAction;
- (bool)cursorPrefersWordBoundary;
- (void)cut:(id)arg1;
- (id)cutSelectionAction;
- (void)dealloc;
- (void)didBeginEditingWithTextView:(id)arg1;
- (void)didMoveToParentViewController:(id)arg1;
- (void)didTapEmptyTable:(id)arg1;
- (void)didUpdateContentSize;
- (void)dragCellRange:(id)arg1;
- (void)dragColumn:(id)arg1;
- (void)dragRow:(id)arg1;
- (id)dragSnapshotFromRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 afterScreenUpdates:(bool)arg2;
- (void)dragTextRange:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })editingViewport;
- (void)ensureGesturesOnSelectionGrabbers:(id)arg1;
- (id)eventReporter;
- (void)eventReporterLostSession:(id)arg1;
- (id)formatMenu;
- (bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (id)icTableDataFromPasteboard;
- (void)ic_makeFirstResponder:(id)arg1;
- (void)ic_resignFirstResponder:(id)arg1;
- (struct CGPoint { double x1; double x2; })initialDragOffset;
- (void)invalidateCachedChildrenForAccessibilityReparenting;
- (bool)isMenuHiding;
- (bool)isObservingContentOffset;
- (bool)isShowingTextStyleOptions;
- (bool)isTouchingColumnButton;
- (bool)isTouchingRowButton;
- (bool)isTrackingAnalyticsEdit;
- (id)keyboardWillShowScrollObservation;
- (void)layoutManager:(id)arg1 didCompleteLayoutForTextContainer:(id)arg2 atEnd:(bool)arg3;
- (void)loadView;
- (void)makeDelegateOfTextView:(id)arg1;
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;
- (void)menuDidHide:(id)arg1;
- (void)menuWillHide:(id)arg1;
- (void)moveAccessibilityFocusToSelectedColumnOrRowButton;
- (id)noteEditorViewController;
- (id)noteScrollView;
- (id)notesDataFromPasteboard;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)paste:(id)arg1;
- (id)pasteSelectionAction;
- (void)performInitialLayoutIfNeeded;
- (unsigned long long)preferredNavigationSelection;
- (struct CGPoint { double x1; double x2; })previousNoteContentOffset;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })previousSelectedRange;
- (struct CGPoint { double x1; double x2; })previousViewOrigin;
- (id)removeColumnAction;
- (id)removeRowAction;
- (bool)resignFirstResponderForAuxStyling;
- (void)rowButtonMenuActionTriggered:(id)arg1;
- (void)rowButtonPressed:(id)arg1;
- (void)rowButtonTouched:(id)arg1;
- (id)rowLongPress;
- (id)rowMenu;
- (void)scrollToCaretIfNeededForTextView:(id)arg1;
- (void)scrollToRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(bool)arg2;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)selectCell;
- (void)selectCurrentColumnForAccessibility;
- (void)selectCurrentRowForAccessibility;
- (void)selectionDidResignFirstResponder:(id)arg1;
- (void)sendAnalyticsForEndEditIfNeeded;
- (void)sendAnalyticsForStartEditIfNeeded;
- (void)setBiuTextView:(id)arg1;
- (void)setEventReporter:(id)arg1;
- (void)setInitialDragOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)setIsObservingContentOffset:(bool)arg1;
- (void)setIsTrackingAnalyticsEdit:(bool)arg1;
- (void)setKeyboardWillShowScrollObservation:(id)arg1;
- (void)setMenuHiding:(bool)arg1;
- (void)setPreviousNoteContentOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)setPreviousSelectedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setPreviousViewOrigin:(struct CGPoint { double x1; double x2; })arg1;
- (void)setRowLongPress:(id)arg1;
- (void)setShowingTextStyleOptions:(bool)arg1;
- (void)setTextViewWritingDirection:(long long)arg1 sender:(id)arg2;
- (void)setTouchingColumnButton:(bool)arg1;
- (void)setTouchingRowButton:(bool)arg1;
- (void)setupEventHandling;
- (void)setupKVOIfNeeded;
- (void)setupTableTextView:(id)arg1;
- (void)shareTable:(id)arg1;
- (void)showButtonsAtColumns:(id)arg1 rows:(id)arg2;
- (void)showRangeSelectionMenu;
- (void)showRangeSelectionMenuAfterDelay;
- (void)showSelectionMenuFromRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)soloPlainTextStringFromPasteboard;
- (void)speakAccessibilityAnnouncementForMoveToCellWithColumnID:(id)arg1 rowID:(id)arg2;
- (void)speakAccessibilityExitedTableAnnouncementAndDidRemoveRow:(bool)arg1;
- (void)strikethrough:(id)arg1;
- (void)tableAttachmentDidChange;
- (void)tableAttachmentSelectionDidChange:(id)arg1;
- (bool)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 replacementText:(id)arg3;
- (void)textViewDidBeginEditing:(id)arg1;
- (void)textViewDidChange:(id)arg1;
- (void)textViewDidChangeSelection:(id)arg1;
- (void)textViewDidEndEditing:(id)arg1;
- (bool)textViewShouldBeginEditing:(id)arg1;
- (id)toggleBoldAction;
- (id)toggleItalicAction;
- (id)toggleStrikethroughAction;
- (id)toggleTableDirectionAction;
- (id)toggleUnderlineAction;
- (void)traitCollectionDidChange:(id)arg1;
- (void)unselectColumnRow;
- (void)updateAccessibilityValueForColumnAndRowButtons;
- (void)updateChrome;
- (void)updateKeyboardAppearanceForTextView:(id)arg1;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillLayoutSubviews;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (void)willBeginEditingWithTextView:(id)arg1;
- (void)willMoveToParentViewController:(id)arg1;

@end
