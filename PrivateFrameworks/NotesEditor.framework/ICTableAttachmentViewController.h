
@interface ICTableAttachmentViewController : ICAttachmentViewController <ICAttachmentFindable, ICAuxiliaryStyling, ICAvailableTableWidthProviding, ICBaseTextViewDelegate, ICTTTextStorageDelegate, ICTTTextUndoTarget, ICTableAttachmentProviderDelegate, ICTableAutoScrollerDelegate, ICTableCellChangeObserving, ICTableColumnTextViewDelegate, ICTableDelegate, ICTableSelectionDelegate, ICTableTextViewManagerDelegate, ICTableUndoHelping> {
    ICTableColumnTextView * _activeTextView;
    NSMutableDictionary * _cellHeightCache;
    NSDictionary * _cellTimestampsBeforeMerge;
    NSMapTable * _coalescingUndoGroupForStringDelegate;
    ICTableColumnRowButton * _columnButton;
    ICDimensionSumCache * _columnWidthCache;
    NSMutableOrderedSet * _columnsBeforeMerge;
    NSMutableSet * _columnsNeedingWidthUpdate;
    struct CGPoint { 
        double x; 
        double y; 
    }  _currentDragGestureLocation;
    unsigned long long  _currentDragIndex;
    ICTTTextStorage * _currentlyEditingTextStorage;
    ICTableColumnTextView * _currentlyEditingTextView;
    bool  _didRecentlyAutoAddRow;
    UIView * _dragView;
    ICAppearanceInfo * _draggingAppearance;
    unsigned long long  _editingCount;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _editingViewport;
    ICTableSelectionKnob * _endKnob;
    _UIDragSnappingFeedbackGenerator * _feedbackGenerator;
    ICTableClipView * _headerClipView;
    struct CGPoint { 
        double x; 
        double y; 
    }  _initialDragOffset;
    UIView * _inputAccessoryView;
    UIView * _inputView;
    bool  _isPerformingInitialLayout;
    unsigned long long  _lastDraggedOverColumnOrRowIndex;
    bool  _lockSelection;
    bool  _makingCellFirstResponder;
    ICLayoutManager * _noteLayoutManager;
    UIScrollView * _noteScrollView;
    ICTK2TextLayoutManager * _noteTextLayoutManager;
    bool  _performedInitialLayout;
    ICTableAttachmentSelection * _previousAXTableSelection;
    double  _previousAvailableWidth;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _proposedLineFragmentRect;
    NSUUID * _rangeSelectionAnchorColumn;
    NSUUID * _rangeSelectionAnchorRow;
    ICTableColumnRowButton * _rowButton;
    ICDimensionSumCache * _rowHeightCache;
    NSMutableOrderedSet * _rowsBeforeMerge;
    ICTableScrollView * _scrollView;
    ICTableSelectionView * _selectionHighlightView;
    bool  _shouldBeginInitialEditing;
    bool  _shouldPreventUndoCommands;
    bool  _showingTextStyleOptions;
    ICTableSelectionKnob * _startKnob;
    NSArray * _stringSelectionBeforeDrag;
    NSArray * _stringSelectionBeforeMerge;
    ICTableAccessibilityController * _tableAXController;
    ICTableAttachmentProvider * _tableAttachmentProvider;
    ICTableAutoScroller * _tableAutoScroller;
    ICTableContentView * _tableContentView;
    ICTableLayoutManager * _tableLayoutManager;
    ICTableAttachmentSelection * _tableSelection;
    ICTableAttachmentSelection * _tableSelectionBeforeMerge;
    ICTableTextViewManager * _textViewManager;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _transitionViewport;
    NSMutableArray * _undoCommands;
    ICTableUndoTarget * _undoTarget;
    bool  _updatingTiles;
    NSMutableDictionary * _visibleEmptyCellsBeforeMerge;
    bool  preventScrolling;
}

@property (nonatomic, readonly) ICTableColumnTextView *activeTextView;
@property (nonatomic, readonly) <ICAuxiliaryStyling> *auxiliaryStylingController;
@property (nonatomic, readonly) NSObject<ICAuxiliaryTextViewHosting> *auxiliaryTextViewHost;
@property (nonatomic, readonly) double availableWidth;
@property (nonatomic, readonly) bool canStyleText;
@property (nonatomic, readonly) bool canToggleTodo;
@property (nonatomic, readonly) NSMutableDictionary *cellHeightCache;
@property (nonatomic, retain) NSDictionary *cellTimestampsBeforeMerge;
@property (nonatomic, readonly) NSMapTable *coalescingUndoGroupForStringDelegate;
@property (nonatomic, retain) ICTableColumnRowButton *columnButton;
@property (nonatomic, retain) ICDimensionSumCache *columnWidthCache;
@property (nonatomic, readonly) NSMutableOrderedSet *columnsBeforeMerge;
@property (nonatomic, readonly) NSMutableSet *columnsNeedingWidthUpdate;
@property (nonatomic) struct CGPoint { double x1; double x2; } currentDragGestureLocation;
@property (nonatomic) unsigned long long currentDragIndex;
@property (nonatomic, retain) ICTTTextStorage *currentlyEditingTextStorage;
@property (nonatomic, retain) ICTableColumnTextView *currentlyEditingTextView;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool didRecentlyAutoAddRow;
@property (nonatomic, retain) UIView *dragView;
@property (nonatomic, retain) ICAppearanceInfo *draggingAppearance;
@property (nonatomic) unsigned long long editingCount;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } editingViewport;
@property (nonatomic, readonly) ICTableSelectionKnob *endKnob;
@property (nonatomic, retain) _UIDragSnappingFeedbackGenerator *feedbackGenerator;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) ICTableClipView *headerClipView;
@property (nonatomic) struct CGPoint { double x1; double x2; } initialDragOffset;
@property (nonatomic, retain) UIView *inputAccessoryView;
@property (nonatomic, retain) UIView *inputView;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } intrinsicSize;
@property (nonatomic, readonly) bool isNoteEditable;
@property (nonatomic) bool isPerformingInitialLayout;
@property (nonatomic) unsigned long long lastDraggedOverColumnOrRowIndex;
@property (nonatomic) bool lockSelection;
@property (nonatomic) bool makingCellFirstResponder;
@property (nonatomic) ICLayoutManager *noteLayoutManager;
@property (nonatomic, readonly) UIScrollView *noteScrollView;
@property (nonatomic) ICTK2TextLayoutManager *noteTextLayoutManager;
@property (nonatomic, readonly) ICBaseTextView *noteTextView;
@property (nonatomic) bool performedInitialLayout;
@property (nonatomic) bool preventScrolling;
@property (nonatomic, retain) ICTableAttachmentSelection *previousAXTableSelection;
@property (nonatomic) double previousAvailableWidth;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } proposedLineFragmentRect;
@property (nonatomic, retain) NSUUID *rangeSelectionAnchorColumn;
@property (nonatomic, retain) NSUUID *rangeSelectionAnchorRow;
@property (nonatomic, retain) ICTableColumnRowButton *rowButton;
@property (nonatomic, retain) ICDimensionSumCache *rowHeightCache;
@property (nonatomic, readonly) NSMutableOrderedSet *rowsBeforeMerge;
@property (nonatomic, retain) ICTableScrollView *scrollView;
@property (nonatomic, readonly) double scrollerOutset;
@property (nonatomic, readonly) unsigned long long selectedStyleBIUS;
@property (nonatomic, readonly) NSIndexSet *selectedStyles;
@property (nonatomic, readonly) ICTableSelectionView *selectionHighlightView;
@property (nonatomic) bool shouldBeginInitialEditing;
@property (nonatomic) bool shouldPreventUndoCommands;
@property (getter=isShowingTextStyleOptions, nonatomic, readonly) bool showingTextStyleOptions;
@property (nonatomic, readonly) ICTableSelectionKnob *startKnob;
@property (nonatomic, retain) NSArray *stringSelectionBeforeDrag;
@property (nonatomic, retain) NSArray *stringSelectionBeforeMerge;
@property (readonly) Class superclass;
@property (nonatomic, readonly) ICTable *table;
@property (nonatomic, retain) ICTableAccessibilityController *tableAXController;
@property (nonatomic, readonly) ICTableAttachmentProvider *tableAttachmentProvider;
@property (nonatomic, retain) ICTableAutoScroller *tableAutoScroller;
@property (nonatomic, readonly) ICTableContentView *tableContentView;
@property (nonatomic, readonly) ICTableLayoutManager *tableLayoutManager;
@property (nonatomic, retain) ICTableAttachmentSelection *tableSelection;
@property (nonatomic, retain) ICTableAttachmentSelection *tableSelectionBeforeMerge;
@property (nonatomic, readonly) ICTableTextViewManager *textViewManager;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } transitionViewport;
@property (nonatomic, retain) NSMutableArray *undoCommands;
@property (nonatomic, readonly) NSUndoManager *undoManager;
@property (nonatomic, readonly) ICTableUndoTarget *undoTarget;
@property (getter=isUpdatingTiles, nonatomic) bool updatingTiles;
@property (nonatomic, readonly) ICTableAttachmentView *view;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } viewport;
@property (nonatomic, readonly) NSMutableDictionary *visibleEmptyCellsBeforeMerge;

- (void).cxx_destruct;
- (id)RTFDataForSelection;
- (bool)acceptsKeystrokes;
- (id)account;
- (id)activeTextView;
- (void)addColumnAfterSelection:(id)arg1;
- (void)addColumnAtIndex:(unsigned long long)arg1;
- (void)addColumnBeforeSelection:(id)arg1;
- (void)addColumnLeftOfSelection:(id)arg1;
- (void)addColumnRightOfSelection:(id)arg1;
- (void)addRowAboveSelection:(id)arg1;
- (void)addRowAtIndex:(unsigned long long)arg1;
- (void)addRowBelowSelection:(id)arg1;
- (void)addUndoCommandsForObject:(id)arg1 block:(id /* block */)arg2;
- (void)adjustScrollPositionByOffset:(struct CGPoint { double x1; double x2; })arg1;
- (bool)allowsNewTextLength:(unsigned long long)arg1;
- (void)announceCellRangeSelectionChangeForAccessibilityIfNecessary;
- (void)applyUndoGroup:(id)arg1;
- (id)attributedStringForTableSelectionInContext:(id)arg1;
- (id)attributedStringFromPasteboard;
- (id)auxiliaryStylingController;
- (double)availableWidth;
- (bool)becomeFirstResponderForAuxStyling;
- (void)beginEditing;
- (void)beginEditingCellWithColumnID:(id)arg1 andRowID:(id)arg2 location:(unsigned long long)arg3;
- (void)beginEditingCellWithColumnID:(id)arg1 andRowID:(id)arg2 textRange:(id /* block */)arg3;
- (void)beginEditingCellWithColumnID:(id)arg1 andRowID:(id)arg2 touchPoint:(struct CGPoint { double x1; double x2; })arg3;
- (void)beginEditingInitialCell;
- (void)beginEditingNoteAtOffset:(long long)arg1;
- (void)beginEditingNoteAtRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)beginEditingSelectedRangeInTextView:(id)arg1;
- (bool)canIndent;
- (bool)canIndentByamount:(long long)arg1;
- (bool)canOutdent;
- (bool)canStyleText;
- (bool)canToggleTodo;
- (void)cellFirstResponderChanged;
- (id)cellHeightCache;
- (void)cellRangeDragBeganOnView:(id)arg1;
- (void)cellRangeDraggedAtLocation:(struct CGPoint { double x1; double x2; })arg1;
- (id)cellTimestampsBeforeMerge;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })characterRangeForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 inString:(id)arg2 forLayoutManager:(id)arg3;
- (void)cleanDeletedColumn:(id)arg1;
- (void)cleanDeletedRow:(id)arg1;
- (id)coalescingUndoGroupForStringDelegate;
- (id)columnButton;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })columnGlyphRangeForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 inString:(id)arg2 forLayoutManager:(id)arg3;
- (id)columnWidthCache;
- (id)columnsBeforeMerge;
- (id)columnsNeedingWidthUpdate;
- (bool)containedInNoteSelection;
- (void)contentSizeCategoryDidChange;
- (void)convertTableToText:(id)arg1;
- (void)convertUnconfirmedHashtagsMentionsIfNecessary;
- (void)copySelection:(id)arg1;
- (void)copyTable:(id)arg1;
- (struct CGPoint { double x1; double x2; })currentDragGestureLocation;
- (unsigned long long)currentDragIndex;
- (id)currentlyEditingTextStorage;
- (id)currentlyEditingTextView;
- (unsigned long long)cursorPositionForLocation:(struct CGPoint { double x1; double x2; })arg1 inTextView:(id)arg2;
- (bool)cursorPrefersWordBoundary;
- (id)customPasteboardDataForSelection;
- (void)cutSelection:(id)arg1;
- (id)dataForSelectionOfType:(id)arg1;
- (id)dataForSelectionWithDocumentAttributes:(id)arg1;
- (void)dealloc;
- (void)deleteColumns:(id)arg1;
- (void)deleteRows:(id)arg1;
- (void)deleteSelectedColumns:(id)arg1;
- (void)deleteSelectedRows:(id)arg1;
- (void)deleteSelection:(id)arg1;
- (void)deleteSelectionCellContents;
- (void)deleteTable:(id)arg1;
- (void)didBeginEditingWithTextView:(id)arg1;
- (void)didPasteOrDropTextForTableColumnTextView:(id)arg1;
- (bool)didRecentlyAutoAddRow;
- (void)didUpdateContentSize;
- (void)dragBeganOnColumnOrRow:(bool)arg1 atLocation:(struct CGPoint { double x1; double x2; })arg2;
- (void)dragEndedOnColumnOrRow:(bool)arg1 atLocation:(struct CGPoint { double x1; double x2; })arg2;
- (void)dragMovedOnColumnOrRow:(bool)arg1 atLocation:(struct CGPoint { double x1; double x2; })arg2;
- (id)dragSnapshotFromRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 afterScreenUpdates:(bool)arg2;
- (id)dragView;
- (id)draggingAppearance;
- (void)drawCharactersInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 inFindableString:(id)arg2 forContentView:(id)arg3;
- (unsigned long long)editingCount;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })editingViewport;
- (void)endCellEditingSessionWithTextView:(id)arg1;
- (void)endEditing;
- (id)endKnob;
- (void)extendCellRangeSelectionInDirection:(unsigned long long)arg1 toEnd:(bool)arg2;
- (id)feedbackGenerator;
- (void)flashAuthorHighlightsIfNeeded;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameOfCellForColumnTextView:(id)arg1 row:(id)arg2;
- (id)headerClipView;
- (void)hideColumnRowButtons;
- (id)htmlDataForSelection;
- (id)icTableDataForSelection;
- (id)icTableDataFromPasteboard;
- (id)icTableFromPasteboard;
- (void)ic_makeFirstResponder:(id)arg1;
- (void)ic_resignFirstResponder:(id)arg1;
- (void)indentByamount:(long long)arg1;
- (id)initWithTextAttachment:(id)arg1 forManualRendering:(bool)arg2 layoutManager:(id)arg3;
- (id)initWithTextAttachment:(id)arg1 forManualRendering:(bool)arg2 textLayoutManager:(id)arg3;
- (struct CGPoint { double x1; double x2; })initialDragOffset;
- (void)initializeTableAccessibilityControllerIfNecessary;
- (void)initializeTableLayout;
- (id)inputAccessoryView;
- (id)inputView;
- (id)insertColumns:(unsigned long long)arg1 atIndex:(unsigned long long)arg2;
- (struct CGSize { double x1; double x2; })intrinsicSize;
- (bool)isInResponderChain;
- (bool)isNoteEditable;
- (bool)isPerformingInitialLayout;
- (bool)isShowingTextStyleOptions;
- (bool)isUpdatingTiles;
- (unsigned long long)lastDraggedOverColumnOrRowIndex;
- (void)loadView;
- (bool)lockSelection;
- (void)makeDelegateOfTextView:(id)arg1;
- (bool)makeSpaceToPasteSourceTable:(id)arg1;
- (bool)makingCellFirstResponder;
- (void)moveCurrentColumnOrRow:(bool)arg1 toIndex:(unsigned long long)arg2;
- (void)moveDownCell;
- (void)moveDownCellAtLocation:(unsigned long long)arg1;
- (void)moveIntoTableWithDirection:(unsigned long long)arg1;
- (void)moveLeftCell;
- (void)moveNextCell;
- (void)moveNextCellAtLocation:(unsigned long long)arg1;
- (void)moveNextLineAtLocation:(unsigned long long)arg1;
- (void)movePrevCell;
- (void)movePrevCellAtLocation:(unsigned long long)arg1;
- (void)moveReturnCell;
- (void)moveRightCell;
- (void)moveShiftReturnCell;
- (void)moveTabCell;
- (void)moveUpCell;
- (void)moveUpCellAtLocation:(unsigned long long)arg1;
- (id)namedStylesForCurrentSelectionAndBIUS:(unsigned long long*)arg1;
- (id)note;
- (id)noteLayoutManager;
- (id)noteScrollView;
- (void)noteShowsAuthorHighlightsDidChange:(id)arg1;
- (id)noteTextLayoutManager;
- (id)noteTextView;
- (id)notesDataFromPasteboard;
- (bool)pasteCellRange;
- (void)pasteIntoSelection:(id)arg1;
- (void)pasteTable:(id)arg1 atColumnIndex:(unsigned long long)arg2 rowIndex:(unsigned long long)arg3 shouldSetSelectionToPastedRange:(bool)arg4;
- (id)pasteboardItemsForSelection;
- (void)performInitialLayoutIfNeeded;
- (bool)performedInitialLayout;
- (id)plainTextDataForSelection;
- (void)postChangeNotification:(unsigned long long)arg1 columnOrRowUUIDs:(id)arg2;
- (unsigned long long)preferredNavigationSelection;
- (void)prepareForPrinting;
- (bool)preventScrolling;
- (id)previousAXTableSelection;
- (double)previousAvailableWidth;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })proposedLineFragmentRect;
- (id)rangeSelectionAnchorColumn;
- (id)rangeSelectionAnchorRow;
- (id)rectsForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 inFindableString:(id)arg2;
- (void)redraw;
- (void)redrawAndSave;
- (void)removeFromParentViewController;
- (void)replaceCharactersInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 withString:(id)arg2 inFindableString:(id)arg3;
- (bool)resignFirstResponderForAuxStyling;
- (void)reverseTableColumnDirection:(id)arg1;
- (id)rowButton;
- (id)rowHeightCache;
- (id)rowsBeforeMerge;
- (void)save;
- (void)saveAfterDelay;
- (void)saveAttachmentChanges;
- (void)saveAttachmentChangesInBackground:(bool)arg1;
- (void)saveOnMainThread;
- (void)scrollToCaretIfNeededForTextView:(id)arg1;
- (void)scrollToRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 inFindableString:(id)arg2;
- (void)scrollToRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (void)scrollToSelectionInTextView:(id)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (id)scrollView;
- (double)scrollerOutset;
- (void)selectCurrentColumnForAccessibility;
- (void)selectCurrentRowForAccessibility;
- (void)selectTable;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })selectedRangeWithinRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 inFindableString:(id)arg2;
- (unsigned long long)selectedStyleBIUS;
- (id)selectedStyles;
- (void)selectionDidResignFirstResponder:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })selectionFrameFromContentFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)selectionHighlightView;
- (void)selectionWillBecomeFirstResponder:(id)arg1;
- (void)setCellTimestampsBeforeMerge:(id)arg1;
- (void)setColumnButton:(id)arg1;
- (void)setColumnWidthCache:(id)arg1;
- (void)setCurrentDragGestureLocation:(struct CGPoint { double x1; double x2; })arg1;
- (void)setCurrentDragIndex:(unsigned long long)arg1;
- (void)setCurrentlyEditingTextStorage:(id)arg1;
- (void)setCurrentlyEditingTextView:(id)arg1;
- (void)setDidRecentlyAutoAddRow:(bool)arg1;
- (void)setDragView:(id)arg1;
- (void)setDraggingAppearance:(id)arg1;
- (void)setEditingCount:(unsigned long long)arg1;
- (void)setFeedbackGenerator:(id)arg1;
- (void)setHidden:(bool)arg1 forColumn:(id)arg2;
- (void)setHidden:(bool)arg1 forRow:(id)arg2;
- (void)setHighlightColor:(id)arg1;
- (void)setHighlightPatternRegexFinder:(id)arg1;
- (void)setInitialDragOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)setInputAccessoryView:(id)arg1;
- (void)setInputView:(id)arg1;
- (void)setIsPerformingInitialLayout:(bool)arg1;
- (void)setLastDraggedOverColumnOrRowIndex:(unsigned long long)arg1;
- (void)setLockSelection:(bool)arg1;
- (void)setMakingCellFirstResponder:(bool)arg1;
- (void)setNeedsSave;
- (void)setNoteLayoutManager:(id)arg1;
- (void)setNoteTextLayoutManager:(id)arg1;
- (void)setPerformedInitialLayout:(bool)arg1;
- (void)setPreventScrolling:(bool)arg1;
- (void)setPreviousAXTableSelection:(id)arg1;
- (void)setPreviousAvailableWidth:(double)arg1;
- (void)setProposedLineFragmentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setRangeSelectionAnchorColumn:(id)arg1;
- (void)setRangeSelectionAnchorRow:(id)arg1;
- (void)setRowButton:(id)arg1;
- (void)setRowHeightCache:(id)arg1;
- (void)setScrollView:(id)arg1;
- (void)setSelectedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 inFindableString:(id)arg2;
- (void)setSelectionAlignment:(long long)arg1;
- (void)setSelectionBIUSStyle:(unsigned long long)arg1 toggleOn:(bool)arg2;
- (void)setSelectionBIUSStyle:(unsigned long long)arg1 toggleOn:(bool)arg2 withColumns:(id)arg3 rows:(id)arg4;
- (void)setSelectionDirection:(long long)arg1;
- (void)setSelectionNamedStyle:(unsigned int)arg1;
- (void)setSelectionNamedStyle:(unsigned int)arg1 withColumns:(id)arg2 rows:(id)arg3;
- (void)setShouldBeginInitialEditing:(bool)arg1;
- (void)setShouldPreventUndoCommands:(bool)arg1;
- (void)setStringSelectionBeforeDrag:(id)arg1;
- (void)setStringSelectionBeforeMerge:(id)arg1;
- (void)setTableAXController:(id)arg1;
- (void)setTableAutoScroller:(id)arg1;
- (void)setTableSelection:(id)arg1;
- (void)setTableSelectionBeforeMerge:(id)arg1;
- (void)setTextStyleForCurrentSelection:(unsigned int)arg1;
- (void)setTransitionViewport:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setTypingAttributesForTextView:(id)arg1;
- (void)setUndoCommands:(id)arg1;
- (void)setUpdatingTiles:(bool)arg1;
- (void)setupEventHandling;
- (void)setupTableTextView:(id)arg1;
- (void)shareTable:(id)arg1;
- (bool)shouldBeginInitialEditing;
- (bool)shouldPreventUndoCommands;
- (void)showButtonsAtColumns:(id)arg1 rows:(id)arg2;
- (void)showColumnRowButtons;
- (id)soloPlainTextStringFromPasteboard;
- (void)speakAccessibilityAnnouncementForMoveToCellWithColumnID:(id)arg1 rowID:(id)arg2;
- (void)speakAccessibilityExitedTableAnnouncementAndDidRemoveRow:(bool)arg1;
- (id)startKnob;
- (id)stringSelectionBeforeDrag;
- (id)stringSelectionBeforeMerge;
- (id)table;
- (id)tableAXController;
- (void)tableAttachmentDidChange;
- (id)tableAttachmentProvider;
- (void)tableAttachmentProviderDidMergeTable:(id)arg1;
- (void)tableAttachmentProviderWillMergeTable:(id)arg1;
- (void)tableAttachmentSaveOnMainThread;
- (void)tableAttachmentSelectionDidChange:(id)arg1;
- (void)tableAttachmentViewControllerDidChange:(id)arg1;
- (void)tableAttachmentWillChange;
- (id)tableAutoScroller;
- (void)tableAutoScroller:(id)arg1 scrollOffsetDelta:(struct CGPoint { double x1; double x2; })arg2;
- (id)tableContentView;
- (void)tableDidCreateColumnTextStorage:(id)arg1;
- (void)tableDidInsertColumnID:(id)arg1;
- (void)tableDidPopulateCellAtColumnIndex:(unsigned long long)arg1 rowIndex:(unsigned long long)arg2;
- (id)tableLayoutManager;
- (id)tableSelection;
- (id)tableSelectionBeforeMerge;
- (void)tableValueDidChangeAtColumnID:(id)arg1 rowID:(id)arg2 delta:(long long)arg3;
- (void)tableWillRemoveColumnID:(id)arg1;
- (void)tappedTableAtLocation:(struct CGPoint { double x1; double x2; })arg1;
- (long long)textAlignmentForCurrentSelection;
- (long long)textDirectionForCurrentSelection;
- (void)textRangeDragEnded;
- (void)textRangeDraggedAtLocation:(struct CGPoint { double x1; double x2; })arg1;
- (void)textStorage:(id)arg1 didProcessEditing:(unsigned long long)arg2 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3 changeInLength:(long long)arg4;
- (void)textStorage:(id)arg1 didReplace:(id)arg2 with:(id)arg3;
- (id)textViewManager;
- (void)toggleBIUS:(unsigned long long)arg1;
- (void)toggleBoldface:(id)arg1;
- (void)toggleItalics:(id)arg1;
- (void)toggleStrikethrough:(id)arg1;
- (void)toggleTodoStyle:(id)arg1;
- (void)toggleUnderline:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })transitionViewport;
- (id)undoCommands;
- (id)undoManager;
- (id)undoTarget;
- (void)unselectColumnRow;
- (bool)updateAllColumnWidths;
- (void)updateAllColumnWidthsAndRedraw;
- (void)updateAttachmentParagraphForWritingDirection:(long long)arg1;
- (void)updateAvailableWidth;
- (void)updateButtonFrames;
- (void)updateCellSizeAtColumn:(id)arg1 row:(id)arg2 immediateWidthUpdate:(bool)arg3;
- (void)updateChrome;
- (void)updateColumnWidthForColumn:(id)arg1;
- (void)updateContentSize;
- (bool)updateEditedColumnWidths;
- (void)updateEditedColumnWidthsAfterDelay;
- (void)updateHeightCacheForColumn:(id)arg1 row:(id)arg2;
- (void)updateTableCellsWithDirection:(long long)arg1 columnIndexes:(id)arg2 rowIndexes:(id)arg3;
- (void)updateTableColumnDirectionForWritingDirection:(long long)arg1;
- (void)updateTiles;
- (void)updateWidthsForChangeInColumn:(id)arg1;
- (id)viewController;
- (id)viewForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 inFindableString:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })viewport;
- (id)visibleEmptyCellsBeforeMerge;
- (bool)wantsUndoCommands;
- (id)webArchiveDataForSelection;
- (void)willAddRow;
- (void)willBeginEditingWithTextView:(id)arg1;
- (void)willFlashAuthorHighlights;
- (void)zoomFactorOrInsetsDidChange;

@end
