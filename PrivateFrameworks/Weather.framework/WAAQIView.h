
@interface WAAQIView : UIView {
    UILabel * _airQualityMetadataGradeLabel;
    UILabel * _airQualityRecommendationLabel;
    UILabel * _aqiAgencyLabel;
    UILabel * _aqiCategoryLabel;
    UILabel * _aqiCitationLabel;
    UILabel * _aqiIndexLabel;
    UILabel * _aqiLabel;
    WAAQIScaleView * _aqiScaleView;
    WAAQIAttributionStringBuilder * _attributionStringBuilder;
    City * _city;
    UILabel * _dash;
    <WAAQIViewDelegate> * _delegate;
    bool  _forceHideThisEntireView;
    bool  _hideCitationString;
    bool  _hideRecommendationString;
    bool  _initialized;
    unsigned long long  _layoutMode;
    WAAQIViewStyler * _styler;
}

@property (nonatomic, retain) UILabel *airQualityMetadataGradeLabel;
@property (nonatomic, retain) UILabel *airQualityRecommendationLabel;
@property (nonatomic, retain) UILabel *aqiAgencyLabel;
@property (nonatomic, retain) UILabel *aqiCategoryLabel;
@property (nonatomic, retain) UILabel *aqiCitationLabel;
@property (nonatomic, retain) UILabel *aqiIndexLabel;
@property (nonatomic, retain) UILabel *aqiLabel;
@property (nonatomic, retain) WAAQIScaleView *aqiScaleView;
@property (nonatomic, retain) WAAQIAttributionStringBuilder *attributionStringBuilder;
@property (nonatomic, retain) City *city;
@property (nonatomic, retain) UILabel *dash;
@property (nonatomic) <WAAQIViewDelegate> *delegate;
@property (nonatomic) bool forceHideThisEntireView;
@property (nonatomic) bool hideCitationString;
@property (nonatomic) bool hideRecommendationString;
@property (nonatomic) bool initialized;
@property (nonatomic) unsigned long long layoutMode;
@property (nonatomic, retain) WAAQIViewStyler *styler;

+ (id)createWeatherLabelWithLightColor:(bool)arg1;

- (void).cxx_destruct;
- (bool)accessibilityElementsHidden;
- (id)accessibilityLabel;
- (id)accessibilityValue;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })adjustedFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 basedOnFont:(id)arg2 desiredBaseline:(double)arg3;
- (id)airQualityMetadataGradeLabel;
- (id)airQualityRecommendationLabel;
- (id)aqiAgencyLabel;
- (id)aqiCategoryLabel;
- (id)aqiCitationLabel;
- (id)aqiIndexLabel;
- (id)aqiLabel;
- (id)aqiScaleView;
- (id)attributionStringBuilder;
- (id)city;
- (double)contentMarginFromTop;
- (id)currentScaleCategoryLabelForCity:(id)arg1;
- (id)dash;
- (id)delegate;
- (id)drawableScaleForCity:(id)arg1;
- (bool)forceHideThisEntireView;
- (void)handleTapGesture:(id)arg1;
- (bool)hideCitationString;
- (void)hideEverything;
- (bool)hideRecommendationString;
- (void)initialize;
- (bool)initialized;
- (bool)isAccessibilityElement;
- (void)layoutForCompactModeWithScaleInPlatterView:(bool)arg1;
- (void)layoutForExtendedModeWithScale;
- (void)layoutForModeAQITemporarilyUnavailable;
- (void)layoutForModeWithoutScale;
- (void)layoutForTwoLinesLayoutWithScaleInPlatterView:(bool)arg1;
- (unsigned long long)layoutMode;
- (void)layoutSubviews;
- (id)metadataLabelForCity:(id)arg1;
- (void)prepareForReuse;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rtlAdjustFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (id)scaleDisplayNameForCity:(id)arg1;
- (void)setAirQualityMetadataGradeLabel:(id)arg1;
- (void)setAirQualityRecommendationLabel:(id)arg1;
- (void)setAqiAgencyLabel:(id)arg1;
- (void)setAqiCategoryLabel:(id)arg1;
- (void)setAqiCitationLabel:(id)arg1;
- (void)setAqiIndexLabel:(id)arg1;
- (void)setAqiLabel:(id)arg1;
- (void)setAqiScaleView:(id)arg1;
- (void)setAttributionStringBuilder:(id)arg1;
- (void)setCity:(id)arg1;
- (void)setDash:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setForceHideThisEntireView:(bool)arg1;
- (void)setHideCitationString:(bool)arg1;
- (void)setHideRecommendationString:(bool)arg1;
- (void)setInitialized:(bool)arg1;
- (void)setLayoutMode:(unsigned long long)arg1;
- (void)setStyler:(id)arg1;
- (void)setupForLayoutCompactScaleViewOneLinePlatterView:(bool)arg1;
- (void)setupForLayoutCompactScaleViewTwoLinesPlatterView:(bool)arg1;
- (void)setupForLayoutExtendedNoScaleView;
- (void)setupForLayoutExtendedScaleView;
- (void)setupForLayoutTemporarilyUnavailable;
- (bool)shouldInsertGlyphImage:(id)arg1;
- (struct CGSize { double x1; double x2; })sizeForAQIAvailableThatFits:(struct CGSize { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })sizeForAQITemporarilyUnavailableThatFits:(struct CGSize { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })sizeForCompactOneLineLayoutWithScaleViewThatFits:(struct CGSize { double x1; double x2; })arg1 platterView:(bool)arg2;
- (struct CGSize { double x1; double x2; })sizeForExtendedLayoutWithScaleViewThatFits:(struct CGSize { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })sizeForLayoutWithoutScaleViewThatFits:(struct CGSize { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })sizeForTwoLineLayoutWithScaleViewTheFits:(struct CGSize { double x1; double x2; })arg1 platterView:(bool)arg2;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (id)styler;
- (void)updateWithCity:(id)arg1 layoutMode:(unsigned long long)arg2;

@end
