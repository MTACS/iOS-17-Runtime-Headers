
@interface AVAudioSession : NSObject {
    void * _impl;
}

@property (readonly) bool allowHapticsAndSystemSoundsDuringRecording;
@property (nonatomic, readonly) NSArray *availableCategories;
@property (readonly) NSArray *availableModes;
@property (readonly) NSString *category;
@property (readonly) unsigned long long categoryOptions;
@property (nonatomic) unsigned long long currentFeature;
@property (nonatomic, readonly) NSString *description;
@property (readonly) bool isPrimary;
@property (readonly) NSString *mode;
@property (readonly) AVAudioSessionPortDescription *preferredInput;
@property (nonatomic, readonly) bool prefersNoInterruptionsFromSystemAlerts;
@property (readonly) unsigned long long recordPermission;
@property (readonly) unsigned long long routeSharingPolicy;
@property (nonatomic, readonly) NSArray *smu_playbackRoutes;

// Image: /System/Library/PrivateFrameworks/AudioSession.framework/AudioSession

+ (id)auxiliarySession;
+ (bool)categoryEnablesInput:(id)arg1;
+ (id)primarySession;
+ (id)retrieveSessionWithID:(unsigned int)arg1;
+ (id)sharedInstance;

- (double)IOBufferDuration;
- (unsigned long long)IOBufferFrameSize;
- (id)IOController;
- (void)activateWithOptions:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (id)activeAudioRoute;
- (id)activeSessionDisplayIDs;
- (void)addCategoryOptionsToDictionary:(id)arg1 category:(id)arg2 options:(unsigned long long)arg3;
- (id)addObserverForType:(unsigned long long)arg1 name:(id)arg2 block:(id /* block */)arg3;
- (bool)allowAllBuiltInDataSources;
- (bool)allowHapticsAndSystemSoundsDuringRecording;
- (bool)allowMixableAudioWhileRecording;
- (id)audioClockDevice;
- (long long)audioFormat;
- (id)audioFormats;
- (id)auditTokensForProcessAssertion;
- (id)autorelease;
- (id)availableCategories;
- (id)availableInputs;
- (id)availableModes;
- (id)availableOutputs;
- (id)category;
- (unsigned long long)categoryOptions;
- (bool)clearInputPreferences:(id*)arg1;
- (id)consolidatedSourceContentInfo;
- (long long)currentHardwareInputNumberOfChannels;
- (long long)currentHardwareOutputNumberOfChannels;
- (double)currentHardwareSampleRate;
- (id)currentRoute;
- (bool)deactivateAndSetInterruptionPriority:(long long)arg1 error:(id*)arg2;
- (void)dealloc;
- (bool)decoupledIO;
- (id)decoupledInputIOController;
- (float)defaultCalibratedOutputSPL;
- (id)defaultChatMode;
- (id)delegate;
- (bool)eligibleForBTSmartRoutingConsideration;
- (bool)eligibleForBTTriangleConsideration;
- (bool)enableNotifications:(bool)arg1 error:(id*)arg2;
- (bool)fixHardwareFormatToMultiChannel:(bool)arg1 error:(id*)arg2;
- (bool)forceSoundCheck;
- (bool)getInputAvailable;
- (id)getMXProperties:(id)arg1 propertyErrors:(id*)arg2;
- (id)getMXSessionProperty:(id)arg1 error:(id*)arg2;
- (void)handleMediaDaemonTerminationEvent:(int)arg1 daemonName:(id)arg2;
- (bool)handleRemoteInterruption:(id)arg1 postInterruptionNotification:(bool)arg2 error:(id*)arg3;
- (float)hapticThermalGain;
- (id)hostProcessAttribution;
- (bool)iAmTheAssistant;
- (bool)inhibitSpeechDetection;
- (id)init;
- (id)initAuxiliarySession;
- (id)initSiblingSession:(unsigned int)arg1 auditToken:(struct { unsigned int x1[8]; })arg2 clientIdentifier:(id)arg3;
- (id)initWithSessionID:(unsigned int)arg1;
- (id)initWithSessionType:(unsigned int)arg1;
- (id)initWithSiriEndpointIdentifier:(id)arg1;
- (id)initWithSpecification:(id)arg1;
- (id)inputDataSource;
- (id)inputDataSources;
- (float)inputGain;
- (bool)inputIsAvailable;
- (double)inputLatency;
- (long long)inputNumberOfChannels;
- (long long)inputOrientation;
- (double)inputSafetyOffset;
- (double)inputSampleRate;
- (id)inputTimeObserver;
- (long long)interruptionPriority;
- (bool)isActive;
- (bool)isDolbyAtmosAvailable;
- (bool)isDolbyDigitalEncoderAvailable;
- (bool)isEarpieceActiveNoiseCancelationEnabled;
- (bool)isExpanseMediaSession;
- (bool)isHardwareFormatFixedToMultiChannel;
- (bool)isInputAvailable;
- (bool)isInputGainSettable;
- (bool)isNowPlayingCandidate;
- (bool)isOtherAudioPlaying;
- (bool)isPiPAvailable;
- (bool)isPrimary;
- (bool)isRelatedSession:(id)arg1;
- (bool)isRelatedSessionID:(unsigned int)arg1;
- (bool)isSessionInputMuted;
- (bool)lastActivationStoppedNowPlayingApp;
- (long long)maximumInputNumberOfChannels;
- (long long)maximumOutputNumberOfChannels;
- (id)mode;
- (bool)muteSessionInput:(bool)arg1 error:(id*)arg2;
- (bool)needsHighPowerBudgeting;
- (unsigned int)opaqueSessionID;
- (id)outputDataSource;
- (id)outputDataSources;
- (double)outputLatency;
- (long long)outputNumberOfChannels;
- (double)outputSafetyOffset;
- (double)outputSampleRate;
- (id)outputTimeObserver;
- (float)outputVolume;
- (bool)overrideOutputAudioPort:(unsigned long long)arg1 error:(id*)arg2;
- (bool)participatesInMutePriority;
- (bool)participatesInNowPlayingAppPolicy;
- (bool)participatesInVolumePolicy;
- (id)pickedRoute;
- (id)powerBudget;
- (id)powerProfile;
- (bool)preferDecoupledIO:(bool)arg1 error:(id*)arg2;
- (double)preferredHardwareSampleRate;
- (double)preferredIOBufferDuration;
- (unsigned long long)preferredIOBufferFrameSize;
- (id)preferredInput;
- (long long)preferredInputNumberOfChannels;
- (long long)preferredInputOrientation;
- (double)preferredInputSampleRate;
- (long long)preferredOutputNumberOfChannels;
- (double)preferredOutputSampleRate;
- (id)preferredPersistentInputUIDs;
- (id)preferredPersistentOutputUIDs;
- (double)preferredSampleRate;
- (bool)prefersAggressiveCaching;
- (bool)prefersInterruptionOnRouteDisconnect;
- (bool)prefersMultichannelAudio;
- (bool)prefersNoDucking;
- (bool)prefersNoInterruptionsByRingtonesAndAlerts;
- (bool)prefersNoInterruptionsFromSystemAlerts;
- (bool)prefersNoMicrophoneUsageIndicator;
- (bool)prefersToAcquireHWControlFromOtherSessions;
- (bool)prefersToVibeWhenVibrationsAreDisabled;
- (bool)privateAllowsLongFormRoutingToSpeaker;
- (bool)privateCreateSessionInServerUsingXPC;
- (void)privateDispatchPing;
- (id)privateGetBatchPropertiesFromMXSession:(id)arg1 propertyErrors:(id*)arg2;
- (long long)privateGetCachedReporterID;
- (id)privateGetDataSources:(bool)arg1;
- (void*)privateGetImplementation;
- (struct shared_ptr<AVAudioSessionNotificationState> { struct AVAudioSessionNotificationState {} *x1; struct __shared_weak_count {} *x2; })privateGetNotificationStateForType:(unsigned long long)arg1 create:(bool)arg2;
- (id)privateGetSelectedDataSource:(bool)arg1;
- (void)privateHandleAvailableSampleRatesChange;
- (void)privateHandleBeaconBudgetChange:(id)arg1;
- (void)privateHandleOtherPrimaryAudioPlayStateChange;
- (void)privateHandlePickableRoutesChange;
- (void)privateHandlePing;
- (void)privateHandleRoutingContextChange;
- (void)privateHandleSecondaryAudioHintChange:(id)arg1;
- (void)privateInputIsAvailableChanged:(bool)arg1;
- (void)privateInterruptionWithInfo:(id)arg1;
- (id)privateMakePreferredPersistentRouteDictWithInputUIDs:(id)arg1 outputUIDs:(id)arg2;
- (void)privateMarkKVOPropertiesDirty:(unsigned long long)arg1;
- (bool)privateNeedsTranslationForNoSpeakerCategory:(id)arg1;
- (void)privatePostNotificationForType:(unsigned long long)arg1 name:(id)arg2 userInfo:(id)arg3;
- (id)privateReadPreferredPersistentRoute;
- (bool)privateRecreateSessionInServerUsingXPC;
- (id)privateRefreshAvailableInputs;
- (id)privateRefreshAvailableOutputs;
- (unsigned char)privateRegisterMXNotificationWithServer:(id)arg1;
- (bool)privateRequiresWatchOSRoutePicker:(unsigned long long)arg1;
- (void)privateResetCachedPropertyValues;
- (void)privateSetAllowsLongFormRoutingToSpeaker:(bool)arg1;
- (int)privateSetBatchProperties:(id)arg1 areMXProperties:(bool)arg2;
- (int)privateSetBatchPropertiesOnMXSession:(id)arg1 outPropertiesErrors:(id*)arg2;
- (int)privateSetCategoryWithOptions:(id)arg1 modes:(id)arg2 routeSharingPolicy:(unsigned long long)arg3 options:(unsigned long long)arg4;
- (int)privateSetProperty:(id)arg1 value:(id)arg2 isMXProperty:(bool)arg3;
- (bool)privateSetRouteSharingPolicy:(unsigned long long)arg1 error:(id*)arg2;
- (void)privateUpdateAudioFormat:(id)arg1;
- (void)privateUpdateAudioFormats:(id)arg1;
- (void)privateUpdateDataSources:(id)arg1 forInput:(bool)arg2;
- (void)privateUpdateInputAvailable;
- (void)privateUpdateInputChannelCount:(id)arg1;
- (void)privateUpdateInputGain:(id)arg1;
- (void)privateUpdateOutputChannelCount:(id)arg1;
- (void)privateUpdateOutputVolume:(id)arg1 forVolumeCategory:(id)arg2 volumeMode:(id)arg3;
- (void)privateUpdatePiPAvailabilityChange:(id)arg1;
- (void)privateUpdatePromptStyle:(id)arg1;
- (void)privateUpdateReporterIDs:(id)arg1;
- (void)privateUpdateSpeechDetectionStyle:(id)arg1;
- (unsigned long long)promptStyle;
- (unsigned long long)recordPermission;
- (bool)recordingFromRemoteInput;
- (oneway void)release;
- (void)removeObserverForType:(unsigned long long)arg1 observer:(id)arg2 name:(id)arg3;
- (long long)reporterID;
- (void)requestRecordPermission:(id /* block */)arg1;
- (bool)requiresNoAudioResources;
- (id)retain;
- (unsigned long long)retainCount;
- (unsigned long long)routeSharingPolicy;
- (id)routingContextUID;
- (double)sampleRate;
- (bool)secondaryAudioShouldBeSilencedHint;
- (bool)selectIndependentRoutingContext:(id*)arg1;
- (unsigned long long)sessionType;
- (bool)setActivationContext:(id)arg1 error:(id*)arg2;
- (bool)setActive:(bool)arg1 error:(id*)arg2;
- (bool)setActive:(bool)arg1 withFlags:(long long)arg2 error:(id*)arg3;
- (bool)setActive:(bool)arg1 withOptions:(unsigned long long)arg2 error:(id*)arg3;
- (bool)setAggregatedIOPreference:(unsigned long long)arg1 error:(id*)arg2;
- (void)setAllowAllBuiltInDataSources:(bool)arg1;
- (bool)setAllowHapticsAndSystemSoundsDuringRecording:(bool)arg1 error:(id*)arg2;
- (bool)setAllowMixableAudioWhileRecording:(bool)arg1 error:(id*)arg2;
- (bool)setAudioClockDevice:(id)arg1 error:(id*)arg2;
- (bool)setAudioHardwareControlFlags:(unsigned long long)arg1 error:(id*)arg2;
- (bool)setAuditTokensForProcessAssertion:(id)arg1 error:(id*)arg2;
- (bool)setBypassRingerSwitchPolicy:(bool)arg1 error:(id*)arg2;
- (bool)setCategory:(id)arg1 error:(id*)arg2;
- (bool)setCategory:(id)arg1 mode:(id)arg2 options:(unsigned long long)arg3 error:(id*)arg4;
- (bool)setCategory:(id)arg1 mode:(id)arg2 routeSharingPolicy:(unsigned long long)arg3 options:(unsigned long long)arg4 error:(id*)arg5;
- (bool)setCategory:(id)arg1 withOptions:(unsigned long long)arg2 error:(id*)arg3;
- (bool)setCategoryOptions:(unsigned long long)arg1 error:(id*)arg2;
- (bool)setDefaultChatMode:(id)arg1 error:(id*)arg2;
- (void)setDelegate:(id)arg1;
- (bool)setDisallowedPorts:(id)arg1 error:(id*)arg2;
- (bool)setDuckToLevelDB:(id)arg1 error:(id*)arg2;
- (bool)setDuckToLevelScalar:(id)arg1 error:(id*)arg2;
- (bool)setDuckToLevelScalar:(id)arg1 unduckToLevelScalar:(id)arg2 error:(id*)arg3;
- (bool)setDuckingFadeOutDuration:(id)arg1 fadeInDuration:(id)arg2 error:(id*)arg3;
- (bool)setEligibleForBTSmartRoutingConsideration:(bool)arg1 error:(id*)arg2;
- (bool)setEligibleForBTTriangleConsideration:(bool)arg1 error:(id*)arg2;
- (bool)setForceSoundCheck:(bool)arg1 error:(id*)arg2;
- (bool)setHapticThermalGain:(float)arg1 error:(id*)arg2;
- (bool)setHostProcessAttribution:(id)arg1 error:(id*)arg2;
- (bool)setIAmTheAssistant:(bool)arg1 error:(id*)arg2;
- (bool)setInhibitSpeechDetection:(bool)arg1 error:(id*)arg2;
- (bool)setInputDataSource:(id)arg1 error:(id*)arg2;
- (bool)setInputGain:(float)arg1 error:(id*)arg2;
- (bool)setInterruptionFadeDuration:(id)arg1 error:(id*)arg2;
- (bool)setInterruptionPriority:(long long)arg1 error:(id*)arg2;
- (bool)setIsExpanseMediaSession:(bool)arg1 error:(id*)arg2;
- (bool)setIsNowPlayingCandidate:(bool)arg1 error:(id*)arg2;
- (bool)setMXProperties:(id)arg1 propertyErrors:(id*)arg2;
- (bool)setMXSessionProperty:(id)arg1 value:(id)arg2 error:(id*)arg3;
- (bool)setMode:(id)arg1 error:(id*)arg2;
- (bool)setNeedsHighPowerBudgeting:(bool)arg1 error:(id*)arg2;
- (bool)setOutputDataSource:(id)arg1 error:(id*)arg2;
- (bool)setParticipatesInMutePriority:(bool)arg1 error:(id*)arg2;
- (bool)setParticipatesInNowPlayingAppPolicy:(bool)arg1 error:(id*)arg2;
- (bool)setParticipatesInVolumePolicy:(bool)arg1 error:(id*)arg2;
- (bool)setPowerProfile:(id)arg1 error:(id*)arg2;
- (bool)setPreferredHardwareSampleRate:(double)arg1 error:(id*)arg2;
- (bool)setPreferredIOBufferDuration:(double)arg1 error:(id*)arg2;
- (bool)setPreferredIOBufferFrameSize:(unsigned long long)arg1 error:(id*)arg2;
- (bool)setPreferredInput:(id)arg1 error:(id*)arg2;
- (bool)setPreferredInputNumberOfChannels:(long long)arg1 error:(id*)arg2;
- (bool)setPreferredInputOrientation:(long long)arg1 error:(id*)arg2;
- (bool)setPreferredInputSampleRate:(double)arg1 error:(id*)arg2;
- (bool)setPreferredOutputNumberOfChannels:(long long)arg1 error:(id*)arg2;
- (bool)setPreferredOutputSampleRate:(double)arg1 error:(id*)arg2;
- (bool)setPreferredPersistentInputUIDs:(id)arg1 outputUIDs:(id)arg2 error:(id*)arg3;
- (bool)setPreferredSampleRate:(double)arg1 error:(id*)arg2;
- (bool)setPrefersAggressiveCaching:(bool)arg1 error:(id*)arg2;
- (bool)setPrefersInterruptionOnRouteDisconnect:(bool)arg1 error:(id*)arg2;
- (bool)setPrefersMultichannelAudio:(bool)arg1 error:(id*)arg2;
- (bool)setPrefersNoDucking:(bool)arg1 error:(id*)arg2;
- (bool)setPrefersNoInterruptionsByRingtonesAndAlerts:(bool)arg1 error:(id*)arg2;
- (bool)setPrefersNoInterruptionsFromSystemAlerts:(bool)arg1 error:(id*)arg2;
- (bool)setPrefersNoMicrophoneUsageIndicator:(bool)arg1 error:(id*)arg2;
- (bool)setPrefersToAcquireHWControlFromOtherSessions:(bool)arg1 error:(id*)arg2;
- (bool)setPrefersToVibeWhenVibrationsAreDisabled:(bool)arg1 error:(id*)arg2;
- (bool)setRecordingFromRemoteInput:(bool)arg1 error:(id*)arg2;
- (bool)setReporterID:(long long)arg1 error:(id*)arg2;
- (bool)setRequiresNoAudioResources:(bool)arg1 error:(id*)arg2;
- (bool)setRoutingContextUID:(id)arg1 error:(id*)arg2;
- (bool)setSpeakerThermalGain:(float)arg1 error:(id*)arg2;
- (bool)setSupportsMultichannelContent:(bool)arg1 error:(id*)arg2;
- (bool)silenceOutput:(unsigned long long)arg1 error:(id*)arg2;
- (double)siriSpeechDetectionDeviceSampleRate;
- (unsigned int)sourceSessionID;
- (id)spatialPreferences;
- (id)spatialPreferences:(long long)arg1;
- (float)speakerThermalGain;
- (double)speechDetectionDeviceSampleRate;
- (unsigned long long)speechDetectionStyle;
- (bool)subscribeToNotifications:(id)arg1 error:(id*)arg2;
- (bool)supportsMultichannelContent;

// Image: /System/Library/Frameworks/AVKit.framework/AVKit

- (id)_externalPlaybackController;
- (void)prepareRouteSelectionForPlaybackFromBundleID:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)prepareRouteSelectionForPlaybackWithCompletionHandler:(id /* block */)arg1;

// Image: /System/Library/PrivateFrameworks/Announce.framework/Announce

+ (id)an_category;
+ (unsigned long long)an_categoryOptions;
+ (id)an_mode;

- (bool)an_configureForEndpointWithError:(id*)arg1;
- (bool)an_configureWithError:(id*)arg1;

// Image: /System/Library/PrivateFrameworks/AnnounceDaemon.framework/AnnounceDaemon

+ (id)audioSessionWithProxyAudioSessionID:(unsigned int)arg1 endpointID:(id)arg2 error:(id*)arg3;

// Image: /System/Library/PrivateFrameworks/HearingUtilities.framework/HearingUtilities

- (unsigned long long)currentFeature;
- (void)setActive:(bool)arg1 forFeature:(unsigned long long)arg2 error:(id*)arg3;
- (void)setCurrentFeature:(unsigned long long)arg1;

// Image: /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore

- (id)description;

// Image: /System/Library/PrivateFrameworks/SeymourUI.framework/SeymourUI

- (id)smu_playbackRoutes;

@end
