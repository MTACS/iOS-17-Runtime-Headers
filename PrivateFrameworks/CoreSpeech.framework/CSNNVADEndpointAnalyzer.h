
@interface CSNNVADEndpointAnalyzer : NSObject <CSEndpointAnalyzerImpl, SNResultsObserving> {
    unsigned long long  _activeChannel;
    unsigned long long  _anchorMachAbsTime;
    <CSAudioFileWriter> * _audioFileWriter;
    double  _automaticEndpointingSuspensionEndTime;
    AVAudioFormat * _currentRequestAudioFormat;
    unsigned long long  _currentRequestSampleRate;
    double  _delay;
    <CSEndpointAnalyzerDelegate> * _delegate;
    bool  _didEnterTwoshot;
    double  _endWaitTime;
    long long  _endpointMode;
    long long  _endpointStyle;
    bool  _finishedSkippingSamplesForVT;
    double  _firstAudioSampleSensorTimestamp;
    long long  _firstSampleId;
    unsigned long long  _framePosition;
    bool  _hasReportedFirstAudioSampleSensorTimestamp;
    <CSEndpointAnalyzerImplDelegate> * _implDelegate;
    double  _interspeechWaitTime;
    bool  _isAnchorTimeBuffered;
    bool  _isRequestTimeout;
    double  _lastEndOfVoiceActivityTime;
    double  _lastStartOfVoiceActivityTime;
    NSString * _mhId;
    double  _minimumDurationForEndpointer;
    double  _nnvadAudioOriginInMs;
    unsigned long long  _nnvadState;
    unsigned long long  _numSamplesProcessedBeforeAnchorTime;
    unsigned long long  _numSamplesReceived;
    unsigned long long  _numSamplesSkippedForVT;
    NSObject<OS_dispatch_queue> * _queue;
    bool  _saveSamplesSeenInReset;
    bool  _shouldDetectTwoShot;
    SNAudioStreamAnalyzer * _snAudioStreamAnalyzer;
    double  _startWaitTime;
    unsigned long long  _vtEndInSampleCount;
    double  _vtEndInSecs;
    double  _vtExtraAudioAtStartInMs;
}

@property (nonatomic) unsigned long long activeChannel;
@property (nonatomic) unsigned long long anchorMachAbsTime;
@property (nonatomic, retain) <CSAudioFileWriter> *audioFileWriter;
@property (nonatomic) double automaticEndpointingSuspensionEndTime;
@property (nonatomic) double bypassSamples;
@property (nonatomic, readonly) bool canProcessCurrentRequest;
@property (nonatomic, retain) AVAudioFormat *currentRequestAudioFormat;
@property (nonatomic) unsigned long long currentRequestSampleRate;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) double delay;
@property (nonatomic) <CSEndpointAnalyzerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool didEnterTwoshot;
@property (nonatomic) double endWaitTime;
@property (nonatomic) long long endpointMode;
@property (nonatomic) long long endpointStyle;
@property (nonatomic, readonly) NSString *endpointerModelVersion;
@property (nonatomic) bool finishedSkippingSamplesForVT;
@property (nonatomic) double firstAudioSampleSensorTimestamp;
@property (nonatomic) long long firstSampleId;
@property (nonatomic) unsigned long long framePosition;
@property (nonatomic) bool hasReportedFirstAudioSampleSensorTimestamp;
@property (readonly) unsigned long long hash;
@property (nonatomic) <CSEndpointAnalyzerImplDelegate> *implDelegate;
@property (nonatomic) double interspeechWaitTime;
@property (nonatomic) bool isAnchorTimeBuffered;
@property (nonatomic) bool isRequestTimeout;
@property (nonatomic, readonly) double lastEndOfVoiceActivityTime;
@property (nonatomic, readonly) double lastStartOfVoiceActivityTime;
@property (nonatomic, retain) NSString *mhId;
@property (nonatomic) double minimumDurationForEndpointer;
@property (nonatomic) double nnvadAudioOriginInMs;
@property (nonatomic) unsigned long long nnvadState;
@property (nonatomic) unsigned long long numSamplesProcessedBeforeAnchorTime;
@property (nonatomic) unsigned long long numSamplesReceived;
@property (nonatomic) unsigned long long numSamplesSkippedForVT;
@property (nonatomic, readonly) double postVoiceTriggerSilence;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic) bool saveSamplesSeenInReset;
@property (nonatomic) bool shouldDetectTwoShot;
@property (nonatomic, retain) SNAudioStreamAnalyzer *snAudioStreamAnalyzer;
@property (nonatomic) double startWaitTime;
@property (readonly) Class superclass;
@property (nonatomic) unsigned long long vtEndInSampleCount;
@property (nonatomic) double vtEndInSecs;
@property (nonatomic) double vtExtraAudioAtStartInMs;

+ (id)timeStampString;

- (void).cxx_destruct;
- (void)_checkSNObservationForEndpoint:(id)arg1;
- (void)_checkSNObservationForStartpoint:(id)arg1;
- (double)_effectiveAudioTimeInSecsForSNObservation:(id)arg1;
- (void)_emitEndpointDetectedEventWithEndpointTime:(double)arg1 endpointBufferHostTime:(unsigned long long)arg2;
- (id)_pcmBufferForAudioChunk:(id)arg1;
- (void)_reportAudioFirstBufferInfoIfNecessary;
- (void)_reportEndpointAtTsInSecs:(double)arg1;
- (void)_reportStartpointAtTsInSecs:(double)arg1;
- (void)_reportTwoShotAtTsInSecs:(double)arg1;
- (bool)_shouldEnterTwoShotAtAudioTimeInSecs:(double)arg1;
- (double)_trailingSilenceDurationAtEndpoint;
- (unsigned long long)activeChannel;
- (unsigned long long)anchorMachAbsTime;
- (id)audioFileWriter;
- (double)automaticEndpointingSuspensionEndTime;
- (bool)canProcessCurrentRequest;
- (id)currentRequestAudioFormat;
- (unsigned long long)currentRequestSampleRate;
- (double)delay;
- (id)delegate;
- (bool)didEnterTwoshot;
- (double)endWaitTime;
- (long long)endpointMode;
- (long long)endpointStyle;
- (bool)finishedSkippingSamplesForVT;
- (double)firstAudioSampleSensorTimestamp;
- (long long)firstSampleId;
- (unsigned long long)framePosition;
- (void)getFirstAudioSampleSensorHostTimeWithReply:(id /* block */)arg1;
- (void)handleVoiceTriggerWithActivationInfo:(id)arg1;
- (bool)hasReportedFirstAudioSampleSensorTimestamp;
- (id)implDelegate;
- (id)init;
- (double)interspeechWaitTime;
- (bool)isAnchorTimeBuffered;
- (bool)isRequestTimeout;
- (double)lastEndOfVoiceActivityTime;
- (double)lastStartOfVoiceActivityTime;
- (id)mhId;
- (double)minimumDurationForEndpointer;
- (double)nnvadAudioOriginInMs;
- (unsigned long long)nnvadState;
- (unsigned long long)numSamplesProcessedBeforeAnchorTime;
- (unsigned long long)numSamplesReceived;
- (unsigned long long)numSamplesSkippedForVT;
- (void)preheat;
- (void)processAudioSamplesAsynchronously:(id)arg1;
- (id)queue;
- (void)recordingStoppedForReason:(long long)arg1;
- (void)request:(id)arg1 didFailWithError:(id)arg2;
- (void)request:(id)arg1 didProduceResult:(id)arg2;
- (void)reset;
- (void)resetForNewRequestWithSampleRate:(unsigned long long)arg1 recordContext:(id)arg2;
- (bool)saveSamplesSeenInReset;
- (void)setActiveChannel:(unsigned long long)arg1;
- (void)setAnchorMachAbsTime:(unsigned long long)arg1;
- (void)setAudioFileWriter:(id)arg1;
- (void)setAutomaticEndpointingSuspensionEndTime:(double)arg1;
- (void)setCurrentRequestAudioFormat:(id)arg1;
- (void)setCurrentRequestSampleRate:(unsigned long long)arg1;
- (void)setDelay:(double)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDidEnterTwoshot:(bool)arg1;
- (void)setEndWaitTime:(double)arg1;
- (void)setEndpointMode:(long long)arg1;
- (void)setEndpointStyle:(long long)arg1;
- (void)setFinishedSkippingSamplesForVT:(bool)arg1;
- (void)setFirstAudioSampleSensorTimestamp:(double)arg1;
- (void)setFirstSampleId:(long long)arg1;
- (void)setFramePosition:(unsigned long long)arg1;
- (void)setHasReportedFirstAudioSampleSensorTimestamp:(bool)arg1;
- (void)setImplDelegate:(id)arg1;
- (void)setInterspeechWaitTime:(double)arg1;
- (void)setIsAnchorTimeBuffered:(bool)arg1;
- (void)setIsRequestTimeout:(bool)arg1;
- (void)setMhId:(id)arg1;
- (void)setMinimumDurationForEndpointer:(double)arg1;
- (void)setNnvadAudioOriginInMs:(double)arg1;
- (void)setNnvadState:(unsigned long long)arg1;
- (void)setNumSamplesProcessedBeforeAnchorTime:(unsigned long long)arg1;
- (void)setNumSamplesReceived:(unsigned long long)arg1;
- (void)setNumSamplesSkippedForVT:(unsigned long long)arg1;
- (void)setQueue:(id)arg1;
- (void)setSaveSamplesSeenInReset:(bool)arg1;
- (void)setShouldDetectTwoShot:(bool)arg1;
- (void)setSnAudioStreamAnalyzer:(id)arg1;
- (void)setStartWaitTime:(double)arg1;
- (void)setVtEndInSampleCount:(unsigned long long)arg1;
- (void)setVtEndInSecs:(double)arg1;
- (void)setVtExtraAudioAtStartInMs:(double)arg1;
- (bool)shouldDetectTwoShot;
- (id)snAudioStreamAnalyzer;
- (double)startWaitTime;
- (void)stopEndpointer;
- (unsigned long long)vtEndInSampleCount;
- (double)vtEndInSecs;
- (double)vtExtraAudioAtStartInMs;

@end
