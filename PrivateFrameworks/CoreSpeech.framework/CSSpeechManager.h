
@interface CSSpeechManager : NSObject <CSActivationEventNotificationHandlerDelegate, CSAudioProviderDelegate, CSAudioRecorderDelegate, CSAudioServerCrashMonitorDelegate, CSOpportuneSpeakEventMonitorDelegate, CSVoiceTriggerAssetHandlerDelegate> {
    NSObject<OS_dispatch_queue> * _assetQueryQueue;
    NSMutableDictionary * _audioProviders;
    CSAudioRecorder * _audioRecorder;
    CSAudioTapProvider * _audioTapProvider;
    NSObject<OS_dispatch_source> * _clearLoggingFileTimer;
    long long  _clearLoggingFileTimerCount;
    <CSSpeechManagerDelegate> * _clientController;
    CSFallbackAudioSessionReleaseProvider * _fallbackAudioSessionReleaseProvider;
    CSKeywordDetector * _keywordDetector;
    CSMyriadPHash * _myriad;
    CSMyriadSelfTriggerCoordinator * _myriadSelfTriggerCoordinator;
    CSOpportuneSpeakListnerTestService * _opportuneSpeakListnerTestService;
    CSPostBuildInstallService * _postBuildInstallService;
    CSPreMyriadCoordinator * _preMyriadCoordinator;
    NSObject<OS_dispatch_queue> * _queue;
    CSSelfTriggerController * _selfTriggerController;
    CSSmartSiriVolumeManager * _ssvManager;
    CSBuiltInVoiceTrigger * _voiceTrigger;
    CSVoiceTriggerEventsCoordinator * _voiceTriggerEventsCoordinator;
    CSVoiceTriggerFidesClient * _voiceTriggerFidesClient;
    CSVoiceTriggerFileLogger * _voiceTriggerFileLogger;
    CSVoiceTriggerFirstPassHearst * _voiceTriggerFirstPassHearst;
    CSVoiceTriggerFirstPassHearstAP * _voiceTriggerFirstPassHearstAP;
    CSVoiceTriggerFirstPassJarvis * _voiceTriggerFirstPassJarvis;
    CSVoiceTriggerFirstPassJarvisAP * _voiceTriggerFirstPassJarvisAP;
    CSVoiceTriggerFirstPassRemora * _voiceTriggerFirstPassRemora;
    NSObject<OS_dispatch_queue> * _voiceTriggerQueue;
    CSVoiceProfileRetrainManager * _voiceTriggerRetrainer;
}

@property (nonatomic, retain) NSObject<OS_dispatch_queue> *assetQueryQueue;
@property (nonatomic, retain) NSMutableDictionary *audioProviders;
@property (nonatomic, retain) CSAudioRecorder *audioRecorder;
@property (nonatomic, retain) CSAudioTapProvider *audioTapProvider;
@property (nonatomic, retain) NSObject<OS_dispatch_source> *clearLoggingFileTimer;
@property (nonatomic) long long clearLoggingFileTimerCount;
@property (nonatomic) <CSSpeechManagerDelegate> *clientController;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) CSFallbackAudioSessionReleaseProvider *fallbackAudioSessionReleaseProvider;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) CSKeywordDetector *keywordDetector;
@property (nonatomic, retain) CSMyriadPHash *myriad;
@property (nonatomic, retain) CSMyriadSelfTriggerCoordinator *myriadSelfTriggerCoordinator;
@property (nonatomic, retain) CSOpportuneSpeakListnerTestService *opportuneSpeakListnerTestService;
@property (nonatomic, retain) CSPostBuildInstallService *postBuildInstallService;
@property (nonatomic, retain) CSPreMyriadCoordinator *preMyriadCoordinator;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, retain) CSSelfTriggerController *selfTriggerController;
@property (nonatomic, retain) CSSmartSiriVolumeManager *ssvManager;
@property (readonly) Class superclass;
@property (nonatomic, retain) CSBuiltInVoiceTrigger *voiceTrigger;
@property (nonatomic, retain) CSVoiceTriggerEventsCoordinator *voiceTriggerEventsCoordinator;
@property (nonatomic, retain) CSVoiceTriggerFidesClient *voiceTriggerFidesClient;
@property (nonatomic, retain) CSVoiceTriggerFileLogger *voiceTriggerFileLogger;
@property (nonatomic, retain) CSVoiceTriggerFirstPassHearst *voiceTriggerFirstPassHearst;
@property (nonatomic, retain) CSVoiceTriggerFirstPassHearstAP *voiceTriggerFirstPassHearstAP;
@property (nonatomic, retain) CSVoiceTriggerFirstPassJarvis *voiceTriggerFirstPassJarvis;
@property (nonatomic, retain) CSVoiceTriggerFirstPassJarvisAP *voiceTriggerFirstPassJarvisAP;
@property (nonatomic, retain) CSVoiceTriggerFirstPassRemora *voiceTriggerFirstPassRemora;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *voiceTriggerQueue;
@property (nonatomic, retain) CSVoiceProfileRetrainManager *voiceTriggerRetrainer;

+ (id)sharedManager;
+ (id)sharedManagerForCoreSpeechDaemon;

- (void).cxx_destruct;
- (void)CSAudioRouteChangeMonitor:(id)arg1 didReceiveAudioRouteChangeEvent:(long long)arg2;
- (void)CSAudioServerCrashMonitorDidReceiveServerRestart:(id)arg1;
- (void)_createClearLoggingFileTimer;
- (id)_getAudioRecorderWithError:(id*)arg1;
- (void)_getVoiceTriggerAssetIfNeeded:(id /* block */)arg1;
- (void)_handleClearLoggingFileTimer;
- (bool)_isAVVCRefChannelAvailable;
- (id)_myriadSelfTriggerCoordinatorIfNeeded:(bool)arg1;
- (id)_preMyriadCoordinatorCreateIfNeeded:(bool)arg1;
- (bool)_prepareForBluetoothDeviceWithDeviceType:(unsigned long long)arg1;
- (void)_prepareRemoraDeviceWithConnectedDeviceIds:(id)arg1;
- (void)_reinitializeSmartSiriVolumeWithAsset:(id)arg1;
- (void)_reinitializeVoiceTriggerIfNeeded;
- (void)_reinitializeVoiceTriggerWithAsset:(id)arg1;
- (void)_setupForBluetoothDeviceIfNeededWithDeviceType:(unsigned long long)arg1 prepareCompletion:(id /* block */)arg2 completion:(id /* block */)arg3;
- (void)_setupForHearstIfNeededWithPrepareCompletion:(id /* block */)arg1 completion:(id /* block */)arg2;
- (void)_setupForJarvisIfNeededWithPrepareCompletion:(id /* block */)arg1 completion:(id /* block */)arg2;
- (void)_setupForRemoraIfNeededWithCompletion:(id /* block */)arg1;
- (void)_setupSpeakerRecognitionWithVTAsset:(id)arg1;
- (void)_setupVoiceTriggerWithCompletion:(id /* block */)arg1;
- (bool)_shouldSetupSelfTrigger;
- (void)_startAllClients;
- (void)_startClearLoggingFilesTimer;
- (void)_startForBluetoothDeviceWithDeviceType:(unsigned long long)arg1 asset:(id)arg2;
- (void)_startVoiceTrigger;
- (void)_teardownForBluetoothDevice;
- (void)_updateBuiltInTriggerForPreMyriadIfNeeded:(id)arg1;
- (id)_voiceTriggerEventNotifierCreateIfNeeded:(bool)arg1;
- (id)_voiceTriggerFileLoggerCreateIfNeeded:(bool)arg1;
- (void)activationEventNotificationHandler:(id)arg1 event:(id)arg2 completion:(id /* block */)arg3;
- (id)assetQueryQueue;
- (id)audioFingerprintProvider;
- (void)audioProviderInvalidated:(id)arg1 streamHandleId:(unsigned long long)arg2;
- (id)audioProviderWithContext:(id)arg1 error:(id*)arg2;
- (id)audioProviderWithStreamID:(unsigned long long)arg1;
- (id)audioProviderWithUUID:(id)arg1;
- (id)audioProviders;
- (id)audioRecorder;
- (void)audioRecorderBufferAvailable:(id)arg1 audioStreamHandleId:(unsigned long long)arg2 buffer:(id)arg3;
- (void)audioRecorderBufferAvailable:(id)arg1 audioStreamHandleId:(unsigned long long)arg2 buffer:(id)arg3 remoteVAD:(id)arg4 atTime:(unsigned long long)arg5 arrivalTimestampToAudioRecorder:(unsigned long long)arg6 numberOfChannels:(int)arg7;
- (void)audioRecorderWillBeDestroyed:(id)arg1;
- (id)audioTapProvider;
- (id)clearLoggingFileTimer;
- (long long)clearLoggingFileTimerCount;
- (id)clientController;
- (void)dealloc;
- (id)fallbackAudioSessionReleaseProvider;
- (id)fetchFallbackAudioSessionReleaseProvider;
- (id)init;
- (id)keywordDetector;
- (id)myriad;
- (id)myriadSelfTriggerCoordinator;
- (void)opportuneSpeakEventMonitor:(id)arg1 didStreamStateChanged:(bool)arg2;
- (id)opportuneSpeakListnerTestService;
- (id)postBuildInstallService;
- (id)preMyriadCoordinator;
- (id)queue;
- (void)registerSiriClientProxy:(id)arg1;
- (void)registerSpeechController:(id)arg1;
- (id)selfTriggerController;
- (void)setAssetQueryQueue:(id)arg1;
- (void)setAudioProviders:(id)arg1;
- (void)setAudioRecorder:(id)arg1;
- (void)setAudioTapProvider:(id)arg1;
- (void)setClearLoggingFileTimer:(id)arg1;
- (void)setClearLoggingFileTimerCount:(long long)arg1;
- (void)setClientController:(id)arg1;
- (void)setFallbackAudioSessionReleaseProvider:(id)arg1;
- (void)setKeywordDetector:(id)arg1;
- (void)setMyriad:(id)arg1;
- (void)setMyriadSelfTriggerCoordinator:(id)arg1;
- (void)setOpportuneSpeakListnerTestService:(id)arg1;
- (void)setPostBuildInstallService:(id)arg1;
- (void)setPreMyriadCoordinator:(id)arg1;
- (void)setQueue:(id)arg1;
- (void)setSelfTriggerController:(id)arg1;
- (void)setSsvManager:(id)arg1;
- (void)setVoiceTrigger:(id)arg1;
- (void)setVoiceTriggerEventsCoordinator:(id)arg1;
- (void)setVoiceTriggerFidesClient:(id)arg1;
- (void)setVoiceTriggerFileLogger:(id)arg1;
- (void)setVoiceTriggerFirstPassHearst:(id)arg1;
- (void)setVoiceTriggerFirstPassHearstAP:(id)arg1;
- (void)setVoiceTriggerFirstPassJarvis:(id)arg1;
- (void)setVoiceTriggerFirstPassJarvisAP:(id)arg1;
- (void)setVoiceTriggerFirstPassRemora:(id)arg1;
- (void)setVoiceTriggerQueue:(id)arg1;
- (void)setVoiceTriggerRetrainer:(id)arg1;
- (id)ssvManager;
- (void)startManager;
- (id)voiceTrigger;
- (void)voiceTriggerAssetHandler:(id)arg1 endpointId:(id)arg2 didChangeCachedAsset:(id)arg3;
- (id)voiceTriggerEventsCoordinator;
- (id)voiceTriggerFidesClient;
- (id)voiceTriggerFileLogger;
- (id)voiceTriggerFirstPassHearst;
- (id)voiceTriggerFirstPassHearstAP;
- (id)voiceTriggerFirstPassJarvis;
- (id)voiceTriggerFirstPassJarvisAP;
- (id)voiceTriggerFirstPassRemora;
- (id)voiceTriggerQueue;
- (id)voiceTriggerRetrainer;

@end
