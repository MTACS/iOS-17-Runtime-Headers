
@interface CSSiriRecordingInfo : NSObject {
    double  _activationAlertStartTimestamp;
    long long  _audioAlertStyle;
    unsigned int  _audioSessionID;
    unsigned long long  _audioSessionSetActiveEndHostTime;
    <AFBluetoothDevice> * _bluetoothDevice;
    NSString * _codec;
    NSString * _destination;
    NSString * _deviceIdentifier;
    CSAudioRecordDeviceInfo * _deviceInfo;
    NSString * _dspStatus;
    unsigned long long  _estimatedSpeechEndHostTime;
    unsigned long long  _firstBufferHostTime;
    double  _firstBufferTimestamp;
    NSString * _headsetAddress;
    NSString * _headsetName;
    bool  _isDictation;
    bool  _isDucking;
    bool  _isEndAlertInfo;
    bool  _isFingerprintOnly;
    bool  _isSecureOfflineOnly;
    int  _mhSource;
    NSString * _modelName;
    NSString * _route;
    NSString * _source;
    long long  _speechEvent;
    double  _startRecordingTimestamp;
    bool  _triggeredTwoShotBorealis;
    NSDictionary * _voiceTriggerEventInfo;
}

@property (nonatomic, readonly) double activationAlertStartTimestamp;
@property (nonatomic, readonly) long long audioAlertStyle;
@property (nonatomic, readonly) unsigned int audioSessionID;
@property (nonatomic) unsigned long long audioSessionSetActiveEndHostTime;
@property (nonatomic, readonly) <AFBluetoothDevice> *bluetoothDevice;
@property (nonatomic, readonly) NSString *codec;
@property (nonatomic, readonly) bool codecIsNarrowband;
@property (nonatomic, readonly) NSString *destination;
@property (nonatomic, readonly) NSString *deviceIdentifier;
@property (nonatomic, readonly) CSAudioRecordDeviceInfo *deviceInfo;
@property (nonatomic, readonly) NSString *dspStatus;
@property (nonatomic, readonly) unsigned long long estimatedSpeechEndHostTime;
@property (nonatomic, readonly) unsigned long long firstBufferHostTime;
@property (nonatomic, readonly) double firstBufferTimestamp;
@property (nonatomic, readonly) NSString *headsetAddress;
@property (nonatomic, readonly) NSString *headsetName;
@property (nonatomic, readonly) bool isBluetooth;
@property (nonatomic, readonly) bool isDictation;
@property (nonatomic, readonly) bool isDucking;
@property (nonatomic) bool isEndAlertInfo;
@property (nonatomic, readonly) bool isFingerprintOnly;
@property (nonatomic, readonly) bool isSecureOfflineOnly;
@property (nonatomic, readonly) int mhSource;
@property (nonatomic, readonly) NSString *modelName;
@property (nonatomic, readonly) NSString *productId;
@property (nonatomic, readonly) NSString *route;
@property (nonatomic, readonly) NSString *source;
@property (nonatomic, readonly) long long speechEvent;
@property (nonatomic, readonly) double startRecordingTimestamp;
@property (nonatomic) bool triggeredTwoShotBorealis;
@property (nonatomic, readonly) NSString *vendorId;
@property (nonatomic, readonly) NSDictionary *voiceTriggerEventInfo;

- (void).cxx_destruct;
- (id)_bluetoothDeviceInfo;
- (void)_fetchBTInfo;
- (double)activationAlertStartTimestamp;
- (long long)audioAlertStyle;
- (unsigned int)audioSessionID;
- (unsigned long long)audioSessionSetActiveEndHostTime;
- (id)bluetoothDevice;
- (id)codec;
- (bool)codecIsNarrowband;
- (id)destination;
- (id)deviceIdentifier;
- (id)deviceInfo;
- (id)dspStatus;
- (unsigned long long)estimatedSpeechEndHostTime;
- (unsigned long long)firstBufferHostTime;
- (double)firstBufferTimestamp;
- (id)headsetAddress;
- (id)headsetName;
- (id)initWithDictation:(bool)arg1 codec:(id)arg2;
- (id)initWithDictation:(bool)arg1 fingerprintOnly:(bool)arg2 secureOfflineOnly:(bool)arg3 audioAlertStyle:(long long)arg4 recordSettings:(id)arg5 recordRoute:(id)arg6 recordDeviceInfo:(id)arg7 playbackRoute:(id)arg8 audioDeviceID:(unsigned int)arg9 audioSessionID:(unsigned int)arg10 voiceTriggerEventInfo:(id)arg11 activationAlertStartTimestamp:(double)arg12 startRecordingTimestamp:(double)arg13 firstBufferTimestamp:(double)arg14 firstBufferHostTime:(unsigned long long)arg15 estimatedSpeechEndHostTime:(unsigned long long)arg16 deviceIdentifier:(id)arg17 includeBTInfo:(bool)arg18 speechEvent:(long long)arg19;
- (bool)isBluetooth;
- (bool)isDictation;
- (bool)isDucking;
- (bool)isEndAlertInfo;
- (bool)isFingerprintOnly;
- (bool)isSecureOfflineOnly;
- (int)mhSource;
- (id)modelName;
- (id)productId;
- (id)route;
- (void)setAudioSessionSetActiveEndHostTime:(unsigned long long)arg1;
- (void)setIsEndAlertInfo:(bool)arg1;
- (void)setTriggeredTwoShotBorealis:(bool)arg1;
- (id)source;
- (long long)speechEvent;
- (double)startRecordingTimestamp;
- (bool)triggeredTwoShotBorealis;
- (id)vendorId;
- (id)voiceTriggerEventInfo;

@end
