
@interface CSVoiceTriggerFirstPassHearst : NSObject <CSActivationEventNotificationHandlerDelegate, CSPhoneCallStateMonitorDelegate, CSSiriClientBehaviorMonitorDelegate> {
    CSVoiceTriggerAirPodWearerDetectionConfig * _airpodWearerConfig;
    CSAsset * _currentAsset;
    <CSVoiceTriggerDelegate> * _delegate;
    NSMutableDictionary * _hearstSecondPassRequests;
    float  _minimumPhraseLengthForVADGating;
    CSVoiceTriggerUserSelectedPhrase * _multiPhraseEnabledStatus;
    CSOtherAppRecordingStateMonitor * _otherAppRecordingStateMonitor;
    unsigned long long  _phoneCallState;
    CSPhoneCallStateMonitor * _phoneCallStateMonitor;
    NSArray * _phrasesToSkipBoronDecisionMaking;
    NSObject<OS_dispatch_queue> * _queue;
    float  _remoteMicVADMyriadThreshold;
    float  _remoteMicVADThreshold;
    CSSiriClientBehaviorMonitor * _siriClientBehaviorMonitor;
    CSSpeechManager * _speechManager;
    CSAudioProvider * _triggeredAudioProvider;
    CSAudioStreamHolding * _triggeredAudioStreamHolding;
    CSVoiceTriggerEnabledMonitor * _voiceTriggerEnabledMonitor;
}

@property (nonatomic, retain) CSVoiceTriggerAirPodWearerDetectionConfig *airpodWearerConfig;
@property (nonatomic, retain) CSAsset *currentAsset;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CSVoiceTriggerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSMutableDictionary *hearstSecondPassRequests;
@property (nonatomic) float minimumPhraseLengthForVADGating;
@property (nonatomic, retain) CSVoiceTriggerUserSelectedPhrase *multiPhraseEnabledStatus;
@property (nonatomic, retain) CSOtherAppRecordingStateMonitor *otherAppRecordingStateMonitor;
@property (nonatomic) unsigned long long phoneCallState;
@property (nonatomic, retain) CSPhoneCallStateMonitor *phoneCallStateMonitor;
@property (nonatomic, retain) NSArray *phrasesToSkipBoronDecisionMaking;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic) float remoteMicVADMyriadThreshold;
@property (nonatomic) float remoteMicVADThreshold;
@property (nonatomic, retain) CSSiriClientBehaviorMonitor *siriClientBehaviorMonitor;
@property (nonatomic, retain) CSSpeechManager *speechManager;
@property (readonly) Class superclass;
@property (nonatomic, retain) CSAudioProvider *triggeredAudioProvider;
@property (nonatomic, retain) CSAudioStreamHolding *triggeredAudioStreamHolding;
@property (nonatomic, retain) CSVoiceTriggerEnabledMonitor *voiceTriggerEnabledMonitor;

- (void).cxx_destruct;
- (void)CSPhoneCallStateMonitor:(id)arg1 didRecievePhoneCallStateChange:(unsigned long long)arg2;
- (void)_cancelAllAudioStreamHoldings;
- (void)_handleRemoteMicVADEventWithSecondPassRequest:(id)arg1;
- (void)_handleRemoteMicVoiceTriggerEvent:(id)arg1 secondPassRequest:(id)arg2 completion:(id /* block */)arg3;
- (void)_handleSecondPassResult:(id)arg1 secondPassRequest:(id)arg2 deviceId:(id)arg3 requestOption:(id)arg4 error:(id)arg5 completion:(id /* block */)arg6;
- (void)_requestStartAudioStreamWitContext:(id)arg1 secondPassRequest:(id)arg2 startStreamOption:(id)arg3 completion:(id /* block */)arg4;
- (void)_reset;
- (void)_setAsset:(id)arg1;
- (void)activationEventNotificationHandler:(id)arg1 event:(id)arg2 completion:(id /* block */)arg3;
- (id)airpodWearerConfig;
- (id)currentAsset;
- (id)delegate;
- (id)hearstSecondPassRequests;
- (id)init;
- (id)initWithSpeechManager:(id)arg1 voiceTriggerEnabledMonitor:(id)arg2 siriClientBehaviorMonitor:(id)arg3 phoneCallStateMonitor:(id)arg4 otherAppRecordingStateMonitor:(id)arg5;
- (float)minimumPhraseLengthForVADGating;
- (id)multiPhraseEnabledStatus;
- (id)otherAppRecordingStateMonitor;
- (unsigned long long)phoneCallState;
- (id)phoneCallStateMonitor;
- (id)phrasesToSkipBoronDecisionMaking;
- (id)queue;
- (float)remoteMicVADMyriadThreshold;
- (float)remoteMicVADThreshold;
- (void)reset;
- (void)setAirpodWearerConfig:(id)arg1;
- (void)setAsset:(id)arg1;
- (void)setCurrentAsset:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setHearstSecondPassRequests:(id)arg1;
- (void)setMinimumPhraseLengthForVADGating:(float)arg1;
- (void)setMultiPhraseEnabledStatus:(id)arg1;
- (void)setOtherAppRecordingStateMonitor:(id)arg1;
- (void)setPhoneCallState:(unsigned long long)arg1;
- (void)setPhoneCallStateMonitor:(id)arg1;
- (void)setPhrasesToSkipBoronDecisionMaking:(id)arg1;
- (void)setQueue:(id)arg1;
- (void)setRemoteMicVADMyriadThreshold:(float)arg1;
- (void)setRemoteMicVADThreshold:(float)arg1;
- (void)setSiriClientBehaviorMonitor:(id)arg1;
- (void)setSpeechManager:(id)arg1;
- (void)setTriggeredAudioProvider:(id)arg1;
- (void)setTriggeredAudioStreamHolding:(id)arg1;
- (void)setVoiceTriggerEnabledMonitor:(id)arg1;
- (id)siriClientBehaviorMonitor;
- (void)siriClientBehaviorMonitor:(id)arg1 didStartStreamWithContext:(id)arg2 successfully:(bool)arg3 option:(id)arg4 withEventUUID:(id)arg5;
- (void)siriClientBehaviorMonitor:(id)arg1 didStopStream:(id)arg2 withEventUUID:(id)arg3;
- (void)siriClientBehaviorMonitor:(id)arg1 willStartStreamWithContext:(id)arg2 option:(id)arg3;
- (void)siriClientBehaviorMonitor:(id)arg1 willStopStream:(id)arg2 reason:(unsigned long long)arg3;
- (id)speechManager;
- (void)start;
- (id)triggeredAudioProvider;
- (id)triggeredAudioStreamHolding;
- (id)voiceTriggerEnabledMonitor;

@end
