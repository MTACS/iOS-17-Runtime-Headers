
@interface FCActivityManager : NSObject <ATXActivitySuggestionClientObserver, DNDLifetimeDetailsProviderDelegate, DNDModeSelectionServiceListener, FCActivitySuggestionFeedbackAccepting> {
    <FCActivityDescribing> * _activeActivity;
    NSArray * _activeLifetimeDetailsCollection;
    DNDModeAssertion * _activeModeAssertion;
    bool  _activeModeAssertionIsValid;
    DNDStateUpdate * _activeStateUpdate;
    ATXActivitySuggestionClient * _activitySuggestionClient;
    NSMutableDictionary * _allActivitiesByIdentifier;
    NSArray * _availableActivities;
    CARAutomaticDNDStatus * _carDNDStatus;
    <FCActivityDescribing> * _defaultActivity;
    NSString * _identifier;
    bool  _lifetimeDescriptionsUpdatingEnabled;
    DNDLifetimeDetailsProvider * _lifetimeDetailsProvider;
    <FCActivityLifetimeDescribing> * _lifetimeOfActiveActivity;
    NSMapTable * _locationsToSuggestedActivitiesOrNull;
    DNDModeSelectionService * _modeSelectionService;
    NSHashTable * _observers;
    DNDStateService * _stateService;
}

@property (nonatomic, readonly, copy) <FCActivityDescribing> *activeActivity;
@property (nonatomic, readonly, copy) NSArray *availableActivities;
@property (readonly, copy) NSString *debugDescription;
@property (setter=_setDefaultActivity:, nonatomic, copy) <FCActivityDescribing> *defaultActivity;
@property (getter=isDefaultConfiguration, nonatomic, readonly) bool defaultConfiguration;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, copy) NSString *identifier;
@property (getter=isLifetimeDescriptionsUpdatingEnabled, nonatomic) bool lifetimeDescriptionsUpdatingEnabled;
@property (nonatomic, readonly, copy) NSString *localizedTerminationDescriptionForActiveActivity;
@property (nonatomic, readonly) unsigned long long maximumActivityCountForUserInterface;
@property (readonly) Class superclass;

+ (id)activitiesSettingsURL;
+ (void)initialize;
+ (id)newActivityManager;
+ (id)newActivityManagerWithIdentifier:(id)arg1;
+ (id)sharedActivityManager;

- (void).cxx_destruct;
- (id)_activeActivity;
- (id)_activityForATXActivityOrSuggestion:(id)arg1;
- (id)_activityForModeIdentifier:(id)arg1;
- (id)_activityForUniqueIdentifier:(id)arg1;
- (id)_activitySuggestionClient;
- (id)_availableActivities;
- (id)_carDNDStatus;
- (void)_deactivateActivity:(id)arg1 reason:(id)arg2;
- (bool)_doesActivity:(id)arg1 identifySameModeAsActivity:(id)arg2;
- (void)_drivingTriggerDidChange;
- (void)_enumerateObserversRespondingToSelector:(SEL)arg1 usingBlock:(id /* block */)arg2;
- (id)_initWithIdentifier:(id)arg1;
- (void)_invalidateActiveModeAssertion;
- (bool)_isSyncedAssertion:(id)arg1;
- (id)_lifetimeDetailsProvider;
- (id)_lifetimeForActiveActivity;
- (id)_lifetimeForLifetimeDetailsIdentifier:(id)arg1 ofActivity:(id)arg2;
- (id)_localizedAutomaticDrivingTriggerDescriptionForPreference:(unsigned long long)arg1;
- (id)_modeSelectionService;
- (void)_notifyObserversOfAvailableActivitiesChange;
- (void)_notifyObserversOfLifetimeChangeForActivity:(id)arg1;
- (void)_setActiveActivity:(id)arg1 withLifetime:(id)arg2 reason:(id)arg3;
- (void)_setAvailableActivities:(id)arg1;
- (void)_setDefaultActivity:(id)arg1;
- (void)_setLifetimeForActiveActivity:(id)arg1;
- (id)_stateService;
- (void)_updateActiveActivity:(id)arg1;
- (void)_updateActiveModeAssertionIfNecessary;
- (void)_updateActivitiesWithModes:(id)arg1;
- (void)_updateActivity:(id)arg1 withLifetimeDescriptions:(id)arg2;
- (void)_updateActivity:(id)arg1 withLifetimeDetails:(id)arg2;
- (void)_updateActivity:(id)arg1 withLifetimeDetailsCollection:(id)arg2;
- (void)_updateActivitySuggestion:(id)arg1;
- (void)_updateCreationDateOfActivity:(id)arg1;
- (void)_updateLifetimeForActiveActivity;
- (void)_updateLifetimeForActiveActivityIfNecessary;
- (void)_updateLifetimesAlternativeDescription:(id)arg1 forActivity:(id)arg2;
- (void)_updateLifetimesAlternativeDescriptionForActivity:(id)arg1;
- (void)_updateLifetimesAlternativeDescriptionsForAvailableActivities;
- (void)_updateSuggestedActivity:(id)arg1 forLocation:(long long)arg2;
- (void)_updateSuggestedActivity:(id)arg1 forLocations:(unsigned long long)arg2;
- (void)_updateWithActiveModeAssertionIfNecessary:(id)arg1 stateUpdate:(id)arg2;
- (id)activeActivity;
- (void)activitySuggestionClient:(id)arg1 didSuggestConfiguredActivity:(id)arg2;
- (id)activityWithIdentifier:(id)arg1;
- (void)addObserver:(id)arg1;
- (id)availableActivities;
- (void)dealloc;
- (id)defaultActivity;
- (id)description;
- (void)didShowSuggestedActivity:(id)arg1 location:(long long)arg2;
- (id)identifier;
- (bool)isActivityLocalUserInitiated:(id)arg1;
- (bool)isDefaultConfiguration;
- (bool)isLifetimeDescriptionsUpdatingEnabled;
- (void)lifetimeDetailsProvider:(id)arg1 didUpdateAvailableLifetimeDetails:(id)arg2;
- (id)lifetimeOfActivity:(id)arg1;
- (id)localizedTerminationDescriptionForActiveActivity;
- (unsigned long long)maximumActivityCountForUserInterface;
- (void)modeSelectionService:(id)arg1 didReceiveAvailableModesUpdate:(id)arg2;
- (void)modeSelectionService:(id)arg1 didReceiveModesUpdate:(id)arg2;
- (void)modeSelectionService:(id)arg1 didReceiveUpdatedActiveModeAssertion:(id)arg2 stateUpdate:(id)arg3;
- (void)promotePlaceholderActivity:(id)arg1;
- (id)promotedPlaceholderActivity:(id)arg1;
- (void)removeObserver:(id)arg1;
- (void)setActiveActivity:(id)arg1;
- (void)setActiveActivity:(id)arg1 reason:(id)arg2;
- (void)setActiveActivity:(id)arg1 withLifetime:(id)arg2 reason:(id)arg3;
- (void)setActivity:(id)arg1 active:(bool)arg2 reason:(id)arg3;
- (void)setActivity:(id)arg1 active:(bool)arg2 withLifetime:(id)arg3 reason:(id)arg4;
- (void)setLifetimeDescriptionsUpdatingEnabled:(bool)arg1;
- (bool)shouldActivityShowStatusPill:(id)arg1;
- (id)suggestedActivityFeedbackReceiver;
- (id)suggestedActivityForLocation:(long long)arg1;
- (void)userDidAcceptSuggestedActivity:(id)arg1 location:(long long)arg2;
- (void)userDidRejectSuggestedActivity:(id)arg1 location:(long long)arg2;
- (void)userDidSeeSuggestedActivity:(id)arg1 location:(long long)arg2;

@end
