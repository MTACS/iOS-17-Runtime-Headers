
@interface AVTMemoji : AVTAvatar {
    bool  _aoValid;
    SCNNode * _avatarNode;
    SCNNode * _bodyComponentContainer;
    AVTAvatarBodyPose * _bodyPose;
    SCNNode * _bodySkeletonRootNode;
    AVTColorPreset * _colorPresets;
    struct CGImage { } * _combinedAOImage;
    unsigned long long  _componentAnimatedMask;
    id /* block */  _componentAssetNodeObservationForStickerBlock;
    unsigned long long  _componentDirtyMask;
    AVTComponentInstance * _componentInstances;
    AVTComponent * _components;
    AVTCompositor * _compositor;
    unsigned long long  _compositorComponentDirtyMask;
    AVTPreset * _currentPresetsForVariants;
    SCNMaterial * _eyeMaterialLeft;
    SCNMaterial * _eyeMaterialRight;
    SCNNode * _eyelashes;
    SCNNode * _eyesAndTongue;
    NSDictionary * _eyesAndTongueSpecializationSettings;
    bool  _hairPhysicsShouldIgnoreUpperNodes;
    SCNNode * _handsComponentContainer;
    bool  _hasPresetDependency;
    SCNNode * _headComponentContainer;
    SCNNode * _headNode;
    SCNNode * _headSkeletonRootNode;
    bool  _needsUpdate;
    AVTPreset * _presets;
    AVTPreset * _resolvedPresets;
    AVTAssetResourceCache * _resourceCache;
    NSDictionary * _specializationSettings;
    SCNNode * _torsoNode;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _updateLock;
    unsigned long long  _usageIntent;
    unsigned long long  _visibleBodyParts;
    SCNNode * _wrapDeformerDriverHeadwear;
}

+ (id)memoji;
+ (id)memojiWithContentsOfURL:(id)arg1 error:(id*)arg2;
+ (id)memojiWithContentsOfURL:(id)arg1 usageIntent:(unsigned long long)arg2 error:(id*)arg3;
+ (id)neutralMemoji;
+ (id)neutralMemojiDataRepresentation;
+ (id)neutralMemojiDescriptor;
+ (id)neutralMemojiPresetsIdentifiersPerCategory;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (void)_addHandsComponentInstanceIfNeeded;
- (bool)_addTorsoComponentInstanceIfNeeded;
- (void)_applyAllColorPresetsForCategory:(long long)arg1;
- (void)_applyColorPresetForCategory:(long long)arg1 colorIndex:(unsigned long long)arg2;
- (id)_assetNodesForComponentType:(long long)arg1 includingBuiltInAssetNodes:(bool)arg2 includingComponentAssetNode:(bool)arg3;
- (id)_componentInstanceAssetNodesForDependencyOfType:(long long)arg1 isAssetSpecific:(bool)arg2;
- (void)_invalidateAOImage;
- (void)_removeComponent:(id)arg1;
- (void)_setAssetSpecificVariantDependenciesEnabled:(bool)arg1 forPreset:(id)arg2 dirtyComponents:(unsigned long long)arg3;
- (void)_setMorphWeight:(float)arg1 forDependencyVariant:(id)arg2 ofType:(long long)arg3 isAssetSpecific:(bool)arg4;
- (void)_setVariantDependenciesEnabled:(bool)arg1 forPreset:(id)arg2 dirtyComponents:(unsigned long long)arg3;
- (void)_update;
- (void)_updateAO;
- (void)addComponent:(id)arg1 animated:(bool)arg2;
- (void)addComponentAssetNode:(id)arg1 toNode:(id)arg2 forBodyParts:(unsigned long long)arg3;
- (id)allAssetNodesForComponentType:(long long)arg1;
- (id)allBuiltinAssetNodes;
- (unsigned long long)applyPresetDependenciesForPreset:(id)arg1 presetsBeingReplacedCategories:(unsigned long long)arg2 recursionDepth:(unsigned char)arg3;
- (void)applyVariantDependenciesForPreset:(id)arg1 dirtyComponents:(unsigned long long)arg2;
- (void)arOffset;
- (float)arScale;
- (id)assetResourceCache;
- (id)avatarNode;
- (id)bodyComponentContainer;
- (id)bodyPose;
- (id)builtinAssetNodesForComponentType:(long long)arg1;
- (id)colorPresetForCategory:(long long)arg1;
- (id)colorPresetForCategory:(long long)arg1 colorIndex:(unsigned long long)arg2;
- (void)componentDidChangeForType:(long long)arg1 animated:(bool)arg2;
- (id)componentForType:(long long)arg1;
- (id)componentInstanceForType:(long long)arg1;
- (void)componentMaterialDidUpdate:(id)arg1;
- (id)componentWithType:(long long)arg1;
- (id)components;
- (id)copyWithUsageIntent:(unsigned long long)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (struct CGImage { }*)createSkinAO;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)eyebrowsColor;
- (id)facialhairColor;
- (id)hairColor;
- (id)handsComponentContainer;
- (bool)hasPresetDepencencyForCategory:(long long)arg1;
- (id)headComponentContainer;
- (id)headNode;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithDescriptor:(id)arg1 usageIntent:(unsigned long long)arg2 error:(id*)arg3;
- (void)invalidate;
- (id)lipsColor;
- (void)morphTo:(id)arg1;
- (id)newDescriptor;
- (id)newWrapDeformerDriverNamed:(id)arg1 forComponentType:(long long)arg2;
- (id)presetForCategory:(long long)arg1;
- (void)randomize;
- (void)rebuildSpecializationSettings;
- (void)removeAllComponents;
- (void)removeComponentAssetNodeFromParentNode:(id)arg1 forBodyParts:(unsigned long long)arg2;
- (void)removeComponentWithType:(long long)arg1;
- (void)resetToDefault;
- (id)resolvedPresetForCategory:(long long)arg1;
- (id)secondaryColorPresetForCategory:(long long)arg1;
- (void)setBodyPose:(id)arg1;
- (void)setColorPreset:(id)arg1 forCategory:(long long)arg2;
- (void)setColorPreset:(id)arg1 forCategory:(long long)arg2 colorIndex:(unsigned long long)arg3;
- (void)setComponentAssetNodeObservationForStickerBlock:(id /* block */)arg1;
- (void)setInstance:(id)arg1 forComponentType:(long long)arg2;
- (void)setPreset:(id)arg1 forCategory:(long long)arg2;
- (void)setPreset:(id)arg1 forCategory:(long long)arg2 animated:(bool)arg3;
- (void)setSecondaryColorPreset:(id)arg1 forCategory:(long long)arg2;
- (void)setShowsBody:(bool)arg1;
- (void)setVisibleBodyParts:(unsigned long long)arg1;
- (bool)showsBody;
- (id)skinColor;
- (double)skinTextureSize;
- (id)specializationSettings;
- (id)stickerPhysicsStateIdentifier;
- (unsigned long long)unapplyPresetDependenciesForPreset:(id)arg1 presetsBeingReplacedCategories:(unsigned long long)arg2 recursionDepth:(unsigned char)arg3;
- (void)unapplyVariantDependenciesForPreset:(id)arg1 dirtyComponents:(unsigned long long)arg2;
- (void)update;
- (void)updateBodyPoseForSkinnerVariantsWithDirtyComponents:(unsigned long long)arg1;
- (void)updateEyeLashes;
- (void)updateHighlightsForComponentType:(long long)arg1;
- (void)updateMorphVariantsInNodeHierarchy:(id)arg1 componentType:(long long)arg2 variant:(id)arg3 weight:(float)arg4;
- (void)updateSkinMaterial:(id)arg1;
- (void)updateStickerMorphVariantsInNodeHierarchy:(id)arg1;
- (void)updateWrapDeformerForComponentType:(long long)arg1;
- (id)upperNodesIgnoredByPhysicalizedDescriptors;
- (unsigned long long)usageIntent;
- (bool)usesSkinningForEyeOrientation;
- (unsigned long long)visibleBodyParts;
- (id)wrapDeformedDriverNamed:(id)arg1;

@end
