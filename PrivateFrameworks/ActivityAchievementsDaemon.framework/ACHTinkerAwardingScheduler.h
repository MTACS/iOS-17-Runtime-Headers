
@interface ACHTinkerAwardingScheduler : NSObject <ACHAwardingScheduler, ACHDataStoreObserving, ACHTemplateStoreObserving, HDDiagnosticObject, HDHealthDaemonReadyObserver, HDPeriodicActivityDelegate> {
    ACHDatabaseAssertionClient * _assertionClient;
    NSMutableArray * _awardEvaluationCompletionBlocks;
    ACHEarnedInstanceAwardingEngine * _awardingEngine;
    NSObject<OS_dispatch_queue> * _awardingEvaluationQueue;
    NSCalendar * _calendar;
    NSNumber * _coalescingDelayOverride;
    ACHDataStore * _dataStore;
    bool  _dataStoreIsLoaded;
    ACHEarnedInstanceStore * _earnedInstanceStore;
    NSNumber * _forceActivityAppInstalled;
    HKHealthStore * _healthStore;
    ACHAwardsKeyValueClient * _keyValueClient;
    NSDate * _lastSuccessfulRunDate;
    HDKeyValueDomain * _localKeyValueDomain;
    HKKeyValueDomain * _localKeyValueHSDomain;
    HDMaintenanceOperation * _maintenanceOperation;
    bool  _maintenanceTaskScheduled;
    _HKDelayedOperation * _operation;
    HDProfile * _profile;
    NSObject<OS_dispatch_queue> * _queue;
    HDPeriodicActivity * _scheduler;
    bool  _shouldRetryEarnedInstanceDeletion;
    bool  _shouldRunImmediatelyOnDataStoreLoad;
    ACHTemplateStore * _templateStore;
    ACHXPCScheduler * _xpcScheduler;
}

@property (nonatomic, retain) ACHDatabaseAssertionClient *assertionClient;
@property (nonatomic, retain) NSMutableArray *awardEvaluationCompletionBlocks;
@property (nonatomic, retain) ACHEarnedInstanceAwardingEngine *awardingEngine;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *awardingEvaluationQueue;
@property (nonatomic, retain) NSCalendar *calendar;
@property (nonatomic, retain) NSNumber *coalescingDelayOverride;
@property (nonatomic, retain) ACHDataStore *dataStore;
@property (nonatomic) bool dataStoreIsLoaded;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) ACHEarnedInstanceStore *earnedInstanceStore;
@property (nonatomic, retain) NSNumber *forceActivityAppInstalled;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) HKHealthStore *healthStore;
@property (nonatomic, retain) ACHAwardsKeyValueClient *keyValueClient;
@property (nonatomic, retain) NSDate *lastSuccessfulRunDate;
@property (nonatomic, retain) HDKeyValueDomain *localKeyValueDomain;
@property (nonatomic, retain) HKKeyValueDomain *localKeyValueHSDomain;
@property (nonatomic, retain) HDMaintenanceOperation *maintenanceOperation;
@property (nonatomic) bool maintenanceTaskScheduled;
@property (nonatomic, retain) _HKDelayedOperation *operation;
@property (nonatomic, retain) HDProfile *profile;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, retain) HDPeriodicActivity *scheduler;
@property (nonatomic) bool shouldRetryEarnedInstanceDeletion;
@property (nonatomic) bool shouldRunImmediatelyOnDataStoreLoad;
@property (readonly) Class superclass;
@property (nonatomic, retain) ACHTemplateStore *templateStore;
@property (nonatomic, retain) ACHXPCScheduler *xpcScheduler;

- (void).cxx_destruct;
- (void)_client_scheduleMaintenanceTaskForAwardingWithCompletion:(id /* block */)arg1;
- (void)_daemon_scheduleMaintenanceTaskForAwardingWithCompletion:(id /* block */)arg1;
- (bool)_didRunToday;
- (id)_lastSuccessfulRunDateKey;
- (void)_queue_addAwardingCompletion:(id /* block */)arg1;
- (void)_queue_callAwardingCompletionsWithSuccess:(bool)arg1 error:(id)arg2;
- (void)_queue_client_performCleanupTasks;
- (void)_queue_client_requestAwardingEvaluation;
- (void)_queue_daemon_performCleanupTasks;
- (void)_queue_daemon_requestAwardingEvaluation;
- (void)_queue_performCleanupTasks;
- (void)_queue_removeMaintenanceOperation;
- (void)_queue_requestAwardingEvaluation;
- (void)_runXPCActivityWithCompletion:(id /* block */)arg1;
- (bool)_shouldRunImmediatelyOnTemplateLoad;
- (void)_startUp;
- (void)_systemTimeZoneDidChange:(id)arg1;
- (void)activate;
- (void)addAwardingCompletion:(id /* block */)arg1;
- (id)assertionClient;
- (id)awardEvaluationCompletionBlocks;
- (id)awardingEngine;
- (id)awardingEvaluationQueue;
- (id)calendar;
- (void)clearLastSuccessfulRunDate;
- (id)coalescingDelayOverride;
- (void)daemonReady:(id)arg1;
- (id)dataStore;
- (void)dataStoreDidPopulate:(id)arg1;
- (bool)dataStoreIsLoaded;
- (id)diagnosticDescription;
- (id)earnedInstanceStore;
- (id)forceActivityAppInstalled;
- (id)healthStore;
- (id)initWithHealthStore:(id)arg1 assertionClient:(id)arg2 dataStore:(id)arg3 earnedInstanceStore:(id)arg4 templateStore:(id)arg5 awardingEngine:(id)arg6;
- (id)initWithProfile:(id)arg1 dataStore:(id)arg2 earnedInstanceStore:(id)arg3 templateStore:(id)arg4 awardingEngine:(id)arg5;
- (id)keyValueClient;
- (id)lastSuccessfulRunDate;
- (id)localKeyValueDomain;
- (id)localKeyValueHSDomain;
- (id)maintenanceOperation;
- (bool)maintenanceTaskScheduled;
- (id)operation;
- (void)overrideCoalescingDelay:(double)arg1;
- (void)performPeriodicActivity:(id)arg1 completion:(id /* block */)arg2;
- (void)periodicActivity:(id)arg1 configureXPCActivityCriteria:(id)arg2;
- (bool)periodicActivityRequiresProtectedData:(id)arg1;
- (id)profile;
- (id)queue;
- (void)requestAwardingEvaluationWithCompletion:(id /* block */)arg1;
- (void)scheduleMaintenanceTaskForAwardingWithCompletion:(id /* block */)arg1;
- (id)scheduler;
- (void)setAssertionClient:(id)arg1;
- (void)setAwardEvaluationCompletionBlocks:(id)arg1;
- (void)setAwardingEngine:(id)arg1;
- (void)setAwardingEvaluationQueue:(id)arg1;
- (void)setCalendar:(id)arg1;
- (void)setCoalescingDelayOverride:(id)arg1;
- (void)setDataStore:(id)arg1;
- (void)setDataStoreIsLoaded:(bool)arg1;
- (void)setEarnedInstanceStore:(id)arg1;
- (void)setForceActivityAppInstalled:(id)arg1;
- (void)setHealthStore:(id)arg1;
- (void)setKeyValueClient:(id)arg1;
- (void)setLastSuccessfulRunDate:(id)arg1;
- (void)setLocalKeyValueDomain:(id)arg1;
- (void)setLocalKeyValueHSDomain:(id)arg1;
- (void)setMaintenanceOperation:(id)arg1;
- (void)setMaintenanceTaskScheduled:(bool)arg1;
- (void)setOperation:(id)arg1;
- (void)setProfile:(id)arg1;
- (void)setQueue:(id)arg1;
- (void)setScheduler:(id)arg1;
- (void)setShouldRetryEarnedInstanceDeletion:(bool)arg1;
- (void)setShouldRunImmediatelyOnDataStoreLoad:(bool)arg1;
- (void)setTemplateStore:(id)arg1;
- (void)setXpcScheduler:(id)arg1;
- (void)setlastSuccessfulRunDate:(id)arg1;
- (bool)shouldRetryEarnedInstanceDeletion;
- (bool)shouldRunImmediatelyOnDataStoreLoad;
- (id)templateStore;
- (void)templateStore:(id)arg1 didAddNewTemplates:(id)arg2;
- (void)templateStore:(id)arg1 didRemoveTemplates:(id)arg2;
- (void)templateStoreDidFinishInitialFetch:(id)arg1;
- (id)xpcScheduler;

@end
