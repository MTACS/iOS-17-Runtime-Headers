
@interface CCUISensorAttributionExpandedViewController : UIViewController {
    NSSet * _activeAndRecentSensorActivityData;
    CCUISensorAttributionCompactControl * _clonedCompactControl;
    UIView * _contentView;
    <CCUIHeaderPocketViewSensorAttributionDelegate> * _delegate;
    UITapGestureRecognizer * _dismissTapGestureRecognizer;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _edgeInsets;
    NSArray * _entityAndWebsiteViews;
    double  _firstRowYOffset;
    MTMaterialView * _materialView;
    bool  _prepared;
    CCUISensorAttributionPrivacyHeaderView * _privacyHeaderView;
    UIScrollView * _scrollView;
    NSArray * _separatorViews;
    NSArray * _subsequentSensorButtons;
    CCUISensorAttributionSensorButton * _topMostCameraButton;
    CCUISensorAttributionSensorButton * _topMostLocButton;
    CCUISensorAttributionSensorButton * _topMostMicButton;
}

@property (nonatomic, retain) NSSet *activeAndRecentSensorActivityData;
@property (nonatomic, retain) CCUISensorAttributionCompactControl *clonedCompactControl;
@property (nonatomic, retain) UIView *contentView;
@property (nonatomic) <CCUIHeaderPocketViewSensorAttributionDelegate> *delegate;
@property (nonatomic, retain) UITapGestureRecognizer *dismissTapGestureRecognizer;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } edgeInsets;
@property (nonatomic, retain) NSArray *entityAndWebsiteViews;
@property (nonatomic) double firstRowYOffset;
@property (nonatomic, retain) MTMaterialView *materialView;
@property (nonatomic, retain) CCUISensorAttributionPrivacyHeaderView *privacyHeaderView;
@property (nonatomic, retain) UIScrollView *scrollView;
@property (nonatomic, retain) NSArray *separatorViews;
@property (nonatomic, retain) NSArray *subsequentSensorButtons;
@property (nonatomic, retain) CCUISensorAttributionSensorButton *topMostCameraButton;
@property (nonatomic, retain) CCUISensorAttributionSensorButton *topMostLocButton;
@property (nonatomic, retain) CCUISensorAttributionSensorButton *topMostMicButton;

- (void).cxx_destruct;
- (void)_animateAllSensorButtonsForExpanded:(bool)arg1;
- (void)_animateBackgroundBlurWeighting:(bool)arg1;
- (void)_animateCompactControlAlpha:(bool)arg1;
- (void)_animateEntityAndWebsiteViews:(bool)arg1;
- (void)_animatePrivacyHeader:(bool)arg1;
- (void)_animateSeparatorViews:(bool)arg1;
- (void)_animateSubsequentSensorIcon:(id)arg1 toExpanded:(bool)arg2;
- (void)_animateTopmostSensorButton:(id)arg1 toExpanded:(bool)arg2;
- (void)_applyAlphaAndBlurToFirstEntityViewExpanded:(bool)arg1;
- (void)_applyAlphaAndBlurToSubsequentEntityAndWebsiteViewsExpanded:(bool)arg1;
- (void)_applyAlphaAndStylingToEntityOrWebsiteView:(id)arg1 expanded:(bool)arg2;
- (void)_applyCompactAlphaForSensorButton:(id)arg1 isTopMost:(bool)arg2;
- (void)_applyCompactAppearanceToAllViews;
- (void)_applyCompactLayoutToSensorButton:(id)arg1;
- (void)_applyLayoutOfEntityAndWebsiteViewsExpanded:(bool)arg1;
- (void)_applyPrivacyHeaderAlphaAndBlurRadius:(bool)arg1;
- (void)_applyPrivacyHeaderLayoutExpanded:(bool)arg1;
- (void)_applySeparatorAlphaExpanded:(bool)arg1;
- (void)_applySeparatorsLayoutExpanded:(bool)arg1;
- (void)_cachePrivacyHeaderExpandedLayout;
- (bool)_cacheTopmostSensorButtonIfNotAlreadySet:(id)arg1 sensorData:(id)arg2;
- (bool)_canShowWhileLocked;
- (void)_clonedPillButtonPressed:(id)arg1;
- (id)_iconInCompactViewForSensorType:(unsigned long long)arg1;
- (id)_makeHeaderSeparatorView;
- (void)_recreateViewsForAttributionsAndCacheExpandedFrames;
- (void)_reduceMotionPrepareForPresentation;
- (void)_reduceMotionSetExpanded:(bool)arg1 animated:(bool)arg2;
- (void)_removeClonedCompactPillViewAndNotifyDelegate;
- (void)_showClonedCompactControl:(id)arg1;
- (id)_topMostButtons;
- (id)activeAndRecentSensorActivityData;
- (id)clonedCompactControl;
- (id)contentView;
- (id)delegate;
- (id)dismissTapGestureRecognizer;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })edgeInsets;
- (id)entityAndWebsiteViews;
- (double)firstRowYOffset;
- (bool)isExpanded;
- (id)materialView;
- (void)prepareForInteractionWithClonedCompactControl:(id)arg1;
- (id)privacyHeaderView;
- (void)recognizedDismissTapGesture:(id)arg1;
- (id)scrollView;
- (void)sensorAttributionsChanged:(id)arg1;
- (id)separatorViews;
- (void)setActiveAndRecentSensorActivityData:(id)arg1;
- (void)setClonedCompactControl:(id)arg1;
- (void)setContentView:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDismissTapGestureRecognizer:(id)arg1;
- (void)setEdgeInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setEntityAndWebsiteViews:(id)arg1;
- (void)setExpanded:(bool)arg1 animated:(bool)arg2;
- (void)setFirstRowYOffset:(double)arg1;
- (void)setMaterialView:(id)arg1;
- (void)setPrivacyHeaderView:(id)arg1;
- (void)setScrollView:(id)arg1;
- (void)setSeparatorViews:(id)arg1;
- (void)setSubsequentSensorButtons:(id)arg1;
- (void)setTopMostCameraButton:(id)arg1;
- (void)setTopMostLocButton:(id)arg1;
- (void)setTopMostMicButton:(id)arg1;
- (id)subsequentSensorButtons;
- (id)topMostCameraButton;
- (id)topMostLocButton;
- (id)topMostMicButton;
- (void)viewDidLoad;

@end
