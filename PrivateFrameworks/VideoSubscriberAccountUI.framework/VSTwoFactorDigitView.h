
@interface VSTwoFactorDigitView : UIControl <UITextInput> {
    long long  _autocapitalizationType;
    NSString * _codeText;
    <VSTwoFactorDigitViewDelegate> * _delegate;
    unsigned long long  _digitCount;
    NSArray * _digits;
    bool  _hasText;
    <UITextInputDelegate> * _inputDelegate;
    long long  _keyboardType;
    NSDictionary * _markedTextStyle;
    long long  _returnKeyType;
    NSString * _textContentType;
    <UITextInputTokenizer> * _tokenizer;
}

@property (nonatomic) long long autocapitalizationType;
@property (nonatomic) long long autocorrectionType;
@property (nonatomic, readonly) UITextPosition *beginningOfDocument;
@property (nonatomic, retain) NSString *codeText;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <VSTwoFactorDigitViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) unsigned long long digitCount;
@property (nonatomic, retain) NSArray *digits;
@property (nonatomic) bool enablesReturnKeyAutomatically;
@property (nonatomic, readonly) UITextPosition *endOfDocument;
@property (nonatomic, readonly) bool hasText;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long inlinePredictionType;
@property (nonatomic) <UITextInputDelegate> *inputDelegate;
@property (nonatomic, readonly) id insertDictationResultPlaceholder;
@property (nonatomic) long long keyboardAppearance;
@property (nonatomic) long long keyboardType;
@property (nonatomic, readonly) UITextRange *markedTextRange;
@property (nonatomic, copy) NSDictionary *markedTextStyle;
@property (nonatomic, copy) UITextInputPasswordRules *passwordRules;
@property (nonatomic) long long returnKeyType;
@property (getter=isSecureTextEntry, nonatomic) bool secureTextEntry;
@property (copy) UITextRange *selectedTextRange;
@property (nonatomic) long long selectionAffinity;
@property (nonatomic) long long smartDashesType;
@property (nonatomic) long long smartInsertDeleteType;
@property (nonatomic) long long smartQuotesType;
@property (nonatomic) long long spellCheckingType;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSString *textContentType;
@property (nonatomic, readonly) UIView *textInputView;
@property (nonatomic, readonly) <UITextInputTokenizer> *tokenizer;

- (void).cxx_destruct;
- (long long)autocapitalizationType;
- (long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2;
- (id)beginningOfDocument;
- (bool)canBecomeFirstResponder;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })caretRectForPosition:(id)arg1;
- (id)characterRangeAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2;
- (id)closestPositionToPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)closestPositionToPoint:(struct CGPoint { double x1; double x2; })arg1 withinRange:(id)arg2;
- (id)codeText;
- (long long)comparePosition:(id)arg1 toPosition:(id)arg2;
- (id)delegate;
- (void)deleteBackward;
- (unsigned long long)digitCount;
- (id)digits;
- (id)endOfDocument;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })firstRectForRange:(id)arg1;
- (bool)hasText;
- (id)initWithDigitCount:(unsigned long long)arg1;
- (id)inputDelegate;
- (void)insertText:(id)arg1;
- (long long)keyboardType;
- (id)markedTextRange;
- (id)markedTextStyle;
- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2;
- (void)onTouchUpInside:(id)arg1;
- (id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3;
- (id)positionFromPosition:(id)arg1 offset:(long long)arg2;
- (id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2;
- (void)replaceRange:(id)arg1 withText:(id)arg2;
- (long long)returnKeyType;
- (id)selectedTextRange;
- (id)selectionRectsForRange:(id)arg1;
- (void)setAutocapitalizationType:(long long)arg1;
- (void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2;
- (void)setCodeText:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDigits:(id)arg1;
- (void)setInputDelegate:(id)arg1;
- (void)setKeyboardType:(long long)arg1;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)setMarkedTextStyle:(id)arg1;
- (void)setReturnKeyType:(long long)arg1;
- (void)setSelectedTextRange:(id)arg1;
- (void)setText:(id)arg1;
- (void)setTextContentType:(id)arg1;
- (void)setupDigitViews;
- (id)textContentType;
- (id)textInRange:(id)arg1;
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;
- (id)tokenizer;
- (void)unmarkText;

@end
