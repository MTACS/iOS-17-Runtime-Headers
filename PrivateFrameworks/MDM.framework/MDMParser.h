
@interface MDMParser : MDMAbstractTunnelParser {
    MDMBackupManager * _backupManagerForEnterprisePersona;
    MDMBackupManager * _backupManagerForMainPersona;
    bool  _isChaperoned;
    bool  _isMDM;
    NSString * _managingProfileIdentifier;
    CATOperationQueue * _operationQueue;
    MDMServerCore * _server;
}

@property (nonatomic, retain) MDMBackupManager *backupManagerForEnterprisePersona;
@property (nonatomic, retain) MDMBackupManager *backupManagerForMainPersona;
@property (nonatomic, readonly) bool isChaperoned;
@property (nonatomic) bool isMDM;
@property (nonatomic, retain) NSString *managingProfileIdentifier;
@property (nonatomic, retain) CATOperationQueue *operationQueue;
@property (nonatomic) MDMServerCore *server;

+ (id)_DMFKeysToMCKeys;
+ (id)_MCKeysToDMFKeys;
+ (id)_MCKeysWithNoMatchingDMFKey;
+ (id)_allAccessibilitySettingsKeys;
+ (bool)_dmfAction:(unsigned long long*)arg1 fromMDMActionString:(id)arg2;
+ (id)_errorFromDMFSoftwareUpdateError:(id)arg1;
+ (id)_errorWithDomain:(id)arg1 code:(long long)arg2 descriptionKey:(id)arg3 underlyingError:(id)arg4 type:(id)arg5;
+ (id)_numericAccessibilitySettingsKeys;
+ (id)_resolvedInstallActionStringForAction:(unsigned long long)arg1;
+ (unsigned long long)_shouldUseDelayWithRequest:(id)arg1;
+ (id)_statusFromError:(id)arg1 action:(unsigned long long)arg2;
+ (id)_stringForAppState:(unsigned long long)arg1;
+ (id)_updateDictionaryFromUpdate:(id)arg1;
+ (bool)_useDelayFlagAllowed;
+ (id)errorChainFromError:(id)arg1;
+ (id)malformedRequestErrorResult;

- (void).cxx_destruct;
- (id)_accessibilitySettings;
- (void)_activationLockBypassCodeRequest:(id)arg1 completionBlock:(id /* block */)arg2;
- (id)_allCommands;
- (id)_allSettingsItems;
- (id)_allowedDeviceQueriesForAccessRights:(unsigned long long)arg1;
- (id)_allowedDeviceQueriesForAccessRights:(unsigned long long)arg1 isDataSeparated:(bool)arg2;
- (id)_analyticsCommandNameFromRequest:(id)arg1;
- (id)_analyticsErrorFromResponse:(id)arg1;
- (bool)_analyticsRequiresNetworkTetheringFromRequest:(id)arg1;
- (id)_appAlreadyInstalledErrorWithBundleID:(id)arg1;
- (id)_appAlreadyInstalledErrorWithiTunesStoreID:(id)arg1;
- (id)_appAlreadyQueuedErrorWithBundleID:(id)arg1;
- (id)_appAlreadyQueuedErrorWithiTunesStoreID:(id)arg1;
- (id)_appStoreDisabledError;
- (void)_applyOverridesToDeviceInformationDictionary:(id)arg1;
- (id)_applyRedemptionCode:(id)arg1 assertion:(id)arg2;
- (void)_availableOSUpdates:(id)arg1 assertion:(id)arg2 completionBlock:(id /* block */)arg3;
- (id)_cannotValidateAppIDErrorUnderlyingError:(id)arg1;
- (id)_certificateList:(id)arg1;
- (void)_clearActivationLockBypassCodeRequest:(id)arg1 completionBlock:(id /* block */)arg2;
- (id)_clearPasscode:(id)arg1;
- (void)_clearRestrictionsPasswordRequest:(id)arg1 completionBlock:(id /* block */)arg2;
- (id)_declarativeManagement:(id)arg1;
- (id)_deleteAllUsersWithForceDeletion:(bool)arg1;
- (id)_deleteUser:(id)arg1;
- (void)_deviceConfigured:(id)arg1 assertion:(id)arg2 completionBlock:(id /* block */)arg3;
- (id)_deviceInformationWithRequest:(id)arg1 accessRights:(unsigned long long)arg2;
- (id)_deviceInformationWithRequest:(id)arg1 allowedQueries:(id)arg2;
- (id)_deviceLocation:(id)arg1;
- (id)_deviceLock:(id)arg1;
- (id)_deviceNotInMDMLostModeError;
- (void)_disableLostMode:(id)arg1 assertion:(id)arg2 completionBlock:(id /* block */)arg3;
- (void)_dmfScheduleOSUpdate:(id)arg1 assertion:(id)arg2 completionBlock:(id /* block */)arg3;
- (void)_enableLostMode:(id)arg1 assertion:(id)arg2 completionBlock:(id /* block */)arg3;
- (id)_eraseDevice:(id)arg1;
- (id)_eraseDeviceActivationLockIsOnError;
- (id)_eraseDeviceFailedToEraseErrorWithUnderlayingError:(id)arg1;
- (id)_eraseDeviceInvalidMDMProfileErrorWithUnderlayingError:(id)arg1;
- (id)_eraseDeviceInvalidWiFiProfileErrorWithUnderlayingError:(id)arg1;
- (id)_eraseDeviceMissingMDMProfileError;
- (id)_eraseDeviceNotSupporttedError;
- (id)_eraseDeviceNotSupporttedOnSharedIPadError;
- (id)_eraseDeviceNotTeslaEnrolledError;
- (id)_eraseDeviceProvisionallyEnrolledError;
- (id)_handleFetchAppsRequest:(id)arg1 managedOnly:(bool)arg2 deleteFeedback:(bool)arg3 advanceTransientStates:(bool)arg4 propertyKeys:(id)arg5 block:(id /* block */)arg6;
- (id)_handleSetAppManagementInfoRequest:(id)arg1 outAdditionalResponseKeys:(id*)arg2 block:(id /* block */)arg3;
- (bool)_identifiersIsStringArray:(id)arg1;
- (void)_installApplication:(id)arg1 assertion:(id)arg2 completionBlock:(id /* block */)arg3;
- (void)_installMedia:(id)arg1 assertion:(id)arg2 completionBlock:(id /* block */)arg3;
- (id)_installProfile:(id)arg1 accessRights:(unsigned long long)arg2;
- (id)_installProfile:(id)arg1 accessRights:(unsigned long long)arg2 installationType:(long long)arg3;
- (id)_installProvisioningProfile:(id)arg1;
- (id)_installedApplicationList:(id)arg1;
- (id)_invalidManifestErrorWithURL:(id)arg1 underlyingError:(id)arg2;
- (id)_invalidRequestTypeError:(id)arg1;
- (id)_invalidRequestTypeInMDMLostModeError:(id)arg1;
- (id)_invalidRequestTypeInSingleAppModeError:(id)arg1;
- (void)_inviteToProgramRequest:(id)arg1 assertion:(id)arg2 completionBlock:(id /* block */)arg3;
- (bool)_isManagedApp:(id)arg1;
- (bool)_isManagedAppFromManagementInformation:(id)arg1;
- (bool)_isProfileIdentifierManaged:(id)arg1;
- (bool)_isProvisioningProfileUUIDManaged:(id)arg1;
- (bool)_isTriggerDiagnosticsAllowed;
- (id)_licenseNotFoundErrorWithBundleID:(id)arg1 underlyingError:(id)arg2;
- (id)_licenseNotFoundErrorWithiTunesStoreID:(id)arg1 underlyingError:(id)arg2;
- (id)_logOutUser:(id)arg1;
- (id)_malformedRequestError;
- (id)_managedApplicationAttributes:(id)arg1;
- (id)_managedApplicationConfiguration:(id)arg1;
- (id)_managedApplicationFeedback:(id)arg1;
- (id)_managedApplicationList:(id)arg1;
- (void)_managedMediaList:(id)arg1 assertion:(id)arg2 completionBlock:(id /* block */)arg3;
- (void)_mdmScheduleOSUpdate:(id)arg1 assertion:(id)arg2 completionBlock:(id /* block */)arg3;
- (id)_notAuthorizedError;
- (id)_notManagedErrorAppID:(id)arg1;
- (id)_notNetworkTetheredError;
- (id)_originator;
- (void)_performInstallApplicationRequestWithManifestURL:(id)arg1 iTunesStoreIDObj:(id)arg2 bundleId:(id)arg3 flagsObj:(id)arg4 attributes:(id)arg5 configuration:(id)arg6 manageChangeStr:(id)arg7 purchaseMethodValue:(int)arg8 personaID:(id)arg9 completionBlock:(id /* block */)arg10;
- (id)_performSetAccessibilitySettings:(id)arg1;
- (id)_performSetAppAnalytics:(id)arg1;
- (id)_performSetAppAttributes:(id)arg1 outAdditionalResponseKeys:(id*)arg2;
- (id)_performSetAppConfig:(id)arg1 outAdditionalResponseKeys:(id*)arg2;
- (id)_performSetAwaitUserConfiguration:(id)arg1;
- (id)_performSetBluetooth:(id)arg1;
- (id)_performSetDataRoaming:(id)arg1;
- (id)_performSetDeviceName:(id)arg1;
- (id)_performSetDiagnosticSubmission:(id)arg1;
- (id)_performSetGracePeriod:(id)arg1;
- (id)_performSetMAIDDefaultDomains:(id)arg1;
- (id)_performSetMDMOptions:(id)arg1;
- (id)_performSetMaximumResidentUsers:(id)arg1;
- (id)_performSetOnlineAuthenticationGracePeriod:(id)arg1;
- (id)_performSetOrganizationInfo:(id)arg1;
- (id)_performSetPersonalHotspot:(id)arg1;
- (id)_performSetResidentUserQuotaSize:(id)arg1;
- (id)_performSetResidentUsers:(id)arg1;
- (id)_performSetSessionTimeout:(id)arg1;
- (id)_performSetSharedDeviceConfiguration:(id)arg1;
- (id)_performSetSkipLanguageAndLocaleSetupForNewUsers:(id)arg1;
- (id)_performSetTemporarySessionOnly:(id)arg1;
- (id)_performSetTimezone:(id)arg1;
- (id)_performSetUpdatePath:(id)arg1;
- (id)_performSetVoiceRoaming:(id)arg1;
- (id)_performSetWallpaper:(id)arg1;
- (id)_performSetting:(id)arg1 outAdditionalResponseKeys:(id*)arg2 outRestartAppleTVApp:(bool*)arg3;
- (void)_playLostModeSound:(id)arg1 assertion:(id)arg2 completionBlock:(id /* block */)arg3;
- (void)_processRequest:(id)arg1 accessRights:(unsigned long long)arg2 assertion:(id)arg3 completionBlock:(id /* block */)arg4;
- (unsigned long long)_profileInstallationStyleForRequest:(id)arg1;
- (id)_profileList:(id)arg1;
- (id)_profileList:(id)arg1 filterFlags:(int)arg2;
- (id)_provisioningProfileList:(id)arg1;
- (id)_refreshCellularPlans:(id)arg1;
- (void)_rejectSoftwareUpdateBecauseOfMalformedRequestCompletionBlock:(id /* block */)arg1;
- (bool)_rejectSoftwareUpdateBecauseUserLoggedInCompletionBlock:(id /* block */)arg1;
- (id)_removeApplication:(id)arg1;
- (void)_removeMedia:(id)arg1 assertion:(id)arg2 completionBlock:(id /* block */)arg3;
- (id)_removeProfile:(id)arg1;
- (id)_removeProfileWithIdentifier:(id)arg1 forInstalledProfilesWithFilterFlags:(int)arg2;
- (id)_removeProfileWithIdentifier:(id)arg1 installationType:(long long)arg2;
- (id)_removeProvisioningProfile:(id)arg1;
- (void)_requestMirroringRequest:(id)arg1 assertion:(id)arg2 completionBlock:(id /* block */)arg3;
- (id)_requestUnlockToken:(id)arg1;
- (id)_responseForMalformedUpdateRequest;
- (id)_restartDevice:(id)arg1;
- (id)_restrictions:(id)arg1;
- (id)_restrictions:(id)arg1 withProfileFilterFlags:(int)arg2;
- (void)_scheduleOSUpdate:(id)arg1 assertion:(id)arg2 completionBlock:(id /* block */)arg3;
- (void)_scheduleOSUpdateScan:(id)arg1 assertion:(id)arg2 completionBlock:(id /* block */)arg3;
- (id)_securityInfo:(id)arg1;
- (void)_sendAnalyticsMDMCommandEventWithRequest:(id)arg1 response:(id)arg2;
- (id)_serviceSubscriptionPropertiesWithDMFKeysMappedToMCKeys:(id)arg1;
- (id)_serviceSubscriptionsWithDMFKeysMappedToMCKeys:(id)arg1;
- (id)_setResidentUsersNumber:(id)arg1;
- (id)_settings:(id)arg1 accessRights:(unsigned long long)arg2;
- (id)_shutDownDevice:(id)arg1;
- (id)_softwareUpdatesNotPermittedWithLoggedInUserError;
- (void)_statusOfOSUpdates:(id)arg1 assertion:(id)arg2 completionBlock:(id /* block */)arg3;
- (void)_stopMirroringRequest:(id)arg1 assertion:(id)arg2 completionBlock:(id /* block */)arg3;
- (id)_stringForBookState:(unsigned long long)arg1;
- (id)_triggerDiagnostics:(id)arg1;
- (id)_unavailableCommandsBeforeFirstUnlock;
- (id)_unavailableCommandsDuringIncompleteAccountDrivenEnrollment;
- (id)_unavailableCommandsInLimitedAppsMode;
- (id)_unavailableCommandsWhileLocked;
- (void)_userConfigured:(id)arg1 assertion:(id)arg2 completionBlock:(id /* block */)arg3;
- (id)_userList:(id)arg1;
- (id)_validateApplications:(id)arg1;
- (bool)_validateSetting:(id)arg1 accessRights:(unsigned long long)arg2 outError:(id*)arg3;
- (id)backupManagerForEnterprisePersona;
- (id)backupManagerForMainPersona;
- (id)initWithManagingProfileIdentifier:(id)arg1;
- (bool)isChaperoned;
- (bool)isMDM;
- (id)managingProfileIdentifier;
- (id)operationQueue;
- (void)processRequest:(id)arg1 accessRights:(unsigned long long)arg2 assertion:(id)arg3 completionBlock:(id /* block */)arg4;
- (id)server;
- (void)setBackupManagerForEnterprisePersona:(id)arg1;
- (void)setBackupManagerForMainPersona:(id)arg1;
- (void)setIsMDM:(bool)arg1;
- (void)setManagingProfileIdentifier:(id)arg1;
- (void)setOperationQueue:(id)arg1;
- (void)setServer:(id)arg1;
- (id)unavailableCommandsDuringBuddy;
- (id)unavailableCommandsWhileInMDMLostMode;

@end
