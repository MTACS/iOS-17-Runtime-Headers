
@interface ENUIVerificationCodeEntryView : UIView <UITextInput> {
    NSArray * _activeConstraints;
    id /* block */  _didEnterCode;
    id /* block */  _didEnterDigit;
    NSArray * _generatorFields;
    <UITextInputDelegate> * _inputDelegate;
    NSDictionary * _markedTextStyle;
    bool  _passcodeFieldDisabled;
    NSMutableString * _stringValue;
    UITapGestureRecognizer * _tapGestureRecognizer;
}

@property (nonatomic, retain) NSArray *activeConstraints;
@property (nonatomic) long long autocapitalizationType;
@property (nonatomic) long long autocorrectionType;
@property (nonatomic, readonly) UITextPosition *beginningOfDocument;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) id /* block */ didEnterCode;
@property (nonatomic, copy) id /* block */ didEnterDigit;
@property (nonatomic) bool enablesReturnKeyAutomatically;
@property (nonatomic, readonly) UITextPosition *endOfDocument;
@property (nonatomic, readonly) UILabel *firstGeneratorField;
@property (nonatomic, retain) NSArray *generatorFields;
@property (nonatomic, readonly) bool hasText;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long inlinePredictionType;
@property (nonatomic) <UITextInputDelegate> *inputDelegate;
@property (nonatomic, readonly) id insertDictationResultPlaceholder;
@property (nonatomic) long long keyboardAppearance;
@property (nonatomic) long long keyboardType;
@property (nonatomic, readonly) UITextRange *markedTextRange;
@property (nonatomic, copy) NSDictionary *markedTextStyle;
@property (nonatomic, copy) UITextInputPasswordRules *passwordRules;
@property (nonatomic) long long returnKeyType;
@property (getter=isSecureTextEntry, nonatomic) bool secureTextEntry;
@property (copy) UITextRange *selectedTextRange;
@property (nonatomic) long long selectionAffinity;
@property (nonatomic) long long smartDashesType;
@property (nonatomic) long long smartInsertDeleteType;
@property (nonatomic) long long smartQuotesType;
@property (nonatomic) long long spellCheckingType;
@property (nonatomic, copy) NSString *stringValue;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSString *textContentType;
@property (nonatomic, readonly) UIView *textInputView;
@property (nonatomic, readonly) <UITextInputTokenizer> *tokenizer;

+ (id)generatorFieldFont;
+ (id)maximumContentSizeCategory;
+ (id)textStyle;

- (void).cxx_destruct;
- (void)_syncStringValueToLabels;
- (void)_updateFonts:(id)arg1;
- (id)activeConstraints;
- (long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2;
- (id)beginningOfDocument;
- (bool)canBecomeFirstResponder;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })caretRectForPosition:(id)arg1;
- (id)characterRangeAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2;
- (id)closestPositionToPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)closestPositionToPoint:(struct CGPoint { double x1; double x2; })arg1 withinRange:(id)arg2;
- (long long)comparePosition:(id)arg1 toPosition:(id)arg2;
- (void)dealloc;
- (void)deleteBackward;
- (id /* block */)didEnterCode;
- (id /* block */)didEnterDigit;
- (void)emitCodeEnteredNotification;
- (id)endOfDocument;
- (id)firstGeneratorField;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })firstRectForRange:(id)arg1;
- (id)generatorFields;
- (bool)hasText;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)inputDelegate;
- (void)insertText:(id)arg1;
- (long long)keyboardType;
- (id)markedTextRange;
- (id)markedTextStyle;
- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2;
- (void)passcodeFieldTapped:(id)arg1;
- (id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3;
- (id)positionFromPosition:(id)arg1 offset:(long long)arg2;
- (id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2;
- (void)replaceRange:(id)arg1 withText:(id)arg2;
- (id)selectedTextRange;
- (id)selectionRectsForRange:(id)arg1;
- (void)setActiveConstraints:(id)arg1;
- (void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2;
- (void)setDidEnterCode:(id /* block */)arg1;
- (void)setDidEnterDigit:(id /* block */)arg1;
- (void)setGeneratorFields:(id)arg1;
- (void)setInputDelegate:(id)arg1;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)setMarkedTextStyle:(id)arg1;
- (void)setPasscodeFieldDisabled:(bool)arg1;
- (void)setSelectedTextRange:(id)arg1;
- (void)setStringValue:(id)arg1;
- (id)stringValue;
- (id)textContentType;
- (id)textInRange:(id)arg1;
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;
- (id)tokenizer;
- (void)unmarkText;
- (void)updateConstraints;
- (id)viewForFirstBaselineLayout;
- (id)viewForLastBaselineLayout;

@end
