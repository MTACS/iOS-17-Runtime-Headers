
@interface FCArticleHeadline : FCHeadline <FCArticleAccessCheckable, FCContentArchivable, FCHeadlineStocksFields> {
    NSString * _accessoryText;
    NSArray * _allowedStorefrontIDs;
    NSString * _articleID;
    FCInterestToken * _articleInterestToken;
    FCAssetHandle * _articleRecirculationConfigAssetHandle;
    NTPBArticleRecord * _articleRecord;
    NSArray * _authors;
    long long  _backendArticleVersion;
    long long  _behaviorFlags;
    NSArray * _blockedStorefrontIDs;
    long long  _bodyTextLength;
    bool  _boundToContext;
    bool  _bundlePaid;
    bool  _canBePurchased;
    NSString * _clusterID;
    unsigned long long  _contentType;
    NSURL * _contentURL;
    FCCoverArt * _coverArt;
    bool  _deleted;
    bool  _disableBookmarking;
    bool  _disablePrerollAds;
    bool  _disableTapToChannel;
    NSString * _excerpt;
    FCHeadlineExperimentalTitleMetadata * _experimentalTitleMetadata;
    bool  _featureCandidate;
    NSData * _float16FullBodyEncoding;
    NSData * _float16TitleEncoding;
    COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortList * _globalCohorts;
    COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStats * _globalConversionStats;
    NSDate * _globalExpirationTime;
    unsigned long long  _halfLife;
    unsigned long long  _halfLifeOverride;
    bool  _hasThumbnail;
    bool  _hiddenFromAutoFavorites;
    bool  _hiddenFromFeeds;
    bool  _hideModalCloseButton;
    NSArray * _iAdCategories;
    NSArray * _iAdKeywords;
    NSArray * _iAdSectionIDs;
    NSString * _identifier;
    bool  _isDraft;
    bool  _isEvergreen;
    bool  _isLocalDraft;
    bool  _issueOnly;
    NSString * _language;
    NSDate * _lastFetchedDate;
    NSDate * _lastModifiedDate;
    double  _layeredThumbnailAspectRatio;
    NSString * _layeredThumbnailJSON;
    NSArray * _linkedArticleIDs;
    NSArray * _linkedIssueIDs;
    long long  _minimumNewsVersion;
    NSArray * _moreFromPublisherArticleIDs;
    FCArticleAudioTrack * _narrativeTrack;
    NSArray * _narrativeTrackBuddyArticleIDs;
    NSString * _narrativeTrackPreferredUpsellVariantID;
    FCArticleAudioTrack * _narrativeTrackSample;
    NSString * _narrativeTrackTextRanges;
    NSArray * _narrators;
    bool  _needsRapidUpdates;
    bool  _paid;
    FCIssue * _parentIssue;
    bool  _pressRelease;
    NSString * _primaryAudience;
    NSDate * _publishDate;
    long long  _publisherArticleVersion;
    COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortList * _publisherCohorts;
    COMAPPLEFELDSPARPROTOCOLLIVERPOOLConversionStats * _publisherConversionStats;
    COMAPPLEFELDSPARPROTOCOLLIVERPOOLTagMetadata * _publisherTagMetadata;
    bool  _reduceVisibility;
    NSString * _referencedArticleID;
    NSArray * _relatedArticleIDs;
    unsigned long long  _role;
    NSURL * _routeURL;
    NSString * _shortExcerpt;
    bool  _showBundleSoftPaywall;
    <FCChannelProviding> * _sourceChannel;
    NSString * _sourceName;
    bool  _sponsored;
    NSArray * _sportsEventIDs;
    FCTopStoriesStyleConfiguration * _storyStyle;
    unsigned long long  _storyType;
    NSArray * _tagsExpiration;
    FCHeadlineThumbnail * _thumbnail;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _thumbnailFocalFrame;
    FCHeadlineThumbnail * _thumbnailHQ;
    FCColor * _thumbnailImageAccentColor;
    FCColor * _thumbnailImageBackgroundColor;
    FCColor * _thumbnailImagePrimaryColor;
    FCColor * _thumbnailImageTextColor;
    FCHeadlineThumbnail * _thumbnailLQ;
    FCHeadlineThumbnail * _thumbnailMedium;
    NSData * _thumbnailPerceptualHash;
    FCHeadlineThumbnail * _thumbnailUltraHQ;
    FCHeadlineThumbnail * _thumbnailWidget;
    FCHeadlineThumbnail * _thumbnailWidgetHQ;
    FCHeadlineThumbnail * _thumbnailWidgetLQ;
    NSString * _title;
    NSString * _titleCompact;
    NSArray * _topicIDs;
    NSArray * _topics;
    bool  _useTransparentNavigationBar;
    NSString * _videoCallToActionTitle;
    NSURL * _videoCallToActionURL;
    double  _videoDuration;
    FCAssetHandle * _videoStillImage;
    NSString * _videoType;
    NSURL * _videoURL;
    bool  _webConverted;
    bool  _webEmbedsEnabled;
}

@property (nonatomic, readonly, copy) NSArray *allowedStorefrontIDs;
@property (nonatomic, retain) FCInterestToken *articleInterestToken;
@property (nonatomic, retain) NTPBArticleRecord *articleRecord;
@property (nonatomic) long long behaviorFlags;
@property (nonatomic, readonly, copy) NSArray *blockedStorefrontIDs;
@property (getter=isBundlePaid, nonatomic, readonly) bool bundlePaid;
@property (nonatomic, readonly) FCContentArchive *contentArchive;
@property (nonatomic, readonly, copy) NSString *identifier;
@property (nonatomic, readonly) bool isBlockedExplicitContent;
@property (nonatomic, readonly) bool isDraft;
@property (nonatomic, readonly) bool isLocalDraft;
@property (nonatomic, readonly) long long minimumNewsVersion;
@property (getter=isPaid, nonatomic, readonly) bool paid;
@property (nonatomic, readonly, copy) <FCChannelProviding> *sourceChannel;
@property (nonatomic, readonly, copy) NSString *sourceChannelID;
@property (nonatomic, readonly, copy) NSString *stocksClusterID;
@property (nonatomic, readonly, copy) NSString *stocksMetadataJSON;
@property (nonatomic, readonly, copy) NSString *stocksScoresJSON;
@property (nonatomic, copy) NSString *title;

- (void).cxx_destruct;
- (id)accessoryText;
- (id)allowedStorefrontIDs;
- (id)articleID;
- (id)articleInterestToken;
- (id)articleRecirculationConfigAssetHandle;
- (id)articleRecord;
- (id)authors;
- (long long)backendArticleVersion;
- (id)backingArticleRecordData;
- (long long)behaviorFlags;
- (id)blockedStorefrontIDs;
- (long long)bodyTextLength;
- (bool)canBePurchased;
- (id)clusterID;
- (id)contentArchive;
- (unsigned long long)contentType;
- (id)contentURL;
- (id)contentWithContext:(id)arg1;
- (id)coverArt;
- (bool)disableBookmarking;
- (bool)disablePrerollAds;
- (bool)disableTapToChannel;
- (id)excerpt;
- (id)experimentalTitleMetadata;
- (id)float16FullBodyEncoding;
- (id)float16TitleEncoding;
- (id)globalCohorts;
- (id)globalConversionStats;
- (id)globalExpirationTime;
- (unsigned long long)halfLife;
- (unsigned long long)halfLifeOverride;
- (bool)hasAudioTrack;
- (bool)hasThumbnail;
- (bool)hideModalCloseButton;
- (id)iAdCategories;
- (id)iAdKeywords;
- (id)iAdSectionIDs;
- (id)identifier;
- (id)init;
- (id)initWithArticleMetadata:(id)arg1 sourceChannel:(id)arg2 assetManager:(id)arg3;
- (id)initWithArticleRecord:(id)arg1 articleInterestToken:(id)arg2 sourceChannel:(id)arg3 parentIssue:(id)arg4 storyStyleConfigs:(id)arg5 storyTypeTimeout:(long long)arg6 rapidUpdatesTimeout:(long long)arg7 assetManager:(id)arg8 experimentalTitleProvider:(id)arg9;
- (id)initWithArticleRecordData:(id)arg1 sourceChannel:(id)arg2 parentIssue:(id)arg3 assetManager:(id)arg4;
- (bool)isBoundToContext;
- (bool)isBundlePaid;
- (bool)isDeleted;
- (bool)isDraft;
- (bool)isEvergreen;
- (bool)isFeatureCandidate;
- (bool)isHiddenFromAutoFavorites;
- (bool)isHiddenFromFeeds;
- (bool)isIssueOnly;
- (bool)isLocalDraft;
- (bool)isPaid;
- (bool)isPressRelease;
- (bool)isSponsored;
- (id)language;
- (id)lastFetchedDate;
- (id)lastModifiedDate;
- (double)layeredThumbnailAspectRatio;
- (id)layeredThumbnailJSON;
- (id)linkedArticleIDs;
- (id)linkedIssueIDs;
- (long long)minimumNewsVersion;
- (id)moreFromPublisherArticleIDs;
- (id)narrativeTrack;
- (id)narrativeTrackBuddyArticleIDs;
- (id)narrativeTrackPreferredUpsellVariantID;
- (id)narrativeTrackSample;
- (id)narrativeTrackTextRanges;
- (id)narrators;
- (bool)needsRapidUpdates;
- (id)parentIssue;
- (id)primaryAudience;
- (id)publishDate;
- (long long)publisherArticleVersion;
- (id)publisherCohorts;
- (id)publisherConversionStats;
- (id)publisherID;
- (id)publisherSpecifiedArticleIDs;
- (id)publisherTagMetadata;
- (bool)reduceVisibility;
- (id)referencedArticleID;
- (id)relatedArticleIDs;
- (unsigned long long)role;
- (id)routeURL;
- (void)setAccessoryText:(id)arg1;
- (void)setArticleID:(id)arg1;
- (void)setArticleInterestToken:(id)arg1;
- (void)setArticleRecord:(id)arg1;
- (void)setBehaviorFlags:(long long)arg1;
- (void)setClusterID:(id)arg1;
- (void)setContentType:(unsigned long long)arg1;
- (void)setDeleted:(bool)arg1;
- (void)setExcerpt:(id)arg1;
- (void)setGlobalExpirationTime:(id)arg1;
- (void)setHalfLife:(unsigned long long)arg1;
- (void)setHasThumbnail:(bool)arg1;
- (void)setIsEvergreen:(bool)arg1;
- (void)setPublishDate:(id)arg1;
- (void)setRole:(unsigned long long)arg1;
- (void)setShortExcerpt:(id)arg1;
- (void)setSourceName:(id)arg1;
- (void)setSponsored:(bool)arg1;
- (void)setSportsEventIDs:(id)arg1;
- (void)setStoryStyle:(id)arg1;
- (void)setStoryType:(unsigned long long)arg1;
- (void)setThumbnail:(id)arg1;
- (void)setThumbnailFocalFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setThumbnailHQ:(id)arg1;
- (void)setThumbnailLQ:(id)arg1;
- (void)setThumbnailMedium:(id)arg1;
- (void)setThumbnailUltraHQ:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setTitleCompact:(id)arg1;
- (void)setTopicIDs:(id)arg1;
- (void)setVideoType:(id)arg1;
- (id)shortExcerpt;
- (bool)showBundleSoftPaywall;
- (id)sourceChannel;
- (id)sourceName;
- (id)sportsEventIDs;
- (id)stocksClusterID;
- (id)stocksFields;
- (id)stocksMetadataJSON;
- (id)stocksScoresJSON;
- (id)storyStyle;
- (unsigned long long)storyType;
- (id)tagsExpiration;
- (id)thumbnail;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })thumbnailFocalFrame;
- (id)thumbnailHQ;
- (id)thumbnailImageAccentColor;
- (id)thumbnailImageBackgroundColor;
- (id)thumbnailImagePrimaryColor;
- (id)thumbnailImageTextColor;
- (id)thumbnailLQ;
- (id)thumbnailMedium;
- (id)thumbnailPerceptualHash;
- (id)thumbnailUltraHQ;
- (id)thumbnailWidget;
- (id)thumbnailWidgetHQ;
- (id)thumbnailWidgetLQ;
- (id)title;
- (id)titleCompact;
- (id)topicIDs;
- (id)topics;
- (bool)useTransparentNavigationBar;
- (id)videoCallToActionTitle;
- (id)videoCallToActionURL;
- (double)videoDuration;
- (id)videoStillImage;
- (id)videoType;
- (id)videoURL;
- (bool)webConverted;
- (bool)webEmbedsEnabled;

@end
