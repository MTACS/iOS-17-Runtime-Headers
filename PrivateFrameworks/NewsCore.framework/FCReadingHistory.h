
@interface FCReadingHistory : FCPrivateDataController <FCClearableReadingHistory> {
    NSMutableDictionary * _itemsByArticleID;
    NSMutableDictionary * _itemsByIdentifier;
    FCMTWriterLock * _itemsLock;
}

@property (nonatomic, readonly) NSSet *allConsumedArticleIDs;
@property (nonatomic, readonly) NSSet *allDislikedArticleIDs;
@property (nonatomic, readonly) NSSet *allLikedArticleIDs;
@property (nonatomic, readonly) NSSet *allReadArticleIDs;
@property (nonatomic, readonly) NSSet *allSeenArticleIDs;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSArray *readingHistoryItems;
@property (nonatomic, readonly) NSDictionary *readingHistoryItemsByArticleID;
@property (nonatomic, readonly) NSArray *sortedListenedArticleIDs;
@property (nonatomic, readonly) NSArray *sortedVisitedArticleIDs;
@property (readonly) Class superclass;

+ (id)backingRecordIDs;
+ (id)backingRecordZoneIDs;
+ (long long)commandQueueUrgency;
+ (id)commandStoreFileName;
+ (id)commandsToMergeLocalDataToCloud:(id)arg1 privateDataDirectory:(id)arg2;
+ (void)configureKeyValueStoreForJSONHandling:(id)arg1;
+ (id)desiredKeys;
+ (id)localStoreFilename;
+ (unsigned long long)localStoreVersion;
+ (void)populateLocalStoreClassRegistry:(id)arg1;
+ (bool)requiresBatchedSync;
+ (bool)requiresHighPriorityFirstSync;
+ (bool)requiresPushNotificationSupport;

- (void).cxx_destruct;
- (void)addObserver:(id)arg1;
- (id)allConsumedArticleIDs;
- (id)allDislikedArticleIDs;
- (id)allKnownRecordNamesWithinRecordZoneWithID:(id)arg1;
- (id)allLikedArticleIDs;
- (id)allReadArticleIDs;
- (id)allSeenArticleIDs;
- (bool)canHelpPruneZoneName:(id)arg1;
- (bool)canHelpRestoreZoneName:(id)arg1;
- (void)clearHistory;
- (id)consumedArticleIDsForTagID:(id)arg1 fromTime:(id)arg2;
- (id)firstSeenDateFor:(id)arg1;
- (void)handleSyncWithChangedRecords:(id)arg1 deletedRecordNames:(id)arg2;
- (bool)hasArticleBeenConsumed:(id)arg1;
- (bool)hasArticleBeenMarkedAsOffensive:(id)arg1;
- (bool)hasArticleBeenRead:(id)arg1;
- (bool)hasArticleBeenReadMoreThanThreshold:(id)arg1;
- (bool)hasArticleBeenRemovedFromAudio:(id)arg1;
- (bool)hasArticleBeenSeen:(id)arg1;
- (bool)hasArticleBeenVisited:(id)arg1;
- (bool)hasArticleCompletedListening:(id)arg1;
- (bool)hasArticleCompletedReading:(id)arg1;
- (id)historyItemsByArticleIDForArticleIDs:(id)arg1;
- (id)historyItemsForArticleIDs:(id)arg1;
- (id)initWithContext:(id)arg1 pushNotificationCenter:(id)arg2 storeDirectory:(id)arg3;
- (id)lastListenedFor:(id)arg1;
- (id)lastVisitedDateForArticleID:(id)arg1;
- (unsigned long long)likingStatusForArticleID:(id)arg1;
- (long long)listenedCountFor:(id)arg1;
- (double)listeningProgressFor:(id)arg1;
- (id)listeningProgressSavedDateFor:(id)arg1;
- (void)loadLocalCachesFromStore;
- (id)localStoreMigrator;
- (void)markArticle:(id)arg1 asArticleConsumed:(bool)arg2 sourceChannelTagID:(id)arg3;
- (void)markArticle:(id)arg1 asOffensive:(bool)arg2;
- (bool)markArticle:(id)arg1 withCompletedListening:(bool)arg2;
- (bool)markArticle:(id)arg1 withCompletedReading:(bool)arg2;
- (void)markArticle:(id)arg1 withLastListened:(id)arg2;
- (bool)markArticle:(id)arg1 withLikingStatus:(unsigned long long)arg2;
- (void)markArticle:(id)arg1 withListeningProgress:(double)arg2;
- (void)markArticle:(id)arg1 withReadingPositionJSON:(id)arg2;
- (bool)markArticle:(id)arg1 withRemovedFromAudio:(bool)arg2;
- (bool)markArticleAsReadWithArticleID:(id)arg1 articleVersion:(long long)arg2 readDate:(id)arg3;
- (void)markArticleAsReadWithHeadline:(id)arg1;
- (void)markArticleAsReadWithHeadline:(id)arg1 fromGroupType:(long long)arg2 swipedToArticle:(bool)arg3 onScreenChecker:(id /* block */)arg4;
- (bool)markArticleAsSeenWithHeadline:(id)arg1;
- (bool)markArticleAsSeenWithHeadline:(id)arg1 rememberForever:(bool)arg2;
- (id)markArticlesAsSeenWithHeadlines:(id)arg1;
- (id)mostRecentlyCompletedListeningArticlesWithMaxCount:(unsigned long long)arg1;
- (id)mostRecentlyReadArticlesWithMaxCount:(unsigned long long)arg1;
- (id)pruneRecords:(id)arg1 forZoneName:(id)arg2;
- (id)readingHistoryItems;
- (id)readingHistoryItemsByArticleID;
- (id)readingPositionJSONFor:(id)arg1;
- (id)readingPositionSavedDateFor:(id)arg1;
- (id)recordsForRestoringZoneName:(id)arg1;
- (void)removeArticleFromHistory:(id)arg1;
- (void)removeObserver:(id)arg1;
- (double)softMaxRecordAgeWhenMigratingZoneName:(id)arg1;
- (unsigned long long)softMaxRecordCountWhenMigratingZoneName:(id)arg1;
- (id)sortedListenedArticleIDs;
- (id)sortedVisitedArticleIDs;
- (id)sortedVisitedArticleIDsSatisfying:(id /* block */)arg1;
- (bool)toggleArticleHasBeenMarkedAsOffensive:(id)arg1;
- (bool)toggleDislikeForArticleWithID:(id)arg1;
- (bool)toggleLikeForArticleWithID:(id)arg1;

@end
