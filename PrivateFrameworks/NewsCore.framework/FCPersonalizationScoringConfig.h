
@interface FCPersonalizationScoringConfig : NSObject <NSCopying, NSSecureCoding> {
    double  _anfMultiplier;
    double  _articleEmbeddingScoreCoefficient;
    double  _articleEmbeddingScoreDampenerWeight;
    double  _articleLengthAggregateWeight;
    double  _articleListenedPenalty;
    double  _articleReadPenalty;
    double  _audioMultiplierForFreeUsers;
    double  _audioMultiplierForPaidUsers;
    double  _audioMultiplierForTrialUsers;
    double  _autofavoritedVoteCoefficient;
    double  _baselineRatePrior;
    double  _bundleFreeMultiplierForFreeUsers;
    double  _bundleFreeMultiplierForPaidUsers;
    double  _bundleFreeMultiplierForTrialUsers;
    double  _bundlePaidMultiplierForFreeUsers;
    double  _bundlePaidMultiplierForPaidUsers;
    double  _bundlePaidMultiplierForTrialUsers;
    double  _clientSideEngagementBoostANFMutiplier;
    double  _clientSideEngagementBoostFeatureCandidateArticleMultiplier;
    double  _clientSideEngagementBoostFeaturedArticleMultiplier;
    double  _clientSideEngagementBoostFreeCohortCTRCap;
    double  _clientSideEngagementBoostPaidCohortCTRCap;
    double  _clientSideEngagementBoostReduceVisibilityMultiplier;
    double  _clientSideEngagementBoostTagQualityMultiplier;
    double  _contentTriggerDampenerCoefficient;
    double  _contentTriggerMaxDampener;
    long long  _contentTriggerMaxEventCount;
    double  _contentTriggerMinScoreWeight;
    double  _contentTriggerScoreExponent;
    double  _contentTriggerTagWeightExponent;
    double  _conversionCoefficientForFreeUsers;
    double  _conversionCoefficientForPaidUsers;
    double  _conversionCoefficientForTrialUsers;
    FCPersonalizationCohortConfig * _conversionCohort;
    double  _conversionScoreDemocratizationFactor;
    double  _ctrWithOneAutofavorited;
    double  _ctrWithOneSubscribed;
    double  _ctrWithSubscribedChannel;
    double  _ctrWithThreeAutofavorited;
    double  _ctrWithThreeSubscribed;
    double  _ctrWithTwoAutofavorited;
    double  _ctrWithTwoSubscribed;
    double  _ctrWithZeroAutofavorited;
    double  _ctrWithZeroSubscribed;
    bool  _dampenerEnabled;
    double  _decayFactor;
    double  _evergreenHalfLifeCoefficient;
    double  _evergreenMultiplierForFreeUsers;
    double  _evergreenMultiplierForPaidUsers;
    double  _evergreenMultiplierForTrialUsers;
    double  _featuredMultiplierForFreeUsers;
    double  _featuredMultiplierForPaidUsers;
    double  _featuredMultiplierForTrialUsers;
    double  _globalScoreCoefficientFree;
    double  _globalScoreCoefficientHalfLife;
    double  _globalScoreCoefficientInitialMultiplier;
    double  _globalScoreCoefficientPaid;
    double  _globalScoreDemocratizationFactor;
    double  _halfLifeCoefficient;
    double  _headlineSeenPenalty;
    double  _localScoreDemocratizationFactor;
    FCPersonalizationLowFlowEstimationConfig * _lowFlowBoostEventEstimationConfig;
    double  _lowFlowBoostFactor;
    double  _lowFlowBoostFetchCountWeight;
    FCPersonalizationLowFlowEstimationConfig * _lowFlowBoostFetchEstimationConfig;
    double  _lowFlowBoostMaxProductFactor;
    bool  _multiplierEnabled;
    double  _mutedVoteCoefficient;
    double  _nicheContentBaselineMembershipMultiplier;
    bool  _nicheContentBoostOnlyAboveBaselineMembership;
    double  _nicheContentDefaultFlowRate;
    double  _nicheContentDefaultSubscriptionRate;
    bool  _nicheContentExcludeNonGroupableTopics;
    double  _nicheContentManagedTopicBoost;
    bool  _nicheContentManagedTopicBoostAllTags;
    double  _nicheContentPublisherFlowExponent;
    double  _nicheContentPublisherSubscriptionExponent;
    double  _nicheContentQualityThreshold;
    double  _nicheContentServerFlowWeight;
    bool  _nicheContentShouldBoostPublisher;
    double  _nicheContentTopicFlowExponent;
    double  _nicheContentTopicSubscriptionExponent;
    double  _personalizationCoefficient;
    double  _personalizedMultiplierBaselineMembership;
    double  _personalizedMultiplierMembershipDampener;
    double  _personalizedMultiplierPostBaselineCurvature;
    double  _personalizedMultiplierPreBaselineCurvature;
    double  _publisherAggregateWeight;
    double  _publisherDampenerWeight;
    double  _recentlyFollowedDurationThreshold;
    double  _recentlyFollowedMultiplier;
    bool  _respectHalfLifeOverride;
    double  _sparseTagsPenalty;
    double  _subscribedChannelScoreCoefficient;
    double  _subscribedTopicsScoreCoefficient;
    double  _tabiScoreCoefficient;
    FCPersonalizationCohortConfig * _userCohort;
    double  _userFeedbackHalfLifeCoefficient;
}

@property (nonatomic) double anfMultiplier;
@property (nonatomic) double articleEmbeddingScoreCoefficient;
@property (nonatomic) double articleEmbeddingScoreDampenerWeight;
@property (nonatomic) double articleLengthAggregateWeight;
@property (nonatomic) double articleListenedPenalty;
@property (nonatomic) double articleReadPenalty;
@property (nonatomic) double audioMultiplierForFreeUsers;
@property (nonatomic) double audioMultiplierForPaidUsers;
@property (nonatomic) double audioMultiplierForTrialUsers;
@property (nonatomic) double autofavoritedVoteCoefficient;
@property (nonatomic) double baselineRatePrior;
@property (nonatomic) double bundleFreeMultiplierForFreeUsers;
@property (nonatomic) double bundleFreeMultiplierForPaidUsers;
@property (nonatomic) double bundleFreeMultiplierForTrialUsers;
@property (nonatomic) double bundlePaidMultiplierForFreeUsers;
@property (nonatomic) double bundlePaidMultiplierForPaidUsers;
@property (nonatomic) double bundlePaidMultiplierForTrialUsers;
@property (nonatomic) double clientSideEngagementBoostANFMutiplier;
@property (nonatomic) double clientSideEngagementBoostFeatureCandidateArticleMultiplier;
@property (nonatomic) double clientSideEngagementBoostFeaturedArticleMultiplier;
@property (nonatomic) double clientSideEngagementBoostFreeCohortCTRCap;
@property (nonatomic) double clientSideEngagementBoostPaidCohortCTRCap;
@property (nonatomic) double clientSideEngagementBoostReduceVisibilityMultiplier;
@property (nonatomic) double clientSideEngagementBoostTagQualityMultiplier;
@property (nonatomic) double contentTriggerDampenerCoefficient;
@property (nonatomic) double contentTriggerMaxDampener;
@property (nonatomic) long long contentTriggerMaxEventCount;
@property (nonatomic) double contentTriggerMinScoreWeight;
@property (nonatomic) double contentTriggerScoreExponent;
@property (nonatomic) double contentTriggerTagWeightExponent;
@property (nonatomic) double conversionCoefficientForFreeUsers;
@property (nonatomic) double conversionCoefficientForPaidUsers;
@property (nonatomic) double conversionCoefficientForTrialUsers;
@property (nonatomic, retain) FCPersonalizationCohortConfig *conversionCohort;
@property (nonatomic) double conversionScoreDemocratizationFactor;
@property (nonatomic) double ctrWithOneAutofavorited;
@property (nonatomic) double ctrWithOneSubscribed;
@property (nonatomic) double ctrWithSubscribedChannel;
@property (nonatomic) double ctrWithThreeAutofavorited;
@property (nonatomic) double ctrWithThreeSubscribed;
@property (nonatomic) double ctrWithTwoAutofavorited;
@property (nonatomic) double ctrWithTwoSubscribed;
@property (nonatomic) double ctrWithZeroAutofavorited;
@property (nonatomic) double ctrWithZeroSubscribed;
@property (nonatomic) bool dampenerEnabled;
@property (nonatomic) double decayFactor;
@property (nonatomic) double evergreenHalfLifeCoefficient;
@property (nonatomic) double evergreenMultiplierForFreeUsers;
@property (nonatomic) double evergreenMultiplierForPaidUsers;
@property (nonatomic) double evergreenMultiplierForTrialUsers;
@property (nonatomic) double featuredMultiplierForFreeUsers;
@property (nonatomic) double featuredMultiplierForPaidUsers;
@property (nonatomic) double featuredMultiplierForTrialUsers;
@property (nonatomic) double globalScoreCoefficientFree;
@property (nonatomic) double globalScoreCoefficientHalfLife;
@property (nonatomic) double globalScoreCoefficientInitialMultiplier;
@property (nonatomic) double globalScoreCoefficientPaid;
@property (nonatomic) double globalScoreDemocratizationFactor;
@property (nonatomic) double halfLifeCoefficient;
@property (nonatomic) double headlineSeenPenalty;
@property (nonatomic) double localScoreDemocratizationFactor;
@property (nonatomic, retain) FCPersonalizationLowFlowEstimationConfig *lowFlowBoostEventEstimationConfig;
@property (nonatomic) double lowFlowBoostFactor;
@property (nonatomic) double lowFlowBoostFetchCountWeight;
@property (nonatomic, retain) FCPersonalizationLowFlowEstimationConfig *lowFlowBoostFetchEstimationConfig;
@property (nonatomic) double lowFlowBoostMaxProductFactor;
@property (nonatomic) bool multiplierEnabled;
@property (nonatomic) double mutedVoteCoefficient;
@property (nonatomic) double nicheContentBaselineMembershipMultiplier;
@property (nonatomic) bool nicheContentBoostOnlyAboveBaselineMembership;
@property (nonatomic) double nicheContentDefaultFlowRate;
@property (nonatomic) double nicheContentDefaultSubscriptionRate;
@property (nonatomic) bool nicheContentExcludeNonGroupableTopics;
@property (nonatomic) double nicheContentManagedTopicBoost;
@property (nonatomic) bool nicheContentManagedTopicBoostAllTags;
@property (nonatomic) double nicheContentPublisherFlowExponent;
@property (nonatomic) double nicheContentPublisherSubscriptionExponent;
@property (nonatomic) double nicheContentQualityThreshold;
@property (nonatomic) double nicheContentServerFlowWeight;
@property (nonatomic) bool nicheContentShouldBoostPublisher;
@property (nonatomic) double nicheContentTopicFlowExponent;
@property (nonatomic) double nicheContentTopicSubscriptionExponent;
@property (nonatomic) double personalizationCoefficient;
@property (nonatomic) double personalizedMultiplierBaselineMembership;
@property (nonatomic) double personalizedMultiplierMembershipDampener;
@property (nonatomic) double personalizedMultiplierPostBaselineCurvature;
@property (nonatomic) double personalizedMultiplierPreBaselineCurvature;
@property (nonatomic) double publisherAggregateWeight;
@property (nonatomic) double publisherDampenerWeight;
@property (nonatomic) double recentlyFollowedDurationThreshold;
@property (nonatomic) double recentlyFollowedMultiplier;
@property (nonatomic) bool respectHalfLifeOverride;
@property (nonatomic) double sparseTagsPenalty;
@property (nonatomic) double subscribedChannelScoreCoefficient;
@property (nonatomic) double subscribedTopicsScoreCoefficient;
@property (nonatomic) double tabiScoreCoefficient;
@property (nonatomic, retain) FCPersonalizationCohortConfig *userCohort;
@property (nonatomic) double userFeedbackHalfLifeCoefficient;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (double)anfMultiplier;
- (double)articleEmbeddingScoreCoefficient;
- (double)articleEmbeddingScoreDampenerWeight;
- (double)articleLengthAggregateWeight;
- (double)articleListenedPenalty;
- (double)articleReadPenalty;
- (double)audioMultiplierForFreeUsers;
- (double)audioMultiplierForPaidUsers;
- (double)audioMultiplierForTrialUsers;
- (double)autofavoritedVoteCoefficient;
- (double)baselineRatePrior;
- (double)bundleFreeMultiplierForFreeUsers;
- (double)bundleFreeMultiplierForPaidUsers;
- (double)bundleFreeMultiplierForTrialUsers;
- (double)bundlePaidMultiplierForFreeUsers;
- (double)bundlePaidMultiplierForPaidUsers;
- (double)bundlePaidMultiplierForTrialUsers;
- (double)clientSideEngagementBoostANFMutiplier;
- (double)clientSideEngagementBoostFeatureCandidateArticleMultiplier;
- (double)clientSideEngagementBoostFeaturedArticleMultiplier;
- (double)clientSideEngagementBoostFreeCohortCTRCap;
- (double)clientSideEngagementBoostPaidCohortCTRCap;
- (double)clientSideEngagementBoostReduceVisibilityMultiplier;
- (double)clientSideEngagementBoostTagQualityMultiplier;
- (double)contentTriggerDampenerCoefficient;
- (double)contentTriggerMaxDampener;
- (long long)contentTriggerMaxEventCount;
- (double)contentTriggerMinScoreWeight;
- (double)contentTriggerScoreExponent;
- (double)contentTriggerTagWeightExponent;
- (double)conversionCoefficientForFreeUsers;
- (double)conversionCoefficientForPaidUsers;
- (double)conversionCoefficientForTrialUsers;
- (id)conversionCohort;
- (double)conversionScoreDemocratizationFactor;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (double)ctrWithOneAutofavorited;
- (double)ctrWithOneSubscribed;
- (double)ctrWithSubscribedChannel;
- (double)ctrWithThreeAutofavorited;
- (double)ctrWithThreeSubscribed;
- (double)ctrWithTwoAutofavorited;
- (double)ctrWithTwoSubscribed;
- (double)ctrWithZeroAutofavorited;
- (double)ctrWithZeroSubscribed;
- (bool)dampenerEnabled;
- (double)decayFactor;
- (void)encodeWithCoder:(id)arg1;
- (double)evergreenHalfLifeCoefficient;
- (double)evergreenMultiplierForFreeUsers;
- (double)evergreenMultiplierForPaidUsers;
- (double)evergreenMultiplierForTrialUsers;
- (double)featuredMultiplierForFreeUsers;
- (double)featuredMultiplierForPaidUsers;
- (double)featuredMultiplierForTrialUsers;
- (double)globalScoreCoefficientFree;
- (double)globalScoreCoefficientHalfLife;
- (double)globalScoreCoefficientInitialMultiplier;
- (double)globalScoreCoefficientPaid;
- (double)globalScoreDemocratizationFactor;
- (double)halfLifeCoefficient;
- (double)headlineSeenPenalty;
- (id)init;
- (id)initWithAnfMultiplier:(double)arg1 articleEmbeddingScoreCoefficient:(double)arg2 articleEmbeddingScoreDampenerWeight:(double)arg3 articleLengthAggregateWeight:(double)arg4 articleReadPenalty:(double)arg5 articleListenedPenalty:(double)arg6 audioMultiplierForFreeUsers:(double)arg7 audioMultiplierForTrialUsers:(double)arg8 audioMultiplierForPaidUsers:(double)arg9 autofavoritedVoteCoefficient:(double)arg10 baselineRatePrior:(double)arg11 bundleFreeMultiplierForFreeUsers:(double)arg12 bundleFreeMultiplierForTrialUsers:(double)arg13 bundleFreeMultiplierForPaidUsers:(double)arg14 bundlePaidMultiplierForFreeUsers:(double)arg15 bundlePaidMultiplierForTrialUsers:(double)arg16 bundlePaidMultiplierForPaidUsers:(double)arg17 conversionCoefficientForFreeUsers:(double)arg18 conversionCoefficientForTrialUsers:(double)arg19 conversionCoefficientForPaidUsers:(double)arg20 conversionCohort:(id)arg21 ctrWithOneAutofavorited:(double)arg22 ctrWithOneSubscribed:(double)arg23 ctrWithSubscribedChannel:(double)arg24 ctrWithThreeAutofavorited:(double)arg25 ctrWithThreeSubscribed:(double)arg26 ctrWithTwoAutofavorited:(double)arg27 ctrWithTwoSubscribed:(double)arg28 ctrWithZeroAutofavorited:(double)arg29 ctrWithZeroSubscribed:(double)arg30 decayFactor:(double)arg31 featuredMultiplierForFreeUsers:(double)arg32 featuredMultiplierForTrialUsers:(double)arg33 featuredMultiplierForPaidUsers:(double)arg34 evergreenMultiplierForFreeUsers:(double)arg35 evergreenMultiplierForTrialUsers:(double)arg36 evergreenMultiplierForPaidUsers:(double)arg37 globalScoreCoefficientFree:(double)arg38 globalScoreCoefficientPaid:(double)arg39 globalScoreCoefficientHalfLife:(double)arg40 globalScoreCoefficientInitialMultiplier:(double)arg41 globalScoreDemocratizationFactor:(double)arg42 localScoreDemocratizationFactor:(double)arg43 conversionScoreDemocratizationFactor:(double)arg44 headlineSeenPenalty:(double)arg45 halfLifeCoefficient:(double)arg46 userFeedbackHalfLifeCoefficient:(double)arg47 evergreenHalfLifeCoefficient:(double)arg48 respectHalfLifeOverride:(bool)arg49 mutedVoteCoefficient:(double)arg50 personalizationCoefficient:(double)arg51 publisherAggregateWeight:(double)arg52 sparseTagsPenalty:(double)arg53 subscribedChannelScoreCoefficient:(double)arg54 subscribedTopicsScoreCoefficient:(double)arg55 userCohort:(id)arg56 lowFlowBoostFetchCountWeight:(double)arg57 lowFlowBoostFactor:(double)arg58 lowFlowBoostMaxProductFactor:(double)arg59 lowFlowBoostFetchEstimationConfig:(id)arg60 lowFlowBoostEventEstimationConfig:(id)arg61 nicheContentBoostOnlyAboveBaselineMembership:(bool)arg62 nicheContentBaselineMembershipMultiplier:(double)arg63 nicheContentManagedTopicBoostAllTags:(bool)arg64 nicheContentDefaultFlowRate:(double)arg65 nicheContentDefaultSubscriptionRate:(double)arg66 nicheContentExcludeNonGroupableTopics:(bool)arg67 nicheContentShouldBoostPublisher:(bool)arg68 nicheContentTopicFlowExponent:(double)arg69 nicheContentPublisherFlowExponent:(double)arg70 nicheContentManagedTopicBoost:(double)arg71 nicheContentServerFlowWeight:(double)arg72 nicheContentTopicSubscriptionExponent:(double)arg73 nicheContentPublisherSubscriptionExponent:(double)arg74 nicheContentQualityThreshold:(double)arg75 contentTriggerMaxEventCount:(long long)arg76 contentTriggerScoreExponent:(double)arg77 contentTriggerTagWeightExponent:(double)arg78 contentTriggerMinScoreWeight:(double)arg79 contentTriggerMaxDampener:(double)arg80 contentTriggerDampenerCoefficient:(double)arg81 personalizedMultiplierBaselineMembership:(double)arg82 personalizedMultiplierPreBaselineCurvature:(double)arg83 personalizedMultiplierPostBaselineCurvature:(double)arg84 personalizedMultiplierMembershipDampener:(double)arg85 publisherDampenerWeight:(double)arg86 recentlyFollowedDurationThreshold:(double)arg87 recentlyFollowedMultiplier:(double)arg88 tabiScoreCoefficient:(double)arg89 clientSideEngagementBoostFeaturedArticleMultiplier:(double)arg90 clientSideEngagementBoostFeatureCandidateArticleMultiplier:(double)arg91 clientSideEngagementBoostFreeCohortCTRCap:(double)arg92 clientSideEngagementBoostPaidCohortCTRCap:(double)arg93 clientSideEngagementBoostTagQualityMultiplier:(double)arg94 clientSideEngagementBoostReduceVisibilityMultiplier:(double)arg95 clientSideEngagementBoostANFMutiplier:(double)arg96 dampenerEnabled:(bool)arg97 multiplierEnabled:(bool)arg98;
- (id)initWithCoder:(id)arg1;
- (id)initWithConfigDictionary:(id)arg1;
- (id)initWithConfigDictionary:(id)arg1 defaultConfig:(id)arg2;
- (double)localScoreDemocratizationFactor;
- (id)lowFlowBoostEventEstimationConfig;
- (double)lowFlowBoostFactor;
- (double)lowFlowBoostFetchCountWeight;
- (id)lowFlowBoostFetchEstimationConfig;
- (double)lowFlowBoostMaxProductFactor;
- (bool)multiplierEnabled;
- (double)mutedVoteCoefficient;
- (double)nicheContentBaselineMembershipMultiplier;
- (bool)nicheContentBoostOnlyAboveBaselineMembership;
- (double)nicheContentDefaultFlowRate;
- (double)nicheContentDefaultSubscriptionRate;
- (bool)nicheContentExcludeNonGroupableTopics;
- (double)nicheContentManagedTopicBoost;
- (bool)nicheContentManagedTopicBoostAllTags;
- (double)nicheContentPublisherFlowExponent;
- (double)nicheContentPublisherSubscriptionExponent;
- (double)nicheContentQualityThreshold;
- (double)nicheContentServerFlowWeight;
- (bool)nicheContentShouldBoostPublisher;
- (double)nicheContentTopicFlowExponent;
- (double)nicheContentTopicSubscriptionExponent;
- (double)personalizationCoefficient;
- (double)personalizedMultiplierBaselineMembership;
- (double)personalizedMultiplierMembershipDampener;
- (double)personalizedMultiplierPostBaselineCurvature;
- (double)personalizedMultiplierPreBaselineCurvature;
- (double)publisherAggregateWeight;
- (double)publisherDampenerWeight;
- (double)recentlyFollowedDurationThreshold;
- (double)recentlyFollowedMultiplier;
- (bool)respectHalfLifeOverride;
- (void)setAnfMultiplier:(double)arg1;
- (void)setArticleEmbeddingScoreCoefficient:(double)arg1;
- (void)setArticleEmbeddingScoreDampenerWeight:(double)arg1;
- (void)setArticleLengthAggregateWeight:(double)arg1;
- (void)setArticleListenedPenalty:(double)arg1;
- (void)setArticleReadPenalty:(double)arg1;
- (void)setAudioMultiplierForFreeUsers:(double)arg1;
- (void)setAudioMultiplierForPaidUsers:(double)arg1;
- (void)setAudioMultiplierForTrialUsers:(double)arg1;
- (void)setAutofavoritedVoteCoefficient:(double)arg1;
- (void)setBaselineRatePrior:(double)arg1;
- (void)setBundleFreeMultiplierForFreeUsers:(double)arg1;
- (void)setBundleFreeMultiplierForPaidUsers:(double)arg1;
- (void)setBundleFreeMultiplierForTrialUsers:(double)arg1;
- (void)setBundlePaidMultiplierForFreeUsers:(double)arg1;
- (void)setBundlePaidMultiplierForPaidUsers:(double)arg1;
- (void)setBundlePaidMultiplierForTrialUsers:(double)arg1;
- (void)setClientSideEngagementBoostANFMutiplier:(double)arg1;
- (void)setClientSideEngagementBoostFeatureCandidateArticleMultiplier:(double)arg1;
- (void)setClientSideEngagementBoostFeaturedArticleMultiplier:(double)arg1;
- (void)setClientSideEngagementBoostFreeCohortCTRCap:(double)arg1;
- (void)setClientSideEngagementBoostPaidCohortCTRCap:(double)arg1;
- (void)setClientSideEngagementBoostReduceVisibilityMultiplier:(double)arg1;
- (void)setClientSideEngagementBoostTagQualityMultiplier:(double)arg1;
- (void)setContentTriggerDampenerCoefficient:(double)arg1;
- (void)setContentTriggerMaxDampener:(double)arg1;
- (void)setContentTriggerMaxEventCount:(long long)arg1;
- (void)setContentTriggerMinScoreWeight:(double)arg1;
- (void)setContentTriggerScoreExponent:(double)arg1;
- (void)setContentTriggerTagWeightExponent:(double)arg1;
- (void)setConversionCoefficientForFreeUsers:(double)arg1;
- (void)setConversionCoefficientForPaidUsers:(double)arg1;
- (void)setConversionCoefficientForTrialUsers:(double)arg1;
- (void)setConversionCohort:(id)arg1;
- (void)setConversionScoreDemocratizationFactor:(double)arg1;
- (void)setCtrWithOneAutofavorited:(double)arg1;
- (void)setCtrWithOneSubscribed:(double)arg1;
- (void)setCtrWithSubscribedChannel:(double)arg1;
- (void)setCtrWithThreeAutofavorited:(double)arg1;
- (void)setCtrWithThreeSubscribed:(double)arg1;
- (void)setCtrWithTwoAutofavorited:(double)arg1;
- (void)setCtrWithTwoSubscribed:(double)arg1;
- (void)setCtrWithZeroAutofavorited:(double)arg1;
- (void)setCtrWithZeroSubscribed:(double)arg1;
- (void)setDampenerEnabled:(bool)arg1;
- (void)setDecayFactor:(double)arg1;
- (void)setEvergreenHalfLifeCoefficient:(double)arg1;
- (void)setEvergreenMultiplierForFreeUsers:(double)arg1;
- (void)setEvergreenMultiplierForPaidUsers:(double)arg1;
- (void)setEvergreenMultiplierForTrialUsers:(double)arg1;
- (void)setFeaturedMultiplierForFreeUsers:(double)arg1;
- (void)setFeaturedMultiplierForPaidUsers:(double)arg1;
- (void)setFeaturedMultiplierForTrialUsers:(double)arg1;
- (void)setGlobalScoreCoefficientFree:(double)arg1;
- (void)setGlobalScoreCoefficientHalfLife:(double)arg1;
- (void)setGlobalScoreCoefficientInitialMultiplier:(double)arg1;
- (void)setGlobalScoreCoefficientPaid:(double)arg1;
- (void)setGlobalScoreDemocratizationFactor:(double)arg1;
- (void)setHalfLifeCoefficient:(double)arg1;
- (void)setHeadlineSeenPenalty:(double)arg1;
- (void)setLocalScoreDemocratizationFactor:(double)arg1;
- (void)setLowFlowBoostEventEstimationConfig:(id)arg1;
- (void)setLowFlowBoostFactor:(double)arg1;
- (void)setLowFlowBoostFetchCountWeight:(double)arg1;
- (void)setLowFlowBoostFetchEstimationConfig:(id)arg1;
- (void)setLowFlowBoostMaxProductFactor:(double)arg1;
- (void)setMultiplierEnabled:(bool)arg1;
- (void)setMutedVoteCoefficient:(double)arg1;
- (void)setNicheContentBaselineMembershipMultiplier:(double)arg1;
- (void)setNicheContentBoostOnlyAboveBaselineMembership:(bool)arg1;
- (void)setNicheContentDefaultFlowRate:(double)arg1;
- (void)setNicheContentDefaultSubscriptionRate:(double)arg1;
- (void)setNicheContentExcludeNonGroupableTopics:(bool)arg1;
- (void)setNicheContentManagedTopicBoost:(double)arg1;
- (void)setNicheContentManagedTopicBoostAllTags:(bool)arg1;
- (void)setNicheContentPublisherFlowExponent:(double)arg1;
- (void)setNicheContentPublisherSubscriptionExponent:(double)arg1;
- (void)setNicheContentQualityThreshold:(double)arg1;
- (void)setNicheContentServerFlowWeight:(double)arg1;
- (void)setNicheContentShouldBoostPublisher:(bool)arg1;
- (void)setNicheContentTopicFlowExponent:(double)arg1;
- (void)setNicheContentTopicSubscriptionExponent:(double)arg1;
- (void)setPersonalizationCoefficient:(double)arg1;
- (void)setPersonalizedMultiplierBaselineMembership:(double)arg1;
- (void)setPersonalizedMultiplierMembershipDampener:(double)arg1;
- (void)setPersonalizedMultiplierPostBaselineCurvature:(double)arg1;
- (void)setPersonalizedMultiplierPreBaselineCurvature:(double)arg1;
- (void)setPublisherAggregateWeight:(double)arg1;
- (void)setPublisherDampenerWeight:(double)arg1;
- (void)setRecentlyFollowedDurationThreshold:(double)arg1;
- (void)setRecentlyFollowedMultiplier:(double)arg1;
- (void)setRespectHalfLifeOverride:(bool)arg1;
- (void)setSparseTagsPenalty:(double)arg1;
- (void)setSubscribedChannelScoreCoefficient:(double)arg1;
- (void)setSubscribedTopicsScoreCoefficient:(double)arg1;
- (void)setTabiScoreCoefficient:(double)arg1;
- (void)setUserCohort:(id)arg1;
- (void)setUserFeedbackHalfLifeCoefficient:(double)arg1;
- (bool)shouldOverrideTabiCoefficient;
- (double)sparseTagsPenalty;
- (double)subscribedChannelScoreCoefficient;
- (double)subscribedTopicsScoreCoefficient;
- (double)tabiCoefficientOverride;
- (double)tabiScoreCoefficient;
- (id)userCohort;
- (double)userFeedbackHalfLifeCoefficient;

@end
