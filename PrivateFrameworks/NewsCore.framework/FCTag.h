
@interface FCTag : NSObject <FCChannelProviding, FCContentArchivable, FCFeedTheming, FCSectionProviding, FCSportsProviding, FCSportsTheming, FCTagProviding, FCTagStocksFields, FCTopicProviding> {
    NSString * _UMCCanonicalID;
    FCColor * _adBackgroundColor;
    NSString * _adBackgroundColorHexString;
    FCColorGradient * _adBackgroundGradient;
    NSArray * _adTargetingKeywords;
    NSArray * _allowedStorefrontIDs;
    FCAssetManager * _assetManager;
    NSString * _backIssuesListID;
    NSString * _backgroundColorHexString;
    double  _bannerImageBaselineOffsetPercentage;
    FCTagBanner * _bannerImageForMask;
    FCTagBanner * _bannerImageForThemeBackground;
    FCTagBanner * _bannerImageForWhiteBackground;
    double  _bannerImageScale;
    NSArray * _blockedStorefrontIDs;
    FCTagBanner * _compactBannerImage;
    long long  _contentProvider;
    FCAssetHandle * _coverImageAssetHandle;
    NSArray * _currentIssueIDs;
    FCColor * _darkStyleAdBackgroundColor;
    NSString * _darkStyleAdBackgroundColorHexString;
    FCColorGradient * _darkStyleAdBackgroundGradient;
    NSString * _darkStyleBackgroundColorHexString;
    FCColor * _darkStyleFeedBackgroundColor;
    NSString * _darkStyleFeedBackgroundColorHexString;
    FCColorGradient * _darkStyleFeedBackgroundGradient;
    FCColor * _darkStyleFeedControlColor;
    NSString * _darkStyleFeedControlColorHexString;
    NSString * _darkStyleForegroundColorHexString;
    NSString * _darkStyleNavigationChromeBackgroundColorHexString;
    FCColorGradient * _darkStyleNavigationChromeBackgroundGradient;
    FCAssetHandle * _darkStyleNavigationChromeBackgroundImage;
    FCAssetHandle * _darkStyleNavigationChromeBackgroundImageCompact;
    FCAssetHandle * _darkStyleNavigationChromeBackgroundImageLarge;
    NSString * _darkStyleNavigationChromeSeparatorColorHexString;
    FCHeadlineTemplate * _defaultHeadlineTemplate;
    NSString * _defaultSectionID;
    bool  _disableBlock;
    bool  _disableFollow;
    FCColor * _feedBackgroundColor;
    NSString * _feedBackgroundColorHexString;
    FCColorGradient * _feedBackgroundGradient;
    NTPBFeedConfiguration * _feedConfiguration;
    FCColor * _feedControlColor;
    NSString * _feedControlColorHexString;
    NSString * _feedMastheadType;
    FCAssetHandle * _feedNavImageAssetHandle;
    FCAssetHandle * _feedNavImageHQAssetHandle;
    NSDate * _fetchDate;
    NSString * _foregroundColorHexString;
    NSString * _groupDarkStyleTitleColorHexString;
    NSString * _groupTitleColorHexString;
    unsigned long long  _groupingEligibility;
    FCTextInfo * _headlineBylineTextInfo;
    FCTextInfo * _headlineExcerptTextInfo;
    FCTextInfo * _headlineTitleTextInfo;
    bool  _hideAccessoryText;
    bool  _hideLocationInMasthead;
    NSString * _highlightsArticleListID;
    NSArray * _iAdCategories;
    NSArray * _iAdKeywords;
    NSString * _identifier;
    bool  _isArticleReadCountReportingEnabled;
    bool  _isAutoDarkModeEnabled;
    bool  _isDeprecated;
    bool  _isExplicitContent;
    bool  _isHidden;
    bool  _isInternal;
    bool  _isLocal;
    bool  _isMagazine;
    bool  _isMySports;
    bool  _isNewspaper;
    bool  _isNotificationEnabled;
    bool  _isPublic;
    bool  _isPuzzleHub;
    bool  _isPuzzleType;
    bool  _isRealTimeTrackingEnabled;
    bool  _isSandbox;
    bool  _isSensitiveTopic;
    bool  _isSports;
    bool  _isSportsRecommendable;
    NSString * _language;
    NSDate * _lastModifiedDate;
    NFLazy * _lazyContentColorMap;
    NSDate * _loadDate;
    FCAssetHandle * _logoImageAssetHandle;
    NSString * _magazineGenre;
    long long  _minimumNewsVersion;
    NSString * _name;
    NSString * _nameCompact;
    FCAssetHandle * _nameImageAssetHandle;
    FCAssetHandle * _nameImageCompactAssetHandle;
    FCAssetHandle * _nameImageForDarkBackgroundAssetHandle;
    struct FCEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _nameImageForDarkBackgroundInsets;
    struct CGSize { 
        double width; 
        double height; 
    }  _nameImageForDarkBackgroundSize;
    struct FCEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _nameImageInsets;
    FCAssetHandle * _nameImageLargeAssetHandle;
    FCAssetHandle * _nameImageLargeMaskAssetHandle;
    FCAssetHandle * _nameImageMaskAssetHandle;
    struct FCEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _nameImageMaskInsets;
    struct CGSize { 
        double width; 
        double height; 
    }  _nameImageMaskSize;
    FCAssetHandle * _nameImageMaskWidgetHQAssetHandle;
    FCAssetHandle * _nameImageMaskWidgetLQAssetHandle;
    struct CGSize { 
        double width; 
        double height; 
    }  _nameImageSize;
    NSString * _navigationChromeBackgroundColorHexString;
    FCColorGradient * _navigationChromeBackgroundGradient;
    FCAssetHandle * _navigationChromeBackgroundImage;
    FCAssetHandle * _navigationChromeBackgroundImageCompact;
    unsigned long long  _navigationChromeBackgroundImageContentMode;
    unsigned long long  _navigationChromeBackgroundImageContentModeCompact;
    unsigned long long  _navigationChromeBackgroundImageContentModeLarge;
    FCAssetHandle * _navigationChromeBackgroundImageLarge;
    NSString * _navigationChromeSeparatorColorHexString;
    FCPaywallConfiguration * _paidBundlePaywallConfiguration;
    NSString * _parentID;
    NSString * _pptFeedIDOverride;
    NSString * _primaryAudience;
    NSString * _publisherPaidAuthorizationURL;
    NSArray * _publisherPaidBundlePurchaseIDs;
    NTPBPublisherPaidDescriptionStrings * _publisherPaidDescriptionStrings;
    NSArray * _publisherPaidFeldsparablePurchaseIDs;
    bool  _publisherPaidLeakyPaywallOptOut;
    NSArray * _publisherPaidOfferableConfigurations;
    NSString * _publisherPaidVerificationURL;
    bool  _publisherPaidWebAccessOptIn;
    NSString * _publisherPaidWebAccessURL;
    NSArray * _publisherSpecifiedArticleIDs;
    NSDate * _publisherSpecifiedArticleIDsModifiedDate;
    NSDictionary * _publisherSpecifiedArticles;
    NSArray * _recentIssueIDs;
    NSString * _replacementID;
    long long  _score;
    NSArray * _sectionFeedConfigurations;
    NSArray * _sectionIDs;
    NSString * _sportsData;
    FCColor * _sportsEventNavigationForegroundColor;
    NSString * _sportsFullName;
    unsigned long long  _sportsLeagueType;
    NSString * _sportsLocation;
    FCAssetHandle * _sportsLogoImageAssetHandle;
    FCAssetHandle * _sportsLogoImageCompactAssetHandle;
    FCAssetHandle * _sportsLogoImageLargeAssetHandle;
    long long  _sportsLogoMastheadHorizontalPaddingOffset;
    long long  _sportsLogoMastheadLeadingOffset;
    unsigned long long  _sportsLogoMastheadVisibility;
    NSString * _sportsNameAbbreviation;
    NSString * _sportsNickname;
    FCColor * _sportsPrimaryColor;
    NSString * _sportsPrimaryName;
    FCSportsRecommendationMappings * _sportsRecommendationMappings;
    FCColor * _sportsSecondaryColor;
    NSString * _sportsSecondaryName;
    unsigned long long  _sportsType;
    NSString * _sportsTypeDisplayName;
    NSString * _sportsTypePluralizedDisplayName;
    double  _subscriptionRate;
    NSString * _subtitle;
    NSString * _superfeedConfigResourceID;
    NSString * _supergroupConfigJson;
    FCSectionSupergroupKnobs * _supergroupKnobs;
    NSString * _supergroupKnobsJson;
    FCInterestToken * _tagInterestToken;
    NTPBTagRecord * _tagRecord;
    FCInterestToken * _tagRecordInterestToken;
    unsigned long long  _tagType;
    NSString * _titleDisplayPrefix;
    NSString * _titleDisplaySuffix;
    NSArray * _topLevelGroupsTagIdentifiers;
    NSString * _topLevelSportTagIdentifier;
    bool  _useCompactNameForPersonalizedPaywall;
    unsigned long long  _userFacingTagTypeOverride;
    NSString * _versionKey;
}

@property (nonatomic, readonly, copy) NSString *UMCCanonicalID;
@property (nonatomic, readonly) FCColor *adBackgroundColor;
@property (nonatomic, readonly) FCColorGradient *adBackgroundGradient;
@property (nonatomic, readonly) NSArray *adTargetingKeywords;
@property (nonatomic, readonly) bool allowCustomBottomStyle;
@property (nonatomic, readonly) NSArray *allowedStorefrontIDs;
@property (nonatomic, readonly) NSString *articleRecirculationConfigJSON;
@property (nonatomic, readonly) <FCChannelProviding> *asChannel;
@property (nonatomic, readonly) <FCPuzzleTypeProviding> *asPuzzleType;
@property (nonatomic, readonly) <FCSectionProviding> *asSection;
@property (nonatomic, readonly) <FCSportsProviding> *asSports;
@property (nonatomic, readonly) <FCSportsEventProviding> *asSportsEvent;
@property (nonatomic, readonly) <FCTopicProviding> *asTopic;
@property (nonatomic, readonly, copy) NSString *backIssuesListID;
@property (nonatomic, readonly) FCColor *backgroundColor;
@property (nonatomic, readonly) NSData *backingTagRecordData;
@property (nonatomic) double bannerImageBaselineOffsetPercentage;
@property (nonatomic, readonly) FCTagBanner *bannerImageForMask;
@property (nonatomic, readonly) FCTagBanner *bannerImageForThemeBackground;
@property (nonatomic, readonly) FCTagBanner *bannerImageForWhiteBackground;
@property (nonatomic) double bannerImageScale;
@property (nonatomic, readonly) NSArray *blockedStorefrontIDs;
@property (nonatomic, readonly) unsigned long long channelType;
@property (nonatomic, readonly) FCTagBanner *compactBannerImage;
@property (nonatomic, readonly, copy) NSString *compactDisplayName;
@property (nonatomic, readonly) FCContentArchive *contentArchive;
@property (nonatomic, readonly) FCContentColorMap *contentColorMap;
@property (nonatomic, readonly) long long contentProvider;
@property (nonatomic, readonly) FCAssetHandle *coverImageAssetHandle;
@property (nonatomic, readonly, copy) NSArray *currentIssueIDs;
@property (nonatomic, readonly) FCColor *darkStyleAdBackgroundColor;
@property (nonatomic, readonly) FCColorGradient *darkStyleAdBackgroundGradient;
@property (nonatomic, readonly) FCColor *darkStyleBackgroundColor;
@property (nonatomic, readonly) FCColor *darkStyleFeedBackgroundColor;
@property (nonatomic, readonly) FCColorGradient *darkStyleFeedBackgroundGradient;
@property (nonatomic, readonly) FCColor *darkStyleFeedControlColor;
@property (nonatomic, readonly) FCColor *darkStyleForegroundColor;
@property (nonatomic, readonly) FCColor *darkStyleNavigationChromeBackgroundColor;
@property (nonatomic, readonly) FCColorGradient *darkStyleNavigationChromeBackgroundGradient;
@property (nonatomic, readonly) FCAssetHandle *darkStyleNavigationChromeBackgroundImage;
@property (nonatomic, readonly) FCAssetHandle *darkStyleNavigationChromeBackgroundImageCompact;
@property (nonatomic, readonly) FCAssetHandle *darkStyleNavigationChromeBackgroundImageLarge;
@property (nonatomic, readonly) FCColor *darkStyleNavigationChromeSeparatorColor;
@property (nonatomic, readonly) NSData *data;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) FCTagBanner *defaultBannerImage;
@property (nonatomic, readonly) FCHeadlineTemplate *defaultHeadlineTemplate;
@property (nonatomic, readonly, copy) NSString *defaultSectionID;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) bool disableBlock;
@property (nonatomic, readonly) bool disableFollow;
@property (nonatomic, readonly, copy) NSString *displayName;
@property (nonatomic, readonly) FCColor *feedBackgroundColor;
@property (nonatomic, readonly) FCColorGradient *feedBackgroundGradient;
@property (nonatomic, readonly) FCColor *feedControlColor;
@property (nonatomic, readonly) NSString *feedMastheadType;
@property (nonatomic, readonly) FCAssetHandle *feedNavImageAssetHandle;
@property (nonatomic, readonly) FCAssetHandle *feedNavImageHQAssetHandle;
@property (nonatomic, readonly) long long feedType;
@property (nonatomic, readonly) NSDate *fetchDate;
@property (nonatomic, readonly) FCColor *foregroundColor;
@property (nonatomic, readonly, copy) FCColor *groupDarkStyleTitleColor;
@property (nonatomic, readonly, copy) NSString *groupName;
@property (nonatomic, readonly, copy) FCColor *groupTitleColor;
@property (nonatomic, readonly) unsigned long long groupingEligibility;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, copy) FCTextInfo *headlineBylineTextInfo;
@property (nonatomic, readonly, copy) FCTextInfo *headlineExcerptTextInfo;
@property (nonatomic, readonly, copy) FCTextInfo *headlineTitleTextInfo;
@property (nonatomic, readonly) bool hideAccessoryText;
@property (nonatomic, readonly) bool hideLocationInMasthead;
@property (nonatomic, readonly, copy) NSString *highlightsArticleListID;
@property (nonatomic, readonly) NSArray *iAdCategories;
@property (nonatomic, readonly) NSArray *iAdKeywords;
@property (nonatomic, readonly, copy) NSString *identifier;
@property (nonatomic, readonly) bool isArticleReadCountReportingEnabled;
@property (nonatomic, readonly) bool isAutoDarkModeEnabled;
@property (nonatomic, readonly) bool isBlockedExplicitContent;
@property (nonatomic, readonly) bool isDark;
@property (nonatomic, readonly) bool isDeprecated;
@property (nonatomic, readonly) bool isExplicitContent;
@property (nonatomic, readonly) bool isHidden;
@property (nonatomic, readonly) bool isInternal;
@property (nonatomic, readonly) bool isLocal;
@property (nonatomic, readonly) bool isMagazine;
@property (nonatomic, readonly) bool isMySports;
@property (nonatomic, readonly) bool isNewspaper;
@property (nonatomic, readonly) bool isNotificationEnabled;
@property (nonatomic, readonly) bool isPublic;
@property (nonatomic, readonly) bool isPuzzleHub;
@property (nonatomic, readonly) bool isPuzzleType;
@property (nonatomic, readonly) bool isRealTimeTrackingEnabled;
@property (nonatomic, readonly) bool isSandbox;
@property (nonatomic, readonly) bool isSensitiveTopic;
@property (nonatomic, readonly) bool isSports;
@property (nonatomic, readonly) bool isSportsEvent;
@property (nonatomic, readonly) bool isSportsRecommendable;
@property (nonatomic, readonly) bool isSubscribable;
@property (nonatomic, readonly) bool isWhite;
@property (nonatomic, readonly) bool isWhitelisted;
@property (nonatomic, readonly, copy) NSString *language;
@property (nonatomic, readonly) NSDate *lastModifiedDate;
@property (nonatomic, readonly) NSDate *loadDate;
@property (nonatomic, readonly) NSArray *loadableFonts;
@property (nonatomic, readonly) FCAssetHandle *logoImageAssetHandle;
@property (nonatomic, readonly, copy) NSString *magazineGenre;
@property (nonatomic, readonly) long long minimumNewsVersion;
@property (nonatomic, readonly, copy) NSString *name;
@property (nonatomic, readonly, copy) NSString *nameCompact;
@property (nonatomic, retain) FCAssetHandle *nameImageAssetHandle;
@property (nonatomic, readonly) FCAssetHandle *nameImageCompactAssetHandle;
@property (nonatomic, readonly) FCAssetHandle *nameImageForDarkBackgroundAssetHandle;
@property (nonatomic, readonly) struct FCEdgeInsets { double x1; double x2; double x3; double x4; } nameImageForDarkBackgroundInsets;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } nameImageForDarkBackgroundSize;
@property (nonatomic, readonly) struct FCEdgeInsets { double x1; double x2; double x3; double x4; } nameImageInsets;
@property (nonatomic, readonly) FCAssetHandle *nameImageLargeAssetHandle;
@property (nonatomic, readonly) FCAssetHandle *nameImageLargeMaskAssetHandle;
@property (nonatomic, readonly) FCAssetHandle *nameImageMaskAssetHandle;
@property (nonatomic, readonly) struct FCEdgeInsets { double x1; double x2; double x3; double x4; } nameImageMaskInsets;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } nameImageMaskSize;
@property (nonatomic, readonly) FCAssetHandle *nameImageMaskWidgetHQAssetHandle;
@property (nonatomic, readonly) FCAssetHandle *nameImageMaskWidgetLQAssetHandle;
@property (nonatomic) struct CGSize { double x1; double x2; } nameImageSize;
@property (nonatomic, readonly) FCColor *navigationChromeBackgroundColor;
@property (nonatomic, readonly) FCColorGradient *navigationChromeBackgroundGradient;
@property (nonatomic, readonly) FCAssetHandle *navigationChromeBackgroundImage;
@property (nonatomic, readonly) FCAssetHandle *navigationChromeBackgroundImageCompact;
@property (nonatomic, readonly) unsigned long long navigationChromeBackgroundImageContentMode;
@property (nonatomic, readonly) unsigned long long navigationChromeBackgroundImageContentModeCompact;
@property (nonatomic, readonly) unsigned long long navigationChromeBackgroundImageContentModeLarge;
@property (nonatomic, readonly) FCAssetHandle *navigationChromeBackgroundImageLarge;
@property (nonatomic, readonly) FCColor *navigationChromeSeparatorColor;
@property (nonatomic, readonly, copy) FCPaywallConfiguration *paidBundlePaywallConfiguration;
@property (nonatomic, readonly, copy) NSString *parentID;
@property (nonatomic, readonly) NSString *personalizedPaywallName;
@property (nonatomic, copy) NSString *pptFeedIDOverride;
@property (nonatomic, readonly, copy) NSString *primaryAudience;
@property (nonatomic, readonly, copy) NSString *publisherPaidAuthorizationURL;
@property (nonatomic, readonly) NSArray *publisherPaidBundlePurchaseIDs;
@property (nonatomic, readonly) NTPBPublisherPaidDescriptionStrings *publisherPaidDescriptionStrings;
@property (nonatomic, readonly) NSArray *publisherPaidFeldsparablePurchaseIDs;
@property (nonatomic, readonly) bool publisherPaidLeakyPaywallOptOut;
@property (nonatomic, readonly) NSArray *publisherPaidOfferableConfigurations;
@property (nonatomic, readonly, copy) NSString *publisherPaidVerificationURL;
@property (nonatomic, readonly) bool publisherPaidWebAccessOptIn;
@property (nonatomic, readonly, copy) NSString *publisherPaidWebAccessURL;
@property (nonatomic, readonly) NSArray *publisherSpecifiedArticleIDs;
@property (nonatomic, readonly) NSDate *publisherSpecifiedArticleIDsModifiedDate;
@property (nonatomic, readonly) NSDictionary *publisherSpecifiedArticles;
@property (nonatomic, readonly, copy) NSArray *recentIssueIDs;
@property (nonatomic, readonly, copy) NSString *replacementID;
@property (nonatomic, readonly) long long score;
@property (nonatomic, readonly, copy) NSArray *sectionIDs;
@property (nonatomic, readonly) NSString *sportsData;
@property (nonatomic, readonly) FCColor *sportsEventNavigationForegroundColor;
@property (nonatomic, readonly, copy) NSString *sportsFullName;
@property (nonatomic, readonly) unsigned long long sportsLeagueType;
@property (nonatomic, readonly, copy) NSString *sportsLocation;
@property (nonatomic, readonly) FCAssetHandle *sportsLogoImageAssetHandle;
@property (nonatomic, readonly) FCAssetHandle *sportsLogoImageCompactAssetHandle;
@property (nonatomic, readonly) FCAssetHandle *sportsLogoImageLargeAssetHandle;
@property (nonatomic, readonly) long long sportsLogoMastheadHorizontalPaddingOffset;
@property (nonatomic, readonly) long long sportsLogoMastheadLeadingOffset;
@property (nonatomic, readonly) unsigned long long sportsLogoMastheadVisibility;
@property (nonatomic, readonly, copy) NSString *sportsNameAbbreviation;
@property (nonatomic, readonly, copy) NSString *sportsNickname;
@property (nonatomic, readonly) FCColor *sportsPrimaryColor;
@property (nonatomic, readonly, copy) NSString *sportsPrimaryName;
@property (nonatomic, readonly) FCSportsRecommendationMappings *sportsRecommendationMappings;
@property (nonatomic, readonly) NSData *sportsRecommendationMappingsJSON;
@property (nonatomic, readonly) FCColor *sportsSecondaryColor;
@property (nonatomic, readonly, copy) NSString *sportsSecondaryName;
@property (nonatomic, readonly, copy) <FCSportsTheming> *sportsTheme;
@property (nonatomic, readonly) unsigned long long sportsType;
@property (nonatomic, readonly, copy) NSString *sportsTypeDisplayName;
@property (nonatomic, readonly, copy) NSString *sportsTypePluralizedDisplayName;
@property (nonatomic, readonly, copy) NSString *stocksFeedConfigJSON;
@property (nonatomic, readonly) <FCTagStocksFields> *stocksFields;
@property (nonatomic, readonly) double subscriptionRate;
@property (nonatomic, readonly, copy) NSString *subtitle;
@property (readonly) Class superclass;
@property (nonatomic, readonly, copy) NSString *superfeedConfigResourceID;
@property (nonatomic, readonly) NSString *supergroupConfigJson;
@property (nonatomic, readonly) FCSectionSupergroupKnobs *supergroupKnobs;
@property (nonatomic, readonly) NSString *supergroupKnobsJson;
@property (nonatomic, readonly) bool supportsNotifications;
@property (nonatomic, readonly) NTPBTagRecord *tagRecord;
@property (nonatomic, readonly) FCInterestToken *tagRecordInterestToken;
@property (nonatomic, readonly) unsigned long long tagType;
@property (nonatomic, readonly, copy) <FCFeedTheming> *theme;
@property (nonatomic, copy) NSString *titleDisplayPrefix;
@property (nonatomic, copy) NSString *titleDisplaySuffix;
@property (nonatomic, readonly, copy) NSArray *topLevelGroupsTagIdentifiers;
@property (nonatomic, readonly, copy) NSString *topLevelSportTagIdentifier;
@property (nonatomic, readonly) bool useCompactNameForPersonalizedPaywall;
@property (nonatomic, readonly) unsigned long long userFacingTagType;
@property (nonatomic, readonly, copy) NSString *versionKey;

- (void).cxx_destruct;
- (id)UMCCanonicalID;
- (id)adBackgroundColor;
- (id)adBackgroundGradient;
- (id)adTargetingKeywords;
- (bool)allowCustomBottomStyle;
- (id)allowedStorefrontIDs;
- (id)articleRecirculationConfigJSON;
- (id)asChannel;
- (id)asPuzzleType;
- (id)asSection;
- (id)asSports;
- (id)asSportsEvent;
- (id)asTopic;
- (id)authorizationURL;
- (id)backIssuesListID;
- (id)backgroundColor;
- (id)backingTagRecordData;
- (double)bannerImageBaselineOffsetPercentage;
- (id)bannerImageForMask;
- (id)bannerImageForThemeBackground;
- (id)bannerImageForWhiteBackground;
- (double)bannerImageScale;
- (id)blockedStorefrontIDs;
- (unsigned long long)channelType;
- (id)compactBannerImage;
- (id)compactDisplayName;
- (id)contentArchive;
- (id)contentColorMap;
- (long long)contentProvider;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)coverImageAssetHandle;
- (id)currentIssueIDs;
- (id)darkStyleAdBackgroundColor;
- (id)darkStyleAdBackgroundGradient;
- (id)darkStyleBackgroundColor;
- (id)darkStyleFeedBackgroundColor;
- (id)darkStyleFeedBackgroundGradient;
- (id)darkStyleFeedControlColor;
- (id)darkStyleForegroundColor;
- (id)darkStyleNavigationChromeBackgroundColor;
- (id)darkStyleNavigationChromeBackgroundGradient;
- (id)darkStyleNavigationChromeBackgroundImage;
- (id)darkStyleNavigationChromeBackgroundImageCompact;
- (id)darkStyleNavigationChromeBackgroundImageLarge;
- (id)darkStyleNavigationChromeSeparatorColor;
- (id)data;
- (id)defaultBannerImage;
- (id)defaultHeadlineTemplate;
- (id)defaultSectionID;
- (id)description;
- (bool)disableBlock;
- (bool)disableFollow;
- (id)displayName;
- (id)feedBackgroundColor;
- (id)feedBackgroundGradient;
- (id)feedControlColor;
- (id)feedIDForBin:(long long)arg1;
- (id)feedMastheadType;
- (id)feedNavImageAssetHandle;
- (id)feedNavImageHQAssetHandle;
- (long long)feedType;
- (id)fetchDate;
- (id)foregroundColor;
- (id)freeFeedIDForBin:(long long)arg1;
- (id)freeFeedIDForSection:(id)arg1 bin:(long long)arg2;
- (id)groupDarkStyleTitleColor;
- (id)groupName;
- (id)groupTitleColor;
- (unsigned long long)groupingEligibility;
- (unsigned long long)hash;
- (id)headlineBylineTextInfo;
- (id)headlineExcerptTextInfo;
- (id)headlineTitleTextInfo;
- (bool)hideAccessoryText;
- (bool)hideLocationInMasthead;
- (id)highlightsArticleListID;
- (id)iAdCategories;
- (id)iAdKeywords;
- (id)identifier;
- (id)initChannelForTestingWithIdentifier:(id)arg1 name:(id)arg2 defaultSection:(id)arg3 publisherAuthorizationURL:(id)arg4 publisherVerificationURL:(id)arg5;
- (id)initChannelForTestingWithIdentifier:(id)arg1 name:(id)arg2 publisherPaidBundlePurchaseIDs:(id)arg3;
- (id)initChannelFromNotificationWithIdentifier:(id)arg1 name:(id)arg2 nameImageAssetHandle:(id)arg3 nameImageMaskAssetHandle:(id)arg4;
- (id)initForTestingWithTagType:(unsigned long long)arg1 identifier:(id)arg2 name:(id)arg3;
- (id)initForTestingWithTagType:(unsigned long long)arg1 identifier:(id)arg2 name:(id)arg3 umcCanonicalID:(id)arg4;
- (id)initWithData:(id)arg1 context:(id)arg2;
- (id)initWithTagMetadata:(id)arg1 assetManager:(id)arg2 isSports:(bool)arg3;
- (id)initWithTagRecord:(id)arg1 assetManager:(id)arg2 interestToken:(id)arg3;
- (id)initWithTagType:(unsigned long long)arg1 identifier:(id)arg2 name:(id)arg3;
- (bool)isArticleReadCountReportingEnabled;
- (bool)isAuthenticationSetup;
- (bool)isAutoDarkModeEnabled;
- (bool)isBlockedExplicitContent;
- (bool)isDark;
- (bool)isDeprecated;
- (bool)isEqual:(id)arg1;
- (bool)isEqualToTag:(id)arg1;
- (bool)isExplicitContent;
- (bool)isHidden;
- (bool)isInternal;
- (bool)isLocal;
- (bool)isMagazine;
- (bool)isMySports;
- (bool)isNewspaper;
- (bool)isNoLongerAvailable;
- (bool)isNotificationEnabled;
- (bool)isPublic;
- (bool)isPurchaseSetup;
- (bool)isPuzzleHub;
- (bool)isPuzzleType;
- (bool)isRealTimeTrackingEnabled;
- (bool)isSandbox;
- (bool)isSensitiveTopic;
- (bool)isSports;
- (bool)isSportsEvent;
- (bool)isSportsRecommendable;
- (bool)isSubscribable;
- (bool)isWhite;
- (bool)isWhitelisted;
- (id)language;
- (id)lastModifiedDate;
- (id)loadDate;
- (id)loadableFonts;
- (id)logoImageAssetHandle;
- (id)magazineGenre;
- (long long)minimumNewsVersion;
- (id)name;
- (id)nameCompact;
- (id)nameImageAssetHandle;
- (id)nameImageCompactAssetHandle;
- (id)nameImageForDarkBackgroundAssetHandle;
- (struct FCEdgeInsets { double x1; double x2; double x3; double x4; })nameImageForDarkBackgroundInsets;
- (struct CGSize { double x1; double x2; })nameImageForDarkBackgroundSize;
- (struct FCEdgeInsets { double x1; double x2; double x3; double x4; })nameImageInsets;
- (id)nameImageLargeAssetHandle;
- (id)nameImageLargeMaskAssetHandle;
- (id)nameImageMaskAssetHandle;
- (struct FCEdgeInsets { double x1; double x2; double x3; double x4; })nameImageMaskInsets;
- (struct CGSize { double x1; double x2; })nameImageMaskSize;
- (id)nameImageMaskWidgetHQAssetHandle;
- (id)nameImageMaskWidgetLQAssetHandle;
- (struct CGSize { double x1; double x2; })nameImageSize;
- (id)navigationChromeBackgroundColor;
- (id)navigationChromeBackgroundGradient;
- (id)navigationChromeBackgroundImage;
- (id)navigationChromeBackgroundImageCompact;
- (unsigned long long)navigationChromeBackgroundImageContentMode;
- (unsigned long long)navigationChromeBackgroundImageContentModeCompact;
- (unsigned long long)navigationChromeBackgroundImageContentModeLarge;
- (id)navigationChromeBackgroundImageLarge;
- (id)navigationChromeSeparatorColor;
- (id)paidBundlePaywallConfiguration;
- (id)paidFeedIDForBin:(long long)arg1;
- (id)paidFeedIDForSection:(id)arg1 bin:(long long)arg2;
- (id)parentID;
- (id)personalizedPaywallName;
- (id)pptFeedIDOverride;
- (void)ppt_overrideFeedID:(id)arg1;
- (id)prefetchPurchaseOffer;
- (id)primaryAudience;
- (id)publisherPaidAuthorizationURL;
- (id)publisherPaidBundlePurchaseIDs;
- (id)publisherPaidDescriptionStrings;
- (id)publisherPaidFeldsparablePurchaseIDs;
- (bool)publisherPaidLeakyPaywallOptOut;
- (id)publisherPaidOfferableConfigurations;
- (id)publisherPaidVerificationURL;
- (bool)publisherPaidWebAccessOptIn;
- (id)publisherPaidWebAccessURL;
- (id)publisherSpecifiedArticleIDs;
- (id)publisherSpecifiedArticleIDsModifiedDate;
- (id)publisherSpecifiedArticles;
- (id)recentIssueIDs;
- (id)replacementID;
- (long long)score;
- (id)sectionIDs;
- (void)setBannerImageBaselineOffsetPercentage:(double)arg1;
- (void)setBannerImageScale:(double)arg1;
- (void)setNameImageAssetHandle:(id)arg1;
- (void)setNameImageSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setPptFeedIDOverride:(id)arg1;
- (void)setTitleDisplayPrefix:(id)arg1;
- (id)setTitleDisplayPrefixOverride:(id)arg1;
- (void)setTitleDisplaySuffix:(id)arg1;
- (id)setTitleDisplaySuffixOverride:(id)arg1;
- (id)sportsData;
- (id)sportsEventNavigationForegroundColor;
- (id)sportsFullName;
- (unsigned long long)sportsLeagueType;
- (id)sportsLocation;
- (id)sportsLogoImageAssetHandle;
- (id)sportsLogoImageCompactAssetHandle;
- (id)sportsLogoImageLargeAssetHandle;
- (long long)sportsLogoMastheadHorizontalPaddingOffset;
- (long long)sportsLogoMastheadLeadingOffset;
- (unsigned long long)sportsLogoMastheadVisibility;
- (id)sportsNameAbbreviation;
- (id)sportsNickname;
- (id)sportsPrimaryColor;
- (id)sportsPrimaryName;
- (id)sportsRecommendationMappings;
- (id)sportsRecommendationMappingsJSON;
- (id)sportsSecondaryColor;
- (id)sportsSecondaryName;
- (id)sportsTheme;
- (unsigned long long)sportsType;
- (id)sportsTypeDisplayName;
- (id)sportsTypePluralizedDisplayName;
- (id)stocksFeedConfigJSON;
- (id)stocksFields;
- (double)subscriptionRate;
- (id)subtitle;
- (id)superfeedConfigResourceID;
- (id)supergroupConfigJson;
- (id)supergroupKnobs;
- (id)supergroupKnobsJson;
- (bool)supportsNotifications;
- (id)tagRecord;
- (id)tagRecordInterestToken;
- (unsigned long long)tagType;
- (id)theme;
- (id)titleDisplayPrefix;
- (id)titleDisplaySuffix;
- (id)topLevelGroupsTagIdentifiers;
- (id)topLevelSportTagIdentifier;
- (bool)useCompactNameForPersonalizedPaywall;
- (unsigned long long)userFacingTagType;
- (id)versionKey;

@end
