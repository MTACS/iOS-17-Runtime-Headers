
@interface AAUIAchievementsDataProvider : NSObject {
    NSMutableDictionary * _achievementsByEarnedDateComponents;
    NSMutableDictionary * _achievementsBySection;
    NSMutableDictionary * _achievementsByTemplateUniqueName;
    NSObject<OS_dispatch_queue> * _achievementsDataQueue;
    NSMutableArray * _allAchievementsSortedByEarnedDate;
    _TtC22ActivityAchievementsUI15AAUIAwardsQuery * _awardsQuery;
    NSDictionary * _clientAchievementsByEarnedDateComponents;
    NSDictionary * _clientAchievementsBySection;
    NSDictionary * _clientAchievementsByTemplateUniqueName;
    NSArray * _clientAllAchievementsSortedByEarnedDate;
    NSDictionary * _clientFilteredAchievementsByTemplateUniqueName;
    NSArray * _clientRecentAchievements;
    NSArray * _clientRelevantAchievements;
    bool  _didFinishInitialLoad;
    NSMutableDictionary * _filteredAchievementsByTemplateUniqueName;
    HKHealthStore * _healthStore;
    NSHashTable * _initialLoadObservers;
    NSHashTable * _mainSectionObservers;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _modelLock;
    NSObject<OS_dispatch_queue> * _observerQueue;
    NSArray * _orderedMainSectionHeaderStrings;
    NSArray * _orderedRecentAndRelevantHeaderStrings;
    NSArray * _orderedSections;
    long long  _overrideDisplayState;
    ACHQuery * _query;
    long long  _queryRetryCount;
    double  _queryRetryDelay;
    NSMutableArray * _recentAchievements;
    NSHashTable * _recentAndRelevantSectionObservers;
    NSMutableArray * _relevantAchievements;
    ACHVisibilityEvaluator * _visibilityEvaluator;
}

@property (nonatomic, retain) NSMutableDictionary *achievementsByEarnedDateComponents;
@property (nonatomic, retain) NSMutableDictionary *achievementsBySection;
@property (nonatomic, retain) NSMutableDictionary *achievementsByTemplateUniqueName;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *achievementsDataQueue;
@property (nonatomic, retain) NSMutableArray *allAchievementsSortedByEarnedDate;
@property (nonatomic, retain) _TtC22ActivityAchievementsUI15AAUIAwardsQuery *awardsQuery;
@property (nonatomic, retain) NSDictionary *clientAchievementsByEarnedDateComponents;
@property (nonatomic, retain) NSDictionary *clientAchievementsBySection;
@property (nonatomic, retain) NSDictionary *clientAchievementsByTemplateUniqueName;
@property (nonatomic, retain) NSArray *clientAllAchievementsSortedByEarnedDate;
@property (nonatomic, retain) NSDictionary *clientFilteredAchievementsByTemplateUniqueName;
@property (nonatomic, retain) NSArray *clientRecentAchievements;
@property (nonatomic, retain) NSArray *clientRelevantAchievements;
@property (nonatomic) bool didFinishInitialLoad;
@property (nonatomic, retain) NSMutableDictionary *filteredAchievementsByTemplateUniqueName;
@property (nonatomic, retain) HKHealthStore *healthStore;
@property (nonatomic, retain) NSHashTable *initialLoadObservers;
@property (nonatomic, retain) NSHashTable *mainSectionObservers;
@property (nonatomic) struct os_unfair_lock_s { unsigned int x1; } modelLock;
@property (nonatomic, readonly) long long numberOfRecentAndRelevantSections;
@property (nonatomic, readonly) long long numberOfSections;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *observerQueue;
@property (nonatomic, retain) NSArray *orderedMainSectionHeaderStrings;
@property (nonatomic, retain) NSArray *orderedRecentAndRelevantHeaderStrings;
@property (nonatomic, retain) NSArray *orderedSections;
@property (nonatomic) long long overrideDisplayState;
@property (nonatomic, retain) ACHQuery *query;
@property (nonatomic) long long queryRetryCount;
@property (nonatomic) double queryRetryDelay;
@property (nonatomic, retain) NSMutableArray *recentAchievements;
@property (nonatomic, retain) NSHashTable *recentAndRelevantSectionObservers;
@property (nonatomic, retain) NSMutableArray *relevantAchievements;
@property (nonatomic, retain) ACHVisibilityEvaluator *visibilityEvaluator;

- (void).cxx_destruct;
- (bool)_achievementBelongsInRecents:(id)arg1 replacingRecent:(id*)arg2;
- (bool)_achievementBelongsInRelevants:(id)arg1 replacingRelevant:(id*)arg2;
- (id)_achievementsRespectingOverrideDisplayState:(id)arg1;
- (bool)_builtInBelongsInRelevants:(id)arg1;
- (void)_deepCopyClientFacingModel;
- (long long)_deleteAchievement:(id)arg1 fromUnfiltered:(bool)arg2;
- (void)_deleteAchievementsByEarnedDateWithAchievement:(id)arg1 earnedInstance:(id)arg2;
- (void)_handleDeletedAchievements:(id)arg1;
- (void)_handleUpdatedAchievements:(id)arg1;
- (id)_mainSectionIndexPathForAchievement:(id)arg1;
- (bool)_monthlyChallengeBelongsInRelevants:(id)arg1;
- (id)_oldestRecentAchievement;
- (id)_recentAndRelevantSectionIndexPathForAchievement:(id)arg1;
- (void)_reload;
- (bool)_remoteAchievementBelongsInRelevants:(id)arg1;
- (bool)_shouldShowAchievement:(id)arg1 activityMoveMode:(long long)arg2 experienceType:(unsigned long long)arg3;
- (long long)_updateAchievement:(id)arg1 activityMoveMode:(long long)arg2 experienceType:(unsigned long long)arg3;
- (void)_updateAchievementsByEarnedDateComponentsWithAchievement:(id)arg1 earnedInstance:(id)arg2;
- (id)achievementAtIndexPath:(id)arg1;
- (id)achievementForTemplateUniqueName:(id)arg1;
- (id)achievementsByEarnedDateComponents;
- (id)achievementsBySection;
- (id)achievementsByTemplateUniqueName;
- (id)achievementsDataQueue;
- (id)achievementsForDateComponents:(id)arg1;
- (void)addInitialLoadObserver:(id)arg1;
- (void)addMainSectionObserver:(id)arg1;
- (void)addRecentAndRelevantSectionObserver:(id)arg1;
- (id)allAchievementsSortedByEarnedDate;
- (id)awardsQuery;
- (id)clientAchievementsByEarnedDateComponents;
- (id)clientAchievementsBySection;
- (id)clientAchievementsByTemplateUniqueName;
- (id)clientAllAchievementsSortedByEarnedDate;
- (id)clientFilteredAchievementsByTemplateUniqueName;
- (id)clientRecentAchievements;
- (id)clientRelevantAchievements;
- (void)cycleQuery;
- (bool)didFinishInitialLoad;
- (id)filteredAchievementsByTemplateUniqueName;
- (id)headerStringForSection:(long long)arg1 isRecentAndRelevant:(bool)arg2;
- (id)healthStore;
- (id)initWithHealthStore:(id)arg1 layoutMode:(unsigned long long)arg2;
- (id)initialLoadObservers;
- (id)mainSectionObservers;
- (struct os_unfair_lock_s { unsigned int x1; })modelLock;
- (long long)numberOfItemsInRecentAndRelevantSection:(long long)arg1;
- (long long)numberOfItemsInSection:(long long)arg1;
- (long long)numberOfRecentAndRelevantSections;
- (long long)numberOfSections;
- (id)observerQueue;
- (id)orderedMainSectionHeaderStrings;
- (id)orderedRecentAndRelevantHeaderStrings;
- (id)orderedSections;
- (long long)overrideDisplayState;
- (id)query;
- (long long)queryRetryCount;
- (double)queryRetryDelay;
- (id)recentAchievements;
- (id)recentAndRelevantAchievementAtIndexPath:(id)arg1;
- (id)recentAndRelevantSectionObservers;
- (id)relevantAchievements;
- (void)removeInitialLoadObserver:(id)arg1;
- (void)removeMainSectionObserver:(id)arg1;
- (void)removeRecentAndRelevantSectionObserver:(id)arg1;
- (void)setAchievementsByEarnedDateComponents:(id)arg1;
- (void)setAchievementsBySection:(id)arg1;
- (void)setAchievementsByTemplateUniqueName:(id)arg1;
- (void)setAchievementsDataQueue:(id)arg1;
- (void)setAllAchievementsSortedByEarnedDate:(id)arg1;
- (void)setAwardsQuery:(id)arg1;
- (void)setClientAchievementsByEarnedDateComponents:(id)arg1;
- (void)setClientAchievementsBySection:(id)arg1;
- (void)setClientAchievementsByTemplateUniqueName:(id)arg1;
- (void)setClientAllAchievementsSortedByEarnedDate:(id)arg1;
- (void)setClientFilteredAchievementsByTemplateUniqueName:(id)arg1;
- (void)setClientRecentAchievements:(id)arg1;
- (void)setClientRelevantAchievements:(id)arg1;
- (void)setDidFinishInitialLoad:(bool)arg1;
- (void)setFilteredAchievementsByTemplateUniqueName:(id)arg1;
- (void)setHealthStore:(id)arg1;
- (void)setInitialLoadObservers:(id)arg1;
- (void)setMainSectionObservers:(id)arg1;
- (void)setModelLock:(struct os_unfair_lock_s { unsigned int x1; })arg1;
- (void)setObserverQueue:(id)arg1;
- (void)setOrderedMainSectionHeaderStrings:(id)arg1;
- (void)setOrderedRecentAndRelevantHeaderStrings:(id)arg1;
- (void)setOrderedSections:(id)arg1;
- (void)setOverrideDisplayState:(long long)arg1;
- (void)setQuery:(id)arg1;
- (void)setQueryRetryCount:(long long)arg1;
- (void)setQueryRetryDelay:(double)arg1;
- (void)setRecentAchievements:(id)arg1;
- (void)setRecentAndRelevantSectionObservers:(id)arg1;
- (void)setRelevantAchievements:(id)arg1;
- (void)setVisibilityEvaluator:(id)arg1;
- (void)startFetching;
- (void)stopFetching;
- (id)trophyCaseAchievementForTemplateUniqueName:(id)arg1;
- (id)visibilityEvaluator;

@end
