
@interface PKPlugInCore : NSObject {
    unsigned long long  _annotationTimestamp;
    NSDictionary * _annotations;
    NSDictionary * _bundleInfoDictionary;
    NSData * _cdhash;
    NSString * _containingBundleIdentifier;
    NSURL * _containingUrl;
    NSURL * _dataContainerURL;
    NSUUID * _discoveryInstanceUUID;
    NSDictionary * _entitlements;
    unsigned int  _extensionPointPlatform;
    unsigned long long  _hubProtocolVersion;
    NSString * _identifier;
    bool  _isRBManaged;
    long long  _lastModified;
    NSArray * _launchPersonas;
    NSString * _localizedContainingName;
    NSDictionary * _localizedFileProviderActionNames;
    NSString * _localizedName;
    NSString * _localizedShortName;
    bool  _onSystemVolume;
    NSString * _originalIdentifier;
    NSDictionary * _plugInDictionary;
    <PKProxyFactory> * _proxyFactory;
    NSString * _requirement;
    NSURL * _url;
    NSUUID * _uuid;
}

@property (nonatomic) unsigned long long annotationTimestamp;
@property (retain) NSDictionary *annotations;
@property (readonly) NSDictionary *attributes;
@property (nonatomic, readonly) NSString *bootInstance;
@property (retain) NSDictionary *bundleInfoDictionary;
@property (retain) NSData *cdhash;
@property (copy) NSString *containingBundleIdentifier;
@property (readonly) NSString *containingPath;
@property (copy) NSURL *containingUrl;
@property (nonatomic, readonly) NSURL *dataContainerURL;
@property (readonly) NSUUID *discoveryInstanceUUID;
@property (retain) NSDictionary *entitlements;
@property (readonly) unsigned int extensionPointPlatform;
@property unsigned long long hubProtocolVersion;
@property (retain) NSString *identifier;
@property (readonly) bool isAppExtension;
@property (readonly) bool isData;
@property (readonly) bool isDedicated;
@property (readonly) bool isHybrid;
@property (readonly) bool isMultiplexed;
@property bool isRBManaged;
@property long long lastModified;
@property (retain) NSArray *launchPersonas;
@property (copy) NSString *localizedContainingName;
@property (readonly) NSDictionary *localizedFileProviderActionNames;
@property (readonly) NSString *localizedName;
@property (readonly) NSString *localizedShortName;
@property (readonly) bool oldStyle;
@property bool onSystemVolume;
@property (retain) NSString *originalIdentifier;
@property (readonly) NSString *path;
@property (retain) NSDictionary *plugInDictionary;
@property (readonly) NSString *principalSpec;
@property (readonly) id protocolSpec;
@property (nonatomic, readonly) <PKProxyFactory> *proxyFactory;
@property (copy) NSString *requirement;
@property (readonly) NSString *sdkSpec;
@property (readonly) bool shouldTerminateOnHold;
@property (readonly) NSDate *timestamp;
@property (retain) NSURL *url;
@property (retain) NSUUID *uuid;
@property (readonly) NSString *version;

+ (id)readSDKDictionary:(id)arg1 forPlatform:(unsigned int)arg2 proxyFactory:(id)arg3;

- (void).cxx_destruct;
- (void)_loadLocalizedFileProviderActionNames;
- (void)_loadLocalizedNames;
- (id)_localizedFileProviderActionNamesForPKDict:(id)arg1 fromBundle:(id)arg2;
- (unsigned long long)annotationTimestamp;
- (id)annotations;
- (id)attribute:(id)arg1;
- (id)attributes;
- (id)augmentInterface:(id)arg1;
- (id)bootInstance;
- (id)bundleInfoDictionary;
- (void)canonicalize;
- (id)cdhash;
- (id)containingBundleIdentifier;
- (id)containingPath;
- (id)containingUrl;
- (id)dataContainerURL;
- (id)debugDescription;
- (id)description;
- (id)diagnose;
- (id)discoveryInstanceUUID;
- (id)embeddedCodePath;
- (id)embeddedProtocolSpec;
- (id)entitlements;
- (id)export:(id*)arg1;
- (unsigned int)extensionPointPlatform;
- (bool)hasEntitlement:(id)arg1;
- (unsigned long long)hash;
- (unsigned long long)hubProtocolVersion;
- (id)identifier;
- (id)infoKey:(id)arg1;
- (id)init;
- (id)initWithForm:(id)arg1 proxyFactory:(id)arg2;
- (id)initWithName:(id)arg1 extensionPointPlatform:(unsigned int)arg2 url:(id)arg3 bundleInfo:(id)arg4 uuid:(id)arg5 discoveryInstanceUUID:(id)arg6 extensionPointCache:(id)arg7 proxyFactory:(id)arg8;
- (id)initWithProxyFactory:(id)arg1;
- (bool)isAppExtension;
- (bool)isData;
- (bool)isDedicated;
- (bool)isEqual:(id)arg1;
- (bool)isHybrid;
- (bool)isMultiplexed;
- (bool)isRBManaged;
- (long long)lastModified;
- (id)launchPersonas;
- (id)localizedContainingName;
- (id)localizedFileProviderActionNames;
- (void)localizedInfoDictionaryForKeys:(id)arg1 completion:(id /* block */)arg2;
- (id)localizedName;
- (id)localizedShortName;
- (id)mergeSDKDictionary:(id)arg1 intoExtensionDictionary:(id)arg2;
- (id)mergeSharedResources:(id)arg1 into:(id)arg2;
- (id)normalizeInfoDictionary:(id)arg1;
- (bool)oldStyle;
- (bool)onSystemVolume;
- (id)originalIdentifier;
- (id)path;
- (id)plugInDictionary;
- (id)pluginKey:(id)arg1;
- (id)principalSpec;
- (id)protocolSpec;
- (id)proxyFactory;
- (id)requirement;
- (id)resolveSDKWithInfoPlist:(id)arg1 extensionPointCache:(id)arg2;
- (id)sdkDictionaryWithInfoPlist:(id)arg1 extensionPointCache:(id)arg2;
- (id)sdkOnlyKeyPaths;
- (id)sdkSpec;
- (void)setAnnotation:(id)arg1 value:(id)arg2;
- (void)setAnnotationTimestamp:(unsigned long long)arg1;
- (void)setAnnotations:(id)arg1;
- (void)setBundleInfoDictionary:(id)arg1;
- (void)setCdhash:(id)arg1;
- (void)setContainingBundleIdentifier:(id)arg1;
- (void)setContainingUrl:(id)arg1;
- (bool)setDictionaries:(id)arg1;
- (void)setEntitlements:(id)arg1;
- (void)setHubProtocolVersion:(unsigned long long)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setIsRBManaged:(bool)arg1;
- (void)setLastModified:(long long)arg1;
- (void)setLaunchPersonas:(id)arg1;
- (void)setLocalizedContainingName:(id)arg1;
- (void)setOnSystemVolume:(bool)arg1;
- (void)setOriginalIdentifier:(id)arg1;
- (void)setPlugInDictionary:(id)arg1;
- (void)setRequirement:(id)arg1;
- (void)setUrl:(id)arg1;
- (void)setUuid:(id)arg1;
- (bool)setupWithForm:(id)arg1;
- (bool)setupWithName:(id)arg1 extensionPointPlatform:(unsigned int)arg2 url:(id)arg3 bundleInfo:(id)arg4 uuid:(id)arg5 discoveryInstanceUUID:(id)arg6 extensionPointCache:(id)arg7;
- (bool)shouldTerminateOnHold;
- (id)timestamp;
- (void)updateFromForm:(id)arg1;
- (id)url;
- (bool)useBundle:(id)arg1 error:(id*)arg2;
- (bool)usesHostPersona;
- (id)uuid;
- (id)valueForEntitlement:(id)arg1;
- (id)version;

@end
