
@interface FRCFrameInterpolator : NSObject {
    unsigned int  _RGBAFormat;
    struct __CFDictionary { } * _anchorFrameCMAttachment;
    unsigned long long  _bitDepth;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _cleanRectFirst;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _cleanRectSecond;
    NSObject<OS_dispatch_semaphore> * _completion_semaphore;
    bool  _concurrentOpticalFlow;
    NSObject<OS_dispatch_queue> * _concurrentQueue;
    Synthesis * _deepSynthesis;
    NSObject<OS_dispatch_group> * _dispatchGroup;
    bool  _enableCrossFlowAnalysis;
    OpticalFlowAnalyzer * _flowAnalyzer;
    struct __CVBuffer { } * _flowBackward;
    struct __CVBuffer { } * _flowBackwardGating;
    struct __CVBuffer { } * _flowForward;
    struct __CVBuffer { } * _flowForwardGating;
    bool  _forceFrameOutput;
    bool  _forceSingleStageFlow;
    FRCFrameDropDetector * _frameDropDetector;
    bool  _fullRange;
    bool  _gated;
    bool  _gatingEnabled;
    long long  _gatingLevel;
    unsigned long long  _height;
    FRCImageProcessor * _imageProcessor;
    NSObject<OS_dispatch_semaphore> * _initializationSemaphore;
    long long  _inputRotation;
    bool  _inputScaling;
    bool  _isYUV;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _lastFrameDuration;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _lastFramePts;
    unsigned long long  _lastFramesToInterpolate;
    bool  _linearSplatting;
    LiteSynthesis * _liteSynthesis;
    NSObject<OS_os_log> * _logger;
    bool  _lowMemoryMode;
    float  _maxPixelMeanChange;
    float  _maxPixelMeanDiff;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _maxTimeGap;
    bool  _onDemandOpticalFlowBuffersAllocation;
    bool  _onDemandSynthesisBufferAllocation;
    OpticalFlow * _opticalFlow;
    bool  _opticalFlowAdaptationLayer;
    unsigned long long  _opticalFlowDownsampling;
    struct __CVPixelBufferPool { } * _outputPixelBufferPool;
    NSObject<OS_dispatch_semaphore> * _postProcessingComletionSemaphore;
    struct CGAffineTransform { 
        double a; 
        double b; 
        double c; 
        double d; 
        double tx; 
        double ty; 
    }  _preferredTransform;
    struct __CVBuffer { } * _prevFlowBackwardGating;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _ptsForLiteDebugging;
    long long  _qualityMode;
    struct __CVBuffer { } * _quarterResRGB;
    long long  _recommendation;
    bool  _removeCMAttachment;
    FRCScaler * _scaler;
    bool  _secondLevelFlow;
    float  _sessionConfidence;
    long long  _sessionResult;
    NSDictionary * _sessionStatistics;
    bool  _shouldGatedForInteractive;
    bool  _singleFlow;
    NSDate * _startTime;
    long long  _state;
    <FRCSynthesis> * _synthesis;
    unsigned long long  _synthesisMode;
    bool  _synthesisTemporalSmoothing;
    bool  _tilingEnabled;
    unsigned long long  _totalFramePairsProcessed;
    unsigned long long  _totalFramesInterpolated;
    bool  _twoStageFlow;
    long long  _usage;
    unsigned long long  _useCase;
    unsigned long long  _width;
}

@property (nonatomic) bool forceFrameOutput;
@property (nonatomic) bool forceSingleStageFlow;
@property (nonatomic, readonly) bool gated;
@property (nonatomic) long long gatingLevel;
@property (nonatomic) bool inputScaling;
@property (nonatomic) bool linearSplatting;
@property (nonatomic) bool lowMemoryMode;
@property (nonatomic) bool opticalFlowAdaptationLayer;
@property (nonatomic) unsigned long long opticalFlowDownsampling;
@property (nonatomic) struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; } preferredTransform;
@property (nonatomic) long long qualityMode;
@property (nonatomic, readonly) long long recommendation;
@property (nonatomic) bool secondLevelFlow;
@property (nonatomic, readonly) float sessionConfidence;
@property (nonatomic, readonly) NSDictionary *sessionStatistics;
@property (nonatomic) bool singleFlow;
@property (nonatomic, readonly) long long state;
@property (nonatomic) unsigned long long synthesisMode;
@property (nonatomic) bool synthesisTemporalSmoothing;
@property (nonatomic) bool tilingEnabled;
@property (nonatomic) bool twoStageFlow;
@property (nonatomic) long long usage;
@property (nonatomic) unsigned long long useCase;

+ (void)getInputFrameSizeForUsage:(long long)arg1 width:(unsigned long long*)arg2 height:(unsigned long long*)arg3;
+ (long long)getUsageFromSizeWidth:(unsigned long long)arg1 height:(unsigned long long)arg2;

- (void).cxx_destruct;
- (long long)adjustUsage:(long long)arg1;
- (void)allocateInternalBuffers;
- (int)closestNumIdxInArray:(id)arg1 target:(double)arg2;
- (void)configureGating;
- (bool)configureSynthesis;
- (void)constructSessionStatisticsWithSessionDuration:(double)arg1;
- (id)createOutputFramesWithWidth:(unsigned long long)arg1 height:(unsigned long long)arg2 pixelFormat:(unsigned int)arg3 numberOframes:(unsigned long long)arg4;
- (void)dealloc;
- (long long)endSession;
- (id)errorWithErrorCode:(long long)arg1;
- (bool)forceFrameOutput;
- (bool)forceSingleStageFlow;
- (bool)gated;
- (long long)gatingLevel;
- (long long)getFrameRotation:(long long)arg1;
- (void)getPixelAttributesForBuffer:(struct __CVBuffer { }*)arg1;
- (id)init;
- (void)initSubModules;
- (id)initWithMode:(long long)arg1;
- (bool)inputScaling;
- (id)interpolateBetweenFirstFrame:(id)arg1 secondFrame:(id)arg2 numberOfFrames:(unsigned long long)arg3 withError:(id*)arg4;
- (id)interpolateBetweenFirstFrame:(id)arg1 secondFrame:(id)arg2 timeScales:(id)arg3 outputSize:(struct CGSize { double x1; double x2; })arg4 outputPixelFormat:(unsigned int)arg5 withError:(id*)arg6;
- (id)interpolateBetweenFirstFrame:(id)arg1 secondFrame:(id)arg2 timeScales:(id)arg3 withError:(id*)arg4;
- (id)interpolateRecursiveFirstFrame:(id)arg1 secondFrame:(id)arg2 timeScale:(id)arg3 withError:(id*)arg4;
- (bool)linearSplatting;
- (bool)lowMemoryMode;
- (id)normalizeTimingFromTimeScales:(id)arg1 newBeginIdx:(int)arg2 newEndIdx:(int)arg3;
- (bool)opticalFlowAdaptationLayer;
- (unsigned long long)opticalFlowDownsampling;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })preferredTransform;
- (void)preserveCMAttachmentFirstFrame:(id)arg1 secondFrame:(id)arg2;
- (long long)qualityMode;
- (long long)recommendation;
- (void)releaseInternalBuffers;
- (void)restoreCMAttachmentToFirstFrame:(id)arg1 secondFrame:(id)arg2 interpolatedFrames:(id)arg3;
- (bool)secondLevelFlow;
- (id)selectFrameInsertionPointsFromTimingList:(id)arg1 metadataList:(id)arg2 withError:(id*)arg3;
- (id)selectFrameInsertionPointsFromTimingList:(id)arg1 preModifiedTimingList:(id)arg2;
- (float)sessionConfidence;
- (id)sessionStatistics;
- (void)setCrossFlowAnalysisFromDefaults;
- (void)setFlowAnalysisFromDefaults;
- (void)setForceFrameOutput:(bool)arg1;
- (void)setForceSingleStageFlow:(bool)arg1;
- (void)setGatingLevel:(long long)arg1;
- (void)setInputScaling:(bool)arg1;
- (void)setLinearSplatting:(bool)arg1;
- (void)setLiteSynthesisDebugFromDefaults;
- (void)setLowMemoryMode:(bool)arg1;
- (void)setNormalizationModeFromDefaults;
- (void)setOpticalFlowAdaptationLayer:(bool)arg1;
- (void)setOpticalFlowDownsampling:(unsigned long long)arg1;
- (void)setPreferredTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1;
- (void)setPropertiesFromDefaults;
- (void)setQualityMode:(long long)arg1;
- (void)setSecondLevelFlow:(bool)arg1;
- (void)setSingleFlow:(bool)arg1;
- (void)setSynthesisMode:(unsigned long long)arg1;
- (void)setSynthesisTemporalSmoothing:(bool)arg1;
- (void)setTilingEnabled:(bool)arg1;
- (void)setTwoStageFlow:(bool)arg1;
- (void)setUsage:(long long)arg1;
- (void)setUseCase:(unsigned long long)arg1;
- (bool)shallDumpDebugInfoForCurrPts:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 prevPts:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (bool)shallReusePreviousFlowPts0:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 Pts1:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (bool)singleFlow;
- (long long)startSessionWithUsage:(long long)arg1;
- (long long)state;
- (struct __CVBuffer { }*)synthesisFrameForTimeScale:(float)arg1 outputSize:(struct CGSize { double x1; double x2; })arg2 outputPixelFormat:(unsigned int)arg3 scalerEnabled:(bool)arg4 frameIndex:(unsigned long long)arg5 lastFrame:(bool)arg6;
- (unsigned long long)synthesisMode;
- (bool)synthesisTemporalSmoothing;
- (id)synthesizeInterpolatedFrames:(id)arg1 second:(id)arg2 normalizedFirst:(struct __CVBuffer { }*)arg3 normalizedSecond:(struct __CVBuffer { }*)arg4 timeScales:(id)arg5 outputSize:(struct CGSize { double x1; double x2; })arg6 outputPixelFormat:(unsigned int)arg7 scalerEnabled:(bool)arg8;
- (bool)tilingEnabled;
- (bool)twoStageFlow;
- (void)updateBackwardFlow;
- (bool)updateGatingResult;
- (void)updateLastFramePts:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 duration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 toInterpolate:(unsigned long long)arg3;
- (void)updateRecommendation;
- (long long)usage;
- (unsigned long long)useCase;

@end
