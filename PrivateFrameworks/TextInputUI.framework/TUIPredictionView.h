
@interface TUIPredictionView : UIView <UIGestureRecognizerDelegate> {
    TIAutocorrectionList * _autocorrectionList;
    UIView * _backdropView;
    TUIPredictionViewStackView * _cellStackView;
    NSLocale * _currentLocale;
    <TUIPredictionViewDelegate> * _delegate;
    bool  _disablesHighlight;
    bool  _drawsBackdropView;
    UIColor * _highlightColor;
    double  _highlightCornerRadius;
    double  _highlightMargin;
    unsigned long long  _maximumEmojiCells;
    unsigned long long  _minimumNumberOfCells;
    UIKBRenderConfig * _renderConfig;
    long long  _selectedIndex;
    UIColor * _separatorColor;
    double  _separatorMargin;
    bool  _shouldAnimateCells;
    UILongPressGestureRecognizer * _tapGestureRecognizer;
    bool  _useContinuousCornerInHighlight;
}

@property (nonatomic, retain) TIAutocorrectionList *autocorrectionList;
@property (nonatomic, retain) UIView *backdropView;
@property (nonatomic, retain) TUIPredictionViewStackView *cellStackView;
@property (nonatomic, retain) NSLocale *currentLocale;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <TUIPredictionViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool disablesHighlight;
@property (nonatomic, readonly) NSArray *displayedCandidates;
@property (nonatomic) bool drawsBackdropView;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) UIColor *highlightColor;
@property (nonatomic) double highlightCornerRadius;
@property (nonatomic) double highlightMargin;
@property (nonatomic) unsigned long long maximumEmojiCells;
@property (nonatomic) unsigned long long minimumNumberOfCells;
@property (nonatomic, retain) UIKBRenderConfig *renderConfig;
@property (nonatomic) long long selectedIndex;
@property (nonatomic, retain) UIColor *separatorColor;
@property (nonatomic) double separatorMargin;
@property (nonatomic) bool shouldAnimateCells;
@property (readonly) Class superclass;
@property (nonatomic, retain) UILongPressGestureRecognizer *tapGestureRecognizer;
@property (nonatomic) bool useContinuousCornerInHighlight;

- (void).cxx_destruct;
- (id)_candidatesToDisplayForAutocorrectionList:(id)arg1;
- (void)_didRecognizeTapGesture:(id)arg1;
- (bool)_ensureVisibleCellCount:(unsigned long long)arg1 forCellStackView:(id)arg2;
- (long long)_numberOfEmojisToDisplayForAutocorrectionList:(id)arg1 withCandidatesShown:(id)arg2;
- (unsigned long long)_predictionCellIndexAtLocation:(struct CGPoint { double x1; double x2; })arg1;
- (void)_reloadCellsAnimated:(bool)arg1;
- (void)_setRenderConfig:(id)arg1;
- (bool)_shouldPadWithEmptyCellsForAutocorrectionList:(id)arg1;
- (void)_updateHighlightedCellForTouch:(id)arg1;
- (void)_updateVisibleCellAppearance;
- (id)allVisibleCells;
- (id)autocorrectionList;
- (id)backdropView;
- (void)cancelTapGestureRecognizer;
- (id)cellStackView;
- (void)configurePredictionCell:(id)arg1 forCandidate:(id)arg2 animated:(bool)arg3;
- (id)currentLocale;
- (id)delegate;
- (bool)disablesHighlight;
- (id)displayedCandidates;
- (bool)drawsBackdropView;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (id)highlightColor;
- (double)highlightCornerRadius;
- (double)highlightMargin;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (id)labelFontForCandidate:(id)arg1;
- (long long)layoutDirection;
- (void)layoutSubviews;
- (double)maximumBackgroundWidth;
- (unsigned long long)maximumEmojiCells;
- (unsigned long long)minimumNumberOfCells;
- (id)renderConfig;
- (long long)selectedIndex;
- (id)separatorColor;
- (double)separatorMargin;
- (void)setAutocorrectionList:(id)arg1;
- (void)setAutocorrectionList:(id)arg1 animated:(bool)arg2;
- (void)setBackdropView:(id)arg1;
- (void)setCellStackView:(id)arg1;
- (void)setCurrentLocale:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDisablesHighlight:(bool)arg1;
- (void)setDrawsBackdropView:(bool)arg1;
- (void)setHighlightColor:(id)arg1;
- (void)setHighlightCornerRadius:(double)arg1;
- (void)setHighlightMargin:(double)arg1;
- (void)setMaximumEmojiCells:(unsigned long long)arg1;
- (void)setMinimumNumberOfCells:(unsigned long long)arg1;
- (void)setRenderConfig:(id)arg1;
- (void)setSelectedIndex:(long long)arg1;
- (void)setSeparatorColor:(id)arg1;
- (void)setSeparatorMargin:(double)arg1;
- (void)setShouldAnimateCells:(bool)arg1;
- (void)setTapGestureRecognizer:(id)arg1;
- (void)setUseContinuousCornerInHighlight:(bool)arg1;
- (bool)shouldAnimateCells;
- (id)tapGestureRecognizer;
- (id)test_cellForCandidate:(id)arg1;
- (bool)useContinuousCornerInHighlight;
- (id)visibleCells;

@end
