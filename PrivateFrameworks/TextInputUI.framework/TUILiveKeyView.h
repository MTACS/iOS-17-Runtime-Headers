
@interface TUILiveKeyView : UIView {
    TUIDrawingView * _backgroundMaskView;
    double  _fontSize;
    NSLayoutConstraint * _horizontalContentConstraint;
    NSString * _imageName;
    bool  _isShift;
    bool  _isShowingHighlight;
    NSString * _keyCap;
    TUIDrawingView * _keyCapBackground;
    TUIDrawingView * _keyCapShadow;
    UILabel * _keyLabel;
    long long  _keyStyle;
    NSLayoutConstraint * _labelBottom;
    NSLayoutConstraint * _labelLeading;
    NSLayoutConstraint * _labelTrailing;
    long long  _layoutShape;
    long long  _layoutType;
    UIKBRenderConfig * _renderConfig;
    UIImageView * _symbolImageView;
    UIKBRenderTraits * _traits;
    bool  _usesBlueBackground;
    bool  _usesImage;
    NSLayoutConstraint * _verticalContentConstraint;
}

@property (nonatomic, retain) TUIDrawingView *backgroundMaskView;
@property (nonatomic) double fontSize;
@property (nonatomic, retain) NSLayoutConstraint *horizontalContentConstraint;
@property (nonatomic, retain) NSString *imageName;
@property (nonatomic) bool isShift;
@property (nonatomic) bool isShowingHighlight;
@property (nonatomic, retain) NSString *keyCap;
@property (nonatomic, retain) TUIDrawingView *keyCapBackground;
@property (nonatomic, retain) TUIDrawingView *keyCapShadow;
@property (nonatomic, retain) UILabel *keyLabel;
@property (nonatomic) long long keyStyle;
@property (nonatomic, retain) NSLayoutConstraint *labelBottom;
@property (nonatomic, retain) NSLayoutConstraint *labelLeading;
@property (nonatomic, retain) NSLayoutConstraint *labelTrailing;
@property (nonatomic) long long layoutShape;
@property (nonatomic) long long layoutType;
@property (nonatomic, retain) UIKBRenderConfig *renderConfig;
@property (nonatomic, retain) UIImageView *symbolImageView;
@property (nonatomic, retain) UIKBRenderTraits *traits;
@property (nonatomic) bool usesBlueBackground;
@property (nonatomic) bool usesImage;
@property (nonatomic, retain) NSLayoutConstraint *verticalContentConstraint;

- (void).cxx_destruct;
- (id)backgroundMaskView;
- (id)controlKeyColor;
- (id)controlShadowColor;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })drawingInsets;
- (id)fontForLabel;
- (id)fontForSymbolStyle:(id)arg1;
- (double)fontSize;
- (id)highlightedControlKeyColor;
- (id)highlightedKeyCapColor;
- (id)horizontalContentConstraint;
- (id)imageName;
- (id)imageWithName:(id)arg1;
- (id)initWithKey:(id)arg1 renderTraits:(id)arg2 displayContents:(id)arg3;
- (bool)isShift;
- (bool)isShowingHighlight;
- (id)keyCap;
- (id)keyCapBackground;
- (id)keyCapColor;
- (id)keyCapShadow;
- (bool)keyIsControlType:(id)arg1;
- (bool)keyIsSpaceType:(id)arg1;
- (bool)keyIsStringType:(id)arg1;
- (id)keyLabel;
- (long long)keyStyle;
- (void)keyWithLabel;
- (void)keyWithSymbolView;
- (id)labelBottom;
- (id)labelForKeyCap:(id)arg1;
- (id)labelLeading;
- (id)labelTrailing;
- (long long)layoutShape;
- (void)layoutSubviews;
- (long long)layoutType;
- (void)makeKeyBackgrounds;
- (id)nameFromControlType:(int)arg1;
- (id)renderConfig;
- (id)roundedRectForRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setBackgroundMaskView:(id)arg1;
- (void)setFontSize:(double)arg1;
- (void)setHorizontalContentConstraint:(id)arg1;
- (void)setImageName:(id)arg1;
- (void)setIsShift:(bool)arg1;
- (void)setIsShowingHighlight:(bool)arg1;
- (void)setKeyCap:(id)arg1;
- (void)setKeyCapBackground:(id)arg1;
- (void)setKeyCapShadow:(id)arg1;
- (void)setKeyLabel:(id)arg1;
- (void)setKeyStyle:(long long)arg1;
- (void)setLabelBottom:(id)arg1;
- (void)setLabelLeading:(id)arg1;
- (void)setLabelTrailing:(id)arg1;
- (void)setLayoutShape:(long long)arg1;
- (void)setLayoutType:(long long)arg1;
- (void)setRenderConfig:(id)arg1;
- (void)setSymbolImageView:(id)arg1;
- (void)setTraits:(id)arg1;
- (void)setUsesBlueBackground:(bool)arg1;
- (void)setUsesImage:(bool)arg1;
- (void)setVerticalContentConstraint:(id)arg1;
- (id)shadowColor;
- (id)shadowPathForRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)symbolImageConfigForRenderTraits:(id)arg1 traitCollection:(id)arg2;
- (id)symbolImageView;
- (id)traits;
- (void)updateFontSize:(double)arg1;
- (void)updateKeyStyle:(long long)arg1;
- (void)updateLabelInsets;
- (void)updateLabelText:(id)arg1;
- (void)updateLabelWeight:(long long)arg1;
- (void)updateRenderTraits:(id)arg1 displayContents:(id)arg2;
- (void)updateSymbolInsets;
- (bool)usesBlueBackground;
- (bool)usesImage;
- (id)verticalContentConstraint;

@end
