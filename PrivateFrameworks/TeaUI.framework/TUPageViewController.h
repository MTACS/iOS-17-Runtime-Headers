
@interface TUPageViewController : UIViewController <TUPageViewControllerScrollViewAccessibilityDelegate, UIScrollViewDelegate> {
    UIViewController * _appearingViewController;
    bool  _cancelScrollViewDidScroll;
    <TUPageViewControllerDataSource> * _dataSource;
    <TUPageViewControllerDelegate> * _delegate;
    UIViewController * _disappearingViewController;
    NSObject<OS_dispatch_group> * _idleDispatchGroup;
    bool  _isTransitioning;
    UIViewController * _managedForViewController;
    UIViewController * _nextViewController;
    UIViewController * _originalVisibleViewController;
    double  _pageGutter;
    UIViewController * _previousViewController;
    NSMutableArray * _replayViewTransitions;
    TUPageViewControllerScrollView * _scrollView;
    bool  _scrollViewStartedScrolling;
    UIViewController * _secondaryVisibleViewController;
    struct CGSize { 
        double width; 
        double height; 
    }  _transitioningSize;
    UIViewController * _visibleViewController;
}

@property (nonatomic, retain) UIViewController *appearingViewController;
@property (nonatomic) bool cancelScrollViewDidScroll;
@property (nonatomic) <TUPageViewControllerDataSource> *dataSource;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <TUPageViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) UIViewController *disappearingViewController;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSObject<OS_dispatch_group> *idleDispatchGroup;
@property (nonatomic, readonly) bool isTransitioning;
@property (nonatomic, retain) UIViewController *managedForViewController;
@property (nonatomic, retain) UIViewController *nextViewController;
@property (nonatomic, retain) UIViewController *originalVisibleViewController;
@property (nonatomic) double pageGutter;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } pageSize;
@property (nonatomic) bool pagingEnabled;
@property (nonatomic, retain) UIViewController *previousViewController;
@property (nonatomic, retain) NSMutableArray *replayViewTransitions;
@property (nonatomic, readonly) TUPageViewControllerScrollView *scrollView;
@property (nonatomic, readonly) bool scrollViewStartedScrolling;
@property (nonatomic, readonly) UIViewController *secondaryVisibleViewController;
@property (readonly) Class superclass;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } transitioningSize;
@property (nonatomic, retain) UIViewController *visibleViewController;

- (void).cxx_destruct;
- (bool)_assistiveTechnologyIsRunning;
- (void)_keyboardSwitchGoingRight:(bool)arg1;
- (bool)_shouldIgnoreDidScrollWithScrollView:(id)arg1;
- (void)accessibilityHandleRequestToGoBackForPageViewControllerScrollView:(id)arg1;
- (void)accessibilityHandleRequestToGoForewardForPageViewControllerScrollView:(id)arg1;
- (void)addViewController:(id)arg1 fromScroll:(bool)arg2;
- (id)appearingViewController;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })calculateScrollViewFrameFromViewBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)callLastViewAppearanceMethods;
- (bool)canSwitchToNextViewController;
- (bool)canSwitchToPreviousViewController;
- (bool)cancelScrollViewDidScroll;
- (struct CGPoint { double x1; double x2; })centerForIndex:(unsigned long long)arg1;
- (id)childViewControllerForStatusBarHidden;
- (void)commonInit;
- (id)dataSource;
- (id)delegate;
- (void)didReceiveBlueprintDidBeginItemDraggingEvent;
- (void)didReceiveBlueprintDidEndItemDraggingEvent;
- (id)disappearingViewController;
- (void)handleScrollEnd;
- (void)handleScrollStart;
- (id)idleDispatchGroup;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (bool)isTransitioning;
- (bool)isTransitioningToViewController;
- (void)keyboardOrActionSwitchToNextViewController;
- (void)keyboardOrActionSwitchToPreviousViewController;
- (void)managePreviousAndNextViewController;
- (id)managedForViewController;
- (id)nextViewController;
- (id)originalVisibleViewController;
- (double)pageGutter;
- (struct CGSize { double x1; double x2; })pageSize;
- (bool)pagingEnabled;
- (void)performWhenIdle:(id /* block */)arg1;
- (id)previousViewController;
- (void)reindexNextViewControllers;
- (void)reindexPreviousViewControllers;
- (void)reindexViewControllers;
- (void)removeViewController:(id)arg1;
- (id)replayViewTransitions;
- (void)repositionPages;
- (id)scrollView;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(bool)arg2;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (bool)scrollViewStartedScrolling;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (id)secondaryVisibleViewController;
- (void)setAppearingViewController:(id)arg1;
- (void)setCancelScrollViewDidScroll:(bool)arg1;
- (void)setDataSource:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDisappearingViewController:(id)arg1;
- (void)setManagedForViewController:(id)arg1;
- (void)setNextViewController:(id)arg1;
- (void)setOriginalVisibleViewController:(id)arg1;
- (void)setPageGutter:(double)arg1;
- (void)setPagingEnabled:(bool)arg1;
- (void)setPreviousViewController:(id)arg1;
- (void)setReplayViewTransitions:(id)arg1;
- (void)setSecondaryVisibleViewController:(id)arg1;
- (void)setVisibleViewController:(id)arg1;
- (bool)shouldAutomaticallyForwardAppearanceMethods;
- (void)switchToNextViewController;
- (void)switchToPreviousViewController;
- (void)transitionToSize:(struct CGSize { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })transitioningSize;
- (void)updateContentOffset;
- (void)updateContentSize;
- (void)updatePositionForViewController:(id)arg1;
- (void)updateScrollView;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewLayoutMarginsDidChange;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillLayoutSubviews;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (id)visibleViewController;

@end
