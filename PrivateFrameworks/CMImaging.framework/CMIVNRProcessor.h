
@interface CMIVNRProcessor : NSObject <MetalImageBufferProcessor> {
    NSDictionary * _cameraInfoByPortType;
    VNRPyramid * _deghostPyramid;
    unsigned long long  _frameIndex;
    NSDictionary * _inputMetadata;
    struct __CVBuffer { } * _inputPixelBuffer;
    VNRPyramid * _inputPyramid;
    <MTLCommandBuffer> * _metalCommandBuffer;
    <MTLCommandQueue> * _metalCommandQueue;
    FigMetalContext * _metalContext;
    <MTLDevice> * _metalDevice;
    VNRShaders * _metalShaders;
    struct __CVBuffer { } * _outputPixelBuffer;
    VNRPyramid * _outputPyramid;
    CMIVNRPrepareDescriptor * _prepareDescriptor;
    <MTLTexture> * _previousChromaTex;
    <MTLTexture> * _previousLumaTex;
    VNRPyramid * _previousOutputPyramid;
    VNRTuning * _tuning;
    NSDictionary * _tuningParameters;
}

@property (nonatomic, retain) NSDictionary *cameraInfoByPortType;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, retain) VNRPyramid *deghostPyramid;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) CMIExternalMemoryResource *externalMemoryResource;
@property (nonatomic) unsigned long long frameIndex;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSDictionary *inputMetadata;
@property (nonatomic, retain) struct __CVBuffer { }*inputPixelBuffer;
@property (nonatomic, retain) VNRPyramid *inputPyramid;
@property (readonly) <MTLCommandBuffer> *metalCommandBuffer;
@property (nonatomic, retain) <MTLCommandQueue> *metalCommandQueue;
@property (nonatomic, retain) <MTLDevice> *metalDevice;
@property (nonatomic, retain) VNRShaders *metalShaders;
@property (nonatomic, retain) struct __CVBuffer { }*outputPixelBuffer;
@property (nonatomic, retain) VNRPyramid *outputPyramid;
@property (nonatomic, retain) <MTLTexture> *previousChromaTex;
@property (nonatomic, retain) <MTLTexture> *previousLumaTex;
@property (nonatomic, retain) VNRPyramid *previousOutputPyramid;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsExternalMemoryResource;
@property (readonly) VNRTuning *tuning;
@property (nonatomic, retain) NSDictionary *tuningParameters;

+ (id)_productTypeFromMGGetProductType:(int)arg1;
+ (id)getDefaultTuningParameters;
+ (id)getTuningParametersForCurrentDevice;

- (void).cxx_destruct;
- (id)bindTextureToPixelBuffer:(struct __CVBuffer { }*)arg1 plane:(unsigned long long)arg2 metalPixelFormat:(unsigned long long)arg3 usage:(unsigned long long)arg4;
- (id)cameraInfoByPortType;
- (void)dealloc;
- (id)deghostPyramid;
- (int)fillInputPyramid:(id)arg1 previousOutputPyramid:(id)arg2 deghostPyramid:(id)arg3 inputLuma:(id)arg4 inputChroma:(id)arg5 previousOutputLuma:(id)arg6 previousOutputChroma:(id)arg7;
- (int)finishProcessing;
- (unsigned long long)frameIndex;
- (int)fuseWithInputPyramid:(id)arg1 deghostPyramid:(id)arg2 previousOutputPyramid:(id)arg3 outputPyramid:(id)arg4 inputLuma:(id)arg5 inputChroma:(id)arg6 previousOutputLuma:(id)arg7 previousOutputChroma:(id)arg8 outputLuma:(id)arg9 outputChroma:(id)arg10 frameIdx:(unsigned long long)arg11;
- (id)initWithCommandQueue:(id)arg1;
- (id)inputMetadata;
- (struct __CVBuffer { }*)inputPixelBuffer;
- (id)inputPyramid;
- (id)metalCommandBuffer;
- (id)metalCommandQueue;
- (id)metalDevice;
- (id)metalShaders;
- (struct __CVBuffer { }*)outputPixelBuffer;
- (id)outputPyramid;
- (int)prepareToProcess:(unsigned int)arg1;
- (int)prepareToProcess:(unsigned int)arg1 prepareDescriptor:(id)arg2;
- (id)previousChromaTex;
- (id)previousLumaTex;
- (id)previousOutputPyramid;
- (int)prewarm;
- (int)process;
- (int)propagateDeghostingScoresDownPyramid:(id)arg1;
- (int)purgeResources;
- (int)resetState;
- (void)setCameraInfoByPortType:(id)arg1;
- (void)setDeghostPyramid:(id)arg1;
- (void)setFrameIndex:(unsigned long long)arg1;
- (void)setInputMetadata:(id)arg1;
- (void)setInputPixelBuffer:(struct __CVBuffer { }*)arg1;
- (void)setInputPyramid:(id)arg1;
- (void)setMetalCommandQueue:(id)arg1;
- (void)setMetalDevice:(id)arg1;
- (void)setMetalShaders:(id)arg1;
- (void)setOutputPixelBuffer:(struct __CVBuffer { }*)arg1;
- (void)setOutputPyramid:(id)arg1;
- (void)setPreviousChromaTex:(id)arg1;
- (void)setPreviousLumaTex:(id)arg1;
- (void)setPreviousOutputPyramid:(id)arg1;
- (void)setTuningParameters:(id)arg1;
- (int)setup;
- (id)tuning;
- (id)tuningParameters;
- (void)waitUntilScheduledWithWorkloadName:(const char *)arg1;

@end
