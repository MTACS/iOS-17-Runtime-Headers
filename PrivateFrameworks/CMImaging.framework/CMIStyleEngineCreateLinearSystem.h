
@interface CMIStyleEngineCreateLinearSystem : NSObject <CMIStyleEngineProcessingStage> {
    <MTLComputePipelineState> * _computePipelineStates;
    bool  _inputIsLinear;
    NSArray * _inputLHSDiagSums;
    <MTLTexture> * _inputLearningModulationMaskTexture;
    <MTLBuffer> * _inputPairExpandedWeightsBuffer;
    <MTLBuffer> * _inputPolyExpandedInputBuffer;
    <MTLTexture> * _inputPolyExpandedTargetTexture;
    NSArray * _inputPriorFactorForLHS;
    NSArray * _inputPriorFactorForRHS;
    <MTLTexture> * _inputSpotlightTextureBottomEdge;
    <MTLTexture> * _inputSpotlightTextureBottomLeft;
    <MTLTexture> * _inputSpotlightTextureBottomRight;
    <MTLTexture> * _inputSpotlightTextureCentral;
    <MTLTexture> * _inputSpotlightTextureLeftEdge;
    <MTLTexture> * _inputSpotlightTextureRightEdge;
    <MTLTexture> * _inputSpotlightTextureTopEdge;
    <MTLTexture> * _inputSpotlightTextureTopLeft;
    <MTLTexture> * _inputSpotlightTextureTopRight;
    <MTLTexture> * _inputThumbnailTexture;
    <MTLTexture> * _inputWeightPlanesTexture;
    NSArray * _outputLHS;
    NSArray * _outputRHS;
    struct { 
        unsigned int polynomialCount; 
        unsigned int systemSize; 
        /* Warning: Unrecognized filer type: '"' using 'void*' */ void*spotlightCount; 
    }  _params;
    NSArray * _priorMatrix;
    bool  _targetIsLinear;
    <MTLTexture> * _targetThumbnailTexture;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool inputIsLinear;
@property (nonatomic, retain) NSArray *inputLHSDiagSums;
@property (nonatomic, retain) <MTLTexture> *inputLearningModulationMaskTexture;
@property (nonatomic, retain) <MTLBuffer> *inputPairExpandedWeightsBuffer;
@property (nonatomic, retain) <MTLBuffer> *inputPolyExpandedInputBuffer;
@property (nonatomic, retain) <MTLTexture> *inputPolyExpandedTargetTexture;
@property (nonatomic, retain) NSArray *inputPriorFactorForLHS;
@property (nonatomic, retain) NSArray *inputPriorFactorForRHS;
@property (nonatomic, retain) <MTLTexture> *inputSpotlightTextureBottomEdge;
@property (nonatomic, retain) <MTLTexture> *inputSpotlightTextureBottomLeft;
@property (nonatomic, retain) <MTLTexture> *inputSpotlightTextureBottomRight;
@property (nonatomic, retain) <MTLTexture> *inputSpotlightTextureCentral;
@property (nonatomic, retain) <MTLTexture> *inputSpotlightTextureLeftEdge;
@property (nonatomic, retain) <MTLTexture> *inputSpotlightTextureRightEdge;
@property (nonatomic, retain) <MTLTexture> *inputSpotlightTextureTopEdge;
@property (nonatomic, retain) <MTLTexture> *inputSpotlightTextureTopLeft;
@property (nonatomic, retain) <MTLTexture> *inputSpotlightTextureTopRight;
@property (nonatomic, retain) <MTLTexture> *inputThumbnailTexture;
@property (nonatomic, retain) <MTLTexture> *inputWeightPlanesTexture;
@property (nonatomic, retain) NSArray *outputLHS;
@property (nonatomic, retain) NSArray *outputRHS;
@property (nonatomic, retain) NSArray *priorMatrix;
@property (readonly) Class superclass;
@property (nonatomic) bool targetIsLinear;
@property (nonatomic, retain) <MTLTexture> *targetThumbnailTexture;

- (void).cxx_destruct;
- (int)_compileShaders:(id)arg1;
- (int)enqueueToCommandBuffer:(id)arg1;
- (id)initWithMetalContext:(void *)arg1 modelOrder:(void *)arg2 systemSize:(void *)arg3 spotlightCount:(void *)arg4 extLambda:(void *)arg5 tikLambdaConstant:(void *)arg6 tikLambdaLinear:(void *)arg7 tikLambdaQuadratic:(void *)arg8 modulationStrength:(void *)arg9 modulationOffset:(void *)arg10; // needs 10 arg types, found 9: id, unsigned long long, unsigned int, float, float, float, float, float, float
- (bool)inputIsLinear;
- (id)inputLHSDiagSums;
- (id)inputLearningModulationMaskTexture;
- (id)inputPairExpandedWeightsBuffer;
- (id)inputPolyExpandedInputBuffer;
- (id)inputPolyExpandedTargetTexture;
- (id)inputPriorFactorForLHS;
- (id)inputPriorFactorForRHS;
- (id)inputSpotlightTextureBottomEdge;
- (id)inputSpotlightTextureBottomLeft;
- (id)inputSpotlightTextureBottomRight;
- (id)inputSpotlightTextureCentral;
- (id)inputSpotlightTextureLeftEdge;
- (id)inputSpotlightTextureRightEdge;
- (id)inputSpotlightTextureTopEdge;
- (id)inputSpotlightTextureTopLeft;
- (id)inputSpotlightTextureTopRight;
- (id)inputThumbnailTexture;
- (id)inputWeightPlanesTexture;
- (id)outputLHS;
- (id)outputRHS;
- (id)priorMatrix;
- (void)setInputIsLinear:(bool)arg1;
- (void)setInputLHSDiagSums:(id)arg1;
- (void)setInputLearningModulationMaskTexture:(id)arg1;
- (void)setInputPairExpandedWeightsBuffer:(id)arg1;
- (void)setInputPolyExpandedInputBuffer:(id)arg1;
- (void)setInputPolyExpandedTargetTexture:(id)arg1;
- (void)setInputPriorFactorForLHS:(id)arg1;
- (void)setInputPriorFactorForRHS:(id)arg1;
- (void)setInputSpotlightTextureBottomEdge:(id)arg1;
- (void)setInputSpotlightTextureBottomLeft:(id)arg1;
- (void)setInputSpotlightTextureBottomRight:(id)arg1;
- (void)setInputSpotlightTextureCentral:(id)arg1;
- (void)setInputSpotlightTextureLeftEdge:(id)arg1;
- (void)setInputSpotlightTextureRightEdge:(id)arg1;
- (void)setInputSpotlightTextureTopEdge:(id)arg1;
- (void)setInputSpotlightTextureTopLeft:(id)arg1;
- (void)setInputSpotlightTextureTopRight:(id)arg1;
- (void)setInputThumbnailTexture:(id)arg1;
- (void)setInputWeightPlanesTexture:(id)arg1;
- (void)setOutputLHS:(id)arg1;
- (void)setOutputRHS:(id)arg1;
- (void)setPriorMatrix:(id)arg1;
- (void)setTargetIsLinear:(bool)arg1;
- (void)setTargetThumbnailTexture:(id)arg1;
- (bool)targetIsLinear;
- (id)targetThumbnailTexture;

@end
