
@interface HUComfortSoundsController : NSObject <HUComfortSoundsAssetManagerDelegate> {
    HUComfortSoundsAssetManager * _assetManager;
    AVAudioPlayerNode * _audioPlayerNodeA;
    AVAudioPlayerNode * _audioPlayerNodeB;
    NSObject<OS_dispatch_queue> * _audioQueue;
    double  _changeDuration;
    bool  _changePending;
    bool  _changingSounds;
    bool  _crossFading;
    AVAudioPlayerNode * _currentNode;
    double  _duckDuration;
    id /* block */  _duckingBlock;
    AVAudioEngine * _engine;
    double  _fadeDuration;
    bool  _holdingForCall;
    id /* block */  _mixingBlock;
    double  _outputGain;
    id /* block */  _rampDownBlock;
    id /* block */  _rampUpBlock;
    NSString * _routeUID;
    HUComfortSound * _selectedSound;
    AVAudioSession * _session;
    double  _stepDuration;
    double  _stepsPerSecond;
    bool  _temporaryAirpodsDisconnect;
    NSObject<OS_os_transaction> * _transaction;
}

@property (nonatomic, retain) HUComfortSoundsAssetManager *assetManager;
@property (nonatomic, retain) AVAudioPlayerNode *audioPlayerNodeA;
@property (nonatomic, retain) AVAudioPlayerNode *audioPlayerNodeB;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *audioQueue;
@property (nonatomic) bool changePending;
@property (nonatomic) bool changingSounds;
@property (nonatomic) bool crossFading;
@property (nonatomic, retain) AVAudioPlayerNode *currentNode;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) AVAudioEngine *engine;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool holdingForCall;
@property (nonatomic) double outputGain;
@property (nonatomic, retain) NSString *routeUID;
@property (nonatomic, retain) HUComfortSound *selectedSound;
@property (nonatomic, retain) AVAudioSession *session;
@property (readonly) Class superclass;
@property (nonatomic) bool temporaryAirpodsDisconnect;
@property (nonatomic, retain) NSObject<OS_os_transaction> *transaction;

+ (id)sharedController;

- (void).cxx_destruct;
- (void)activeUseDidChange:(id)arg1;
- (void)assetDownloadDidUpdate;
- (id)assetManager;
- (void)audioEngineWasInterrupted:(id)arg1;
- (id)audioPlayerNodeA;
- (id)audioPlayerNodeB;
- (id)audioQueue;
- (void)audioSessionWasInterrupted:(id)arg1;
- (void)availableAssetsDidUpdate;
- (void)callStatusDidChange:(id)arg1;
- (bool)changePending;
- (bool)changingSounds;
- (void)clearActiveRoute;
- (bool)crossFading;
- (id)currentNode;
- (bool)currentRouteSupported;
- (id)engine;
- (bool)hasCurrentCall;
- (bool)holdingForCall;
- (id)init;
- (bool)isPlaying;
- (bool)isPlayingOnQueue;
- (void)mediaPlaybackDidChange:(id)arg1;
- (void)mediaServerDied;
- (id)nextFileToPlay;
- (double)outputGain;
- (void)play;
- (void)playOnQueue;
- (id)processComfortSoundsAssetRequest:(id)arg1;
- (void)rampNodeVolume:(id)arg1 from:(double)arg2 to:(double)arg3 fadeDuration:(double)arg4;
- (void)rampNodeVolume:(id)arg1 from:(double)arg2 to:(double)arg3 fadeDuration:(double)arg4 withProgress:(double)arg5;
- (void)rampOutputGainFrom:(double)arg1 to:(double)arg2 withProgress:(double)arg3;
- (void)registerNotifications;
- (id)routeUID;
- (void)routesDidChange:(id)arg1;
- (void)scheduleFile;
- (void)scheduleNewFile;
- (id)selectedSound;
- (id)session;
- (void)setAssetManager:(id)arg1;
- (void)setAudioPlayerNodeA:(id)arg1;
- (void)setAudioPlayerNodeB:(id)arg1;
- (void)setAudioQueue:(id)arg1;
- (void)setChangePending:(bool)arg1;
- (void)setChangingSounds:(bool)arg1;
- (void)setCrossFading:(bool)arg1;
- (void)setCurrentNode:(id)arg1;
- (void)setEngine:(id)arg1;
- (void)setHoldingForCall:(bool)arg1;
- (void)setOutputGain:(double)arg1;
- (void)setRouteUID:(id)arg1;
- (void)setSelectedSound:(id)arg1;
- (void)setSession:(id)arg1;
- (void)setTemporaryAirpodsDisconnect:(bool)arg1;
- (void)setTransaction:(id)arg1;
- (void)setVolume:(double)arg1 forNode:(id)arg2 andRamp:(bool)arg3;
- (void)setupEngine;
- (bool)shouldContinuePlayback;
- (void)stop;
- (void)stopAndClearRoute:(bool)arg1;
- (void)stopOnQueueAndClearRoute:(bool)arg1;
- (void)systemLogoutStatusDidChange:(id)arg1;
- (bool)temporaryAirpodsDisconnect;
- (id)transaction;
- (void)updateAnalytics;
- (void)updateVolumeForSessionAndRamp:(bool)arg1;

@end
