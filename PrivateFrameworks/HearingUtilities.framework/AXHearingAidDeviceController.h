
@interface AXHearingAidDeviceController : HUDeviceController <AXHADeviceControllerProtocol, CBCentralManagerDelegate, CBPairingAgentDelegate> {
    AXDispatchTimer * _advertisingTimeoutTimer;
    NSMutableDictionary * _advertisingTimestamps;
    AXDispatchTimer * _availableDeviceTimer;
    NSMutableArray * _availablePeripherals;
    NSMutableArray * _availableSearchBlocks;
    NSObject<OS_dispatch_queue> * _bluetoothCentralQueue;
    CBCentralManager * _bluetoothManager;
    bool  _centralIsOn;
    NSLock * _centralRequestsLock;
    NSMutableArray * _connectedDevices;
    NSMutableArray * _connectedSearchBlocks;
    NSMutableDictionary * _deviceUpdatesDescription;
    NSObject<OS_dispatch_queue> * _deviceUpdatesQueue;
    bool  _isScanning;
    NSMutableArray * _loadedDevices;
    NSMutableArray * _persistentDevices;
    bool  _shouldActiveScan;
    NSMutableArray * _updateDeviceBlocks;
    NSMutableArray * centralRequestBlocks;
}

@property (nonatomic, retain) NSMutableArray *availablePeripherals;
@property (nonatomic, retain) NSMutableArray *availableSearchBlocks;
@property (nonatomic, retain) NSMutableArray *centralRequestBlocks;
@property (nonatomic, retain) NSMutableArray *connectedDevices;
@property (nonatomic, retain) NSMutableArray *connectedSearchBlocks;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (retain) NSMutableArray *loadedDevices;
@property (nonatomic, retain) NSMutableArray *persistentDevices;
@property (nonatomic) bool shouldActiveScan;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSMutableArray *updateDeviceBlocks;

+ (id)sharedController;

- (void).cxx_destruct;
- (void)addAvailableDevice:(id)arg1;
- (void)addConnectedDevice:(id)arg1;
- (void)addLoadedDevice:(id)arg1;
- (id)availablePeripherals;
- (id)availableSearchBlocks;
- (void)cancelPendingConnections;
- (void)centralManager:(id)arg1 didConnectPeripheral:(id)arg2;
- (void)centralManager:(id)arg1 didDisconnectPeripheral:(id)arg2 error:(id)arg3;
- (void)centralManager:(id)arg1 didDiscoverPeripheral:(id)arg2 advertisementData:(id)arg3 RSSI:(id)arg4;
- (void)centralManager:(id)arg1 didFailToConnectPeripheral:(id)arg2 error:(id)arg3;
- (void)centralManager:(id)arg1 didRetrieveConnectedPeripherals:(id)arg2;
- (void)centralManager:(id)arg1 didRetrievePeripherals:(id)arg2;
- (void)centralManagerDidUpdateState:(id)arg1;
- (id)centralRequestBlocks;
- (void)checkPartiallyPairedWithCompletion:(id /* block */)arg1;
- (void)checkPeripheralPaired:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)clearAvailableDevices;
- (void)clearConnectedDevices;
- (void)clearLoadedDevices;
- (void)clearMissingHearingAids;
- (void)connectToPeripheral:(id)arg1;
- (id)connectedDevices;
- (id)connectedSearchBlocks;
- (void)dealloc;
- (void)deviceDidFinishLoading:(id)arg1;
- (void)disconnectFromHearingAidWithDeviceUUID:(id)arg1;
- (void)disconnectFromPeripheral:(id)arg1;
- (void)forgetDevice:(id)arg1;
- (id)hearingAidForDeviceID:(id)arg1;
- (id)hearingAidForPeripheral:(id)arg1;
- (id)hearingAidsForPeripheral:(id)arg1;
- (id)hearingAidsForUUID:(id)arg1;
- (id)init;
- (bool)isBluetoothAvailable;
- (bool)isConnected;
- (bool)isConnecting;
- (bool)isPaired;
- (bool)isPartiallyConnected;
- (bool)isScanning;
- (id)loadedDevices;
- (void)loadedDevicesDidChange;
- (void)mergeDevice:(id)arg1 withDevice:(id)arg2;
- (void)pairedHearingAidsDidChange;
- (id)pairedHearingDevice;
- (void)pairingAgent:(id)arg1 peerDidCompletePairing:(id)arg2;
- (void)pairingAgent:(id)arg1 peerDidFailToCompletePairing:(id)arg2 error:(id)arg3;
- (void)pairingAgent:(id)arg1 peerDidUnpair:(id)arg2;
- (void)persistPairedHearingAids;
- (id)persistentDevices;
- (void)removeAvailableDevice:(id)arg1;
- (void)removeConnectedDevice:(id)arg1;
- (void)removeLoadedDevice:(id)arg1;
- (void)replaceDevice:(id)arg1 withDevice:(id)arg2;
- (bool)representsLocalDevices;
- (void)resetConnectionToPeripheral:(id)arg1;
- (void)searchForAvailableDevices;
- (void)searchForAvailableDevicesWithCompletion:(id /* block */)arg1;
- (void)searchForConnectedDevices;
- (void)sendRequestToCentralManager:(id /* block */)arg1;
- (void)setAvailablePeripherals:(id)arg1;
- (void)setAvailableSearchBlocks:(id)arg1;
- (void)setCentralRequestBlocks:(id)arg1;
- (void)setConnectedDevices:(id)arg1;
- (void)setConnectedSearchBlocks:(id)arg1;
- (void)setLoadedDevices:(id)arg1;
- (void)setPersistentDevices:(id)arg1;
- (void)setShouldActiveScan:(bool)arg1;
- (void)setUpdateDeviceBlocks:(id)arg1;
- (bool)shouldActiveScan;
- (bool)shouldRelinquishForPartialConnection;
- (void)stopSearching;
- (void)unpairPeripheralWithUUID:(id)arg1;
- (id)updateDeviceBlocks;
- (id)valueForProperty:(unsigned long long)arg1 forDeviceID:(id)arg2;

@end
