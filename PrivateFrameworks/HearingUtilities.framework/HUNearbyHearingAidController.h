
@interface HUNearbyHearingAidController : HUDeviceController {
    <HUNearbyHearingAidControllerDelegate> * _delegate;
    bool  _hasStarted;
    bool  _holdingMediaForConnection;
    bool  _holdingPhoneForConnection;
    unsigned long long  _idsMessagesCount;
    NSTimer * _idsMessagesTimer;
    AXRemoteHearingAidDevice * _localDevice;
    NSObject<OS_dispatch_queue> * _mediaQueue;
    bool  _processingHandoff;
    AXDispatchTimer * _relinquishConnectionTimer;
    AXDispatchTimer * _requestConnectionTimer;
    AXDispatchTimer * _sendConnectionToCompanionTimer;
    long long  _state;
}

@property (nonatomic) <HUNearbyHearingAidControllerDelegate> *delegate;
@property (nonatomic) bool hasStarted;
@property (nonatomic) bool holdingMediaForConnection;
@property (nonatomic) bool holdingPhoneForConnection;
@property (nonatomic) unsigned long long idsMessagesCount;
@property (nonatomic, retain) NSTimer *idsMessagesTimer;
@property (nonatomic, retain) AXRemoteHearingAidDevice *localDevice;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *mediaQueue;
@property (nonatomic) bool processingHandoff;
@property (nonatomic, retain) AXDispatchTimer *relinquishConnectionTimer;
@property (nonatomic, retain) AXDispatchTimer *requestConnectionTimer;
@property (nonatomic, retain) AXDispatchTimer *sendConnectionToCompanionTimer;
@property (nonatomic, readonly) bool shouldConnect;
@property (nonatomic, readonly) bool shouldDisconnect;
@property (nonatomic) long long state;

+ (id)sharedInstance;

- (void).cxx_destruct;
- (id)availableDevices;
- (void)callStatusDidChange:(id)arg1;
- (void)checkConnectionPeers:(id /* block */)arg1;
- (void)checkConnectionRelinquishedAfterTimeout;
- (void)checkConnectionRequestedAfterTimeout;
- (void)checkConnectionToHearingDevice:(id /* block */)arg1;
- (id)connectedPeer;
- (id)connectingPeer;
- (id)delegate;
- (id)descriptionForCurrentState;
- (id)descriptionForState:(long long)arg1;
- (id)device:(id)arg1 didReceiveMessage:(id)arg2;
- (void)disconnectFromPairedDevice;
- (void)getConnectedPeer:(id /* block */)arg1;
- (bool)hasStarted;
- (id)hearingAidForDeviceID:(id)arg1;
- (id)hearingDevice;
- (bool)holdingMediaForConnection;
- (bool)holdingPhoneForConnection;
- (unsigned long long)idsMessagesCount;
- (id)idsMessagesTimer;
- (id)init;
- (id)localDevice;
- (void)logAvailableDevicesWithTitle:(id)arg1;
- (void)logNewDevices:(id)arg1;
- (void)mediaPlaybackDidChange:(id)arg1;
- (id)mediaQueue;
- (void)mediaServerDied;
- (bool)peerHasConnectionToHearingDevice;
- (id)peerWithState:(long long)arg1;
- (void)processReadMessageFromPeerDevice:(id)arg1 value:(id)arg2;
- (void)processReadProperty:(id)arg1 fromPeerDevice:(id)arg2;
- (void)processStateMessageFromPeer:(id)arg1 state:(id)arg2 response:(id)arg3;
- (void)processWriteMessageWithValue:(id)arg1 response:(id)arg2;
- (bool)processingHandoff;
- (void)registerMediaNotifications;
- (void)relinquishConnection;
- (bool)relinquishConnectionForReason:(long long)arg1;
- (bool)relinquishConnectionForReason:(long long)arg1 toDevice:(id)arg2 sendHandoffMessage:(bool)arg3;
- (id)relinquishConnectionTimer;
- (bool)representsLocalDevices;
- (void)requestConnection;
- (void)requestConnectionForReason:(long long)arg1;
- (id)requestConnectionTimer;
- (void)requestHandoffForMedia;
- (void)routesDidChange:(id)arg1;
- (void)sendConnectionToCompanionIfPossible;
- (void)sendConnectionToCompanionIfPossible:(bool)arg1;
- (id)sendConnectionToCompanionTimer;
- (void)sendConnectionUpdateToPeers;
- (void)sendMessage:(id)arg1 toDevices:(id)arg2;
- (void)sendMessageToAllDevices:(id)arg1;
- (void)sendStateMessage:(id)arg1 toDevices:(id)arg2;
- (void)sendStateMessageToAllDevices:(id)arg1;
- (void)sendWrite:(id)arg1 toDevices:(id)arg2;
- (void)sendWriteToAllDevices:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setHasStarted:(bool)arg1;
- (void)setHoldingMediaForConnection:(bool)arg1;
- (void)setHoldingPhoneForConnection:(bool)arg1;
- (void)setIdsMessagesCount:(unsigned long long)arg1;
- (void)setIdsMessagesTimer:(id)arg1;
- (void)setLocalDevice:(id)arg1;
- (void)setMediaQueue:(id)arg1;
- (void)setProcessingHandoff:(bool)arg1;
- (void)setRelinquishConnectionTimer:(id)arg1;
- (void)setRequestConnectionTimer:(id)arg1;
- (void)setSendConnectionToCompanionTimer:(id)arg1;
- (void)setState:(long long)arg1;
- (bool)shouldConnect;
- (bool)shouldDisconnect;
- (bool)shouldRelinquishConnectionForReason:(long long)arg1;
- (void)shouldRequestAudioConnectionForCall:(bool)arg1 withCompletion:(id /* block */)arg2;
- (void)start;
- (long long)state;
- (void)stop;
- (void)systemStatusDidChange:(id)arg1;
- (id)timeStamp;
- (void)unregisterMediaNotifications;
- (void)updateForBluetoothStateChange;
- (void)updateProperty:(unsigned long long)arg1 forDeviceID:(id)arg2;
- (void)updateResponse:(id)arg1 withState:(long long)arg2;
- (void)updateState;
- (void)updateStateOnDeviceQueue;
- (void)validateResponse:(id)arg1;
- (void)writeValue:(id)arg1 forProperty:(unsigned long long)arg2 andDeviceID:(id)arg3;
- (void)writeValue:(id)arg1 forProperty:(unsigned long long)arg2 andDeviceID:(id)arg3 toDevices:(id)arg4;

@end
