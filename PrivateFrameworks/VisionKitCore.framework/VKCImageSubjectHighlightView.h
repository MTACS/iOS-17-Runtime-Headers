
@interface VKCImageSubjectHighlightView : VKCImageSubjectBaseView <UIDragInteractionDelegate, UIGestureRecognizerDelegate, _UIStickerPickerViewControllerDelegate> {
    bool  _analysisDelayTimerActive;
    NSDate * _calloutStartTime;
    struct CGImage { } * _colorMaskImage;
    CALayer * _colorMaskLayer;
    UIPanGestureRecognizer * _coyotePanGR;
    UIImageView * _currentLiftImageView;
    VKCSubjectLiftView * _currentLiftView;
    <VKCImageSubjectHighlightViewDelegate> * _delegate;
    UIDragInteraction * _dragInteraction;
    struct CGPoint { 
        double x; 
        double y; 
    }  _dragInteractionStartLocation;
    double  _dragInteractionStartTime;
    UISelectionFeedbackGenerator * _feedbackGenerator;
    bool  _glowLayerWasActiveOnLift;
    bool  _isHidingMenuController;
    bool  _isLiftingEmptyItemArray;
    bool  _isLivePhoto;
    bool  _isLivePhotoCheckCompleted;
    bool  _isSelectAllActive;
    UILongPressGestureRecognizer * _livePhotoPlayGR;
    NSDate * _livePhotoStartTime;
    bool  _shouldShowCalloutOnDragCancel;
    _UIStickerPickerViewController * _stickerPickerViewController;
    bool  _subjectAnalysisCompleteWhenTouchesBegan;
    unsigned long long  _subjectHighlightState;
    bool  _subjectInteractionInProgress;
    bool  _subjectViewUserInteractionDisabled;
    UITapGestureRecognizer * _tapGR;
    bool  _tapToSelectModeEnabled;
    <UITraitChangeRegistration> * _traitChangeRegistration;
    VKCRemoveBackgroundVideoPreviewResult * _videoPreview;
}

@property (nonatomic) bool analysisDelayTimerActive;
@property (nonatomic, retain) NSDate *calloutStartTime;
@property (nonatomic) struct CGImage { }*colorMaskImage;
@property (nonatomic, retain) CALayer *colorMaskLayer;
@property (nonatomic, retain) UIPanGestureRecognizer *coyotePanGR;
@property (nonatomic) UIImageView *currentLiftImageView;
@property (nonatomic) VKCSubjectLiftView *currentLiftView;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <VKCImageSubjectHighlightViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) UIDragInteraction *dragInteraction;
@property (nonatomic) struct CGPoint { double x1; double x2; } dragInteractionStartLocation;
@property (nonatomic) double dragInteractionStartTime;
@property (nonatomic, retain) UISelectionFeedbackGenerator *feedbackGenerator;
@property (nonatomic) bool glowLayerWasActiveOnLift;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isHidingMenuController;
@property (nonatomic) bool isLiftingEmptyItemArray;
@property (nonatomic) bool isLivePhoto;
@property (nonatomic) bool isLivePhotoCheckCompleted;
@property (nonatomic) bool isSelectAllActive;
@property (nonatomic, retain) UILongPressGestureRecognizer *livePhotoPlayGR;
@property (nonatomic, retain) NSDate *livePhotoStartTime;
@property (nonatomic) bool shouldShowCalloutOnDragCancel;
@property (nonatomic, retain) _UIStickerPickerViewController *stickerPickerViewController;
@property (nonatomic) bool subjectAnalysisCompleteWhenTouchesBegan;
@property (nonatomic, readonly) bool subjectHighlightActive;
@property (nonatomic) unsigned long long subjectHighlightState;
@property (nonatomic) bool subjectInteractionInProgress;
@property (nonatomic) bool subjectViewUserInteractionDisabled;
@property (readonly) Class superclass;
@property (nonatomic, retain) UITapGestureRecognizer *tapGR;
@property (nonatomic) bool tapToSelectModeEnabled;
@property (nonatomic, retain) <UITraitChangeRegistration> *traitChangeRegistration;
@property (nonatomic, retain) VKCRemoveBackgroundVideoPreviewResult *videoPreview;

+ (bool)visualLookUpYear3InvocationEnabled;

- (void).cxx_destruct;
- (void)_addSticker;
- (void)_addSticker:(id)arg1;
- (void)_configureGlowWithShowBurst:(bool)arg1 burstPoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)_define:(id)arg1;
- (void)_dismissCard;
- (void)_dragInteractionDidCancelLiftWithoutDragging:(id)arg1;
- (void)_presentStickerPickerViewController;
- (void)_selectAllSubjects:(id)arg1;
- (void)_share;
- (void)_share:(id)arg1;
- (void)_shareHeics:(id)arg1;
- (void)_tempGenerateStickerFromLivePhotoIfNecessaryWithProgress:(id /* block */)arg1;
- (bool)analysisDelayTimerActive;
- (id)animationWithDuration:(double)arg1 fromValue:(id)arg2 toValue:(id)arg3 key:(id)arg4;
- (void)beginImageSubjectAnalysisWithDelayIfNecessary;
- (void)buildMenuWithBuilder:(id)arg1;
- (id)calloutStartTime;
- (bool)canBecomeFirstResponder;
- (bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (struct CGImage { }*)colorMaskImage;
- (id)colorMaskLayer;
- (void)copy:(id)arg1;
- (id)coyotePanGR;
- (id)createItemProvider;
- (void)createStickerRepresentationsAtIndexSet:(id)arg1 type:(unsigned long long)arg2 stickerIDs:(id)arg3 progress:(id /* block */)arg4 completion:(id /* block */)arg5;
- (id)currentLiftImageView;
- (id)currentLiftView;
- (void)dealloc;
- (id)delegate;
- (void)didMoveToWindow;
- (void)didTap:(id)arg1;
- (id)dragInteraction;
- (void)dragInteraction:(id)arg1 item:(id)arg2 willAnimateCancelWithAnimator:(id)arg3;
- (id)dragInteraction:(id)arg1 itemsForBeginningSession:(id)arg2;
- (bool)dragInteraction:(id)arg1 prefersFullSizePreviewsForSession:(id)arg2;
- (id)dragInteraction:(id)arg1 previewForCancellingItem:(id)arg2 withDefault:(id)arg3;
- (id)dragInteraction:(id)arg1 previewForLiftingItem:(id)arg2 session:(id)arg3;
- (void)dragInteraction:(id)arg1 session:(id)arg2 didEndWithOperation:(unsigned long long)arg3;
- (void)dragInteraction:(id)arg1 session:(id)arg2 willEndWithOperation:(unsigned long long)arg3;
- (bool)dragInteraction:(id)arg1 sessionAllowsMoveOperation:(id)arg2;
- (void)dragInteraction:(id)arg1 sessionWillBegin:(id)arg2;
- (void)dragInteraction:(id)arg1 willAnimateLiftWithAnimator:(id)arg2 session:(id)arg3;
- (struct CGPoint { double x1; double x2; })dragInteractionStartLocation;
- (double)dragInteractionStartTime;
- (id)feedbackGenerator;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (bool)glowLayerWasActiveOnLift;
- (void)handleCancelForUndraggedLiftForInteraction:(id)arg1;
- (void)hideCalloutMenuIfNecessary;
- (void)hideCalloutMenuIfNecessaryWithClearSelectAll:(bool)arg1;
- (void)highlightSubjectAtIndexSet:(id)arg1 showCallout:(bool)arg2 showBurst:(bool)arg3 burstPoint:(struct CGPoint { double x1; double x2; })arg4 animated:(bool)arg5;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isHidingMenuController;
- (bool)isLiftingEmptyItemArray;
- (bool)isLivePhoto;
- (bool)isLivePhotoCheckCompleted;
- (bool)isSelectAllActive;
- (void)livePhotoCoyotePan:(id)arg1;
- (void)livePhotoLongPress:(id)arg1;
- (id)livePhotoPlayGR;
- (id)livePhotoStartTime;
- (void)menuControllerWillHide:(id)arg1;
- (void)selectAndShowCalloutForTapToSelectModeAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)setAnalysisDelayTimerActive:(bool)arg1;
- (void)setCalloutStartTime:(id)arg1;
- (void)setColorMaskImage:(struct CGImage { }*)arg1;
- (void)setColorMaskLayer:(id)arg1;
- (void)setCoyotePanGR:(id)arg1;
- (void)setCurrentLiftImageView:(id)arg1;
- (void)setCurrentLiftView:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDragInteraction:(id)arg1;
- (void)setDragInteractionStartLocation:(struct CGPoint { double x1; double x2; })arg1;
- (void)setDragInteractionStartTime:(double)arg1;
- (void)setFeedbackGenerator:(id)arg1;
- (void)setGlowLayerActive:(bool)arg1;
- (void)setGlowLayerWasActiveOnLift:(bool)arg1;
- (void)setHidden:(bool)arg1;
- (void)setIsHidingMenuController:(bool)arg1;
- (void)setIsLiftingEmptyItemArray:(bool)arg1;
- (void)setIsLivePhoto:(bool)arg1;
- (void)setIsLivePhotoCheckCompleted:(bool)arg1;
- (void)setIsSelectAllActive:(bool)arg1;
- (void)setLivePhotoPlayGR:(id)arg1;
- (void)setLivePhotoStartTime:(id)arg1;
- (void)setNormalizedVisibleRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setRecognitionResult:(id)arg1;
- (void)setShouldShowCalloutOnDragCancel:(bool)arg1;
- (void)setStickerPickerViewController:(id)arg1;
- (void)setSubjectAnalysisCompleteWhenTouchesBegan:(bool)arg1;
- (void)setSubjectContext:(id)arg1;
- (void)setSubjectHighlightState:(unsigned long long)arg1;
- (void)setSubjectHighlightState:(unsigned long long)arg1 animated:(bool)arg2;
- (void)setSubjectInteractionInProgress:(bool)arg1;
- (void)setSubjectViewUserInteractionDisabled:(bool)arg1;
- (void)setTapGR:(id)arg1;
- (void)setTapToSelectModeEnabled:(bool)arg1;
- (void)setTraitChangeRegistration:(id)arg1;
- (void)setVideoPreview:(id)arg1;
- (bool)shouldShowCalloutOnDragCancel;
- (void)showCalloutMenuAtLocation:(struct CGPoint { double x1; double x2; })arg1 checkDelegate:(bool)arg2 showPulse:(bool)arg3;
- (void)showSharingPaneForURL:(id)arg1 sourceRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (id)springAnimationWithFromValue:(id)arg1 toValue:(id)arg2 key:(id)arg3;
- (id)stickerPickerViewController;
- (void)stickerPickerViewControllerDidDismiss;
- (void)stickerPickerViewControllerDidLoad;
- (id)stringForHighlightState:(unsigned long long)arg1;
- (bool)subjectAnalysisCompleteWhenTouchesBegan;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })subjectBoundsClippedToVisibleRectWithShouldInsetForCallout:(bool)arg1;
- (bool)subjectHighlightActive;
- (unsigned long long)subjectHighlightState;
- (bool)subjectInteractionInProgress;
- (bool)subjectViewUserInteractionDisabled;
- (id)tapGR;
- (bool)tapToSelectModeEnabled;
- (id)targetedPreviewForCurrentSubject;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (id)traitChangeRegistration;
- (void)traitStyleDidChange;
- (void)updateSubjectInteractionInProgressIfNecessary;
- (id)videoPreview;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })videoPreviewNormalizedCropRect;
- (id)videoPreviewSubjectMatteAtCompositionTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (id)videoPreviewSubjectMatteForImage:(id)arg1 atCompositionTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })videoPreviewTimeRange;

@end
