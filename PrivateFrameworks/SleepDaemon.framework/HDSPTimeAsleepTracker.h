
@interface HDSPTimeAsleepTracker : NSObject <HDSPDevicePowerObserver, HDSPDiagnosticsProvider, HDSPNotificationObserver, HDSPSleepEventHandler, HDSPSleepEventProvider, HDSPSleepModeObserver, HDSPSleepScheduleModelObserver, HDSPSleepScheduleStateObserver, HDSPSleepTracker, HDSPTimeAsleepTrackerStateMachineDelegate, HDSPTimeAsleepTrackerStateMachineInfoProvider, HDSPTimeChangeObserver, HDSPWakeDetector, HDSPWatchOnWristObserver> {
    NSArray * _appLaunchRegistrations;
    <HDSPSleepTrackerDelegate> * _delegate;
    HDSPEnvironment * _environment;
    bool  _isDetecting;
    bool  _isPendingDetectionEnd;
    <HKSPMutexProvider> * _mutexProvider;
    <HDSPSleepEventDelegate> * _sleepEventDelegate;
    <HDSPTimeAsleepTracker> * _sleepTracker;
    id /* block */  _sleepTrackerProvider;
    HDSPTimeAsleepTrackerStateMachine * _stateMachine;
    <HDSPWakeDetectorDelegate> * _wakeDetectorDelegate;
}

@property (nonatomic, readonly) NSArray *appLaunchRegistrations;
@property (nonatomic, readonly) <NAScheduler> *callbackScheduler;
@property (nonatomic, readonly) NSDate *currentDate;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <HDSPSleepTrackerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) HDSPEnvironment *environment;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool inUnscheduledSleepMode;
@property (nonatomic, readonly) bool inWakeDetectionWindow;
@property (nonatomic, readonly) bool isCharging;
@property (nonatomic, readonly) bool isDetecting;
@property (nonatomic, readonly) bool isPendingDetectionEnd;
@property (nonatomic, readonly) bool isWristDetectEnabled;
@property (nonatomic, readonly) <HKSPMutexProvider> *mutexProvider;
@property (nonatomic, readonly, copy) NSString *providerIdentifier;
@property (nonatomic) <HDSPSleepEventDelegate> *sleepEventDelegate;
@property (nonatomic, readonly) HKSPSleepScheduleModel *sleepScheduleModel;
@property (nonatomic, readonly) unsigned long long sleepScheduleState;
@property (nonatomic, readonly) <HDSPTimeAsleepTracker> *sleepTracker;
@property (nonatomic, readonly, copy) id /* block */ sleepTrackerProvider;
@property (nonatomic, readonly) HDSPTimeAsleepTrackerStateMachine *stateMachine;
@property (readonly) Class superclass;
@property (nonatomic, readonly) unsigned long long type;
@property (nonatomic) <HDSPWakeDetectorDelegate> *wakeDetectorDelegate;

- (void).cxx_destruct;
- (void)_assertLock:(id /* block */)arg1;
- (id)_computeInBedIntervals:(id)arg1;
- (id)_computeSleepIntervals:(id)arg1;
- (id)_createSleepSessionWithSleepAnalysis:(id)arg1 endReason:(unsigned long long)arg2;
- (void)_handleActivityDetectedOnDate:(id)arg1;
- (void)_handleAppLaunched:(id)arg1 onDate:(id)arg2;
- (void)_handleInternalSleepSessionEndRequest;
- (void)_handleSleepSessionAnalysisResults:(id)arg1 endReason:(unsigned long long)arg2;
- (void)_withLock:(id /* block */)arg1;
- (id)appLaunchRegistrations;
- (id)currentDate;
- (id)currentState;
- (id)delegate;
- (void)detectedOffWristOnDate:(id)arg1;
- (void)detectedOnWristOnDate:(id)arg1;
- (void)deviceChangedChargingState:(bool)arg1;
- (id)diagnosticDescription;
- (id)diagnosticInfo;
- (void)endSleepTrackingSessionWithReason:(unsigned long long)arg1;
- (id)environment;
- (void)environmentDidBecomeReady:(id)arg1;
- (void)environmentWillBecomeReady:(id)arg1;
- (id)eventIdentifiers;
- (bool)inUnscheduledSleepMode;
- (bool)inWakeDetectionWindow;
- (id)initWithEnvironment:(id)arg1;
- (id)initWithEnvironment:(id)arg1 sleepTrackerProvider:(id /* block */)arg2;
- (bool)isCharging;
- (bool)isDetecting;
- (bool)isPendingDetectionEnd;
- (bool)isWristDetectEnabled;
- (id)mutexProvider;
- (id)notificationListener:(id)arg1 didReceiveNotificationWithName:(id)arg2;
- (void)notifyForActivityDetectedOnDate:(id)arg1;
- (void)previousSessionFinished;
- (id)processedSessionForSession:(id)arg1;
- (id)providerIdentifier;
- (void)scheduleStateExpiration;
- (void)setDelegate:(id)arg1;
- (void)setSleepEventDelegate:(id)arg1;
- (void)setWakeDetectorDelegate:(id)arg1;
- (void)significantTimeChangeDetected:(id)arg1;
- (id)sleepEventDelegate;
- (void)sleepEventIsDue:(id)arg1;
- (void)sleepModeDidChange:(long long)arg1 previousMode:(long long)arg2 reason:(unsigned long long)arg3;
- (id)sleepScheduleModel;
- (void)sleepScheduleModelManager:(id)arg1 didUpdateSleepScheduleModel:(id)arg2;
- (unsigned long long)sleepScheduleState;
- (void)sleepScheduleStateDidChange:(unsigned long long)arg1 previousState:(unsigned long long)arg2 reason:(unsigned long long)arg3;
- (id)sleepTracker;
- (id /* block */)sleepTrackerProvider;
- (void)startActivityDetection;
- (void)startAppLaunchDetection;
- (void)startDetecting;
- (void)startSleepTrackingSessionWithReason:(unsigned long long)arg1;
- (id)stateMachine;
- (void)stopActivityDetection;
- (void)stopAppLaunchDetection;
- (void)stopDetecting;
- (id)trackingWindowAfterDate:(id)arg1;
- (unsigned long long)type;
- (void)unscheduleStateExpiration;
- (id)upcomingEventsDueAfterDate:(id)arg1;
- (void)updateState;
- (id)wakeDetectorDelegate;
- (void)wristDetectEnabledDidChange;

@end
