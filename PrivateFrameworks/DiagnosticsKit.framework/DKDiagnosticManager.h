
@interface DKDiagnosticManager : NSObject <DKAccessoryResponder, DKAssetResponder, DKBrightnessResponder, DKPluginReloadResponder, DKProgressResponder, DKRequestViewControllerDelegate, DKUserAlertResponder, DKVolumeHUDResponder> {
    <DKAccessoryResponder> * _accessoryResponder;
    DKDiagnosticAllowList * _allowList;
    <DKAssetResponder> * _assetResponder;
    <DKBrightnessResponder> * _brightnessResponder;
    NSString * _bundleIdentifier;
    unsigned long long  _connectionRoute;
    NSObject<OS_dispatch_queue> * _diagnosticListQueue;
    NSObject<OS_dispatch_queue> * _diagnosticsManagerQueue;
    DKExtensionDiscovery * _discovery;
    bool  _pluginReloadRequested;
    <DKProgressResponder> * _progressResponder;
    DKDiagnosticRegistry * _registry;
    <DKUserAlertResponder> * _userAlertResponder;
    <DKViewControllerDelegate> * _viewControllerDelegate;
    <DKVolumeHUDResponder> * _volumeHUDResponder;
}

@property (nonatomic) <DKAccessoryResponder> *accessoryResponder;
@property (nonatomic) DKDiagnosticAllowList *allowList;
@property (nonatomic) <DKAssetResponder> *assetResponder;
@property (nonatomic) <DKBrightnessResponder> *brightnessResponder;
@property (nonatomic, retain) NSString *bundleIdentifier;
@property (nonatomic) unsigned long long connectionRoute;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *diagnosticListQueue;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *diagnosticsManagerQueue;
@property (nonatomic, retain) DKExtensionDiscovery *discovery;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool pluginReloadRequested;
@property (nonatomic) <DKProgressResponder> *progressResponder;
@property (nonatomic, retain) DKDiagnosticRegistry *registry;
@property (readonly) Class superclass;
@property (nonatomic) <DKUserAlertResponder> *userAlertResponder;
@property (nonatomic) <DKViewControllerDelegate> *viewControllerDelegate;
@property (nonatomic) <DKVolumeHUDResponder> *volumeHUDResponder;

- (void).cxx_destruct;
- (bool)_checkPrerequisitesForDiagnostic:(id)arg1 parameters:(id)arg2 error:(id*)arg3;
- (bool)_freeSpaceAvailable:(id)arg1;
- (bool)_isDeviceLocked;
- (void)_reloadUpdatedPlugins;
- (id)accessoryResponder;
- (id)adapterForIdentifier:(id)arg1;
- (id)allowList;
- (id)assetResponder;
- (id)attributesForIdentifier:(id)arg1;
- (void)beginDiagnosticWithIdentifier:(id)arg1 parameters:(id)arg2 completion:(id /* block */)arg3;
- (id)brightnessResponder;
- (id)bundleIdentifier;
- (void)cancelAllDiagnostics;
- (unsigned long long)connectionRoute;
- (id)diagnosticListQueue;
- (id)diagnosticsManagerQueue;
- (void)diagnosticsWithCompletion:(id /* block */)arg1;
- (id)discovery;
- (void)displayAlertWithHeader:(id)arg1 message:(id)arg2 buttonStrings:(id)arg3 completion:(id /* block */)arg4;
- (void)enableVolumeHUD:(bool)arg1;
- (void)getAsset:(id)arg1 completion:(id /* block */)arg2;
- (id)init;
- (id)initWithBundleIdentifier:(id)arg1;
- (id)initWithBundleIdentifier:(id)arg1 connectionRoute:(unsigned long long)arg2;
- (bool)pluginReloadRequested;
- (id)progressResponder;
- (id)registry;
- (void)request:(id)arg1 dismissViewController:(id)arg2 completion:(id /* block */)arg3;
- (void)request:(id)arg1 presentViewController:(id)arg2 completion:(id /* block */)arg3;
- (void)requestPluginReloadOnFinishWithCompletion:(id /* block */)arg1;
- (void)setAccessoryResponder:(id)arg1;
- (void)setAllowList:(id)arg1;
- (void)setAssetResponder:(id)arg1;
- (void)setBrightnessResponder:(id)arg1;
- (void)setBundleIdentifier:(id)arg1;
- (void)setConnectionRoute:(unsigned long long)arg1;
- (void)setDiagnosticListQueue:(id)arg1;
- (void)setDiagnosticsManagerQueue:(id)arg1;
- (void)setDiscovery:(id)arg1;
- (void)setPluginReloadRequested:(bool)arg1;
- (void)setProgressResponder:(id)arg1;
- (void)setRegistry:(id)arg1;
- (void)setScreenToBrightness:(float)arg1 animate:(bool)arg2;
- (void)setUserAlertResponder:(id)arg1;
- (void)setViewControllerDelegate:(id)arg1;
- (void)setVolumeHUDResponder:(id)arg1;
- (void)unpairSessionAccessoryOnTestCompletion;
- (void)updateProgress:(id)arg1 forTest:(id)arg2;
- (void)uploadAssets:(id)arg1 completion:(id /* block */)arg2;
- (id)userAlertResponder;
- (id)viewControllerDelegate;
- (id)volumeHUDResponder;

@end
