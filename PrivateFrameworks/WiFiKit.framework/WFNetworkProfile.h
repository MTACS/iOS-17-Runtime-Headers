
@interface WFNetworkProfile : NSObject <NSMutableCopying> {
    bool  _DNSHeuristicsFiltered;
    NSString * _HS20AccountName;
    NSString * _HS20Badge;
    bool  _HS20Network;
    bool  _HS20NetworkProvisioned;
    NSString * _HS20OperatorName;
    struct __SecIdentity { } * _TLSIdentity;
    NSDate * _addedDate;
    bool  _addedFromWiFiPasswordSharing;
    bool  _adhoc;
    bool  _autoJoinEnabled;
    bool  _autoLoginEnabled;
    NSString * _bssid;
    bool  _canExposeIMSI;
    bool  _captive;
    bool  _carPlay;
    long long  _carPlayType;
    NSString * _carPlayUUID;
    bool  _carrierBased;
    NSArray * _certificateChain;
    NSDictionary * _enterpriseProfile;
    bool  _fetchedPassword;
    bool  _hidden;
    NSString * _hotspotDeviceIdentifier;
    bool  _instantHotspotJoin;
    bool  _isInSaveDataMode;
    bool  _isPrivacyProxyEnabled;
    NSDate * _lastAutoJoinDate;
    bool  _managed;
    NSDate * _networkQualityDate;
    double  _networkQualityResponsiveness;
    unsigned long long  _originator;
    NSString * _originatorBundleIdentifier;
    NSString * _originatorName;
    NSString * _password;
    bool  _personalHotspot;
    NSString * _policyUUID;
    NSString * _previousPassword;
    bool  _profileBased;
    NSString * _randomMACAddress;
    bool  _randomMACAddressEnabled;
    bool  _requiresPassword;
    NSDictionary * _scanAttributes;
    long long  _securityMode;
    long long  _securityModeExt;
    NSString * _ssid;
    NSString * _username;
}

@property (getter=isDNSHeuristicsFiltered, nonatomic) bool DNSHeuristicsFiltered;
@property (nonatomic, retain) NSString *HS20AccountName;
@property (nonatomic, retain) NSString *HS20Badge;
@property (getter=isHS20Network, nonatomic) bool HS20Network;
@property (getter=isHS20NetworkProvisioned, nonatomic) bool HS20NetworkProvisioned;
@property (nonatomic, copy) NSString *HS20OperatorName;
@property (nonatomic) struct __SecIdentity { }*TLSIdentity;
@property (nonatomic, readonly) NSDate *addedDate;
@property (getter=wasAddedFromWiFiPasswordSharing, nonatomic) bool addedFromWiFiPasswordSharing;
@property (getter=isAdhoc, nonatomic) bool adhoc;
@property (getter=isAutoJoinEnabled, nonatomic) bool autoJoinEnabled;
@property (getter=isAutoLoginEnabled, nonatomic, readonly) bool autoLoginEnabled;
@property (nonatomic, retain) NSString *bssid;
@property (nonatomic) bool canExposeIMSI;
@property (getter=isCaptive, nonatomic) bool captive;
@property (getter=isCarPlay, nonatomic) bool carPlay;
@property (nonatomic) long long carPlayType;
@property (nonatomic, copy) NSString *carPlayUUID;
@property (getter=isCarrierBased, nonatomic) bool carrierBased;
@property (nonatomic, readonly) NSArray *certificateChain;
@property (nonatomic, retain) NSDictionary *enterpriseProfile;
@property (nonatomic) bool fetchedPassword;
@property (getter=isHidden, nonatomic) bool hidden;
@property (nonatomic, retain) NSString *hotspotDeviceIdentifier;
@property (getter=isInstantHotspotJoin, nonatomic) bool instantHotspotJoin;
@property (getter=isInSaveDataMode, nonatomic, readonly) bool isInSaveDataMode;
@property (getter=isPrivacyProxyEnabled, nonatomic, readonly) bool isPrivacyProxyEnabled;
@property (nonatomic, readonly) NSDate *lastAutoJoinDate;
@property (getter=isManaged, nonatomic, readonly) bool managed;
@property (getter=networkQualityDate, nonatomic, readonly, copy) NSDate *networkQualityDate;
@property (getter=networkQualityResponsiveness, nonatomic, readonly) double networkQualityResponsiveness;
@property (nonatomic, readonly) unsigned long long originator;
@property (nonatomic, copy) NSString *originatorBundleIdentifier;
@property (nonatomic, copy) NSString *originatorName;
@property (nonatomic, readonly, copy) NSString *password;
@property (getter=isPersonalHotspot, nonatomic) bool personalHotspot;
@property (nonatomic, copy) NSString *policyUUID;
@property (nonatomic, readonly) NSString *previousPassword;
@property (getter=isProfileBased, nonatomic) bool profileBased;
@property (nonatomic, copy) NSString *randomMACAddress;
@property (getter=isRandomMACAddressEnabled, nonatomic) bool randomMACAddressEnabled;
@property (nonatomic) bool requiresPassword;
@property (nonatomic, readonly) bool requiresUsernameAndPassword;
@property (nonatomic, retain) NSDictionary *scanAttributes;
@property (nonatomic) long long securityMode;
@property (nonatomic) long long securityModeExt;
@property (nonatomic, retain) NSString *ssid;
@property (nonatomic, readonly) bool userProvidedPassword;
@property (nonatomic, readonly, copy) NSString *username;

+ (bool)networkProfileRepresentSameNetwork:(id)arg1 toNetworkProfile:(id)arg2;

- (void).cxx_destruct;
- (id)HS20AccountName;
- (id)HS20Badge;
- (id)HS20OperatorName;
- (struct __SecIdentity { }*)TLSIdentity;
- (bool)TLSProfileCanJoin;
- (id)addedDate;
- (id)bssid;
- (bool)canAttemptJoin;
- (bool)canExposeIMSI;
- (long long)carPlayType;
- (id)carPlayUUID;
- (id)certificateChain;
- (void)dealloc;
- (id)description;
- (id)enterpriseProfile;
- (bool)fetchedPassword;
- (unsigned long long)hash;
- (id)hotspotDeviceIdentifier;
- (id)initWithCoreWiFiProfile:(id)arg1;
- (id)initWithNetwork:(id)arg1;
- (id)initWithNetworkRef:(struct __WiFiNetwork { }*)arg1;
- (bool)isAdhoc;
- (bool)isAutoJoinEnabled;
- (bool)isAutoLoginEnabled;
- (bool)isCaptive;
- (bool)isCarPlay;
- (bool)isCarrierBased;
- (bool)isDNSHeuristicsFiltered;
- (bool)isEnterprise;
- (bool)isEqual:(id)arg1;
- (bool)isEqualToNetwork:(id)arg1;
- (bool)isHS20Network;
- (bool)isHS20NetworkProvisioned;
- (bool)isHidden;
- (bool)isInSaveDataMode;
- (bool)isInstantHotspotJoin;
- (bool)isManaged;
- (bool)isPersonalHotspot;
- (bool)isPrivacyProxyEnabled;
- (bool)isProfileBased;
- (bool)isRandomMACAddressEnabled;
- (id)lastAutoJoinDate;
- (id)mutableCopyWithZone:(struct _NSZone { }*)arg1;
- (id)networkAttributes;
- (id)networkQualityDate;
- (double)networkQualityResponsiveness;
- (unsigned long long)originator;
- (id)originatorBundleIdentifier;
- (id)originatorName;
- (id)password;
- (id)policyUUID;
- (id)previousPassword;
- (bool)profileContainsCarrierEAPType:(id)arg1;
- (bool)profileContainsEAPAKA:(id)arg1;
- (bool)profileContainsEAPSIM:(id)arg1;
- (id)randomMACAddress;
- (bool)requiresPassword;
- (bool)requiresTLSIdentityOnly;
- (bool)requiresUsernameAndPassword;
- (id)scanAttributes;
- (long long)securityMode;
- (long long)securityModeExt;
- (void)setAddedFromWiFiPasswordSharing:(bool)arg1;
- (void)setAdhoc:(bool)arg1;
- (void)setAutoJoinEnabled:(bool)arg1;
- (void)setBssid:(id)arg1;
- (void)setCanExposeIMSI:(bool)arg1;
- (void)setCaptive:(bool)arg1;
- (void)setCarPlay:(bool)arg1;
- (void)setCarPlayType:(long long)arg1;
- (void)setCarPlayUUID:(id)arg1;
- (void)setCarrierBased:(bool)arg1;
- (void)setDNSHeuristicsFiltered:(bool)arg1;
- (void)setEnterpriseProfile:(id)arg1;
- (void)setFetchedPassword:(bool)arg1;
- (void)setHS20AccountName:(id)arg1;
- (void)setHS20Badge:(id)arg1;
- (void)setHS20Network:(bool)arg1;
- (void)setHS20NetworkProvisioned:(bool)arg1;
- (void)setHS20OperatorName:(id)arg1;
- (void)setHidden:(bool)arg1;
- (void)setHotspotDeviceIdentifier:(id)arg1;
- (void)setInstantHotspotJoin:(bool)arg1;
- (void)setOriginatorBundleIdentifier:(id)arg1;
- (void)setOriginatorName:(id)arg1;
- (void)setPersonalHotspot:(bool)arg1;
- (void)setPolicyUUID:(id)arg1;
- (void)setProfileBased:(bool)arg1;
- (void)setRandomMACAddress:(id)arg1;
- (void)setRandomMACAddressEnabled:(bool)arg1;
- (void)setRequiresPassword:(bool)arg1;
- (void)setScanAttributes:(id)arg1;
- (void)setSecurityMode:(long long)arg1;
- (void)setSecurityModeExt:(long long)arg1;
- (void)setSsid:(id)arg1;
- (void)setTLSIdentity:(struct __SecIdentity { }*)arg1;
- (bool)shouldBeRemovedIfApplicationIsNoLongerInstalled;
- (id)ssid;
- (bool)userProvidedPassword;
- (id)username;
- (bool)wasAddedFromWiFiPasswordSharing;

@end
