
@interface AVCaptureVisionDataOutput : AVCaptureOutput <AVCaptureDataOutputDelegateOverride> {
    AVCaptureVisionDataOutputInternal * _internal;
}

@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) <AVCaptureVisionDataOutputDelegate> *delegate;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *delegateCallbackQueue;
@property (nonatomic, readonly) id delegateOverride;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *delegateOverrideCallbackQueue;
@property (readonly, copy) NSString *description;
@property (getter=isDynamicThresholdingEnabled, nonatomic) bool dynamicThresholdingEnabled;
@property (getter=isDynamicThresholdingSupported, nonatomic, readonly) bool dynamicThresholdingSupported;
@property (getter=isFeatureBinningEnabled, nonatomic) bool featureBinningEnabled;
@property (nonatomic) unsigned long long featureMatchingDescriptorSize;
@property (getter=isFeatureMatchingEnabled, nonatomic) bool featureMatchingEnabled;
@property (getter=isFeatureMatchingSupported, nonatomic, readonly) bool featureMatchingSupported;
@property (getter=isFeatureOrientationAssignmentEnabled, nonatomic) bool featureOrientationAssignmentEnabled;
@property (nonatomic) float gaussianPyramidBaseOctaveDownscalingFactor;
@property (nonatomic) unsigned long long gaussianPyramidOctavesCount;
@property (nonatomic) unsigned long long hammingDistanceThreshold;
@property (getter=isHammingDistanceThresholdSupported, nonatomic, readonly) bool hammingDistanceThresholdSupported;
@property (readonly) unsigned long long hash;
@property (nonatomic) unsigned long long keypointDetectionFlowType;
@property (nonatomic, retain) NSData *laccConfigAndMetadata;
@property (getter=isLACCConfigAndMetadataSupported, nonatomic, readonly) bool laccConfigAndMetadataSupported;
@property (nonatomic) struct { long long x1; int x2; unsigned int x3; long long x4; } maxBurstDuration;
@property (nonatomic) unsigned long long maxKeypointsCount;
@property (nonatomic) struct { long long x1; int x2; unsigned int x3; long long x4; } minBurstFrameDuration;
@property (nonatomic) struct { long long x1; int x2; unsigned int x3; long long x4; } minFrameDuration;
@property (nonatomic) float orientationDistanceThreshold;
@property (getter=isOrientationDistanceThresholdSupported, nonatomic, readonly) bool orientationDistanceThresholdSupported;
@property (nonatomic) float sigmaDistanceThreshold;
@property (getter=isSigmaDistanceThresholdSupported, nonatomic, readonly) bool sigmaDistanceThresholdSupported;
@property (nonatomic) float squareDistanceDisparityFraction;
@property (getter=isSquareDistanceDisparityFractionSupported, nonatomic, readonly) bool squareDistanceDisparityFractionSupported;
@property (nonatomic) unsigned long long subPixelThreshold;
@property (getter=isSubPixelThresholdSupported, nonatomic, readonly) bool subPixelThresholdSupported;
@property (readonly) Class superclass;

+ (void)initialize;
+ (id)new;

- (void)_handleLocalQueueMessage:(struct FigLocalQueueMessage { int x1; union { struct { struct opaqueCMSampleBuffer {} *x_1_2_1; } x_2_1_1; struct { long long x_2_2_1; struct opaqueCMFormatDescription {} *x_2_2_2; } x_2_1_2; } x2; })arg1;
- (void)_handleNotification:(id)arg1 payload:(id)arg2;
- (void)_handleRemoteQueueOperation:(struct FigRemoteOperation { int x1; int x2; unsigned long long x3; struct __CFString {} *x4; union { struct { struct __CFDictionary {} *x_1_2_1; struct __CFDictionary {} *x_1_2_2; } x_5_1_1; struct { void *x_2_2_1; struct __IOSurface {} *x_2_2_2; struct __IOSurface {} *x_2_2_3; } x_5_1_2; struct { struct opaqueCMSampleBuffer {} *x_3_2_1; unsigned long long x_3_2_2; struct __CFArray {} *x_3_2_3; } x_5_1_3; struct { struct opaqueCMFormatDescription {} *x_4_2_1; } x_5_1_4; struct { long long x_5_2_1; struct opaqueCMFormatDescription {} *x_5_2_2; } x_5_1_5; } x5; }*)arg1;
- (void)_initializeClientVisiblePropertiesForSourceDevice:(id)arg1;
- (bool)_isPropertySupported:(id)arg1;
- (void)_processSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1;
- (void)_updateLocalQueue:(struct localQueueOpaque { }*)arg1;
- (void)_updateRemoteQueue:(struct remoteQueueReceiverOpaque { }*)arg1;
- (id)addConnection:(id)arg1 error:(id*)arg2;
- (bool)appliesMirroringWithPhysicalFlipForConnection:(id)arg1;
- (bool)appliesOrientationWithPhysicalRotationForConnection:(id)arg1;
- (bool)areRuntimeUpdatesSupported;
- (void)attachSafelyToFigCaptureSession:(struct OpaqueFigCaptureSession { }*)arg1;
- (bool)canAddConnection:(id)arg1 failureReason:(id*)arg2;
- (id)connectionMediaTypes;
- (void)dealloc;
- (id)delegate;
- (id)delegateCallbackQueue;
- (id)delegateOverride;
- (id)delegateOverrideCallbackQueue;
- (void)detachSafelyFromFigCaptureSession:(struct OpaqueFigCaptureSession { }*)arg1;
- (unsigned long long)featureMatchingDescriptorSize;
- (float)gaussianPyramidBaseOctaveDownscalingFactor;
- (unsigned long long)gaussianPyramidOctavesCount;
- (unsigned long long)hammingDistanceThreshold;
- (void)handleChangedActiveFormat:(id)arg1 forDevice:(id)arg2;
- (id)init;
- (bool)isDynamicThresholdingEnabled;
- (bool)isDynamicThresholdingSupported;
- (bool)isFeatureBinningEnabled;
- (bool)isFeatureMatchingEnabled;
- (bool)isFeatureMatchingSupported;
- (bool)isFeatureOrientationAssignmentEnabled;
- (bool)isHammingDistanceThresholdSupported;
- (bool)isKeypointDetectionFlowTypeSupported:(unsigned long long)arg1;
- (bool)isLACCConfigAndMetadataSupported;
- (bool)isOrientationDistanceThresholdSupported;
- (bool)isSigmaDistanceThresholdSupported;
- (bool)isSquareDistanceDisparityFractionSupported;
- (bool)isSubPixelThresholdSupported;
- (unsigned long long)keypointDetectionFlowType;
- (float)keypointDetectionThreshold;
- (id)laccConfigAndMetadata;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })maxBurstDuration;
- (unsigned long long)maxKeypointsCount;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })minBurstFrameDuration;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })minFrameDuration;
- (float)orientationDistanceThreshold;
- (void)removeConnection:(id)arg1;
- (void)setDelegate:(id)arg1 callbackQueue:(id)arg2;
- (void)setDelegateOverride:(id)arg1 delegateOverrideCallbackQueue:(id)arg2;
- (void)setDynamicThresholdingEnabled:(bool)arg1;
- (void)setFeatureBinningEnabled:(bool)arg1;
- (void)setFeatureMatchingDescriptorSize:(unsigned long long)arg1;
- (void)setFeatureMatchingEnabled:(bool)arg1;
- (void)setFeatureOrientationAssignmentEnabled:(bool)arg1;
- (void)setGaussianPyramidBaseOctaveDownscalingFactor:(float)arg1;
- (void)setGaussianPyramidOctavesCount:(unsigned long long)arg1;
- (void)setHammingDistanceThreshold:(unsigned long long)arg1;
- (void)setKeypointDetectionFlowType:(unsigned long long)arg1;
- (void)setKeypointDetectionThreshold:(float)arg1;
- (void)setLaccConfigAndMetadata:(id)arg1;
- (void)setMaxBurstDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setMaxKeypointsCount:(unsigned long long)arg1;
- (void)setMinBurstFrameDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setMinFrameDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setOrientationDistanceThreshold:(float)arg1;
- (void)setRuntimeUpdates:(id)arg1;
- (void)setSigmaDistanceThreshold:(float)arg1;
- (void)setSquareDistanceDisparityFraction:(float)arg1;
- (void)setSubPixelThreshold:(unsigned long long)arg1;
- (float)sigmaDistanceThreshold;
- (float)squareDistanceDisparityFraction;
- (unsigned long long)subPixelThreshold;
- (void)triggerBurst;

@end
