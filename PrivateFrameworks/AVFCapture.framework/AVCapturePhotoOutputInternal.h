
@interface AVCapturePhotoOutputInternal : NSObject {
    bool  EV0PhotoDeliverySupported;
    int  HDRSceneObserverCount;
    bool  appleProRAWEnabled;
    bool  appleProRAWSupported;
    bool  autoDeferredPhotoDeliveryEnabled;
    bool  autoDeferredPhotoDeliverySupported;
    bool  autoRedEyeReductionSupported;
    NSArray * availableLivePhotoVideoCodecTypes;
    NSArray * availablePhotoCodecTypes;
    NSArray * availablePhotoFileTypes;
    NSArray * availablePhotoPixelFormatTypes;
    NSArray * availableRawPhotoFileTypes;
    NSDictionary * availableRawPhotoPixelFormatTypes;
    NSArray * availableSemanticSegmentationTypes;
    NSObject<OS_dispatch_group> * beginEndIrisMovieCaptureHostTimeDispatchGroup;
    NSObject<OS_dispatch_queue> * beginEndIrisMovieCaptureHostTimeQueue;
    bool  cameraCalibrationDataDeliverySupported;
    long long  captureReadiness;
    bool  contentAwareDistortionCorrectionEnabled;
    bool  contentAwareDistortionCorrectionSupported;
    bool  depthDataDeliveryEnabled;
    bool  depthDataDeliverySupported;
    bool  digitalFlashCaptureEnabled;
    NSDictionary * digitalFlashExposureTimes;
    int  digitalFlashExposureTimesObserverCount;
    long long  digitalFlashStatus;
    int  digitalFlashStatusObserverCount;
    bool  dualCameraDualPhotoDeliveryEnabled;
    bool  dualCameraDualPhotoDeliverySupported;
    NSArray * enabledSemanticSegmentationTypes;
    bool  fastCapturePrioritizationEnabled;
    bool  fastCapturePrioritizationSupported;
    bool  filterRenderingEnabled;
    int  flashSceneObserverCount;
    bool  focusPixelFocusBlurScoreEnabled;
    bool  focusPixelFocusBlurScoreSupported;
    struct ct_green_tea_logger_s { } * greenTeaLogger;
    bool  highPhotoQualitySupported;
    bool  highResolutionCaptureEnabled;
    bool  imageOptimizationForOfflineVideoStabilizationSupported;
    bool  isFlashScene;
    bool  isHDRScene;
    bool  isStillImageStabilizationScene;
    long long  lastMomentSettingsUniqueID;
    long long  lastSettingsUniqueID;
    bool  lensStabilizationDuringBracketedCaptureSupported;
    bool  livePhotoAutoTrimmingEnabled;
    bool  livePhotoCaptureEnabled;
    bool  livePhotoCaptureSupported;
    bool  livePhotoCaptureSuspended;
    struct { 
        int width; 
        int height; 
    }  livePhotoMovieDimensions;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  livePhotoMovieDuration;
    bool  livePhotoMovieProcessingSuspended;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  livePhotoMovieVideoFrameDuration;
    unsigned long long  maxBracketedCapturePhotoCount;
    struct { 
        int width; 
        int height; 
    }  maxPhotoDimensions;
    long long  maxPhotoQualityPrioritization;
    bool  maxPhotoQualityPrioritizationHasBeenSetByClient;
    AVMomentCaptureSettings * momentCaptureInFlight;
    NSString * momentCaptureRequestIdentifierInFlight;
    <AVCapturePhotoCaptureDelegate> * momentPhotoCaptureDelegateInFlight;
    bool  movieRecordingEnabled;
    bool  movieRecordingSupported;
    NSMutableArray * movieRequests;
    struct { 
        int width; 
        int height; 
    }  optimizedImageDimensionsForOfflineStabilization;
    bool  optimizesImagesForOfflineVideoStabilization;
    NSMutableArray * photoRequests;
    AVCapturePhotoSettings * photoSettingsForSceneMonitoring;
    bool  portraitEffectsMatteDeliveryEnabled;
    bool  portraitEffectsMatteDeliverySupported;
    NSMutableArray * prepareRequests;
    bool  preservesLivePhotoCaptureSuspendedOnSessionStop;
    bool  previewQualityAdjustedPhotoFilterRenderingEnabled;
    bool  previewQualityAdjustedPhotoFilterRenderingSupported;
    bool  privatePhotoDimensionsEnabled;
    bool  processedPhotoZoomWithoutUpscalingSupported;
    NSMutableArray * readinessCoordinators;
    struct AVCapturePhotoOutputCaptureReadinessState { 
        bool sessionIsRunning; 
        bool autoDeferredPhotoDeliveryEnabled; 
        bool responsiveCaptureEnabled; 
        int numberOfPhotoCapturesInflight; 
        long long latestCaptureUniqueID; 
        long long inflightNonOverlappingCaptureUniqueID; 
        long long inflightUniqueIDWaitingForCapture; 
        long long inflightUniqueIDWaitingForProcessing; 
    }  readinessState;
    struct OpaqueFigSimpleMutex { } * requestsLock;
    bool  responsiveCaptureEnabled;
    bool  responsiveCaptureSupported;
    bool  resumeLivePhotoMovieCaptureAfterVideoCaptureEnds;
    NSObject<OS_dispatch_queue> * sceneDetectionObserversDispatchQueue;
    bool  semanticStyleRenderingEnabled;
    bool  semanticStyleRenderingSupported;
    NSString * sourceDeviceType;
    bool  spatialOverCaptureEnabled;
    bool  spatialOverCaptureSupported;
    int  stillImageStabilizationSceneObserverCount;
    bool  stillImageStabilizationSupported;
    NSArray * supportedDigitalFlashModes;
    NSArray * supportedFlashModes;
    NSArray * supportedHDRModes;
    float  timeLapseCaptureRate;
    bool  timeLapseCaptureRateNeedsUpdate;
    bool  videoCaptureEnabled;
    bool  videoCaptureSupported;
    bool  virtualDeviceConstituentPhotoDeliveryEnabled;
    bool  virtualDeviceConstituentPhotoDeliverySupported;
    bool  virtualDeviceFusionSupported;
    AVWeakReference * weakReference;
    bool  zeroShutterLagAutomaticallyEnabled;
    bool  zeroShutterLagEnabled;
    bool  zeroShutterLagSupported;
}

@end
