
@interface CPSLaunchContentViewController : UIViewController <CPSPermissionsViewControllerDelegate, CPSSessionProxyDelegate, PRXCardContentProviding> {
    CPSAppMetadataView * _appMetadataView;
    CPSVibrantLabel * _clipDescriptionVibrantLabel;
    UIView * _clipInformationContainerView;
    CPSClipMetadata * _clipMetadata;
    CPSVibrantLabel * _clipNameVibrantLabel;
    CPSVibrantButton * _closeButton;
    id /* block */  _delayedPermissionViewUnhideBlock;
    <CPSLaunchContentViewControllerDelegate> * _delegate;
    bool  _didInstallApplicationPlaceholder;
    bool  _didSendAnalytics;
    bool  _dismissalInProgress;
    unsigned long long  _displayMode;
    NSLayoutConstraint * _heroContainerAspectRatioConstraint;
    UIView * _heroContainerView;
    UIImageView * _heroImageView;
    UIImageView * _heroMirrorImageView;
    UIView * _informationContainerView;
    UIStackView * _informationContentView;
    NSObject<OS_nw_path> * _networkPath;
    NSObject<OS_nw_path_monitor> * _networkPathMonitor;
    UIButton * _openButton;
    CPSVibrantButton * _openVibrantButton;
    CPSPermissionView * _permissionView;
    CPSPermissionsViewController * _permissionsViewController;
    NSError * _proxyLoadingError;
    UIView * _separatorView;
    CPSSessionProxy * _sessionProxy;
    bool  _shouldPlaySoundAndHaptic;
    NSNumber * _uiMock_openButtonEnabled;
    CPSAppClipUnavailableView * _unavailableView;
    bool  _willConfigurePermissionView;
}

@property (setter=_setHeroImage:, nonatomic, retain) UIImage *_heroImage;
@property (nonatomic, readonly) bool allowsPullToDismiss;
@property (nonatomic, readonly) long long cardStyle;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CPSLaunchContentViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool dismissalInProgress;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (setter=uiMock_setOpenButtonEnabled:, nonatomic) NSNumber *uiMock_openButtonEnabled;

- (void).cxx_destruct;
- (bool)_canLaunchAppSimultaneouslyWithInvocationCardDismissal;
- (bool)_canShowWhileLocked;
- (void)_dismissCardWithClipDidOpen:(bool)arg1 andPerformBlockToLaunchApp:(id /* block */)arg2;
- (void)_dismissCardWithClipDidOpen:(bool)arg1 completion:(id /* block */)arg2;
- (void)_dismissWithClipDidOpen:(bool)arg1 completion:(id /* block */)arg2;
- (id)_heroImage;
- (void)_openAppClip:(id)arg1;
- (void)_openNonAppClipURL:(id)arg1;
- (id)_reasonStringForError:(id)arg1;
- (void)_sendAnalyticsIfNeeded;
- (void)_setHeroImage:(id)arg1;
- (id)_setUpOpenButtonIfNeeded;
- (void)_updateContent;
- (void)_updateCornerRadiusForButtons;
- (void)_updateHeroImageIfNeeded;
- (bool)_userNotificationAuthorizationDenied;
- (bool)allowsPullToDismiss;
- (void)cancelSession;
- (void)configurePermissionView;
- (void)createNetworkPathMonitor;
- (id)delegate;
- (void)determineClipCompatibility;
- (void)disableOpenButton;
- (void)dismiss:(id)arg1;
- (bool)dismissalInProgress;
- (void)enableOpenButton;
- (void)handlePolicyRecovery;
- (id)initWithCoder:(id)arg1;
- (id)initWithMetadata:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithURL:(id)arg1;
- (id)initWithURL:(id)arg1 displayMode:(unsigned long long)arg2;
- (void)loadView;
- (void)locationManagerDidChangeAuthorization:(id)arg1;
- (void)logDismissalFromCloseButton:(bool)arg1;
- (void)openAppStore;
- (void)permissionsViewControllerDidFinish:(id)arg1;
- (void)playSoundAndHaptic;
- (bool)prefersHomeIndicatorAutoHidden;
- (void)proxy:(id)arg1 didFinishLoadingWithError:(id)arg2;
- (void)proxy:(id)arg1 didRetrieveApplicationIcon:(id)arg2;
- (void)proxy:(id)arg1 didRetrieveHeroImage:(id)arg2;
- (void)proxyDidInstallApplicationPlaceholder:(id)arg1;
- (void)proxyDidUpdateMetadata:(id)arg1;
- (void)proxyRemoteServiceDidCrash:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDismissalInProgress:(bool)arg1;
- (void)setUnavailableViewHidden:(bool)arg1;
- (void)setUpCard;
- (void)setUpClipInformationContainerView;
- (void)setUpHeroSection;
- (void)setUpInformationSection;
- (bool)shouldRequestLocationConfirmationPermission;
- (void)showUnavailableViewWithReason:(id)arg1;
- (void)signInToAppStore;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)traitCollectionDidChange:(id)arg1;
- (id)uiMock_openButtonEnabled;
- (void)uiMock_setOpenButtonEnabled:(id)arg1;
- (void)updateOpenButton;
- (void)updatePreferredContentSizeForCardWidth:(double)arg1;
- (void)updateViewConstraints;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;

@end
