
@interface PBFPosterRackCollectionViewController : UICollectionViewController <FCUIFocusSelectionViewControllerDelegate, PBFPosterEditingIngestionManagerDelegate, PBFPosterGalleryPreviewViewControllerDelegate, PBFPosterRackSwitcherControlling, PRDateObserving, PREditingFontAndColorPickerViewControllerDelegate, PREditingSceneViewControllerObserver, SBSHomeScreenServiceLayoutObserver, UICollectionViewDelegate_Private, UIGestureRecognizerDelegate, UISheetPresentationControllerDelegate> {
    void $__lazy_storage_$_duplicateAction;
    void $__lazy_storage_$_feedbackGenerator;
    void $__lazy_storage_$_initialLayoutModeFromFullscreen;
    void $__lazy_storage_$_lockScreenWidgetMetricsSpecifications;
    void $__lazy_storage_$_widgetHost;
    void actionsMenuButton;
    void addPosterButton;
    void allowsEnteringFullscreenLayout;
    void allowsLeavingHomeConfiguringLayout;
    void centeredLockPosterOverlayView;
    void centeredPosterButton;
    void centeredPosterButtonMinWidth;
    void currentFocusSetupState;
    void currentHomeScreenIconContentLayoutFetchRequestID;
    void currentPosterSignificantEventsCounter;
    void dateProvider;
    void displayedComplicationLocationOnLockScreenPosterCells;
    void durationForCommittingToAlongsideLayout;
    void editingSessionInProgressAssertion;
    void focusSelector;
    void focusSetupStateProvider;
    void galleryController;
    void galleryDataProvider;
    void galleryInUseAssertion;
    void hasScrolledToSelectionForInitialViewLayout;
    void headerBottomEdgeSpacing;
    void homeScreenConfigurationView;
    void homeScreenIconContentLayout;
    void homeScreenIconContentViewConnector;
    void homeScreenLayoutObservationToken;
    void homeScreenService;
    void isLockPosterComplicationRowHidden;
    void isLockPosterFloatingLayerInlined;
    void isScrollingOrSettling;
    void isTransitioningToInitialLayoutModeFromFullscreen;
    void layout;
    void layoutMode;
    void layoutTransitionAnimationCount;
    void leadingTopButton;
    void leadingTopButtonFrame;
    void leadingTopButtonTopAnchorConstraint;
    void leadingTopButtonTrailingAnchorConstraint;
    void legacyMigrationHelper;
    void lockPosterLiveContentLayerSpecification;
    void lockPosterLiveContentView;
    void lockPosterLiveFloatingLayerSpecification;
    void lockPosterLiveFloatingView;
    void lockPosterOverlayLayerSpecification;
    void lockVibrancyConfiguration;
    void managesLiveWidgetHosting;
    void minimumMovementForSignificantPan;
    void numberOfTrackingTouchesBegunWhileTransitioningToInitialLayoutModeFromFullscreen;
    void pageControl;
    void pageControlPreferredNumberOfVisibleIndicators;
    void portalContainerSpecification;
    void posterPairWithUncommittedHomeScreenConfigurationUpdates;
    void posterRackDelegate;
    void posterStore;
    void shouldBeginAlongsideCompactDeflationWhenAppropriate;
    void shouldDisplayActionsButton;
    void shouldDisplayAddButton;
    void shouldDisplayCancelButton;
    void shouldDisplayConfigurationTopButtons;
    void shouldDisplayGalleryAffordance;
    void shouldDisplayHomeCardsParallaxedWithLockCardsInAlongsideLayout;
    void shouldShowFocusButtonOnLockScreenPosterCells;
    void shouldTransitionLayoutToConfiguringHomeForFirstPoster;
    void sideButtonTrailingWidth;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  stashedLockscreenSnapshots;
    void switcherApplicationStateNode;
    void topButtonsEdgeInsets;
    void trailingTopButton;
    void trailingTopButtonFrame;
    void trailingTopButtonTopAnchorConstraint;
    void trailingTopButtonTrailingAnchorConstraint;
}

@property (nonatomic) bool allowsEnteringFullscreenLayout;
@property (nonatomic) bool allowsLeavingHomeConfiguringLayout;
@property (nonatomic, readonly) PBFPosterPair *centeredPoster;
@property (nonatomic, readonly) NSIndexPath *centeredPosterIndexPath;
@property (nonatomic, readonly) PROverridableDateProvider *dateProvider;
@property (nonatomic) unsigned long long layoutMode;
@property (nonatomic) bool managesLiveWidgetHosting;
@property (nonatomic, retain) UIPageControl *pageControl;
@property (nonatomic) <PBFPosterRackCollectionViewControllerDelegate> *posterRackDelegate;
@property (nonatomic, readonly) bool prefersStatusBarHidden;
@property (nonatomic) bool shouldDisplayActionsButton;
@property (nonatomic) bool shouldDisplayAddButton;
@property (nonatomic) bool shouldDisplayCancelButton;
@property (nonatomic) bool shouldDisplayConfigurationTopButtons;
@property (nonatomic) bool shouldDisplayGalleryAffordance;
@property (nonatomic) bool shouldTransitionLayoutToConfiguringHomeForFirstPoster;
@property (nonatomic, readonly) unsigned long long supportedInterfaceOrientations;

+ (id)simplifiedHomeScreenSwitcherFor:(id)arg1 delegate:(id)arg2 topButtonLayout:(struct PREditingSceneViewControllerTopButtonLayout { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; })arg3;
+ (id)simplifiedHomeScreenSwitcherWithFilter:(id)arg1 delegate:(id)arg2 topButtonLayout:(struct PREditingSceneViewControllerTopButtonLayout { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; })arg3;

- (void).cxx_destruct;
- (id)_indexPathOfReferenceItemForLayoutTransitionInCollectionView:(id)arg1;
- (id)_newCollectionViewWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 collectionViewLayout:(id)arg2;
- (bool)allowsEnteringFullscreenLayout;
- (bool)allowsLeavingHomeConfiguringLayout;
- (id)centeredPoster;
- (id)centeredPosterIndexPath;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (id)dateProvider;
- (void)dateProvider:(id)arg1 didUpdateDate:(id)arg2;
- (void)dealloc;
- (void)didTapEmptyViewArea:(id)arg1;
- (void)dismissPresentedViewControllersAnimated:(bool)arg1 dismissHandler:(id /* block */)arg2 completion:(id /* block */)arg3;
- (void)editingIngestionManager:(id)arg1 didAccept:(id)arg2 userChoice:(long long)arg3;
- (void)editingSceneViewController:(id)arg1 userDidDismissWithAction:(long long)arg2 updatedConfiguration:(id)arg3 updatedConfiguredProperties:(id)arg4 completion:(id /* block */)arg5;
- (void)editingSceneViewControllerDidFinalize:(id)arg1;
- (void)focusSelectionViewController:(id)arg1 hasSelected:(bool)arg2 activity:(id)arg3;
- (void)fontAndColorPickerViewController:(id)arg1 didUpdateDesiredDetent:(double)arg2;
- (void)galleryViewController:(id)arg1 didSelectPreview:(id)arg2 fromPreviewView:(id)arg3;
- (id)galleryViewController:(id)arg1 willUseAnimationController:(id)arg2 forDismissingEditingViewControllerWithAction:(long long)arg3;
- (bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)getRotationContentSettings:(struct { bool x1; bool x2; bool x3; bool x4; bool x5; double x6; int x7; }*)arg1 forWindow:(id)arg2;
- (void)homeScreenServiceLayoutDidChange:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithCollectionViewLayout:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithPosterFilter:(id)arg1;
- (unsigned long long)layoutMode;
- (bool)managesLiveWidgetHosting;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (id)pageControl;
- (void)pageControlDidChangePage:(id)arg1;
- (id)posterExtensionDataStore;
- (id)posterRackDelegate;
- (void)posterSectionRemovalView:(id)arg1 didRequestRemovalOfPosterWithID:(id)arg2;
- (bool)prefersStatusBarHidden;
- (void)presentPosterGallery:(id /* block */)arg1;
- (void)presentationControllerDidDismiss:(id)arg1;
- (void)presentationControllerWillDismiss:(id)arg1;
- (void)reset:(id /* block */)arg1;
- (void)scrollToFirstPoster:(bool)arg1 completion:(id /* block */)arg2;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(bool)arg2;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint { double x1; double x2; })arg2 targetContentOffset:(struct CGPoint { double x1; double x2; }*)arg3;
- (void)setAllowsEnteringFullscreenLayout:(bool)arg1;
- (void)setAllowsLeavingHomeConfiguringLayout:(bool)arg1;
- (void)setLayoutMode:(unsigned long long)arg1;
- (void)setManagesLiveWidgetHosting:(bool)arg1;
- (void)setPageControl:(id)arg1;
- (void)setPosterRackDelegate:(id)arg1;
- (void)setShouldDisplayActionsButton:(bool)arg1;
- (void)setShouldDisplayAddButton:(bool)arg1;
- (void)setShouldDisplayCancelButton:(bool)arg1;
- (void)setShouldDisplayConfigurationTopButtons:(bool)arg1;
- (void)setShouldDisplayGalleryAffordance:(bool)arg1;
- (void)setShouldTransitionLayoutToConfiguringHomeForFirstPoster:(bool)arg1;
- (bool)shouldDisplayActionsButton;
- (bool)shouldDisplayAddButton;
- (bool)shouldDisplayCancelButton;
- (bool)shouldDisplayConfigurationTopButtons;
- (bool)shouldDisplayGalleryAffordance;
- (bool)shouldTransitionLayoutToConfiguringHomeForFirstPoster;
- (unsigned long long)supportedInterfaceOrientations;
- (struct PREditingSceneViewControllerTopButtonLayout { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; })topButtonLayoutForEditingSceneViewController:(id)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewDidMoveToWindow:(id)arg1 shouldAppearOrDisappear:(bool)arg2;
- (void)viewWillLayoutSubviews;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;

@end
