
@interface PBFPosterSnapshotter : NSObject <BSInvalidatable, FBSceneDelegate> {
    NSObject<OS_dispatch_queue> * _backgroundQueue;
    bool  _complicationRenderingCompleted;
    PRPosterConfiguredProperties * _configuredProperties;
    <PBFDisplayContext> * _context;
    NSArray * _definitions;
    NSError * _error;
    <PRPosterExtensionDescribing> * _extension;
    RBSAssertion * _extensionPrewarmRuntimeAssertion;
    <PBFExtensionProviding> * _extensionProvider;
    NSString * _identifier;
    bool  _isCapturingSnapshots;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    bool  _lock_cleanedUp;
    bool  _lock_didLoadAllFromDisk;
    double  _lock_endTime;
    bool  _lock_finished;
    bool  _lock_isProcessingReceivedSnapshots;
    NSHashTable * _lock_observers;
    bool  _lock_sceneReady;
    NSMapTable * _lock_snapshotImagesByDefinition;
    NSMutableDictionary * _lock_snapshotsByDefinition;
    double  _lock_snapshotsRequestedTime;
    double  _lock_startTime;
    bool  _lock_started;
    NSMutableArray * _outstandingDefinitionsNeedingSnapshots;
    NSString * _previewIdentifier;
    bool  _readFromPosterPathCacheIfAvailable;
    PBFPosterSnapshotRequest * _request;
    <PBFRuntimeAssertionProviding> * _runtimeAssertionProvider;
    FBScene * _scene;
    PRSServerPosterPath * _serverPosterPath;
    bool  _shouldWaitForComplicationRendering;
    unsigned long long  _significantEventsCounter;
}

@property (nonatomic, readonly) PRPosterConfiguredProperties *configuredProperties;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) NSArray *definitions;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) double elapsedTime;
@property (nonatomic, readonly) NSError *error;
@property (nonatomic, readonly) <PRPosterExtensionDescribing> *extension;
@property (nonatomic, readonly) <PBFExtensionProviding> *extensionProvider;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isFinished;
@property (nonatomic, readonly) bool needsToBootupExtension;
@property (nonatomic) bool readFromPosterPathCacheIfAvailable;
@property (nonatomic, readonly) PBFPosterSnapshotRequest *request;
@property (nonatomic, readonly) <PBFRuntimeAssertionProviding> *runtimeAssertionProvider;
@property (nonatomic, readonly) PRSServerPosterPath *serverPosterPath;
@property (nonatomic, readonly) NSDictionary *snapshotImagesByDefinition;
@property (nonatomic, readonly) NSDictionary *snapshotsByDefinition;
@property (readonly) Class superclass;

+ (id)createSnapshotUsingIOSurface:(id)arg1 snapshotScale:(double)arg2 imageEncoder:(id)arg3 error:(out id*)arg4;
+ (id)new;

- (void).cxx_destruct;
- (void)_backgroundQueue_createSnapshotsUsingFetchedImagesWithError:(id)arg1;
- (void)_cancelWithErrorCode:(long long)arg1 reason:(id)arg2;
- (void)_captureSnapshotWithScene:(id)arg1;
- (void)_cleanup;
- (id)_encoderForDefinition:(id)arg1;
- (void)_enumerateObservers:(id /* block */)arg1;
- (id)_fetchExtensionWithError:(out id*)arg1;
- (void)_finishWithError:(id)arg1;
- (bool)_hasStarted;
- (bool)_isProcessingReceivedSnapshots;
- (bool)_isSceneReady;
- (bool)_lock_didAccumulateAllSnapshots;
- (void)_lock_enumerateObservers:(id /* block */)arg1;
- (bool)_lock_isSnapshotPopulatedForDefinition:(id)arg1;
- (bool)_lock_populateSnapshotsFromAssetCatalogIfPossible;
- (bool)_lock_populateSnapshotsFromDiskIfPossible;
- (bool)_lock_storeImage:(id)arg1 definition:(id)arg2 error:(out id*)arg3;
- (void)_main_requestTimedOut;
- (void)_main_start;
- (void)_processOutstandingSnapshotDefinitionsWithScene:(id)arg1;
- (long long)_snapshotSettingsDeviceOrientation;
- (long long)_snapshotSettingsInterfaceOrientation;
- (bool)_wasCleanedUp;
- (void)addObserver:(id)arg1;
- (void)cancelWithReason:(id)arg1;
- (bool)checkIfSnapshotterIsPreparedToExecute:(out id*)arg1;
- (id)configuredProperties;
- (void)dealloc;
- (id)debugDescription;
- (id)definitions;
- (double)elapsedTime;
- (id)error;
- (id)extension;
- (id)extensionProvider;
- (id)extensionWithError:(out id*)arg1;
- (id)init;
- (id)initWithExtensionProvider:(id)arg1 contents:(id)arg2 definitions:(id)arg3 configuredProperties:(id)arg4 context:(id)arg5 intention:(unsigned long long)arg6 previewIdentifier:(id)arg7 significantEventsCounter:(unsigned long long)arg8 runtimeAssertionProvider:(id)arg9;
- (id)initWithRequest:(id)arg1 extensionProvider:(id)arg2 runtimeAssertionProvider:(id)arg3;
- (void)invalidate;
- (bool)isFinished;
- (bool)needsToBootupExtension;
- (bool)readFromPosterPathCacheIfAvailable;
- (void)removeObserver:(id)arg1;
- (id)request;
- (id)runtimeAssertionProvider;
- (void)scene:(id)arg1 didReceiveActions:(id)arg2;
- (void)scene:(id)arg1 didUpdateClientSettingsWithDiff:(id)arg2 oldClientSettings:(id)arg3 transitionContext:(id)arg4;
- (void)sceneContentStateDidChange:(id)arg1;
- (void)sceneWillDeactivate:(id)arg1 withError:(id)arg2;
- (id)serverPosterPath;
- (void)setReadFromPosterPathCacheIfAvailable:(bool)arg1;
- (id)snapshotImagesByDefinition;
- (id)snapshotsByDefinition;
- (bool)start;

@end
