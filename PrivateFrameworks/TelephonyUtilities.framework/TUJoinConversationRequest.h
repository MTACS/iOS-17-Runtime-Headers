
@interface TUJoinConversationRequest : NSObject <NSCopying, NSSecureCoding, TUFilteredRequest> {
    NSUUID * _UUID;
    TUConversationActivity * _activity;
    NSString * _audioSourceIdentifier;
    unsigned long long  _avMode;
    TUHandle * _callerID;
    NSString * _collaborationIdentifier;
    TUConversationLink * _conversationLink;
    bool  _endpointOnCurrentDevice;
    bool  _hostedOnCurrentDevice;
    NSSet * _invitationPreferences;
    bool  _joiningConversationWithLink;
    NSString * _messagesGroupName;
    NSUUID * _messagesGroupUUID;
    int  _originatingUIType;
    NSSet * _otherInvitedHandles;
    TUConversationParticipantAssociation * _participantAssociation;
    bool  _prefersAddingRemoteMembersAfterHandoff;
    unsigned long long  _presentationMode;
    TUConversationProvider * _provider;
    NSSet * _remoteMembers;
    bool  _sendLetMeInRequest;
    bool  _sendToScreening;
    bool  _shouldLaunchBackgroundInCallUI;
    bool  _shouldSuppressInCallUI;
    bool  _showUIPrompt;
    bool  _uplinkMuted;
    bool  _videoEnabled;
    bool  _wantsStagingArea;
}

@property (nonatomic, readonly) NSURL *URL;
@property (nonatomic, retain) NSUUID *UUID;
@property (nonatomic, retain) TUConversationActivity *activity;
@property (nonatomic, copy) NSString *audioSourceIdentifier;
@property (nonatomic) unsigned long long avMode;
@property (nonatomic, retain) TUHandle *callerID;
@property (nonatomic, retain) NSString *collaborationIdentifier;
@property (nonatomic, copy) TUConversationLink *conversationLink;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool endpointOnCurrentDevice;
@property (nonatomic, readonly) bool hasAnySiriDisplayNames;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool hostedOnCurrentDevice;
@property (nonatomic, copy) NSSet *invitationPreferences;
@property (nonatomic, readonly) bool isOneToOne;
@property (getter=isJoiningConversationWithLink, nonatomic) bool joiningConversationWithLink;
@property (nonatomic, copy) NSString *messagesGroupName;
@property (nonatomic, copy) NSUUID *messagesGroupUUID;
@property (nonatomic, readonly, copy) NSDictionary *notificationStylesByHandleType;
@property (nonatomic) int originatingUIType;
@property (nonatomic, readonly, copy) NSSet *otherInvitedHandles;
@property (nonatomic, copy) TUConversationParticipantAssociation *participantAssociation;
@property (nonatomic) bool prefersAddingRemoteMembersAfterHandoff;
@property (nonatomic) unsigned long long presentationMode;
@property (nonatomic, retain) TUConversationProvider *provider;
@property (nonatomic, copy) NSSet *remoteMembers;
@property (nonatomic) bool sendLetMeInRequest;
@property (nonatomic) bool sendToScreening;
@property (nonatomic) bool shouldLaunchBackgroundInCallUI;
@property (nonatomic) bool shouldSuppressInCallUI;
@property (nonatomic) bool showUIPrompt;
@property (readonly) Class superclass;
@property (getter=isUplinkMuted, nonatomic) bool uplinkMuted;
@property (getter=isVideo, nonatomic) bool video;
@property (getter=isVideoEnabled, nonatomic) bool videoEnabled;
@property (nonatomic) bool wantsStagingArea;

+ (id)audioSourceIdentifierFromURLComponents:(id)arg1;
+ (unsigned long long)avModeFromURLComponents:(id)arg1;
+ (id)callerIDFromURLComponents:(id)arg1;
+ (id)collaborationIdentifierFromURLComponents:(id)arg1;
+ (id)conversationLinkFromURLComponents:(id)arg1;
+ (id)invitationPreferencesFromURLComponents:(id)arg1;
+ (bool)joiningConversationWithLinkFromURLComponents:(id)arg1;
+ (id)messagesGroupNameFromURLComponents:(id)arg1;
+ (id)messagesGroupUUIDFromURLComponents:(id)arg1;
+ (int)originatingUITypeFromURLComponents:(id)arg1;
+ (id)otherInvitedHandlesFromURLComponents:(id)arg1;
+ (unsigned long long)presentationModeFromURLComponents:(id)arg1;
+ (id)providerFromURLComponents:(id)arg1;
+ (id)remoteMembersFromURLComponents:(id)arg1;
+ (id)sanitizedMembersFromMembers:(id)arg1;
+ (bool)sendLetMeInRequestFromURLComponents:(id)arg1;
+ (bool)sendToScreeningFromURLComponents:(id)arg1;
+ (bool)shouldSuppressInCallUIFromURLComponents:(id)arg1;
+ (bool)showUIPromptFromURLComponents:(id)arg1;
+ (bool)supportsSecureCoding;
+ (bool)uplinkMutedFromURLComponents:(id)arg1;
+ (id)uuidFromURLComponents:(id)arg1;
+ (bool)videoEnabledFromURLComponents:(id)arg1;
+ (bool)videoFromURLComponents:(id)arg1;
+ (bool)wantsStagingAreaFromURLComponents:(id)arg1;

- (void).cxx_destruct;
- (id)URL;
- (id)UUID;
- (id)activity;
- (id)audioSourceIdentifier;
- (id)audioSourceIdentifierQueryItem;
- (unsigned long long)avMode;
- (id)avModeQueryItem;
- (id)bundleIdentifier;
- (id)callerID;
- (id)callerIDQueryItem;
- (id)collaborationIdentifier;
- (id)collaborationIdentifierQueryItem;
- (id)contactNamesByHandleWithContactsDataSource:(id)arg1;
- (id)conversationLink;
- (id)conversationLinkQueryItem;
- (id)conversationMembersForIntent:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (bool)endpointOnCurrentDevice;
- (id)handles;
- (bool)hasAnySiriDisplayNames;
- (unsigned long long)hash;
- (bool)hostedOnCurrentDevice;
- (id)initWithCoder:(id)arg1;
- (id)initWithConversation:(id)arg1;
- (id)initWithConversationLink:(id)arg1 otherInvitedHandles:(id)arg2 remoteMembers:(id)arg3 sendLetMeInRequest:(bool)arg4;
- (id)initWithConversationLink:(id)arg1 otherInvitedHandles:(id)arg2 sendLetMeInRequest:(bool)arg3;
- (id)initWithGroupUUID:(id)arg1 localParticipantHandle:(id)arg2 remoteParticipantHandles:(id)arg3;
- (id)initWithProvider:(id)arg1 remoteMemberHandles:(id)arg2;
- (id)initWithProvider:(id)arg1 remoteMembers:(id)arg2 otherInvitedHandles:(id)arg3;
- (id)initWithRemoteMembers:(id)arg1;
- (id)initWithRemoteMembers:(id)arg1 otherInvitedHandles:(id)arg2;
- (id)initWithURL:(id)arg1;
- (id)initWithUserActivity:(id)arg1;
- (id)invitationPreferences;
- (id)invitationPreferencesQueryItem;
- (bool)isEqual:(id)arg1;
- (bool)isEqualToRequest:(id)arg1;
- (bool)isJoiningConversationWithLink;
- (bool)isOneToOne;
- (bool)isUplinkMuted;
- (bool)isVideo;
- (bool)isVideoEnabled;
- (id)joiningConversationWithLinkQueryItem;
- (id)messagesGroupName;
- (id)messagesGroupNameQueryItem;
- (id)messagesGroupUUID;
- (id)messagesGroupUUIDQueryItem;
- (id)notificationStylesByHandleType;
- (id)originatingUIQueryItem;
- (int)originatingUIType;
- (id)otherInvitedHandles;
- (id)otherInvitedHandlesQueryItem;
- (id)participantAssociation;
- (bool)prefersAddingRemoteMembersAfterHandoff;
- (unsigned long long)presentationMode;
- (id)presentationModeQueryItem;
- (id)provider;
- (id)providerQueryItem;
- (id)queryItems;
- (id)remoteMembers;
- (id)remoteMembersQueryItem;
- (bool)sendLetMeInRequest;
- (id)sendLetMeInRequestQueryItem;
- (bool)sendToScreening;
- (id)sendToScreeningQueryItem;
- (void)setActivity:(id)arg1;
- (void)setAudioSourceIdentifier:(id)arg1;
- (void)setAvMode:(unsigned long long)arg1;
- (void)setCallerID:(id)arg1;
- (void)setCollaborationIdentifier:(id)arg1;
- (void)setConversationLink:(id)arg1;
- (void)setEndpointOnCurrentDevice:(bool)arg1;
- (void)setHostedOnCurrentDevice:(bool)arg1;
- (void)setInvitationPreferences:(id)arg1;
- (void)setJoiningConversationWithLink:(bool)arg1;
- (void)setMessagesGroupName:(id)arg1;
- (void)setMessagesGroupUUID:(id)arg1;
- (void)setOriginatingUIType:(int)arg1;
- (void)setParticipantAssociation:(id)arg1;
- (void)setPrefersAddingRemoteMembersAfterHandoff:(bool)arg1;
- (void)setPresentationMode:(unsigned long long)arg1;
- (void)setProvider:(id)arg1;
- (void)setRemoteMembers:(id)arg1;
- (void)setSendLetMeInRequest:(bool)arg1;
- (void)setSendToScreening:(bool)arg1;
- (void)setShouldLaunchBackgroundInCallUI:(bool)arg1;
- (void)setShouldSuppressInCallUI:(bool)arg1;
- (void)setShowUIPrompt:(bool)arg1;
- (void)setUUID:(id)arg1;
- (void)setUplinkMuted:(bool)arg1;
- (void)setVideo:(bool)arg1;
- (void)setVideoEnabled:(bool)arg1;
- (void)setWantsStagingArea:(bool)arg1;
- (bool)shouldLaunchBackgroundInCallUI;
- (bool)shouldSuppressInCallUI;
- (id)shouldSuppressInCallUIQueryItem;
- (bool)showUIPrompt;
- (id)showUIPromptQueryItem;
- (bool)supportsAVMode:(unsigned long long)arg1;
- (id)uplinkMutedQueryItem;
- (id)userActivityUsingStartCallIntents;
- (id)uuidQueryItem;
- (id)videoEnabledQueryItem;
- (id)videoQueryItem;
- (bool)wantsStagingArea;
- (id)wantsStagingAreaQueryItem;

@end
