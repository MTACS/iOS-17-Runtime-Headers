
@interface TUCallServicesInterface : NSObject <TUAudioDeviceControllerActions, TUCallFilterControllerActions, TUCallServicesClientCapabilitiesActions, TUCallServicesProxyCallActions, TUCallServicesXPCClient, TURouteControllerActions> {
    NSXPCListenerEndpoint * _anonymousXPCEndpoint;
    TUCallCenter * _callCenter;
    TUCallNotificationManager * _callNotificationManager;
    TUCallServicesClientCapabilities * _callServicesClientCapabilities;
    int  _connectionRequestNotificationToken;
    NSArray * _currentCalls;
    TUFeatureFlags * _featureFlags;
    bool  _hasReceivedInitialState;
    bool  _hasRequestedInitialState;
    bool  _hasServerLaunched;
    NSDate * _lastDaemonConnectTime;
    NSArray * _localProxyCalls;
    TURouteController * _localRouteController;
    TURouteController * _pairedHostDeviceRouteController;
    NSObject<OS_dispatch_queue> * _queue;
    <TUCallServicesXPCServer> * _server;
    bool  _shouldHandleServerDisconnect;
    NSMapTable * _uniqueProxyIdentifierToProxyCall;
    NSXPCConnection * _xpcConnection;
}

@property (nonatomic, retain) NSXPCListenerEndpoint *anonymousXPCEndpoint;
@property (nonatomic, readonly) <TUCallServicesXPCServer> *asynchronousServer;
@property (nonatomic) TUCallCenter *callCenter;
@property (nonatomic, readonly) <TUCallContainerPrivate> *callContainer;
@property (nonatomic, readonly) TUCallNotificationManager *callNotificationManager;
@property (nonatomic, readonly) TUCallServicesClientCapabilities *callServicesClientCapabilities;
@property (nonatomic, readonly) int connectionRequestNotificationToken;
@property (nonatomic, copy) NSArray *currentCalls;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) TUFeatureFlags *featureFlags;
@property (nonatomic) bool hasReceivedInitialState;
@property (nonatomic) bool hasRequestedInitialState;
@property (nonatomic) bool hasServerLaunched;
@property (readonly) unsigned long long hash;
@property (nonatomic) NSDate *lastDaemonConnectTime;
@property (nonatomic, copy) NSArray *localProxyCalls;
@property (nonatomic, retain) TURouteController *localRouteController;
@property (nonatomic, retain) TURouteController *pairedHostDeviceRouteController;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, readonly) void*queueContext;
@property (nonatomic) <TUCallServicesXPCServer> *server;
@property (getter=isServerLocal, nonatomic, readonly) bool serverLocal;
@property (nonatomic) bool shouldHandleServerDisconnect;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSMapTable *uniqueProxyIdentifierToProxyCall;
@property (nonatomic, retain) NSXPCConnection *xpcConnection;

- (void).cxx_destruct;
- (oneway void)_handleCurrentCallsChanged:(id)arg1 callsDisconnected:(id)arg2;
- (void)_ignorePendingServerDisconnectionHandlers;
- (id)_proxyCallWithCall:(id)arg1;
- (id)_proxyCallWithUniqueProxyIdentifier:(id)arg1;
- (void)_registerCall:(id)arg1;
- (void)_setUpXPCConnection;
- (void)_tearDownXPCConnection;
- (void)_updateCurrentCalls:(id)arg1;
- (void)_updateCurrentCalls:(id)arg1 withNotificationsUsingUpdatedCalls:(id)arg2;
- (void)_updateCurrentCallsWithoutNotifications:(id)arg1;
- (oneway void)activateInCallUIWithActivityContinuationIdentifier:(id)arg1;
- (id)anonymousXPCEndpoint;
- (oneway void)answerCallWithRequest:(id)arg1;
- (id)asynchronousServer;
- (id)asynchronousServerWithErrorHandler:(id /* block */)arg1;
- (id)callCenter;
- (id)callContainer;
- (id)callNotificationManager;
- (id)callServicesClientCapabilities;
- (int)connectionRequestNotificationToken;
- (bool)containsRestrictedHandle:(id)arg1 forBundleIdentifier:(id)arg2 performSynchronously:(bool)arg3;
- (id)currentCalls;
- (void)dealloc;
- (id)debugDescription;
- (id)defaultGreeting;
- (void)deleteCustomGreetingForAccountUUID:(id)arg1;
- (id)dialWithRequest:(id)arg1 completion:(id /* block */)arg2;
- (oneway void)disconnectAllCalls;
- (oneway void)disconnectCallWithUniqueProxyIdentifier:(id)arg1;
- (oneway void)disconnectCurrentCallAndActivateHeld;
- (oneway void)enteredBackgroundForAllCalls;
- (oneway void)enteredForegroundForCallWithUniqueProxyIdentifier:(id)arg1;
- (id)featureFlags;
- (void)fetchAnonymousXPCEndpoint:(id /* block */)arg1;
- (id)fetchCurrentCallUpdates;
- (void)fetchCurrentCalls;
- (unsigned long long)filterStatusForAddresses:(id)arg1 forBundleIdentifier:(id)arg2;
- (oneway void)groupCallWithUniqueProxyIdentifier:(id)arg1 withOtherCallWithUniqueProxyIdentifier:(id)arg2;
- (oneway void)handleCurrentCallsChanged:(id)arg1 callDisconnected:(id)arg2;
- (oneway void)handleFrequencyChangedTo:(id)arg1 inDirection:(int)arg2 forCallsWithUniqueProxyIdentifiers:(id)arg3;
- (oneway void)handleLocalRoutesByUniqueIdentifierUpdated:(id)arg1;
- (oneway void)handleMeterLevelChangedTo:(float)arg1 inDirection:(int)arg2 forCallsWithUniqueProxyIdentifiers:(id)arg3;
- (oneway void)handleNotificationName:(id)arg1 forCallWithUniqueProxyIdentifier:(id)arg2 userInfo:(id)arg3;
- (oneway void)handlePairedHostDeviceRoutesByUniqueIdentifierUpdated:(id)arg1;
- (void)handleServerDisconnect;
- (void)handleServerDisconnectIfNecessary;
- (void)handleServerReconnect;
- (oneway void)handleUIXPCEndpointChanged:(id)arg1;
- (bool)hasReceivedInitialState;
- (bool)hasRequestedInitialState;
- (bool)hasServerLaunched;
- (oneway void)holdCallWithUniqueProxyIdentifier:(id)arg1;
- (id)init;
- (id)initWithQueue:(id)arg1 callCenter:(id)arg2;
- (bool)isServerLocal;
- (bool)isUnknownAddress:(id)arg1 normalizedAddress:(id)arg2 forBundleIdentifier:(id)arg3;
- (id)joinConversationWithRequest:(id)arg1;
- (id)lastDaemonConnectTime;
- (id)localProxyCalls;
- (id)localRouteController;
- (id)pairedHostDeviceRouteController;
- (void)performBlockOnQueue:(id /* block */)arg1;
- (void)performBlockOnQueue:(id /* block */)arg1 andWait:(bool)arg2;
- (void)pickRouteWithUniqueIdentifier:(id)arg1 shouldWaitUntilAvailable:(bool)arg2 forRouteController:(id)arg3;
- (oneway void)playDTMFToneForCallWithUniqueProxyIdentifier:(id)arg1 key:(unsigned char)arg2;
- (id)policyForAddresses:(id)arg1 forBundleIdentifier:(id)arg2;
- (oneway void)pullCallFromClientUsingHandoffActivityUserInfo:(id)arg1 completion:(id /* block */)arg2;
- (oneway void)pullHostedCallsFromPairedHostDevice;
- (oneway void)pullPersistedChannel:(id /* block */)arg1;
- (oneway void)pullRelayingCallsFromClient;
- (oneway void)pullRelayingGFTCallsFromClientIfNecessary;
- (oneway void)pushHostedCallsToDestination:(id)arg1;
- (oneway void)pushRelayingCallsToHostWithSourceIdentifier:(id)arg1;
- (id)queue;
- (void*)queueContext;
- (void)registerAnonymousXPCEndpoint:(id)arg1;
- (void)registerCall:(id)arg1;
- (oneway void)reportLocalPreviewStoppedForCallWithUniqueProxyIdentifier:(id)arg1;
- (void)requestCurrentStateWithCompletionHandler:(id /* block */)arg1;
- (void)requestCurrentStateWithCompletionHandler:(id /* block */)arg1 handleInitialState:(id /* block */)arg2;
- (oneway void)requestVideoUpgradeForCallWithUniqueProxyIdentifier:(id)arg1;
- (oneway void)resetCallProvisionalStates;
- (id)routesByUniqueIdentifierForRouteController:(id)arg1;
- (void)saveCustomGreeting:(id)arg1 forAccountUUID:(id)arg2;
- (void)screenWithRequest:(id)arg1;
- (oneway void)sendHardPauseDigitsForCallWithUniqueProxyIdentifier:(id)arg1;
- (oneway void)sendMMIOrUSSDCodeWithRequest:(id)arg1;
- (oneway void)sendUserScoreToRTCReporting:(id)arg1 withScore:(int)arg2;
- (id)server;
- (void)setAnonymousXPCEndpoint:(id)arg1;
- (oneway void)setBluetoothAudioFormatForCallWithUniqueProxyIdentifier:(id)arg1 bluetoothAudioFormat:(long long)arg2;
- (void)setCallCenter:(id)arg1;
- (oneway void)setClientCapabilities:(id)arg1;
- (oneway void)setCurrentAudioInputDeviceToDeviceWithUID:(id)arg1;
- (oneway void)setCurrentAudioOutputDeviceToDeviceWithUID:(id)arg1;
- (void)setCurrentCalls:(id)arg1;
- (oneway void)setDownlinkMuted:(bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;
- (void)setHasReceivedInitialState:(bool)arg1;
- (void)setHasRequestedInitialState:(bool)arg1;
- (void)setHasServerLaunched:(bool)arg1;
- (oneway void)setIsSendingVideo:(bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;
- (void)setLastDaemonConnectTime:(id)arg1;
- (void)setLocalProxyCalls:(id)arg1;
- (void)setLocalRouteController:(id)arg1;
- (oneway void)setMixesVoiceWithMedia:(bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;
- (void)setPairedHostDeviceRouteController:(id)arg1;
- (oneway void)setRemoteVideoPresentationSizeForCallWithUniqueProxyIdentifier:(id)arg1 size:(struct CGSize { double x1; double x2; })arg2;
- (oneway void)setRemoteVideoPresentationStateForCallWithUniqueProxyIdentifier:(id)arg1 presentationState:(int)arg2;
- (oneway void)setScreenShareAttributesForCallWithUniqueProxyIdentifier:(id)arg1 attributes:(id)arg2;
- (void)setServer:(id)arg1;
- (oneway void)setSharingScreen:(bool)arg1 attributes:(id)arg2 forCallWithUniqueProxyIdentifier:(id)arg3;
- (oneway void)setSharingScreen:(bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;
- (void)setShouldHandleServerDisconnect:(bool)arg1;
- (oneway void)setTTYType:(int)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;
- (oneway void)setUplinkMuted:(bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;
- (void)setXpcConnection:(id)arg1;
- (oneway void)shouldAllowRingingCallStatusIndicator:(bool)arg1;
- (bool)shouldHandleServerDisconnect;
- (bool)shouldRestrictAddresses:(id)arg1 forBundleIdentifier:(id)arg2 performSynchronously:(bool)arg3;
- (oneway void)shouldSuppressInCallStatusBar:(bool)arg1;
- (void)startTransmissionForBargeCall:(id)arg1 sourceIsHandsfreeAccessory:(bool)arg2;
- (void)stopTransmissionForBargeCall:(id)arg1 sourceIsHandsfreeAccessory:(bool)arg2;
- (oneway void)swapCalls;
- (id)synchronousServerWithErrorHandler:(id /* block */)arg1;
- (void)tearDownXPCConnection;
- (oneway void)ungroupCallWithUniqueProxyIdentifier:(id)arg1;
- (oneway void)unholdCallWithUniqueProxyIdentifier:(id)arg1;
- (id)uniqueProxyIdentifierToProxyCall;
- (oneway void)updateCallWithProxy:(id)arg1;
- (void)waitForInitialStateIfNecessary;
- (oneway void)willEnterBackgroundForAllCalls;
- (bool)willRestrictAddresses:(id)arg1 forBundleIdentifier:(id)arg2;
- (id)xpcConnection;

@end
