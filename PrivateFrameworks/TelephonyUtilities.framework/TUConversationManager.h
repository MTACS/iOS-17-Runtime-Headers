
@interface TUConversationManager : NSObject <TUCollaborationManagerDelegate, TUConversationManagerDataSourceDelegate> {
    NSMutableSet * _callsNotBackedByGroupSessionsPendingUpgrade;
    TUCollaborationManager * _collaborationManager;
    NSMutableSet * _conversationsNotBackedByGroupSessions;
    <TUConversationManagerDataSource> * _dataSource;
    NSMapTable * _delegateToQueue;
    TUConversationMediaController * _mediaController;
    <TUConversationMessagesGroupProviding> * _messagesGroupProvider;
    unsigned long long  _nonSessionBackedConversationCreationMode;
    NSObject<OS_dispatch_queue> * _nonSessionBackedConversationCreationQueue;
    NSNotificationCenter * _notificationCenter;
    NSObject<OS_dispatch_queue> * _queue;
    TUConversationReactionsController * _reactionsController;
    bool  _shouldCreateConversationsForCallsNotBackedByGroupSessions;
}

@property (nonatomic, readonly, copy) NSSet *activatedConversationLinks;
@property (nonatomic, readonly, copy) NSSet *activeConversations;
@property (nonatomic, readonly, copy) NSDictionary *activityAuthorizedBundleIdentifiers;
@property (nonatomic) bool autoSharePlayEnabled;
@property (nonatomic, readonly, copy) TUConversation *avLessConversation;
@property (nonatomic, retain) NSMutableSet *callsNotBackedByGroupSessionsPendingUpgrade;
@property (nonatomic, retain) TUCollaborationManager *collaborationManager;
@property (nonatomic, retain) NSMutableSet *conversationsNotBackedByGroupSessions;
@property (nonatomic, readonly) <TUConversationManagerDataSource> *dataSource;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) NSMapTable *delegateToQueue;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly, copy) TUConversation *handoffEligibleConversation;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, copy) NSSet *incomingPendingConversations;
@property (nonatomic, readonly) TUConversationMediaController *mediaController;
@property (nonatomic) <TUConversationMessagesGroupProviding> *messagesGroupProvider;
@property (nonatomic) unsigned long long nonSessionBackedConversationCreationMode;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *nonSessionBackedConversationCreationQueue;
@property (nonatomic, readonly) NSNotificationCenter *notificationCenter;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, readonly) TUConversationReactionsController *reactionsController;
@property (getter=isScreenSharingAvailable, nonatomic, readonly) bool screenSharingAvailable;
@property (nonatomic, readonly) TUScreenSharingRemoteController *screenSharingRemoteController;
@property (getter=isSharePlayAvailable, nonatomic, readonly) bool sharePlayAvailable;
@property (nonatomic) bool shouldCreateConversationsForCallsNotBackedByGroupSessions;
@property (readonly) Class superclass;

+ (id)activeRemoteParticipantsForCall:(id)arg1 remoteMembers:(id)arg2;
+ (bool)allowsPortraitBlurWhenCaptionsEnabled;
+ (bool)allowsScreenSharing;
+ (bool)allowsScreenSharingWithVideo;
+ (bool)allowsVideo;
+ (long long)conversationStateForCall:(id)arg1;
+ (id)conversationWithPseudonym:(id)arg1 fromConversations:(id)arg2;
+ (id)conversationWithRemoteMembers:(id)arg1 andLink:(id)arg2 fromConversations:(id)arg3;
+ (id)conversationWithRemoteMembers:(id)arg1 andLink:(id)arg2 fromConversations:(id)arg3 matchingVideo:(bool)arg4 backedByGroupSession:(bool)arg5;
+ (id)conversationWithUUID:(id)arg1 fromConversations:(id)arg2;
+ (id)conversationsWithRemoteMembers:(id)arg1 andLink:(id)arg2 fromConversations:(id)arg3;
+ (bool)isAddPersonEnabled;
+ (unsigned long long)maximumNumberOfInvitedMembers;
+ (long long)memorySize;
+ (id)pendingConversationWithLink:(id)arg1 fromConversations:(id)arg2;
+ (id)remoteMembersForCall:(id)arg1;
+ (bool)supportsConversations;
+ (bool)supportsEffects;

- (void).cxx_destruct;
- (void)activateConversationNoticeWithActionURL:(id)arg1 bundleIdentifier:(id)arg2;
- (void)activateLink:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)activatedConversationLinks;
- (id)activeConversationWithGroupUUID:(id)arg1;
- (id)activeConversationWithLinkForCall:(id)arg1;
- (id)activeConversationWithRemoteMembers:(id)arg1 andLink:(id)arg2;
- (id)activeConversationWithRemoteMembers:(id)arg1 andLink:(id)arg2 matchingVideo:(bool)arg3 backedByGroupSession:(bool)arg4;
- (id)activeConversationWithUUID:(id)arg1;
- (id)activeConversations;
- (void)activeParticipant:(id)arg1 addedHighlightToConversation:(id)arg2 highlightIdentifier:(id)arg3 oldHighlightIdentifier:(id)arg4 isFirstAdd:(bool)arg5;
- (void)activeParticipant:(id)arg1 removedHighlightFromConversation:(id)arg2 highlightIdentifier:(id)arg3;
- (void)activityAuthorizationsChangedForDataSource:(id)arg1 oldActivityAuthorizedBundleIdentifiers:(id)arg2;
- (id)activityAuthorizedBundleIdentifiers;
- (void)addCollaboration:(id)arg1 forConversation:(id)arg2;
- (void)addCollaborationDictionary:(id)arg1 forConversation:(id)arg2 fromMe:(bool)arg3;
- (void)addCollaborationIdentifier:(id)arg1 forConversation:(id)arg2;
- (void)addDelegate:(id)arg1 queue:(id)arg2;
- (void)addDisclosedCollaborationInitiator:(id)arg1 toConversationUUID:(id)arg2;
- (void)addInvitedMemberHandles:(id)arg1 toConversationLink:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)addRemoteMembers:(id)arg1 otherInvitedHandles:(id)arg2 toConversation:(id)arg3;
- (void)addRemoteMembers:(id)arg1 toConversation:(id)arg2;
- (void)addedCollaborationDictionary:(id)arg1 forConversation:(id)arg2;
- (void)approvePendingMember:(id)arg1 forConversation:(id)arg2;
- (bool)autoSharePlayEnabled;
- (id)avLessConversation;
- (void)buzzMember:(id)arg1 conversation:(id)arg2;
- (id)callPendingUpgradeInConversationsWithGroupUUID:(id)arg1;
- (void)callPropertiesChanged:(id)arg1;
- (id)callsNotBackedByGroupSessionsPendingUpgrade;
- (void)checkLinkValidity:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)ckBundleIDForCollaborationIdentifier:(id)arg1;
- (void)collaborationChanged:(id)arg1 forConversation:(id)arg2 collaborationState:(long long)arg3;
- (id)collaborationForConversation:(id)arg1;
- (id)collaborationManager;
- (long long)collaborationStateForConversation:(id)arg1;
- (void)conversation:(id)arg1 addedMembersLocally:(id)arg2;
- (void)conversation:(id)arg1 buzzedMember:(id)arg2;
- (void)conversation:(id)arg1 collaborationStateChanged:(long long)arg2 highlightIdentifier:(id)arg3;
- (void)conversation:(id)arg1 didChangeSceneAssociationForActivitySession:(id)arg2;
- (void)conversation:(id)arg1 didChangeStateForActivitySession:(id)arg2;
- (void)conversation:(id)arg1 participant:(id)arg2 addedCollaborationNotice:(id)arg3;
- (void)conversation:(id)arg1 participant:(id)arg2 addedNotice:(id)arg3;
- (void)conversation:(id)arg1 receivedActivitySessionEvent:(id)arg2;
- (void)conversation:(id)arg1 screenSharingChangedForParticipant:(id)arg2;
- (void)conversationManagerDataSource:(id)arg1 conversation:(id)arg2 appLaunchState:(unsigned long long)arg3 forActivitySession:(id)arg4;
- (void)conversationManagerDataSource:(id)arg1 didChangeActivatedConversationLinks:(id)arg2;
- (void)conversationManagerDataSource:(id)arg1 messagesGroupDetailsForMessagesGroupId:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)conversationUpdateMessagesGroupPhoto:(id)arg1;
- (void)conversationUpdatedMessagesGroupPhoto:(id)arg1;
- (void)conversationsChangedForDataSource:(id)arg1 conversationsByGroupUUID:(id)arg2 oldConversationsByGroupUUID:(id)arg3;
- (void)conversationsChangedForDataSource:(id)arg1 oldConversationsByGroupUUID:(id)arg2 newConversationsByGroupUUID:(id)arg3 creationQueue:(id)arg4;
- (void)conversationsChangedForDataSource:(id)arg1 updatedIncomingPendingConversationsByGroupUUID:(id)arg2;
- (void)conversationsChangedFromOldConversationsByGroupUUID:(id)arg1 newConversationsByGroupUUID:(id)arg2;
- (id)conversationsNotBackedByGroupSessions;
- (void)createActivitySession:(id)arg1 onConversation:(id)arg2;
- (id)createConversationForCallNotBackedByGroupSession:(id)arg1;
- (bool)currentProcessCanAccessCollaborations;
- (id)dataSource;
- (void)dealloc;
- (id)delegateToQueue;
- (void)endActivitySession:(id)arg1 onConversation:(id)arg2;
- (void)fetchUpcomingNoticeWithCompletionHandler:(id /* block */)arg1;
- (void)generateLinkForConversation:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)generateLinkWithInvitedMemberHandles:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)generateLinkWithInvitedMemberHandles:(id)arg1 linkLifetimeScope:(long long)arg2 completionHandler:(id /* block */)arg3;
- (void)getActiveLinksWithCreatedOnly:(bool)arg1 completionHandler:(id /* block */)arg2;
- (void)getInactiveLinkWithCompletionHandler:(id /* block */)arg1;
- (void)getLatestRemoteScreenShareAttributesWithCompletionHandler:(id /* block */)arg1;
- (void)getMessagesGroupDetailsForConversationUUID:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)getNeedsDisclosureOfCollaborationInitiator:(id)arg1 forConversationUUID:(id)arg2 completionHandler:(id /* block */)arg3;
- (id)handoffEligibleConversation;
- (id)handoffEligibleConversationForEligibility:(id)arg1;
- (id)incomingPendingConversations;
- (id)init;
- (id)initWithDataSource:(id)arg1;
- (id)initWithDataSource:(id)arg1 notificationCenter:(id)arg2;
- (void)invalidateLink:(id)arg1 completionHandler:(id /* block */)arg2;
- (bool)isScreenSharingAvailable;
- (bool)isSharePlayAvailable;
- (void)joinConversationWithRequest:(id)arg1;
- (id)joinRequestForApplicableConversationWithHandoffEligibility:(id)arg1;
- (void)kickMember:(id)arg1 conversation:(id)arg2;
- (void)launchApplicationForActivitySession:(id)arg1 authorizedExternally:(bool)arg2 completionHandler:(id /* block */)arg3;
- (void)launchApplicationForActivitySession:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)launchApplicationForActivitySessionUUID:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)launchApplicationForActivitySessionUUID:(id)arg1 forceBackground:(bool)arg2 completionHandler:(id /* block */)arg3;
- (void)leaveActivitySession:(id)arg1 onConversation:(id)arg2;
- (void)leaveConversationWithUUID:(id)arg1;
- (void)linkSyncStateIncludeLinks:(bool)arg1 WithCompletion:(id /* block */)arg2;
- (id)mediaController;
- (id)messagesGroupProvider;
- (unsigned long long)nonSessionBackedConversationCreationMode;
- (id)nonSessionBackedConversationCreationQueue;
- (id)notificationCenter;
- (bool)openCollaborationWithIdentifier:(id)arg1 forConversation:(id)arg2;
- (id)pendingConversationWithLink:(id)arg1;
- (void)prepareConversationWithUUID:(id)arg1 withHandoffContext:(id)arg2;
- (void)presentDismissalAlertForActivitySession:(id)arg1 onConversation:(id)arg2;
- (void)pruneConversationsPendingUpgradeInConversationsWithGroupUUID:(id)arg1;
- (id)queue;
- (id)reactionsController;
- (void)receivedTrackedPendingMember:(id)arg1 forConversationLink:(id)arg2;
- (void)refreshActiveConversations;
- (void)registerMessagesGroupUUIDForConversationUUID:(id)arg1;
- (void)registerWithCompletionHandler:(id /* block */)arg1;
- (void)rejectPendingMember:(id)arg1 forConversation:(id)arg2;
- (void)remoteScreenShareAttributesChanged:(id)arg1 isLocallySharing:(bool)arg2;
- (void)remoteScreenShareEndedWithReason:(id)arg1;
- (void)removeCollaborationIdentifier:(id)arg1 forConversation:(id)arg2;
- (void)removeConversationNoticeWithUUID:(id)arg1;
- (void)removeDelegate:(id)arg1;
- (void)renewLink:(id)arg1 expirationDate:(id)arg2 reason:(unsigned long long)arg3 completionHandler:(id /* block */)arg4;
- (void)requestScreenShareFromMember:(id)arg1 conversation:(id)arg2;
- (void)scheduleConversationLinkCheckInInitial:(bool)arg1;
- (void)screenSharingAvailableChanged:(bool)arg1;
- (id)screenSharingRemoteController;
- (void)serverDisconnectedForDataSource:(id)arg1 oldConversationsByGroupUUID:(id)arg2;
- (void)setActivityAuthorization:(bool)arg1 forBundleIdentifier:(id)arg2;
- (void)setAutoSharePlayEnabled:(bool)arg1;
- (void)setCallsNotBackedByGroupSessionsPendingUpgrade:(id)arg1;
- (void)setCollaborationManager:(id)arg1;
- (void)setConversationsNotBackedByGroupSessions:(id)arg1;
- (void)setDownlinkMuted:(bool)arg1 forRemoteParticipantsInConversation:(id)arg2;
- (void)setGridDisplayMode:(unsigned long long)arg1 conversation:(id)arg2;
- (void)setIgnoreLMIRequests:(bool)arg1 forConversation:(id)arg2;
- (void)setLinkName:(id)arg1 forConversationLink:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)setLocalParticipantAudioVideoMode:(unsigned long long)arg1 forConversationUUID:(id)arg2;
- (void)setMessagesGroupProvider:(id)arg1;
- (void)setNonSessionBackedConversationCreationMode:(unsigned long long)arg1;
- (void)setNonSessionBackedConversationCreationQueue:(id)arg1;
- (void)setScreenEnabled:(bool)arg1 withScreenShareAttributes:(id)arg2 forConversationWithUUID:(id)arg3;
- (void)setSharePlayHandedOff:(bool)arg1 onConversationWithUUID:(id)arg2;
- (void)setShouldCreateConversationsForCallsNotBackedByGroupSessions:(bool)arg1;
- (void)setUsingAirplay:(bool)arg1 onActivitySession:(id)arg2 onConversation:(id)arg3;
- (void)sharePlayAvailableChanged:(bool)arg1;
- (bool)shouldCreateConversationsForCallsNotBackedByGroupSessions;
- (void)startTrackingCollaboration:(id)arg1 forConversation:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)updateConversationsNotBackedByGroupSessionWithCall:(id)arg1;
- (void)updateConversationsNotBackedByGroupSessionWithCall:(id)arg1 conversationsByGroupUUID:(id)arg2 creationQueue:(id)arg3;
- (void)updateLocalParticipantToAVLessWithPresentationMode:(unsigned long long)arg1 forConversationUUID:(id)arg2;
- (void)updateMessagesGroupName:(id)arg1 onConversation:(id)arg2;
- (void)updateURLWithDugongTokenIfNeeded:(id)arg1 collaboration:(id)arg2 handle:(id)arg3 completion:(id /* block */)arg4;

@end
