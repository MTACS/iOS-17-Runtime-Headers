
@interface TUConversation : NSObject <NSCopying, NSSecureCoding> {
    NSUUID * _UUID;
    NSSet * _activeLightweightParticipants;
    NSSet * _activeRemoteParticipants;
    NSSet * _activitySessions;
    bool  _audioEnabled;
    unsigned long long  _avMode;
    NSString * _avcSessionIdentifier;
    long long  _avcSessionToken;
    bool  _backedByGroupSession;
    bool  _cameraMixedWithScreen;
    id  _conversationFailureContext;
    bool  _endpointOnCurrentDevice;
    <TUFeatureFlags> * _featureFlags;
    bool  _fromStorage;
    NSUUID * _groupUUID;
    TUConversationHandoffContext * _handoffContext;
    TUConversationHandoffEligibility * _handoffEligibility;
    bool  _hasJoined;
    bool  _hasReceivedLetMeInRequest;
    NSSet * _highlightIdentifiers;
    bool  _hostedOnCurrentDevice;
    bool  _ignoreLMIRequests;
    TUHandle * _initiator;
    NSSet * _invitationPreferences;
    bool  _isAnyOtherAccountDeviceActive;
    NSSet * _kickedMembers;
    long long  _letMeInRequestState;
    NSSet * _lightweightMembers;
    TUConversationLink * _link;
    TUConversationMember * _localMember;
    TUConversationParticipantAssociation * _localParticipantAssociation;
    unsigned long long  _localParticipantIdentifier;
    bool  _locallyCreated;
    long long  _maxVideoDecodesAllowed;
    NSString * _messagesGroupName;
    NSUUID * _messagesGroupUUID;
    bool  _oneToOneHandoffOngoing;
    bool  _oneToOneModeEnabled;
    NSSet * _otherInvitedHandles;
    NSSet * _participantHandles;
    bool  _pendingConversation;
    NSSet * _pendingMembers;
    unsigned long long  _presentationMode;
    TUConversationProvider * _provider;
    NSSet * _rejectedMembers;
    NSSet * _remoteMembers;
    TUConversationReport * _report;
    NSObject * _reportingHierarchySubToken;
    NSObject * _reportingHierarchyToken;
    bool  _screenEnabled;
    bool  _screening;
    NSUUID * _selectiveSharingSessionUUID;
    bool  _spatialPersonaEnabled;
    TUConversationActivitySession * _stagedActivitySession;
    long long  _state;
    NSArray * _supportedMediaTypes;
    NSSet * _systemActivitySessions;
    bool  _videoEnabled;
    bool  _videoPaused;
    NSSet * _virtualParticipants;
}

@property (nonatomic, retain) NSUUID *UUID;
@property (nonatomic, copy) NSSet *activeLightweightParticipants;
@property (nonatomic, copy) NSSet *activeRemoteParticipants;
@property (nonatomic, copy) NSSet *activitySessions;
@property (getter=isAudioEnabled, nonatomic) bool audioEnabled;
@property (nonatomic) unsigned long long avMode;
@property (nonatomic, copy) NSString *avcSessionIdentifier;
@property (nonatomic) long long avcSessionToken;
@property (getter=isBackedByGroupSession, nonatomic) bool backedByGroupSession;
@property (getter=isCameraMixedWithScreen, nonatomic) bool cameraMixedWithScreen;
@property (nonatomic, retain) id conversationFailureContext;
@property (nonatomic) bool endpointOnCurrentDevice;
@property (nonatomic, retain) <TUFeatureFlags> *featureFlags;
@property (getter=isFromStorage, nonatomic) bool fromStorage;
@property (nonatomic, retain) NSUUID *groupUUID;
@property (nonatomic, retain) TUConversationHandoffContext *handoffContext;
@property (nonatomic, retain) TUConversationHandoffEligibility *handoffEligibility;
@property (getter=hasJoined, nonatomic) bool hasJoined;
@property (nonatomic) bool hasReceivedLetMeInRequest;
@property (nonatomic, copy) NSSet *highlightIdentifiers;
@property (nonatomic) bool hostedOnCurrentDevice;
@property (nonatomic) bool ignoreLMIRequests;
@property (nonatomic, retain) TUHandle *initiator;
@property (nonatomic, copy) NSSet *invitationPreferences;
@property (nonatomic) bool isAnyOtherAccountDeviceActive;
@property (nonatomic, copy) NSSet *kickedMembers;
@property (nonatomic) long long letMeInRequestState;
@property (nonatomic, copy) NSSet *lightweightMembers;
@property (nonatomic, retain) TUConversationLink *link;
@property (nonatomic, retain) TUConversationMember *localMember;
@property (nonatomic, retain) TUConversationParticipantAssociation *localParticipantAssociation;
@property (nonatomic) unsigned long long localParticipantIdentifier;
@property (getter=isLocallyCreated, nonatomic) bool locallyCreated;
@property (nonatomic) long long maxVideoDecodesAllowed;
@property (nonatomic, readonly, copy) NSSet *mergedActiveRemoteParticipants;
@property (nonatomic, readonly, copy) NSSet *mergedRemoteMembers;
@property (nonatomic, copy) NSString *messagesGroupName;
@property (nonatomic, retain) NSUUID *messagesGroupUUID;
@property (getter=isMirageBehaviorEnabled, nonatomic, readonly) bool mirageBehaviorEnabled;
@property (getter=isOneToOneHandoffOngoing, nonatomic) bool oneToOneHandoffOngoing;
@property (getter=isOneToOneModeEnabled, nonatomic) bool oneToOneModeEnabled;
@property (nonatomic, copy) NSSet *otherInvitedHandles;
@property (nonatomic, copy) NSSet *participantHandles;
@property (getter=isPendingConversation, nonatomic) bool pendingConversation;
@property (nonatomic, copy) NSSet *pendingMembers;
@property (nonatomic, readonly) TUConversationPresentationContext *presentationContext;
@property (nonatomic) unsigned long long presentationMode;
@property (nonatomic, retain) TUConversationProvider *provider;
@property (nonatomic, copy) NSSet *rejectedMembers;
@property (nonatomic, copy) NSSet *remoteMembers;
@property (nonatomic, copy) TUConversationReport *report;
@property (nonatomic, retain) NSObject *reportingHierarchySubToken;
@property (nonatomic, retain) NSObject *reportingHierarchyToken;
@property (nonatomic, readonly) unsigned long long resolvedAudioVideoMode;
@property (getter=isScreenEnabled, nonatomic) bool screenEnabled;
@property (getter=isScreening, nonatomic) bool screening;
@property (nonatomic, retain) NSUUID *selectiveSharingSessionUUID;
@property (getter=isSpatialPersonaEnabled, nonatomic) bool spatialPersonaEnabled;
@property (nonatomic, copy) TUConversationActivitySession *stagedActivitySession;
@property (nonatomic) long long state;
@property (nonatomic, copy) NSArray *supportedMediaTypes;
@property (nonatomic, copy) NSSet *systemActivitySessions;
@property (getter=isVideoEnabled, nonatomic) bool videoEnabled;
@property (getter=isVideoPaused, nonatomic) bool videoPaused;
@property (nonatomic, copy) NSSet *virtualParticipants;

// Image: /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities

+ (id)emptyConversationWithGroupUUID:(id)arg1;
+ (id)mergedRemoteMemberHandlesFromRemoteMembers:(id)arg1 withLocalMember:(id)arg2 removingLocallyAssociatedMember:(bool)arg3;
+ (id)mergedRemoteMembers:(id)arg1 withLocalMember:(id)arg2 removingLocallyAssociatedMember:(bool)arg3;
+ (id)numberFormatter;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)UUID;
- (id)activeLightweightParticipants;
- (id)activeRemoteParticipants;
- (id)activitySessions;
- (unsigned long long)avMode;
- (id)avcSessionIdentifier;
- (long long)avcSessionToken;
- (id)bundleIdentifier;
- (id)contactNamesByHandleWithContactsDataSource:(id)arg1;
- (id)conversationFailureContext;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)displayName;
- (bool)eligibleForDowngradeToAVModeNoneFromUI;
- (void)encodeWithCoder:(id)arg1;
- (bool)endpointOnCurrentDevice;
- (id)featureFlags;
- (id)groupUUID;
- (id)handles;
- (id)handoffContext;
- (id)handoffEligibility;
- (bool)hasJoined;
- (bool)hasJoinedActivitySession;
- (bool)hasReceivedLetMeInRequest;
- (unsigned long long)hash;
- (id)highlightIdentifiers;
- (bool)hostedOnCurrentDevice;
- (bool)ignoreLMIRequests;
- (id)initWithCoder:(id)arg1;
- (id)initWithConversation:(id)arg1;
- (id)initWithUUID:(id)arg1 groupUUID:(id)arg2;
- (id)initWithUUID:(id)arg1 groupUUID:(id)arg2 provider:(id)arg3;
- (id)initiator;
- (id)invitationPreferences;
- (bool)isAnyOtherAccountDeviceActive;
- (bool)isAudioEnabled;
- (bool)isBackedByGroupSession;
- (bool)isCameraMixedWithScreen;
- (bool)isEqual:(id)arg1;
- (bool)isEqualToConversation:(id)arg1;
- (bool)isFromStorage;
- (bool)isLocallyCreated;
- (bool)isMirageBehaviorEnabled;
- (bool)isOneToOneHandoffOngoing;
- (bool)isOneToOneModeEnabled;
- (bool)isPendingConversation;
- (bool)isRepresentedByRemoteMembers:(id)arg1 andLink:(id)arg2;
- (bool)isScreenEnabled;
- (bool)isScreening;
- (bool)isSpatialPersonaEnabled;
- (bool)isVideo;
- (bool)isVideoEnabled;
- (bool)isVideoPaused;
- (id)joinedActivitySession;
- (id)kickedMembers;
- (long long)letMeInRequestState;
- (id)lightweightMembers;
- (id)link;
- (id)localMember;
- (id)localParticipantAssociation;
- (unsigned long long)localParticipantIdentifier;
- (long long)maxVideoDecodesAllowed;
- (id)mergedActiveRemoteParticipants;
- (id)mergedRemoteMembers;
- (id)messagesGroupName;
- (id)messagesGroupPhotoData;
- (id)messagesGroupUUID;
- (id)mutableCopyWithZone:(struct _NSZone { }*)arg1;
- (id)otherInvitedHandles;
- (id)participantHandles;
- (id)pendingMembers;
- (id)presentationContext;
- (unsigned long long)presentationMode;
- (id)provider;
- (id)rejectedMembers;
- (id)remoteMembers;
- (id)remoteParticipantForLightweightParticipantHandle:(id)arg1;
- (id)report;
- (id)reportingHierarchySubToken;
- (id)reportingHierarchyToken;
- (unsigned long long)resolvedAudioVideoMode;
- (id)selectiveSharingSessionUUID;
- (void)setActiveLightweightParticipants:(id)arg1;
- (void)setActiveRemoteParticipants:(id)arg1;
- (void)setActivitySessions:(id)arg1;
- (void)setAudioEnabled:(bool)arg1;
- (void)setAvMode:(unsigned long long)arg1;
- (void)setAvcSessionIdentifier:(id)arg1;
- (void)setAvcSessionToken:(long long)arg1;
- (void)setBackedByGroupSession:(bool)arg1;
- (void)setCameraMixedWithScreen:(bool)arg1;
- (void)setConversationFailureContext:(id)arg1;
- (void)setEndpointOnCurrentDevice:(bool)arg1;
- (void)setFeatureFlags:(id)arg1;
- (void)setFromStorage:(bool)arg1;
- (void)setGroupUUID:(id)arg1;
- (void)setHandoffContext:(id)arg1;
- (void)setHandoffEligibility:(id)arg1;
- (void)setHasJoined:(bool)arg1;
- (void)setHasReceivedLetMeInRequest:(bool)arg1;
- (void)setHighlightIdentifiers:(id)arg1;
- (void)setHostedOnCurrentDevice:(bool)arg1;
- (void)setIgnoreLMIRequests:(bool)arg1;
- (void)setInitiator:(id)arg1;
- (void)setInvitationPreferences:(id)arg1;
- (void)setIsAnyOtherAccountDeviceActive:(bool)arg1;
- (void)setKickedMembers:(id)arg1;
- (void)setLetMeInRequestState:(long long)arg1;
- (void)setLightweightMembers:(id)arg1;
- (void)setLink:(id)arg1;
- (void)setLocalMember:(id)arg1;
- (void)setLocalParticipantAssociation:(id)arg1;
- (void)setLocalParticipantIdentifier:(unsigned long long)arg1;
- (void)setLocallyCreated:(bool)arg1;
- (void)setMaxVideoDecodesAllowed:(long long)arg1;
- (void)setMessagesGroupName:(id)arg1;
- (void)setMessagesGroupUUID:(id)arg1;
- (void)setOneToOneHandoffOngoing:(bool)arg1;
- (void)setOneToOneModeEnabled:(bool)arg1;
- (void)setOtherInvitedHandles:(id)arg1;
- (void)setParticipantHandles:(id)arg1;
- (void)setPendingConversation:(bool)arg1;
- (void)setPendingMembers:(id)arg1;
- (void)setPresentationMode:(unsigned long long)arg1;
- (void)setProvider:(id)arg1;
- (void)setRejectedMembers:(id)arg1;
- (void)setRemoteMembers:(id)arg1;
- (void)setReport:(id)arg1;
- (void)setReportingHierarchySubToken:(id)arg1;
- (void)setReportingHierarchyToken:(id)arg1;
- (void)setScreenEnabled:(bool)arg1;
- (void)setScreening:(bool)arg1;
- (void)setSelectiveSharingSessionUUID:(id)arg1;
- (void)setSpatialPersonaEnabled:(bool)arg1;
- (void)setStagedActivitySession:(id)arg1;
- (void)setState:(long long)arg1;
- (void)setSupportedMediaTypes:(id)arg1;
- (void)setSystemActivitySessions:(id)arg1;
- (void)setUUID:(id)arg1;
- (void)setVideo:(bool)arg1;
- (void)setVideoEnabled:(bool)arg1;
- (void)setVideoPaused:(bool)arg1;
- (void)setVirtualParticipants:(id)arg1;
- (bool)shouldShowInvitationOfStyles:(long long)arg1 forHandle:(id)arg2 defaultValue:(bool)arg3;
- (bool)shouldShowInvitationRingingUIForAnyHandleType;
- (bool)shouldShowInvitationRingingUIForHandle:(id)arg1;
- (bool)shouldShowInvitationUserNotificationForHandle:(id)arg1;
- (id)stagedActivitySession;
- (long long)state;
- (id)supportedMediaTypes;
- (bool)supportsAVMode:(unsigned long long)arg1;
- (bool)supportsMediaType:(long long)arg1;
- (id)systemActivitySessions;
- (void)updateParticipantMediaPrioritiesWithConversation:(id)arg1;
- (void)updatePresentationModeIfNecessary;
- (id)virtualParticipants;

// Image: /System/Library/PrivateFrameworks/IMCore.framework/IMCore

- (id)remoteMemberHandleStrings;

// Image: /System/Library/PrivateFrameworks/IMDaemonCore.framework/IMDaemonCore

- (id)__im_filteredRemoteMembers;

@end
