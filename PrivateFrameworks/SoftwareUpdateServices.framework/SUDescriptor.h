
@interface SUDescriptor : NSObject <NSCopying, NSSecureCoding> {
    NSString * _assetID;
    unsigned long long  _audienceType;
    bool  _autoDownloadAllowableForCellular;
    bool  _autoUpdateEnabled;
    NSString * _criticalDownloadPolicy;
    bool  _criticalOutOfBoxOnly;
    bool  _disableAppDemotion;
    bool  _disableCDLevel4;
    bool  _disableIntallTonight;
    bool  _disableSiriVoiceDeletion;
    SUDocumentation * _documentation;
    bool  _downloadAllowableForCellular;
    unsigned long long  _downloadSize;
    bool  _downloadable;
    bool  _downloadableOverCellular;
    bool  _forcePasscodeRequired;
    bool  _hideInstallAlert;
    NSString * _humanReadableUpdateName;
    unsigned long long  _installationSize;
    bool  _isSplatOnly;
    bool  _mandatoryUpdateEligible;
    bool  _mandatoryUpdateOptional;
    bool  _mandatoryUpdateRestrictedToOutOfTheBox;
    NSString * _mandatoryUpdateVersionMax;
    NSString * _mandatoryUpdateVersionMin;
    unsigned long long  _mdmDelayInterval;
    unsigned long long  _minimumSystemPartitionSize;
    unsigned long long  _msuPrepareSize;
    unsigned long long  _preferenceType;
    NSString * _prerequisiteBuild;
    NSString * _prerequisiteOS;
    NSString * _productBuildVersion;
    NSString * _productSystemName;
    NSString * _productVersion;
    NSString * _productVersionExtra;
    bool  _promoteAlternateUpdate;
    NSString * _publisher;
    bool  _rampEnabled;
    NSDate * _releaseDate;
    NSString * _releaseType;
    NSData * _rsepDigest;
    NSData * _rsepTBMDigest;
    NSData * _sepDigest;
    NSData * _sepTBMDigest;
    NSString * _setupCritical;
    bool  _streamingZipCapable;
    NSDictionary * _systemPartitionPadding;
    unsigned long long  _unarchiveSize;
    int  _updateType;
    unsigned long long  _upgradeType;
}

@property (nonatomic, retain) NSString *assetID;
@property (nonatomic) unsigned long long audienceType;
@property (nonatomic) bool autoDownloadAllowableForCellular;
@property (nonatomic) bool autoUpdateEnabled;
@property (nonatomic, retain) NSString *criticalDownloadPolicy;
@property (nonatomic) bool criticalOutOfBoxOnly;
@property (getter=appDemotionDisabled, setter=_setDisableAppDemotion:, nonatomic) bool disableAppDemotion;
@property (getter=cdLevel4Disabled, setter=_setDisableCDLevel4:, nonatomic) bool disableCDLevel4;
@property (getter=installTonightDisabled, setter=_setDisableInstallTonight:, nonatomic) bool disableInstallTonight;
@property (getter=siriVoiceDeletionDisabled, setter=_setDisableSiriVoiceDeletion:, nonatomic) bool disableSiriVoiceDeletion;
@property (nonatomic, retain) SUDocumentation *documentation;
@property (nonatomic) unsigned long long downloadSize;
@property (getter=isDownloadable, nonatomic) bool downloadable;
@property (getter=isDownloadableOverCellular, nonatomic) bool downloadableOverCellular;
@property (nonatomic) bool forcePasscodeRequired;
@property (nonatomic) bool hideInstallAlert;
@property (nonatomic, retain) NSString *humanReadableUpdateName;
@property (nonatomic) unsigned long long installationSize;
@property (nonatomic) bool isSplatOnly;
@property (nonatomic) bool mandatoryUpdateEligible;
@property (nonatomic) bool mandatoryUpdateOptional;
@property (nonatomic) bool mandatoryUpdateRestrictedToOutOfTheBox;
@property (nonatomic, retain) NSString *mandatoryUpdateVersionMax;
@property (nonatomic, retain) NSString *mandatoryUpdateVersionMin;
@property (nonatomic) unsigned long long mdmDelayInterval;
@property (nonatomic) unsigned long long minimumSystemPartitionSize;
@property (getter=_msuPrepareSize, setter=_setMsuPrepareSize:, nonatomic) unsigned long long msuPrepareSize;
@property (nonatomic) unsigned long long preferenceType;
@property (nonatomic, retain) NSString *prerequisiteBuild;
@property (nonatomic, retain) NSString *prerequisiteOS;
@property (nonatomic, retain) NSString *productBuildVersion;
@property (nonatomic, retain) NSString *productSystemName;
@property (nonatomic, retain) NSString *productVersion;
@property (nonatomic, retain) NSString *productVersionExtra;
@property (nonatomic) bool promoteAlternateUpdate;
@property (nonatomic, retain) NSString *publisher;
@property (nonatomic) bool rampEnabled;
@property (nonatomic, retain) NSDate *releaseDate;
@property (nonatomic, retain) NSString *releaseType;
@property (setter=setRSEPDigest:, nonatomic, retain) NSData *rsepDigest;
@property (setter=setRSEPTBMDigest:, nonatomic, retain) NSData *rsepTBMDigest;
@property (setter=setSEPDigest:, nonatomic, retain) NSData *sepDigest;
@property (setter=setSEPTBMDigest:, nonatomic, retain) NSData *sepTBMDigest;
@property (nonatomic, retain) NSString *setupCritical;
@property (getter=_isStreamingZipCapable, setter=_setStreamingZipCapable:, nonatomic) bool streamingZipCapable;
@property (nonatomic, retain) NSDictionary *systemPartitionPadding;
@property (getter=_unarchiveSize, setter=_setUnarchiveSize:, nonatomic) unsigned long long unarchiveSize;
@property (nonatomic) int updateType;
@property (nonatomic) unsigned long long upgradeType;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)_buildCompareKey;
- (bool)_hasValue:(id)arg1;
- (bool)_isStreamingZipCapable;
- (unsigned long long)_msuPrepareSize;
- (void)_setDisableAppDemotion:(bool)arg1;
- (void)_setDisableCDLevel4:(bool)arg1;
- (void)_setDisableInstallTonight:(bool)arg1;
- (void)_setDisableSiriVoiceDeletion:(bool)arg1;
- (void)_setMsuPrepareSize:(unsigned long long)arg1;
- (void)_setStreamingZipCapable:(bool)arg1;
- (void)_setUnarchiveSize:(unsigned long long)arg1;
- (unsigned long long)_unarchiveSize;
- (bool)appDemotionDisabled;
- (id)assetID;
- (unsigned long long)audienceType;
- (bool)autoDownloadAllowableForCellular;
- (bool)autoUpdateEnabled;
- (bool)cdLevel4Disabled;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)criticalDownloadPolicy;
- (bool)criticalOutOfBoxOnly;
- (id)description;
- (id)documentation;
- (unsigned long long)downloadSize;
- (void)encodeWithCoder:(id)arg1;
- (bool)forcePasscodeRequired;
- (unsigned long long)hash;
- (bool)hideInstallAlert;
- (id)humanReadableUpdateName;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (bool)installTonightDisabled;
- (unsigned long long)installationSize;
- (bool)isDownloadable;
- (bool)isDownloadableOverCellular;
- (bool)isEmergencyOrCritical;
- (bool)isEqual:(id)arg1;
- (bool)isSplatOnly;
- (bool)isValidDescriptor;
- (bool)mandatoryUpdateEligible;
- (bool)mandatoryUpdateOptional;
- (bool)mandatoryUpdateRestrictedToOutOfTheBox;
- (id)mandatoryUpdateVersionMax;
- (id)mandatoryUpdateVersionMin;
- (unsigned long long)mdmDelayInterval;
- (unsigned long long)minimumSystemPartitionSize;
- (unsigned long long)preferenceType;
- (unsigned long long)preparationSize;
- (id)prerequisiteBuild;
- (id)prerequisiteOS;
- (id)productBuildVersion;
- (id)productSystemName;
- (id)productVersion;
- (id)productVersionExtra;
- (bool)promoteAlternateUpdate;
- (id)publisher;
- (bool)rampEnabled;
- (id)releaseDate;
- (id)releaseType;
- (id)rsepDigest;
- (id)rsepTBMDigest;
- (id)sepDigest;
- (id)sepTBMDigest;
- (void)setAssetID:(id)arg1;
- (void)setAudienceType:(unsigned long long)arg1;
- (void)setAutoDownloadAllowableForCellular:(bool)arg1;
- (void)setAutoUpdateEnabled:(bool)arg1;
- (void)setCriticalDownloadPolicy:(id)arg1;
- (void)setCriticalOutOfBoxOnly:(bool)arg1;
- (void)setDocumentation:(id)arg1;
- (void)setDownloadSize:(unsigned long long)arg1;
- (void)setDownloadable:(bool)arg1;
- (void)setDownloadableOverCellular:(bool)arg1;
- (void)setForcePasscodeRequired:(bool)arg1;
- (void)setHideInstallAlert:(bool)arg1;
- (void)setHumanReadableUpdateName:(id)arg1;
- (void)setInstallationSize:(unsigned long long)arg1;
- (void)setIsSplatOnly:(bool)arg1;
- (void)setMandatoryUpdateEligible:(bool)arg1;
- (void)setMandatoryUpdateOptional:(bool)arg1;
- (void)setMandatoryUpdateRestrictedToOutOfTheBox:(bool)arg1;
- (void)setMandatoryUpdateVersionMax:(id)arg1;
- (void)setMandatoryUpdateVersionMin:(id)arg1;
- (void)setMdmDelayInterval:(unsigned long long)arg1;
- (void)setMinimumSystemPartitionSize:(unsigned long long)arg1;
- (void)setPreferenceType:(unsigned long long)arg1;
- (void)setPrerequisiteBuild:(id)arg1;
- (void)setPrerequisiteOS:(id)arg1;
- (void)setProductBuildVersion:(id)arg1;
- (void)setProductSystemName:(id)arg1;
- (void)setProductVersion:(id)arg1;
- (void)setProductVersionExtra:(id)arg1;
- (void)setPromoteAlternateUpdate:(bool)arg1;
- (void)setPublisher:(id)arg1;
- (void)setRSEPDigest:(id)arg1;
- (void)setRSEPTBMDigest:(id)arg1;
- (void)setRampEnabled:(bool)arg1;
- (void)setReleaseDate:(id)arg1;
- (void)setReleaseType:(id)arg1;
- (void)setSEPDigest:(id)arg1;
- (void)setSEPTBMDigest:(id)arg1;
- (void)setSetupCritical:(id)arg1;
- (void)setSystemPartitionPadding:(id)arg1;
- (void)setUpdateType:(int)arg1;
- (void)setUpgradeType:(unsigned long long)arg1;
- (id)setupCritical;
- (bool)siriVoiceDeletionDisabled;
- (id)systemPartitionPadding;
- (unsigned long long)totalRequiredFreeSpace;
- (int)updateType;
- (id)updateTypeName;
- (unsigned long long)upgradeType;

@end
