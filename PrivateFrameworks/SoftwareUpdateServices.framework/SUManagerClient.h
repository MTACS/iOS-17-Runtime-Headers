
@interface SUManagerClient : NSObject <SUCoreDDMControllerProtocol, SUInstallationConstraintObserverDelegate, SUManagerClientInterface, SUPreferencesObserver> {
    int  _clientType;
    bool  _connected;
    <SUManagerClientDelegate> * _delegate;
    SUDescriptor * _installDescriptor;
    NSMutableDictionary * _installOperationIDsToOperationHandler;
    NSMutableSet * _installationConstraintObservers;
    bool  _installing;
    NSObject<OS_dispatch_queue> * _queue;
    SUDescriptor * _scanDescriptor;
    NSXPCConnection * _serverConnection;
    bool  _serverIsExiting;
}

@property (nonatomic) int clientType;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <SUManagerClientDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) SUDescriptor *installDescriptor;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, retain) SUDescriptor *scanDescriptor;
@property (readonly) Class superclass;

+ (bool)_isMultiUserAppleId;
+ (bool)_shouldDisallowAvailabilityNotifications;

- (void).cxx_destruct;
- (id)_bundleIdentifier;
- (void)_cancelAutoInstallOperation:(id)arg1 withResult:(id /* block */)arg2;
- (void)_consentAutoInstallOperation:(id)arg1 withResult:(id /* block */)arg2;
- (id)_getExistingAutoInstallOperationFromModel:(id)arg1;
- (void)_invalidateAllInstallationConstraintObserversForDownload;
- (void)_invalidateConnection;
- (void)_invalidateConstraintObserver:(id)arg1 withError:(id)arg2;
- (void)_registerAutoInstallOperationClientHandler:(id)arg1;
- (id)_remoteInterface;
- (id)_remoteInterfaceWithErrorHandler:(id /* block */)arg1;
- (id)_remoteInterfaceWithErrorHandler:(id /* block */)arg1 connectIfNecessary:(bool)arg2;
- (id)_remoteSynchronousInterfaceWithErrorHandler:(id /* block */)arg1 connectIfNecessary:(bool)arg2;
- (void)_setClientType;
- (void)_unregisterAutoInstallOperationClientHandler:(id)arg1;
- (void)areUpdatesDownloadableWithOptions:(id)arg1 alternateUpdateOptions:(id)arg2 preferredUpdateDownloadable:(bool*)arg3 alternateUpdateDownloadable:(bool*)arg4 preferredUpdateError:(id*)arg5 alternateUpdateError:(id*)arg6;
- (void)autoInstallOperationDidConsent:(id)arg1;
- (void)autoInstallOperationDidExpire:(id)arg1 withError:(id)arg2;
- (void)autoInstallOperationIsReadyToInstall:(id)arg1 withResult:(id /* block */)arg2;
- (void)autoInstallOperationPasscodePolicyChanged:(id)arg1 passcodePolicyType:(unsigned long long)arg2;
- (void)autoInstallOperationWasCancelled:(id)arg1;
- (void)autoScanAndDownloadIfAvailable:(id /* block */)arg1;
- (void)automaticDownloadDidFailToStartForNewUpdateAvailable:(id)arg1 withError:(id)arg2;
- (void)cancelDownload:(id /* block */)arg1;
- (void)cancelDownloadWithOptions:(id)arg1 withResult:(id /* block */)arg2;
- (bool)cancelUpdate:(id)arg1;
- (bool)cancelUpdateForKey:(id)arg1 withError:(id*)arg2;
- (void)clearingSpaceForDownload:(id)arg1 clearing:(bool)arg2;
- (int)clientType;
- (void)connectToServerIfNecessary;
- (bool)createInstallationKeybag:(id)arg1;
- (bool)createInstallationKeybag:(id)arg1 forUnattendedInstall:(bool)arg2;
- (bool)createInstallationKeybagWithOptions:(id)arg1;
- (void)currentAutoInstallOperation:(bool)arg1 withResult:(id /* block */)arg2;
- (void)currentPasscodePolicy:(id /* block */)arg1;
- (void)dealloc;
- (id)declarationsWithError:(id*)arg1;
- (void)delayEndDate:(id /* block */)arg1;
- (id)delegate;
- (void)descriptor:(id /* block */)arg1;
- (void)descriptors:(id /* block */)arg1;
- (void)destroyInstallationKeybag;
- (void)deviceBootedAfterRollback:(id)arg1;
- (void)deviceBootedAfterSplatUpdate;
- (void)deviceHasSufficientSpaceForDownload:(id /* block */)arg1;
- (void)deviceHasSufficientSpaceForDownloads:(id /* block */)arg1;
- (void)download:(id /* block */)arg1;
- (void)downloadAndInstallState:(id /* block */)arg1;
- (void)downloadDidFail:(id)arg1 withError:(id)arg2;
- (void)downloadDidFinish:(id)arg1;
- (void)downloadDidFinish:(id)arg1 withInstallPolicy:(id)arg2;
- (void)downloadDidStart:(id)arg1;
- (void)downloadProgressDidChange:(id)arg1;
- (void)downloadWasInvalidatedForNewUpdateAvailable:(id)arg1;
- (void)downloadWasInvalidatedForNewUpdatesAvailable:(id)arg1;
- (void)eligibleRollbackWithOptions:(id)arg1 withResult:(id /* block */)arg2;
- (void)enableAutomaticDownload:(bool)arg1;
- (void)enableAutomaticUpdateV2:(bool)arg1;
- (void)extraSpaceNeededForDownloadWithoutAppPurging:(id /* block */)arg1;
- (void)getDDMDeclarationWithHandler:(id /* block */)arg1;
- (void)getDDMStatusWithKeys:(id)arg1 completion:(id /* block */)arg2;
- (id)getDDMUpdateDescriptor;
- (id)getDocumentationDataForInstalledUpdateType:(int)arg1 error:(id*)arg2;
- (void)getMandatorySoftwareUpdateDictionary:(id /* block */)arg1;
- (void)handleDDMDeclaration:(id)arg1 withResult:(id /* block */)arg2;
- (void)handleUIForDDMDeclaration:(id)arg1;
- (void)inUserInteraction:(id /* block */)arg1;
- (id)init;
- (id)initWithDelegate:(id)arg1;
- (id)initWithDelegate:(id)arg1 andQueue:(id)arg2;
- (id)initWithDelegate:(id)arg1 clientType:(int)arg2;
- (id)initWithDelegate:(id)arg1 queue:(id)arg2 clientType:(int)arg3;
- (id)installDescriptor;
- (void)installDidFail:(id)arg1 withError:(id)arg2;
- (void)installDidFinish:(id)arg1;
- (void)installDidStart:(id)arg1;
- (void)installPolicyDidChange:(id)arg1;
- (void)installServerConfiguration;
- (void)installTonightScheduled:(bool)arg1 operationID:(id)arg2;
- (void)installUpdate:(id /* block */)arg1;
- (void)installUpdateWithInstallOptions:(id)arg1 withResult:(id /* block */)arg2;
- (void)installUpdateWithOptions:(id)arg1 withResult:(id /* block */)arg2;
- (void)installWantsToStart:(id)arg1 completion:(id /* block */)arg2;
- (void)installationConstraintMonitor:(id)arg1 constraintsDidChange:(unsigned long long)arg2;
- (void)installationConstraintObserverDidRemoveAllObserverBlocks:(id)arg1;
- (void)invalidate;
- (bool)isAnyClientInUserInteraction;
- (void)isAutoUpdateEnabled:(id /* block */)arg1;
- (bool)isAutoUpdateScheduled;
- (void)isAutoUpdateScheduled:(id /* block */)arg1;
- (bool)isAutomaticDownloadEnabled;
- (bool)isAutomaticUpdateV2Enabled;
- (void)isClearingSpaceForDownload:(id /* block */)arg1;
- (void)isDelayingUpdates:(id /* block */)arg1;
- (void)isDownloading:(id /* block */)arg1;
- (bool)isInstallationKeybagRequired;
- (bool)isInstallationKeybagRequiredForDescriptor:(id)arg1;
- (void)isRollingBack:(id /* block */)arg1;
- (void)isScanning:(id /* block */)arg1;
- (bool)isSplatOnlyUpdateInstalled;
- (bool)isSplatOnlyUpdateRollbackAllowed:(id*)arg1;
- (bool)isSplatOnlyUpdateRollbackSuggested;
- (void)isUpdateReadyForInstallation:(id /* block */)arg1;
- (void)isUpdateReadyForInstallationWithOptions:(id)arg1 withResult:(id /* block */)arg2;
- (void)managedInstallationRequested:(id)arg1;
- (void)networkMonitorDetectOverrides;
- (void)noteConnectionDropped;
- (void)noteServerExiting;
- (id)observeInstallationConstraintChangesForDownload:(id)arg1 observer:(id /* block */)arg2;
- (void)pauseDownload:(id /* block */)arg1;
- (void)preference:(id)arg1 didChange:(id)arg2;
- (void)presentAutoUpdateBanner:(id /* block */)arg1;
- (void)presentingRecommendedUpdate:(id)arg1 shouldPresent:(bool)arg2;
- (void)previousRollbackWithOptions:(id)arg1 withResult:(id /* block */)arg2;
- (void)purgeDownload:(id /* block */)arg1;
- (void)purgeDownloadWithOptions:(id)arg1 withResult:(id /* block */)arg2;
- (id)queue;
- (void)recordSUAnalyticsEvent:(id)arg1;
- (void)registerCSInstallPredicatesOnDate:(id)arg1;
- (void)resumeDownload:(id /* block */)arg1;
- (void)rollbackDidFail:(id)arg1 withError:(id)arg2;
- (void)rollbackDidFinish:(id)arg1;
- (void)rollbackDidStart:(id)arg1;
- (void)rollbackReadyForReboot:(id)arg1;
- (void)rollbackReadyToStart:(id)arg1 options:(id)arg2 completion:(id /* block */)arg3;
- (void)rollbackSuggested:(id)arg1 info:(id)arg2;
- (void)rollbackUpdateWithOptions:(id)arg1 withResult:(id /* block */)arg2;
- (id)scanDescriptor;
- (void)scanDidCompleteForOptions:(id)arg1 results:(id)arg2 error:(id)arg3;
- (void)scanDidCompleteWithNewUpdateAvailable:(id)arg1 error:(id)arg2;
- (void)scanForUpdates:(id)arg1 withResult:(id /* block */)arg2;
- (void)scanForUpdates:(id)arg1 withScanResults:(id /* block */)arg2;
- (void)scanRequestDidFinishForOptions:(id)arg1 results:(id)arg2 error:(id)arg3;
- (void)scanRequestDidFinishForOptions:(id)arg1 update:(id)arg2 error:(id)arg3;
- (void)scanRequestDidStartForOptions:(id)arg1;
- (void)scheduleDateActivity:(long long)arg1;
- (void)scheduleRollbackRebootForLater:(id /* block */)arg1;
- (bool)scheduleUpdate:(id)arg1;
- (bool)securityResponseRollbackSuggested:(id)arg1 error:(id*)arg2;
- (void)setClientType:(int)arg1;
- (void)setDelegate:(id)arg1;
- (void)setExclusiveControl:(bool)arg1;
- (void)setInstallDescriptor:(id)arg1;
- (bool)setLastRollbackDescriptor:(id)arg1;
- (void)setMandatorySoftwareUpdateDictionary:(id)arg1;
- (void)setQueue:(id)arg1;
- (void)setScanDescriptor:(id)arg1;
- (void)slaVersion:(id /* block */)arg1;
- (void)softwareUpdatePathRestriction:(id /* block */)arg1;
- (void)startDownload:(id /* block */)arg1;
- (void)startDownloadWithMetadata:(id)arg1 withResult:(id /* block */)arg2;
- (void)startDownloadWithOptions:(id)arg1 withResult:(id /* block */)arg2;
- (void)submitAllSUAnalyticsEvents;
- (void)submitSUAnalyticsEvent:(id)arg1;
- (void)submitSUAnalyticsEventsWithName:(id)arg1;
- (unsigned long long)totalPurgeableSpace;
- (void)updateDownloadMetadata:(id)arg1 withResult:(id /* block */)arg2;
- (void)updateDownloadOptions:(id)arg1 withResult:(id /* block */)arg2;
- (void)updatesDownloadableWithOptions:(id)arg1 alternateDownloadOptions:(id)arg2 replyHandler:(id /* block */)arg3;
- (void)userAskedToDeferInstall;
- (void)userWantsToDeferInstall;
- (bool)writeKeepAliveFile;

@end
