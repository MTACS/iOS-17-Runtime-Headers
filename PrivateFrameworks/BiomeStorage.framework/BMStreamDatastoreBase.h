
@interface BMStreamDatastoreBase : NSObject <BMFileManagerDelegate, BMSegmentManagerDelegate> {
    bool  _biomeLibrary;
    BMStoreConfig * _config;
    <BMStreamDatastorePruningDelegate> * _delegate;
    Class  _eventDataClass;
    BMFileManager * _fileManager;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    unsigned long long  _maxFileSize;
    BMStreamMetadata * _metadata;
    unsigned long long  _permission;
    BMPruningPolicy * _pruningPolicy;
    NSString * _remoteStreamName;
    BMSegmentManager * _segmentManager;
    NSString * _streamId;
    NSString * _streamPath;
}

@property (nonatomic, readonly) BMStoreConfig *config;
@property (nonatomic, readonly) BMFrameStore *currentFrameStore;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <BMStreamDatastorePruningDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isDataAccessible;
@property (nonatomic, readonly) unsigned long long maxFileSize;
@property (nonatomic, readonly) BMStreamMetadata *metadata;
@property (nonatomic, readonly) unsigned long long permission;
@property (nonatomic, readonly) BMPruningPolicy *pruningPolicy;
@property (nonatomic, readonly) NSString *remoteStreamName;
@property (nonatomic, readonly) BMSegmentManager *segmentManager;
@property (nonatomic, readonly, copy) NSString *streamId;
@property (nonatomic, readonly) NSString *streamPath;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)_bookmarkWithSegmentName:(id)arg1 offset:(unsigned long long)arg2 datastoreVersion:(unsigned int)arg3;
- (long long)cachingOptionsForFileHandleWithAttributes:(id)arg1;
- (id)config;
- (id)currentFrameStore;
- (id)delegate;
- (bool)deleteEventAtBookmark:(id)arg1 outTombstoneBookmark:(id*)arg2;
- (void)didMarkFrameAsRemovedWithSegmentName:(id)arg1 frame:(id)arg2 reason:(unsigned long long)arg3 outTombstoneBookmark:(id*)arg4;
- (void)enumerateEventsFrom:(double)arg1 to:(double)arg2 options:(unsigned long long)arg3 usingBlock:(id /* block */)arg4;
- (Class)eventBodyClass;
- (void)eventsFrom:(double)arg1 to:(double)arg2 reason:(unsigned long long)arg3 shouldDeleteUsingBlock:(id /* block */)arg4;
- (void)fetchEventFromFrameStore:(id)arg1 atOffset:(unsigned long long)arg2 withOptions:(unsigned long long)arg3 callback:(id /* block */)arg4;
- (id)fetchEventsFrom:(double)arg1 to:(double)arg2;
- (id)fetchEventsFrom:(double)arg1 to:(double)arg2 options:(unsigned long long)arg3;
- (id)initWithStream:(id)arg1 permission:(unsigned long long)arg2 config:(id)arg3;
- (id)initWithStream:(id)arg1 streamPath:(id)arg2 permission:(unsigned long long)arg3 config:(id)arg4;
- (id)initWithStream:(id)arg1 streamPath:(id)arg2 permission:(unsigned long long)arg3 config:(id)arg4 eventDataClass:(Class)arg5 useCase:(id)arg6;
- (bool)isDataAccessible;
- (bool)isTombstone;
- (id)loadMetadata;
- (unsigned long long)maxFileSize;
- (id)metadata;
- (id)metadataPath;
- (id)newEnumeratorFromBookmark:(id)arg1;
- (id)newEnumeratorFromBookmark:(id)arg1 options:(unsigned long long)arg2;
- (id)newEnumeratorFromStartTime:(double)arg1;
- (id)newEnumeratorFromStartTime:(double)arg1 endTime:(double)arg2 maxEvents:(unsigned long long)arg3 lastN:(unsigned long long)arg4 options:(unsigned long long)arg5;
- (id)newEnumeratorFromStartTime:(double)arg1 endTime:(double)arg2 maxEvents:(unsigned long long)arg3 options:(unsigned long long)arg4;
- (id)newEnumeratorFromStartTime:(double)arg1 endTime:(double)arg2 options:(unsigned long long)arg3;
- (id)newEnumeratorFromStartTime:(double)arg1 options:(unsigned long long)arg2;
- (unsigned long long)permission;
- (void)pruneStreamToMaxSegmentAge:(double)arg1;
- (void)pruneStreamToMaxStreamSizeInBytes:(unsigned long long)arg1;
- (id)pruningPolicy;
- (id)remoteStreamName;
- (void)removeEventsFrom:(double)arg1 to:(double)arg2 reason:(unsigned long long)arg3 pruneFutureEvents:(bool)arg4 shouldDeleteUsingBlock:(id /* block */)arg5;
- (void)removeEventsFrom:(double)arg1 to:(double)arg2 reason:(unsigned long long)arg3 pruneFutureEvents:(bool)arg4 usingBlock:(id /* block */)arg5;
- (bool)saveMetadata:(id)arg1;
- (id)segmentContainingTimestamp:(double)arg1;
- (id)segmentManager;
- (void)segmentManager:(id)arg1 willDeleteSegmentName:(id)arg2 frameStore:(id)arg3;
- (id)segmentNames;
- (id)segmentWithFilename:(id)arg1 error:(id*)arg2;
- (void)setDelegate:(id)arg1;
- (id)streamId;
- (id)streamPath;
- (void)syncMappedFiles;
- (bool)updateMetadata:(Class)arg1;
- (bool)updateMetadata:(Class)arg1 pruningPolicy:(id)arg2;
- (bool)verifyStreamHealthFrom:(double)arg1 to:(double)arg2 error:(id*)arg3;
- (bool)verifyStreamHealthFromV1:(double)arg1 to:(double)arg2 frameStore:(id)arg3 error:(id*)arg4;
- (bool)verifyStreamHealthFromV2:(double)arg1 to:(double)arg2 frameStore:(id)arg3 error:(id*)arg4;
- (bool)writeEventBytes:(const void*)arg1 length:(unsigned long long)arg2 dataVersion:(unsigned int)arg3 timestamp:(double)arg4;
- (bool)writeEventBytes:(const void*)arg1 length:(unsigned long long)arg2 dataVersion:(unsigned int)arg3 timestamp:(double)arg4 outBookmark:(id*)arg5;
- (bool)writeEventData:(id)arg1 dataVersion:(unsigned int)arg2 timestamp:(double)arg3;
- (bool)writeEventData:(id)arg1 dataVersion:(unsigned int)arg2 timestamp:(double)arg3 outBookmark:(id*)arg4;
- (bool)writeEventWithEventBody:(id)arg1;
- (bool)writeEventWithEventBody:(id)arg1 timestamp:(double)arg2;
- (bool)writeEventWithEventBody:(id)arg1 timestamp:(double)arg2 outBookmark:(id*)arg3;
- (bool)writeEventWithEventBody:(id)arg1 timestamp:(double)arg2 outEventSize:(unsigned long long*)arg3;
- (bool)writeEventWithEventBody:(id)arg1 timestamp:(double)arg2 outEventSize:(unsigned long long*)arg3 outBookmark:(id*)arg4;

@end
