
@interface PersonalizedImage : NSObject {
    NSData * _apNonce;
    NSNumber * _boardID;
    NSURL * _bundlePathURL;
    NSNumber * _certificateProductionStatus;
    NSNumber * _certificateSecurityMode;
    NSNumber * _chipID;
    NSString * _deviceClass;
    unsigned int  _digestLength;
    NSNumber * _ecid;
    NSNumber * _effectiveProductionStatus;
    NSNumber * _effectiveSecurityMode;
    NSString * _hardwareModel;
    NSNumber * _image4Supported;
    NSURL * _imagePathURL;
    NSString * _imageType;
    NSString * _imageVariant;
    NSDictionary * _mountedVolumeEntry;
    OS_remote_device * _remoteDevice;
    NSNumber * _securityDomain;
    NSData * _sepNonce;
    NSURL * _signingServerURL;
    NSNumber * _sikaFuse;
    bool  _skipLoadingLaunchDaemons;
    NSURL * _trustCacheURL;
    bool  _useCredentials;
    NSURL * _userProvidedBundleMountPathURL;
    NSURL * _userProvidedImagePathURL;
}

@property (nonatomic, retain) NSData *apNonce;
@property (nonatomic, retain) NSNumber *boardID;
@property (nonatomic, retain) NSURL *bundlePathURL;
@property (nonatomic, retain) NSNumber *certificateProductionStatus;
@property (nonatomic, retain) NSNumber *certificateSecurityMode;
@property (nonatomic, retain) NSNumber *chipID;
@property (nonatomic, copy) NSString *deviceClass;
@property (nonatomic) unsigned int digestLength;
@property (nonatomic, retain) NSNumber *ecid;
@property (nonatomic, retain) NSNumber *effectiveProductionStatus;
@property (nonatomic, retain) NSNumber *effectiveSecurityMode;
@property (nonatomic, copy) NSString *hardwareModel;
@property (nonatomic, retain) NSNumber *image4Supported;
@property (nonatomic, retain) NSURL *imagePathURL;
@property (nonatomic, copy) NSString *imageType;
@property (nonatomic, retain) NSString *imageVariant;
@property (nonatomic, retain) NSDictionary *mountedVolumeEntry;
@property (nonatomic, retain) OS_remote_device *remoteDevice;
@property (nonatomic, retain) NSNumber *securityDomain;
@property (nonatomic, retain) NSData *sepNonce;
@property (nonatomic, retain) NSURL *signingServerURL;
@property (nonatomic, retain) NSNumber *sikaFuse;
@property (nonatomic) bool skipLoadingLaunchDaemons;
@property (nonatomic, retain) NSURL *trustCacheURL;
@property (nonatomic) bool useCredentials;
@property (nonatomic, retain) NSURL *userProvidedBundleMountPathURL;
@property (nonatomic, retain) NSURL *userProvidedImagePathURL;

- (void).cxx_destruct;
- (id)apNonce;
- (id)boardID;
- (id)bundlePathURL;
- (id)certificateProductionStatus;
- (id)certificateSecurityMode;
- (id)chipID;
- (void)dealloc;
- (id)deviceClass;
- (id)digestFile:(id)arg1 digestLength:(unsigned int)arg2 error:(id*)arg3;
- (id)digestFileSha1:(id)arg1 error:(id*)arg2;
- (id)digestFileSha384:(id)arg1 error:(id*)arg2;
- (unsigned int)digestLength;
- (id)ecid;
- (id)effectiveProductionStatus;
- (id)effectiveSecurityMode;
- (id)hardwareModel;
- (id)image4Supported;
- (id)imagePathURL;
- (id)imageType;
- (id)imageVariant;
- (id)initWithBundleURL:(id)arg1 imageVariant:(id)arg2 remoteDevice:(id)arg3 options:(id)arg4;
- (bool)initializeDeviceAttributes:(id*)arg1;
- (bool)initializeImageProperties:(id*)arg1;
- (bool)mountImage:(id*)arg1;
- (bool)mountImage:(id)arg1 serverTicket:(id)arg2 imageDigest:(id)arg3 trustCacheURL:(id)arg4 error:(id*)arg5;
- (id)mountedVolumeEntry;
- (id)remoteDevice;
- (id)securityDomain;
- (id)sepNonce;
- (void)setApNonce:(id)arg1;
- (void)setBoardID:(id)arg1;
- (void)setBundlePathURL:(id)arg1;
- (void)setCertificateProductionStatus:(id)arg1;
- (void)setCertificateSecurityMode:(id)arg1;
- (void)setChipID:(id)arg1;
- (void)setDeviceClass:(id)arg1;
- (void)setDigestLength:(unsigned int)arg1;
- (void)setEcid:(id)arg1;
- (void)setEffectiveProductionStatus:(id)arg1;
- (void)setEffectiveSecurityMode:(id)arg1;
- (void)setHardwareModel:(id)arg1;
- (void)setImage4Supported:(id)arg1;
- (void)setImagePathURL:(id)arg1;
- (void)setImageType:(id)arg1;
- (void)setImageVariant:(id)arg1;
- (void)setMountedVolumeEntry:(id)arg1;
- (void)setRemoteDevice:(id)arg1;
- (void)setSecurityDomain:(id)arg1;
- (void)setSepNonce:(id)arg1;
- (void)setSigningServerURL:(id)arg1;
- (void)setSikaFuse:(id)arg1;
- (void)setSkipLoadingLaunchDaemons:(bool)arg1;
- (void)setTrustCacheURL:(id)arg1;
- (void)setUseCredentials:(bool)arg1;
- (void)setUserProvidedBundleMountPathURL:(id)arg1;
- (void)setUserProvidedImagePathURL:(id)arg1;
- (id)signingServerURL;
- (id)sikaFuse;
- (bool)skipLoadingLaunchDaemons;
- (id)trustCacheURL;
- (bool)useCredentials;
- (id)userProvidedBundleMountPathURL;
- (id)userProvidedImagePathURL;

@end
