
@interface HalogenCalcTypeC : NSObject {
    double  _LDCMACCapacitance;
    double  _adcGain;
    double  _calCurrentAmplitude;
    double  _calCurrentNoiseLevel;
    double  _calCurrentSNR;
    double  _calCurrentSignalLevel;
    double  _calVoltageAmplitude;
    double  _calVoltageNoiseLevel;
    double  _calVoltageSNR;
    double  _calVoltageSignalLevel;
    double  _capacitanceInNanoF;
    double  _compensatedImpedance;
    double  _compensatedPhase;
    double  _currentGainCorrection;
    double  _currentPhaseCompensation;
    struct OpaqueFFTSetupD { } * _fftContext;
    double  _goertzelImpedance;
    double  _goertzelPhase;
    double  _loadImpedanceInOhms;
    double  _loadPhase;
    double  _measurementCurrentAmplitude;
    double  _measurementCurrentNoiseLevel;
    double  _measurementCurrentPhase;
    double  _measurementCurrentSNR;
    double  _measurementCurrentSignalLevel;
    double  _measurementVoltageAmplitude;
    double  _measurementVoltageNoiseLevel;
    double  _measurementVoltagePhase;
    double  _measurementVoltageSNR;
    double  _measurementVoltageSignalLevel;
    int  _nSamples;
    double  _parasiticCap;
    double  _pinParasitics;
    double  _resistanceInOhms;
    double  _sampleRate;
    double  _seriesRCResistance;
    double  _seriesResistance;
    _Complex double  _seriesTotalImpedance;
    double  _signalFrequency;
    int  _sizeofSample;
    double  _tiaGain;
    NSMutableData * _tmp1DataBuff;
    int  _tmp1DataBuffSize;
    NSMutableData * _tmp2DataBuff;
    int  _tmp2DataBuffSize;
    NSMutableData * _tmp3DataBuff;
    int  _tmp3DataBuffSize;
    double  _voltageGainCorrection;
    bool  _wetTooLong;
}

@property double LDCMACCapacitance;
@property double adcGain;
@property (readonly) double calCurrentAmplitude;
@property (readonly) double calCurrentNoiseLevel;
@property (readonly) double calCurrentSNR;
@property (readonly) double calCurrentSignalLevel;
@property (readonly) double calVoltageAmplitude;
@property (readonly) double calVoltageNoiseLevel;
@property (readonly) double calVoltageSNR;
@property (readonly) double calVoltageSignalLevel;
@property (readonly) double capacitanceInNanoF;
@property (readonly) double compensatedImpedance;
@property (readonly) double compensatedPhase;
@property (readonly) double currentGainCorrection;
@property (readonly) double currentPhaseCompensation;
@property struct OpaqueFFTSetupD { }*fftContext;
@property (readonly) double goertzelImpedance;
@property (readonly) double goertzelPhase;
@property (readonly) double loadImpedanceInOhms;
@property (readonly) double loadPhase;
@property (readonly) double measurementCurrentAmplitude;
@property (readonly) double measurementCurrentNoiseLevel;
@property (readonly) double measurementCurrentPhase;
@property (readonly) double measurementCurrentSNR;
@property (readonly) double measurementCurrentSignalLevel;
@property (readonly) double measurementVoltageAmplitude;
@property (readonly) double measurementVoltageNoiseLevel;
@property (readonly) double measurementVoltagePhase;
@property (readonly) double measurementVoltageSNR;
@property (readonly) double measurementVoltageSignalLevel;
@property int nSamples;
@property double parasiticCap;
@property double pinParasitics;
@property (readonly) double resistanceInOhms;
@property double sampleRate;
@property double seriesRCResistance;
@property double seriesResistance;
@property _Complex double seriesTotalImpedance;
@property double signalFrequency;
@property int sizeofSample;
@property double tiaGain;
@property NSMutableData *tmp1DataBuff;
@property int tmp1DataBuffSize;
@property NSMutableData *tmp2DataBuff;
@property int tmp2DataBuffSize;
@property NSMutableData *tmp3DataBuff;
@property int tmp3DataBuffSize;
@property (readonly) double voltageGainCorrection;
@property (readonly) bool wetTooLong;

- (double)LDCMACCapacitance;
- (bool)_allocBuffers;
- (void)_applyFractionalPhaseShift:(id)arg1 withPhaseDelay:(double)arg2;
- (void)_applyGain:(double)arg1 toData:(id)arg2;
- (void)_applyHanningWindow:(id)arg1 withSize:(int)arg2;
- (void)_applyTiaGain:(id)arg1 toCurrentData:(id)arg2;
- (void)_doMuxComp:(double)arg1 withPhase:(double)arg2;
- (void)_freeBuffers;
- (void)_goertzelSecondOrder:(id)arg1 hasFftValue:(double*)arg2 hasPhase:(double*)arg3 withHanning:(bool)arg4 amplitudeCorrectionFactor:(double)arg5;
- (bool)_isResistiveOnly:(double)arg1 resistanceInOhms:(double)arg2 loadPhase:(double)arg3;
- (void)_rcSolver;
- (double)_snr:(id)arg1 withGain:(double)arg2 hasSignalLevel:(double*)arg3 hasNoiseLevel:(double*)arg4;
- (double)adcGain;
- (double)calCurrentAmplitude;
- (double)calCurrentNoiseLevel;
- (double)calCurrentSNR;
- (double)calCurrentSignalLevel;
- (double)calVoltageAmplitude;
- (double)calVoltageNoiseLevel;
- (double)calVoltageSNR;
- (double)calVoltageSignalLevel;
- (double)capacitanceInNanoF;
- (double)compensatedImpedance;
- (double)compensatedPhase;
- (double)currentGainCorrection;
- (double)currentPhaseCompensation;
- (void)dealloc;
- (int)doCalibration:(id)arg1 withCurrentData:(id)arg2;
- (int)doLiquidDetection:(id)arg1 withCurrentData:(id)arg2 isReceptacleEmpty:(bool)arg3 isReceptacleWet:(bool)arg4 withWetTransitionThreshold:(double)arg5 withDryTransitionThreshold:(double)arg6 pinParasitics:(double)arg7 measurementType:(int)arg8;
- (struct OpaqueFFTSetupD { }*)fftContext;
- (double)goertzelImpedance;
- (double)goertzelPhase;
- (id)initWithParams:(int)arg1 signalFrequency:(double)arg2 sampleRate:(unsigned long long)arg3 tiaGain:(double)arg4 adcGain:(double)arg5 parasiticCap:(double)arg6;
- (double)loadImpedanceInOhms;
- (double)loadPhase;
- (double)measurementCurrentAmplitude;
- (double)measurementCurrentNoiseLevel;
- (double)measurementCurrentPhase;
- (double)measurementCurrentSNR;
- (double)measurementCurrentSignalLevel;
- (double)measurementVoltageAmplitude;
- (double)measurementVoltageNoiseLevel;
- (double)measurementVoltagePhase;
- (double)measurementVoltageSNR;
- (double)measurementVoltageSignalLevel;
- (int)nSamples;
- (double)parasiticCap;
- (double)pinParasitics;
- (double)resistanceInOhms;
- (double)sampleRate;
- (double)seriesRCResistance;
- (double)seriesResistance;
- (_Complex /* Warning: Unrecognized filer type: '' using 'void*' */ void*)seriesTotalImpedance:(SEL)arg1;
- (void)setAdcGain:(double)arg1;
- (void)setFftContext:(struct OpaqueFFTSetupD { }*)arg1;
- (void)setLDCMACCapacitance:(double)arg1;
- (void)setNSamples:(int)arg1;
- (void)setParasiticCap:(double)arg1;
- (void)setPinParasitics:(double)arg1;
- (void)setSampleRate:(double)arg1;
- (void)setSeriesRCResistance:(double)arg1;
- (void)setSeriesResistance:(double)arg1;
- (void)setSeriesTotalImpedance:(void *)arg1; // needs 1 arg types, found 2: _Complex /* Warning: Unrecognized filer type: '' using 'void*' */ void*, double
- (void)setSignalFrequency:(double)arg1;
- (void)setSizeofSample:(int)arg1;
- (void)setTiaGain:(double)arg1;
- (void)setTmp1DataBuff:(id)arg1;
- (void)setTmp1DataBuffSize:(int)arg1;
- (void)setTmp2DataBuff:(id)arg1;
- (void)setTmp2DataBuffSize:(int)arg1;
- (void)setTmp3DataBuff:(id)arg1;
- (void)setTmp3DataBuffSize:(int)arg1;
- (void)setWetTooLong:(bool)arg1;
- (double)signalFrequency;
- (int)sizeofSample;
- (double)tiaGain;
- (id)tmp1DataBuff;
- (int)tmp1DataBuffSize;
- (id)tmp2DataBuff;
- (int)tmp2DataBuffSize;
- (id)tmp3DataBuff;
- (int)tmp3DataBuffSize;
- (double)voltageGainCorrection;
- (bool)wetTooLong;

@end
