
@interface ASDPurchaseHistoryApp : NSObject <NSSecureCoding> {
    NSString * _bundleID;
    NSString * _circularIconURLString;
    long long  _contentRatingFlags;
    bool  _currentlyOptedInForMacOSEligibility;
    bool  _currentlyOptedInForXROSEligibility;
    NSDate * _datePurchased;
    NSString * _developerName;
    bool  _familyShared;
    bool  _firstParty;
    long long  _genreID;
    NSString * _genreName;
    bool  _hasMessagesExtension;
    bool  _hasP3;
    bool  _hidden;
    bool  _hiddenFromSpringboard;
    NSString * _iconURLString;
    bool  _is32BitOnly;
    bool  _isPreorder;
    bool  _isVerifiedForMacOS;
    unsigned long long  _lockerItemID;
    NSString * _longTitle;
    NSArray * _macAppRequiredCapabilities;
    unsigned int  _mediaKind;
    bool  _optedInForMacOSEligibility;
    bool  _optedInForXROSEligibility;
    NSString * _ovalIconURLString;
    NSURL * _preflightPackageURL;
    NSURL * _productURL;
    unsigned int  _purchaseToken;
    long long  _purchaserDSID;
    NSString * _redownloadParams;
    NSArray * _requiredCapabilities;
    bool  _requiresRosetta;
    bool  _runsOnAppleSilicon;
    bool  _runsOnIntel;
    long long  _storeItemID;
    bool  _supportsIPad;
    bool  _supportsIPhone;
    bool  _supportsLayeredImage;
    bool  _supportsMac;
    bool  _supportsRealityDevice;
    NSString * _title;
    bool  _watchAppDeliveredIniOSApp;
    bool  _watchAppRunsIndependently;
    bool  _watchOnly;
}

@property (copy) NSString *bundleID;
@property (copy) NSString *circularIconURLString;
@property (nonatomic, readonly) NSString *cleanedRedownloadParams;
@property long long contentRatingFlags;
@property bool currentlyOptedInForMacOSEligibility;
@property bool currentlyOptedInForXROSEligibility;
@property (copy) NSDate *datePurchased;
@property (copy) NSString *developerName;
@property (getter=isFamilyShared) bool familyShared;
@property (getter=isFirstParty) bool firstParty;
@property long long genreID;
@property (copy) NSString *genreName;
@property (readonly) bool hasAnyMacOSCompatibleIOSVersion;
@property bool hasMessagesExtension;
@property bool hasP3;
@property (getter=isHidden) bool hidden;
@property (getter=isHiddenFromSpringboard) bool hiddenFromSpringboard;
@property (copy) NSString *iconURLString;
@property bool is32BitOnly;
@property bool isIOSBinaryMacOSAvailable;
@property bool isIOSBinaryMacOSCompatible;
@property bool isPreorder;
@property bool isVerifiedForMacOS;
@property unsigned long long lockerItemID;
@property (copy) NSString *longTitle;
@property (copy) NSArray *macAppRequiredCapabilities;
@property unsigned int mediaKind;
@property bool optedInForMacOSEligibility;
@property bool optedInForXROSEligibility;
@property (copy) NSString *ovalIconURLString;
@property (copy) NSURL *preflightPackageURL;
@property (copy) NSURL *productURL;
@property unsigned int purchaseToken;
@property long long purchaserDSID;
@property (copy) NSString *redownloadParams;
@property (copy) NSArray *requiredCapabilities;
@property bool requiresRosetta;
@property bool runsOnAppleSilicon;
@property bool runsOnIntel;
@property long long storeItemID;
@property bool supportsIPad;
@property bool supportsIPhone;
@property bool supportsLayeredImage;
@property bool supportsMac;
@property bool supportsRealityDevice;
@property (copy) NSString *title;
@property bool watchAppDeliveredIniOSApp;
@property bool watchAppRunsIndependently;
@property bool watchOnly;

// Image: /System/Library/PrivateFrameworks/AppStoreDaemon.framework/AppStoreDaemon

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)bundleID;
- (id)circularIconURLString;
- (long long)contentRatingFlags;
- (bool)currentlyOptedInForMacOSEligibility;
- (bool)currentlyOptedInForXROSEligibility;
- (id)datePurchased;
- (id)description;
- (id)developerName;
- (void)encodeWithCoder:(id)arg1;
- (long long)genreID;
- (id)genreName;
- (bool)hasAnyMacOSCompatibleIOSVersion;
- (bool)hasMessagesExtension;
- (bool)hasP3;
- (id)iconURLString;
- (id)initWithCoder:(id)arg1;
- (bool)is32BitOnly;
- (bool)isEqual:(id)arg1;
- (bool)isFamilyShared;
- (bool)isFirstParty;
- (bool)isHidden;
- (bool)isHiddenFromSpringboard;
- (bool)isIOSBinaryMacOSAvailable;
- (bool)isIOSBinaryMacOSCompatible;
- (bool)isPreorder;
- (bool)isVerifiedForMacOS;
- (unsigned long long)lockerItemID;
- (id)longTitle;
- (id)macAppRequiredCapabilities;
- (unsigned int)mediaKind;
- (bool)optedInForMacOSEligibility;
- (bool)optedInForXROSEligibility;
- (id)ovalIconURLString;
- (id)preflightPackageURL;
- (id)productURL;
- (unsigned int)purchaseToken;
- (long long)purchaserDSID;
- (id)redownloadParams;
- (id)requiredCapabilities;
- (bool)requiresRosetta;
- (bool)runsOnAppleSilicon;
- (bool)runsOnIntel;
- (void)setBundleID:(id)arg1;
- (void)setCircularIconURLString:(id)arg1;
- (void)setContentRatingFlags:(long long)arg1;
- (void)setCurrentlyOptedInForMacOSEligibility:(bool)arg1;
- (void)setCurrentlyOptedInForXROSEligibility:(bool)arg1;
- (void)setDatePurchased:(id)arg1;
- (void)setDeveloperName:(id)arg1;
- (void)setFamilyShared:(bool)arg1;
- (void)setFirstParty:(bool)arg1;
- (void)setGenreID:(long long)arg1;
- (void)setGenreName:(id)arg1;
- (void)setHasMessagesExtension:(bool)arg1;
- (void)setHasP3:(bool)arg1;
- (void)setHidden:(bool)arg1;
- (void)setHiddenFromSpringboard:(bool)arg1;
- (void)setIconURLString:(id)arg1;
- (void)setIs32BitOnly:(bool)arg1;
- (void)setIsIOSBinaryMacOSAvailable:(bool)arg1;
- (void)setIsIOSBinaryMacOSCompatible:(bool)arg1;
- (void)setIsPreorder:(bool)arg1;
- (void)setIsVerifiedForMacOS:(bool)arg1;
- (void)setLockerItemID:(unsigned long long)arg1;
- (void)setLongTitle:(id)arg1;
- (void)setMacAppRequiredCapabilities:(id)arg1;
- (void)setMediaKind:(unsigned int)arg1;
- (void)setOptedInForMacOSEligibility:(bool)arg1;
- (void)setOptedInForXROSEligibility:(bool)arg1;
- (void)setOvalIconURLString:(id)arg1;
- (void)setPreflightPackageURL:(id)arg1;
- (void)setProductURL:(id)arg1;
- (void)setPurchaseToken:(unsigned int)arg1;
- (void)setPurchaserDSID:(long long)arg1;
- (void)setRedownloadParams:(id)arg1;
- (void)setRequiredCapabilities:(id)arg1;
- (void)setRequiresRosetta:(bool)arg1;
- (void)setRunsOnAppleSilicon:(bool)arg1;
- (void)setRunsOnIntel:(bool)arg1;
- (void)setStoreItemID:(long long)arg1;
- (void)setSupportsIPad:(bool)arg1;
- (void)setSupportsIPhone:(bool)arg1;
- (void)setSupportsLayeredImage:(bool)arg1;
- (void)setSupportsMac:(bool)arg1;
- (void)setSupportsRealityDevice:(bool)arg1;
- (void)setTitle:(id)arg1;
- (void)setWatchAppDeliveredIniOSApp:(bool)arg1;
- (void)setWatchAppRunsIndependently:(bool)arg1;
- (void)setWatchOnly:(bool)arg1;
- (long long)storeItemID;
- (bool)supportsIPad;
- (bool)supportsIPhone;
- (bool)supportsLayeredImage;
- (bool)supportsMac;
- (bool)supportsRealityDevice;
- (id)title;
- (bool)watchAppDeliveredIniOSApp;
- (bool)watchAppRunsIndependently;
- (bool)watchOnly;

// Image: /System/Library/PrivateFrameworks/AppState.framework/AppState

- (id)cleanedRedownloadParams;

@end
