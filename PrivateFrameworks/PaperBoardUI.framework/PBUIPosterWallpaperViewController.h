
@interface PBUIPosterWallpaperViewController : UIViewController <BSDescriptionProviding, PBUIPosterComponent, PBUIPosterComponentDelegate> {
    long long  _activeOrientation;
    long long  _activeStyles;
    long long  _activeVariant;
    PBUIDynamicProviderWrapper * _activeVariantReplicaProvider;
    <PBUIPosterComponentDelegate> * _delegate;
    PBUIDynamicProviderWrapper * _homePosterReplicaProvider;
    <BSInvalidatable> * _keepForegroundRunning;
    PBUIDynamicProviderWrapper * _lockFloatingLayerPosterReplicaProvider;
    PBUIDynamicProviderWrapper * _lockPosterReplicaProvider;
    PBUIPosterViewController * _posterController;
    PRSWallpaperObserver * _posterObserver;
    <BSInvalidatable> * _transitioningLockState;
    double  _unlockProgress;
    bool  _wakeSourceIsSwipeToUnlock;
    BSCompoundAssertion * _wallpaperRequiredAssertion;
}

@property (nonatomic) long long activeVariant;
@property (nonatomic, readonly) UIColor *averageColor;
@property (nonatomic, readonly) double averageContrast;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PBUIPosterComponentDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) _UILegibilitySettings *legibilitySettings;
@property (nonatomic, readonly) unsigned long long posterSignificantEventsCounter;
@property (readonly) Class superclass;
@property (nonatomic) double unlockProgress;
@property (nonatomic, readonly) long long variant;
@property (nonatomic) bool wakeSourceIsSwipeToUnlock;

- (void).cxx_destruct;
- (bool)_canShowWhileLocked;
- (void)_posterConfigsDidChange:(id)arg1 withTransition:(id)arg2;
- (void)_posterControllerDidChange;
- (void)_updateStyle;
- (long long)activeStyleForVariant:(long long)arg1;
- (long long)activeVariant;
- (id)averageColor;
- (id)averageColorForVariant:(long long)arg1;
- (double)averageContrast;
- (double)averageContrastForVariant:(long long)arg1;
- (id)delegate;
- (id)description;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
- (void)finishUnlockWithAnimationParameters:(struct CGSize { double x1; double x2; })arg1;
- (bool)homeScreenReflectsLockScreen;
- (id)init;
- (void)invalidate;
- (id)legibilitySettings;
- (id)legibilitySettingsForVariant:(long long)arg1;
- (void)noteUserTapOccurred;
- (void)noteUserTapOccurredWithLocation:(struct CGPoint { double x1; double x2; })arg1;
- (id)portalProviderForFloatingLayer;
- (id)portalSourceProviderForActiveVariant;
- (id)portalSourceProviderForVariant:(long long)arg1;
- (void)posterComponent:(id)arg1 didUpdateHideDimmingLayer:(bool)arg2;
- (void)posterComponent:(id)arg1 didUpdateLegibilitySettings:(id)arg2;
- (bool)posterHandlesWakeAnimation;
- (bool)posterHidesDimmingLayer;
- (unsigned long long)posterSignificantEventsCounter;
- (void)removeWallpaperStyleForPriority:(long long)arg1 forVariant:(long long)arg2;
- (id)replicaProviderForVariant:(long long)arg1;
- (id)requireWallpaperRasterizationWithReason:(id)arg1;
- (id)requireWallpaperWithReason:(id)arg1;
- (void)rotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (id)scenesForBacklightSession;
- (void)setActiveVariant:(long long)arg1;
- (void)setDelegate:(id)arg1;
- (void)setUnlockProgress:(double)arg1;
- (void)setWakeSourceIsSwipeToUnlock:(bool)arg1;
- (void)setWallpaperObscured:(bool)arg1;
- (void)setWallpaperStyle:(long long)arg1 forPriority:(long long)arg2 forVariant:(long long)arg3;
- (unsigned long long)significantEventsCounterForPosterWithIdentifier:(id)arg1;
- (id)snapshotSourceProviderForActiveVariant;
- (id)snapshotSourceProviderForVariant:(long long)arg1;
- (id)succinctDescription;
- (id)succinctDescriptionBuilder;
- (void)triggerSceneUpdate;
- (double)unlockProgress;
- (void)updateAssociatedPosterConfiguration:(id)arg1 withAnimationSettings:(id)arg2;
- (void)updateConfiguration:(id)arg1 withAnimationSettings:(id)arg2;
- (void)updateLegacyPoster;
- (bool)userTapEventsRequested;
- (long long)variant;
- (void)viewDidLoad;
- (bool)wakeSourceIsSwipeToUnlock;

@end
