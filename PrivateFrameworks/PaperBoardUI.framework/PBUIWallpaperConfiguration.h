
@interface PBUIWallpaperConfiguration : NSObject <BSDescriptionProviding, NSCopying, NSSecureCoding> {
    bool  _needsInactiveAppearanceTreatment;
    bool  _needsWallpaperDimmingTreatment;
    NSURL * _originalVideoURL;
    NSDictionary * _proceduralWallpaperInfo;
    long long  _variant;
    NSURL * _videoURL;
    UIColor * _wallpaperColor;
    NSString * _wallpaperColorName;
    PBUIWallpaperGradient * _wallpaperGradient;
    PBUIWallpaperImage * _wallpaperImage;
    NSData * _wallpaperImageHashData;
    PBUIWallpaperOptions * _wallpaperOptions;
    UIImage * _wallpaperOriginalImage;
    UIImage * _wallpaperThumbnailImage;
    NSData * _wallpaperThumbnailImageData;
    long long  _wallpaperType;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool needsInactiveAppearanceTreatment;
@property (nonatomic) bool needsWallpaperDimmingTreatment;
@property (nonatomic, copy) NSURL *originalVideoURL;
@property (nonatomic, readonly, copy) NSString *proceduralWallpaperIdentifier;
@property (nonatomic, copy) NSDictionary *proceduralWallpaperInfo;
@property (nonatomic, readonly, copy) NSDictionary *proceduralWallpaperOptions;
@property (readonly) Class superclass;
@property (nonatomic, readonly) long long variant;
@property (nonatomic, copy) NSURL *videoURL;
@property (nonatomic, copy) UIColor *wallpaperColor;
@property (nonatomic, copy) NSString *wallpaperColorName;
@property (nonatomic, copy) PBUIWallpaperGradient *wallpaperGradient;
@property (nonatomic, retain) PBUIWallpaperImage *wallpaperImage;
@property (nonatomic, copy) NSData *wallpaperImageHashData;
@property (nonatomic, copy) PBUIWallpaperOptions *wallpaperOptions;
@property (nonatomic, retain) UIImage *wallpaperOriginalImage;
@property (nonatomic, retain) UIImage *wallpaperThumbnailImage;
@property (nonatomic, copy) NSData *wallpaperThumbnailImageData;
@property (nonatomic, readonly) long long wallpaperType;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)hash;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithVariant:(long long)arg1 type:(long long)arg2;
- (bool)isEqual:(id)arg1;
- (bool)needsInactiveAppearanceTreatment;
- (bool)needsWallpaperDimmingTreatment;
- (id)originalVideoURL;
- (id)proceduralWallpaperIdentifier;
- (id)proceduralWallpaperInfo;
- (id)proceduralWallpaperOptions;
- (void)setNeedsInactiveAppearanceTreatment:(bool)arg1;
- (void)setNeedsWallpaperDimmingTreatment:(bool)arg1;
- (void)setOriginalVideoURL:(id)arg1;
- (void)setProceduralWallpaperInfo:(id)arg1;
- (void)setVideoURL:(id)arg1;
- (void)setWallpaperColor:(id)arg1;
- (void)setWallpaperColorName:(id)arg1;
- (void)setWallpaperGradient:(id)arg1;
- (void)setWallpaperImage:(id)arg1;
- (void)setWallpaperImageHashData:(id)arg1;
- (void)setWallpaperOptions:(id)arg1;
- (void)setWallpaperOriginalImage:(id)arg1;
- (void)setWallpaperThumbnailImage:(id)arg1;
- (void)setWallpaperThumbnailImageData:(id)arg1;
- (id)succinctDescription;
- (id)succinctDescriptionBuilder;
- (long long)variant;
- (id)videoURL;
- (id)wallpaperColor;
- (id)wallpaperColorName;
- (id)wallpaperGradient;
- (id)wallpaperImage;
- (id)wallpaperImageHashData;
- (id)wallpaperOptions;
- (id)wallpaperOriginalImage;
- (id)wallpaperThumbnailImage;
- (id)wallpaperThumbnailImageData;
- (long long)wallpaperType;

@end
