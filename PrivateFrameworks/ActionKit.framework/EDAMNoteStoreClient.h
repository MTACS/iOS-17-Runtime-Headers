
@interface EDAMNoteStoreClient : NSObject <EDAMNoteStore> {
    <ENTProtocol> * _inProtocol;
    <ENTProtocol> * _outProtocol;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)acquireNoteLock:(id)arg1 noteGuid:(id)arg2;
- (id)authenticateToSharedNote:(id)arg1 noteKey:(id)arg2 authenticationToken:(id)arg3;
- (id)authenticateToSharedNotebook:(id)arg1 authenticationToken:(id)arg2;
- (void)cancel;
- (id)copyNote:(id)arg1 noteGuid:(id)arg2 toNotebookGuid:(id)arg3;
- (id)createLinkedNotebook:(id)arg1 linkedNotebook:(id)arg2;
- (id)createNote:(id)arg1 note:(id)arg2;
- (id)createNotebook:(id)arg1 notebook:(id)arg2;
- (id)createOrUpdateNotebookShares:(id)arg1 shareTemplate:(id)arg2;
- (id)createOrUpdateSharedNotes:(id)arg1 shareTemplate:(id)arg2;
- (id)createSearch:(id)arg1 search:(id)arg2;
- (id)createSharedNotebook:(id)arg1 sharedNotebook:(id)arg2;
- (id)createTag:(id)arg1 tag:(id)arg2;
- (int)deleteNote:(id)arg1 guid:(id)arg2;
- (void)emailNote:(id)arg1 parameters:(id)arg2;
- (int)expungeInactiveNotes:(id)arg1;
- (int)expungeLinkedNotebook:(id)arg1 guid:(id)arg2;
- (int)expungeNote:(id)arg1 guid:(id)arg2;
- (int)expungeNotebook:(id)arg1 guid:(id)arg2;
- (int)expungeNotes:(id)arg1 noteGuids:(id)arg2;
- (int)expungeSearch:(id)arg1 guid:(id)arg2;
- (int)expungeSharedNotebooks:(id)arg1 sharedNotebookIds:(id)arg2;
- (int)expungeTag:(id)arg1 guid:(id)arg2;
- (id)findContacts:(id)arg1 query:(id)arg2;
- (id)findInBusiness:(id)arg1 query:(id)arg2;
- (id)findNoteCounts:(id)arg1 filter:(id)arg2 withTrash:(bool)arg3;
- (int)findNoteOffset:(id)arg1 filter:(id)arg2 guid:(id)arg3;
- (id)findNotes:(id)arg1 filter:(id)arg2 offset:(int)arg3 maxNotes:(int)arg4;
- (id)findNotesMetadata:(id)arg1 filter:(id)arg2 offset:(int)arg3 maxNotes:(int)arg4 resultSpec:(id)arg5;
- (id)findRelated:(id)arg1 query:(id)arg2 resultSpec:(id)arg3;
- (id)findSearchSuggestions:(id)arg1 query:(id)arg2 resultSpec:(id)arg3;
- (id)findTimeZones:(id)arg1 timeZoneSpec:(id)arg2 maxTimeZones:(int)arg3;
- (id)getAds:(id)arg1 adParameters:(id)arg2;
- (id)getDefaultNotebook:(id)arg1;
- (id)getFilteredSyncChunk:(id)arg1 afterUSN:(int)arg2 maxEntries:(int)arg3 filter:(id)arg4;
- (id)getLinkedAccountSyncState:(id)arg1 linkedAccount:(id)arg2;
- (id)getLinkedNotebookSyncChunk:(id)arg1 linkedNotebook:(id)arg2 afterUSN:(int)arg3 maxEntries:(int)arg4 fullSyncOnly:(bool)arg5;
- (id)getLinkedNotebookSyncState:(id)arg1 linkedNotebook:(id)arg2;
- (id)getNote:(id)arg1 guid:(id)arg2 withContent:(bool)arg3 withResourcesData:(bool)arg4 withResourcesRecognition:(bool)arg5 withResourcesAlternateData:(bool)arg6;
- (id)getNoteApplicationData:(id)arg1 guid:(id)arg2;
- (id)getNoteApplicationDataEntry:(id)arg1 guid:(id)arg2 key:(id)arg3;
- (id)getNoteContent:(id)arg1 guid:(id)arg2;
- (id)getNoteLockStatus:(id)arg1 noteGuid:(id)arg2;
- (id)getNoteSearchText:(id)arg1 guid:(id)arg2 noteOnly:(bool)arg3 tokenizeForIndexing:(bool)arg4;
- (id)getNoteShares:(id)arg1 noteGuid:(id)arg2;
- (id)getNoteSnippets:(id)arg1 noteGuids:(id)arg2 maxSnippetLength:(int)arg3;
- (id)getNoteTagNames:(id)arg1 guid:(id)arg2;
- (id)getNoteVersion:(id)arg1 noteGuid:(id)arg2 updateSequenceNum:(int)arg3 withResourcesData:(bool)arg4 withResourcesRecognition:(bool)arg5 withResourcesAlternateData:(bool)arg6;
- (id)getNoteWithResultSpec:(id)arg1 guid:(id)arg2 resultSpec:(id)arg3;
- (id)getNotebook:(id)arg1 guid:(id)arg2;
- (id)getNotebookShares:(id)arg1 notebookGuid:(id)arg2;
- (id)getNotebookSharesEmailAddresses:(id)arg1 notebookGuid:(id)arg2 identities:(id)arg3 skipUnknownUserIdentities:(bool)arg4;
- (id)getPreferences:(id)arg1 preferenceNames:(id)arg2;
- (id)getPublicNotebook:(int)arg1 publicUri:(id)arg2;
- (id)getRandomAd:(id)arg1 adParameters:(id)arg2;
- (id)getResource:(id)arg1 guid:(id)arg2 withData:(bool)arg3 withRecognition:(bool)arg4 withAttributes:(bool)arg5 withAlternateData:(bool)arg6;
- (id)getResourceAlternateData:(id)arg1 guid:(id)arg2;
- (id)getResourceApplicationData:(id)arg1 guid:(id)arg2;
- (id)getResourceApplicationDataEntry:(id)arg1 guid:(id)arg2 key:(id)arg3;
- (id)getResourceAttributes:(id)arg1 guid:(id)arg2;
- (id)getResourceByHash:(id)arg1 noteGuid:(id)arg2 contentHash:(id)arg3 withData:(bool)arg4 withRecognition:(bool)arg5 withAlternateData:(bool)arg6;
- (id)getResourceData:(id)arg1 guid:(id)arg2;
- (id)getResourceRecognition:(id)arg1 guid:(id)arg2;
- (id)getResourceSearchText:(id)arg1 guid:(id)arg2;
- (id)getSearch:(id)arg1 guid:(id)arg2;
- (id)getSharedNotebookByAuth:(id)arg1;
- (id)getSyncChunk:(id)arg1 afterUSN:(int)arg2 maxEntries:(int)arg3 fullSyncOnly:(bool)arg4;
- (id)getSyncState:(id)arg1;
- (id)getSyncStateWithMetrics:(id)arg1 clientMetrics:(id)arg2;
- (id)getTag:(id)arg1 guid:(id)arg2;
- (id)getViewersForNotes:(id)arg1 noteGuids:(id)arg2;
- (id)initWithInProtocol:(id)arg1 outProtocol:(id)arg2;
- (id)initWithProtocol:(id)arg1;
- (id)joinPublishedBusinessNotebook:(id)arg1 notebookGuid:(id)arg2;
- (id)listAccessibleBusinessNotebooks:(id)arg1;
- (id)listLinkedNotebooks:(id)arg1;
- (id)listNoteVersions:(id)arg1 noteGuid:(id)arg2;
- (id)listNotebooks:(id)arg1;
- (id)listPublishedBusinessNotebooks:(id)arg1;
- (id)listSearches:(id)arg1;
- (id)listSharedNotebooks:(id)arg1;
- (id)listTags:(id)arg1;
- (id)listTagsByNotebook:(id)arg1 notebookGuid:(id)arg2;
- (id)manageNoteShares:(id)arg1 parameters:(id)arg2;
- (id)manageNotebookShares:(id)arg1 parameters:(id)arg2;
- (id)releaseNoteLock:(id)arg1 noteGuid:(id)arg2;
- (int)renameNotebook:(id)arg1 notebookGuid:(id)arg2 name:(id)arg3;
- (void)requestAccessToNotebook:(id)arg1 notebookGuid:(id)arg2 privilegeLevel:(int)arg3;
- (id)sendLogRequest:(id)arg1 logRequest:(id)arg2;
- (int)sendMessageToSharedNotebookMembers:(id)arg1 notebookGuid:(id)arg2 messageText:(id)arg3 recipients:(id)arg4;
- (void)setDownloadProgressBlock:(id /* block */)arg1;
- (int)setNoteApplicationDataEntry:(id)arg1 guid:(id)arg2 key:(id)arg3 value:(id)arg4;
- (id)setNotebookRecipientSettings:(id)arg1 notebookGuid:(id)arg2 recipientSettings:(id)arg3;
- (int)setResourceApplicationDataEntry:(id)arg1 guid:(id)arg2 key:(id)arg3 value:(id)arg4;
- (int)setSharedNotebookRecipientSettings:(id)arg1 sharedNotebookId:(long long)arg2 recipientSettings:(id)arg3;
- (void)setUploadProgressBlock:(id /* block */)arg1;
- (id)shareNote:(id)arg1 guid:(id)arg2;
- (int)shareNoteWithBusiness:(id)arg1 noteGuid:(id)arg2;
- (id)shareNotebook:(id)arg1 sharedNotebook:(id)arg2 message:(id)arg3;
- (void)stopSharingNote:(id)arg1 guid:(id)arg2;
- (int)stopSharingNoteWithBusiness:(id)arg1 noteGuid:(id)arg2;
- (void)stopSharingNoteWithRecipients:(id)arg1 guid:(id)arg2;
- (void)unpublishNotebook:(id)arg1 notebookGuid:(id)arg2 convertGroupSharesToIndividual:(bool)arg3;
- (int)unsetNoteApplicationDataEntry:(id)arg1 guid:(id)arg2 key:(id)arg3;
- (int)unsetResourceApplicationDataEntry:(id)arg1 guid:(id)arg2 key:(id)arg3;
- (void)untagAll:(id)arg1 guid:(id)arg2;
- (int)updateLinkedNotebook:(id)arg1 linkedNotebook:(id)arg2;
- (id)updateNote:(id)arg1 note:(id)arg2;
- (id)updateNoteIfUsnMatches:(id)arg1 note:(id)arg2;
- (int)updateNotebook:(id)arg1 notebook:(id)arg2;
- (int)updatePreferences:(id)arg1 preferencesToUpdate:(id)arg2;
- (int)updateResource:(id)arg1 resource:(id)arg2;
- (int)updateSearch:(id)arg1 search:(id)arg2;
- (int)updateSharedNotebook:(id)arg1 sharedNotebook:(id)arg2;
- (int)updateTag:(id)arg1 tag:(id)arg2;
- (void)updateUserSetting:(id)arg1 setting:(int)arg2 value:(id)arg3;

@end
