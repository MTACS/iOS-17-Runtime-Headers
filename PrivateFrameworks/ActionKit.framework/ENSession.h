
@interface ENSession : NSObject <ENAuthenticatorDelegate, ENBusinessNoteStoreClientDelegate, ENLinkedNoteStoreClientDelegate> {
    ENAuthCache * _authCache;
    id /* block */  _authenticationCompletion;
    <ENAuthenticator> * _authenticator;
    id /* block */  _authorizationBlock;
    ENBusinessNoteStoreClient * _businessNoteStore;
    long long  _businessUploadLimit;
    long long  _businessUploadUsage;
    EDAMUser * _businessUser;
    bool  _isAuthenticated;
    <ENSDKLogging> * _logger;
    NSArray * _notebooksCache;
    NSDate * _notebooksCacheDate;
    long long  _personalUploadLimit;
    long long  _personalUploadUsage;
    ENPreferencesStore * _preferences;
    NSString * _primaryAuthenticationToken;
    ENNoteStoreClient * _primaryNoteStore;
    NSString * _sessionHost;
    NSString * _sourceApplication;
    bool  _supportsLinkedAppNotebook;
    NSObject<OS_dispatch_queue> * _thumbnailQueue;
    EDAMUser * _user;
    ENUserStoreClient * _userStore;
    ENUserStoreClient * _userStorePendingRevocation;
}

@property (nonatomic, retain) ENAuthCache *authCache;
@property (nonatomic, copy) id /* block */ authenticationCompletion;
@property (nonatomic, retain) <ENAuthenticator> *authenticator;
@property (nonatomic, copy) id /* block */ authorizationBlock;
@property (nonatomic, readonly) NSString *businessDisplayName;
@property (nonatomic, retain) ENBusinessNoteStoreClient *businessNoteStore;
@property (nonatomic) long long businessUploadLimit;
@property (nonatomic) long long businessUploadUsage;
@property (nonatomic, retain) EDAMUser *businessUser;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isAuthenticated;
@property (nonatomic, readonly) bool isAuthenticationInProgress;
@property (nonatomic, readonly) bool isBusinessUser;
@property (nonatomic, readonly) bool isPremiumUser;
@property (nonatomic, retain) <ENSDKLogging> *logger;
@property (nonatomic, retain) NSArray *notebooksCache;
@property (nonatomic, retain) NSDate *notebooksCacheDate;
@property (nonatomic) long long personalUploadLimit;
@property (nonatomic) long long personalUploadUsage;
@property (nonatomic, retain) ENPreferencesStore *preferences;
@property (nonatomic, copy) NSString *primaryAuthenticationToken;
@property (nonatomic, retain) ENNoteStoreClient *primaryNoteStore;
@property (nonatomic, copy) NSString *sessionHost;
@property (nonatomic, copy) NSString *sourceApplication;
@property (readonly) Class superclass;
@property (nonatomic) bool supportsLinkedAppNotebook;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *thumbnailQueue;
@property (nonatomic, retain) EDAMUser *user;
@property (nonatomic, readonly) NSString *userDisplayName;
@property (nonatomic, retain) ENUserStoreClient *userStore;
@property (nonatomic, retain) ENUserStoreClient *userStorePendingRevocation;

+ (id)bundleSeedID;
+ (bool)checkSharedSessionSettings;
+ (id)consumerKey;
+ (id)consumerSecret;
+ (id)developerToken;
+ (id)keychainAccessGroup;
+ (id)sessionHostOverride;
+ (void)setDisableRefreshingNotebooksCacheOnLaunch:(bool)arg1;
+ (void)setKeychainGroup:(id)arg1;
+ (void)setSecurityApplicationGroupIdentifier:(id)arg1;
+ (void)setSharedSessionConsumerKey:(id)arg1 consumerSecret:(id)arg2 optionalHost:(id)arg3;
+ (void)setSharedSessionDeveloperToken:(id)arg1 noteStoreUrl:(id)arg2;
+ (id)sharedSession;

- (void).cxx_destruct;
- (void)addCredentials:(id)arg1;
- (bool)appNotebookIsLinked;
- (id)authCache;
- (void)authenticateWithAuthorizationBlock:(id /* block */)arg1 preferRegistration:(bool)arg2 completion:(id /* block */)arg3;
- (id /* block */)authenticationCompletion;
- (id)authenticationTokenForBusinessStoreClient:(id)arg1;
- (id)authenticationTokenForLinkedNotebookRef:(id)arg1;
- (id)authenticationTokenForNoteRef:(id)arg1;
- (id)authenticator;
- (void)authenticatorDidAuthenticateWithCredentials:(id)arg1 authInfo:(id)arg2;
- (void)authenticatorDidFailWithError:(id)arg1;
- (void)authenticatorShouldShowAuthorizationUIWithURL:(id)arg1 callbackPrefix:(id)arg2 completionBlock:(id /* block */)arg3;
- (id /* block */)authorizationBlock;
- (id)businessDisplayName;
- (id)businessNoteStore;
- (long long)businessUploadLimit;
- (long long)businessUploadUsage;
- (id)businessUser;
- (void)completeAuthenticationWithError:(id)arg1;
- (id)credentialStore;
- (id)credentialsForHost:(id)arg1;
- (id)currentProfileName;
- (void)dealloc;
- (void)deleteNote:(id)arg1 completion:(id /* block */)arg2;
- (void)downloadNote:(id)arg1 progress:(id /* block */)arg2 completion:(id /* block */)arg3;
- (void)downloadThumbnailForNote:(id)arg1 maxDimension:(unsigned long long)arg2 completion:(id /* block */)arg3;
- (void)findNotesWithSearch:(id)arg1 inNotebook:(id)arg2 orScope:(unsigned long long)arg3 sortOrder:(unsigned long long)arg4 maxResults:(unsigned long long)arg5 completion:(id /* block */)arg6;
- (void)findNotes_completeWithContext:(id)arg1 error:(id)arg2;
- (void)findNotes_findInBusinessScopeWithContext:(id)arg1;
- (void)findNotes_findInLinkedScopeWithContext:(id)arg1;
- (void)findNotes_findInPersonalScopeWithContext:(id)arg1;
- (void)findNotes_listNotebooksWithContext:(id)arg1;
- (void)findNotes_nextFindInLinkedScopeWithContext:(id)arg1;
- (void)findNotes_processResultsWithContext:(id)arg1;
- (bool)handleOpenURL:(id)arg1;
- (id)init;
- (bool)isAuthenticated;
- (bool)isAuthenticationInProgress;
- (bool)isBusinessUser;
- (bool)isErrorDueToRestrictedAuth:(id)arg1;
- (bool)isPremiumUser;
- (void)listNotebooksWithCompletion:(id /* block */)arg1;
- (void)listNotebooks_cleanCache;
- (void)listNotebooks_completePendingSharedNotebookWithContext:(id)arg1;
- (void)listNotebooks_completeWithContext:(id)arg1 error:(id)arg2;
- (void)listNotebooks_fetchBusinessNotebooksWithContext:(id)arg1;
- (void)listNotebooks_fetchSharedBusinessNotebooksWithContext:(id)arg1;
- (void)listNotebooks_fetchSharedNotebooksWithContext:(id)arg1;
- (void)listNotebooks_listLinkedNotebooksWithContext:(id)arg1;
- (void)listNotebooks_listNotebooksWithContext:(id)arg1;
- (void)listNotebooks_listSharedNotebooksWithContext:(id)arg1;
- (void)listNotebooks_prepareResultsWithContext:(id)arg1;
- (void)listNotebooks_processBusinessNotebooksWithContext:(id)arg1;
- (void)listNotebooks_processSharedNotebooksWithContext:(id)arg1;
- (void)listWritableNotebooksWithCompletion:(id /* block */)arg1;
- (id)logger;
- (id)noteStoreForLinkedNotebook:(id)arg1;
- (id)noteStoreForNoteRef:(id)arg1;
- (id)noteStoreForNotebook:(id)arg1;
- (id)noteStoreUrlForBusinessStoreClient:(id)arg1;
- (id)notebooksCache;
- (id)notebooksCacheDate;
- (void)notifyAuthenticationChanged;
- (void)performPostAuthentication;
- (long long)personalUploadLimit;
- (long long)personalUploadUsage;
- (id)preferences;
- (id)primaryAuthenticationToken;
- (id)primaryCredentials;
- (id)primaryNoteStore;
- (void)refreshUploadUsage;
- (void)saveCredentialStore:(id)arg1;
- (void)selectInitialSessionHost;
- (id)sessionHost;
- (void)setAuthCache:(id)arg1;
- (void)setAuthenticationCompletion:(id /* block */)arg1;
- (void)setAuthenticator:(id)arg1;
- (void)setAuthorizationBlock:(id /* block */)arg1;
- (void)setBusinessNoteStore:(id)arg1;
- (void)setBusinessUploadLimit:(long long)arg1;
- (void)setBusinessUploadUsage:(long long)arg1;
- (void)setBusinessUser:(id)arg1;
- (void)setCurrentProfileNameFromHost:(id)arg1;
- (void)setIsAuthenticated:(bool)arg1;
- (void)setLogger:(id)arg1;
- (void)setNotebooksCache:(id)arg1;
- (void)setNotebooksCacheDate:(id)arg1;
- (void)setPersonalUploadLimit:(long long)arg1;
- (void)setPersonalUploadUsage:(long long)arg1;
- (void)setPreferences:(id)arg1;
- (void)setPrimaryAuthenticationToken:(id)arg1;
- (void)setPrimaryNoteStore:(id)arg1;
- (void)setSessionHost:(id)arg1;
- (void)setSourceApplication:(id)arg1;
- (void)setSupportsLinkedAppNotebook:(bool)arg1;
- (void)setThumbnailQueue:(id)arg1;
- (void)setUser:(id)arg1;
- (void)setUserStore:(id)arg1;
- (void)setUserStorePendingRevocation:(id)arg1;
- (id)shardIdForNoteRef:(id)arg1;
- (void)shareNote:(id)arg1 completion:(id /* block */)arg2;
- (id)sourceApplication;
- (void)startup;
- (void)storeClientFailedAuthentication:(id)arg1;
- (bool)supportsLinkedAppNotebook;
- (id)thumbnailQueue;
- (void)unauthenticate;
- (void)unauthenticateAndRevokeAccessToken:(bool)arg1;
- (void)unauthenticateWithoutRevokingAccessToken;
- (void)uploadNote:(id)arg1 notebook:(id)arg2 completion:(id /* block */)arg3;
- (void)uploadNote:(id)arg1 policy:(long long)arg2 toNotebook:(id)arg3 orReplaceNote:(id)arg4 progress:(id /* block */)arg5 completion:(id /* block */)arg6;
- (void)uploadNote_completeWithContext:(id)arg1 error:(id)arg2;
- (void)uploadNote_createWithContext:(id)arg1;
- (void)uploadNote_determineDestinationWithContext:(id)arg1;
- (void)uploadNote_findLinkedAppNotebookWithContext:(id)arg1;
- (void)uploadNote_findSharedAppNotebookWithContext:(id)arg1;
- (void)uploadNote_updateWithContext:(id)arg1;
- (id)user;
- (id)userDisplayName;
- (int)userID;
- (id)userStore;
- (id)userStoreClientForBootstrapping;
- (id)userStorePendingRevocation;
- (id)userStoreUrl;
- (id)validBusinessAuthenticationResult;

@end
