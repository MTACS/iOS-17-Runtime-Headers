
@interface ENAFURLConnectionOperation : NSOperation <NSCoding, NSCopying, NSURLConnectionDataDelegate, NSURLConnectionDelegate> {
    id /* block */  _authenticationAgainstProtectionSpace;
    id /* block */  _authenticationChallenge;
    id /* block */  _cacheResponse;
    bool  _cancelled;
    NSURLConnection * _connection;
    id /* block */  _downloadProgress;
    NSError * _error;
    NSRecursiveLock * _lock;
    NSOutputStream * _outputStream;
    id /* block */  _redirectResponse;
    NSURLRequest * _request;
    NSURLResponse * _response;
    NSData * _responseData;
    NSString * _responseString;
    NSSet * _runLoopModes;
    short  _state;
    long long  _totalBytesRead;
    id /* block */  _uploadProgress;
}

@property (nonatomic, copy) id /* block */ authenticationAgainstProtectionSpace;
@property (nonatomic, copy) id /* block */ authenticationChallenge;
@property (nonatomic, copy) id /* block */ cacheResponse;
@property (getter=isCancelled, nonatomic) bool cancelled;
@property (nonatomic, retain) NSURLConnection *connection;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) id /* block */ downloadProgress;
@property (nonatomic, retain) NSError *error;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSInputStream *inputStream;
@property (nonatomic, retain) NSRecursiveLock *lock;
@property (nonatomic, retain) NSOutputStream *outputStream;
@property (nonatomic, copy) id /* block */ redirectResponse;
@property (nonatomic, retain) NSURLRequest *request;
@property (nonatomic, retain) NSURLResponse *response;
@property (nonatomic, retain) NSData *responseData;
@property (nonatomic, copy) NSString *responseString;
@property (nonatomic, retain) NSSet *runLoopModes;
@property (nonatomic) short state;
@property (readonly) Class superclass;
@property (nonatomic) long long totalBytesRead;
@property (nonatomic, copy) id /* block */ uploadProgress;

+ (id)networkRequestThread;
+ (void)networkRequestThreadEntryPoint:(id)arg1;

- (void).cxx_destruct;
- (id /* block */)authenticationAgainstProtectionSpace;
- (id /* block */)authenticationChallenge;
- (id /* block */)cacheResponse;
- (void)cancel;
- (void)cancelConnection;
- (id)connection;
- (bool)connection:(id)arg1 canAuthenticateAgainstProtectionSpace:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connection:(id)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (id)connection:(id)arg1 willCacheResponse:(id)arg2;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)connectionDidFinishLoading:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id /* block */)downloadProgress;
- (void)encodeWithCoder:(id)arg1;
- (id)error;
- (void)finish;
- (id)initWithCoder:(id)arg1;
- (id)initWithRequest:(id)arg1;
- (id)inputStream;
- (bool)isCancelled;
- (bool)isConcurrent;
- (bool)isExecuting;
- (bool)isFinished;
- (bool)isPaused;
- (bool)isReady;
- (id)lock;
- (void)operationDidStart;
- (id)outputStream;
- (void)pause;
- (id /* block */)redirectResponse;
- (id)request;
- (id)response;
- (id)responseData;
- (id)responseString;
- (void)resume;
- (id)runLoopModes;
- (void)setAuthenticationAgainstProtectionSpace:(id /* block */)arg1;
- (void)setAuthenticationAgainstProtectionSpaceBlock:(id /* block */)arg1;
- (void)setAuthenticationChallenge:(id /* block */)arg1;
- (void)setAuthenticationChallengeBlock:(id /* block */)arg1;
- (void)setCacheResponse:(id /* block */)arg1;
- (void)setCacheResponseBlock:(id /* block */)arg1;
- (void)setCancelled:(bool)arg1;
- (void)setCompletionBlock:(id /* block */)arg1;
- (void)setConnection:(id)arg1;
- (void)setDownloadProgress:(id /* block */)arg1;
- (void)setDownloadProgressBlock:(id /* block */)arg1;
- (void)setError:(id)arg1;
- (void)setInputStream:(id)arg1;
- (void)setLock:(id)arg1;
- (void)setOutputStream:(id)arg1;
- (void)setRedirectResponse:(id /* block */)arg1;
- (void)setRedirectResponseBlock:(id /* block */)arg1;
- (void)setRequest:(id)arg1;
- (void)setResponse:(id)arg1;
- (void)setResponseData:(id)arg1;
- (void)setResponseString:(id)arg1;
- (void)setRunLoopModes:(id)arg1;
- (void)setState:(short)arg1;
- (void)setTotalBytesRead:(long long)arg1;
- (void)setUploadProgress:(id /* block */)arg1;
- (void)setUploadProgressBlock:(id /* block */)arg1;
- (void)start;
- (short)state;
- (long long)totalBytesRead;
- (id /* block */)uploadProgress;

@end
