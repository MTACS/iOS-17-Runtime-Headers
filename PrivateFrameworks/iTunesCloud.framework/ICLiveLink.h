
@interface ICLiveLink : NSObject <ICSharedListeningConnectionControllerDelegate> {
    ICLiveLinkIdentity * _clientSpecifiedIdentity;
    ICSharedListeningConnectionController * _connectionController;
    long long  _currentRetryCount;
    NSString * _deferredReconnectReason;
    <ICLiveLinkDelegate> * _delegate;
    NSObject<OS_dispatch_queue> * _delegateQueue;
    bool  _expectingToJoinAsInitiator;
    NSString * _expectingToJoinStartItemIdentifier;
    NSString * _forcedReconnectReason;
    NSString * _identifier;
    long long  _localParticipantServerID;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    long long  _maxRetries;
    long long  _maxRetryWaitPeriod;
    NSArray * _participants;
    NSMutableArray * _pendingActions;
    NSMutableDictionary * _pendingRequests;
    ICLiveLinkPlaybackCoordinatorMedium * _playbackCoordinatorMedium;
    bool  _processingAction;
    ICSharedListeningQueue * _queue;
    bool  _receivedDisconnectionNotice;
    NSString * _sessionKey;
    bool  _started;
    bool  _starting;
}

@property (nonatomic, readonly, copy) ICLiveLinkIdentity *clientSpecifiedIdentity;
@property (nonatomic, retain) ICSharedListeningConnectionController *connectionController;
@property (nonatomic) long long currentRetryCount;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, copy) NSString *deferredReconnectReason;
@property (nonatomic) <ICLiveLinkDelegate> *delegate;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *delegateQueue;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool expectingToJoinAsInitiator;
@property (nonatomic, copy) NSString *expectingToJoinStartItemIdentifier;
@property (nonatomic, copy) NSString *forcedReconnectReason;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSString *identifier;
@property (nonatomic, readonly, copy) ICLiveLinkIdentity *identity;
@property (nonatomic, readonly) NSURL *invitationURL;
@property (nonatomic, readonly) bool isExpectingToJoinWithStartItem;
@property (nonatomic, readonly) long long localParticipantServerID;
@property (nonatomic, readonly) struct os_unfair_lock_s { unsigned int x1; } lock;
@property (nonatomic) long long maxRetries;
@property (nonatomic) long long maxRetryWaitPeriod;
@property (nonatomic, readonly) NSArray *participants;
@property (nonatomic, retain) NSMutableArray *pendingActions;
@property (nonatomic, retain) NSMutableDictionary *pendingRequests;
@property (nonatomic, retain) ICLiveLinkPlaybackCoordinatorMedium *playbackCoordinatorMedium;
@property (nonatomic) bool processingAction;
@property (nonatomic, readonly, copy) ICSharedListeningQueue *queue;
@property (nonatomic) bool receivedDisconnectionNotice;
@property (nonatomic, readonly) NSString *sessionKey;
@property (getter=isStarted, nonatomic) bool started;
@property (getter=isStarting, nonatomic) bool starting;
@property (readonly) Class superclass;

+ (id)linkWithIdentity:(id)arg1;
+ (id)linkWithSessionIdentifier:(id)arg1 identity:(id)arg2;

- (void).cxx_destruct;
- (void)_didReceiveAddItemsAction:(id)arg1 completion:(id /* block */)arg2;
- (void)_didReceiveCurrentItemChangeAction:(id)arg1 completion:(id /* block */)arg2;
- (void)_didReceiveCurrentItemTransitionAction:(id)arg1 completion:(id /* block */)arg2;
- (void)_didReceiveMoveItemAction:(id)arg1 completion:(id /* block */)arg2;
- (void)_didReceiveParticipantChangeAction:(id)arg1 completion:(id /* block */)arg2;
- (void)_didReceivePlayNowQueueItemsAction:(id)arg1 completion:(id /* block */)arg2;
- (void)_didReceivePlaybackSyncAction:(id)arg1 completion:(id /* block */)arg2;
- (void)_didReceivePluginErrorMessage:(id)arg1;
- (void)_didReceiveQueueSyncAction:(id)arg1 completion:(id /* block */)arg2;
- (void)_didReceiveReactionAction:(id)arg1 completion:(id /* block */)arg2;
- (void)_didReceiveRemoveItemAction:(id)arg1 completion:(id /* block */)arg2;
- (void)_didReceiveReplaceQueueItemsAction:(id)arg1 completion:(id /* block */)arg2;
- (void)_didReceiveServerNoticeAction:(id)arg1 completion:(id /* block */)arg2;
- (void)_emitSessionEventIfNeededForAction:(id)arg1 disconnectedParticipant:(id)arg2;
- (void)_handlePotentiallyRecoverableError:(id)arg1;
- (void)_handleReceivedMessage:(id)arg1;
- (void)_handleUpdatedParticipantQuery:(id)arg1;
- (void)_handleUpdatedQueue:(id)arg1 playbackControlSettings:(id)arg2 serverQueueContext:(id)arg3;
- (id)_participantForAction:(id)arg1;
- (id)_participantForParticipantID:(long long)arg1;
- (void)_performClientInfoExchangeAndInitializeQueue;
- (void)_processPendingActions;
- (void)_storeTraceID:(id)arg1 completion:(id /* block */)arg2;
- (void)_updateParticipantsWithReason:(id)arg1 completion:(id /* block */)arg2;
- (void)_updatePlaybackControlSettingsWithReason:(id)arg1 completion:(id /* block */)arg2;
- (void)_updateQueueWithReason:(id)arg1 completion:(id /* block */)arg2;
- (void)beginSynchronizedPlaybackWithAVCFPlaybackCoordinator:(void*)arg1;
- (void)beginSynchronizedPlaybackWithAVPlaybackCoordinator:(id)arg1;
- (void)broadcastDirectCurrentItemChangedToItemIdentifier:(id)arg1;
- (id)clientSpecifiedIdentity;
- (id)connectionController;
- (void)connectionController:(id)arg1 connectionDidEndWithError:(id)arg2;
- (void)connectionController:(id)arg1 connectionDidReceiveMessage:(id)arg2;
- (void)connectionController:(id)arg1 didEncounterFatalError:(id)arg2;
- (void)connectionControllerConnectionDidStart:(id)arg1;
- (long long)currentRetryCount;
- (void)dealloc;
- (id)deferredReconnectReason;
- (id)delegate;
- (id)delegateQueue;
- (void)endSynchronizedPlayback;
- (bool)expectingToJoinAsInitiator;
- (id)expectingToJoinStartItemIdentifier;
- (void)expectingToJoinWithStartItem:(id)arg1 asInitiator:(bool)arg2;
- (void)fetchPlaybackSyncStateForMediumWithCompletion:(id /* block */)arg1;
- (void)fetchPlaybackSyncStateWithCompletion:(id /* block */)arg1;
- (id)forcedReconnectReason;
- (id)identifier;
- (id)identity;
- (id)initWithSharedListeningSessionIdentifier:(id)arg1 identity:(id)arg2;
- (id)invitationURL;
- (bool)isExpectingToJoinWithStartItem;
- (bool)isStarted;
- (bool)isStarting;
- (long long)localParticipantServerID;
- (struct os_unfair_lock_s { unsigned int x1; })lock;
- (long long)maxRetries;
- (long long)maxRetryWaitPeriod;
- (id)participantForParticipantUUID:(id)arg1;
- (id)participants;
- (id)pendingActions;
- (id)pendingRequests;
- (id)playbackCoordinatorMedium;
- (bool)processingAction;
- (id)queue;
- (void)receivedCurrentItemIdentifier:(id)arg1 fromParticipant:(id)arg2;
- (bool)receivedDisconnectionNotice;
- (void)receivedEvent:(id)arg1;
- (void)reconnectWithReason:(id)arg1 options:(id)arg2;
- (void)sendMessage:(id)arg1 completion:(id /* block */)arg2;
- (void)sendPlaybackSyncPayload:(id)arg1;
- (id)sessionKey;
- (void)setConnectionController:(id)arg1;
- (void)setCurrentRetryCount:(long long)arg1;
- (void)setDeferredReconnectReason:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setExpectingToJoinAsInitiator:(bool)arg1;
- (void)setExpectingToJoinStartItemIdentifier:(id)arg1;
- (void)setForcedReconnectReason:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setMaxRetries:(long long)arg1;
- (void)setMaxRetryWaitPeriod:(long long)arg1;
- (void)setPendingActions:(id)arg1;
- (void)setPendingRequests:(id)arg1;
- (void)setPlaybackCoordinatorMedium:(id)arg1;
- (void)setProcessingAction:(bool)arg1;
- (void)setReceivedDisconnectionNotice:(bool)arg1;
- (void)setStarted:(bool)arg1;
- (void)setStarting:(bool)arg1;
- (void)start;
- (void)stop;
- (void)updateWithIdentity:(id)arg1;

@end
