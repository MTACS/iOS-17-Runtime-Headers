
@interface APRKMediaPlayer : NSObject <APRKContentKeyHelperDelegate, APRKResourceLoaderHelperDelegate, AVPlayerItemMetadataCollectorPushDelegate> {
    NSString * _audioSessionMode;
    NSDictionary * _cachedSSLProperties;
    NSArray * _cachedSelectedMediaArray;
    APRKContentKeyHelper * _contentKeyHelper;
    NSString * _currentInterstitialEventID;
    APRKMetadata * _currentItemMetadata;
    NSString * _currentItemUUID;
    bool  _disableAutoResumeAfterSeek;
    struct OpaqueAPReceiverFairPlayHelper { } * _fpHelper;
    long long  _internalPlaybackState;
    NSArray * _interstitialEvents;
    APRKMediaPlayer * _interstitialPlayer;
    bool  _isFirstSetRateReceived;
    bool  _isInTrickPlay;
    bool  _isInterestedInDateRange;
    bool  _isInterstitialPlayer;
    bool  _isInvalidated;
    bool  _isP2PWiFiSession;
    bool  _isWaitingToSetRateFromSenderAfterSeek;
    float  _lastNonZeroRate;
    NSArray * _lastReportedDateRanges;
    NSObject<OS_dispatch_queue> * _messageQueue;
    <APRKMediaPlayerMessagingDelegate> * _messagingDelegate;
    NSMutableDictionary * _pendingSenderSeekMessages;
    AVQueuePlayer * _player;
    NSString * _previousItemUUID;
    float  _rateBeforeTrickPlay;
    struct OpaqueAPSNetworkClock { } * _receiverNetworkClock;
    APRKResourceLoaderHelper * _resourceLoaderHelper;
    struct OpaqueAPSNetworkAddress { } * _sessionReceiverAddr;
    long long  _stallCount;
}

@property (nonatomic, readonly) AVQueuePlayer *backingAVQueuePlayer;
@property (nonatomic, readonly) AVPlayerItem *currentItem;
@property (nonatomic, retain) APRKMetadata *currentItemMetadata;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isInterstitialPlayer;
@property (nonatomic) <APRKMediaPlayerMessagingDelegate> *messagingDelegate;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)_SSLPropertiesforTLSInfo:(id)arg1;
- (void)_addPendingSeekID:(int)arg1 withMessage:(id)arg2 forItem:(id)arg3 ignoreSeekCompletion:(bool)arg4;
- (bool)_attemptToSetSelectedMediaArray:(id)arg1;
- (id)_currentPlaybackInfoDictionary;
- (bool)_ensureFairPlayHelper;
- (void)_ensureInterstitialPlayer;
- (id)_figPlaybackStateStringFrom:(long long)arg1;
- (id)_fixedIPContentLocationFromURLString:(id)arg1 error:(id*)arg2;
- (id)_frontPlayerItem;
- (id)_getPropertyWithDictionary:(id)arg1;
- (void)_handleCurrentItemChangedNotification:(id)arg1;
- (void)_handleCurrentItemPlaybackStalledNotification:(id)arg1;
- (void)_handleCurrentItemPlayedToEndNotification:(id)arg1;
- (void)_handleCurrentPlayerItemMediaSelectionDidChangeNotification:(id)arg1;
- (void)_handleCurrentPlayerItemNewAccessLogEntryNotification:(id)arg1;
- (void)_handleCurrentPlayerItemReachedTimeToPauseBufferingNotification:(id)arg1;
- (void)_handleCurrentPlayerItemReachedTimeToPausePlaybackNotification:(id)arg1;
- (void)_handleSeekDidCompleteNotification:(id)arg1;
- (void)_handleTimeJumpedNotification:(id)arg1;
- (void)_insertPlayQueueItemWithDictionary:(id)arg1;
- (void)_pausePlayerIfNeededForState:(long long)arg1;
- (id)_playerItemForUUID:(id)arg1;
- (void)_prepareForNewItemPlaybackWithCompletionBlock:(id /* block */)arg1;
- (id)_processAuthorizeItemWithDictionary:(id)arg1;
- (id)_processMessageWithDictionaryInternal:(id)arg1;
- (id)_processPlaybackInfoRequestWithDictionary:(id)arg1;
- (void)_processStreamingKeyWithDictionary:(id)arg1;
- (void)_processUnhandledURLWithDictionary:(id)arg1;
- (void)_registerNotificationHandlersAndInsertPlayerItem:(id)arg1 afterItem:(id)arg2;
- (void)_registerNotificationHandlersForPlayer;
- (void)_removePendingSeekID:(int)arg1 forItem:(id)arg2;
- (void)_removePlayQueueItemWithDictionary:(id)arg1;
- (id)_seekRequestMessageForSeekID:(int)arg1 forItem:(id)arg2;
- (void)_seekWithDictionary:(id)arg1;
- (void)_sendUpstreamErrorMessageWithError:(id)arg1;
- (void)_sendUpstreamMessageWithDictionary:(id)arg1;
- (void)_sendUpstreamPlaybackStateMessageWithPlaybackStateString:(id)arg1 stoppedBecauseInterrupted:(bool)arg2;
- (id)_serializeTimeRanges:(id)arg1;
- (void)_setPropertyWithDictionary:(id)arg1;
- (void)_setRateWithDictionary:(id)arg1;
- (bool)_shouldIgnoreSeekCompletionForSeekID:(int)arg1 forItem:(id)arg2;
- (void)_stopWithDictionary:(id)arg1;
- (id)_timedMetadataFromAVTimedMetadata:(id)arg1;
- (void)_unregisterNotificationHandlersAndRemovePlayerItem:(id)arg1;
- (void)_unregisterNotificationHandlersForPlayer;
- (void)_updateAudioSessionMode:(id)arg1;
- (void)_updatePlaybackStateWithState:(long long)arg1 stoppedBecauseInterrupted:(bool)arg2 shouldSendUpstreamMessage:(bool)arg3;
- (void)addDateRangeCollectorToItem:(id)arg1;
- (id)backingAVQueuePlayer;
- (void)contentKeyHelper:(id)arg1 didGenerateSecureStopRecordPayload:(id)arg2;
- (void)contentKeyHelper:(id)arg1 wantsToPerformContentKeyRequestWithDictionary:(id)arg2;
- (id)currentItem;
- (id)currentItemMetadata;
- (void)dealloc;
- (id)initWithP2PWiFiSupport:(bool)arg1 isInterstitialPlayer:(bool)arg2;
- (void)invalidate;
- (bool)isInterstitialPlayer;
- (id)messagingDelegate;
- (void)metadataCollector:(id)arg1 didCollectDateRangeMetadataGroups:(id)arg2 indexesOfNewGroups:(id)arg3 indexesOfModifiedGroups:(id)arg4;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)processMessageWithDictionaryAsync:(id)arg1;
- (id)processMessageWithDictionarySync:(id)arg1;
- (void)processTLSInfoDictionary:(id)arg1;
- (void)resourceLoaderHelper:(id)arg1 wantsToPerformUnhandledURLRequestWithDictionary:(id)arg2 forRequestID:(id)arg3;
- (id)selectedMediaArrayForItem:(id)arg1;
- (void)setCurrentItemMetadata:(id)arg1;
- (void)setMessagingDelegate:(id)arg1;
- (void)setReceiverNetworkClock:(struct OpaqueAPSNetworkClock { }*)arg1;
- (void)setSessionReceiverAddress:(struct OpaqueAPSNetworkAddress { }*)arg1;
- (bool)shouldDelegateToInterstitialPlayerForMessage:(id)arg1;
- (void)stopWithCompletionBlock:(id /* block */)arg1;

@end
