
@interface SBUISystemApertureElementConfiguration : NSObject <SBUISystemApertureElement> {
    BSMutableSettings * __storage;
    long long  _activeLayoutMode;
    UIViewController * _containerViewController;
    UIView<SBUISystemApertureAccessoryView> * _detachedMinimalView;
    UIViewController<SBUISystemApertureElement> * _elementViewController;
    UIView<SBUISystemApertureAccessoryView> * _leadingView;
    UIView<SBUISystemApertureAccessoryView> * _minimalView;
    BSSettings * _otherSceneClientSettingsRepresentation;
    struct NSDirectionalEdgeInsets { 
        double top; 
        double leading; 
        double bottom; 
        double trailing; 
    }  _preferredOutsetsFromUnsafeArea;
    bool  _shouldDeferViewSizingPreferenceUpdates;
    UIView<SBUISystemApertureAccessoryView> * _trailingView;
}

@property (nonatomic, readonly) BSMutableSettings *_storage;
@property (nonatomic) long long activeLayoutMode;
@property (nonatomic) long long appliedLayoutMode;
@property (nonatomic, copy) NSString *associatedAppBundleIdentifier;
@property (nonatomic, copy) NSString *associatedScenePersistenceIdentifier;
@property (nonatomic) bool attachedMinimalViewRequiresZeroPadding;
@property (nonatomic, copy) NSSet *backgroundActivitiesToSuppress;
@property (nonatomic) bool canRequestAlertingAssertion;
@property (nonatomic) UIViewController *containerViewController;
@property (nonatomic) long long contentRole;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) UIView<SBUISystemApertureAccessoryView> *detachedMinimalView;
@property (nonatomic, copy) NSString *elementIdentifier;
@property (nonatomic) UIViewController<SBUISystemApertureElement> *elementViewController;
@property (nonatomic) bool hasMenuPresentation;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) UIColor *keyColor;
@property (nonatomic, retain) BSAction *launchAction;
@property (nonatomic, copy) NSURL *launchURL;
@property (nonatomic, retain) UIView<SBUISystemApertureAccessoryView> *leadingView;
@property (nonatomic) long long maximumLayoutMode;
@property (nonatomic, retain) UIView<SBUISystemApertureAccessoryView> *minimalView;
@property (nonatomic) unsigned long long minimalViewLayoutAxis;
@property (nonatomic) long long minimumLayoutMode;
@property (nonatomic, readonly) BSSettings *otherSceneClientSettingsRepresentation;
@property (nonatomic) struct CGSize { double x1; double x2; } preferredCustomAspectRatio;
@property (nonatomic) long long preferredCustomLayout;
@property (nonatomic) double preferredHeightForBottomSafeArea;
@property (nonatomic) long long preferredLayoutMode;
@property (nonatomic) struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; } preferredOutsetsFromUnsafeArea;
@property (nonatomic, retain) NSValue *preferredPaddingForCompactLayout;
@property (nonatomic) unsigned long long presentationBehaviors;
@property (nonatomic) bool preventsAutomaticDismissal;
@property (nonatomic) bool preventsInteractiveDismissal;
@property (nonatomic) bool shouldDeferViewSizingPreferenceUpdates;
@property (nonatomic, readonly) unsigned long long statusBarStyleOverridesToSuppress;
@property (readonly) Class superclass;
@property (nonatomic, retain) UIView<SBUISystemApertureAccessoryView> *trailingView;

- (void).cxx_destruct;
- (bool)SBUISA_attachedMinimalViewRequiresZeroPadding;
- (bool)_elementRequiresConstraintBasedLayout;
- (bool)_elementSupportsDynamicResizing;
- (void)_invalidateOtherSceneClientSettingsRepresentation;
- (id)_storage;
- (id)_strongElementViewController;
- (void)_updateStorageForViewProperties;
- (void)_updateStorageForViewPropertiesIfNeeded;
- (long long)activeLayoutMode;
- (long long)appliedLayoutMode;
- (id)associatedAppBundleIdentifier;
- (id)associatedScenePersistenceIdentifier;
- (bool)attachedMinimalViewRequiresZeroPadding;
- (id)backgroundActivitiesToSuppress;
- (id)containerViewController;
- (long long)contentRole;
- (id)detachedMinimalView;
- (id)elementIdentifier;
- (id)elementViewController;
- (bool)hasMenuPresentation;
- (id)keyColor;
- (id)launchAction;
- (id)launchURL;
- (id)leadingView;
- (struct CGSize { double x1; double x2; })maximumAccessoryViewSizeForLayoutMode:(long long)arg1;
- (long long)maximumLayoutMode;
- (id)minimalView;
- (long long)minimumLayoutMode;
- (id)otherSceneClientSettingsRepresentation;
- (struct CGSize { double x1; double x2; })preferredContentSizeClampedToMaximumExpandedSize;
- (struct CGSize { double x1; double x2; })preferredCustomAspectRatio;
- (long long)preferredCustomLayout;
- (double)preferredHeightForBottomSafeArea;
- (long long)preferredLayoutMode;
- (struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })preferredOutsetsFromUnsafeArea;
- (id)preferredPaddingForCompactLayout;
- (unsigned long long)presentationBehaviors;
- (bool)preventsAutomaticDismissal;
- (bool)preventsInteractiveDismissal;
- (void)refreshViewSizingPreferences;
- (void)setActiveLayoutMode:(long long)arg1;
- (void)setAppliedLayoutMode:(long long)arg1;
- (void)setAssociatedAppBundleIdentifier:(id)arg1;
- (void)setAssociatedScenePersistenceIdentifier:(id)arg1;
- (void)setAttachedMinimalViewRequiresZeroPadding:(bool)arg1;
- (void)setBackgroundActivitiesToSuppress:(id)arg1;
- (void)setContainerViewController:(id)arg1;
- (void)setContentRole:(long long)arg1;
- (void)setDetachedMinimalView:(id)arg1;
- (void)setElementIdentifier:(id)arg1;
- (void)setElementViewController:(id)arg1;
- (void)setHasMenuPresentation:(bool)arg1;
- (void)setKeyColor:(id)arg1;
- (void)setLaunchAction:(id)arg1;
- (void)setLaunchURL:(id)arg1;
- (void)setLeadingView:(id)arg1;
- (void)setMaximumLayoutMode:(long long)arg1;
- (void)setMinimalView:(id)arg1;
- (void)setMinimumLayoutMode:(long long)arg1;
- (void)setPreferredCustomAspectRatio:(struct CGSize { double x1; double x2; })arg1;
- (void)setPreferredCustomLayout:(long long)arg1;
- (void)setPreferredHeightForBottomSafeArea:(double)arg1;
- (void)setPreferredLayoutMode:(long long)arg1;
- (void)setPreferredOutsetsFromUnsafeArea:(struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setPreferredOutsetsfromUnsafeArea:(struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setPreferredPaddingForCompactLayout:(id)arg1;
- (void)setPresentationBehaviors:(unsigned long long)arg1;
- (void)setPreventsAutomaticDismissal:(bool)arg1;
- (void)setPreventsInteractiveDismissal:(bool)arg1;
- (void)setShouldDeferViewSizingPreferenceUpdates:(bool)arg1;
- (void)setTrailingView:(id)arg1;
- (bool)shouldDeferViewSizingPreferenceUpdates;
- (id)trailingView;
- (void)validateConfiguration;

@end
