
@interface SBUISystemApertureElementSource : NSObject <SBUISystemApertureHostedElementContext, UIGestureRecognizerDelegate, _UISceneComponentProviding, _UISceneSettingsDiffAction> {
    NSArray * __activeConstraintsForLayoutMode;
    UIViewController<SBUISystemApertureElement> * __elementViewController;
    NSLayoutConstraint * __maximumLeadingViewWidthConstraint;
    NSLayoutConstraint * __maximumTrailingViewWidthConstraint;
    NSHashTable * __observers;
    _SBUISystemApertureAlertingAssertion * _alertingAssertion;
    _SBUISystemApertureElementSourceAnimationContext * _animationContext;
    NSMutableDictionary * _constraintsByLayoutMode;
    SBUIDependencyGestureRecognizer * _dependencyGestureRecognizer;
    bool  _elementCanRequestAlertingAssertion;
    bool  _elementHasMenuPresentation;
    BSSettings * _lastKnownOtherSettings;
    long long  _layoutModeAsFarAsClientsAreConcerned;
    SBUISystemApertureAnimationParameters * _localSceneResizeParameters;
    SBUISystemApertureElementConfiguration * _mutableConfiguration;
    bool  _presentationPossible;
    UIScene * _scene;
    <SBUISystemApertureElementProviding> * _systemApertureElementViewControllerProvider;
    UIWindow * _systemApertureOwnedWindow;
    NSMutableArray * _transitionContexts;
    UIWindowScene * _windowScene;
}

@property (nonatomic, copy) NSArray *_activeConstraintsForLayoutMode;
@property (nonatomic) UIViewController<SBUISystemApertureElement> *_elementViewController;
@property (nonatomic, copy) NSLayoutConstraint *_maximumLeadingViewWidthConstraint;
@property (nonatomic, copy) NSLayoutConstraint *_maximumTrailingViewWidthConstraint;
@property (nonatomic, retain) NSHashTable *_observers;
@property (getter=_scene, setter=_setScene:, nonatomic) UIScene *_scene;
@property (getter=_alertingAssertion, setter=_setAlertingAssertion:, nonatomic, retain) _SBUISystemApertureAlertingAssertion *alertingAssertion;
@property (nonatomic, readonly) _SBUISystemApertureElementSourceAnimationContext *animationContext;
@property (nonatomic, readonly) NSString *associatedScenePersistenceIdentifier;
@property (getter=isBeingRemoved, nonatomic, readonly) bool beingRemoved;
@property (nonatomic) UIView *containerView;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, retain) SBUIDependencyGestureRecognizer *dependencyGestureRecognizer;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool elementCanRequestAlertingAssertion;
@property (nonatomic) bool elementHasMenuPresentation;
@property (getter=isFallbackContext, nonatomic, readonly) bool fallbackContext;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) BSSettings *lastKnownOtherSettings;
@property (nonatomic, readonly) UIView *layoutGuideRootView;
@property (nonatomic, readonly) long long layoutMode;
@property (nonatomic) long long layoutModeAsFarAsClientsAreConcerned;
@property (nonatomic, retain) SBUISystemApertureAnimationParameters *localSceneResizeParameters;
@property (nonatomic, readonly) SBUISystemApertureElementConfiguration *mutableConfiguration;
@property (getter=isPresentationPossible, nonatomic, readonly) bool presentationPossible;
@property (readonly) Class superclass;
@property (nonatomic, readonly) UIViewController<SBUISystemApertureElement> *systemApertureElement;
@property (nonatomic) <SBUISystemApertureElementProviding> *systemApertureElementProvider;
@property (nonatomic) <SBUISystemApertureElementProviding> *systemApertureElementViewControllerProvider;
@property (nonatomic, retain) UIWindow *systemApertureOwnedWindow;
@property (nonatomic, readonly) SBUISystemApertureElementTransitionContext *transitionContext;
@property (nonatomic, readonly) NSMutableArray *transitionContexts;
@property (nonatomic) UIWindowScene *windowScene;

+ (void)_addSource:(id)arg1;
+ (void)_removeSource:(id)arg1;
+ (id)openSources;
+ (id)unassociatedContext;

- (void).cxx_destruct;
- (id)_FBSScene;
- (void)_activateConstraintsForActiveLayoutModeIfNeeded:(long long)arg1;
- (void)_activateConstraintsForLayoutMode:(long long)arg1;
- (id)_activeConstraintsForLayoutMode;
- (id)_alertingAssertion;
- (void)_animateWithSceneResizeAction:(id)arg1;
- (void)_conformsToSystemApertureElementContextPrivate;
- (void)_conformsToSystemApertureHostedElementContext;
- (id)_constraintsForLayoutMode:(long long)arg1;
- (void)_contentSizeCategoryDidChange;
- (id)_elementIdentifierIfExists;
- (bool)_elementIsInAWindow;
- (bool)_elementRequiresConstraintBasedLayout;
- (bool)_elementSupportsDynamicResizing;
- (id)_elementViewController;
- (void)_ensureAccessoryView:(id)arg1 hasLayoutFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)_ensureAccessoryViewLayoutForTransitionWithAnimator:(id)arg1;
- (void)_ensureElementViewControllerIsInAWindow;
- (void)_enumerateObserversRespondingToSelector:(SEL)arg1 usingBlock:(id /* block */)arg2;
- (void)_handleAlertingAction:(id)arg1;
- (void)_handleClientErrorNonUniqueElementAction;
- (void)_handleGestureDependencyChange:(id)arg1;
- (bool)_handleSceneResizeAction:(id)arg1;
- (bool)_isPresentationPossibleAndSceneForeground;
- (id)_maximumLeadingViewWidthConstraint;
- (id)_maximumTrailingViewWidthConstraint;
- (bool)_mustHaveUniqueElementIdentity;
- (id)_observers;
- (void)_performActionsForUIScene:(id)arg1 withUpdatedFBSScene:(id)arg2 settingsDiff:(id)arg3 fromSettings:(id)arg4 transitionContext:(id)arg5 lifecycleActionType:(unsigned int)arg6;
- (bool)_performElementUpdate;
- (bool)_performElementUpdateWithActions:(id)arg1;
- (bool)_performElementUpdateWithActionsIfPossible:(id)arg1;
- (id)_scene;
- (void)_scene:(id)arg1 didTransitionFromActivationState:(long long)arg2 withReasonsMask:(unsigned long long)arg3;
- (id)_sceneSettings;
- (void)_sceneWillInvalidate:(id)arg1;
- (void)_sendActionForCommand:(long long)arg1;
- (void)_sendActions:(id)arg1;
- (void)_setAlertingAssertion:(id)arg1;
- (void)_setScene:(id)arg1;
- (id)_settingsDiffActionsForScene:(id)arg1;
- (void)_updateElementCanRequestAlertingAssertion;
- (void)_updateTraitCollectionForElementIfNeeded;
- (bool)_wantsCenteredCustomLayout;
- (void)_windowDidAttachToContext:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)addTransitionContext:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })anchorFrameForDetachedMinimalView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })anchorFrameForLeadingView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })anchorFrameForMinimalView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })anchorFrameForTrailingView;
- (id)animationContext;
- (id)associatedScenePersistenceIdentifier;
- (id)containerView;
- (id)containerViewController;
- (id)dependencyGestureRecognizer;
- (id)description;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
- (bool)elementCanRequestAlertingAssertion;
- (void)elementDidDismissMenu;
- (bool)elementHasMenuPresentation;
- (void)elementWillPresentMenu;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (id)init;
- (id)initWithScene:(id)arg1;
- (bool)isBeingRemoved;
- (bool)isFallbackContext;
- (bool)isPresentationPossible;
- (id)lastKnownOtherSettings;
- (id)layoutGuideRootView;
- (long long)layoutMode;
- (long long)layoutModeAsFarAsClientsAreConcerned;
- (id)localSceneResizeParameters;
- (id)mutableConfiguration;
- (void)registerWithScene:(id)arg1;
- (void)removeObserver:(id)arg1;
- (void)removeTransitionContext:(id)arg1;
- (id)requestAlertingAssertion;
- (void)requestNegativeResponseAnimation;
- (void)requestTransitionToMaximumSupportedLayoutMode;
- (void)requestTransitionToPreferredLayoutMode;
- (void)setContainerView:(id)arg1;
- (void)setDependencyGestureRecognizer:(id)arg1;
- (void)setElementCanRequestAlertingAssertion:(bool)arg1;
- (void)setElementHasMenuPresentation:(bool)arg1;
- (void)setElementNeedsLayoutUpdateWithOptions:(unsigned long long)arg1 coordinatedAnimations:(id /* block */)arg2;
- (void)setElementNeedsUpdate;
- (void)setElementNeedsUpdateWithCoordinatedAnimations:(id /* block */)arg1;
- (void)setLastKnownOtherSettings:(id)arg1;
- (void)setLayoutModeAsFarAsClientsAreConcerned:(long long)arg1;
- (void)setLocalSceneResizeParameters:(id)arg1;
- (void)setPresentationPossible:(bool)arg1;
- (void)setSystemApertureElementProvider:(id)arg1;
- (void)setSystemApertureElementViewControllerProvider:(id)arg1;
- (void)setSystemApertureOwnedWindow:(id)arg1;
- (void)setWindowScene:(id)arg1;
- (void)set_activeConstraintsForLayoutMode:(id)arg1;
- (void)set_elementViewController:(id)arg1;
- (void)set_maximumLeadingViewWidthConstraint:(id)arg1;
- (void)set_maximumTrailingViewWidthConstraint:(id)arg1;
- (void)set_observers:(id)arg1;
- (id)succinctDescription;
- (id)succinctDescriptionBuilder;
- (id)systemApertureElement;
- (id)systemApertureElementProvider;
- (id)systemApertureElementViewController;
- (id)systemApertureElementViewControllerProvider;
- (id)systemApertureOwnedWindow;
- (id)transitionContext;
- (id)transitionContexts;
- (void)unregisterFromScene;
- (void)validateConfiguration;
- (id)windowScene;

@end
