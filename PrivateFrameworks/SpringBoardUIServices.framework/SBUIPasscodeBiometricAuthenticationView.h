
@interface SBUIPasscodeBiometricAuthenticationView : SBUIInteractionForwardingView {
    bool  _ancillaryButtonsVisible;
    UIButton * _backgroundCancelButton;
    SBUIButton * _cancelButton;
    UILayoutGuide * _cancelButtonLayoutGuide;
    <SBUIPasscodeBiometricAuthenticationViewDelegate> * _delegate;
    SBUIButton * _emergencyCallButton;
    UILabel * _faceIDLabel;
    UILayoutGuide * _faceIDLabelAndReasonHelperGuide;
    UILayoutGuide * _faceIDLabelAndReasonLayoutGuide;
    NSLayoutConstraint * _faceIDLabelFaceIDReasonBaselineConstraint;
    UIImageView * _faceIDLockIcon;
    NSString * _faceIDReason;
    UILabel * _faceIDReasonLabel;
    NSString * _faceIDReasonLine2;
    SBUIPasscodePillButton * _faceIDUsePasscodeButton;
    bool  _faceIDUsePasscodeButtonVisible;
    UIButton * _invisibleUsePasscodeButton;
    <SBUIPasscodeBiometricAuthenticationViewLayoutDelegate> * _layoutDelegate;
    NSString * _overrideFaceIDReason;
    NSString * _passcodeButtonTitle;
    bool  _showsLockIconForFaceID;
    UILayoutGuide * _touchIDGlyphLayoutGuide;
    PKGlyphView * _touchIDGlyphView;
    NSString * _touchIDReason;
    UILabel * _touchIDReasonLabel;
    SBUIButton * _touchIDUsePasscodeButton;
    unsigned long long  _type;
    NSString * _unlockDestination;
}

@property (nonatomic) bool ancillaryButtonsVisible;
@property (nonatomic, retain) UIButton *backgroundCancelButton;
@property (nonatomic, retain) SBUIButton *cancelButton;
@property (nonatomic, retain) UILayoutGuide *cancelButtonLayoutGuide;
@property (nonatomic) <SBUIPasscodeBiometricAuthenticationViewDelegate> *delegate;
@property (nonatomic, retain) SBUIButton *emergencyCallButton;
@property (nonatomic, retain) UILabel *faceIDLabel;
@property (nonatomic, retain) UILayoutGuide *faceIDLabelAndReasonHelperGuide;
@property (nonatomic, retain) UILayoutGuide *faceIDLabelAndReasonLayoutGuide;
@property (nonatomic, retain) NSLayoutConstraint *faceIDLabelFaceIDReasonBaselineConstraint;
@property (nonatomic, retain) UIImageView *faceIDLockIcon;
@property (setter=_setFaceIDReason:, nonatomic, copy) NSString *faceIDReason;
@property (nonatomic, retain) UILabel *faceIDReasonLabel;
@property (setter=_setFaceIDReason2:, nonatomic, copy) NSString *faceIDReasonLine2;
@property (nonatomic, retain) SBUIPasscodePillButton *faceIDUsePasscodeButton;
@property (nonatomic) bool faceIDUsePasscodeButtonVisible;
@property (nonatomic, retain) UIButton *invisibleUsePasscodeButton;
@property (nonatomic) <SBUIPasscodeBiometricAuthenticationViewLayoutDelegate> *layoutDelegate;
@property (nonatomic, copy) NSString *overrideFaceIDReason;
@property (nonatomic, copy) NSString *passcodeButtonTitle;
@property (nonatomic) bool showsCancelButton;
@property (nonatomic) bool showsEmergencyCallButton;
@property (nonatomic) bool showsLockIconForFaceID;
@property (nonatomic, retain) UILayoutGuide *touchIDGlyphLayoutGuide;
@property (nonatomic, retain) PKGlyphView *touchIDGlyphView;
@property (setter=_setTouchIDReason:, nonatomic, copy) NSString *touchIDReason;
@property (nonatomic, retain) UILabel *touchIDReasonLabel;
@property (nonatomic, retain) SBUIButton *touchIDUsePasscodeButton;
@property (nonatomic) unsigned long long type;
@property (nonatomic, copy) NSString *unlockDestination;

- (void).cxx_destruct;
- (void)_cancelButtonHit;
- (void)_emergencyCallButtonHit;
- (void)_layoutAuthReasonLabel:(id)arg1;
- (double)_leadingForFaceIDReason;
- (void)_noteContentSizeCategoryDidChange;
- (void)_setFaceIDReason2:(id)arg1;
- (void)_setFaceIDReason:(id)arg1;
- (void)_setFaceIDReasonLine2:(id)arg1;
- (void)_setTouchIDReason:(id)arg1;
- (void)_updateConstraints;
- (void)_updateReasonTextIfPossible;
- (void)_updateSubviews;
- (void)_usePasscodeButtonHit;
- (bool)ancillaryButtonsVisible;
- (id)backgroundCancelButton;
- (id)cancelButton;
- (id)cancelButtonLayoutGuide;
- (id)delegate;
- (id)emergencyCallButton;
- (id)faceIDLabel;
- (id)faceIDLabelAndReasonHelperGuide;
- (id)faceIDLabelAndReasonLayoutGuide;
- (id)faceIDLabelFaceIDReasonBaselineConstraint;
- (id)faceIDLockIcon;
- (id)faceIDReason;
- (id)faceIDReasonLabel;
- (id)faceIDReasonLine2;
- (id)faceIDUsePasscodeButton;
- (bool)faceIDUsePasscodeButtonVisible;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 layoutDelegate:(id)arg2;
- (id)invisibleUsePasscodeButton;
- (id)layoutDelegate;
- (void)layoutSubviews;
- (id)overrideFaceIDReason;
- (id)passcodeButtonTitle;
- (void)setAncillaryButtonsVisible:(bool)arg1;
- (void)setAncillaryButtonsVisible:(bool)arg1 animated:(bool)arg2;
- (void)setBackgroundCancelButton:(id)arg1;
- (void)setCancelButton:(id)arg1;
- (void)setCancelButtonLayoutGuide:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEmergencyCallButton:(id)arg1;
- (void)setFaceIDLabel:(id)arg1;
- (void)setFaceIDLabelAndReasonHelperGuide:(id)arg1;
- (void)setFaceIDLabelAndReasonLayoutGuide:(id)arg1;
- (void)setFaceIDLabelFaceIDReasonBaselineConstraint:(id)arg1;
- (void)setFaceIDLockIcon:(id)arg1;
- (void)setFaceIDReasonLabel:(id)arg1;
- (void)setFaceIDUsePasscodeButton:(id)arg1;
- (void)setFaceIDUsePasscodeButtonVisible:(bool)arg1;
- (void)setGlyphViewState:(long long)arg1;
- (void)setGlyphViewState:(long long)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (void)setInvisibleUsePasscodeButton:(id)arg1;
- (void)setLayoutDelegate:(id)arg1;
- (void)setOverrideFaceIDReason:(id)arg1;
- (void)setPasscodeButtonTitle:(id)arg1;
- (void)setShowsCancelButton:(bool)arg1;
- (void)setShowsEmergencyCallButton:(bool)arg1;
- (void)setShowsLockIconForFaceID:(bool)arg1;
- (void)setTouchIDGlyphLayoutGuide:(id)arg1;
- (void)setTouchIDGlyphView:(id)arg1;
- (void)setTouchIDReasonLabel:(id)arg1;
- (void)setTouchIDUsePasscodeButton:(id)arg1;
- (void)setType:(unsigned long long)arg1;
- (void)setUnlockDestination:(id)arg1;
- (bool)showsCancelButton;
- (bool)showsEmergencyCallButton;
- (bool)showsLockIconForFaceID;
- (id)touchIDGlyphLayoutGuide;
- (id)touchIDGlyphView;
- (id)touchIDReason;
- (id)touchIDReasonLabel;
- (id)touchIDUsePasscodeButton;
- (unsigned long long)type;
- (id)unlockDestination;

@end
