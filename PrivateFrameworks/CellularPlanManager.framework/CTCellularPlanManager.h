
@interface CTCellularPlanManager : NSObject {
    NSXPCConnection * _connection;
    CTCellularPlanManagerDelegate * _delegate;
    struct dispatch_queue_s { } * _queue;
}

+ (long long)calculateInstallConsentTextTypeFor:(id)arg1;
+ (id)sharedManager;

- (void)_connect_sync;
- (void)_ensureConnected_sync;
- (void)_reconnect;
- (void)activatePlanPendingTransfer:(id)arg1 completion:(id /* block */)arg2;
- (void)addNewPlanWithAddress:(id)arg1 matchingId:(id)arg2 oid:(id)arg3 confirmationCode:(id)arg4 triggerType:(long long)arg5 userConsent:(long long)arg6 completion:(id /* block */)arg7;
- (void)addNewPlanWithCardData:(id)arg1 confirmationCode:(id)arg2 triggerType:(long long)arg3 userConsent:(long long)arg4 completion:(id /* block */)arg5;
- (void)addNewPlanWithFlowType:(unsigned long long)arg1 completion:(id /* block */)arg2;
- (void)addNewRemotePlan:(bool)arg1 withCSN:(id)arg2 withContext:(id)arg3 userConsent:(long long)arg4 completion:(id /* block */)arg5;
- (void)addNewRemotePlanWithAddress:(id)arg1 matchingId:(id)arg2 oid:(id)arg3 confirmationCode:(id)arg4 isPairing:(bool)arg5 withCSN:(id)arg6 withContext:(id)arg7 userConsent:(long long)arg8 completion:(id /* block */)arg9;
- (void)addNewRemotePlanWithCardData:(id)arg1 confirmationCode:(id)arg2 isPairing:(bool)arg3 withCSN:(id)arg4 withContext:(id)arg5 userConsent:(long long)arg6 completion:(id /* block */)arg7;
- (id)cancelPlanActivation:(id)arg1;
- (void)carrierItemsShouldUpdate:(bool)arg1 completion:(id /* block */)arg2;
- (id)danglingPlanItemsShouldUpdate:(bool)arg1;
- (void)danglingPlanItemsShouldUpdate:(bool)arg1 completion:(id /* block */)arg2;
- (void)dealloc;
- (void)deleteAllRemoteProfiles;
- (void)deletePlanPendingTransfer:(id)arg1 completion:(id /* block */)arg2;
- (void)deleteRemoteProfile:(id)arg1;
- (void)didCancelRemotePlan;
- (void)didDeletePlanItem:(id)arg1 completion:(id /* block */)arg2;
- (void)didDeleteRemotePlanItem:(id)arg1 completion:(id /* block */)arg2;
- (id)didEnablePlanItems:(id)arg1;
- (void)didPurchasePlanForCarrier:(id)arg1 mnc:(id)arg2 gid1:(id)arg3 gid2:(id)arg4 state:(id)arg5;
- (void)didPurchasePlanForCsn:(id)arg1 iccid:(id)arg2 profileServer:(id)arg3 state:(id)arg4;
- (void)didPurchasePlanWithIccid:(id)arg1 downloadProfile:(bool)arg2;
- (void)didPurchaseRemotePlanForEid:(id)arg1 imei:(id)arg2 meid:(id)arg3 iccid:(id)arg4 alternateSmdpFqdn:(id)arg5 completion:(id /* block */)arg6;
- (id)didSelectPlanForData:(id)arg1;
- (void)didSelectPlanForData:(id)arg1 completion:(id /* block */)arg2;
- (id)didSelectPlanForDefaultVoice:(id)arg1;
- (void)didSelectPlanForDefaultVoice:(id)arg1 completion:(id /* block */)arg2;
- (id)didSelectPlanItem:(id)arg1 isEnable:(bool)arg2;
- (void)didSelectPlanItem:(id)arg1 isEnable:(bool)arg2 completion:(id /* block */)arg3;
- (void)didSelectPlansForIMessage:(id)arg1 completion:(id /* block */)arg2;
- (void)didSelectRemotePlanItem:(id)arg1 completion:(id /* block */)arg2;
- (void)didTransferPlanForCsn:(id)arg1 iccid:(id)arg2 srcIccid:(id)arg3 profileServer:(id)arg4 state:(id)arg5;
- (void)enterSimSetupWithCompletion:(id /* block */)arg1;
- (void)eraseAllPlans:(id /* block */)arg1;
- (void)eraseAllRemotePlansWithCSN:(id)arg1 completion:(id /* block */)arg2;
- (void)eraseAllRemotePlansWithCompletion:(id /* block */)arg1;
- (void)exitSimSetupWithCompletion:(id /* block */)arg1;
- (void)expirePlan;
- (void)fetchRemoteProfiles:(id)arg1;
- (void)finishProvisioningWithCompletion:(id /* block */)arg1;
- (void)finishRemoteProvisioningForCSN:(id)arg1 completion:(id /* block */)arg2;
- (void)getAutoPlanSelectionWithCompletion:(id /* block */)arg1;
- (void)getIMEIPrefix:(id /* block */)arg1;
- (void)getPhoneAuthTokenWithMessage:(id)arg1 completion:(id /* block */)arg2;
- (id)getPlansPendingTransfer:(id*)arg1;
- (id)getPlansPendingTransferForTestability:(id*)arg1;
- (id)getPredefinedLabels;
- (void)getRemoteInfo:(id /* block */)arg1;
- (void)getRoamingSignupOverrideWithCompletion:(id /* block */)arg1;
- (void)getSelectedEnv:(id /* block */)arg1;
- (void)getSelectedProxy:(id /* block */)arg1;
- (id)getShortLabelsForLabels:(id)arg1;
- (void)getSkipEligibilityCheck:(id /* block */)arg1;
- (id)getSubscriptionContextUUIDforPlan:(id)arg1;
- (unsigned long long)getSupportedFlowTypes;
- (void)getSupportedFlowTypes:(id /* block */)arg1;
- (id)init;
- (void)installPendingRemotePlan:(id)arg1 completion:(id /* block */)arg2;
- (void)isRemotePlanCapableWithContext:(id)arg1 completion:(id /* block */)arg2;
- (void)latitudeLongitudeOverride:(id /* block */)arg1;
- (void)manageAccountForRemotePlan:(id)arg1 completion:(id /* block */)arg2;
- (void)mccMncOverride:(id /* block */)arg1;
- (void)pendingReleaseRemotePlan;
- (void)ping;
- (id)planItemsShouldUpdate:(bool)arg1;
- (void)planItemsShouldUpdate:(bool)arg1 completion:(id /* block */)arg2;
- (void)planItemsWithCompletion:(id /* block */)arg1;
- (id)remapSimLabel:(id)arg1 to:(id)arg2;
- (void)remapSimLabel:(id)arg1 to:(id)arg2 completion:(id /* block */)arg3;
- (void)remotePlanItemsWithCompletion:(id /* block */)arg1;
- (void)remotePlanItemsWithUpdateFetch:(bool)arg1 withCSN:(id)arg2 completion:(id /* block */)arg3;
- (id)resolveSimLabel:(id)arg1;
- (void)resolveSimLabel:(id)arg1 completion:(id /* block */)arg2;
- (void)resumePlanProvisioning:(bool)arg1 userConsent:(long long)arg2 completion:(id /* block */)arg3;
- (void)selectRemoteProfile:(id)arg1;
- (void)setAutoPlanSelection:(bool)arg1;
- (void)setIMEIPrefix:(id)arg1;
- (id)setLabelForPlan:(id)arg1 label:(id)arg2;
- (void)setLatitude:(id)arg1 andLongitude:(id)arg2;
- (void)setMcc:(long long)arg1 andMnc:(long long)arg2;
- (void)setRoamingSignupOverride:(bool)arg1;
- (void)setSelectedEnv:(long long)arg1;
- (void)setSelectedProxy:(long long)arg1;
- (void)setSkipEligibilityCheck:(bool)arg1;
- (void)setUserInPurchaseFlow:(bool)arg1;
- (void)shouldShowAddNewRemotePlanWithContext:(id)arg1 completion:(id /* block */)arg2;
- (void)shouldShowPlanSetup:(id /* block */)arg1;
- (void)showUiIgnoringActivationFlags:(bool)arg1;
- (void)startProvisioningWithCompletion:(id /* block */)arg1;
- (void)startRemoteProvisioningForCSN:(id)arg1 completion:(id /* block */)arg2;
- (id)synchronousProxyWithErrorHandler:(id /* block */)arg1;
- (void)userDidProvideConsentResponse:(long long)arg1 forPlan:(id)arg2 isRemote:(bool)arg3 completion:(id /* block */)arg4;
- (void)userDidProvideResponse:(long long)arg1 confirmationCode:(id)arg2 forPlan:(id)arg3 isRemote:(bool)arg4 completion:(id /* block */)arg5;
- (void)userSignupInitiatedOrFailed;

@end
