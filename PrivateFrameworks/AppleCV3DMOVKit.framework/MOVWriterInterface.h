
@interface MOVWriterInterface : MOVStreamWriter <MOVStreamWriterDelegate> {
    NSString * _accelTrackName;
    NSString * _alsTrackName;
    NSString * _bundleID;
    CVACalibration * _calibration;
    NSString * _compassTrackName;
    NSMutableDictionary * _cvaFeatureBufferCompression;
    NSString * _depthTOFTrackName;
    NSString * _deviceMotionTrackName;
    NSString * _deviceName;
    NSString * _deviceString;
    NSDictionary * _fileSummary;
    NSMutableDictionary * _firstFrameContainer;
    NSString * _firstSteamID;
    NSMutableDictionary * _frameMetadataDictionary;
    NSString * _gyroTrackName;
    <MOVWriterInterfaceDelegate> * _interface_delegate;
    bool  _isReady;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _lastAppendMetadata;
    NSError * _lastError;
    NSString * _locationTrackName;
    NSMutableDictionary * _metadataAttachmentArrays;
    NSMutableDictionary * _metadataAttachmentArraysTimestamp;
    NSMutableDictionary * _metadataLastTimestamp;
    NSMutableDictionary * _metadataMaxBufferSize;
    NSMutableDictionary * _metadataTrackMetadata;
    NSString * _motionTrackName;
    NSMutableArray * _movMetadataArray;
    NSString * _osBuildVersion;
    bool  _prepared;
    NSString * _productConfig;
    NSString * _productType;
    NSString * _productVersion;
    NSString * _serialNumber;
    NSString * _spuIMUTrackName;
    NSMutableDictionary * _trackAddedByStream;
    NSString * _version;
    NSString * _wifiTrackName;
    bool  _writeLegacyTracks;
    double  _writeMetadataTimeInterval;
}

@property (nonatomic, retain) NSString *accelTrackName;
@property (nonatomic, retain) NSString *alsTrackName;
@property (nonatomic, retain) NSString *bundleID;
@property (nonatomic, retain) CVACalibration *calibration;
@property (nonatomic, retain) NSString *compassTrackName;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, retain) NSString *depthTOFTrackName;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSString *deviceMotionTrackName;
@property (nonatomic, retain) NSString *deviceName;
@property (nonatomic, retain) NSString *deviceString;
@property (nonatomic, retain) NSMutableDictionary *firstFrameContainer;
@property (nonatomic, retain) NSString *gyroTrackName;
@property (readonly) unsigned long long hash;
@property (nonatomic) <MOVWriterInterfaceDelegate> *interface_delegate;
@property (nonatomic) bool isReady;
@property (nonatomic, retain) NSError *lastError;
@property (nonatomic, retain) NSString *locationTrackName;
@property (nonatomic, retain) NSString *motionTrackName;
@property (nonatomic, retain) NSMutableArray *movMetadataArray;
@property (nonatomic, retain) NSString *osBuildVersion;
@property (nonatomic, retain) NSString *productConfig;
@property (nonatomic, retain) NSString *productType;
@property (nonatomic, retain) NSString *productVersion;
@property (nonatomic, retain) NSString *serialNumber;
@property (nonatomic, retain) NSString *spuIMUTrackName;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSString *version;
@property (nonatomic, retain) NSString *wifiTrackName;
@property (nonatomic) double writeMetadataTimeInterval;

+ (struct { long long x1; int x2; unsigned int x3; long long x4; })cmTimeFromTimestamp:(double)arg1;
+ (bool)getSWToWExtrinsics:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; }*)arg1;
+ (id)makeDeviceString;

- (void).cxx_destruct;
- (id)accelTrackName;
- (bool)addCVADepthIRTrackWithDimensions:(struct { int x1; int x2; })arg1;
- (id)addDefaultSummary;
- (void)addFirstBufferForStream:(id)arg1 buffer:(struct __CVBuffer { }*)arg2 withTimestamp:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3;
- (void)addFrameMetadata:(id)arg1 streamID:(id)arg2;
- (void)addFrameMetadata:(id)arg1 value:(id)arg2 streamID:(id)arg3;
- (void)addJasperExtrinsics:(id)arg1;
- (void)addMovieMetadataData:(id)arg1 rawValue:(id)arg2;
- (void)addMovieMetadataDictionary:(id)arg1 value:(id)arg2;
- (void)addMovieMetadataItem:(id)arg1;
- (void)addSWToWExtrinsics:(id)arg1;
- (bool)addVideoTrack:(struct opaqueCMFormatDescription { }*)arg1 streamID:(id)arg2 encoding:(id)arg3;
- (id)alsTrackName;
- (void)appendAllMetadataWithTimeStamp:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)appendMetadata:(id)arg1 metadataID:(id)arg2;
- (void)appendMetadata:(id)arg1 metadataID:(id)arg2 timestamp:(double)arg3;
- (void)appendMetadata:(id)arg1 metadataID:(id)arg2 timestamp:(double)arg3 enforceMonotonicity:(bool)arg4;
- (id)arrayFrom3x3Matrix:(const struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[3]; }*)arg1;
- (id)bundleID;
- (id)calibration;
- (void)clearAllMetadataBuffers;
- (void)clearFirstBufferForStream:(id)arg1;
- (id)compassTrackName;
- (id)createFileMetadata;
- (id)depthTOFTrackName;
- (id)deviceMotionTrackName;
- (id)deviceName;
- (id)deviceString;
- (void)disableLegacyTracks;
- (void)enableLegacyTracks;
- (void)finishWriting:(id*)arg1;
- (id)firstFrameContainer;
- (struct __CVBuffer { }*)getFirstBufferForStream:(id)arg1 withTimestamp:(struct { long long x1; int x2; unsigned int x3; long long x4; }*)arg2;
- (id)getSuggestedEncodingOptionsForFormat:(struct opaqueCMFormatDescription { }*)arg1 streamID:(id)arg2;
- (id)gyroTrackName;
- (id)initWithFileURL:(id)arg1 expectedFrameRate:(double)arg2 fileSummary:(id)arg3;
- (id)initWithFileURL:(id)arg1 expectedFrameRate:(double)arg2 fileSummary:(id)arg3 callbackQueue:(id)arg4;
- (void)intelligentlyAppendBuffersForStreams:(id)arg1;
- (id)interface_delegate;
- (bool)isReady;
- (id)lastError;
- (id)locationTrackName;
- (id)motionTrackName;
- (id)movMetadataArray;
- (id)osBuildVersion;
- (void)processALSData:(id)arg1 location:(long long*)arg2;
- (void)processAccelerometerData:(id)arg1 andAdditionalData:(id)arg2;
- (void)processAccelerometerData:(id)arg1 andAdditionalData:(id)arg2 location:(long long*)arg3;
- (void)processCMData:(id)arg1;
- (void)processCVACameraCalibrationData:(id)arg1;
- (bool)processCVADepthIR:(id)arg1;
- (void)processCVADepthTOF:(id)arg1;
- (void)processCVAFeatureBuffer:(id)arg1;
- (void)processCVAFeatureBuffer:(struct __CVBuffer { }*)arg1 timestamp:(double)arg2 syncTimestamp:(unsigned long long)arg3 frameId:(unsigned long long)arg4 streamName:(id)arg5;
- (void)processCVAFeatureBuffer:(struct __CVBuffer { }*)arg1 timestamp:(double)arg2 syncTimestamp:(unsigned long long)arg3 streamName:(id)arg4;
- (void)processCVAPRDevice:(id)arg1;
- (void)processCVATimedValue:(id)arg1;
- (void)processCVAUserEvent:(id)arg1;
- (void)processClass:(id)arg1 andAdditionalData:(id)arg2 metadataID:(id)arg3;
- (void)processClass:(id)arg1 andAdditionalData:(id)arg2 metadataID:(id)arg3 timestamp:(double)arg4;
- (void)processCompassData:(id)arg1;
- (void)processCompassData:(id)arg1 location:(long long*)arg2;
- (void)processCoreLocationData:(id)arg1 timestamp:(double)arg2 andAdditionalData:(id)arg3;
- (void)processCoreLocationData:(id)arg1 timestamp:(double)arg2 andAdditionalData:(id)arg3 location:(long long*)arg4;
- (void)processDeviceMotionData:(id)arg1 andAdditionalData:(id)arg2;
- (void)processDeviceMotionData:(id)arg1 andAdditionalData:(id)arg2 location:(long long*)arg3;
- (void)processFastPathIMUData:(id)arg1 location:(long long*)arg2;
- (void)processGyroscopeData:(id)arg1 andAdditionalData:(id)arg2;
- (void)processGyroscopeData:(id)arg1 andAdditionalData:(id)arg2 location:(long long*)arg3;
- (void)processMotionData:(id)arg1;
- (void)processMotionData:(id)arg1 location:(long long*)arg2;
- (void)processNSCoderObject:(id)arg1 metadataID:(id)arg2;
- (void)processNSCoderObject:(id)arg1 metadataID:(id)arg2 timestamp:(double)arg3;
- (bool)processPixelBuffer:(struct __CVBuffer { }*)arg1 withTimeStamp:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 beforeAppend:(id /* block */)arg3 streamID:(id)arg4;
- (bool)processPixelBuffer:(struct __CVBuffer { }*)arg1 withTimeStamp:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 intrinsics:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[3]; }*)arg3 exposureTime:(double)arg4 streamID:(id)arg5;
- (void)processSpuIMUData:(id)arg1 location:(long long*)arg2;
- (void)processWiFiData:(id)arg1 location:(long long*)arg2;
- (id)productConfig;
- (id)productType;
- (id)productVersion;
- (bool)receivedAllFramesForStreams:(id)arg1;
- (void)registerALS:(long long*)arg1;
- (void)registerAccelerometer;
- (void)registerAccelerometer:(long long*)arg1;
- (void)registerCMData;
- (void)registerCVACameraCalibrationData;
- (void)registerCVADepthIR;
- (void)registerCVADepthTOF;
- (void)registerCVAFeatureBuffer;
- (void)registerCVAFeatureBuffer:(id)arg1 compress:(bool)arg2;
- (void)registerCVAPRDevice;
- (void)registerCVATimedValue;
- (void)registerCVAUserEvent;
- (void)registerCompass;
- (void)registerCompass:(long long*)arg1;
- (void)registerDeviceMotion;
- (void)registerDeviceMotion:(long long*)arg1;
- (void)registerGyro;
- (void)registerGyro:(long long*)arg1;
- (void)registerLocation;
- (void)registerLocation:(long long*)arg1;
- (void)registerMetadataID:(id)arg1;
- (void)registerMetadataID:(id)arg1 maxBufferSize:(unsigned long long)arg2;
- (void)registerMotion;
- (void)registerMotion:(long long*)arg1;
- (void)registerSpuIMU:(long long*)arg1;
- (void)registerSpuIMU:(long long*)arg1 version:(long long)arg2;
- (void)registerStreamID:(id)arg1 config:(struct { bool x1; float x2; bool x3; }*)arg2;
- (void)registerStreamID:(id)arg1 withConfigObject:(id)arg2;
- (void)registerWiFi:(long long*)arg1;
- (id)serialNumber;
- (void)setAccelTrackName:(id)arg1;
- (void)setAlsTrackName:(id)arg1;
- (void)setBundleID:(id)arg1;
- (void)setCalibration:(id)arg1;
- (void)setCompassTrackName:(id)arg1;
- (void)setDepthTOFTrackName:(id)arg1;
- (void)setDeviceMotionTrackName:(id)arg1;
- (void)setDeviceName:(id)arg1;
- (void)setDeviceString:(id)arg1;
- (void)setFirstFrameContainer:(id)arg1;
- (void)setGyroTrackName:(id)arg1;
- (void)setInterface_delegate:(id)arg1;
- (void)setIsReady:(bool)arg1;
- (void)setLastError:(id)arg1;
- (void)setLocationTrackName:(id)arg1;
- (void)setMetadataAttachmentTo:(struct __CVBuffer { }*)arg1 streamID:(id)arg2;
- (void)setMotionTrackName:(id)arg1;
- (void)setMovMetadataArray:(id)arg1;
- (void)setOsBuildVersion:(id)arg1;
- (void)setProductConfig:(id)arg1;
- (void)setProductType:(id)arg1;
- (void)setProductVersion:(id)arg1;
- (void)setSerialNumber:(id)arg1;
- (void)setSpuIMUTrackName:(id)arg1;
- (bool)setTrackMetadata:(id)arg1 forMetadataStream:(id)arg2;
- (void)setVersion:(id)arg1;
- (void)setWifiTrackName:(id)arg1;
- (void)setWriteMetadataTimeInterval:(double)arg1;
- (void)setupMetadata:(id)arg1;
- (id)spuIMUTrackName;
- (void)streamWriter:(id)arg1 stream:(id)arg2 preparedTrackInputs:(id)arg3 mediaType:(long long)arg4;
- (void)streamWriterDidFailWithError:(id)arg1;
- (void)streamWriterDidFinishPreparing;
- (void)streamWriterDidFinishRecording;
- (void)streamWriterEncounteredAnError:(id)arg1;
- (id)version;
- (id)wifiTrackName;
- (double)writeMetadataTimeInterval;

@end
