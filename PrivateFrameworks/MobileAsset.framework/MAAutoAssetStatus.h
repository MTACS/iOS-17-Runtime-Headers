
@interface MAAutoAssetStatus : NSObject <NSSecureCoding> {
    MAAutoAssetSelector * _assetSelector;
    NSDictionary * _availableForUseAttributes;
    NSError * _availableForUseError;
    NSDictionary * _currentLockUsage;
    MAAutoAssetProgress * _downloadProgress;
    bool  _downloadUserInitiated;
    bool  _downloadedAsPatch;
    long long  _downloadedFilesystemBytes;
    long long  _downloadedNetworkBytes;
    bool  _neverBeenLocked;
    NSDictionary * _newerVersionAttributes;
    NSError * _newerVersionError;
    MAAutoAssetNotifications * _notifications;
    long long  _patchedFromBaseFilesystemBytes;
    MAAutoAssetSelector * _patchedFromBaseSelector;
    NSError * _patchingAttemptError;
    bool  _patchingAttempted;
    NSString * _stagedFromBuildVersion;
    NSString * _stagedFromOSVersion;
    bool  _stagedPriorToAvailable;
}

@property (nonatomic, retain) MAAutoAssetSelector *assetSelector;
@property (nonatomic, retain) NSDictionary *availableForUseAttributes;
@property (nonatomic, retain) NSError *availableForUseError;
@property (nonatomic, retain) NSDictionary *currentLockUsage;
@property (nonatomic, retain) MAAutoAssetProgress *downloadProgress;
@property (nonatomic) bool downloadUserInitiated;
@property (nonatomic) bool downloadedAsPatch;
@property (nonatomic) long long downloadedFilesystemBytes;
@property (nonatomic) long long downloadedNetworkBytes;
@property (nonatomic) bool neverBeenLocked;
@property (nonatomic, retain) NSDictionary *newerVersionAttributes;
@property (nonatomic, retain) NSError *newerVersionError;
@property (nonatomic, retain) MAAutoAssetNotifications *notifications;
@property (nonatomic) long long patchedFromBaseFilesystemBytes;
@property (nonatomic, retain) MAAutoAssetSelector *patchedFromBaseSelector;
@property (nonatomic, retain) NSError *patchingAttemptError;
@property (nonatomic) bool patchingAttempted;
@property (nonatomic, retain) NSString *stagedFromBuildVersion;
@property (nonatomic, retain) NSString *stagedFromOSVersion;
@property (nonatomic) bool stagedPriorToAvailable;

+ (id)newCurrentLockUsageSummary:(id)arg1;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)assetSelector;
- (id)availableForUseAttributes;
- (id)availableForUseError;
- (id)copy;
- (id)currentLockUsage;
- (id)description;
- (id)downloadProgress;
- (bool)downloadUserInitiated;
- (bool)downloadedAsPatch;
- (long long)downloadedFilesystemBytes;
- (long long)downloadedNetworkBytes;
- (void)encodeWithCoder:(id)arg1;
- (void)getAvailableForUseAttributesAssetFormat:(id*)arg1 assetBuild:(id*)arg2 minOSVersion:(id*)arg3 maxOSVersion:(id*)arg4 prerequisiteBuilds:(id*)arg5;
- (id)initWithAssetSelector:(id)arg1 withNotifications:(id)arg2 withAvailableForUseAttributes:(id)arg3 withNewerVersionAttributes:(id)arg4 withDownloadUserInitiated:(bool)arg5 withDownloadProgress:(id)arg6 withDownloadedNetworkBytes:(long long)arg7 withDownloadedFilesystemBytes:(long long)arg8 withDownloadedAsPatch:(bool)arg9 withPatchedFromBaseSelector:(id)arg10 withPatchedFromBaseFilesystemBytes:(long long)arg11 withPatchingAttempted:(bool)arg12 withStagedPriorToAvailable:(bool)arg13 withStagedFromOSVersion:(id)arg14 withStagedFromBuildVersion:(id)arg15 withCurrentLockUsage:(id)arg16 withAvailableForUseError:(id)arg17 withPatchingAttemptError:(id)arg18 withNewerVersionError:(id)arg19;
- (id)initWithAssetSelector:(id)arg1 withNotifications:(id)arg2 withAvailableForUseAttributes:(id)arg3 withNewerVersionAttributes:(id)arg4 withNeverBeenLocked:(bool)arg5 withDownloadUserInitiated:(bool)arg6 withDownloadProgress:(id)arg7 withDownloadedNetworkBytes:(long long)arg8 withDownloadedFilesystemBytes:(long long)arg9 withDownloadedAsPatch:(bool)arg10 withPatchedFromBaseSelector:(id)arg11 withPatchedFromBaseFilesystemBytes:(long long)arg12 withPatchingAttempted:(bool)arg13 withStagedPriorToAvailable:(bool)arg14 withStagedFromOSVersion:(id)arg15 withStagedFromBuildVersion:(id)arg16 withCurrentLockUsage:(id)arg17 withAvailableForUseError:(id)arg18 withPatchingAttemptError:(id)arg19 withNewerVersionError:(id)arg20;
- (id)initWithCoder:(id)arg1;
- (bool)neverBeenLocked;
- (id)newSummaryDictionary;
- (id)newerVersionAttributes;
- (id)newerVersionError;
- (id)notifications;
- (long long)patchedFromBaseFilesystemBytes;
- (id)patchedFromBaseSelector;
- (id)patchingAttemptError;
- (bool)patchingAttempted;
- (void)setAssetSelector:(id)arg1;
- (void)setAvailableForUseAttributes:(id)arg1;
- (void)setAvailableForUseError:(id)arg1;
- (void)setCurrentLockUsage:(id)arg1;
- (void)setDownloadProgress:(id)arg1;
- (void)setDownloadUserInitiated:(bool)arg1;
- (void)setDownloadedAsPatch:(bool)arg1;
- (void)setDownloadedFilesystemBytes:(long long)arg1;
- (void)setDownloadedNetworkBytes:(long long)arg1;
- (void)setNeverBeenLocked:(bool)arg1;
- (void)setNewerVersionAttributes:(id)arg1;
- (void)setNewerVersionError:(id)arg1;
- (void)setNotifications:(id)arg1;
- (void)setPatchedFromBaseFilesystemBytes:(long long)arg1;
- (void)setPatchedFromBaseSelector:(id)arg1;
- (void)setPatchingAttemptError:(id)arg1;
- (void)setPatchingAttempted:(bool)arg1;
- (void)setStagedFromBuildVersion:(id)arg1;
- (void)setStagedFromOSVersion:(id)arg1;
- (void)setStagedPriorToAvailable:(bool)arg1;
- (id)stagedFromBuildVersion;
- (id)stagedFromOSVersion;
- (bool)stagedPriorToAvailable;
- (id)summary;

@end
