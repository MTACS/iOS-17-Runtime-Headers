
@interface MAAutoAssetSetStatus : NSObject <NSSecureCoding> {
    NSDictionary * _allDownloadedAtomicInstanceEntries;
    NSString * _assetSetIdentifier;
    NSArray * _atomicInstancesDownloaded;
    NSError * _availableForUseError;
    NSString * _catalogCachedAssetSetID;
    NSURL * _catalogDownloadedFromLive;
    NSDate * _catalogLastTimeChecked;
    NSDate * _catalogPostedDate;
    NSString * _clientDomainName;
    NSArray * _configuredAssetEntries;
    NSDictionary * _currentLockUsage;
    MAAutoAssetSetPolicy * _currentNeedPolicy;
    MAAutoAssetSetNotifications * _currentNotifications;
    MAAutoAssetSetProgress * _downloadProgress;
    bool  _downloadUserInitiated;
    NSString * _downloadedCatalogCachedAssetSetID;
    NSURL * _downloadedCatalogDownloadedFromLive;
    NSDate * _downloadedCatalogLastTimeChecked;
    NSDate * _downloadedCatalogPostedDate;
    long long  _downloadedFilesystemBytes;
    long long  _downloadedNetworkBytes;
    NSArray * _latestDowloadedAtomicInstanceEntries;
    NSString * _latestDownloadedAtomicInstance;
    NSString * _newerAtomicInstanceDiscovered;
    NSArray * _newerDiscoveredAtomicEntries;
    NSError * _newerVersionError;
    MAAutoAssetSetPolicy * _schedulerPolicy;
    NSDictionary * _selectorsForStaging;
    MAAutoAssetSetPolicy * _stagerPolicy;
}

@property (nonatomic, retain) NSDictionary *allDownloadedAtomicInstanceEntries;
@property (nonatomic, readonly, retain) NSString *assetSetIdentifier;
@property (nonatomic, retain) NSArray *atomicInstancesDownloaded;
@property (nonatomic, retain) NSError *availableForUseError;
@property (nonatomic, retain) NSString *catalogCachedAssetSetID;
@property (nonatomic, retain) NSURL *catalogDownloadedFromLive;
@property (nonatomic, retain) NSDate *catalogLastTimeChecked;
@property (nonatomic, retain) NSDate *catalogPostedDate;
@property (nonatomic, readonly, retain) NSString *clientDomainName;
@property (nonatomic, retain) NSArray *configuredAssetEntries;
@property (nonatomic, retain) NSDictionary *currentLockUsage;
@property (nonatomic, retain) MAAutoAssetSetPolicy *currentNeedPolicy;
@property (nonatomic, retain) MAAutoAssetSetNotifications *currentNotifications;
@property (nonatomic, retain) MAAutoAssetSetProgress *downloadProgress;
@property (nonatomic) bool downloadUserInitiated;
@property (nonatomic, retain) NSString *downloadedCatalogCachedAssetSetID;
@property (nonatomic, retain) NSURL *downloadedCatalogDownloadedFromLive;
@property (nonatomic, retain) NSDate *downloadedCatalogLastTimeChecked;
@property (nonatomic, retain) NSDate *downloadedCatalogPostedDate;
@property (nonatomic) long long downloadedFilesystemBytes;
@property (nonatomic) long long downloadedNetworkBytes;
@property (nonatomic, retain) NSArray *latestDowloadedAtomicInstanceEntries;
@property (nonatomic, retain) NSString *latestDownloadedAtomicInstance;
@property (nonatomic, retain) NSString *newerAtomicInstanceDiscovered;
@property (nonatomic, retain) NSArray *newerDiscoveredAtomicEntries;
@property (nonatomic, retain) NSError *newerVersionError;
@property (nonatomic, retain) MAAutoAssetSetPolicy *schedulerPolicy;
@property (nonatomic, retain) NSDictionary *selectorsForStaging;
@property (nonatomic, retain) MAAutoAssetSetPolicy *stagerPolicy;

+ (id)newCurrentLockUsageDetailed:(id)arg1;
+ (id)newCurrentLockUsageSummary:(id)arg1;
+ (id)newSelectorsForStagingSummary:(id)arg1;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)allDownloadedAtomicInstanceEntries;
- (id)assetSetIdentifier;
- (id)atomicInstancesDownloaded;
- (id)availableForUseError;
- (id)catalogCachedAssetSetID;
- (id)catalogDownloadedFromLive;
- (id)catalogLastTimeChecked;
- (id)catalogPostedDate;
- (id)clientDomainName;
- (id)configuredAssetEntries;
- (id)copy;
- (id)currentLockUsage;
- (id)currentNeedPolicy;
- (id)currentNotifications;
- (id)description;
- (id)downloadProgress;
- (bool)downloadUserInitiated;
- (id)downloadedCatalogCachedAssetSetID;
- (id)downloadedCatalogDownloadedFromLive;
- (id)downloadedCatalogLastTimeChecked;
- (id)downloadedCatalogPostedDate;
- (long long)downloadedFilesystemBytes;
- (long long)downloadedNetworkBytes;
- (void)encodeWithCoder:(id)arg1;
- (id)initStatusForClientDomain:(id)arg1 forAssetSetIdentifier:(id)arg2 withAtomicInstancesDownloaded:(id)arg3 withNewerAtomicInstanceDiscovered:(id)arg4 withNewerDiscoveredAtomicEntries:(id)arg5 withLatestDownloadedAtomicInstance:(id)arg6 withLatestDowloadedAtomicInstanceEntries:(id)arg7 withAllDownloadedAtomicInstanceEntries:(id)arg8 withCurrentNotifications:(id)arg9 withCurrentNeedPolicy:(id)arg10 withSchedulerPolicy:(id)arg11 withStagerPolicy:(id)arg12 withDownloadUserInitiated:(bool)arg13 withDownloadProgress:(id)arg14 withDownloadedNetworkBytes:(long long)arg15 withDownloadedFilesystemBytes:(long long)arg16 withCurrentLockUsage:(id)arg17 withSelectorsForStaging:(id)arg18 withAvailableForUseError:(id)arg19 withNewerVersionError:(id)arg20;
- (id)initStatusForClientDomain:(id)arg1 forAssetSetIdentifier:(id)arg2 withConfiguredAssetEntries:(id)arg3 withAtomicInstancesDownloaded:(id)arg4 withCatalogCachedAssetSetID:(id)arg5 withCatalogDownloadedFromLive:(id)arg6 withCatalogLastTimeChecked:(id)arg7 withCatalogPostedDate:(id)arg8 withNewerAtomicInstanceDiscovered:(id)arg9 withNewerDiscoveredAtomicEntries:(id)arg10 withLatestDownloadedAtomicInstance:(id)arg11 withLatestDowloadedAtomicInstanceEntries:(id)arg12 withCurrentNotifications:(id)arg13 withCurrentNeedPolicy:(id)arg14 withSchedulerPolicy:(id)arg15 withStagerPolicy:(id)arg16 withDownloadUserInitiated:(bool)arg17 withDownloadProgress:(id)arg18 withDownloadedNetworkBytes:(long long)arg19 withDownloadedFilesystemBytes:(long long)arg20 withCurrentLockUsage:(id)arg21 withSelectorsForStaging:(id)arg22 withAvailableForUseError:(id)arg23 withNewerVersionError:(id)arg24;
- (id)initStatusForClientDomain:(id)arg1 forAssetSetIdentifier:(id)arg2 withConfiguredAssetEntries:(id)arg3 withAtomicInstancesDownloaded:(id)arg4 withCatalogCachedAssetSetID:(id)arg5 withCatalogDownloadedFromLive:(id)arg6 withCatalogLastTimeChecked:(id)arg7 withCatalogPostedDate:(id)arg8 withNewerAtomicInstanceDiscovered:(id)arg9 withNewerDiscoveredAtomicEntries:(id)arg10 withLatestDownloadedAtomicInstance:(id)arg11 withLatestDowloadedAtomicInstanceEntries:(id)arg12 withDownloadedCatalogCachedAssetSetID:(id)arg13 withDownloadedCatalogDownloadedFromLive:(id)arg14 withDownloadedCatalogLastTimeChecked:(id)arg15 withDownloadedCatalogPostedDate:(id)arg16 withCurrentNotifications:(id)arg17 withCurrentNeedPolicy:(id)arg18 withSchedulerPolicy:(id)arg19 withStagerPolicy:(id)arg20 withDownloadUserInitiated:(bool)arg21 withDownloadProgress:(id)arg22 withDownloadedNetworkBytes:(long long)arg23 withDownloadedFilesystemBytes:(long long)arg24 withCurrentLockUsage:(id)arg25 withSelectorsForStaging:(id)arg26 withAvailableForUseError:(id)arg27 withNewerVersionError:(id)arg28;
- (id)initStatusForClientDomain:(id)arg1 forAssetSetIdentifier:(id)arg2 withConfiguredAssetEntries:(id)arg3 withAtomicInstancesDownloaded:(id)arg4 withNewerAtomicInstanceDiscovered:(id)arg5 withNewerDiscoveredAtomicEntries:(id)arg6 withLatestDownloadedAtomicInstance:(id)arg7 withLatestDowloadedAtomicInstanceEntries:(id)arg8 withAllDownloadedAtomicInstanceEntries:(id)arg9 withCurrentNotifications:(id)arg10 withCurrentNeedPolicy:(id)arg11 withSchedulerPolicy:(id)arg12 withStagerPolicy:(id)arg13 withDownloadUserInitiated:(bool)arg14 withDownloadProgress:(id)arg15 withDownloadedNetworkBytes:(long long)arg16 withDownloadedFilesystemBytes:(long long)arg17 withCurrentLockUsage:(id)arg18 withSelectorsForStaging:(id)arg19 withAvailableForUseError:(id)arg20 withNewerVersionError:(id)arg21;
- (id)initWithCoder:(id)arg1;
- (id)latestDowloadedAtomicInstanceEntries;
- (id)latestDownloadedAtomicInstance;
- (id)newerAtomicInstanceDiscovered;
- (id)newerDiscoveredAtomicEntries;
- (id)newerVersionError;
- (id)schedulerPolicy;
- (id)selectorsForStaging;
- (void)setAllDownloadedAtomicInstanceEntries:(id)arg1;
- (void)setAtomicInstancesDownloaded:(id)arg1;
- (void)setAvailableForUseError:(id)arg1;
- (void)setCatalogCachedAssetSetID:(id)arg1;
- (void)setCatalogDownloadedFromLive:(id)arg1;
- (void)setCatalogLastTimeChecked:(id)arg1;
- (void)setCatalogPostedDate:(id)arg1;
- (void)setConfiguredAssetEntries:(id)arg1;
- (void)setCurrentLockUsage:(id)arg1;
- (void)setCurrentNeedPolicy:(id)arg1;
- (void)setCurrentNotifications:(id)arg1;
- (void)setDownloadProgress:(id)arg1;
- (void)setDownloadUserInitiated:(bool)arg1;
- (void)setDownloadedCatalogCachedAssetSetID:(id)arg1;
- (void)setDownloadedCatalogDownloadedFromLive:(id)arg1;
- (void)setDownloadedCatalogLastTimeChecked:(id)arg1;
- (void)setDownloadedCatalogPostedDate:(id)arg1;
- (void)setDownloadedFilesystemBytes:(long long)arg1;
- (void)setDownloadedNetworkBytes:(long long)arg1;
- (void)setLatestDowloadedAtomicInstanceEntries:(id)arg1;
- (void)setLatestDownloadedAtomicInstance:(id)arg1;
- (void)setNewerAtomicInstanceDiscovered:(id)arg1;
- (void)setNewerDiscoveredAtomicEntries:(id)arg1;
- (void)setNewerVersionError:(id)arg1;
- (void)setSchedulerPolicy:(id)arg1;
- (void)setSelectorsForStaging:(id)arg1;
- (void)setStagerPolicy:(id)arg1;
- (id)stagerPolicy;
- (id)summary;

@end
