
@interface MAAutoAssetSet : NSObject <NSSecureCoding, SUCoreConnectClientDelegate> {
    NSString * _assetSetIdentifier;
    NSArray * _autoAssetEntries;
    NSString * _autoAssetSetClientName;
    NSString * _clientDomainName;
    NSObject<OS_dispatch_queue> * _completionDispatchQueue;
    NSString * _updateCategoryDesiredByClient;
}

@property (nonatomic, retain) NSString *assetSetIdentifier;
@property (nonatomic, retain) NSArray *autoAssetEntries;
@property (nonatomic, retain) NSString *autoAssetSetClientName;
@property (nonatomic, retain) NSString *clientDomainName;
@property (nonatomic, readonly, retain) NSObject<OS_dispatch_queue> *completionDispatchQueue;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSString *updateCategoryDesiredByClient;

+ (id)defaultDispatchQueue;
+ (void)eliminateAtomic:(id)arg1 usingClientDomain:(id)arg2 forAssetSetIdentifier:(id)arg3 completion:(id /* block */)arg4;
+ (id)eliminateAtomicSync:(id)arg1 usingClientDomain:(id)arg2 forAssetSetIdentifier:(id)arg3;
+ (void)endAtomicLocks:(id)arg1 usingClientDomain:(id)arg2 forClientName:(id)arg3 forAssetSetIdentifier:(id)arg4 ofAtomicInstance:(id)arg5 removingLockCount:(long long)arg6 completion:(id /* block */)arg7;
+ (id)endAtomicLocksSync:(id)arg1 usingClientDomain:(id)arg2 forClientName:(id)arg3 forAssetSetIdentifier:(id)arg4 ofAtomicInstance:(id)arg5 removingLockCount:(long long)arg6;
+ (id)frameworkDispatchQueue;
+ (void)frameworkInstanceSetLogDomain;
+ (id)frameworkInstanceUUID;
+ (bool)supportsSecureCoding;
+ (long long)waitOnSemaphore:(id)arg1 withDaemonTriggeredTimeout:(long long)arg2;

- (void).cxx_destruct;
- (void)_eliminateAtomic:(id)arg1 completion:(id /* block */)arg2;
- (id)_eliminateAtomicSync:(id)arg1;
- (void)_endAtomicLocks:(id)arg1 usingClientDomain:(id)arg2 forClientName:(id)arg3 forAssetSetIdentifier:(id)arg4 ofAtomicInstance:(id)arg5 removingLockCount:(long long)arg6 completion:(id /* block */)arg7;
- (id)_endAtomicLocksSync:(id)arg1 usingClientDomain:(id)arg2 forClientName:(id)arg3 forAssetSetIdentifier:(id)arg4 ofAtomicInstance:(id)arg5 removingLockCount:(long long)arg6;
- (void)_failedCheckAtomic:(id)arg1 forAssetSetIdentifier:(id)arg2 withErrorCode:(long long)arg3 withResponseError:(id)arg4 description:(id)arg5 completion:(id /* block */)arg6;
- (void)_failedCurrentSetStatus:(id)arg1 forAssetSetIdentifier:(id)arg2 withErrorCode:(long long)arg3 withResponseError:(id)arg4 description:(id)arg5 completion:(id /* block */)arg6;
- (void)_failedFormSubAtomicInstance:(id)arg1 withErrorCode:(long long)arg2 withResponseError:(id)arg3 description:(id)arg4 completion:(id /* block */)arg5;
- (void)_failedLockAtomic:(id)arg1 forAssetSetIdentifier:(id)arg2 withErrorCode:(long long)arg3 withResponseError:(id)arg4 description:(id)arg5 completion:(id /* block */)arg6;
- (void)_failedOperation:(id)arg1 forAssetSetIdentifier:(id)arg2 withErrorCode:(long long)arg3 withResponseError:(id)arg4 description:(id)arg5 completion:(id /* block */)arg6;
- (void)_lockAtomicStatusProgress:(id)arg1 lockAtomicError:(id)arg2 progressBlock:(id /* block */)arg3;
- (id)_newProxyObjectForSetProgressBlock:(id /* block */)arg1;
- (void)_successCheckAtomic:(id)arg1 forAssetSetIdentifier:(id)arg2 newerInstanceDiscovered:(id)arg3 discoveredAtomicEntries:(id)arg4 completion:(id /* block */)arg5;
- (void)_successCurrentSetStatus:(id)arg1 forAssetSetIdentifier:(id)arg2 withAssetSetStatus:(id)arg3 completion:(id /* block */)arg4;
- (void)_successFormSubAtomicInstance:(id)arg1 formedSubAtomicInstance:(id)arg2 completion:(id /* block */)arg3;
- (void)_successLockAtomic:(id)arg1 forAssetSetIdentifier:(id)arg2 lockedAtomicInstance:(id)arg3 lockedAtomicEntries:(id)arg4 completion:(id /* block */)arg5;
- (void)_successOperation:(id)arg1 forAssetSetIdentifier:(id)arg2 completion:(id /* block */)arg3;
- (void)alterEntriesRepresentingAtomic:(id)arg1 toBeComprisedOfEntries:(id)arg2 completion:(id /* block */)arg3;
- (void)alterEntriesRepresentingAtomic:(id)arg1 toBeComprisedOfEntries:(id)arg2 withNeedPolicy:(id)arg3 completion:(id /* block */)arg4;
- (id)alterEntriesRepresentingAtomicSync:(id)arg1 toBeComprisedOfEntries:(id)arg2;
- (id)alterEntriesRepresentingAtomicSync:(id)arg1 toBeComprisedOfEntries:(id)arg2 withNeedPolicy:(id)arg3;
- (void)assetSetForStaging:(id)arg1 asEntriesWhenTargeting:(id)arg2 completion:(id /* block */)arg3;
- (id)assetSetForStagingSync:(id)arg1 asEntriesWhenTargeting:(id)arg2;
- (id)assetSetIdentifier;
- (id)autoAssetEntries;
- (id)autoAssetSetClientName;
- (void)checkAtomic:(id)arg1 forAtomicInstance:(id)arg2 awaitingDownload:(bool)arg3 withNeedPolicy:(id)arg4 withTimeout:(long long)arg5 completion:(id /* block */)arg6;
- (void)checkAtomic:(id)arg1 forAtomicInstance:(id)arg2 awaitingDownload:(bool)arg3 withNeedPolicy:(id)arg4 withTimeout:(long long)arg5 reportingProgress:(id /* block */)arg6 completion:(id /* block */)arg7;
- (void)checkAtomic:(id)arg1 forAtomicInstance:(id)arg2 awaitingDownload:(bool)arg3 withTimeout:(long long)arg4 completion:(id /* block */)arg5;
- (void)checkAtomic:(id)arg1 forAtomicInstance:(id)arg2 awaitingDownload:(bool)arg3 withTimeout:(long long)arg4 reportingProgress:(id /* block */)arg5 completion:(id /* block */)arg6;
- (void)checkAtomic:(id)arg1 forAtomicInstance:(id)arg2 withNeedPolicy:(id)arg3 withTimeout:(long long)arg4 completion:(id /* block */)arg5;
- (void)checkAtomic:(id)arg1 forAtomicInstance:(id)arg2 withTimeout:(long long)arg3 completion:(id /* block */)arg4;
- (id)checkAtomicSync:(id)arg1 forAtomicInstance:(id)arg2 awaitingDownload:(bool)arg3 withNeedPolicy:(id)arg4 withTimeout:(long long)arg5 discoveredAtomicEntries:(id*)arg6 error:(id*)arg7;
- (id)checkAtomicSync:(id)arg1 forAtomicInstance:(id)arg2 awaitingDownload:(bool)arg3 withNeedPolicy:(id)arg4 withTimeout:(long long)arg5 discoveredAtomicEntries:(id*)arg6 error:(id*)arg7 reportingProgress:(id /* block */)arg8;
- (id)checkAtomicSync:(id)arg1 forAtomicInstance:(id)arg2 awaitingDownload:(bool)arg3 withTimeout:(long long)arg4 discoveredAtomicEntries:(id*)arg5 error:(id*)arg6;
- (id)checkAtomicSync:(id)arg1 forAtomicInstance:(id)arg2 awaitingDownload:(bool)arg3 withTimeout:(long long)arg4 discoveredAtomicEntries:(id*)arg5 error:(id*)arg6 reportingProgress:(id /* block */)arg7;
- (id)checkAtomicSync:(id)arg1 forAtomicInstance:(id)arg2 withNeedPolicy:(id)arg3 withTimeout:(long long)arg4 discoveredAtomicEntries:(id*)arg5 error:(id*)arg6;
- (id)checkAtomicSync:(id)arg1 forAtomicInstance:(id)arg2 withTimeout:(long long)arg3 discoveredAtomicEntries:(id*)arg4 error:(id*)arg5;
- (id)clientDomainName;
- (id)completionDispatchQueue;
- (void)connectToServerFrameworkCompletion:(id /* block */)arg1;
- (void)connectionClosed;
- (void)continueAtomicLock:(id)arg1 ofAtomicInstance:(id)arg2 completion:(id /* block */)arg3;
- (void)continueAtomicLock:(id)arg1 ofAtomicInstance:(id)arg2 withNeedPolicy:(id)arg3 completion:(id /* block */)arg4;
- (id)continueAtomicLockSync:(id)arg1 ofAtomicInstance:(id)arg2;
- (id)continueAtomicLockSync:(id)arg1 ofAtomicInstance:(id)arg2 withNeedPolicy:(id)arg3;
- (void)currentSetStatus:(id /* block */)arg1;
- (id)currentSetStatusSync:(id*)arg1;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (void)endAtomicLock:(id)arg1 ofAtomicInstance:(id)arg2 completion:(id /* block */)arg3;
- (id)endAtomicLockSync:(id)arg1 ofAtomicInstance:(id)arg2;
- (void)formSubAtomicInstance:(id)arg1 fromAtomicInstance:(id)arg2 toBeComprisedOfEntries:(id)arg3 completion:(id /* block */)arg4;
- (id)formSubAtomicInstanceSync:(id)arg1 fromAtomicInstance:(id)arg2 toBeComprisedOfEntries:(id)arg3 error:(id*)arg4;
- (void)handleMessage:(id)arg1 reply:(id /* block */)arg2;
- (void)handleResponse:(id)arg1 error:(id)arg2;
- (id)initUsingClientDomain:(id)arg1 forClientName:(id)arg2 forAssetSetIdentifier:(id)arg3 comprisedOfEntries:(id)arg4 completingFromQueue:(id)arg5 error:(id*)arg6;
- (id)initUsingClientDomain:(id)arg1 forClientName:(id)arg2 forAssetSetIdentifier:(id)arg3 comprisedOfEntries:(id)arg4 error:(id*)arg5;
- (id)initUsingClientDomain:(id)arg1 forClientName:(id)arg2 forAssetSetIdentifier:(id)arg3 comprisedOfEntries:(id)arg4 usingDesiredPolicyCategory:(id)arg5 completingFromQueue:(id)arg6 error:(id*)arg7;
- (id)initUsingClientDomain:(id)arg1 forClientName:(id)arg2 forAssetSetIdentifier:(id)arg3 comprisedOfEntries:(id)arg4 usingDesiredPolicyCategory:(id)arg5 error:(id*)arg6;
- (id)initWithCoder:(id)arg1;
- (void)lockAtomic:(id)arg1 forAtomicInstance:(id)arg2 withNeedPolicy:(id)arg3 withTimeout:(long long)arg4 completion:(id /* block */)arg5;
- (void)lockAtomic:(id)arg1 forAtomicInstance:(id)arg2 withNeedPolicy:(id)arg3 withTimeout:(long long)arg4 reportingProgress:(id /* block */)arg5 completion:(id /* block */)arg6;
- (void)lockAtomic:(id)arg1 forAtomicInstance:(id)arg2 withTimeout:(long long)arg3 completion:(id /* block */)arg4;
- (void)lockAtomic:(id)arg1 forAtomicInstance:(id)arg2 withTimeout:(long long)arg3 reportingProgress:(id /* block */)arg4 completion:(id /* block */)arg5;
- (id)lockAtomicSync:(id)arg1 forAtomicInstance:(id)arg2 withNeedPolicy:(id)arg3 withTimeout:(long long)arg4 lockedAtomicEntries:(id*)arg5 error:(id*)arg6;
- (id)lockAtomicSync:(id)arg1 forAtomicInstance:(id)arg2 withNeedPolicy:(id)arg3 withTimeout:(long long)arg4 lockedAtomicEntries:(id*)arg5 error:(id*)arg6 reportingProgress:(id /* block */)arg7;
- (id)lockAtomicSync:(id)arg1 forAtomicInstance:(id)arg2 withTimeout:(long long)arg3 lockedAtomicEntries:(id*)arg4 error:(id*)arg5;
- (id)lockAtomicSync:(id)arg1 forAtomicInstance:(id)arg2 withTimeout:(long long)arg3 lockedAtomicEntries:(id*)arg4 error:(id*)arg5 reportingProgress:(id /* block */)arg6;
- (void)needForAtomic:(id)arg1 completion:(id /* block */)arg2;
- (void)needForAtomic:(id)arg1 withNeedPolicy:(id)arg2 completion:(id /* block */)arg3;
- (id)needForAtomicSync:(id)arg1;
- (id)needForAtomicSync:(id)arg1 withNeedPolicy:(id)arg2;
- (void)setAssetSetIdentifier:(id)arg1;
- (void)setAutoAssetEntries:(id)arg1;
- (void)setAutoAssetSetClientName:(id)arg1;
- (void)setClientDomainName:(id)arg1;
- (void)setUpdateCategoryDesiredByClient:(id)arg1;
- (id)summary;
- (id)updateCategoryDesiredByClient;

@end
