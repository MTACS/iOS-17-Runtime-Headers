
@interface CACSceneManager : NSObject <CACDictationRecognizerModeOverlayManagerDelegate, CACElementNamesOverlayManagerDelegate, CACLabeledElementsOverlayManagerDelegate, CACLabeledGridOverlayManagerDelegate, CACSimpleContentViewManagerDelegate> {
    CACBannerViewPresenter * _bannerViewPresenter;
    CACDisambiguationPresentationManager * _contactDisambiguationPresentationManager;
    CACContextCluesPresentationManager * _contextCluesPresentationManager;
    CACCorrectionPresentationManager * _correctionPresentationManager;
    CACCustomCommandEditorPresentationManager * _customCommandEditorPresentationManager;
    CACDictationRecognizerModeOverlayManager * _dictationRecognizerModeOverlayManager;
    CACElementActionsPresentationManager * _elementActionsPresentationManager;
    CACElementNamesOverlayManager * _elementNamesOverlayManager;
    CACGestureLivePreviewOverlayManager * _gestureLivePreviewOverlayManager;
    CACGestureLivePreviewOverlayManager * _gestureLivePreviewPresentationOverlayManager;
    CACLabeledElementsOverlayManager * _labeledElementsOverlayManager;
    CACLabeledGridOverlayManager * _labeledGridOverlayManager;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _minimumSystemAperatureRect;
    CACContainerViewController * _overlayContainerViewController;
    UIWindow * _overlayWindow;
    NSMutableArray * _registeredPresentationManagers;
    UIWindowScene * _scene;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _systemAperatureRect;
    UIWindow * _window;
    CACContainerViewController * _windowContainerViewController;
}

@property (nonatomic, retain) CACBannerViewPresenter *bannerViewPresenter;
@property (nonatomic, retain) CACDisambiguationPresentationManager *contactDisambiguationPresentationManager;
@property (nonatomic, retain) CACContextCluesPresentationManager *contextCluesPresentationManager;
@property (nonatomic, retain) CACCorrectionPresentationManager *correctionPresentationManager;
@property (nonatomic, retain) CACCustomCommandEditorPresentationManager *customCommandEditorPresentationManager;
@property (nonatomic, retain) CACDictationRecognizerModeOverlayManager *dictationRecognizerModeOverlayManager;
@property (nonatomic, readonly) unsigned int displayID;
@property (nonatomic, retain) CACElementActionsPresentationManager *elementActionsPresentationManager;
@property (nonatomic, retain) CACElementNamesOverlayManager *elementNamesOverlayManager;
@property (nonatomic, retain) CACGestureLivePreviewOverlayManager *gestureLivePreviewOverlayManager;
@property (nonatomic, retain) CACGestureLivePreviewOverlayManager *gestureLivePreviewPresentationOverlayManager;
@property (nonatomic, retain) CACLabeledElementsOverlayManager *labeledElementsOverlayManager;
@property (nonatomic, retain) CACLabeledGridOverlayManager *labeledGridOverlayManager;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } minimumSystemAperatureRect;
@property (nonatomic, retain) CACContainerViewController *overlayContainerViewController;
@property (nonatomic, retain) UIWindow *overlayWindow;
@property (nonatomic, retain) NSMutableArray *registeredPresentationManagers;
@property (nonatomic, retain) UIWindowScene *scene;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } systemAperatureRect;
@property (nonatomic, retain) UIWindow *window;
@property (nonatomic, retain) CACContainerViewController *windowContainerViewController;

- (void).cxx_destruct;
- (id)_containerViewControllerForViewController:(id)arg1;
- (void)_installViewController:(id)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (unsigned long long)_numberOfLabelsForGridManager:(id)arg1;
- (void)_uninstallViewController:(id)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (id)bannerViewPresenter;
- (id)contactDisambiguationPresentationManager;
- (void)contentViewManager:(id)arg1 dismissViewController:(id)arg2 animated:(bool)arg3 completion:(id /* block */)arg4;
- (void)contentViewManager:(id)arg1 presentViewController:(id)arg2 animated:(bool)arg3 completion:(id /* block */)arg4;
- (id)contextCluesPresentationManager;
- (id)correctionPresentationManager;
- (id)customCommandEditorPresentationManager;
- (long long)defaultNumberOfColumnsForLabeledGridOverlayManager:(id)arg1;
- (id)dictationRecognizerModeOverlayManager;
- (void)didAssignNumbersInLabeledElementsOverlayManager:(id)arg1;
- (void)didUpdateElementsForLabeledGridOverlayManager:(id)arg1;
- (unsigned int)displayID;
- (id)elementActionsPresentationManager;
- (id)elementNamesOverlayManager;
- (id)gestureLivePreviewOverlayManager;
- (id)gestureLivePreviewPresentationOverlayManager;
- (void)hideAnyOverlayAnimated:(bool)arg1 includeInteractiveOverlays:(bool)arg2;
- (void)hideAnyPresentationAnimated:(bool)arg1 includingOutOfProcessPresentations:(bool)arg2;
- (void)hideDictationRecognizerModeOverlayNow;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })imageRectForDictationRecognizerModeOverlayManager:(id)arg1;
- (id)init;
- (bool)isAlwaysShowingElementNamesOverlayManager:(id)arg1;
- (bool)isAlwaysShowingLabeledElementsOverlayManager:(id)arg1;
- (bool)isAlwaysShowingLabeledGridOverlayManager:(id)arg1;
- (bool)isDisplayingAnyContentView;
- (bool)isDisplayingAnyInteractiveContentInProcess;
- (bool)isDisplayingAnyOutOfProcessPresentation;
- (bool)isDisplayingAnyOverlay;
- (bool)isDisplayingAnyPresentation;
- (bool)isDisplayingCorrections;
- (bool)isHandlingDisambiguationForLabeledElementsOverlayManager:(id)arg1;
- (bool)isOverlayFadingEnabledForElementNamesOverlayManager:(id)arg1;
- (bool)isOverlayFadingEnabledForLabeledElementsOverlayManager:(id)arg1;
- (bool)isOverlayFadingEnabledForLabeledGridOverlayManager:(id)arg1;
- (bool)isPressOnFirstLevelEnabledForLabeledGridOverlayManager:(id)arg1;
- (bool)isZoomEnabledForGridOverlayManager:(id)arg1;
- (id)labeledElementsOverlayManager;
- (id)labeledGridOverlayManager;
- (id)labeledGridOverlayManager:(id)arg1 elementWithTitle:(id)arg2 rectangle:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (id)localeForLabeledElementsOverlayManager:(id)arg1;
- (long long)maximumLevelForLabeledGridOverlayManager:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })minimumSystemAperatureRect;
- (int)modeForDictationRecognizerModeOverlayManager:(id)arg1;
- (unsigned long long)numberOfLabelsForGridManager;
- (id)overlayContainerViewController;
- (double)overlayFadeDelayForElementNamesOverlayManager:(id)arg1;
- (double)overlayFadeDelayForLabeledElementsOverlayManager:(id)arg1;
- (double)overlayFadeDelayForLabeledGridOverlayManager:(id)arg1;
- (float)overlayFadeOpacityForElementNamesOverlayManager:(id)arg1;
- (float)overlayFadeOpacityForLabeledElementsOverlayManager:(id)arg1;
- (float)overlayFadeOpacityForLabeledGridOverlayManager:(id)arg1;
- (id)overlayWindow;
- (void)redrawGridIfExists;
- (void)registerPresentationManager:(id)arg1;
- (id)registeredPresentationManagers;
- (id)scene;
- (id)screen;
- (id)screenForLabeledElementsOverlayManager:(id)arg1;
- (id)screenForLabeledGridOverlayManager:(id)arg1;
- (void)setBannerViewPresenter:(id)arg1;
- (void)setContactDisambiguationPresentationManager:(id)arg1;
- (void)setContextCluesPresentationManager:(id)arg1;
- (void)setCorrectionPresentationManager:(id)arg1;
- (void)setCustomCommandEditorPresentationManager:(id)arg1;
- (void)setDictationRecognizerModeOverlayManager:(id)arg1;
- (void)setElementActionsPresentationManager:(id)arg1;
- (void)setElementNamesOverlayManager:(id)arg1;
- (void)setGestureLivePreviewOverlayManager:(id)arg1;
- (void)setGestureLivePreviewPresentationOverlayManager:(id)arg1;
- (void)setLabeledElementsOverlayManager:(id)arg1;
- (void)setLabeledGridOverlayManager:(id)arg1;
- (void)setMinimumSystemAperatureRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setOverlayContainerViewController:(id)arg1;
- (void)setOverlayWindow:(id)arg1;
- (void)setRegisteredPresentationManagers:(id)arg1;
- (void)setScene:(id)arg1;
- (void)setSystemAperatureRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setWindow:(id)arg1;
- (void)setWindowContainerViewController:(id)arg1;
- (bool)shouldAssignNumbersRandomlyInLabeledElementsOverlayManager:(id)arg1;
- (void)showBannerViewWithText:(id)arg1 type:(long long)arg2;
- (bool)showsNumbersInTopLeftForLabeledGridOverlayManager:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })systemAperatureMinimumRectForLabeledElementsOverlayManager:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })systemAperatureRect;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })systemAperatureRectForLabeledElementsOverlayManager:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })topLevelPortraitUpRectForLabeledGridOverlayManager:(id)arg1;
- (bool)updateGridLayoutFromPreferences;
- (unsigned long long)updateGridLayoutWithNumberOfRows:(unsigned long long)arg1 numberOfColumns:(unsigned long long)arg2 shouldPreferRows:(bool)arg3 startingNumber:(unsigned long long)arg4;
- (id)window;
- (id)windowContainerViewController;

@end
