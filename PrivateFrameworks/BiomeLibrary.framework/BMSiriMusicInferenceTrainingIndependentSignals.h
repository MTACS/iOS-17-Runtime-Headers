
@interface BMSiriMusicInferenceTrainingIndependentSignals : BMEventBase <BMStoreData> {
    int  _appSelectionUses;
    int  _clientDayOfWeek;
    double  _foregroundBundleRecencyS;
    bool  _hasAppSelectionUses;
    bool  _hasClientDayOfWeek;
    bool  _hasForegroundBundleRecencyS;
    bool  _hasIsClientDaylight;
    bool  _hasIsClientNavigating;
    bool  _hasIsClientWorkout;
    bool  _hasIsMediaAlbumPresent;
    bool  _hasIsMediaArtistPresent;
    bool  _hasIsMediaGenrePresent;
    bool  _hasIsMediaMoodPresent;
    bool  _hasIsMediaNamePresent;
    bool  _hasIsMediaReleaseDatePresent;
    bool  _hasIsPireneRequest;
    bool  _hasMediaParsecCategory;
    bool  _hasMediaType;
    bool  _hasModelVersion;
    bool  _hasNowPlayingLastBundleRecencyS;
    bool  _hasNowPlayingState;
    bool  _hasRawClientHourOfDay;
    bool  _hasRawLanguage;
    bool  _hasRawLocale;
    bool  _hasRawRegion;
    bool  _hasSirikitResponseCode;
    bool  _isClientDaylight;
    bool  _isClientNavigating;
    bool  _isClientWorkout;
    bool  _isMediaAlbumPresent;
    bool  _isMediaArtistPresent;
    bool  _isMediaGenrePresent;
    bool  _isMediaMoodPresent;
    bool  _isMediaNamePresent;
    bool  _isMediaReleaseDatePresent;
    bool  _isPireneRequest;
    int  _mediaParsecCategory;
    int  _mediaType;
    unsigned int  _modelVersion;
    int  _nowPlayingLastBundleRecencyS;
    int  _nowPlayingState;
    int  _rawClientHourOfDay;
    long long  _rawLanguage;
    long long  _rawLocale;
    long long  _rawRegion;
    int  _resolutionType;
    int  _sirikitResponseCode;
}

@property (nonatomic, readonly) int appSelectionUses;
@property (nonatomic, readonly) int clientDayOfWeek;
@property (nonatomic, readonly) unsigned int dataVersion;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) double foregroundBundleRecencyS;
@property (nonatomic) bool hasAppSelectionUses;
@property (nonatomic) bool hasClientDayOfWeek;
@property (nonatomic) bool hasForegroundBundleRecencyS;
@property (nonatomic) bool hasIsClientDaylight;
@property (nonatomic) bool hasIsClientNavigating;
@property (nonatomic) bool hasIsClientWorkout;
@property (nonatomic) bool hasIsMediaAlbumPresent;
@property (nonatomic) bool hasIsMediaArtistPresent;
@property (nonatomic) bool hasIsMediaGenrePresent;
@property (nonatomic) bool hasIsMediaMoodPresent;
@property (nonatomic) bool hasIsMediaNamePresent;
@property (nonatomic) bool hasIsMediaReleaseDatePresent;
@property (nonatomic) bool hasIsPireneRequest;
@property (nonatomic) bool hasMediaParsecCategory;
@property (nonatomic) bool hasMediaType;
@property (nonatomic) bool hasModelVersion;
@property (nonatomic) bool hasNowPlayingLastBundleRecencyS;
@property (nonatomic) bool hasNowPlayingState;
@property (nonatomic) bool hasRawClientHourOfDay;
@property (nonatomic) bool hasRawLanguage;
@property (nonatomic) bool hasRawLocale;
@property (nonatomic) bool hasRawRegion;
@property (nonatomic) bool hasSirikitResponseCode;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isClientDaylight;
@property (nonatomic, readonly) bool isClientNavigating;
@property (nonatomic, readonly) bool isClientWorkout;
@property (nonatomic, readonly) bool isMediaAlbumPresent;
@property (nonatomic, readonly) bool isMediaArtistPresent;
@property (nonatomic, readonly) bool isMediaGenrePresent;
@property (nonatomic, readonly) bool isMediaMoodPresent;
@property (nonatomic, readonly) bool isMediaNamePresent;
@property (nonatomic, readonly) bool isMediaReleaseDatePresent;
@property (nonatomic, readonly) bool isPireneRequest;
@property (nonatomic, readonly) int mediaParsecCategory;
@property (nonatomic, readonly) int mediaType;
@property (nonatomic, readonly) unsigned int modelVersion;
@property (nonatomic, readonly) int nowPlayingLastBundleRecencyS;
@property (nonatomic, readonly) int nowPlayingState;
@property (nonatomic, readonly) int rawClientHourOfDay;
@property (nonatomic, readonly) long long rawLanguage;
@property (nonatomic, readonly) long long rawLocale;
@property (nonatomic, readonly) long long rawRegion;
@property (nonatomic, readonly) int resolutionType;
@property (nonatomic, readonly) int sirikitResponseCode;
@property (readonly) Class superclass;

+ (id)columns;
+ (id)eventWithData:(id)arg1 dataVersion:(unsigned int)arg2;
+ (id)validKeyPaths;

- (int)appSelectionUses;
- (int)clientDayOfWeek;
- (unsigned int)dataVersion;
- (id)description;
- (double)foregroundBundleRecencyS;
- (bool)hasAppSelectionUses;
- (bool)hasClientDayOfWeek;
- (bool)hasForegroundBundleRecencyS;
- (bool)hasIsClientDaylight;
- (bool)hasIsClientNavigating;
- (bool)hasIsClientWorkout;
- (bool)hasIsMediaAlbumPresent;
- (bool)hasIsMediaArtistPresent;
- (bool)hasIsMediaGenrePresent;
- (bool)hasIsMediaMoodPresent;
- (bool)hasIsMediaNamePresent;
- (bool)hasIsMediaReleaseDatePresent;
- (bool)hasIsPireneRequest;
- (bool)hasMediaParsecCategory;
- (bool)hasMediaType;
- (bool)hasModelVersion;
- (bool)hasNowPlayingLastBundleRecencyS;
- (bool)hasNowPlayingState;
- (bool)hasRawClientHourOfDay;
- (bool)hasRawLanguage;
- (bool)hasRawLocale;
- (bool)hasRawRegion;
- (bool)hasSirikitResponseCode;
- (id)initByReadFrom:(id)arg1;
- (id)initWithClientDayOfWeek:(id)arg1 rawClientHourOfDay:(id)arg2 isMediaAlbumPresent:(id)arg3 isMediaArtistPresent:(id)arg4 isMediaGenrePresent:(id)arg5 isMediaMoodPresent:(id)arg6 isMediaNamePresent:(id)arg7 isMediaReleaseDatePresent:(id)arg8 nowPlayingLastBundleRecencyS:(id)arg9 rawLanguage:(id)arg10 rawLocale:(id)arg11 rawRegion:(id)arg12 isClientDaylight:(id)arg13 isClientNavigating:(id)arg14 isClientWorkout:(id)arg15 mediaType:(id)arg16 nowPlayingState:(id)arg17 isPireneRequest:(id)arg18 foregroundBundleRecencyS:(id)arg19 mediaParsecCategory:(id)arg20 sirikitResponseCode:(id)arg21 appSelectionUses:(id)arg22 modelVersion:(id)arg23 resolutionType:(int)arg24;
- (id)initWithJSONDictionary:(id)arg1 error:(id*)arg2;
- (bool)isClientDaylight;
- (bool)isClientNavigating;
- (bool)isClientWorkout;
- (bool)isEqual:(id)arg1;
- (bool)isMediaAlbumPresent;
- (bool)isMediaArtistPresent;
- (bool)isMediaGenrePresent;
- (bool)isMediaMoodPresent;
- (bool)isMediaNamePresent;
- (bool)isMediaReleaseDatePresent;
- (bool)isPireneRequest;
- (id)jsonDictionary;
- (int)mediaParsecCategory;
- (int)mediaType;
- (unsigned int)modelVersion;
- (int)nowPlayingLastBundleRecencyS;
- (int)nowPlayingState;
- (int)rawClientHourOfDay;
- (long long)rawLanguage;
- (long long)rawLocale;
- (long long)rawRegion;
- (int)resolutionType;
- (id)serialize;
- (void)setHasAppSelectionUses:(bool)arg1;
- (void)setHasClientDayOfWeek:(bool)arg1;
- (void)setHasForegroundBundleRecencyS:(bool)arg1;
- (void)setHasIsClientDaylight:(bool)arg1;
- (void)setHasIsClientNavigating:(bool)arg1;
- (void)setHasIsClientWorkout:(bool)arg1;
- (void)setHasIsMediaAlbumPresent:(bool)arg1;
- (void)setHasIsMediaArtistPresent:(bool)arg1;
- (void)setHasIsMediaGenrePresent:(bool)arg1;
- (void)setHasIsMediaMoodPresent:(bool)arg1;
- (void)setHasIsMediaNamePresent:(bool)arg1;
- (void)setHasIsMediaReleaseDatePresent:(bool)arg1;
- (void)setHasIsPireneRequest:(bool)arg1;
- (void)setHasMediaParsecCategory:(bool)arg1;
- (void)setHasMediaType:(bool)arg1;
- (void)setHasModelVersion:(bool)arg1;
- (void)setHasNowPlayingLastBundleRecencyS:(bool)arg1;
- (void)setHasNowPlayingState:(bool)arg1;
- (void)setHasRawClientHourOfDay:(bool)arg1;
- (void)setHasRawLanguage:(bool)arg1;
- (void)setHasRawLocale:(bool)arg1;
- (void)setHasRawRegion:(bool)arg1;
- (void)setHasSirikitResponseCode:(bool)arg1;
- (int)sirikitResponseCode;
- (void)writeTo:(id)arg1;

@end
