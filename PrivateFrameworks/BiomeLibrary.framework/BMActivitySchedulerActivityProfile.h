
@interface BMActivitySchedulerActivityProfile : BMEventBase <BMStoreData> {
    int  _CPUAwakeTime;
    double  _CPUTime;
    NSString * _activityname;
    NSString * _bundleID;
    bool  _completed;
    int  _dirtyMemoryDelta;
    int  _endBatteryTemperature;
    bool  _endedInIdle;
    bool  _endedOnBattery;
    bool  _hasCPUAwakeTime;
    bool  _hasCPUTime;
    bool  _hasCompleted;
    bool  _hasDirtyMemoryDelta;
    bool  _hasEndBatteryTemperature;
    bool  _hasEndedInIdle;
    bool  _hasEndedOnBattery;
    bool  _hasNetworkProfSuccess;
    bool  _hasQosBackground;
    bool  _hasQosLegacy;
    bool  _hasQosUserInit;
    bool  _hasRaw_endTime;
    bool  _hasRaw_startTime;
    bool  _hasRunTime;
    bool  _hasRusageProfSuccess;
    bool  _hasServicedEnergy;
    bool  _hasSessionProfSuccess;
    bool  _hasStartBatteryTemperature;
    bool  _hasStartedInIdle;
    bool  _hasStartedOnBattery;
    bool  _hasVersion;
    bool  _hasWifiDown;
    bool  _hasWifiUp;
    bool  _networkProfSuccess;
    double  _qosBackground;
    double  _qosLegacy;
    double  _qosUserInit;
    double  _raw_endTime;
    double  _raw_startTime;
    double  _runTime;
    bool  _rusageProfSuccess;
    int  _servicedEnergy;
    bool  _sessionProfSuccess;
    int  _startBatteryTemperature;
    bool  _startedInIdle;
    bool  _startedOnBattery;
    int  _version;
    int  _wifiDown;
    int  _wifiUp;
}

@property (nonatomic, readonly) int CPUAwakeTime;
@property (nonatomic, readonly) double CPUTime;
@property (nonatomic, readonly) NSString *activityname;
@property (nonatomic, readonly) NSString *bundleID;
@property (nonatomic, readonly) bool completed;
@property (nonatomic, readonly) unsigned int dataVersion;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) int dirtyMemoryDelta;
@property (nonatomic, readonly) int endBatteryTemperature;
@property (nonatomic, readonly) NSDate *endTime;
@property (nonatomic, readonly) bool endedInIdle;
@property (nonatomic, readonly) bool endedOnBattery;
@property (nonatomic) bool hasCPUAwakeTime;
@property (nonatomic) bool hasCPUTime;
@property (nonatomic) bool hasCompleted;
@property (nonatomic) bool hasDirtyMemoryDelta;
@property (nonatomic) bool hasEndBatteryTemperature;
@property (nonatomic) bool hasEndedInIdle;
@property (nonatomic) bool hasEndedOnBattery;
@property (nonatomic) bool hasNetworkProfSuccess;
@property (nonatomic) bool hasQosBackground;
@property (nonatomic) bool hasQosLegacy;
@property (nonatomic) bool hasQosUserInit;
@property (nonatomic) bool hasRunTime;
@property (nonatomic) bool hasRusageProfSuccess;
@property (nonatomic) bool hasServicedEnergy;
@property (nonatomic) bool hasSessionProfSuccess;
@property (nonatomic) bool hasStartBatteryTemperature;
@property (nonatomic) bool hasStartedInIdle;
@property (nonatomic) bool hasStartedOnBattery;
@property (nonatomic) bool hasVersion;
@property (nonatomic) bool hasWifiDown;
@property (nonatomic) bool hasWifiUp;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool networkProfSuccess;
@property (nonatomic, readonly) double qosBackground;
@property (nonatomic, readonly) double qosLegacy;
@property (nonatomic, readonly) double qosUserInit;
@property (nonatomic, readonly) double runTime;
@property (nonatomic, readonly) bool rusageProfSuccess;
@property (nonatomic, readonly) int servicedEnergy;
@property (nonatomic, readonly) bool sessionProfSuccess;
@property (nonatomic, readonly) int startBatteryTemperature;
@property (nonatomic, readonly) NSDate *startTime;
@property (nonatomic, readonly) bool startedInIdle;
@property (nonatomic, readonly) bool startedOnBattery;
@property (readonly) Class superclass;
@property (nonatomic, readonly) int version;
@property (nonatomic, readonly) int wifiDown;
@property (nonatomic, readonly) int wifiUp;

+ (id)columns;
+ (id)eventWithData:(id)arg1 dataVersion:(unsigned int)arg2;
+ (id)validKeyPaths;

- (void).cxx_destruct;
- (int)CPUAwakeTime;
- (double)CPUTime;
- (id)activityname;
- (id)bundleID;
- (bool)completed;
- (unsigned int)dataVersion;
- (id)description;
- (int)dirtyMemoryDelta;
- (int)endBatteryTemperature;
- (id)endTime;
- (bool)endedInIdle;
- (bool)endedOnBattery;
- (bool)hasCPUAwakeTime;
- (bool)hasCPUTime;
- (bool)hasCompleted;
- (bool)hasDirtyMemoryDelta;
- (bool)hasEndBatteryTemperature;
- (bool)hasEndedInIdle;
- (bool)hasEndedOnBattery;
- (bool)hasNetworkProfSuccess;
- (bool)hasQosBackground;
- (bool)hasQosLegacy;
- (bool)hasQosUserInit;
- (bool)hasRunTime;
- (bool)hasRusageProfSuccess;
- (bool)hasServicedEnergy;
- (bool)hasSessionProfSuccess;
- (bool)hasStartBatteryTemperature;
- (bool)hasStartedInIdle;
- (bool)hasStartedOnBattery;
- (bool)hasVersion;
- (bool)hasWifiDown;
- (bool)hasWifiUp;
- (id)initByReadFrom:(id)arg1;
- (id)initWithBundleID:(id)arg1 activityname:(id)arg2 completed:(id)arg3 CPUAwakeTime:(id)arg4 CPUTime:(id)arg5 endBatteryTemperature:(id)arg6 endTime:(id)arg7 endedInIdle:(id)arg8 endedOnBattery:(id)arg9 networkProfSuccess:(id)arg10 qosBackground:(id)arg11 qosLegacy:(id)arg12 qosUserInit:(id)arg13 runTime:(id)arg14 rusageProfSuccess:(id)arg15 servicedEnergy:(id)arg16 sessionProfSuccess:(id)arg17 startBatteryTemperature:(id)arg18 startTime:(id)arg19 startedInIdle:(id)arg20 startedOnBattery:(id)arg21 version:(id)arg22 wifiDown:(id)arg23 wifiUp:(id)arg24 dirtyMemoryDelta:(id)arg25;
- (id)initWithJSONDictionary:(id)arg1 error:(id*)arg2;
- (bool)isEqual:(id)arg1;
- (id)jsonDictionary;
- (bool)networkProfSuccess;
- (double)qosBackground;
- (double)qosLegacy;
- (double)qosUserInit;
- (double)runTime;
- (bool)rusageProfSuccess;
- (id)serialize;
- (int)servicedEnergy;
- (bool)sessionProfSuccess;
- (void)setHasCPUAwakeTime:(bool)arg1;
- (void)setHasCPUTime:(bool)arg1;
- (void)setHasCompleted:(bool)arg1;
- (void)setHasDirtyMemoryDelta:(bool)arg1;
- (void)setHasEndBatteryTemperature:(bool)arg1;
- (void)setHasEndedInIdle:(bool)arg1;
- (void)setHasEndedOnBattery:(bool)arg1;
- (void)setHasNetworkProfSuccess:(bool)arg1;
- (void)setHasQosBackground:(bool)arg1;
- (void)setHasQosLegacy:(bool)arg1;
- (void)setHasQosUserInit:(bool)arg1;
- (void)setHasRunTime:(bool)arg1;
- (void)setHasRusageProfSuccess:(bool)arg1;
- (void)setHasServicedEnergy:(bool)arg1;
- (void)setHasSessionProfSuccess:(bool)arg1;
- (void)setHasStartBatteryTemperature:(bool)arg1;
- (void)setHasStartedInIdle:(bool)arg1;
- (void)setHasStartedOnBattery:(bool)arg1;
- (void)setHasVersion:(bool)arg1;
- (void)setHasWifiDown:(bool)arg1;
- (void)setHasWifiUp:(bool)arg1;
- (int)startBatteryTemperature;
- (id)startTime;
- (bool)startedInIdle;
- (bool)startedOnBattery;
- (int)version;
- (int)wifiDown;
- (int)wifiUp;
- (void)writeTo:(id)arg1;

@end
