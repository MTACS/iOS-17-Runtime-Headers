
@interface IDSStunCandidatePair : NSObject {
    IDSQUICConnectionIDs * _QUICConnectionIDs;
    NSDictionary * _URIToParticipantIDs;
    double  _allocateTime;
    long long  _allocateType;
    NSObject<OS_dispatch_source> * _allocbindFailoverTimer;
    NSString * _appName;
    bool  _callScreeningMode;
    unsigned long long  _capabilityFlags;
    unsigned short  _channelNumber;
    NSMutableDictionary * _connections;
    NSData * _decKey;
    NSUUID * _defaultLocalDeviceCBUUID;
    NSUUID * _defaultRemoteDeviceCBUUID;
    <IDSStunCandidatePairDelegate> * _delegate;
    BOOL  _delegatedLinkID;
    bool  _enableSKE;
    NSData * _encKey;
    NSString * _groupID;
    unsigned short  _hbCounter;
    double  _hbStartTime;
    bool  _hbStarted;
    NSData * _hbhDecKey;
    NSData * _hbhEncKey;
    NSData * _hbhSalt;
    NSData * _hmacKey;
    bool  _isAcceptedRelaySession;
    bool  _isActive;
    bool  _isConnectToQRIPv6Enabled;
    bool  _isDisconnecting;
    bool  _isInitiator;
    bool  _isNominated;
    bool  _isPseudoParticipant;
    bool  _isQUIC;
    bool  _isRealloc;
    double  _lastIncomingPacketTime;
    double  _lastOutgoingPacketTime;
    double  _lastStatsReport;
    BOOL  _linkID;
    IDSGFTMetricsLink * _linkMetrics;
    NSUUID * _linkUUID;
    IDSStunCandidate * _local;
    NSObject<OS_dispatch_source> * _noSessionStateTimer;
    <IDSGlobalLinkP2PNegotiatedKeysProtocol> * _p2pNegotiatedKeys;
    <IDSGlobalLinkP2PKeyNegotiationProtocol> * _p2pNegotiation;
    unsigned long long  _participantID;
    NSDictionary * _participantIDMap;
    bool  _pendingNoSessionStateAllocbind;
    NSMutableSet * _pendingProtoRequests;
    bool  _pendingRealloc;
    NSMutableArray * _pendingStunRequests;
    NSMutableDictionary * _pluginNameToStunReqID;
    NSObject<OS_dispatch_source> * _probingTimer;
    unsigned char  _protocolVersion;
    NSString * _pskH3Settings;
    NSString * _pskTransportParameters;
    NSObject<OS_dispatch_source> * _reallocTimer;
    bool  _recvConnected;
    bool  _recvConnectedAck;
    bool  _recvDisconnected;
    bool  _recvDisconnectedAck;
    bool  _recvSKEData;
    unsigned short  _relayLinkID;
    long long  _relayProviderType;
    IDSStunCandidate * _relayRemote;
    IDSQuickRelaySessionInfo * _relaySessionInfo;
    NSData * _relaySessionKey;
    NSData * _relaySessionToken;
    IDSStunCandidate * _remote;
    unsigned long long  _remoteParticipantID;
    unsigned short  _remoteRelayLinkID;
    NSMutableArray * _repliedStunRequests;
    NSMutableDictionary * _requestIDToQueryLinkIDs;
    NSMutableDictionary * _requestIDToSessionInfoReqType;
    NSMutableDictionary * _requestIDToStatsIDs;
    double  _selfAllocateStartTime;
    bool  _sentSKEData;
    bool  _serverIsDegraded;
    double  _serverLatency;
    id /* block */  _sessionConnectedTimeoutBlock;
    NSObject<OS_dispatch_source> * _sessionConnectedTimer;
    id /* block */  _sessionConvergenceBlock;
    NSObject<OS_dispatch_source> * _sessionConvergenceTimer;
    id /* block */  _sessionGoAwayBlock;
    NSObject<OS_dispatch_source> * _sessionGoAwayTimer;
    NSString * _sessionID;
    NSDictionary * _sessionInfoDict;
    unsigned int  _sessionInfoReqCount;
    NSData * _skeData;
    NSData * _softwareData;
    unsigned long long  _state;
    unsigned int  _stateFlags;
    unsigned char  _statsIntervalInSeconds;
    NSMutableDictionary * _stunSentBytesToRequestID;
    unsigned int  _testOptions;
    unsigned short  _testRequestedErrorCode;
    unsigned short  _testRequestedMessageType;
    double  _testStartTime;
    NSString * _testSubOperation;
    unsigned int  _totalPacketsReceivedOnLink;
    unsigned int  _totalPacketsSentOnLink;
    double  _triggeredCheckTime;
}

@property (nonatomic, retain) IDSQUICConnectionIDs *QUICConnectionIDs;
@property (nonatomic, readonly) NSDictionary *URIToParticipantIDs;
@property (nonatomic) double allocateTime;
@property (nonatomic) long long allocateType;
@property (retain) NSObject<OS_dispatch_source> *allocbindFailoverTimer;
@property (readonly) NSString *appName;
@property (nonatomic, readonly) unsigned long long capabilityFlags;
@property (nonatomic) unsigned short channelNumber;
@property (readonly) NSMutableDictionary *connections;
@property (readonly) NSData *decKey;
@property (copy) NSUUID *defaultLocalDeviceCBUUID;
@property (copy) NSUUID *defaultRemoteDeviceCBUUID;
@property (nonatomic, readonly) BOOL delegatedLinkID;
@property (nonatomic, readonly) bool enableSKE;
@property (readonly) NSData *encKey;
@property (copy) NSString *groupID;
@property (nonatomic, readonly) unsigned short hbCounter;
@property (nonatomic) double hbStartTime;
@property (nonatomic) bool hbStarted;
@property (copy) NSData *hbhDecKey;
@property (copy) NSData *hbhEncKey;
@property (readonly) NSData *hbhSalt;
@property (readonly) NSData *hmacKey;
@property (nonatomic) bool isAcceptedRelaySession;
@property (nonatomic) bool isActive;
@property (nonatomic) bool isConnectToQRIPv6Enabled;
@property (nonatomic) bool isDisconnecting;
@property (nonatomic, readonly) bool isInitiator;
@property (nonatomic) bool isNominated;
@property (nonatomic) bool isQUIC;
@property (nonatomic) bool isRealloc;
@property (nonatomic) double lastIncomingPacketTime;
@property (nonatomic) double lastOutgoingPacketTime;
@property (nonatomic) double lastStatsReport;
@property (nonatomic) BOOL linkID;
@property (nonatomic, retain) IDSGFTMetricsLink *linkMetrics;
@property (copy) NSUUID *linkUUID;
@property (readonly) IDSStunCandidate *local;
@property (nonatomic, retain) <IDSGlobalLinkP2PNegotiatedKeysProtocol> *p2pNegotiatedKeys;
@property (nonatomic, retain) <IDSGlobalLinkP2PKeyNegotiationProtocol> *p2pNegotiation;
@property (nonatomic) unsigned long long participantID;
@property (readonly) NSDictionary *participantIDMap;
@property (nonatomic) bool pendingNoSessionStateAllocbind;
@property (nonatomic) bool pendingRealloc;
@property (readonly) NSMutableArray *pendingStunRequests;
@property (nonatomic, readonly) unsigned char protocolVersion;
@property (readonly) NSString *pskH3Settings;
@property (readonly) NSString *pskTransportParameters;
@property (nonatomic) bool recvConnected;
@property (nonatomic) bool recvConnectedAck;
@property (nonatomic) bool recvDisconnected;
@property (nonatomic) bool recvDisconnectedAck;
@property (nonatomic) bool recvSKEData;
@property (nonatomic, readonly) unsigned short relayLinkID;
@property (nonatomic) long long relayProviderType;
@property (retain) IDSStunCandidate *relayRemote;
@property (readonly) IDSQuickRelaySessionInfo *relaySessionInfo;
@property (readonly) NSData *relaySessionKey;
@property (readonly) NSData *relaySessionToken;
@property (readonly) IDSStunCandidate *remote;
@property (nonatomic) unsigned long long remoteParticipantID;
@property (nonatomic, readonly) unsigned short remoteRelayLinkID;
@property (readonly) NSMutableArray *repliedStunRequests;
@property (nonatomic) double selfAllocateStartTime;
@property (nonatomic) bool sentSKEData;
@property (nonatomic, readonly) bool serverIsDegraded;
@property (nonatomic) double serverLatency;
@property (readonly) NSString *sessionID;
@property (readonly) NSDictionary *sessionInfoDict;
@property (nonatomic, readonly) unsigned int sessionInfoReqCount;
@property (copy) NSData *skeData;
@property (readonly) NSData *softwareData;
@property (nonatomic) unsigned long long state;
@property (nonatomic, readonly) unsigned int stateFlags;
@property (nonatomic, readonly) unsigned char statsIntervalInSeconds;
@property (nonatomic, readonly) unsigned int testOptions;
@property (nonatomic, readonly) unsigned short testRequestedErrorCode;
@property (nonatomic, readonly) double testStartTime;
@property (readonly) NSString *testSubOperation;
@property (nonatomic) unsigned int totalPacketsReceivedOnLink;
@property (nonatomic) unsigned int totalPacketsSentOnLink;
@property (nonatomic) double triggeredCheckTime;

+ (id)candidatePairWithLocalCandidate:(id)arg1 remoteCandidate:(id)arg2 sessionID:(id)arg3 delegate:(id)arg4;

- (void).cxx_destruct;
- (id)QUICConnectionIDs;
- (id)URIToParticipantIDs;
- (void)_addParticipantIDs:(id)arg1 toParticipantIDMap:(id)arg2;
- (bool)_didLocalExternalAddressChange:(const struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg1;
- (void)_handleLinkProbingTimer;
- (void)_handleNoSessionStateTimer;
- (void)_handleReallocTimer;
- (void)_handleSessionConnectedTimer;
- (void)_handleSessionConvergenceTimer;
- (void)_handleSessionGoAwayTimer;
- (void)_notifyQREventAdded:(id)arg1;
- (void)_notifySessionStreamInfoReceived:(id)arg1 withParticipants:(id)arg2 lightweightParticipants:(id)arg3 sentBytes:(unsigned long long)arg4 receivedBytes:(unsigned long long)arg5 offlineRequest:(bool)arg6 streamInfoRequest:(bool)arg7 status:(unsigned int)arg8 commandFlag:(unsigned int)arg9;
- (bool)_optionallyCheckEncMarker:(id)arg1;
- (id)_pluginNameForProtoRequest:(unsigned long long)arg1;
- (id)_pluginNameForStunRequest:(id)arg1;
- (void)_removeProtoPluginRegistrationRequest:(unsigned long long)arg1;
- (void)_removeStunPluginRegistrationRequest:(id)arg1;
- (void)_savePluginNameForProtoRequest:(unsigned long long)arg1 pluginName:(id)arg2;
- (void)_savePluginNameForRequest:(id)arg1 pluginName:(id)arg2;
- (void)_startNoSessionStateTimer;
- (void)_startReallocTimer;
- (void)_stopNoSessionStateTimer;
- (void)_stopReallocTimer;
- (void)addProtoRequest:(unsigned long long)arg1;
- (void)addStunRequest:(id)arg1;
- (double)allocateTime;
- (long long)allocateType;
- (id)allocbindFailoverTimer;
- (id)appName;
- (id)candidatePairToken;
- (unsigned long long)capabilityFlags;
- (unsigned short)channelNumber;
- (id)connections;
- (unsigned long long)createAliasForParticipantID:(unsigned long long)arg1 salt:(id)arg2;
- (void)dealloc;
- (id)decKey;
- (id)defaultLocalDeviceCBUUID;
- (id)defaultRemoteDeviceCBUUID;
- (BOOL)delegatedLinkID;
- (void)deriveAES128CTRKeys:(id)arg1;
- (id)description;
- (bool)enableSKE;
- (id)encKey;
- (unsigned long long)getParticipantIDHash:(id)arg1;
- (unsigned long long)getStunSentBytes:(id)arg1;
- (id)groupID;
- (bool)hasNoSessionStateTestOptions;
- (bool)hasValidCapabilityFlags;
- (unsigned short)hbCounter;
- (double)hbStartTime;
- (bool)hbStarted;
- (id)hbhDecKey;
- (id)hbhEncKey;
- (id)hbhSalt;
- (id)hmacKey;
- (void)initParticipantIDMap:(id)arg1;
- (id)initWithLocalCandidate:(id)arg1 remoteCandidate:(id)arg2 sessionID:(id)arg3 delegate:(id)arg4;
- (void)invalidate;
- (bool)isAcceptedRelaySession;
- (bool)isActive;
- (bool)isActualRelayStunCandidatePair;
- (bool)isConnectToQRIPv6Enabled;
- (bool)isDisconnecting;
- (bool)isEqual:(id)arg1;
- (bool)isInitiator;
- (bool)isNominated;
- (bool)isQUIC;
- (bool)isRealloc;
- (bool)isRelayStunCandidatePair;
- (bool)isSelfQRSession;
- (bool)isSharedQRSession;
- (bool)isValidRelayStunCandidatePair;
- (bool)isVirtualRelayStunCandidatePair;
- (double)lastIncomingPacketTime;
- (double)lastOutgoingPacketTime;
- (double)lastStatsReport;
- (BOOL)linkID;
- (id)linkMetrics;
- (id)linkUUID;
- (id)local;
- (unsigned int)nextSessionInfoReqID;
- (id)p2pNegotiatedKeys;
- (id)p2pNegotiation;
- (unsigned long long)participantID;
- (unsigned long long)participantIDForAlias:(unsigned long long)arg1 salt:(id)arg2;
- (id)participantIDMap;
- (bool)pendingNoSessionStateAllocbind;
- (bool)pendingRealloc;
- (id)pendingStunRequests;
- (bool)processDataMessageErrorIndication:(id)arg1;
- (bool)processInfoIndication:(id)arg1 arrivalTime:(double)arg2;
- (bool)processInfoResponse:(id)arg1 packetBuffer:(struct { char *x1; unsigned long long x2; long long x3; long long x4; unsigned int x5; bool x6; bool x7; bool x8; bool x9; bool x10; bool x11; bool x12; bool x13; bool x14; bool x15; bool x16; unsigned int x17; struct sockaddr_storage { unsigned char x_18_1_1; unsigned char x_18_1_2; BOOL x_18_1_3[6]; long long x_18_1_4; BOOL x_18_1_5[112]; } x18; struct sockaddr_storage { unsigned char x_19_1_1; unsigned char x_19_1_2; BOOL x_19_1_3[6]; long long x_19_1_4; BOOL x_19_1_5[112]; } x19; struct sockaddr_storage { unsigned char x_20_1_1; unsigned char x_20_1_2; BOOL x_20_1_3[6]; long long x_20_1_4; BOOL x_20_1_5[112]; } x20; unsigned short x21; unsigned char x22; int x23; struct { char *x_24_1_1; unsigned short x_24_1_2; int x_24_1_3; unsigned short x_24_1_4[12]; unsigned long long x_24_1_5; unsigned char x_24_1_6; unsigned short x_24_1_7; unsigned char x_24_1_8; bool x_24_1_9; bool x_24_1_10; unsigned short x_24_1_11; struct { unsigned short x_12_2_1; unsigned short x_12_2_2; unsigned short x_12_2_3; unsigned short x_12_2_4; unsigned short x_12_2_5; } x_24_1_12; bool x_24_1_13; bool x_24_1_14; int x_24_1_15; unsigned short x_24_1_16[4]; unsigned char x_24_1_17; bool x_24_1_18; bool x_24_1_19; bool x_24_1_20; unsigned int x_24_1_21; } x24[8]; }*)arg2 headerOverhead:(unsigned long long)arg3;
- (bool)processParticipantUpdateIndication:(id)arg1 arrivalTime:(double)arg2;
- (bool)processParticipantUpdateResponse:(id)arg1;
- (bool)processPluginControlIndication:(id)arg1;
- (bool)processPluginRegistrationResponse:(id)arg1;
- (bool)processQUICErrorIndication:(id)arg1;
- (bool)processQUICErrorResponse:(id)arg1 packetBuffer:(struct { char *x1; unsigned long long x2; long long x3; long long x4; unsigned int x5; bool x6; bool x7; bool x8; bool x9; bool x10; bool x11; bool x12; bool x13; bool x14; bool x15; bool x16; unsigned int x17; struct sockaddr_storage { unsigned char x_18_1_1; unsigned char x_18_1_2; BOOL x_18_1_3[6]; long long x_18_1_4; BOOL x_18_1_5[112]; } x18; struct sockaddr_storage { unsigned char x_19_1_1; unsigned char x_19_1_2; BOOL x_19_1_3[6]; long long x_19_1_4; BOOL x_19_1_5[112]; } x19; struct sockaddr_storage { unsigned char x_20_1_1; unsigned char x_20_1_2; BOOL x_20_1_3[6]; long long x_20_1_4; BOOL x_20_1_5[112]; } x20; unsigned short x21; unsigned char x22; int x23; struct { char *x_24_1_1; unsigned short x_24_1_2; int x_24_1_3; unsigned short x_24_1_4[12]; unsigned long long x_24_1_5; unsigned char x_24_1_6; unsigned short x_24_1_7; unsigned char x_24_1_8; bool x_24_1_9; bool x_24_1_10; unsigned short x_24_1_11; struct { unsigned short x_12_2_1; unsigned short x_12_2_2; unsigned short x_12_2_3; unsigned short x_12_2_4; unsigned short x_12_2_5; } x_24_1_12; bool x_24_1_13; bool x_24_1_14; int x_24_1_15; unsigned short x_24_1_16[4]; unsigned char x_24_1_17; bool x_24_1_18; bool x_24_1_19; bool x_24_1_20; unsigned int x_24_1_21; } x24[8]; }*)arg2 startTime:(double)arg3 headerOverhead:(unsigned long long)arg4;
- (bool)processQUICGetMaterialResponse:(id)arg1;
- (bool)processQUICInfoResponse:(id)arg1 receivedBytes:(unsigned long long)arg2;
- (bool)processQUICParticipantUpdateIndication:(id)arg1;
- (bool)processQUICParticipantUpdateResponse:(id)arg1;
- (bool)processQUICPluginControlIndication:(id)arg1;
- (bool)processQUICPluginRegistrationResponse:(id)arg1;
- (bool)processQUICPutMaterialIndication:(id)arg1;
- (bool)processQUICPutMaterialResponse:(id)arg1;
- (bool)processQUICSessionInfoIndication:(id)arg1 arrivalTime:(double)arg2 isLightweightParticipant:(bool)arg3;
- (bool)processQUICSessionInfoResponse:(id)arg1 receivedBytes:(unsigned long long)arg2 isLightweightParticipant:(bool)arg3;
- (bool)processQUICStatsResponse:(id)arg1 arrivalTime:(double)arg2;
- (bool)processQUICTestResponse:(id)arg1 arrivalTime:(double)arg2;
- (bool)processSessionInfoIndication:(id)arg1 arrivalTime:(double)arg2 isLightweightParticipant:(bool)arg3;
- (void)processSessionInfoRequestTimeout:(id)arg1;
- (bool)processSessionInfoResponse:(id)arg1 packetBuffer:(struct { char *x1; unsigned long long x2; long long x3; long long x4; unsigned int x5; bool x6; bool x7; bool x8; bool x9; bool x10; bool x11; bool x12; bool x13; bool x14; bool x15; bool x16; unsigned int x17; struct sockaddr_storage { unsigned char x_18_1_1; unsigned char x_18_1_2; BOOL x_18_1_3[6]; long long x_18_1_4; BOOL x_18_1_5[112]; } x18; struct sockaddr_storage { unsigned char x_19_1_1; unsigned char x_19_1_2; BOOL x_19_1_3[6]; long long x_19_1_4; BOOL x_19_1_5[112]; } x19; struct sockaddr_storage { unsigned char x_20_1_1; unsigned char x_20_1_2; BOOL x_20_1_3[6]; long long x_20_1_4; BOOL x_20_1_5[112]; } x20; unsigned short x21; unsigned char x22; int x23; struct { char *x_24_1_1; unsigned short x_24_1_2; int x_24_1_3; unsigned short x_24_1_4[12]; unsigned long long x_24_1_5; unsigned char x_24_1_6; unsigned short x_24_1_7; unsigned char x_24_1_8; bool x_24_1_9; bool x_24_1_10; unsigned short x_24_1_11; struct { unsigned short x_12_2_1; unsigned short x_12_2_2; unsigned short x_12_2_3; unsigned short x_12_2_4; unsigned short x_12_2_5; } x_24_1_12; bool x_24_1_13; bool x_24_1_14; int x_24_1_15; unsigned short x_24_1_16[4]; unsigned char x_24_1_17; bool x_24_1_18; bool x_24_1_19; bool x_24_1_20; unsigned int x_24_1_21; } x24[8]; }*)arg2 headerOverhead:(unsigned long long)arg3 isLightweightParticipant:(bool)arg4;
- (bool)processStatsResponse:(id)arg1 arrivalTime:(double)arg2;
- (bool)processStunErrorResponse:(id)arg1 packetBuffer:(struct { char *x1; unsigned long long x2; long long x3; long long x4; unsigned int x5; bool x6; bool x7; bool x8; bool x9; bool x10; bool x11; bool x12; bool x13; bool x14; bool x15; bool x16; unsigned int x17; struct sockaddr_storage { unsigned char x_18_1_1; unsigned char x_18_1_2; BOOL x_18_1_3[6]; long long x_18_1_4; BOOL x_18_1_5[112]; } x18; struct sockaddr_storage { unsigned char x_19_1_1; unsigned char x_19_1_2; BOOL x_19_1_3[6]; long long x_19_1_4; BOOL x_19_1_5[112]; } x19; struct sockaddr_storage { unsigned char x_20_1_1; unsigned char x_20_1_2; BOOL x_20_1_3[6]; long long x_20_1_4; BOOL x_20_1_5[112]; } x20; unsigned short x21; unsigned char x22; int x23; struct { char *x_24_1_1; unsigned short x_24_1_2; int x_24_1_3; unsigned short x_24_1_4[12]; unsigned long long x_24_1_5; unsigned char x_24_1_6; unsigned short x_24_1_7; unsigned char x_24_1_8; bool x_24_1_9; bool x_24_1_10; unsigned short x_24_1_11; struct { unsigned short x_12_2_1; unsigned short x_12_2_2; unsigned short x_12_2_3; unsigned short x_12_2_4; unsigned short x_12_2_5; } x_24_1_12; bool x_24_1_13; bool x_24_1_14; int x_24_1_15; unsigned short x_24_1_16[4]; unsigned char x_24_1_17; bool x_24_1_18; bool x_24_1_19; bool x_24_1_20; unsigned int x_24_1_21; } x24[8]; }*)arg2 headerOverhead:(unsigned long long)arg3;
- (bool)processTestResponse:(id)arg1 arrivalTime:(double)arg2;
- (unsigned char)protocolVersion;
- (id)pskH3Settings;
- (id)pskTransportParameters;
- (bool)recvConnected;
- (bool)recvConnectedAck;
- (bool)recvDisconnected;
- (bool)recvDisconnectedAck;
- (bool)recvSKEData;
- (unsigned short)relayLinkID;
- (long long)relayProviderType;
- (id)relayRemote;
- (id)relaySessionInfo;
- (id)relaySessionKey;
- (id)relaySessionToken;
- (id)remote;
- (unsigned long long)remoteParticipantID;
- (unsigned short)remoteRelayLinkID;
- (void)removeFromParticipantIDMap:(id)arg1;
- (bool)removeProtoRequest:(unsigned long long)arg1;
- (void)removeStunRequest:(id)arg1;
- (id)repliedStunRequests;
- (double)selfAllocateStartTime;
- (void)sendInfoRequest:(id)arg1;
- (void)sendParticipantUpdateRequest:(id)arg1 options:(id)arg2;
- (void)sendQRPluginRegistrationRequest:(id)arg1 options:(id)arg2;
- (bool)sendQUICGetMaterialRequest:(id)arg1;
- (void)sendQUICInfoRequest;
- (void)sendQUICParticipantUpdateRequestWithOptions:(id)arg1;
- (void)sendQUICPluginRegistrationRequestWithOptions:(id)arg1;
- (bool)sendQUICPutMaterialRequest:(id)arg1;
- (void)sendQUICSessionInfoRequestWithOptions:(id)arg1;
- (void)sendQUICStatsRequestWithOptions:(id)arg1;
- (void)sendQUICTestRequest;
- (void)sendSessionInfoRequest:(id)arg1 options:(id)arg2;
- (void)sendStatsRequest:(id)arg1 options:(id)arg2;
- (void)sendTestRequest:(id)arg1;
- (bool)sentSKEData;
- (bool)serverIsDegraded;
- (double)serverLatency;
- (id)sessionID;
- (id)sessionInfoDict;
- (unsigned int)sessionInfoReqCount;
- (void)setAllocateTime:(double)arg1;
- (void)setAllocateType:(long long)arg1;
- (void)setAllocbindFailoverTimer:(id)arg1;
- (void)setChannelNumber:(unsigned short)arg1;
- (void)setChannelSettings:(unsigned int)arg1;
- (void)setDefaultLocalDeviceCBUUID:(id)arg1;
- (void)setDefaultRemoteDeviceCBUUID:(id)arg1;
- (void)setDelegatedLinkID:(BOOL)arg1;
- (void)setGroupID:(id)arg1;
- (void)setHbStartTime:(double)arg1;
- (void)setHbStarted:(bool)arg1;
- (void)setHbhDecKey:(id)arg1;
- (void)setHbhEncKey:(id)arg1;
- (void)setIsAcceptedRelaySession:(bool)arg1;
- (void)setIsActive:(bool)arg1;
- (void)setIsConnectToQRIPv6Enabled:(bool)arg1;
- (void)setIsDisconnecting:(bool)arg1;
- (void)setIsNominated:(bool)arg1;
- (void)setIsQUIC:(bool)arg1;
- (void)setIsRealloc:(bool)arg1;
- (void)setLastIncomingPacketTime:(double)arg1;
- (void)setLastOutgoingPacketTime:(double)arg1;
- (void)setLastStatsReport:(double)arg1;
- (void)setLinkID:(BOOL)arg1;
- (void)setLinkMetrics:(id)arg1;
- (void)setLinkUUID:(id)arg1;
- (void)setLinkUUIDWithRelayLinkIDs;
- (void)setP2pNegotiatedKeys:(id)arg1;
- (void)setP2pNegotiation:(id)arg1;
- (void)setParticipantID:(unsigned long long)arg1;
- (void)setPendingNoSessionState:(bool)arg1;
- (void)setPendingNoSessionStateAllocbind:(bool)arg1;
- (void)setPendingRealloc:(bool)arg1;
- (void)setPropertiesWithReallocCandidatePair:(id)arg1 reallocToken:(id)arg2;
- (void)setPropertiesWithRelaySessionInfo:(id)arg1 sessionInfoDict:(id)arg2 enableSKE:(bool)arg3;
- (void)setProtocolVersion:(unsigned char)arg1 isInitiator:(bool)arg2 enableSKE:(bool)arg3;
- (void)setQUICConnectionIDs:(id)arg1;
- (void)setRecvConnected:(bool)arg1;
- (void)setRecvConnectedAck:(bool)arg1;
- (void)setRecvDisconnected:(bool)arg1;
- (void)setRecvDisconnectedAck:(bool)arg1;
- (void)setRecvSKEData:(bool)arg1;
- (void)setRelayLinkID:(unsigned short)arg1;
- (void)setRelayProviderType:(long long)arg1;
- (void)setRelayRemote:(id)arg1;
- (void)setRemoteParticipantID:(unsigned long long)arg1;
- (void)setRemoteRelayLinkID:(unsigned short)arg1;
- (void)setSelfAllocateStartTime:(double)arg1;
- (void)setSentSKEData:(bool)arg1;
- (void)setServerIsDegraded:(bool)arg1;
- (void)setServerLatency:(double)arg1;
- (void)setSkeData:(id)arg1;
- (void)setState:(unsigned long long)arg1;
- (void)setTestOptionsFromUserDefaults;
- (void)setTotalPacketsReceivedOnLink:(unsigned int)arg1;
- (void)setTotalPacketsSentOnLink:(unsigned int)arg1;
- (void)setTriggeredCheckTime:(double)arg1;
- (bool)shouldProcessStunResponse:(id)arg1;
- (bool)shouldRexmitStunRequest:(id)arg1;
- (id)skeData;
- (id)softwareData;
- (void)startLinkProbingTimer:(unsigned int)arg1;
- (void)startSessionConnectedTimer:(int)arg1 block:(id /* block */)arg2;
- (void)startSessionConvergenceTimer:(int)arg1 block:(id /* block */)arg2;
- (void)startSessionGoAwayTimer:(int)arg1 block:(id /* block */)arg2;
- (unsigned long long)state;
- (unsigned int)stateFlags;
- (unsigned char)statsIntervalInSeconds;
- (void)stopLinkProbingTimer;
- (void)stopSessionConnectedTimer;
- (void)stopSessionConvergenceTimer;
- (void)stopSessionGoAwayTimer;
- (void)synthesizeNat64WithPrefix;
- (unsigned int)testOptions;
- (unsigned short)testRequestedErrorCode;
- (double)testStartTime;
- (id)testSubOperation;
- (unsigned int)totalPacketsReceivedOnLink;
- (unsigned int)totalPacketsSentOnLink;
- (double)triggeredCheckTime;
- (void)updateParticipantIDMap:(id)arg1;
- (void)updateStunSentBytes:(long long)arg1 requestID:(id)arg2;
- (void)updateURIToParticipantIDMapping:(id)arg1;

@end
