
@interface IDSGlobalLink : NSObject <IDSLink, IDSLinkDelegate, IDSServerMaterialExchangeDelegate, IDSStunCandidatePairDelegate> {
    bool  _H2FallbackEnabled;
    bool  _QRIPv6Enabled;
    NSDictionary * _QRServerDataBlob;
    bool  _QUICForQREnabled;
    unsigned int  _acceptDelayU32;
    NSString * _acceptedRelaySessionID;
    NSMutableArray * _activeProbingLinkIDs;
    NSObject<OS_dispatch_source> * _activityTimer;
    NSMutableArray * _allocateTimeReportBlocks;
    NSDictionary * _allocationsToTransportScoreCards;
    double  _allocbindEndTime;
    double  _allocbindStartTime;
    bool  _allowConcurrentQRSetup;
    bool  _allowOnlyOneQR;
    bool  _allowP2P;
    bool  _allowTLEOverCellular;
    bool  _allowTLEOverVRLinks;
    <IDSLinkDelegate> * _alternateDelegate;
    NSData * _avcDataBlob;
    unsigned short  _basebandPacketChannelNumber;
    BOOL  _basebandPacketLinkID;
    double  _calleeAcceptTime;
    NSString * _cbuuid;
    unsigned short  _cellularNWPathFlags;
    NSObject<OS_nw_path_evaluator> * _cellularPathEvaluator;
    struct IDSSimpleUInt16List { 
        unsigned long long listSize; 
        unsigned long long itemCount; 
        unsigned short *items; 
    }  _channelNumberList;
    NSMutableDictionary * _channelToCandidatePairs;
    long long  _clientType;
    unsigned char  _clientUUID;
    unsigned long long  _clientUniquePID;
    id /* block */  _connectReadyHandler;
    NSMutableArray * _connectedLinkIDs;
    NSMutableDictionary * _connectingCandidatePairSessionInfo;
    NSData * _controlMessageKey;
    bool  _conversationShouldUseP2PTLEAccordingToServer;
    long long  _delayFirstConnectionData;
    double  _delayQUICDisconnectionAfterInfo;
    bool  _delaySessionConnected;
    NSMutableArray * _delayedCellInterfaces;
    bool  _delayedConnData;
    <IDSLinkDelegate> * _delegate;
    NSString * _deviceUniqueID;
    bool  _disableDirectDatapath;
    bool  _disablePureLinkFeature;
    bool  _disallowCellular;
    bool  _disallowWiFi;
    id /* block */  _disconnectCompletionHandler;
    NSObject<OS_dispatch_source> * _disconnectTimer;
    bool  _enableSKE;
    double  _firstClientPacketTime;
    double  _firstDataReceivedTime;
    bool  _forceP2PTLE;
    bool  _forceTLE;
    NSString * _groupID;
    bool  _hasPendingAllocation;
    bool  _hasPendingSelfAllocation;
    bool  _hasSetServerDesiredMaterials;
    unsigned long long  _headerOverhead;
    NSString * _idsSessionID;
    NSMutableArray * _interfaceAddressArray;
    double  _inviteRecvTime;
    double  _inviteSentTime;
    bool  _isAutoDisconnectSupportedForGFTService;
    bool  _isInitiator;
    bool  _isLightweightParticipant;
    bool  _isReliableUnicastSession;
    bool  _isSecondOrLaterParticipant;
    bool  _isSessionAcceptedWithNoCandidatePair;
    bool  _isTLEEnabled;
    bool  _isUPlusOneSession;
    bool  _islocalCellAttributeInexpensive;
    double  _linkConnectTime;
    unsigned short  _linkIDCounter;
    BOOL  _linkIDForPlugin;
    NSMutableDictionary * _linkIDToCandidatePairs;
    NSMutableDictionary * _linkIDToHBCounter;
    NSMutableDictionary * _linkIDToReorderedPackets;
    NSMutableDictionary * _linkIDToRequestTimeStampAndRTT;
    NSMutableDictionary * _linkIDToStatsData;
    NSMutableArray * _localCandidateList;
    int  _localConnDataCounter;
    unsigned int  _localRelayInterfaceCounter;
    NSMutableDictionary * _localRemoteRelayLinkIDToVirtualCandidatePairs;
    int  _maxLinkID;
    IDSGFTMetricsCollector * _metricsCollector;
    IDSStunCandidatePair * _migratingCandidatePair;
    struct IDSNAT64PrefixCache_ { } * _nat64PrefixCache;
    double  _natMappingTimeout;
    unsigned long long  _nextP2PNegotiationAttempt;
    int  _nominateCount;
    NSMutableArray * _nonAcceptedQRSessions;
    IDSNWLink * _nwLink;
    <IDSGlobalLinkP2PKeyNegotiatorProvider> * _p2pNegotiatorProvider;
    id /* block */  _pendingCommandConnectionDataBlock;
    id /* block */  _pendingCommandRelayInterfaceInfoBlock;
    NSMutableArray * _pluginControlDisconnectRecentTransactionIDs;
    NSMutableDictionary * _pluginNameToPluginOptionsDict;
    NSMutableDictionary * _pluginParticipantIDs;
    int  _portRange;
    bool  _preferCellularForCallSetup;
    unsigned long long  _previousBytesReceived;
    unsigned long long  _previousBytesSent;
    unsigned long long  _previousPacketsReceived;
    unsigned long long  _previousPacketsSent;
    double  _previousReportTime;
    unsigned int  _probingTimeout;
    NSDictionary * _qrChannelExperiments;
    NSDictionary * _qrExperiments;
    NSDictionary * _qrSessionExperiments;
    IDSGlobalLinkBlocks * _qraBlocks;
    struct IDSSimpleUInt16List { 
        unsigned long long listSize; 
        unsigned long long itemCount; 
        unsigned short *items; 
    }  _reallocChannelList;
    NSMutableDictionary * _reallocNewCandidatePairToOldCandidatePair;
    bool  _receivedAllocbindResponse;
    bool  _receivedRemoteDeviceVersion;
    bool  _recvRemoteSKEData;
    bool  _reduceCellularUsage;
    bool  _reduceRelayLinkCreation;
    NSMutableArray * _remoteCandidateList;
    long long  _remoteCapabilityFlag;
    int  _remoteConnDataCounter;
    unsigned int  _remoteDeviceVersion;
    short  _remoteGlobalLinkVersion;
    double  _remoteJoinedUPlusOneTime;
    unsigned int  _remoteRelayInterfaceCounter;
    bool  _reportClientPacketTime;
    bool  _reportDataReceivedTime;
    NSMutableDictionary * _retryCountPerLinkType;
    NSMutableArray * _selfAllocateRequestIDs;
    struct tagIDSQRSendInfoList { } * _sendInfoList;
    IDSServerMaterialExchangeController * _serverMaterialExchangeController;
    bool  _serverTestOptionTLEDisabled;
    bool  _sharedSessionHasJoined;
    bool  _sharedSessionJoined;
    bool  _shouldAcceptIncomingMKMOverQR;
    bool  _shouldEnable0RTT;
    bool  _shouldFallbackToTCPFirst;
    bool  _shouldOverrideServerTestOptionTLEDisabled;
    bool  _shouldProcessBasebandNotification;
    bool  _shouldReportAcceptDelay;
    bool  _shouldUseTLEAccordingToServer;
    NSData * _skeData;
    double  _skeStartTime;
    bool  _skeToRemoteComplete;
    unsigned short  _startPort;
    NSMutableDictionary * _startTimeToStunReqID;
    unsigned long long  _state;
    bool  _supportChannelData;
    NSMutableArray * _targetedAllocations;
    IDSTCPLink * _tcpLink;
    IDSTCPLink * _tcpSSLLink;
    NSDate * _timeBase;
    NSMutableDictionary * _tokenToCandidatePairs;
    NSMutableDictionary * _tokenToReallocBlocks;
    NSMutableDictionary * _tokenToStunCheckPairs;
    NSMutableDictionary * _tokenToStunReqID;
    unsigned long long  _totalBytesReceived;
    unsigned long long  _totalBytesSent;
    unsigned long long  _totalPacketsReceived;
    unsigned long long  _totalPacketsSent;
    NSMutableDictionary * _transactionIDToRequestMetadata;
    NSMutableArray * _transportScoreCards;
    IDSUDPLink * _udpLink;
    IDSUDPLink * _udpLinkv6;
    NSMutableDictionary * _unallocbindRequestToReason;
    NSMutableArray * _unusedLinkIDs;
    bool  _uplinkNackDisabled;
    bool  _useSecureControlMessage;
    NSMutableSet * _usedLocalConnectionIDs;
    unsigned short  _wifiNWPathFlags;
    NSObject<OS_nw_path_evaluator> * _wifiPathEvaluator;
}

@property <IDSLinkDelegate> *alternateDelegate;
@property (retain) NSString *cbuuid;
@property (readonly, copy) NSString *debugDescription;
@property <IDSLinkDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (retain) NSString *deviceUniqueID;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned long long headerOverhead;
@property (getter=linkTypeString, readonly) NSString *linkTypeString;
@property (readonly) unsigned long long state;
@property (readonly) Class superclass;

+ (Class)getGLClassWithOptions:(id)arg1;

- (void).cxx_destruct;
- (bool)_IsExtIPDiscoveryNeeded:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg1 candidatePairList:(id)arg2;
- (bool)_addCandidate:(id)arg1 isRemoteCandidate:(bool)arg2;
- (void)_addQRAAWDBlock:(id)arg1 allocateRequestTime:(double)arg2 inferredExternalRAT:(unsigned int)arg3 stunTransport:(long long)arg4 relayProviderType:(long long)arg5 idsSessionID:(id)arg6 reportingDataBlob:(id)arg7 isInitiator:(bool)arg8;
- (id)_addSocketAndInterfaceAddress:(unsigned long long)arg1 wantsWiFi:(bool)arg2 wantsCellular:(bool)arg3;
- (id)_addSocketAndInterfaceAddressWithNWLink:(bool)arg1 wantsWiFi:(bool)arg2 wantsCellular:(bool)arg3;
- (void)_addStunCheckPair:(id)arg1 isRemoteCandidate:(bool)arg2;
- (void)_addStunCheckPair:(id)arg1 isRemoteCandidate:(bool)arg2 excludeLocalAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg3;
- (void)_attemptP2PNegotiationForSTUNMessage:(id)arg1 candidatePair:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)_buildQrExperiments;
- (void)_callDisconnectCompletionHandler:(id)arg1;
- (void)_connectNWLink:(id)arg1 disconnectAfterUse:(bool)arg2 connectedHandler:(id /* block */)arg3;
- (void)_connectNWTCPLink:(id)arg1 disconnectAfterUse:(bool)arg2 connectedHandler:(id /* block */)arg3;
- (void)_connectWithSessionInfo:(id)arg1 interfaceAddress:(id)arg2 joinSession:(bool)arg3 allocbindFailover:(bool)arg4 completionHandler:(id /* block */)arg5 withLocalInterfacePreference:(int)arg6;
- (id)_convergeSharedSessions:(id)arg1;
- (id)_createCommandData:(long long)arg1 options:(id)arg2 candidatePair:(id)arg3;
- (id)_createDataBlobMaterialProto;
- (id)_createInterfaceAddressArray:(unsigned long long)arg1 wantsWiFi:(bool)arg2 wantsCellular:(bool)arg3;
- (id)_createInterfaceAddressArrayWithNWLink:(bool)arg1 wantsWiFi:(bool)arg2 wantsCellular:(bool)arg3;
- (void)_delayProcessingCellularInterfaces:(id)arg1;
- (void)_destroyVirtualRelayLinksForCandidatePair:(id)arg1;
- (void)_didReceiveRequestToPurgeRegistration;
- (void)_discardAllCandidatePairs;
- (void)_discardCandidatePairsWithOption:(bool)arg1;
- (void)_discardKeyMaterialMessage:(long long)arg1;
- (void)_discardNonAcceptedCandidatePairs;
- (void)_discardSelfAllocateCandidatePairs;
- (void)_disconnectPluginConnectionsForParticipantID:(unsigned long long)arg1 andPurgeRegistration:(bool)arg2;
- (void)_enableE2E;
- (id)_findCandidatePairWithRelaySessionID:(id)arg1;
- (bool)_findTriedCandidatePairForSession:(id)arg1 wantOnlyCell:(bool)arg2 wantOnlyNonCell:(bool)arg3;
- (id)_findVirtualCandidatePair:(id)arg1;
- (void)_generateTransportScoreCard;
- (id)_getAllocbindReportingDataBlob:(id)arg1;
- (void)_getAndProcessDatablobsFromReceivedMaterials:(id)arg1;
- (id)_getCandidatePairsWithSessionID:(id)arg1 inState:(unsigned long long)arg2;
- (int)_getExpensiveLinkFlags:(bool)arg1 candidatePair:(id)arg2;
- (unsigned int)_getExternalIPAddressRAT:(id)arg1;
- (id)_getLink:(int)arg1 stunTransport:(long long)arg2;
- (id)_getLocalAttribute:(id)arg1;
- (void)_getNAT64PrefixForInterface:(int)arg1 interfaceName:(id)arg2 completionBlock:(id /* block */)arg3;
- (unsigned char)_getNewLinkType:(id)arg1 remoteInterface:(int*)arg2;
- (void)_getP2PNegotiationForCandidatePair:(id)arg1 completionBlock:(id /* block */)arg2;
- (bool)_getPacketBufferSendInfo:(struct { char *x1; unsigned long long x2; long long x3; long long x4; unsigned int x5; bool x6; bool x7; bool x8; bool x9; bool x10; bool x11; bool x12; bool x13; bool x14; bool x15; bool x16; unsigned int x17; struct sockaddr_storage { unsigned char x_18_1_1; unsigned char x_18_1_2; BOOL x_18_1_3[6]; long long x_18_1_4; BOOL x_18_1_5[112]; } x18; struct sockaddr_storage { unsigned char x_19_1_1; unsigned char x_19_1_2; BOOL x_19_1_3[6]; long long x_19_1_4; BOOL x_19_1_5[112]; } x19; struct sockaddr_storage { unsigned char x_20_1_1; unsigned char x_20_1_2; BOOL x_20_1_3[6]; long long x_20_1_4; BOOL x_20_1_5[112]; } x20; unsigned short x21; unsigned char x22; int x23; struct { char *x_24_1_1; unsigned short x_24_1_2; int x_24_1_3; unsigned short x_24_1_4[12]; unsigned long long x_24_1_5; unsigned char x_24_1_6; unsigned short x_24_1_7; unsigned char x_24_1_8; bool x_24_1_9; bool x_24_1_10; unsigned short x_24_1_11; struct { unsigned short x_12_2_1; unsigned short x_12_2_2; unsigned short x_12_2_3; unsigned short x_12_2_4; unsigned short x_12_2_5; } x_24_1_12; bool x_24_1_13; bool x_24_1_14; int x_24_1_15; unsigned short x_24_1_16[4]; unsigned char x_24_1_17; bool x_24_1_18; bool x_24_1_19; bool x_24_1_20; unsigned int x_24_1_21; } x24[8]; }*)arg1 channelNumber:(unsigned short*)arg2 transport:(long long*)arg3;
- (long long)_getQRAllocateType;
- (id)_getRemoteAttribute:(id)arg1;
- (bool)_getSessionParticipants:(id)arg1 relaySessionID:(id)arg2 options:(id)arg3;
- (bool)_getSessionStreamInfo:(id)arg1 relaySessionID:(id)arg2 options:(id)arg3;
- (void)_handleActivityTimer;
- (void)_handleAllocbindFailoverTimer:(id)arg1 failoverTimerOnCandidatePair:(id)arg2 onInterface:(int)arg3;
- (void)_handleAllocbindFailoverTimerWithTransportScoreCards:(id)arg1 failoverTimerOnCandidatePair:(id)arg2 onInterface:(int)arg3;
- (void)_handleDisconnectTimer;
- (void)_handleNewRATChange;
- (void)_handleNoRemotePacket;
- (bool)_handleRemapping:(id)arg1 errorCode:(unsigned short)arg2 reconnectQUIC:(bool)arg3;
- (void)_handleSelfAllocationTimeout:(id)arg1;
- (void)_handle_cellular_path:(id)arg1 nwEndPoind:(id)arg2;
- (void)_handle_wifi_path:(id)arg1 nwEndPoind:(id)arg2;
- (bool)_hasActiveAllocbindFailoverTimerForSessionID:(id)arg1;
- (bool)_hasCandidatePairInState:(unsigned long long)arg1 anotherState:(unsigned long long)arg2 relayCandidatePairsOnly:(bool)arg3 excludeSelfAlloc:(bool)arg4;
- (bool)_hasCandidatePairInState:(unsigned long long)arg1 relayCandidatePairsOnly:(bool)arg2 excludeSelfAlloc:(bool)arg3;
- (bool)_hasConnectedP2pLink;
- (bool)_hasConnectingRelayCandidatePair;
- (id)_interfaceNameForInterfaceIndex:(unsigned int)arg1;
- (bool)_isAcceptedRelaySessionForAllocationRequestID:(id)arg1 acceptedRelaySessionID:(id)arg2;
- (bool)_isCellularInterfaceForCandidatePair:(id)arg1 localAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg2;
- (bool)_isExtIPDiscoveryDone;
- (bool)_isInterfaceConstrainedWithInterfaceIndex:(unsigned int)arg1;
- (bool)_isInterfaceDelegatedWithInterfaceIndex:(unsigned int)arg1;
- (bool)_isInterfaceExpensiveWithInterfaceIndex:(unsigned int)arg1;
- (bool)_isNWPathFlagsChanged:(id)arg1 existingPath:(unsigned short*)arg2;
- (bool)_isSharedQRSession:(id)arg1;
- (bool)_isUsingSameRATCandidatePair:(id)arg1 transportScoreCard:(id)arg2;
- (void)_nominateCandidatePair:(id)arg1;
- (void)_notifyCandidatePairConnected:(id)arg1;
- (void)_notifyCandidatePairDisconnected:(id)arg1 withReason:(unsigned char)arg2;
- (void)_notifyDefaultUnderlyingLinkChanged:(id)arg1 error:(long long)arg2;
- (void)_notifyLinkDisconnectedWithError:(long long)arg1 reason:(unsigned char)arg2;
- (void)_notifyQRSessionConnected:(id)arg1;
- (void)_notifySessionInfoReceived:(id)arg1 relayGroupID:(id)arg2 relaySessionID:(id)arg3 status:(unsigned int)arg4;
- (void)_parseActiveExperiments:(id)arg1;
- (void)_parseClientUUID:(id)arg1;
- (bool)_postProcessAllocbindResponse:(id)arg1 candidatePair:(id)arg2 candidatePairToken:(id)arg3;
- (bool)_postProcessQUICAllocbindResponse:(id)arg1 candidatePair:(id)arg2;
- (unsigned long long)_prepareOutgoingChannelData:(struct { /* ? */ }**)arg1 arraySize:(int)arg2 channelNumber:(unsigned short)arg3 candidatePair:(id)arg4 linkID:(BOOL)arg5 delegatedLinkID:(char *)arg6 stunTransport:(long long)arg7;
- (bool)_processAllocbindResponse:(id)arg1 fromDevice:(id)arg2 localIfIndex:(unsigned int)arg3 localAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg4 remmoteAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg5 candidatePairToken:(id)arg6 arrivalTime:(double)arg7;
- (bool)_processBindingRequest:(id)arg1 fromDevice:(id)arg2 localIfIndex:(unsigned int)arg3 localAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg4 remmoteAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg5 candidatePairToken:(id)arg6 arrivalTime:(double)arg7;
- (bool)_processBindingResponse:(id)arg1 fromDevice:(id)arg2 localIfIndex:(unsigned int)arg3 localAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg4 remmoteAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg5 candidatePairToken:(id)arg6 arrivalTime:(double)arg7;
- (bool)_processChannelDataCommandMessage:(struct { char *x1; unsigned long long x2; long long x3; long long x4; unsigned int x5; bool x6; bool x7; bool x8; bool x9; bool x10; bool x11; bool x12; bool x13; bool x14; bool x15; bool x16; unsigned int x17; struct sockaddr_storage { unsigned char x_18_1_1; unsigned char x_18_1_2; BOOL x_18_1_3[6]; long long x_18_1_4; BOOL x_18_1_5[112]; } x18; struct sockaddr_storage { unsigned char x_19_1_1; unsigned char x_19_1_2; BOOL x_19_1_3[6]; long long x_19_1_4; BOOL x_19_1_5[112]; } x19; struct sockaddr_storage { unsigned char x_20_1_1; unsigned char x_20_1_2; BOOL x_20_1_3[6]; long long x_20_1_4; BOOL x_20_1_5[112]; } x20; unsigned short x21; unsigned char x22; int x23; struct { char *x_24_1_1; unsigned short x_24_1_2; int x_24_1_3; unsigned short x_24_1_4[12]; unsigned long long x_24_1_5; unsigned char x_24_1_6; unsigned short x_24_1_7; unsigned char x_24_1_8; bool x_24_1_9; bool x_24_1_10; unsigned short x_24_1_11; struct { unsigned short x_12_2_1; unsigned short x_12_2_2; unsigned short x_12_2_3; unsigned short x_12_2_4; unsigned short x_12_2_5; } x_24_1_12; bool x_24_1_13; bool x_24_1_14; int x_24_1_15; unsigned short x_24_1_16[4]; unsigned char x_24_1_17; bool x_24_1_18; bool x_24_1_19; bool x_24_1_20; unsigned int x_24_1_21; } x24[8]; }*)arg1 remoteRelayLinkID:(unsigned short)arg2 channelNumber:(unsigned short)arg3 fromDeviceUniqueID:(id)arg4 cbuuid:(id)arg5 arrivalTime:(double)arg6;
- (void)_processCommandConnected:(id)arg1 candidatePairToken:(id)arg2;
- (void)_processCommandConnectionData:(id)arg1 candidatePairToken:(id)arg2;
- (void)_processCommandDisconnected:(id)arg1 candidatePairToken:(id)arg2;
- (void)_processCommandHeartbeat:(id)arg1 candidatePairToken:(id)arg2 arrivalTime:(double)arg3 remoteRelayLinkID:(unsigned short)arg4;
- (void)_processCommandNominate:(id)arg1 candidatePairToken:(id)arg2;
- (void)_processCommandRelayInterfaceInfo:(id)arg1 candidatePairToken:(id)arg2;
- (bool)_processDataIndication:(id)arg1 fromDevice:(id)arg2 localIfIndex:(unsigned int)arg3 localAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg4 remoteAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg5 candidatePairToken:(id)arg6 arrivalTime:(double)arg7;
- (void)_processDataOnReallocChannel:(unsigned short)arg1 localAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg2 remoteAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg3;
- (void)_processDelayedCellularInterfaces;
- (bool)_processDiagnosticIndication:(id)arg1 candidatePairToken:(id)arg2 arrivalTime:(double)arg3;
- (bool)_processGoAwayIndication:(id)arg1 fromDevice:(id)arg2 localIfIndex:(unsigned int)arg3 localAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg4 remoteAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg5 candidatePairToken:(id)arg6 arrivalTime:(double)arg7;
- (bool)_processIncomingIndicationData:(char *)arg1 length:(int)arg2 candidatePairToken:(id)arg3 arrivalTime:(double)arg4 remoteRelayLinkID:(unsigned short)arg5;
- (void)_processNewLocalAddressList:(id)arg1;
- (void)_processNewRemoteCandidates:(id)arg1;
- (bool)_processProtoPacket:(struct { char *x1; unsigned long long x2; long long x3; long long x4; unsigned int x5; bool x6; bool x7; bool x8; bool x9; bool x10; bool x11; bool x12; bool x13; bool x14; bool x15; bool x16; unsigned int x17; struct sockaddr_storage { unsigned char x_18_1_1; unsigned char x_18_1_2; BOOL x_18_1_3[6]; long long x_18_1_4; BOOL x_18_1_5[112]; } x18; struct sockaddr_storage { unsigned char x_19_1_1; unsigned char x_19_1_2; BOOL x_19_1_3[6]; long long x_19_1_4; BOOL x_19_1_5[112]; } x19; struct sockaddr_storage { unsigned char x_20_1_1; unsigned char x_20_1_2; BOOL x_20_1_3[6]; long long x_20_1_4; BOOL x_20_1_5[112]; } x20; unsigned short x21; unsigned char x22; int x23; struct { char *x_24_1_1; unsigned short x_24_1_2; int x_24_1_3; unsigned short x_24_1_4[12]; unsigned long long x_24_1_5; unsigned char x_24_1_6; unsigned short x_24_1_7; unsigned char x_24_1_8; bool x_24_1_9; bool x_24_1_10; unsigned short x_24_1_11; struct { unsigned short x_12_2_1; unsigned short x_12_2_2; unsigned short x_12_2_3; unsigned short x_12_2_4; unsigned short x_12_2_5; } x_24_1_12; bool x_24_1_13; bool x_24_1_14; int x_24_1_15; unsigned short x_24_1_16[4]; unsigned char x_24_1_17; bool x_24_1_18; bool x_24_1_19; bool x_24_1_20; unsigned int x_24_1_21; } x24[8]; }*)arg1 fromDeviceUniqueID:(id)arg2 cbuuid:(id)arg3 arrivalTime:(double)arg4 headerOverhead:(unsigned long long)arg5;
- (bool)_processQUICAllocbindResponse:(id)arg1 fromDevice:(id)arg2 localIfIndex:(unsigned int)arg3 localAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg4 remmoteAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg5 candidatePairToken:(id)arg6 arrivalTime:(double)arg7;
- (bool)_processQUICDiagnosticIndication:(id)arg1 candidatePairToken:(id)arg2 arrivalTime:(double)arg3;
- (bool)_processQUICGoAwayIndication:(id)arg1 fromDevice:(id)arg2 localIfIndex:(unsigned int)arg3 localAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg4 remoteAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg5 candidatePairToken:(id)arg6 arrivalTime:(double)arg7;
- (bool)_processQUICReallocIndication:(id)arg1 fromDevice:(id)arg2 localIfIndex:(unsigned int)arg3 localAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg4 remoteAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg5 candidatePairToken:(id)arg6 arrivalTime:(double)arg7;
- (bool)_processQUICUnallocbindResponse:(id)arg1 fromDevice:(id)arg2 localIfIndex:(unsigned int)arg3 localAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg4 remmoteAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg5 candidatePairToken:(id)arg6 arrivalTime:(double)arg7;
- (void)_processReallocChannelData:(struct { char *x1; unsigned long long x2; long long x3; long long x4; unsigned int x5; bool x6; bool x7; bool x8; bool x9; bool x10; bool x11; bool x12; bool x13; bool x14; bool x15; bool x16; unsigned int x17; struct sockaddr_storage { unsigned char x_18_1_1; unsigned char x_18_1_2; BOOL x_18_1_3[6]; long long x_18_1_4; BOOL x_18_1_5[112]; } x18; struct sockaddr_storage { unsigned char x_19_1_1; unsigned char x_19_1_2; BOOL x_19_1_3[6]; long long x_19_1_4; BOOL x_19_1_5[112]; } x19; struct sockaddr_storage { unsigned char x_20_1_1; unsigned char x_20_1_2; BOOL x_20_1_3[6]; long long x_20_1_4; BOOL x_20_1_5[112]; } x20; unsigned short x21; unsigned char x22; int x23; struct { char *x_24_1_1; unsigned short x_24_1_2; int x_24_1_3; unsigned short x_24_1_4[12]; unsigned long long x_24_1_5; unsigned char x_24_1_6; unsigned short x_24_1_7; unsigned char x_24_1_8; bool x_24_1_9; bool x_24_1_10; unsigned short x_24_1_11; struct { unsigned short x_12_2_1; unsigned short x_12_2_2; unsigned short x_12_2_3; unsigned short x_12_2_4; unsigned short x_12_2_5; } x_24_1_12; bool x_24_1_13; bool x_24_1_14; int x_24_1_15; unsigned short x_24_1_16[4]; unsigned char x_24_1_17; bool x_24_1_18; bool x_24_1_19; bool x_24_1_20; unsigned int x_24_1_21; } x24[8]; }*)arg1 channelNumber:(unsigned short)arg2 fromDeviceUniqueID:(id)arg3 cbuuid:(id)arg4 arrivalTime:(double)arg5;
- (bool)_processReallocIndication:(id)arg1 fromDevice:(id)arg2 localIfIndex:(unsigned int)arg3 localAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg4 remoteAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg5 candidatePairToken:(id)arg6 arrivalTime:(double)arg7;
- (bool)_processRegisterAckResponse:(id)arg1 candidatePairToken:(id)arg2;
- (bool)_processRegisterIndication:(id)arg1 candidatePairToken:(id)arg2;
- (bool)_processRegisterResponse:(id)arg1 candidatePairToken:(id)arg2;
- (bool)_processReliableUnicastRegistrationErrorResponse:(id)arg1 packetBuffer:(struct { char *x1; unsigned long long x2; long long x3; long long x4; unsigned int x5; bool x6; bool x7; bool x8; bool x9; bool x10; bool x11; bool x12; bool x13; bool x14; bool x15; bool x16; unsigned int x17; struct sockaddr_storage { unsigned char x_18_1_1; unsigned char x_18_1_2; BOOL x_18_1_3[6]; long long x_18_1_4; BOOL x_18_1_5[112]; } x18; struct sockaddr_storage { unsigned char x_19_1_1; unsigned char x_19_1_2; BOOL x_19_1_3[6]; long long x_19_1_4; BOOL x_19_1_5[112]; } x19; struct sockaddr_storage { unsigned char x_20_1_1; unsigned char x_20_1_2; BOOL x_20_1_3[6]; long long x_20_1_4; BOOL x_20_1_5[112]; } x20; unsigned short x21; unsigned char x22; int x23; struct { char *x_24_1_1; unsigned short x_24_1_2; int x_24_1_3; unsigned short x_24_1_4[12]; unsigned long long x_24_1_5; unsigned char x_24_1_6; unsigned short x_24_1_7; unsigned char x_24_1_8; bool x_24_1_9; bool x_24_1_10; unsigned short x_24_1_11; struct { unsigned short x_12_2_1; unsigned short x_12_2_2; unsigned short x_12_2_3; unsigned short x_12_2_4; unsigned short x_12_2_5; } x_24_1_12; bool x_24_1_13; bool x_24_1_14; int x_24_1_15; unsigned short x_24_1_16[4]; unsigned char x_24_1_17; bool x_24_1_18; bool x_24_1_19; bool x_24_1_20; unsigned int x_24_1_21; } x24[8]; }*)arg2 startTime:(double)arg3 candidatePair:(id)arg4;
- (void)_processRemoteCandidates:(id)arg1;
- (void)_processRemoteLinkUUID:(id)arg1 candidatePair:(id)arg2;
- (bool)_processRemovedLocalAddressList:(id)arg1;
- (void)_processRemovedRemoteCandidates:(id)arg1;
- (bool)_processStunPacket:(struct { char *x1; unsigned long long x2; long long x3; long long x4; unsigned int x5; bool x6; bool x7; bool x8; bool x9; bool x10; bool x11; bool x12; bool x13; bool x14; bool x15; bool x16; unsigned int x17; struct sockaddr_storage { unsigned char x_18_1_1; unsigned char x_18_1_2; BOOL x_18_1_3[6]; long long x_18_1_4; BOOL x_18_1_5[112]; } x18; struct sockaddr_storage { unsigned char x_19_1_1; unsigned char x_19_1_2; BOOL x_19_1_3[6]; long long x_19_1_4; BOOL x_19_1_5[112]; } x19; struct sockaddr_storage { unsigned char x_20_1_1; unsigned char x_20_1_2; BOOL x_20_1_3[6]; long long x_20_1_4; BOOL x_20_1_5[112]; } x20; unsigned short x21; unsigned char x22; int x23; struct { char *x_24_1_1; unsigned short x_24_1_2; int x_24_1_3; unsigned short x_24_1_4[12]; unsigned long long x_24_1_5; unsigned char x_24_1_6; unsigned short x_24_1_7; unsigned char x_24_1_8; bool x_24_1_9; bool x_24_1_10; unsigned short x_24_1_11; struct { unsigned short x_12_2_1; unsigned short x_12_2_2; unsigned short x_12_2_3; unsigned short x_12_2_4; unsigned short x_12_2_5; } x_24_1_12; bool x_24_1_13; bool x_24_1_14; int x_24_1_15; unsigned short x_24_1_16[4]; unsigned char x_24_1_17; bool x_24_1_18; bool x_24_1_19; bool x_24_1_20; unsigned int x_24_1_21; } x24[8]; }*)arg1 fromDeviceUniqueID:(id)arg2 cbuuid:(id)arg3 arrivalTime:(double)arg4 headerOverhead:(unsigned long long)arg5;
- (bool)_processUnallocbindResponse:(id)arg1 fromDevice:(id)arg2 localIfIndex:(unsigned int)arg3 localAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg4 remmoteAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg5 candidatePairToken:(id)arg6 arrivalTime:(double)arg7;
- (void)_processXORMappedAddress:(id)arg1 arrivalTime:(double)arg2;
- (bool)_qrLinkLimitExceededWithNewLinkType:(unsigned char)arg1 cellularRelayLinkCount:(unsigned short)arg2 wifiRelayLinkCount:(unsigned short)arg3;
- (void)_receiveP2PNegotiationBlob:(id)arg1 attemptID:(unsigned long long)arg2 remoteIDSConnectionID:(unsigned int)arg3 remoteAVCConnectionID:(unsigned int)arg4 candidatePair:(id)arg5 completionHandler:(id /* block */)arg6;
- (void)_removeChannelFromChannelToCandidatePair:(id)arg1;
- (void)_removePacketNotificationFilter;
- (void)_removeProtoRequest:(unsigned long long)arg1 status:(unsigned int)arg2;
- (void)_removeStunRequest:(id)arg1;
- (void)_reportAWDAllocateTime;
- (void)_reportSessionSetupTime;
- (void)_requestNewTwoWayQRAllocation:(id)arg1;
- (void)_requestNonUDPRelayAllocation:(long long)arg1 relaySessionID:(id)arg2;
- (bool)_requestSelfAllocationForInterfaceAddress:(id)arg1;
- (void)_resetRetryCountForCandidatePair:(id)arg1;
- (void)_saveProtoRequest:(id)arg1 token:(id)arg2;
- (void)_saveStunRequest:(id)arg1 startTime:(double)arg2 token:(id)arg3;
- (void)_selectBetterDefaultCandidatePair:(id)arg1;
- (void)_selectStunTransport:(long long*)arg1 andInterfaceAddress:(id*)arg2 forRelaySessionID:(id)arg3 preferIPv4:(bool)arg4 isValidSA:(bool)arg5;
- (void)_selectStunTransport:(long long*)arg1 andInterfaceAddress:(id*)arg2 forRelaySessionID:(id)arg3 preferIPv4:(bool)arg4 wantOnlyCell:(bool)arg5 wantOnlyNonCell:(bool)arg6 isValidSA:(bool)arg7;
- (void)_sendAllocbindRequest:(id)arg1 stunMessage:(id)arg2 isRealloc:(bool)arg3 inResponseToNoSessionState:(bool)arg4;
- (void)_sendAllocbindRequestForExtIP:(id)arg1 startTime:(double)arg2;
- (void)_sendBindingRequest:(id)arg1 stunMessage:(id)arg2;
- (void)_sendChannelDataCommandMessage:(long long)arg1 packetBuffer:(struct { char *x1; unsigned long long x2; long long x3; long long x4; unsigned int x5; bool x6; bool x7; bool x8; bool x9; bool x10; bool x11; bool x12; bool x13; bool x14; bool x15; bool x16; unsigned int x17; struct sockaddr_storage { unsigned char x_18_1_1; unsigned char x_18_1_2; BOOL x_18_1_3[6]; long long x_18_1_4; BOOL x_18_1_5[112]; } x18; struct sockaddr_storage { unsigned char x_19_1_1; unsigned char x_19_1_2; BOOL x_19_1_3[6]; long long x_19_1_4; BOOL x_19_1_5[112]; } x19; struct sockaddr_storage { unsigned char x_20_1_1; unsigned char x_20_1_2; BOOL x_20_1_3[6]; long long x_20_1_4; BOOL x_20_1_5[112]; } x20; unsigned short x21; unsigned char x22; int x23; struct { char *x_24_1_1; unsigned short x_24_1_2; int x_24_1_3; unsigned short x_24_1_4[12]; unsigned long long x_24_1_5; unsigned char x_24_1_6; unsigned short x_24_1_7; unsigned char x_24_1_8; bool x_24_1_9; bool x_24_1_10; unsigned short x_24_1_11; struct { unsigned short x_12_2_1; unsigned short x_12_2_2; unsigned short x_12_2_3; unsigned short x_12_2_4; unsigned short x_12_2_5; } x_24_1_12; bool x_24_1_13; bool x_24_1_14; int x_24_1_15; unsigned short x_24_1_16[4]; unsigned char x_24_1_17; bool x_24_1_18; bool x_24_1_19; bool x_24_1_20; unsigned int x_24_1_21; } x24[8]; }*)arg2 options:(id)arg3 candidatePairToken:(id)arg4;
- (unsigned long long)_sendChannelDataPacketBuffer:(struct { char *x1; unsigned long long x2; long long x3; long long x4; unsigned int x5; bool x6; bool x7; bool x8; bool x9; bool x10; bool x11; bool x12; bool x13; bool x14; bool x15; bool x16; unsigned int x17; struct sockaddr_storage { unsigned char x_18_1_1; unsigned char x_18_1_2; BOOL x_18_1_3[6]; long long x_18_1_4; BOOL x_18_1_5[112]; } x18; struct sockaddr_storage { unsigned char x_19_1_1; unsigned char x_19_1_2; BOOL x_19_1_3[6]; long long x_19_1_4; BOOL x_19_1_5[112]; } x19; struct sockaddr_storage { unsigned char x_20_1_1; unsigned char x_20_1_2; BOOL x_20_1_3[6]; long long x_20_1_4; BOOL x_20_1_5[112]; } x20; unsigned short x21; unsigned char x22; int x23; struct { char *x_24_1_1; unsigned short x_24_1_2; int x_24_1_3; unsigned short x_24_1_4[12]; unsigned long long x_24_1_5; unsigned char x_24_1_6; unsigned short x_24_1_7; unsigned char x_24_1_8; bool x_24_1_9; bool x_24_1_10; unsigned short x_24_1_11; struct { unsigned short x_12_2_1; unsigned short x_12_2_2; unsigned short x_12_2_3; unsigned short x_12_2_4; unsigned short x_12_2_5; } x_24_1_12; bool x_24_1_13; bool x_24_1_14; int x_24_1_15; unsigned short x_24_1_16[4]; unsigned char x_24_1_17; bool x_24_1_18; bool x_24_1_19; bool x_24_1_20; unsigned int x_24_1_21; } x24[8]; }*)arg1 candidatePair:(id)arg2;
- (void)_sendCommandMessage:(long long)arg1 stunMessage:(id)arg2 options:(id)arg3 candidatePairToken:(id)arg4;
- (void)_sendConnectionDataWithRemovedAddressList:(id)arg1;
- (bool)_sendInfoRequest:(id)arg1 relaySessionID:(id)arg2;
- (void)_sendNowConnectionDataWithRemovedAddressList:(id)arg1;
- (long long)_sendPacketBuffer:(struct { char *x1; unsigned long long x2; long long x3; long long x4; unsigned int x5; bool x6; bool x7; bool x8; bool x9; bool x10; bool x11; bool x12; bool x13; bool x14; bool x15; bool x16; unsigned int x17; struct sockaddr_storage { unsigned char x_18_1_1; unsigned char x_18_1_2; BOOL x_18_1_3[6]; long long x_18_1_4; BOOL x_18_1_5[112]; } x18; struct sockaddr_storage { unsigned char x_19_1_1; unsigned char x_19_1_2; BOOL x_19_1_3[6]; long long x_19_1_4; BOOL x_19_1_5[112]; } x19; struct sockaddr_storage { unsigned char x_20_1_1; unsigned char x_20_1_2; BOOL x_20_1_3[6]; long long x_20_1_4; BOOL x_20_1_5[112]; } x20; unsigned short x21; unsigned char x22; int x23; struct { char *x_24_1_1; unsigned short x_24_1_2; int x_24_1_3; unsigned short x_24_1_4[12]; unsigned long long x_24_1_5; unsigned char x_24_1_6; unsigned short x_24_1_7; unsigned char x_24_1_8; bool x_24_1_9; bool x_24_1_10; unsigned short x_24_1_11; struct { unsigned short x_12_2_1; unsigned short x_12_2_2; unsigned short x_12_2_3; unsigned short x_12_2_4; unsigned short x_12_2_5; } x_24_1_12; bool x_24_1_13; bool x_24_1_14; int x_24_1_15; unsigned short x_24_1_16[4]; unsigned char x_24_1_17; bool x_24_1_18; bool x_24_1_19; bool x_24_1_20; unsigned int x_24_1_21; } x24[8]; }*)arg1 stunTransport:(long long)arg2 token:(id)arg3 linkID:(BOOL)arg4 delegatedLinkID:(BOOL)arg5;
- (long long)_sendProtoMessage:(id)arg1 candidatePair:(id)arg2;
- (void)_sendQUICAllocbindRequest:(id)arg1 isRealloc:(bool)arg2 inResponseToNoSessionState:(bool)arg3 shouldConnectLinkFirst:(bool)arg4 isPendingInResponseToNoSessionState:(bool)arg5;
- (void)_sendQUICUnallocbindRequest:(id)arg1 reason:(unsigned char)arg2;
- (void)_sendRelayInterfaceInfo:(id)arg1;
- (void)_sendSKEDataToSucceededCandidatePairs;
- (void)_sendSKEDataWithSelectedCandidatePair;
- (void)_sendSessionDisconnectedCommand;
- (long long)_sendStunMessage:(id)arg1 candidatePair:(id)arg2;
- (long long)_sendStunMessage:(id)arg1 sourceIfIndex:(int)arg2 source:(const struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg3 destination:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg4 stunTransport:(long long)arg5 token:(id)arg6 linkID:(BOOL)arg7 delegatedLinkID:(BOOL)arg8 MTULimit:(int)arg9;
- (void)_sendUnallocbindRequest:(id)arg1 stunMessage:(id)arg2 reason:(unsigned char)arg3;
- (void)_sendUnallocbindRequestTimeOut:(id)arg1 stunMessage:(id)arg2 reason:(unsigned char)arg3;
- (void)_setCandidatePairConnected:(id)arg1;
- (void)_setChannelToCandidatePair:(id)arg1 localAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg2 remoteAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg3 channelNumber:(unsigned short)arg4;
- (void)_setDefaultCandidatePairForNonFT;
- (void)_setFirstDefaultCandidatePair:(id)arg1;
- (void)_setLinkMetricsAttributesForCandidatePair:(id)arg1;
- (void)_setRemoteGlobalLinkVersionWithCommand:(long long)arg1 receivedRemoteVersion:(bool)arg2 versionValue:(unsigned short)arg3 receivedSKE:(bool)arg4;
- (bool)_setupNewQRLinkIfNecessary:(id)arg1;
- (void)_setupRelayConnectionForNetworkAddressChanges;
- (bool)_shouldSkipCommand:(long long)arg1 withCandidatePair:(id)arg2 connectionDataCounter:(int)arg3 relayInterfaceCounter:(int)arg4;
- (bool)_shouldUseP2PTLE;
- (bool)_shouldUseQRTLE;
- (bool)_shouldUseVRTLE;
- (bool)_skipCommandMessage:(long long)arg1 candidatePair:(id)arg2 timeNow:(double)arg3;
- (void)_startActivityTimer;
- (void)_startAllocbindFailoverTimerOnCandidatePair:(id)arg1 delay:(int)arg2;
- (void)_startDisconnectTimer;
- (void)_startExtIPDiscovery;
- (void)_startHB:(id)arg1;
- (void)_startStunCheck:(id)arg1;
- (double)_startTimeForProtoRequest:(unsigned long long)arg1;
- (double)_startTimeForStunRequest:(id)arg1;
- (void)_stopActivityTimer;
- (void)_stopAllocbindFailoverTimer:(id)arg1;
- (void)_stopDisconnectTimer;
- (void)_stopProbingOnLinkID:(BOOL)arg1;
- (bool)_synthesizeNAT64ForAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg1 withPrefix:(struct { int x1; unsigned char x2[12]; }*)arg2 toAddress:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg3;
- (id)_tokenForProtoRequest:(unsigned long long)arg1;
- (id)_transportInterfaceToString:(long long)arg1;
- (bool)_triggerSymptomsWithCandidatePairToken:(id)arg1 subType:(id)arg2 subTypeContext:(id)arg3 duration:(unsigned short)arg4;
- (void)_updateCandidatePair:(id)arg1 newLocalPort:(unsigned short)arg2;
- (void)_updateDefaultCandidatePair:(id)arg1;
- (void)_updateInterfaceAddressesWithAddList:(id)arg1 removeList:(id)arg2;
- (void)_updateLinkIDForPlugin:(id)arg1;
- (void)_updateNominatedCandidatePair:(id)arg1;
- (void)_updateSendStatsWithResult:(unsigned long long)arg1 bytesSent:(long long)arg2 packetsSent:(int)arg3 linkID:(BOOL)arg4 delegatedLinkID:(BOOL)arg5 token:(id)arg6 isClientData:(bool)arg7 sendTime:(double)arg8 stunTransport:(long long)arg9;
- (id)alternateDelegate;
- (void)candidatePair:(id)arg1 didAddQREvent:(id)arg2;
- (void)candidatePair:(id)arg1 didReceiveGetMaterialResponse:(id)arg2;
- (void)candidatePair:(id)arg1 didReceiveMappedParticipantsDict:(id)arg2 forLinkID:(BOOL)arg3;
- (void)candidatePair:(id)arg1 didReceiveParticipantUpdate:(id)arg2 status:(unsigned short)arg3;
- (void)candidatePair:(id)arg1 didReceivePluginControlEvent:(unsigned long long)arg2 operation:(unsigned char)arg3 transactionID:(id)arg4;
- (void)candidatePair:(id)arg1 didReceivePluginRegistration:(unsigned long long)arg2 pluginName:(id)arg3;
- (void)candidatePair:(id)arg1 didReceivePluginUnregistration:(unsigned long long)arg2 pluginName:(id)arg3;
- (void)candidatePair:(id)arg1 didReceivePutMaterialIndication:(id)arg2;
- (void)candidatePair:(id)arg1 didReceivePutMaterialResponse:(id)arg2;
- (void)candidatePair:(id)arg1 didReceiveSessionInfo:(id)arg2 status:(unsigned int)arg3;
- (void)candidatePair:(id)arg1 didReceiveSessionStats:(id)arg2 success:(bool)arg3;
- (void)candidatePair:(id)arg1 didReceiveStunErrorResponse:(long long)arg2 errorCode:(unsigned short)arg3 didLocalExternalAddressChange:(bool)arg4;
- (void)candidatePair:(id)arg1 protoRequestDidTimeOut:(unsigned long long)arg2;
- (id)cbuuid;
- (void)connectWithSessionInfo:(id)arg1 interfaceAddress:(id)arg2 joinSession:(bool)arg3 completionHandler:(id /* block */)arg4 withLocalInterfacePreference:(int)arg5;
- (id)copyLinkStatsDict;
- (unsigned long long)createAliasForParticipantID:(unsigned long long)arg1 salt:(id)arg2 relayGroupID:(id)arg3 relaySessionID:(id)arg4;
- (id)createLinkCycleForCandidatePair:(id)arg1;
- (void)currentCellularSignalStrength:(int*)arg1 signalStrength:(int*)arg2 signalGrade:(int*)arg3;
- (void)dealloc;
- (unsigned long long)defaultLinkType;
- (id)delegate;
- (id)deviceUniqueID;
- (void)disconnectIdleQUICConnectionForCandidatePair:(id)arg1;
- (void)disconnectWithCompletionHandler:(id /* block */)arg1;
- (void)dropIPPackets:(BOOL)arg1 payloadArray:(id)arg2;
- (void)enableUPlusOneSessionForTransition:(bool)arg1;
- (void)flushLinkProbingStatus:(id)arg1;
- (id)generateLinkReport:(double)arg1 isCurrentLink:(bool)arg2;
- (long long)getAllocBindErrorCodeForSessionID:(id)arg1;
- (id)getLocalAttribute:(id)arg1;
- (id)getRemoteAttribute:(id)arg1;
- (void)getSessionInfo:(id)arg1 relaySessionID:(id)arg2 requestType:(long long)arg3 options:(id)arg4;
- (void)handleCellularRATChange;
- (void)handleNetworkAddressChanges:(bool)arg1 hasIPv6AddressChange:(bool)arg2;
- (bool)hasReachableInterface:(unsigned long long)arg1;
- (unsigned long long)headerOverhead;
- (id)initWithDeviceUniqueID:(id)arg1 cbuuid:(id)arg2;
- (void)invalidate;
- (void)link:(id)arg1 didConnectForDeviceUniqueID:(id)arg2 cbuuid:(id)arg3;
- (void)link:(id)arg1 didDisconnectForDeviceUniqueID:(id)arg2 cbuuid:(id)arg3;
- (void)link:(id)arg1 didFailConnectionOfType:(id)arg2;
- (void)link:(id)arg1 didMitigateCollision:(bool)arg2;
- (bool)link:(id)arg1 didReceivePacket:(struct { char *x1; unsigned long long x2; long long x3; long long x4; unsigned int x5; bool x6; bool x7; bool x8; bool x9; bool x10; bool x11; bool x12; bool x13; bool x14; bool x15; bool x16; unsigned int x17; struct sockaddr_storage { unsigned char x_18_1_1; unsigned char x_18_1_2; BOOL x_18_1_3[6]; long long x_18_1_4; BOOL x_18_1_5[112]; } x18; struct sockaddr_storage { unsigned char x_19_1_1; unsigned char x_19_1_2; BOOL x_19_1_3[6]; long long x_19_1_4; BOOL x_19_1_5[112]; } x19; struct sockaddr_storage { unsigned char x_20_1_1; unsigned char x_20_1_2; BOOL x_20_1_3[6]; long long x_20_1_4; BOOL x_20_1_5[112]; } x20; unsigned short x21; unsigned char x22; int x23; struct { char *x_24_1_1; unsigned short x_24_1_2; int x_24_1_3; unsigned short x_24_1_4[12]; unsigned long long x_24_1_5; unsigned char x_24_1_6; unsigned short x_24_1_7; unsigned char x_24_1_8; bool x_24_1_9; bool x_24_1_10; unsigned short x_24_1_11; struct { unsigned short x_12_2_1; unsigned short x_12_2_2; unsigned short x_12_2_3; unsigned short x_12_2_4; unsigned short x_12_2_5; } x_24_1_12; bool x_24_1_13; bool x_24_1_14; int x_24_1_15; unsigned short x_24_1_16[4]; unsigned char x_24_1_17; bool x_24_1_18; bool x_24_1_19; bool x_24_1_20; unsigned int x_24_1_21; } x24[8]; }*)arg2 fromDeviceUniqueID:(id)arg3 cbuuid:(id)arg4;
- (void)linkTransactionIDMismatchDetected:(id)arg1;
- (id)linkTypeString;
- (void)manageDesignatedDestinations:(id)arg1 relayGroupID:(id)arg2 relaySessionID:(id)arg3 withType:(unsigned short)arg4 sessionStateCounter:(unsigned int)arg5;
- (unsigned long long)participantIDForAlias:(unsigned long long)arg1 salt:(id)arg2 relayGroupID:(id)arg3 relaySessionID:(id)arg4;
- (bool)qrMaterialExchangePutMaterial:(id)arg1;
- (void)queryLinkProbingStatus:(id)arg1;
- (void)receiveBlockedIndicationWithReason:(unsigned int)arg1;
- (void)receiveErrorIndicationWithCode:(unsigned int)arg1;
- (void)receiveIdleClientErrorForCandidatePair:(id)arg1;
- (void)receiveJoinNotificationFromAParticipant;
- (void)receiveKeyMaterials:(id)arg1;
- (bool)receiveNoSessionStateForCandidatePair:(id)arg1 didLocalExternalAddressChange:(bool)arg2;
- (void)registerPluginWithOptions:(id)arg1 relayGroupID:(id)arg2 relaySessionID:(id)arg3;
- (bool)remoteHostAwake;
- (void)removeParticipantIDs:(id)arg1 relayGroupID:(id)arg2 relaySessionID:(id)arg3 sessionStateCounter:(unsigned int)arg4;
- (void)reportLinkEvent:(id)arg1 linkID:(unsigned char)arg2;
- (void)requestChildConnectionIDForLinkID:(BOOL)arg1 relayGroupID:(id)arg2 relaySessionID:(id)arg3;
- (void)requestMaterialsForSession:(id)arg1 participantIDs:(id)arg2 materialType:(int)arg3;
- (void)sendAllocbindRequest:(id)arg1 isRealloc:(bool)arg2 inResponseToNoSessionState:(bool)arg3 reconnectQUIC:(bool)arg4;
- (void)sendConnectedLinkInfoToAVC;
- (void)sendKeyMaterialMessageData:(id)arg1 relayGroupID:(id)arg2 destinationURIs:(id)arg3 completionHandler:(id /* block */)arg4;
- (unsigned long long)sendPacketBuffer:(struct { char *x1; unsigned long long x2; long long x3; long long x4; unsigned int x5; bool x6; bool x7; bool x8; bool x9; bool x10; bool x11; bool x12; bool x13; bool x14; bool x15; bool x16; unsigned int x17; struct sockaddr_storage { unsigned char x_18_1_1; unsigned char x_18_1_2; BOOL x_18_1_3[6]; long long x_18_1_4; BOOL x_18_1_5[112]; } x18; struct sockaddr_storage { unsigned char x_19_1_1; unsigned char x_19_1_2; BOOL x_19_1_3[6]; long long x_19_1_4; BOOL x_19_1_5[112]; } x19; struct sockaddr_storage { unsigned char x_20_1_1; unsigned char x_20_1_2; BOOL x_20_1_3[6]; long long x_20_1_4; BOOL x_20_1_5[112]; } x20; unsigned short x21; unsigned char x22; int x23; struct { char *x_24_1_1; unsigned short x_24_1_2; int x_24_1_3; unsigned short x_24_1_4[12]; unsigned long long x_24_1_5; unsigned char x_24_1_6; unsigned short x_24_1_7; unsigned char x_24_1_8; bool x_24_1_9; bool x_24_1_10; unsigned short x_24_1_11; struct { unsigned short x_12_2_1; unsigned short x_12_2_2; unsigned short x_12_2_3; unsigned short x_12_2_4; unsigned short x_12_2_5; } x_24_1_12; bool x_24_1_13; bool x_24_1_14; int x_24_1_15; unsigned short x_24_1_16[4]; unsigned char x_24_1_17; bool x_24_1_18; bool x_24_1_19; bool x_24_1_20; unsigned int x_24_1_21; } x24[8]; }*)arg1 toDeviceUniqueID:(id)arg2 cbuuid:(id)arg3;
- (unsigned long long)sendPacketBufferArray:(struct { /* ? */ }**)arg1 arraySize:(int)arg2 toDeviceUniqueID:(id)arg3 cbuuid:(id)arg4;
- (void)sendProbingRequestWithoptions:(id)arg1 candidatePairToken:(id)arg2;
- (long long)sendProtoMessage:(id)arg1 candidatePair:(id)arg2;
- (void)sendSKEData:(id)arg1;
- (void)sendStatsRequest:(id)arg1;
- (void)sendStatsRequestForClient:(id)arg1;
- (long long)sendStunMessage:(id)arg1 candidatePair:(id)arg2;
- (void)setAcceptedRelaySession:(id)arg1 options:(id)arg2;
- (void)setAllowP2P:(bool)arg1;
- (void)setAlternateDelegate:(id)arg1;
- (void)setCbuuid:(id)arg1;
- (void)setClientUniquePID:(unsigned long long)arg1;
- (void)setDefaultUnderlyingLink:(BOOL)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDeviceUniqueID:(id)arg1;
- (void)setHasPendingAllocation:(bool)arg1;
- (void)setIsReliableUnicastSession:(bool)arg1;
- (void)setIsUPlusOneSession:(bool)arg1;
- (void)setPacketNotificationFilter:(BOOL)arg1 uniqueTag:(unsigned int)arg2 isEnabled:(bool)arg3;
- (void)setParticipantType:(unsigned short)arg1 relayGroupID:(id)arg2 relaySessionID:(id)arg3 sessionStateCounter:(unsigned int)arg4;
- (void)setPluginCache:(id)arg1;
- (void)setReceivedRemoteDeviceVersion:(bool)arg1;
- (void)setRemoteDeviceVersion:(unsigned int)arg1;
- (void)setServerDesiredMaterialsForSession:(id)arg1 materials:(id)arg2 signer:(id /* block */)arg3;
- (void)setSharedSessionHasJoined:(bool)arg1;
- (void)setTimeBase:(id)arg1;
- (void)setUpP2PQUICPodConnectionsForCandidatePair:(id)arg1 attemptID:(unsigned long long)arg2 completionHandler:(id /* block */)arg3;
- (void)setWiFiAssistState:(bool)arg1;
- (void)startLinkProbing:(id)arg1;
- (void)startWithOptions:(id)arg1;
- (unsigned long long)state;
- (void)stopKeepAlive:(id)arg1;
- (void)stopLinkProbing:(id)arg1;
- (void)updateProtocolQualityOfService:(BOOL)arg1 isGood:(bool)arg2;
- (void)updateSessionParticipants:(id)arg1 relaySessionID:(id)arg2 participants:(id)arg3;
- (void)updateURIToParticipantIDs:(id)arg1 relaySessionID:(id)arg2 sessionInfo:(id)arg3;

@end
