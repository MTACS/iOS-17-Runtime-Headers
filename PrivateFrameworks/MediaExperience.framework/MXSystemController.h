
@interface MXSystemController : NSObject {
    bool  _appWantsVolumeChanges;
    bool  _canBeNowPlayingApp;
    int  _clientPID;
    NSString * _displayID;
    bool  _hasEntitlementForPIDInheritance;
    bool  _hasEntitlementForSilentModeNotifications;
    bool  _hasEntitlementToEnableWombat;
    bool  _hasEntitlementToInitiateRecordingTemporarily;
    bool  _hasEntitlementToSetSilentMode;
    NSDictionary * _notificationsSubscribedTo;
    int  _pidToInheritAppStateFrom;
    NSString * _remoteDeviceID;
}

@property (nonatomic) bool appWantsVolumeChanges;
@property (nonatomic) bool canBeNowPlayingApp;
@property (nonatomic) int clientPID;
@property (retain) NSString *displayID;
@property (nonatomic) bool hasEntitlementForPIDInheritance;
@property (nonatomic) bool hasEntitlementForSilentModeNotifications;
@property (nonatomic) bool hasEntitlementToEnableWombat;
@property (nonatomic) bool hasEntitlementToInitiateRecordingTemporarily;
@property (nonatomic) bool hasEntitlementToSetSilentMode;
@property (nonatomic, readonly) bool isSomeoneRecording;
@property (retain) NSDictionary *notificationsSubscribedTo;
@property (nonatomic, readonly) bool phoneCallExists;
@property (nonatomic) int pidToInheritAppStateFrom;
@property (retain) NSString *remoteDeviceID;
@property (nonatomic, readonly) bool someLongFormVideoClientIsActiveOverAirPlayVideo;
@property (nonatomic, readonly) bool someLongFormVideoClientIsPlaying;
@property (nonatomic, readonly) bool someLongFormVideoClientIsPlayingOverAirPlayVideo;
@property (nonatomic, readonly) bool someSharePlayCapableCallSessionIsActive;

+ (void)dumpInfoOfMXSystemControllers;
+ (bool)getCanBeNowPlayingAppForPID:(int)arg1;
+ (int)getPIDForAnyAppThatWantsVolumeChanges;
+ (int)getPIDToInheritAppStateFromForPID:(int)arg1;
+ (void)initialize;
+ (bool)isNonSerializedCopyProperty:(id)arg1;
+ (bool)isNonSerializedSetProperty:(id)arg1;
+ (void)mxSystemControllerListAddInstance:(id)arg1 isSidekick:(bool)arg2;
+ (void)mxSystemControllerListBeginIteration;
+ (void)mxSystemControllerListEndIteration;
+ (void)notifyAll:(id)arg1 payload:(id)arg2 dontPostIfSuspended:(bool)arg3;
+ (void)notifyAll:(id)arg1 payload:(id)arg2 dontPostIfSuspended:(bool)arg3 remoteDeviceID:(id)arg4;
+ (void)updateMXSystemControllerList;

- (int)_performVolumeOperation:(unsigned int)arg1 volume:(float)arg2 category:(id)arg3 mode:(id)arg4 routeName:(id)arg5 routeDeviceIdentifier:(id)arg6 routeSubtype:(id)arg7 outVolume:(float*)arg8 outSequenceNumber:(long long*)arg9 outMuted:(bool*)arg10 outCategoryCopy:(id*)arg11 outModeCopy:(id*)arg12;
- (int)_performVolumeOperation:(unsigned int)arg1 volume:(float)arg2 category:(id)arg3 mode:(id)arg4 routeName:(id)arg5 routeDeviceIdentifier:(id)arg6 routeSubtype:(id)arg7 rampUpDuration:(float)arg8 rampDownDuration:(float)arg9 outVolume:(float*)arg10 outSequenceNumber:(long long*)arg11 outMuted:(bool*)arg12 outCategoryCopy:(id*)arg13 outModeCopy:(id*)arg14;
- (int)_performVolumeOperation:(unsigned int)arg1 volume:(float)arg2 category:(id)arg3 mode:(id)arg4 routeName:(id)arg5 routeDeviceIdentifier:(id)arg6 routeSubtype:(id)arg7 rampUpDuration:(float)arg8 rampDownDuration:(float)arg9 outVolume:(float*)arg10 outSequenceNumber:(long long*)arg11 outMuted:(bool*)arg12 outCategoryCopy:(id*)arg13 outModeCopy:(id*)arg14 retainFullMute:(bool)arg15;
- (int)_performVolumeOperation:(unsigned int)arg1 volume:(float)arg2 category:(id)arg3 mode:(id)arg4 routeName:(id)arg5 routeDeviceIdentifier:(id)arg6 routeSubtype:(id)arg7 rampUpwardDuration:(id)arg8 rampDownwardDuration:(id)arg9 outVolume:(float*)arg10 outSequenceNumber:(long long*)arg11 outMuted:(bool*)arg12 outCategoryCopy:(id*)arg13 outModeCopy:(id*)arg14;
- (bool)appWantsVolumeChanges;
- (void)applyCanBeNowPlayingApp:(const void*)arg1;
- (int)applyPIDToInheritAppStateFrom:(const void*)arg1;
- (bool)canBeNowPlayingApp;
- (int)clientPID;
- (int)copyAttributeForKey:(id)arg1 withValueOut:(void*)arg2;
- (int)copyAttributeForKeyInternal:(id)arg1 withValueOut:(void*)arg2;
- (void)dealloc;
- (id)displayID;
- (int)getInputMute:(struct { unsigned int x1[8]; })arg1 outMuteValue:(bool*)arg2;
- (bool)hasEntitlementForPIDInheritance;
- (bool)hasEntitlementForSilentModeNotifications;
- (bool)hasEntitlementToEnableWombat;
- (bool)hasEntitlementToInitiateRecordingTemporarily;
- (bool)hasEntitlementToSetSilentMode;
- (id)info;
- (id)initWithPID:(int)arg1;
- (id)initWithPID:(int)arg1 remoteDeviceID:(id)arg2;
- (bool)isSomeoneRecording;
- (id)notificationsSubscribedTo;
- (int)performVolumeOperation:(unsigned int)arg1 volume:(float)arg2 category:(id)arg3 mode:(id)arg4 routeName:(id)arg5 routeDeviceIdentifier:(id)arg6 routeSubtype:(id)arg7 outVolume:(float*)arg8 outSequenceNumber:(long long*)arg9 outMuted:(bool*)arg10 outCategoryCopy:(id*)arg11 outModeCopy:(id*)arg12;
- (int)performVolumeOperation:(unsigned int)arg1 volume:(float)arg2 category:(id)arg3 mode:(id)arg4 routeName:(id)arg5 routeDeviceIdentifier:(id)arg6 routeSubtype:(id)arg7 rampUpDuration:(float)arg8 rampDownDuration:(float)arg9 outVolume:(float*)arg10 outSequenceNumber:(long long*)arg11 outMuted:(bool*)arg12 outCategoryCopy:(id*)arg13 outModeCopy:(id*)arg14;
- (int)performVolumeOperation:(unsigned int)arg1 volume:(float)arg2 category:(id)arg3 mode:(id)arg4 routeName:(id)arg5 routeDeviceIdentifier:(id)arg6 routeSubtype:(id)arg7 rampUpDuration:(float)arg8 rampDownDuration:(float)arg9 outVolume:(float*)arg10 outSequenceNumber:(long long*)arg11 outMuted:(bool*)arg12 outCategoryCopy:(id*)arg13 outModeCopy:(id*)arg14 retainFullMute:(bool)arg15;
- (int)performVolumeOperation:(unsigned int)arg1 volume:(float)arg2 category:(id)arg3 mode:(id)arg4 routeName:(id)arg5 routeDeviceIdentifier:(id)arg6 routeSubtype:(id)arg7 rampUpwardDuration:(id)arg8 rampDownwardDuration:(id)arg9 outVolume:(float*)arg10 outSequenceNumber:(long long*)arg11 outMuted:(bool*)arg12 outCategoryCopy:(id*)arg13 outModeCopy:(id*)arg14;
- (bool)phoneCallExists;
- (int)pidToInheritAppStateFrom;
- (id)remoteDeviceID;
- (void)setAppWantsVolumeChanges:(bool)arg1;
- (int)setAttributeForKey:(id)arg1 andValue:(const void*)arg2;
- (int)setAttributeForKeyInternal:(id)arg1 andValue:(const void*)arg2;
- (void)setCanBeNowPlayingApp:(bool)arg1;
- (void)setClientPID:(int)arg1;
- (void)setDisplayID:(id)arg1;
- (void)setHasEntitlementForPIDInheritance:(bool)arg1;
- (void)setHasEntitlementForSilentModeNotifications:(bool)arg1;
- (void)setHasEntitlementToEnableWombat:(bool)arg1;
- (void)setHasEntitlementToInitiateRecordingTemporarily:(bool)arg1;
- (void)setHasEntitlementToSetSilentMode:(bool)arg1;
- (int)setInputMute:(struct { unsigned int x1[8]; })arg1 muteValue:(bool)arg2;
- (void)setNotificationsSubscribedTo:(id)arg1;
- (void)setPidToInheritAppStateFrom:(int)arg1;
- (void)setRemoteDeviceID:(id)arg1;
- (int)setSilentMode:(bool)arg1 untilTime:(id)arg2 reason:(id)arg3 clientType:(unsigned int)arg4;
- (bool)someLongFormVideoClientIsActiveOverAirPlayVideo;
- (bool)someLongFormVideoClientIsPlaying;
- (bool)someLongFormVideoClientIsPlayingOverAirPlayVideo;
- (bool)someSharePlayCapableCallSessionIsActive;
- (int)toggleInputMute;
- (void)volumeCategoryAndMode:(id)arg1 mode:(id)arg2 outCategoryCopy:(id*)arg3 outModeCopy:(id*)arg4;

@end
