
@interface MXSessionManager : NSObject {
    NSString * _appAllowedToFadeInTemporarily;
    NSString * _appAllowedToInitiatePlaybackTemporarily;
    NSString * _appAllowedToInitiateRecordingTemporarily;
    NSDate * _appAllowedToInitiateRecordingTemporarilyTimestamp;
    NSNumber * _applyUplinkMuteToPhoneCallBehaviorSession;
    NSSet * _audioCategoriesWithInput;
    NSDictionary * _audioDeviceInfo;
    NSSet * _audioModesWithShortVoicePromptStyle;
    bool  _carPlayIsConnected;
    NSString * _currentAudioCategory;
    NSString * _currentAudioMode;
    unsigned int  _currentStream0;
    NSString * _defaultMusicApp;
    NSDictionary * _detailedRoutesDescription;
    NSDictionary * _devicesSampleRates;
    NSDictionary * _figCategoryToMuteabilityDict;
    NSDictionary * _figCategoryToOutputOverridabilityDict;
    NSDictionary * _figCategoryToVADCategoryDict;
    NSDictionary * _figCustomizedCategoryWithBluetooth_Dict;
    NSDictionary * _figCustomizedCategoryWithDefaultBuiltIn_Default_Dict;
    NSDictionary * _figCustomizedCategoryWithDefaultBuiltIn_Receiver_Dict;
    NSDictionary * _figCustomizedCategoryWithDefaultBuiltIn_Speaker_Dict;
    NSDictionary * _figCustomizedCategoryWithoutBluetooth_Dict;
    NSDictionary * _figModeTypeToVADModeType;
    NSDictionary * _figRouteToVADInputPortTypeDict;
    NSDictionary * _figRouteToVADOutputPortTypeDict;
    NSDictionary * _figUncustomizedCategory_Dict;
    NSArray * _longFormVideoApps;
    NSSet * _mutedSessionBundleIDs;
    NSPointerArray * _mxCoreSessionList;
    unsigned int  _mxCoreSessionListActiveReaders;
    NSLock * _mxCoreSessionListReadLock;
    NSObject<OS_dispatch_semaphore> * _mxCoreSessionListWriteSemaphore;
    NSString * _nowPlayingAppDisplayID;
    NSDate * _nowPlayingAppStopTime;
    NSMutableDictionary * _pickableRoutesDescriptions;
    NSRecursiveLock * _propertiesLock;
    NSMutableDictionary * _quiesceableWiredPortsAutoRouteOnConnectPreference;
    NSArray * _recordingClientPIDs;
    NSPointerArray * _sessionsThatWantToSuspendNeroScreenMirroring;
    unsigned int  _silentModeClient;
    bool  _silentModeEnabled;
    NSDate * _silentModeEnabledUntilTime;
    NSString * _silentModeReason;
    bool  _starkMainAudioIsOwnedByiOSButBorrowedByCar;
    NSString * _systemMirroringRoutingContextUUID;
    bool  _uplinkMute;
    bool  _uplinkMuteSetByClient;
    NSString * _uplinkMutedBundleID;
    NSDictionary * _vadIDToName;
    NSDictionary * _vadInputPortTypeToFigInputDeviceNameDict;
    NSDictionary * _vadNameToID;
    NSDictionary * _vadOutputPortTypeToFigOutputDeviceNameDict;
    NSDictionary * _vadOutputPortTypeToMuteabilityDict;
    bool  _voiceOverVADVolumeNeedsUpdate;
    bool  _wombatEnabled;
}

@property (nonatomic) unsigned int actuatorVADID;
@property (retain) NSString *appAllowedToFadeInTemporarily;
@property (retain) NSString *appAllowedToInitiatePlaybackTemporarily;
@property (retain) NSString *appAllowedToInitiateRecordingTemporarily;
@property (readonly, retain) NSDate *appAllowedToInitiateRecordingTemporarilyTimestamp;
@property (retain) NSNumber *applyUplinkMuteToPhoneCallBehaviorSession;
@property (nonatomic, readonly) NSSet *audioCategoriesWithInput;
@property (retain) NSDictionary *audioDeviceInfo;
@property (nonatomic, readonly) NSSet *audioModesWithShortVoicePromptStyle;
@property (nonatomic) bool carPlayIsConnected;
@property (retain) NSString *currentAudioCategory;
@property (retain) NSString *currentAudioMode;
@property unsigned int currentStream0;
@property (nonatomic) unsigned int decoupledInputVADID;
@property (retain) NSString *defaultMusicApp;
@property (nonatomic) unsigned int defaultVADID;
@property (retain) NSDictionary *detailedRoutesDescription;
@property (retain) NSDictionary *devicesSampleRates;
@property (nonatomic, retain) NSDictionary *figCategoryToMuteabilityDict;
@property (nonatomic, retain) NSDictionary *figCategoryToOutputOverridabilityDict;
@property (nonatomic, retain) NSDictionary *figCategoryToVADCategoryDict;
@property (nonatomic, retain) NSDictionary *figCustomizedCategoryWithBluetooth_Dict;
@property (nonatomic, retain) NSDictionary *figCustomizedCategoryWithDefaultBuiltIn_Default_Dict;
@property (nonatomic, retain) NSDictionary *figCustomizedCategoryWithDefaultBuiltIn_Receiver_Dict;
@property (nonatomic, retain) NSDictionary *figCustomizedCategoryWithDefaultBuiltIn_Speaker_Dict;
@property (nonatomic, retain) NSDictionary *figCustomizedCategoryWithoutBluetooth_Dict;
@property (nonatomic, retain) NSDictionary *figModeTypeToVADModeType;
@property (nonatomic, retain) NSDictionary *figRouteToVADInputPortTypeDict;
@property (nonatomic, retain) NSDictionary *figRouteToVADOutputPortTypeDict;
@property (nonatomic, retain) NSDictionary *figUncustomizedCategory_Dict;
@property (nonatomic, retain) NSArray *longFormVideoApps;
@property (nonatomic) unsigned int lowLatencyVADID;
@property (nonatomic) unsigned int musicVADID;
@property (retain) NSSet *mutedSessionBundleIDs;
@property (nonatomic, retain) NSPointerArray *mxCoreSessionList;
@property (nonatomic) unsigned int mxCoreSessionListActiveReaders;
@property (nonatomic, retain) NSLock *mxCoreSessionListReadLock;
@property (nonatomic, retain) NSObject<OS_dispatch_semaphore> *mxCoreSessionListWriteSemaphore;
@property (retain) NSString *nowPlayingAppDisplayID;
@property (retain) NSDate *nowPlayingAppStopTime;
@property (nonatomic) unsigned int perAppAirPlayVADID;
@property (nonatomic, retain) NSMutableDictionary *pickableRoutesDescriptions;
@property (nonatomic, retain) NSRecursiveLock *propertiesLock;
@property (retain) NSMutableDictionary *quiesceableWiredPortsAutoRouteOnConnectPreference;
@property (nonatomic, retain) NSArray *recordingClientPIDs;
@property (nonatomic, retain) NSPointerArray *sessionsThatWantToSuspendNeroScreenMirroring;
@property (nonatomic) unsigned int silentModeClient;
@property (nonatomic) bool silentModeEnabled;
@property (retain) NSDate *silentModeEnabledUntilTime;
@property (retain) NSString *silentModeReason;
@property (nonatomic) unsigned int siriOutputVADID;
@property (nonatomic) unsigned int speakerAlertVADID;
@property (nonatomic) unsigned int speechDetectionVADID;
@property (nonatomic) bool starkMainAudioIsOwnedByiOSButBorrowedByCar;
@property (nonatomic, retain) NSString *systemMirroringRoutingContextUUID;
@property (nonatomic) unsigned int systemSoundLocalVADID;
@property (nonatomic) unsigned int systemSoundRemoteVADID;
@property (nonatomic) bool uplinkMute;
@property (nonatomic) bool uplinkMuteSetByClient;
@property (retain) NSString *uplinkMutedBundleID;
@property (retain) NSDictionary *vadIDToName;
@property (nonatomic, retain) NSDictionary *vadInputPortTypeToFigInputDeviceNameDict;
@property (retain) NSDictionary *vadNameToID;
@property (nonatomic, retain) NSDictionary *vadOutputPortTypeToFigOutputDeviceNameDict;
@property (nonatomic, retain) NSDictionary *vadOutputPortTypeToMuteabilityDict;
@property bool voiceOverVADVolumeNeedsUpdate;
@property (nonatomic) bool wombatEnabled;

+ (id)copyDefaultMusicAppFromPlist;
+ (id)copySilentModeUntilTimeFromDisk;
+ (bool)getSilentModeStateFromDisk;
+ (id)sharedInstance;

- (unsigned int)actuatorVADID;
- (void)addDuckerToSession:(id)arg1 duckerSession:(id)arg2 duckingSource:(id)arg3;
- (unsigned long long)addSessionThatWantsToSuspendNeroScreenMirroring:(id)arg1;
- (id)appAllowedToFadeInTemporarily;
- (id)appAllowedToInitiatePlaybackTemporarily;
- (id)appAllowedToInitiateRecordingTemporarily;
- (id)appAllowedToInitiateRecordingTemporarilyTimestamp;
- (void)appToInterruptCurrentNowPlayingSession:(id)arg1;
- (void)applyUplinkMute:(id)arg1;
- (id)applyUplinkMuteToPhoneCallBehaviorSession;
- (bool)areBothBudsInEarForA2DPPort;
- (bool)areSessionsWithAudioModesActive:(id)arg1;
- (id)audioCategoriesWithInput;
- (id)audioDeviceInfo;
- (id)audioModesWithShortVoicePromptStyle;
- (void)blurOnAudioAccessory:(id)arg1 duckerSession:(id)arg2 duckVolume:(float)arg3 duckFadeDuration:(float)arg4;
- (void)cancelAnyInProgressRampIfNeeded:(id)arg1 reason:(unsigned short)arg2;
- (bool)carPlayIsConnected;
- (void)cleanupSessionAssertionsIfNeeded:(id)arg1 cleanupReason:(long long)arg2;
- (id)copyDetailedRouteDescription:(unsigned int)arg1;
- (id)copyHighestPriorityActiveSession:(id)arg1 deviceIdentifier:(id)arg2;
- (id)copyInterruptedSessions:(id)arg1;
- (id)copyMXCoreSessionList;
- (id)copyPhoneCallBehaviorRecordingSession;
- (id)copyPotentialActiveSharePlayMediaSession;
- (id)copySessionInformationFromVARouteConfiguration:(id)arg1;
- (id)copySessionToBeMuted:(struct { unsigned int x1[8]; })arg1;
- (id)copySessionWithPID:(int)arg1;
- (id)copySpeechDetectSession;
- (id)copyVoiceOverSession;
- (id)currentAudioCategory;
- (id)currentAudioMode;
- (unsigned int)currentSpeechDetectStyle:(id)arg1;
- (unsigned int)currentStream0;
- (void)dealloc;
- (unsigned int)decoupledInputVADID;
- (id)defaultMusicApp;
- (unsigned int)defaultVADID;
- (id)detailedRoutesDescription;
- (id)devicesSampleRates;
- (bool)doesSessionPreferInterruptionOnRouteDisconnect:(id)arg1;
- (void)duckSessionIfDuckerIsActive:(id)arg1;
- (void)duckSessionsForDucker:(id)arg1 sessionsToDuck:(id)arg2;
- (void)duckVolume:(id)arg1 duckerSession:(id)arg2 duckingSource:(id)arg3;
- (id)figCategoryToMuteabilityDict;
- (id)figCategoryToOutputOverridabilityDict;
- (id)figCategoryToVADCategoryDict;
- (id)figCustomizedCategoryWithBluetooth_Dict;
- (id)figCustomizedCategoryWithDefaultBuiltIn_Default_Dict;
- (id)figCustomizedCategoryWithDefaultBuiltIn_Receiver_Dict;
- (id)figCustomizedCategoryWithDefaultBuiltIn_Speaker_Dict;
- (id)figCustomizedCategoryWithoutBluetooth_Dict;
- (id)figModeTypeToVADModeType;
- (id)figRouteToVADInputPortTypeDict;
- (id)figRouteToVADOutputPortTypeDict;
- (id)figUncustomizedCategory_Dict;
- (id)getBluetoothCustomizedAlternateCategory:(id)arg1 enableBluetooth:(bool)arg2;
- (id)getCleanupSessionAssertionReasonString:(long long)arg1;
- (id)getClientPriorityAsString:(unsigned int)arg1;
- (id)getDefaultBuiltInCustomizedAlternateCategory:(id)arg1 defaultBuiltInRoute:(id)arg2;
- (float)getDuckVolumeForBlurEffect:(id)arg1 duckeeSession:(id)arg2;
- (id)getDuckingSource:(id)arg1 duckerSession:(id)arg2;
- (int)getMuteState:(struct { unsigned int x1[8]; })arg1 outMuteValue:(bool*)arg2;
- (bool)getQuiesceableWiredPortAutoRouteOnConnectPreference:(unsigned int)arg1;
- (float)getScalarVolume:(float)arg1;
- (int)getSessionPriority:(struct MXSessionPlayingInfo { id x1; id x2; unsigned int x3; id x4; id x5; })arg1 forTipi:(bool)arg2;
- (id)getSilentModeClientTypeAsString:(unsigned int)arg1;
- (unsigned int)getSpeechDetectStyleForSessionConfiguration:(id)arg1;
- (id)getUncustomizedCategory:(id)arg1;
- (void)getUpdatedDuckVolume:(id)arg1 outDuckVolume:(float*)arg2;
- (void)handleSilentModeTimerDidFire;
- (id)init;
- (void)interruptPlayingSessionsNotOptedIntoWombat;
- (void)interruptSessionsForCategoryNoLongerRoutable;
- (void)interruptSessionsOnRouteDisconnect:(id)arg1;
- (bool)isAnExistingDuckingSource:(id)arg1;
- (bool)isAnyOtherUnduckedPlayingSessionMatchingVolumeRampCategory:(id)arg1;
- (bool)isAtleastOneBudNotInEarForA2DPPort;
- (bool)isAudioCategoryAllowedForSharePlayMedia:(id)arg1;
- (bool)isAudioCategoryMuteable:(id)arg1;
- (bool)isAuditTokenEqual:(struct { unsigned int x1[8]; })arg1 compareTo:(struct { unsigned int x1[8]; })arg2;
- (bool)isAuditTokenValid:(struct { unsigned int x1[8]; })arg1;
- (bool)isCurrentPortTypeMuteable:(unsigned int)arg1;
- (bool)isLongFormVideoApp:(id)arg1;
- (bool)isPotentialSharePlayMediaSessionActive;
- (bool)isSessionAllowedToStartRecordingTemporarily:(id)arg1;
- (bool)isSessionDucked:(id)arg1 duckingSource:(id)arg2;
- (bool)isSessionWithAudioCategoryActive:(id)arg1;
- (bool)isSessionWithAudioModeActive:(id)arg1;
- (bool)isSessionWithAudioModePlaying:(id)arg1;
- (bool)isSessionWithAudioModeRecording:(id)arg1;
- (bool)isSmartRoutingEligibleSessionAvailable;
- (bool)isSpeechDetectCategory:(id)arg1;
- (id)longFormVideoApps;
- (unsigned int)lowLatencyVADID;
- (void)makeStarkPortRoutableForPhoneCall:(bool)arg1;
- (void)makeStarkPortRoutableForPlayingSession:(bool)arg1;
- (unsigned int)musicVADID;
- (id)mutedSessionBundleIDs;
- (id)mxCoreSessionList;
- (unsigned int)mxCoreSessionListActiveReaders;
- (unsigned long long)mxCoreSessionListAddSession:(id)arg1;
- (void)mxCoreSessionListBeginIteration;
- (void)mxCoreSessionListEndIteration;
- (id)mxCoreSessionListReadLock;
- (unsigned long long)mxCoreSessionListRemoveSession:(id)arg1;
- (id)mxCoreSessionListWriteSemaphore;
- (id)nowPlayingAppDisplayID;
- (void)nowPlayingAppShouldResumeForCarPlay:(bool)arg1;
- (id)nowPlayingAppStopTime;
- (unsigned int)perAppAirPlayVADID;
- (id)pickableRoutesDescriptions;
- (void)postDisallowedActivationDueToContinuityCaptureNotification:(bool)arg1 videoPlaybackWasIntended:(bool)arg2;
- (id)propertiesLock;
- (id)quiesceableWiredPortsAutoRouteOnConnectPreference;
- (id)recordingClientPIDs;
- (void)refreshDeviceSampleRateCache;
- (void)removeDuckerForSession:(id)arg1 sessionCausingUnduck:(id)arg2 duckingSource:(id)arg3 outLastDuckingSourceWasRemoved:(bool*)arg4;
- (void)removeEntryFromMutedBundleIDCache:(int)arg1 bundleID:(id)arg2;
- (unsigned long long)removeSessionThatWantsToSuspendNeroScreenMirroring:(id)arg1;
- (void)removeSilentModeTimer;
- (void)replaceMutedBundleIDwithHostID;
- (void)resetDefaultMusicApp;
- (void)resetWaitingToResume:(id)arg1;
- (void)ringerIsOnChanged:(bool)arg1;
- (bool)sessionCanBecomeSharePlayMedia:(id)arg1;
- (id)sessionsThatWantToSuspendNeroScreenMirroring;
- (void)setActuatorVADID:(unsigned int)arg1;
- (void)setAppAllowedToFadeInTemporarily:(id)arg1;
- (void)setAppAllowedToInitiatePlaybackTemporarily:(id)arg1;
- (void)setAppAllowedToInitiateRecordingTemporarily:(id)arg1;
- (void)setApplyUplinkMuteToPhoneCallBehaviorSession:(id)arg1;
- (void)setAudioDeviceInfo:(id)arg1;
- (void)setCarPlayIsConnected:(bool)arg1;
- (void)setCurrentAudioCategory:(id)arg1;
- (void)setCurrentAudioMode:(id)arg1;
- (void)setCurrentStream0:(unsigned int)arg1;
- (void)setDecoupledInputVADID:(unsigned int)arg1;
- (void)setDefaultMusicApp:(id)arg1;
- (void)setDefaultVADID:(unsigned int)arg1;
- (void)setDetailedRoutesDescription:(id)arg1;
- (void)setDevicesSampleRates:(id)arg1;
- (void)setFigCategoryToMuteabilityDict:(id)arg1;
- (void)setFigCategoryToOutputOverridabilityDict:(id)arg1;
- (void)setFigCategoryToVADCategoryDict:(id)arg1;
- (void)setFigCustomizedCategoryWithBluetooth_Dict:(id)arg1;
- (void)setFigCustomizedCategoryWithDefaultBuiltIn_Default_Dict:(id)arg1;
- (void)setFigCustomizedCategoryWithDefaultBuiltIn_Receiver_Dict:(id)arg1;
- (void)setFigCustomizedCategoryWithDefaultBuiltIn_Speaker_Dict:(id)arg1;
- (void)setFigCustomizedCategoryWithoutBluetooth_Dict:(id)arg1;
- (void)setFigModeTypeToVADModeType:(id)arg1;
- (void)setFigRouteToVADInputPortTypeDict:(id)arg1;
- (void)setFigRouteToVADOutputPortTypeDict:(id)arg1;
- (void)setFigUncustomizedCategory_Dict:(id)arg1;
- (void)setLongFormVideoApps:(id)arg1;
- (void)setLowLatencyVADID:(unsigned int)arg1;
- (void)setMusicVADID:(unsigned int)arg1;
- (void)setMutedSessionBundleIDs:(id)arg1;
- (void)setMxCoreSessionList:(id)arg1;
- (void)setMxCoreSessionListActiveReaders:(unsigned int)arg1;
- (void)setMxCoreSessionListReadLock:(id)arg1;
- (void)setMxCoreSessionListWriteSemaphore:(id)arg1;
- (void)setNowPlayingAppDisplayID:(id)arg1;
- (void)setNowPlayingAppStopTime:(id)arg1;
- (void)setPerAppAirPlayVADID:(unsigned int)arg1;
- (void)setPickableRoutesDescriptions:(id)arg1;
- (void)setPropertiesLock:(id)arg1;
- (void)setQuiesceableWiredPortPreference:(unsigned int)arg1 autoRouteOnConnect:(bool)arg2;
- (void)setQuiesceableWiredPortsAutoRouteOnConnectPreference:(id)arg1;
- (void)setRecordingClientPIDs:(id)arg1;
- (void)setSessionsThatWantToSuspendNeroScreenMirroring:(id)arg1;
- (void)setSilentModeClient:(unsigned int)arg1;
- (void)setSilentModeEnabled:(bool)arg1;
- (void)setSilentModeEnabledUntilTime:(id)arg1;
- (void)setSilentModeReason:(id)arg1;
- (void)setSiriOutputVADID:(unsigned int)arg1;
- (void)setSpeakerAlertVADID:(unsigned int)arg1;
- (void)setSpeechDetectionVADID:(unsigned int)arg1;
- (void)setStarkMainAudioIsOwnedByiOSButBorrowedByCar:(bool)arg1;
- (void)setSystemMirroringRoutingContextUUID:(id)arg1;
- (void)setSystemSoundLocalVADID:(unsigned int)arg1;
- (void)setSystemSoundRemoteVADID:(unsigned int)arg1;
- (void)setUpStringConversionDictionaries;
- (void)setUplinkMute:(bool)arg1;
- (void)setUplinkMuteSetByClient:(bool)arg1;
- (void)setUplinkMutedBundleID:(id)arg1;
- (void)setVADID:(unsigned int)arg1 forVADName:(id)arg2;
- (void)setVadIDToName:(id)arg1;
- (void)setVadInputPortTypeToFigInputDeviceNameDict:(id)arg1;
- (void)setVadNameToID:(id)arg1;
- (void)setVadOutputPortTypeToFigOutputDeviceNameDict:(id)arg1;
- (void)setVadOutputPortTypeToMuteabilityDict:(id)arg1;
- (void)setVoiceOverVADVolumeNeedsUpdate:(bool)arg1;
- (void)setWombatEnabled:(bool)arg1;
- (bool)shouldBlurOnAudioAccessory:(id)arg1 duckerSession:(id)arg2;
- (bool)shouldResetWaitingToResume:(id)arg1 currentSession:(id)arg2;
- (bool)shouldSetDeviceFormatAndSampleRate:(id)arg1;
- (unsigned int)silentModeClient;
- (bool)silentModeEnabled;
- (id)silentModeEnabledUntilTime;
- (id)silentModeReason;
- (unsigned int)siriOutputVADID;
- (unsigned int)speakerAlertVADID;
- (unsigned int)speechDetectionVADID;
- (bool)starkMainAudioIsOwnedByiOSButBorrowedByCar;
- (id)systemMirroringRoutingContextUUID;
- (unsigned int)systemSoundLocalVADID;
- (unsigned int)systemSoundRemoteVADID;
- (bool)unblurOnAudioAccessory:(id)arg1 unduckDuration:(float)arg2;
- (void)unduckSessionsForDucker:(id)arg1;
- (void)unduckSessionsForDuckingSource:(id)arg1;
- (void)unduckVolume:(id)arg1 sessionCausingUnduck:(id)arg2 duckingSource:(id)arg3;
- (void)updateActiveSessionInformation;
- (void)updateActiveSessionsOnDeviceRelinquished;
- (void)updateDetailedRouteDescription:(unsigned int)arg1;
- (void)updateDeviceSampleRate:(unsigned int)arg1;
- (int)updateDuckToLevelScalarSetByClient:(bool)arg1 session:(id)arg2 newLevel:(float)arg3 newLevelSetByClient:(bool)arg4 currentLevel:(float)arg5 currentLevelSetByClient:(bool)arg6;
- (void)updateDuckVolume:(id)arg1 duckerSession:(id)arg2 duckVolume:(float)arg3 duckFadeDuration:(float)arg4;
- (bool)updateDuckVolumeForDucker:(id)arg1 duckVolume:(float)arg2 duckFadeDuration:(float)arg3;
- (void)updateDuckingSourceInfoForSession:(id)arg1 duckerSession:(id)arg2 duckVolume:(float)arg3 duckFadeDuration:(float)arg4;
- (int)updateMuteState:(struct { unsigned int x1[8]; })arg1 muteValue:(id)arg2;
- (void)updateMutedBundleIDs:(id)arg1 muteValue:(bool)arg2;
- (void)updateNeroScreenState:(id)arg1 suspendScreen:(bool)arg2;
- (void)updateSilentModeState:(bool)arg1 untilTime:(id)arg2 withReason:(id)arg3 forClientType:(unsigned int)arg4 updateForStartup:(bool)arg5;
- (void)updateSilentModeTimer:(bool)arg1 untilTime:(id)arg2 clientType:(unsigned int)arg3;
- (void)updateUnduckVolume:(id)arg1 duckerSession:(id)arg2 unduckVolume:(float)arg3 unduckFadeDuration:(float)arg4;
- (bool)updateUnduckVolumeForDucker:(id)arg1 unduckVolume:(float)arg2 unduckFadeDuration:(float)arg3;
- (bool)uplinkMute;
- (bool)uplinkMuteSetByClient;
- (id)uplinkMutedBundleID;
- (id)vadIDToName;
- (id)vadInputPortTypeToFigInputDeviceNameDict;
- (id)vadNameToID;
- (id)vadOutputPortTypeToFigOutputDeviceNameDict;
- (id)vadOutputPortTypeToMuteabilityDict;
- (bool)voiceOverVADVolumeNeedsUpdate;
- (void)volumePreferenceDidChangeCallback:(id)arg1;
- (bool)wombatEnabled;

@end
