
@interface PHAJobCoordinator : NSObject <PHAActivityGovernorDelegate, PHAJobCoalescerDelegate, PHAJobConstraintsObserverDelegate, PHAServiceOperationHandling, PHAWorkerJobDelegate> {
    PHAActivityGovernor * _activityGovernor;
    NSDictionary * _cachedWorkersByType;
    PHAJobConstraintsObserver * _constraintsObserver;
    PHAWorkerJob * _currentBackgroundJob;
    PHAJobConstraints * _currentConstraints;
    PHAWorkerJob * _currentForegroundJob;
    <PHAJobCoordinatorDelegate> * _delegate;
    NSObject<OS_os_transaction> * _foregroundTransaction;
    PHAWorkerHealthMonitor * _healthMonitor;
    PHAJobCoalescer * _jobCoalescer;
    PHAJobGenerator * _jobGenerator;
    NSObject<OS_dispatch_source> * _maintenanceTimer;
    PHAManager * _manager;
    double  _maxIntervalSinceLastJobReport;
    bool  _newConstraintsPending;
    _Atomic int  _pendingAsyncTasksCount;
    _Atomic unsigned long long  _processingQOS;
    NSObject<OS_dispatch_queue> * _queue;
    NSObject<OS_os_transaction> * _runningJobTransaction;
    bool  _shouldIgnoreConstraintChanges;
    NSMutableArray * _waitingForegroundJobs;
    PHAWorkerWarmer * _warmer;
    NSMutableSet * _workerTypesServicedForUserFG;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _workersByTypeLock;
}

@property (nonatomic, readonly) PHAActivityGovernor *activityGovernor;
@property (nonatomic) bool activityGovernorOverride;
@property (nonatomic, readonly) PHAJobConstraintsObserver *constraintsObserver;
@property (nonatomic, retain) PHAWorkerJob *currentBackgroundJob;
@property (readonly, copy) PHAJobConstraints *currentConstraints;
@property (nonatomic, retain) PHAWorkerJob *currentForegroundJob;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PHAJobCoordinatorDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSObject<OS_os_transaction> *foregroundTransaction;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) PHAWorkerHealthMonitor *healthMonitor;
@property (nonatomic, readonly) PHAJobCoalescer *jobCoalescer;
@property (nonatomic, readonly) PHAJobGenerator *jobGenerator;
@property (nonatomic, readonly) NSObject<OS_dispatch_source> *maintenanceTimer;
@property (nonatomic) PHAManager *manager;
@property (nonatomic) double maxIntervalSinceLastJobReport;
@property (nonatomic) bool newConstraintsPending;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (getter=isQuiescent, nonatomic, readonly) bool quiescent;
@property (nonatomic, retain) NSObject<OS_os_transaction> *runningJobTransaction;
@property (nonatomic) bool shouldIgnoreConstraintChanges;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSMutableArray *waitingForegroundJobs;
@property (nonatomic, readonly) PHAWorkerWarmer *warmer;
@property (nonatomic, retain) NSMutableSet *workerTypesServicedForUserFG;
@property (nonatomic, readonly) NSDictionary *workersByType;

- (void).cxx_destruct;
- (id)_defaultWorkersByType;
- (void)_dispatchTransactionAsyncWithName:(const char *)arg1 block:(id /* block */)arg2;
- (void)_inq_enforceTimeoutForJob:(id)arg1;
- (void)_inq_enqueueForegroundJob:(id)arg1;
- (void)_inq_handleJobFinished:(id)arg1;
- (void)_inq_handleNoMoreJobsExpected;
- (bool)_inq_isQuiescent;
- (void)_inq_launchJob:(id)arg1;
- (id)_inq_nextForegroundJobCanRunAutomatic:(bool)arg1 canRunUserFG:(bool)arg2 canRunImmediate:(bool)arg3;
- (void)_inq_reconsiderWantsFGActivityBasedOnConstraints:(id)arg1;
- (id)_inq_runningJobs;
- (void)_inq_stopJobDueToConstraintOrActivityChange:(id)arg1;
- (void)_inq_stopJobsAfterConstraintOrActivityChange;
- (void)_inq_timeoutJob:(id)arg1;
- (void)_installMaintenanceTimer;
- (id)_nextAdditionalJobForWorkerTypeObj:(id)arg1 scenario:(unsigned long long)arg2;
- (void)_scheduleNextJob;
- (id)_workerForJob:(id)arg1;
- (id)activityGovernor;
- (bool)activityGovernorOverride;
- (void)addWorker:(id)arg1;
- (id)constraintsObserver;
- (id)currentBackgroundJob;
- (id)currentConstraints;
- (id)currentForegroundJob;
- (void)dealloc;
- (id)delegate;
- (id)description;
- (void)didFinishJob:(id)arg1;
- (void)enforceTimeouts;
- (void)enqueueForegroundJob:(id)arg1;
- (id)foregroundTransaction;
- (void)governorDidGrantBackgroundAccess:(id)arg1;
- (void)governorDidGrantForegroundAccess:(id)arg1;
- (void)governorDidRevokeBackgroundAccess:(id)arg1;
- (void)governorDidRevokeForegroundAccess:(id)arg1;
- (void)handleOperation:(id)arg1;
- (id)healthMonitor;
- (id)initWithManager:(id)arg1;
- (id)initWithManager:(id)arg1 initialConstraints:(id)arg2 additionalWorkersByType:(id)arg3;
- (bool)isQuiescent;
- (id)jobCoalescer;
- (void)jobCoalescer:(id)arg1 didProduceJob:(id)arg2;
- (void)jobConstraintsObserver:(id)arg1 constraintsDidChange:(id)arg2 mask:(id)arg3 completion:(id /* block */)arg4;
- (id)jobGenerator;
- (id)maintenanceTimer;
- (id)manager;
- (double)maxIntervalSinceLastJobReport;
- (bool)newConstraintsPending;
- (void)operationDidFinish:(id)arg1;
- (id)photoLibrary;
- (void)processJobs;
- (id)queue;
- (id)runningJobTransaction;
- (void)setActivityGovernorOverride:(bool)arg1;
- (void)setCurrentBackgroundJob:(id)arg1;
- (void)setCurrentConstraints:(id)arg1;
- (void)setCurrentForegroundJob:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setForegroundTransaction:(id)arg1;
- (void)setManager:(id)arg1;
- (void)setMaxIntervalSinceLastJobReport:(double)arg1;
- (void)setNewConstraintsPending:(bool)arg1;
- (void)setQueue:(id)arg1;
- (void)setRunningJobTransaction:(id)arg1;
- (void)setShouldIgnoreConstraintChanges:(bool)arg1;
- (void)setWorkerTypesServicedForUserFG:(id)arg1;
- (bool)shouldIgnoreConstraintChanges;
- (void)shutdown;
- (id)statusAsDictionary;
- (bool)validateOperation:(id)arg1 forConnection:(id)arg2;
- (id)waitingForegroundJobs;
- (id)warmer;
- (id)workerTypesServicedForUserFG;
- (id)workersByType;

@end
