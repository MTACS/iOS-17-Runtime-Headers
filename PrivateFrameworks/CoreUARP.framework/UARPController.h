
@interface UARPController : NSObject {
    NSMutableDictionary * _accessories;
    NSMutableDictionary * _assetAvailabilityNotificationTokenDict;
    NSMutableDictionary * _assetAvailabilityUARPProductGroupNotificationTokenDict;
    NSCache * _assetCache;
    NSMutableDictionary * _attestationCertificatesAvailabilitySubjectKeyIdentifierNotificationTokenDict;
    <UARPControllerChipInfoDelegate> * _chipInfoDelegate;
    NSObject<OS_os_log> * _controllerLog;
    <UARPControllerDelegateProtocol> * _delegate;
    NSObject<OS_dispatch_queue> * _delegateQueue;
    NSMutableDictionary * _generalNotificationTokenDict;
    <UARPControllerInternalDelegate> * _internalDelegate;
    NSObject<OS_dispatch_queue> * _internalQueue;
    bool  _isInternalBuild;
    UARPPacketDumper * _packetDumper;
    UARPPowerLogManager * _powerLogManager;
    NSMutableDictionary * _supplementalAssetAvailabilityNotificationTokenDict;
    UARPAnalyticsUpdateFirmwareManager * _updateFirmwareAnalytics;
    UARPUploader * _uploader;
    NSObject<OS_os_log> * _xpcLog;
}

@property (readonly) NSArray *accessoryList;
@property <UARPControllerDelegateProtocol> *delegate;

- (void).cxx_destruct;
- (bool)accessoryIDKnown:(id)arg1;
- (bool)accessoryKnown:(id)arg1;
- (id)accessoryList;
- (bool)accessoryReachable:(id)arg1;
- (bool)accessoryReachableInternal:(id)arg1;
- (void)accessoryTransportNeeded:(id)arg1 isNeeded:(bool)arg2;
- (bool)accessoryUnreachable:(id)arg1;
- (bool)accessoryUnreachableInternal:(id)arg1;
- (bool)addAccessory:(id)arg1 assetID:(id)arg2;
- (bool)applyFirmwareUpdateOnAccessoryList:(id)arg1 withUserIntent:(bool)arg2;
- (bool)applyStagedFirmwareOnAccessoryList:(id)arg1 withUserIntent:(bool)arg2;
- (void)assetAvailabilityNotificationPosted:(int)arg1;
- (id)assetAvailabilityTokenForAccessory:(id)arg1;
- (void)assetAvailablityUpdateForAccessory:(id)arg1 assetID:(id)arg2;
- (void)assetAvailablityUpdateForAccessoryID:(id)arg1 assetID:(id)arg2;
- (void)assetSolicitationComplete:(id)arg1 assetID:(id)arg2 withStatus:(unsigned long long)arg3;
- (void)assetSolicitationProgress:(id)arg1 assetID:(id)arg2 bytesReceived:(unsigned long long)arg3 bytesTotal:(unsigned long long)arg4;
- (void)availabilityNotificationForAttestationCertificatesPosted:(int)arg1;
- (void)availabilityNotificationForSupportedAccessoriesPosted:(int)arg1;
- (bool)cancelFirmwareStagingForAccessory:(id)arg1 assetID:(id)arg2;
- (bool)cancelFirmwareUpdateOnAccessoryList:(id)arg1;
- (bool)changeAssetLocation:(id)arg1 assetID:(id)arg2;
- (bool)checkForUpdate:(id)arg1;
- (id)createSupportedAccessory:(id)arg1 accessoryMetadata:(id)arg2;
- (void)dealloc;
- (id)delegate;
- (bool)disableTRMSystemAuthenticationForRegistryEntryID:(id)arg1;
- (bool)downloadAvailableFirmwareUpdate:(id)arg1 assetID:(id)arg2 withUserIntent:(bool)arg3;
- (bool)downloadReleaseNotes:(id)arg1 assetID:(id)arg2;
- (bool)dynamicAssetAvailableForAccessory:(id)arg1 assetID:(id)arg2 error:(id*)arg3;
- (bool)enableTRMSystemAuthenticationForRegistryEntryID:(id)arg1;
- (void)firmwareStagingComplete:(id)arg1 assetID:(id)arg2 withStatus:(unsigned long long)arg3;
- (void)firmwareStagingDataBlockTransferred:(id)arg1 assetID:(id)arg2 offset:(unsigned int)arg3 blockSize:(unsigned int)arg4;
- (void)firmwareStagingProgress:(id)arg1 assetID:(id)arg2 bytesSent:(unsigned long long)arg3 bytesTotal:(unsigned long long)arg4;
- (void)firmwareUpdateResult:(id)arg1 vendorSpecificStatus:(unsigned int)arg2 error:(id)arg3;
- (void)genericNotificationPosted:(int)arg1;
- (bool)getAttestationCertificates:(id)arg1 assetLocationType:(long long)arg2;
- (bool)getAttestationCertificatesInternal:(id)arg1 assetID:(id)arg2;
- (bool)getSupportedAccessories:(id)arg1 assetLocationType:(long long)arg2;
- (bool)getSupportedAccessoriesInternal:(id)arg1 assetID:(id)arg2;
- (void)handleReceivedAttestationCertificates:(id)arg1 forSubjectKeyIdentifier:(id)arg2;
- (id)init;
- (void)manifestPropertiesReceivedForAccessory:(id)arg1 assetTag:(unsigned int)arg2 properties:(id)arg3;
- (bool)pauseAssetTransfersForAccessory:(id)arg1;
- (id)pendingAssetForAccessory:(id)arg1 assetID:(id)arg2;
- (void)personalizationResponseForAccessoryID:(id)arg1 response:(id)arg2 error:(id)arg3;
- (bool)personalizationVectorForAccessory:(id)arg1 assetTag:(unsigned int)arg2 outVector:(unsigned int*)arg3;
- (void)progressForUARPConsent:(id)arg1 bytesSent:(unsigned long long)arg2 bytesTotal:(unsigned long long)arg3;
- (void)progressForUARPConsentInPostLogout:(id)arg1 bytesSent:(unsigned long long)arg2 bytesTotal:(unsigned long long)arg3;
- (void)queryCompleteForAccessory:(id)arg1 appleModelNumber:(id)arg2 error:(id)arg3;
- (void)queryCompleteForAccessory:(id)arg1 boardID:(unsigned long long)arg2 error:(id)arg3;
- (void)queryCompleteForAccessory:(id)arg1 chipID:(unsigned long long)arg2 error:(id)arg3;
- (void)queryCompleteForAccessory:(id)arg1 chipRevision:(unsigned long long)arg2 error:(id)arg3;
- (void)queryCompleteForAccessory:(id)arg1 ecid:(unsigned long long)arg2 error:(id)arg3;
- (void)queryCompleteForAccessory:(id)arg1 enableMixMatch:(bool)arg2 error:(id)arg3;
- (void)queryCompleteForAccessory:(id)arg1 epoch:(unsigned long long)arg2 error:(id)arg3;
- (void)queryCompleteForAccessory:(id)arg1 firmwareVersion:(id)arg2 error:(id)arg3;
- (void)queryCompleteForAccessory:(id)arg1 friendlyName:(id)arg2 error:(id)arg3;
- (void)queryCompleteForAccessory:(id)arg1 hardwareVersion:(id)arg2 error:(id)arg3;
- (void)queryCompleteForAccessory:(id)arg1 hwFusingType:(id)arg2 error:(id)arg3;
- (void)queryCompleteForAccessory:(id)arg1 liveNonce:(bool)arg2 error:(id)arg3;
- (void)queryCompleteForAccessory:(id)arg1 manifestPrefix:(id)arg2 error:(id)arg3;
- (void)queryCompleteForAccessory:(id)arg1 manufacturer:(id)arg2 error:(id)arg3;
- (void)queryCompleteForAccessory:(id)arg1 modelName:(id)arg2 error:(id)arg3;
- (void)queryCompleteForAccessory:(id)arg1 prefixNeedsLUN:(bool)arg2 error:(id)arg3;
- (void)queryCompleteForAccessory:(id)arg1 productionMode:(unsigned long long)arg2 error:(id)arg3;
- (void)queryCompleteForAccessory:(id)arg1 securityDomain:(unsigned long long)arg2 error:(id)arg3;
- (void)queryCompleteForAccessory:(id)arg1 securityMode:(unsigned long long)arg2 error:(id)arg3;
- (void)queryCompleteForAccessory:(id)arg1 serialNumber:(id)arg2 error:(id)arg3;
- (void)queryCompleteForAccessory:(id)arg1 stagedFirmwareVersion:(id)arg2 error:(id)arg3;
- (void)queryCompleteForAccessory:(id)arg1 stats:(id)arg2 error:(id)arg3;
- (void)queryCompleteForAccessory:(id)arg1 suffixNeedsLUN:(bool)arg2 error:(id)arg3;
- (void)queryFirmwareUpdateResultForAccessory:(id)arg1;
- (long long)queryProperty:(unsigned long long)arg1 forAccessory:(id)arg2;
- (long long)queryPropertyInternal:(unsigned long long)arg1 forAccessory:(id)arg2;
- (bool)recvDataFromAccessory:(id)arg1 data:(id)arg2 error:(id*)arg3;
- (bool)registerForAssetAvailabilityNotification:(id)arg1;
- (bool)registerForAttestationCertificatesAvailability:(id)arg1;
- (bool)registerForGenericNotification:(id)arg1 notificationName:(id)arg2;
- (bool)registerForSupplementalAssetAvailabilityNotification:(id)arg1;
- (bool)registerForSupportedAccessoriesAvailability:(id)arg1;
- (bool)removeAccessory:(id)arg1;
- (bool)requestConsent:(id)arg1;
- (bool)rescindStagedFirmwareOnAccessoryList:(id)arg1 withUserIntent:(bool)arg2;
- (bool)resumeAssetTransfersForAccessory:(id)arg1;
- (bool)revokeConsentRequest:(id)arg1;
- (void)sendFirmwareUpdateProgressForAccessory:(id)arg1 assetID:(id)arg2 bytesSent:(unsigned long long)arg3 bytesTotal:(unsigned long long)arg4;
- (void)sendFirmwareUpdateProgressForUARPConsent:(id)arg1 bytesSent:(unsigned long long)arg2 bytesTotal:(unsigned long long)arg3;
- (void)sendMessageToAccessory:(id)arg1 uarpMsg:(id)arg2;
- (void)sendUpdateFirmwareAnalyticsEventForAccessoryID:(id)arg1 assetID:(id)arg2 params:(id)arg3;
- (void)setChipInfoDelegate:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setPowerLogStagingWindowPeriodSeconds:(unsigned int)arg1;
- (bool)solicitDynamicAsset:(id)arg1 assetID:(id)arg2;
- (bool)stageFirmwareUpdateOnAccessoryList:(id)arg1 withUserIntent:(bool)arg2;
- (void)stagedFirmwareApplicationComplete:(id)arg1 withStatus:(unsigned long long)arg2;
- (void)stagedFirmwareRescindComplete:(id)arg1 withStatus:(unsigned long long)arg2;
- (bool)startPacketCapture:(id)arg1;
- (void)stopPacketCapture;
- (void)supplementalAssetAvailabilityNotificationPosted:(int)arg1;
- (id)supplementalAssetAvailabilityTokenForAccessory:(id)arg1;
- (void)supplementalAssetAvailablityUpdateForAccessory:(id)arg1 assetName:(id)arg2;
- (void)supplementalAssetAvailablityUpdateForAccessoryID:(id)arg1 assetName:(id)arg2;
- (void)supportedAccessories:(id)arg1 forProductGroup:(id)arg2;
- (bool)triggerUnsolicitedDynamicAsset:(id)arg1 assetTag:(id)arg2;
- (void)unregisterForAllAssetAvailabilityNotifications;
- (void)unregisterForAllAttestationCertificatesAvailabilityNotifications;
- (void)unregisterForAllGenericNotifications;
- (void)unregisterForAllSupplementalAssetAvailabilityNotifications;
- (void)unregisterForAssetAvailabilityNotification:(id)arg1;
- (void)unregisterForAttestationCertificatesAvailability:(int)arg1;
- (void)unregisterForSupplementalAssetAvailabilityNotification:(id)arg1;
- (void)unregisterForSupportedAccessoriesAvailability:(int)arg1;
- (id)unsolicitedDynamicAssetOffered:(id)arg1 assetID:(id)arg2;
- (void)updatePendingAssetsForAccessory:(id)arg1 assetID:(id)arg2;
- (bool)updateProperty:(unsigned long long)arg1 value:(id)arg2 forAccessory:(id)arg3;

@end
