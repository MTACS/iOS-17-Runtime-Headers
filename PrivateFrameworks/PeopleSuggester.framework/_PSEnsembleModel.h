
@interface _PSEnsembleModel : NSObject {
    bool  _PSConfidenceModelInUse;
    _CDInteractionCache * _allOtherInteractionCache;
    NSArray * _allOtherInteractionCacheDirections;
    NSArray * _allOtherInteractionCacheMechanism;
    bool  _allowNonSupportedBundleIDs;
    NSSet * _cachedSupportedBundleIDs;
    _PSConfidenceModelForSharing * _confidenceModelForSharing;
    _PSInteractionAndContactMonitor * _contactMonitor;
    _PSContactResolver * _contactResolver;
    CNContactStore * _contactStore;
    _PSCoreMLScoringModel * _coreMLScoringModel;
    NSArray * _defaultContactKeysToFetch;
    _PSFeatureCache * _featureCache;
    _PSHeuristics * _heuristics;
    _CDInteractionStore * _interactionStore;
    _PSKNNModel * _knnMapsModel;
    _PSKNNModel * _knnModel;
    _PSKNNModel * _knnNameOrContactRankerModel;
    _PSKNNModel * _knnSiriNLContactRankerModel;
    _PSKNNModel * _knnZkwModel;
    <_DKKnowledgeQuerying><_DKKnowledgeSaving> * _knowledgeStore;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    NSNumber * _maxCandidatesFromMessageCache;
    NSNumber * _maxCandidatesFromShareSheetCache;
    NSArray * _messageDirections;
    _CDInteractionCache * _messageInteractionCache;
    NSNumber * _messageMechanism;
    NSUserDefaults * _peopleSuggesterDefaults;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _populateCacheLock;
    PPContactStore * _portraitContactStore;
    NSDictionary * _psConfig;
    NSDictionary * _psConfigForAdaptableModel;
    NSObject<OS_dispatch_queue> * _queue;
    _PSRuleMiningModel * _ruleMiningModel;
    _CDInteractionCache * _shareInteractionCache;
    NSArray * _shareSheetMechanisms;
    _PSSharingContactRankerModel * _sharingContactRankerModel;
    PPTopicStore * _topicStore;
    TRIClient * _trialClient;
    NSString * _trialDeploymentId;
    NSString * _trialExperimentId;
    NSString * _trialID;
    TRITrackingId * _trialTrackingID;
    NSString * _trialTreatmentId;
    bool  _useSyntheticSharingInteractions;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _visualIdentifierLock;
    _PSFTZKWOrchestrator * _zkwFTOrchestrator;
    _PSFTZKWTrialData * _zkwFTTrialData;
}

@property bool PSConfidenceModelInUse;
@property (retain) _CDInteractionCache *allOtherInteractionCache;
@property (nonatomic, retain) NSArray *allOtherInteractionCacheDirections;
@property (nonatomic, retain) NSArray *allOtherInteractionCacheMechanism;
@property (nonatomic) bool allowNonSupportedBundleIDs;
@property (retain) NSSet *cachedSupportedBundleIDs;
@property (retain) _PSConfidenceModelForSharing *confidenceModelForSharing;
@property (retain) _PSInteractionAndContactMonitor *contactMonitor;
@property (retain) _PSContactResolver *contactResolver;
@property (nonatomic, retain) CNContactStore *contactStore;
@property (retain) _PSCoreMLScoringModel *coreMLScoringModel;
@property (nonatomic, retain) NSArray *defaultContactKeysToFetch;
@property (retain) _PSHeuristics *heuristics;
@property (nonatomic, retain) _CDInteractionStore *interactionStore;
@property (retain) _PSKNNModel *knnMapsModel;
@property (retain) _PSKNNModel *knnModel;
@property (retain) _PSKNNModel *knnNameOrContactRankerModel;
@property (retain) _PSKNNModel *knnSiriNLContactRankerModel;
@property (retain) _PSKNNModel *knnZkwModel;
@property (nonatomic, retain) <_DKKnowledgeQuerying><_DKKnowledgeSaving> *knowledgeStore;
@property (retain) NSNumber *maxCandidatesFromMessageCache;
@property (retain) NSNumber *maxCandidatesFromShareSheetCache;
@property (nonatomic, retain) NSArray *messageDirections;
@property (retain) _CDInteractionCache *messageInteractionCache;
@property (nonatomic, retain) NSNumber *messageMechanism;
@property (nonatomic, retain) NSUserDefaults *peopleSuggesterDefaults;
@property (nonatomic, retain) PPContactStore *portraitContactStore;
@property (retain) NSDictionary *psConfig;
@property (retain) NSDictionary *psConfigForAdaptableModel;
@property (retain) _PSRuleMiningModel *ruleMiningModel;
@property (retain) _CDInteractionCache *shareInteractionCache;
@property (nonatomic, retain) NSArray *shareSheetMechanisms;
@property (retain) _PSSharingContactRankerModel *sharingContactRankerModel;
@property (nonatomic, retain) PPTopicStore *topicStore;
@property (retain) TRIClient *trialClient;
@property (nonatomic, retain) NSString *trialDeploymentId;
@property (nonatomic, retain) NSString *trialExperimentId;
@property (nonatomic, retain) NSString *trialID;
@property (retain) TRITrackingId *trialTrackingID;
@property (nonatomic, retain) NSString *trialTreatmentId;
@property bool useSyntheticSharingInteractions;
@property (nonatomic, retain) _PSFTZKWOrchestrator *zkwFTOrchestrator;
@property (nonatomic, retain) _PSFTZKWTrialData *zkwFTTrialData;

- (void).cxx_destruct;
- (bool)PSConfidenceModelInUse;
- (id)_knnZKWSuggestionsWithPredictionContext:(id)arg1 modelConfiguration:(id)arg2 maxSuggestions:(unsigned long long)arg3;
- (void)addAdaptedModelUsageInfoToSuggestions:(id)arg1;
- (void)addExtraInformationWithSuggestions:(id)arg1 modelSuggestionProxiesDict:(id)arg2;
- (void)addSupportedBundleIDs:(id)arg1;
- (void)addTrialInfoToPredictionContext:(id)arg1;
- (void)addUTIInfo:(id)arg1 predictionContext:(id)arg2;
- (id)allOtherInteractionCache;
- (id)allOtherInteractionCacheDirections;
- (id)allOtherInteractionCacheMechanism;
- (bool)allowConcurrentReads;
- (bool)allowNonSupportedBundleIDs;
- (id)appExtensionSuggestionsFromContext:(id)arg1;
- (id)autocompleteSearchResultsWithPredictionContext:(id)arg1;
- (id)cachedSupportedBundleIDs;
- (id)candidatesForShareSheetRanking;
- (id)computeEphemeralFeaturesWithPredictionContext:(id)arg1;
- (id)confidenceModelForSharing;
- (id)contactMonitor;
- (id)contactResolver;
- (id)contactStore;
- (bool)copyRemoteRuleMinerMLModel:(id)arg1;
- (bool)coreMLModelNeedsDurableFeatures;
- (id)coreMLScoringModel;
- (id)defaultContactKeysToFetch;
- (void)discardAdaptedModel;
- (void)discardTrialModels;
- (bool)excludeSuggestionWithConversationId:(id)arg1;
- (id)familyPredictionsWithMaxSuggestions:(unsigned long long)arg1 predictionContext:(id)arg2;
- (id)fetchShareSheetSupportedBundleIDs;
- (id)fetchSupportedBundleIDsWithPredictionContextFilters:(id)arg1;
- (void)getCoreMLSuggestionProxiesWithPredictionContext:(id)arg1 modelSuggestionProxiesDict:(id)arg2 candidateToFeatureVectorDict:(id)arg3;
- (void)getHeuristicSuggestionProxies:(id)arg1 supportedBundleIDs:(id)arg2 modelSuggestionProxiesDict:(id)arg3 meContactIdentifier:(id)arg4;
- (void)getKnnSuggestionProxies:(id)arg1 supportedBundleIDs:(id)arg2 modelSuggestionProxiesDict:(id)arg3;
- (id)getLatestTrialMLModelVersion;
- (id)getMeContactIdentifier;
- (id)getModelProxiesArrayWithPredictionContext:(id)arg1;
- (id)getModelSuggestionsProxyDictWithModelProxiesArray:(id)arg1;
- (void)getOtherSuggestionProxies:(id)arg1 supportedBundleIDs:(id)arg2 modelSuggestionProxiesDict:(id)arg3;
- (void)getPhotoBasedFeatures:(id)arg1;
- (void)getRuleMiningSuggestionProxies:(id)arg1 supportedBundleIDs:(id)arg2 modelSuggestionProxiesDict:(id)arg3;
- (id)heuristics;
- (id)init;
- (id)interactionStore;
- (id)knnMapsModel;
- (id)knnModel;
- (id)knnNameOrContactRankerModel;
- (id)knnSiriNLContactRankerModel;
- (id)knnZkwModel;
- (id)knowledgeStore;
- (void)loadDefaultAdaptableModelConfig;
- (void)loadDefaultPSConfig;
- (bool)loadPSConfig:(id)arg1;
- (id)mapsSuggestionArrayWithArray:(id)arg1 appendingUniqueElementsFromArray:(id)arg2 contactResolver:(id)arg3 meContactId:(id)arg4;
- (id)maxCandidatesFromMessageCache;
- (id)maxCandidatesFromShareSheetCache;
- (id)mergedSuggestionsWithFamilySuggestions:(id)arg1 shareSheetSuggestions:(id)arg2 maxSuggestions:(unsigned long long)arg3 supportedBundleIds:(id)arg4;
- (id)messageDirections;
- (id)messageInteractionCache;
- (id)messageMechanism;
- (int)modelProxyToVirtualFeatureStoreFeature:(id)arg1;
- (id)peopleSuggesterDefaults;
- (void)populateCaches;
- (void)populateCachesWithSupportedBundleIDs:(id)arg1;
- (id)portraitContactStore;
- (id)predictWithMapsPredictionContext:(id)arg1 maxSuggestions:(unsigned long long)arg2;
- (id)predictWithPredictionContext:(id)arg1 maxSuggestions:(unsigned long long)arg2;
- (id)predictWithPredictionContext:(id)arg1 maxSuggestions:(unsigned long long)arg2 contactKeysToFetch:(id)arg3;
- (id)psConfig;
- (id)psConfigForAdaptableModel;
- (id)rankedAutocompleteSuggestionsFromContext:(id)arg1 candidates:(id)arg2;
- (id)rankedGlobalSuggestionsForSiriNLWithPredictionContext:(id)arg1 maxSuggestions:(unsigned long long)arg2 interactionId:(id)arg3;
- (id)rankedGlobalSuggestionsWithPredictionContext:(id)arg1 contactsOnly:(bool)arg2 maxSuggestions:(unsigned long long)arg3;
- (id)rankedGlobalSuggestionsWithPredictionContext:(id)arg1 contactsOnly:(bool)arg2 maxSuggestions:(unsigned long long)arg3 excludeBackfillSuggestions:(bool)arg4;
- (id)rankedHandlesFromCandidateHandles:(id)arg1;
- (id)rankedNameSuggestionsWithPredictionContext:(id)arg1 name:(id)arg2;
- (id)rankedSiriMLCRHandles:(id)arg1 context:(id)arg2;
- (void)refreshCaches;
- (void)registerWithTrial;
- (id)rerankMapsSuggestions:(id)arg1 usingPredictionContext:(id)arg2 contactResolver:(id)arg3;
- (id)ruleMiningModel;
- (void)setAllOtherInteractionCache:(id)arg1;
- (void)setAllOtherInteractionCacheDirections:(id)arg1;
- (void)setAllOtherInteractionCacheMechanism:(id)arg1;
- (void)setAllowNonSupportedBundleIDs:(bool)arg1;
- (void)setCachedSupportedBundleIDs:(id)arg1;
- (void)setConfidenceModelForSharing:(id)arg1;
- (void)setContactMonitor:(id)arg1;
- (void)setContactResolver:(id)arg1;
- (void)setContactStore:(id)arg1;
- (void)setCoreMLScoringModel:(id)arg1;
- (void)setDefaultContactKeysToFetch:(id)arg1;
- (void)setHeuristics:(id)arg1;
- (void)setInteractionStore:(id)arg1;
- (void)setKnnMapsModel:(id)arg1;
- (void)setKnnModel:(id)arg1;
- (void)setKnnNameOrContactRankerModel:(id)arg1;
- (void)setKnnSiriNLContactRankerModel:(id)arg1;
- (void)setKnnZkwModel:(id)arg1;
- (void)setKnowledgeStore:(id)arg1;
- (void)setMaxCandidatesFromMessageCache:(id)arg1;
- (void)setMaxCandidatesFromShareSheetCache:(id)arg1;
- (void)setMessageDirections:(id)arg1;
- (void)setMessageInteractionCache:(id)arg1;
- (void)setMessageMechanism:(id)arg1;
- (void)setPSConfidenceModelInUse:(bool)arg1;
- (void)setPeopleAnalysisFromAssetsWithPredictionContext:(id)arg1 identifiersOfPeopleInPhotos:(id)arg2;
- (void)setPeopleSuggesterDefaults:(id)arg1;
- (void)setPhotoAnalysisFromAssetsWithPredictionContext:(id)arg1;
- (void)setPortraitContactStore:(id)arg1;
- (void)setPsConfig:(id)arg1;
- (void)setPsConfigForAdaptableModel:(id)arg1;
- (void)setRuleMiningModel:(id)arg1;
- (void)setShareInteractionCache:(id)arg1;
- (void)setShareSheetMechanisms:(id)arg1;
- (void)setSharingContactRankerModel:(id)arg1;
- (void)setTopicStore:(id)arg1;
- (void)setTrialClient:(id)arg1;
- (void)setTrialDeploymentId:(id)arg1;
- (void)setTrialExperimentId:(id)arg1;
- (void)setTrialID:(id)arg1;
- (void)setTrialTrackingID:(id)arg1;
- (void)setTrialTreatmentId:(id)arg1;
- (void)setUseSyntheticSharingInteractions:(bool)arg1;
- (void)setZkwFTOrchestrator:(id)arg1;
- (void)setZkwFTTrialData:(id)arg1;
- (id)shareInteractionCache;
- (id)shareSheetMechanisms;
- (id)sharingContactRankerModel;
- (id)suggestZKWSuggestionsWithPredictionContext:(id)arg1 maxSuggestions:(unsigned long long)arg2;
- (id)suggestionsFromSuggestionProxies:(id)arg1 supportedBundleIDs:(id)arg2 contactKeysToFetch:(id)arg3 meContactIdentifier:(id)arg4 maxSuggestions:(unsigned long long)arg5;
- (id)topicStore;
- (id)trialClient;
- (id)trialDeploymentId;
- (id)trialExperimentId;
- (id)trialID;
- (id)trialTrackingID;
- (id)trialTreatmentId;
- (void)updateFactorLevels;
- (void)updateTrialID:(id)arg1;
- (bool)useSyntheticSharingInteractions;
- (id)validateCoreMLModelWithRawInput:(id)arg1 predictionContext:(id)arg2;
- (id)zkwFTOrchestrator;
- (id)zkwFTTrialData;

@end
