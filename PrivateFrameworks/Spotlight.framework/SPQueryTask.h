
@interface SPQueryTask : NSObject {
    _Atomic struct WaitingResults_s {} * _deferredUpdate;
    NSObject<SPQueryTaskDelegate> * _delegate;
    NSObject<OS_dispatch_queue> * _dispatchQueue;
    bool  _forceStableResults;
    bool  _live;
    unsigned long long  _maxTopHitAppResults;
    long long  _maxUISuggestions;
    NSMutableArray * _mutableSections;
    SPSearchQueryContext * _previousQueryContext;
    SPSearchQuery * _query;
    unsigned long long  _queryKind;
    NSObject<OS_dispatch_queue> * _queryProcessor;
    NSString * _rankingDebugLog;
    NSArray * _sections;
    NSString * _sessionEntityString;
    unsigned long long  _state;
    SPDaemonQueryToken * _token;
    NSArray * _unsafeCombinedSuggestions;
    NSArray * _unsafeParsecSuggestions;
    NSArray * _unsafeSections;
    NSString * _unsafeSessionEntityString;
    unsigned long long  _unsafeState;
    _Atomic int  _updatesDisabled;
    unsigned long long  _whyQuery;
}

@property (nonatomic) NSObject<SPQueryTaskDelegate> *delegate;
@property (retain) NSObject<OS_dispatch_queue> *dispatchQueue;
@property bool forceStableResults;
@property (nonatomic) bool live;
@property (nonatomic) unsigned long long maxTopHitAppResults;
@property long long maxUISuggestions;
@property (retain) NSMutableArray *mutableSections;
@property (nonatomic, retain) SPSearchQueryContext *previousQueryContext;
@property (nonatomic, retain) SPSearchQuery *query;
@property (nonatomic) unsigned long long queryKind;
@property (retain) NSObject<OS_dispatch_queue> *queryProcessor;
@property (nonatomic, retain) NSString *rankingDebugLog;
@property (readonly) NSString *searchString;
@property (nonatomic, retain) NSArray *sections;
@property (nonatomic, retain) NSString *sessionEntityString;
@property (nonatomic) unsigned long long state;
@property (nonatomic, retain) SPDaemonQueryToken *token;
@property (nonatomic, readonly) NSArray *unsafeCombinedSuggestions;
@property (nonatomic, readonly) NSArray *unsafeParsecSuggestions;
@property (nonatomic, readonly) NSArray *unsafeSections;
@property (nonatomic, readonly) NSString *unsafeSessionEntityString;
@property (nonatomic) unsigned long long unsafeState;
@property (nonatomic) unsigned long long whyQuery;

+ (void)initialize;

- (void).cxx_destruct;
- (void)cancel;
- (void)clear;
- (id)delegate;
- (void)disableUpdates;
- (id)dispatchQueue;
- (void)enableUpdates;
- (bool)forceStableResults;
- (id)init;
- (bool)live;
- (unsigned long long)maxTopHitAppResults;
- (long long)maxUISuggestions;
- (id)mutableSections;
- (void)postSearchAgentUpdatedResultsToDelegate:(id)arg1;
- (id)previousQueryContext;
- (void)pushAndPostUpdates;
- (id)query;
- (unsigned long long)queryIdForFeedback;
- (unsigned long long)queryKind;
- (id)queryProcessor;
- (id)rankingDebugLog;
- (bool)readyToUpdate;
- (id)retainAndMergeSections:(id)arg1 forState:(unsigned long long)arg2;
- (id)searchString;
- (id)sections;
- (id)sessionEntityString;
- (void)setDelegate:(id)arg1;
- (void)setDispatchQueue:(id)arg1;
- (void)setForceStableResults:(bool)arg1;
- (void)setLive:(bool)arg1;
- (void)setMaxTopHitAppResults:(unsigned long long)arg1;
- (void)setMaxUISuggestions:(long long)arg1;
- (void)setMutableSections:(id)arg1;
- (void)setPreviousQueryContext:(id)arg1;
- (void)setQuery:(id)arg1;
- (void)setQueryKind:(unsigned long long)arg1;
- (void)setQueryProcessor:(id)arg1;
- (void)setRankingDebugLog:(id)arg1;
- (void)setSections:(id)arg1;
- (void)setSessionEntityString:(id)arg1;
- (void)setState:(unsigned long long)arg1;
- (void)setToken:(id)arg1;
- (void)setUnsafeState:(unsigned long long)arg1;
- (void)setWhyQuery:(unsigned long long)arg1;
- (void)start;
- (unsigned long long)state;
- (id)token;
- (id)unsafeCombinedSuggestions;
- (id)unsafeParsecSuggestions;
- (id)unsafeSections;
- (id)unsafeSessionEntityString;
- (unsigned long long)unsafeState;
- (void)updateResultsThroughDelegate:(bool)arg1 state:(unsigned long long)arg2 sections:(id)arg3;
- (void)updateResultsThroughDelegate:(bool)arg1 state:(unsigned long long)arg2 unchanged:(bool)arg3 sections:(id)arg4;
- (unsigned long long)whyQuery;

@end
