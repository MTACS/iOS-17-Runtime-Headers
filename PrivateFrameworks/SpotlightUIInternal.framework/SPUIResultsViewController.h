
@interface SPUIResultsViewController : SearchUIResultsViewController <SPSearchAgentDelegate, SPUIResultsViewTestingDelegate, SearchUIBackgroundColorProtocol> {
    bool  _allowHighlightingWhenInactive;
    <SearchUIBackgroundColorDelegate> * _backgroundColorDelegate;
    SFSearchResult * _goTakeoverResult;
    bool  _hasResultsWaitingToUpdate;
    SFSearchResult * _highlightedResult;
    bool  _isHighlighting;
    SearchUILoadingView * _loadingView;
    NSTimer * _loadingViewTimer;
    SPUISearchModel * _model;
    struct CGSize { 
        double width; 
        double height; 
    }  _oldContentSize;
    unsigned long long  _previousQueryId;
    bool  _queryJustHasTopHits;
    NSArray * _resultSections;
    SPSearchEntity * _searchEntity;
    SFResultSection * _searchThroughSection;
    bool  _shouldAnimateUpdates;
    unsigned long long  _startTime;
    SFResultSection * _suggestionsSection;
    bool  _useLoadingView;
    id /* block */  didFinishGettingAllResultsHandler;
}

@property (readonly) SFSearchResult *actualSearchSuggestionResult;
@property bool allowHighlightingWhenInactive;
@property (nonatomic) <SearchUIBackgroundColorDelegate> *backgroundColorDelegate;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <SPUIResultsViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) id /* block */ didFinishGettingAllResultsHandler;
@property (nonatomic, retain) SFSearchResult *goTakeoverResult;
@property bool hasResultsWaitingToUpdate;
@property (readonly) unsigned long long hash;
@property (retain) SFSearchResult *highlightedResult;
@property (nonatomic, readonly) bool isHighlighting;
@property (retain) SearchUILoadingView *loadingView;
@property (retain) NSTimer *loadingViewTimer;
@property (readonly) SPUISearchModel *model;
@property struct CGSize { double x1; double x2; } oldContentSize;
@property unsigned long long previousQueryId;
@property bool queryJustHasTopHits;
@property (retain) NSArray *resultSections;
@property (retain) SPSearchEntity *searchEntity;
@property (retain) SFResultSection *searchThroughSection;
@property (readonly) UISearchToken *searchToken;
@property (nonatomic) bool shouldAnimateUpdates;
@property (retain) SFResultSection *suggestionsSection;
@property (readonly) Class superclass;
@property (nonatomic) bool useLoadingView;

- (void).cxx_destruct;
- (bool)_hasRealSuggestions;
- (void)_pushSectionsUpdate;
- (id)actualSearchSuggestionResult;
- (bool)allowHighlightingWhenInactive;
- (id)asTypedSearchResult;
- (id)backgroundColorDelegate;
- (void)changeTextFieldsReturnKeyType:(long long)arg1 withGoTakeoverResult:(id)arg2;
- (void)clearSuggestionSection;
- (struct CGSize { double x1; double x2; })contentSize;
- (id /* block */)didFinishGettingAllResultsHandler;
- (void)finishedGettingResults:(bool)arg1;
- (void)forceHighlightForResult:(id)arg1;
- (id)goTakeoverResult;
- (bool)hasResultsWaitingToUpdate;
- (void)highlightResultAfterUnmarkingText;
- (id)highlightedResult;
- (id)initWithSearchModel:(id)arg1;
- (id)initWithSearchModel:(id)arg1 searchEntity:(id)arg2;
- (bool)isHighlighting;
- (bool)isResultOriginalSearchSuggestion:(id)arg1;
- (id)loadingView;
- (id)loadingViewTimer;
- (id)makeAsYouTypeSuggestionSearchResultWithSearchString:(id)arg1 detailText:(id)arg2 suggestionIdentifier:(id)arg3 queryContext:(id)arg4;
- (id)model;
- (struct CGSize { double x1; double x2; })oldContentSize;
- (unsigned long long)previousQueryId;
- (bool)queryJustHasTopHits;
- (void)removeCompletionAndHighlightAsTyped:(bool)arg1;
- (id)restorationContext;
- (id)resultSections;
- (void)searchAgentClearedResults:(id)arg1;
- (void)searchAgentFinishedQueryWithoutAdditionalResults:(id)arg1;
- (bool)searchAgentHasWindow:(id)arg1;
- (void)searchAgentUpdatedResults:(id)arg1;
- (id)searchEntity;
- (id)searchThroughSection;
- (id)searchToken;
- (id)searchUIBackgroundColor;
- (void)searchUpdatedWithString:(id)arg1 tokenEntity:(id)arg2 queryId:(unsigned long long)arg3 wantsCompletions:(bool)arg4 keyboardLanguage:(id)arg5;
- (void)setAllowHighlightingWhenInactive:(bool)arg1;
- (void)setBackgroundColorDelegate:(id)arg1;
- (void)setDidFinishGettingAllResultsHandler:(id /* block */)arg1;
- (void)setGoTakeoverResult:(id)arg1;
- (void)setHasResultsWaitingToUpdate:(bool)arg1;
- (void)setHighlightedResult:(id)arg1;
- (void)setLoadingView:(id)arg1;
- (void)setLoadingViewTimer:(id)arg1;
- (void)setOldContentSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setPreviousQueryId:(unsigned long long)arg1;
- (void)setQueryJustHasTopHits:(bool)arg1;
- (void)setRestorationContext:(id)arg1;
- (void)setResultSections:(id)arg1;
- (void)setSearchEntity:(id)arg1;
- (void)setSearchThroughSection:(id)arg1;
- (void)setShouldAnimateUpdates:(bool)arg1;
- (void)setSuggestionsSection:(id)arg1;
- (void)setUseLoadingView:(bool)arg1;
- (bool)shouldAnimateUpdates;
- (id)suggestionsSection;
- (void)unhideLoadingView;
- (bool)useLoadingView;
- (void)viewWillAppear:(bool)arg1;

@end
