
@interface ConversationKit.ConversationController : NSObject <AVCRemoteVideoClientDelegate, TUAudioFrequencyControllerDelegate, TUMomentsControllerDelegate> {
    void $__lazy_storage_$_momentsController;
    void _captionsRecognizerShouldBeRunning;
    void activitiesDidChange;
    void appLaunchStateChanged;
    void audioCallbackQueue;
    void audioFrequencyController;
    void audioPausedDidChange;
    void audioRouteDidChange;
    void avModeDidChange;
    void blockedCallerChecker;
    void blockedCallerLookupQueue;
    void blockedParticipantsAdded;
    void blocklistCheckedHandles;
    void bluetoothAudioFormatChanged;
    void broadcastingState;
    void call;
    void callCenter;
    void callStatusDidChange;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  callUUIDResolvingCroppedAspectRatio;
    void callUUIDsAwaitingFirstRemoteVideoFrame;
    void callUUIDsAwaitingFirstRemoteVideoFrameTasks;
    void callWaitingUUIDs;
    void cameraBlurEnabledDidChange;
    void cameraCinematicFramingAvailabilityDidChange;
    void cameraCinematicFramingEnabledDidChange;
    void cameraListDidChange;
    void cameraPositionDidChange;
    void cameraReactionEffectsEnabledDidChange;
    void cameraStudioLightEnabledDidChange;
    void cameraZoomAvailabiltyDidChange;
    void captionsAxSettingNotifyToken;
    void carPlayConnectedDidChange;
    void carPlayDisconnectRequiresLocalVideoEnable;
    void collaborationNoticePosted;
    void conversationIgnoreLetMeInRequestsDidChange;
    void conversationLetMeInRequestState;
    void conversationLetMeInRequestStateDidChange;
    void conversationLinkDidChange;
    void conversationRejectedParticipantsCountDidChange;
    void conversationState;
    void conversationStateDidChange;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  conversationUUID;
    void defaults;
    void deviceOrientation;
    void didAddPendingParticipant;
    void didAddVisibleParticipant;
    void didApprovePendingParticipant;
    void didDeferStartCameraAction;
    void didFailToStartCamera;
    void didFinishMigratingConversations;
    void didFinishWindowResize;
    void didInviteOtherParticipants;
    void didReceiveLatestRemoteAttributes;
    void didRemoveAllVisibleParticipants;
    void didRemovePendingParticipant;
    void didRemoveVisibleParticipant;
    void didStartVideoForLocalParticipant;
    void didStartVideoForVisibleParticipant;
    void didToggleCaptions;
    void didUpdateCaptions;
    void didUpdateHasRingingCalls;
    void didUpdateIDSCapabilities;
    void didUpdateLocalMemberAuthorizedToChangeGroupMembership;
    void didUpdateLocalParticipant;
    void didUpdateLocalParticipantCameraPosition;
    void didUpdateLocalScreenSharing;
    void didUpdateParticipantAVMode;
    void didUpdateRecordingLocalVideo;
    void didUpdateVisibleParticipant;
    void didUpdateVisibleParticipantScreenInfo;
    void didUpdateWantsHoldMusic;
    void enableVideoOnJoin;
    void expectingNewLocalCameraPositionFirstFrame;
    void groupNameAndPhotoDidChange;
    void hasPendingStopTransmit;
    void idsCapabilitiesChecker;
    void ignoreLetMeInRequests;
    void includeLocalParticipantInVisibleParticipants;
    void isOneToOneCallCenterUpdateWaitingForNonSquareVideo;
    void isOneToOneModeDisabledByActivity;
    void isOneToOneModeEnabledByCallCenter;
    void isRemoteParticipantEligibleForVideoMessagingBlock;
    void isTrackingActiveConversationDidChange;
    void isUsingIPadExternalCamera;
    void isWaitingOnFirstRemoteFrameDidChange;
    void keepsPreviewActive;
    void lastRegisteredMomentsProvider;
    void latestRemoteAttributes;
    void localCameraUIDDidChange;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  localParticipant;
    void localParticipantRequestedVideoUpgrade;
    void localVideoRecordingTransactionID;
    void mode;
    void mutedTalkerDidChange;
    void needsUserConfirmationForBlockedCaller;
    void oneToOneModeDidChange;
    void otherInvitedParticipants;
    void participantAudioPowerDidChange;
    void participantCaptionsProviderCreator;
    void participantDidReact;
    void participantDidStopReacting;
    void participantMediaProviderCreator;
    void participantsMediaPrioritiesDidChange;
    void pauseOnFirstFrame;
    void pttCallStatusDidChange;
    void recentPresentationContexts;
    void rejectedParticipantsCount;
    void remoteParticipants;
    void resolvedAudioVideoModeDidChange;
    void scheduledVideoInfoResetDates;
    void screenSharingAvailabilityDidChange;
    void screenSharingEndingRequiresLocalVideoEnable;
    void screenSharingSession;
    void sessionActionNoticePosted;
    void shouldPauseOnFirstLocalVideoFrame;
    void showingInMiniWindowRequiresLocalVideoEnable;
    void userDidToggleAXLiveCaptionsPref;
    void videoMessageController;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  videoMessageConversationUUID;
    void videoMessageErrorOccured;
    void visibleParticipantDidBecomeActive;
    void visibleParticipantDidBecomeInactive;
    void visibleParticipantKickableStatusDidChange;
    void willTakeMoment;
}

@property (nonatomic, readonly) NSString *description;

- (void).cxx_destruct;
- (void)dealloc;
- (id)description;
- (void)frequencyController:(id)arg1 audioPowerChanged:(float)arg2 forParticipantWithStreamToken:(long long)arg3;
- (void)handleAudioUplinkChange:(id)arg1;
- (void)handleBluetoothAudioFormatChanged:(id)arg1;
- (void)handleCallConnected:(id)arg1;
- (void)handleCallStartedConnecting:(id)arg1;
- (void)handleCameraBlurEnabledChanged:(id)arg1;
- (void)handleCameraCinematicFramingAvailabilityChanged:(id)arg1;
- (void)handleCameraCinematicFramingEnabledChanged:(id)arg1;
- (void)handleCameraListDidChange:(id)arg1;
- (void)handleCameraReactionEffectsEnabledChanged:(id)arg1;
- (void)handleCameraStudioLightEnabledChanged:(id)arg1;
- (void)handleCameraZoomBecameAvailable:(id)arg1;
- (void)handleCameraZoomBecameUnavailable:(id)arg1;
- (void)handleHoldMusicDidChange:(id)arg1;
- (void)handleLocalPreviewChanged:(id)arg1;
- (void)handleLocalVideoAttributesChanged:(id)arg1;
- (void)handleLocalVideoPreviewFirstFrameArrived:(id)arg1;
- (void)handlePTTCallStatusDidChange:(id)arg1;
- (void)handleScreenConnectionDidUpdate:(id)arg1;
- (void)handleScreenSharingAttributesChanged:(id)arg1;
- (void)handleScreenSharingDidChange:(id)arg1;
- (void)handleSendingVideoChanged:(id)arg1;
- (void)handleSystemPreferredCameraChanged:(id)arg1;
- (void)handleVideoCallStatusDidChange:(id)arg1;
- (void)handleWindowDidFinishResize:(id)arg1;
- (void)handlelocalCameraUIDDidChange:(id)arg1;
- (id)init;
- (void)momentsController:(id)arg1 didUpdateCapabilities:(id)arg2 forProvider:(id)arg3;
- (void)momentsController:(id)arg1 willCaptureRemoteRequestFromIdentifier:(id)arg2;
- (void)remoteVideoClient:(id)arg1 networkQualityDidDegrade:(bool)arg2 info:(id)arg3;
- (void)remoteVideoClient:(id)arg1 remoteMediaDidStall:(bool)arg2;
- (void)remoteVideoClient:(id)arg1 remoteScreenAttributesDidChange:(id)arg2;
- (void)remoteVideoClient:(id)arg1 remoteVideoAttributesDidChange:(id)arg2;
- (void)remoteVideoClient:(id)arg1 remoteVideoDidPause:(bool)arg2;
- (void)remoteVideoClient:(id)arg1 videoDidDegrade:(bool)arg2;
- (void)remoteVideoClient:(id)arg1 videoDidSuspend:(bool)arg2;
- (void)remoteVideoClientDidReceiveFirstFrame:(id)arg1;
- (void)toggleStudioLight;

@end
