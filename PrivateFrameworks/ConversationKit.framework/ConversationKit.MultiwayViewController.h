
@interface ConversationKit.MultiwayViewController : UIViewController <AVCEffectsDelegate, CFXCameraViewControllerDelegate, CFXEffectBrowserContentPresenterDelegate, CNKAudioRoutingDelegate, CNKCallDetailsDeferredPresentationManager, CNKFaceTimeInCallControlsEffectsPresentingProtocol, CNKFaceTimePiPSourceProviding, CNKMultiwayViewControllerProtocol, CNKMutedTalkerBannerViewControllerDelegate, SCUIInterventionViewControllerDelegate> {
    void $__lazy_storage_$_flashView;
    void $__lazy_storage_$_insulatingView;
    void _cachedDidExpandActiveVideoCallFromBanner;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _isOnScreen;
    void avcEffects;
    void bannerPresentationManagerBox;
    void cachedGridViewSize;
    void cachedMediaPipSafeAreaFrame;
    void cachedPresentationSize;
    void callDetailsCoordinator;
    void callUUIDsThatPresentedSNaPSecondaryPill;
    void captionsPausedState;
    void conversationController;
    void defaults;
    void delegate;
    void deviceOrientation;
    void didExpandIncomingCallBanner;
    void didNotifyMutedCaller;
    void effectsCaptureInfo;
    void effectsEnabled;
    void effectsLayoutController;
    void featureFlags;
    void features;
    void frontBoardInterfaceOrientation;
    void hasInitializedMomentsViews;
    void hasParticipantVideo;
    void hideOneToOneLivePhotoAlertViewTimer;
    void iOSDelegate;
    void inCallControlsDismissTimer;
    void isAmbient;
    void isCaptioningEnabled;
    void isDisplayedInBanner;
    void isFullScreen;
    void isLocalReactionActive;
    void isPipStashed;
    void isScreenSharingFullScreen;
    void lastUpdatedMostActiveParticipantViewForPiP;
    void layoutStyle;
    void layoutStyleBeforeReactionsVisible;
    void linkShareCoordinator;
    void mediaPipFrameInWindowScene;
    void mediaPipInfo;
    void mostActiveParticipantsController;
    void mutedBannerViewController;
    void needsConnectionAnimation;
    void needsTips;
    void needsUpdatePresentationContexts;
    void pipState;
    void pipZoomControl;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  reactionPickerTip;
    void reactionPickerTipState;
    void reactionsState;
    void shouldShowZoomControls;
    void showReactionPickerTimer;
    void subscriptions;
    void supportedDeviceOrientations;
    void tipDisplayStateObservationTask;
    void tipStatusObservationTask;
    void tonePlayer;
    void viewContent;
}

@property (nonatomic, readonly) UIImage *audioRouteGlyphForDevice;
@property (nonatomic, retain) CNKBannerPresentationManager *bannerPresentationManager;
@property (nonatomic, readonly) TUCall *call;
@property (nonatomic) <CNKFaceTimeMultiwayConversationViewControllerDelegate> *delegate;
@property (nonatomic) long long deviceOrientation;
@property (nonatomic) bool didExpandIncomingCallBanner;
@property (nonatomic) bool effectsEnabled;
@property (nonatomic) long long frontBoardInterfaceOrientation;
@property (nonatomic, readonly) long long fullScreenFocusedParticipantOrientation;
@property (nonatomic) bool hasParticipantVideo;
@property (nonatomic) <CNKFaceTimeMultiwayViewControllerIOSDelegate> *iOSDelegate;
@property (nonatomic, retain) NSTimer *inCallControlsDismissTimer;
@property (nonatomic) bool isAmbient;
@property (nonatomic) bool isCaptioningEnabled;
@property (nonatomic) bool isDisplayedInBanner;
@property (nonatomic) bool isFullScreen;
@property (nonatomic, readonly) bool isInVideoMessageFlow;
@property (nonatomic) bool isOnScreen;
@property (nonatomic, readonly) bool isOneToOneModeEnabled;
@property (nonatomic) bool isPipStashed;
@property (nonatomic, readonly) bool isPipped;
@property (nonatomic, readonly) bool isPresentingEffectsBrowser;
@property (nonatomic, readonly) bool isReadyToShowCallDetails;
@property (nonatomic) bool isScreenSharingFullScreen;
@property (nonatomic, readonly) bool isShowingHUD;
@property (nonatomic, readonly) bool isShownAboveCoverSheet;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } mediaPipFrameInWindowScene;
@property (nonatomic) long long pipState;
@property (nonatomic, readonly) UIViewController *pipViewController;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } preferredPIPContentAspectRatio;
@property (nonatomic, readonly) bool shouldDisconnectOnDismissal;
@property (nonatomic) long long supportedDeviceOrientations;
@property (nonatomic, readonly) bool wantsApplicationDismissalStyle;
@property (nonatomic, readonly) bool wantsPIPRotationForLocalPreview;

- (void).cxx_destruct;
- (bool)_canShowWhileLocked;
- (id)accessibilityConstraintController;
- (id)audioRouteGlyphFor:(id)arg1;
- (id)audioRouteGlyphForDevice;
- (id)audioRouteMenu;
- (bool)axShouldDisableAutoHidingControls;
- (void)bannerDidGetTap;
- (id)bannerPresentationManager;
- (id)call;
- (void)cameraViewController:(id)arg1 didChangeEffectsState:(long long)arg2;
- (void)cameraViewController:(id)arg1 didRenderFrame:(id)arg2;
- (void)cameraViewController:(id)arg1 presentationRectWasPinchedWithState:(long long)arg2 scale:(double)arg3 velocity:(double)arg4;
- (void)cameraViewControllerPresentationRectWasDoubleTapped:(id)arg1;
- (void)cancelVideoRecordingWithCompletion:(id /* block */)arg1;
- (void)dealloc;
- (id)delegate;
- (long long)deviceOrientation;
- (void)didCaptureVideoFrame:(id)arg1;
- (void)didConfirmForInterventionViewController:(id)arg1;
- (bool)didExpandIncomingCallBanner;
- (void)didRejectForInterventionViewController:(id)arg1;
- (void)didTapChangeLayoutButton;
- (void)didTapDeskViewButton;
- (void)didTapOneToOneShutterButton;
- (void)effectBrowserViewController:(id)arg1 dismissExpandedAppViewController:(id)arg2 animated:(bool)arg3 completion:(id /* block */)arg4;
- (void)effectBrowserViewController:(id)arg1 presentExpandedAppViewController:(id)arg2 animated:(bool)arg3 completion:(id /* block */)arg4;
- (void)effectBrowserViewController:(id)arg1 willChangeDockHeight:(double)arg2;
- (bool)effectsEnabled;
- (struct CGSize { double x1; double x2; })expandedAppViewControllerSizeForEffectBrowserViewController:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameForRestoreAnimation;
- (long long)frontBoardInterfaceOrientation;
- (long long)fullScreenFocusedParticipantOrientation;
- (bool)hasParticipantVideo;
- (void)hideEffectsBrowser;
- (id)iOSDelegate;
- (id)inCallControlsDismissTimer;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (bool)isAmbient;
- (bool)isCaptioningEnabled;
- (bool)isDisplayedInBanner;
- (bool)isFullScreen;
- (bool)isInVideoMessageFlow;
- (bool)isOnScreen;
- (bool)isOneToOneModeEnabled;
- (bool)isPipStashed;
- (bool)isPipped;
- (bool)isPresentingEffectsBrowser;
- (bool)isReadyToShowCallDetails;
- (bool)isScreenSharingFullScreen;
- (bool)isShowingHUD;
- (bool)isShownAboveCoverSheet;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })mediaPipFrameInWindowScene;
- (void)muteVideo;
- (void)openMessagesConversation;
- (void)pipDidRotate;
- (long long)pipState;
- (id)pipViewController;
- (struct CGSize { double x1; double x2; })preferredPIPContentAspectRatio;
- (struct CGSize { double x1; double x2; })preferredPiPContentAspectRatio;
- (void)prepareForAppSwitcher;
- (void)resetEffectsState;
- (bool)restoreViewControllerHierarchyWhenExitingPiP;
- (void)serverDidTimeout:(id)arg1;
- (void)setBannerPresentationManager:(id)arg1;
- (void)setControlsState:(long long)arg1 animated:(bool)arg2;
- (void)setDelegate:(id)arg1;
- (void)setDeviceOrientation:(long long)arg1;
- (void)setDidExpandIncomingCallBanner:(bool)arg1;
- (void)setEffectsEnabled:(bool)arg1;
- (void)setFrontBoardInterfaceOrientation:(long long)arg1;
- (void)setHasParticipantVideo:(bool)arg1;
- (void)setIOSDelegate:(id)arg1;
- (void)setInCallControlsDismissTimer:(id)arg1;
- (void)setIsAmbient:(bool)arg1;
- (void)setIsCaptioningEnabled:(bool)arg1;
- (void)setIsDisplayedInBanner:(bool)arg1;
- (void)setIsFullScreen:(bool)arg1;
- (void)setIsOnScreen:(bool)arg1;
- (void)setIsPipStashed:(bool)arg1;
- (void)setIsScreenSharingFullScreen:(bool)arg1;
- (void)setMediaPipFrameInWindowScene:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setPipState:(long long)arg1;
- (void)setSupportedDeviceOrientations:(long long)arg1;
- (bool)shouldAlwaysPresentExpandedAppsForEffectBrowserViewController:(id)arg1;
- (bool)shouldDisconnectOnDismissal;
- (void)showSidebar;
- (long long)supportedDeviceOrientations;
- (void)testing_didFinishLocalPreviewRotationAnimation;
- (void)toggleAudioMute;
- (void)toggleCinematicFraming;
- (void)toggleLocalOrientation;
- (void)toggleVideoMuteWithShouldPauseIfStopped:(bool)arg1;
- (void)updateVideoState;
- (void)updateViewConstraints;
- (id)viewControllerForPiP;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewSafeAreaInsetsDidChange;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (bool)wantsApplicationDismissalStyle;
- (bool)wantsPIPRotationForLocalPreview;
- (void)willMoveToParentViewController:(id)arg1;

@end
