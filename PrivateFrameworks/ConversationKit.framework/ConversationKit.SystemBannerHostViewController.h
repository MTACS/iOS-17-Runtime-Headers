
@interface ConversationKit.SystemBannerHostViewController : UIViewController <BNPresentable, SBUISystemApertureElement, SBUISystemApertureElementProviding> {
    void $__lazy_storage_$_captureOnlyBackdropView;
    void $__lazy_storage_$_systemApertureAlertingManager;
    void activeLayoutMode;
    void bannerIdentifier;
    void canRequestAlertingAssertion;
    void captureGroupName;
    void contentRole;
    void controlsManager;
    void controlsType;
    void conversationControlsViewController;
    void defaults;
    void delegate;
    void destination;
    void detachedMinimalViewContainer;
    void dismissalPreventionAssertion;
    void elementIdentifier;
    void expandedForMenuPresentation;
    void features;
    void gesturePriorityAssertion;
    void isShowingSystemApertureOverAssociatedScene;
    void isSystemAperturePresentation;
    void isTransitioningToEphemeralSystemApertureContent;
    void keyColor;
    void layoutDescription;
    void leadingViewContainer;
    void minimalViewContainer;
    void notice;
    void notificationCenter;
    void overriddenSystemApertureContent;
    void panGestureProxy;
    void presentableContext;
    void requestIdentifier;
    void requesterIdentifier;
    void shadowView;
    void sizeClass;
    void trailingViewContainer;
}

@property (nonatomic) long long activeLayoutMode;
@property (nonatomic, readonly) NSString *associatedAppBundleIdentifier;
@property (nonatomic, readonly) NSSet *backgroundActivitiesToSuppress;
@property (nonatomic, readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } bannerContentOutsets;
@property (nonatomic, readonly) BSAnimationSettings *bannerSizeTransitionAnimationSettings;
@property (nonatomic) bool canRequestAlertingAssertion;
@property (nonatomic, readonly) long long contentRole;
@property (nonatomic, readonly) UIView<SBUISystemApertureAccessoryView> *detachedMinimalView;
@property (nonatomic, readonly) bool draggingDismissalEnabled;
@property (nonatomic, readonly) bool draggingInteractionEnabled;
@property (nonatomic, readonly) NSString *elementIdentifier;
@property (nonatomic, readonly) UIColor *keyColor;
@property (nonatomic, readonly) UIView<SBUISystemApertureAccessoryView> *leadingView;
@property (nonatomic, readonly) long long maximumLayoutMode;
@property (nonatomic, readonly) UIView<SBUISystemApertureAccessoryView> *minimalView;
@property (nonatomic, readonly) long long preferredLayoutMode;
@property (nonatomic) <BNPresentableContext> *presentableContext;
@property (nonatomic, readonly) unsigned long long presentationBehaviors;
@property (nonatomic, readonly) NSString *requestIdentifier;
@property (nonatomic, copy) NSString *requesterIdentifier;
@property (nonatomic, readonly) UIViewController<SBUISystemApertureElement> *systemApertureElementViewController;
@property (nonatomic, readonly) bool touchOutsideDismissalEnabled;
@property (nonatomic, readonly) UIView<SBUISystemApertureAccessoryView> *trailingView;
@property (nonatomic, readonly) UIViewController *viewController;

- (void).cxx_destruct;
- (bool)_canShowWhileLocked;
- (long long)activeLayoutMode;
- (id)associatedAppBundleIdentifier;
- (id)backgroundActivitiesToSuppress;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })bannerContentOutsets;
- (id)bannerSizeTransitionAnimationSettings;
- (void)callStatusChanged:(id)arg1;
- (bool)canRequestAlertingAssertion;
- (long long)contentRole;
- (void)contextMenuDidDismiss:(id)arg1;
- (void)contextMenuWillPresent:(id)arg1;
- (void)dealloc;
- (id)detachedMinimalView;
- (void)didMoveToParentViewController:(id)arg1;
- (id)elementIdentifier;
- (void)handleSceneStateChangeNotification:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (bool)isDraggingDismissalEnabled;
- (bool)isDraggingInteractionEnabled;
- (bool)isTouchOutsideDismissalEnabled;
- (id)keyColor;
- (id)leadingView;
- (long long)maximumLayoutMode;
- (id)minimalView;
- (struct CGSize { double x1; double x2; })preferredContentSizeWithPresentationSize:(struct CGSize { double x1; double x2; })arg1 containerSize:(struct CGSize { double x1; double x2; })arg2;
- (long long)preferredLayoutMode;
- (id)presentableContext;
- (void)presentableDidDisappearAsBanner:(id)arg1 withReason:(id)arg2;
- (void)presentableWillAppearAsBanner:(id)arg1;
- (unsigned long long)presentationBehaviors;
- (id)requestIdentifier;
- (id)requesterIdentifier;
- (void)setActiveLayoutMode:(long long)arg1;
- (void)setCanRequestAlertingAssertion:(bool)arg1;
- (void)setPresentableContext:(id)arg1;
- (void)setRequesterIdentifier:(id)arg1;
- (id)systemApertureElementViewController;
- (id)trailingView;
- (void)userInteractionDidEndForBannerForPresentable:(id)arg1;
- (void)userInteractionWillBeginForBannerForPresentable:(id)arg1;
- (id)viewController;
- (void)viewDidLoad;
- (void)viewWillLayoutSubviews;
- (void)viewWillLayoutSubviewsWithTransitionCoordinator:(id)arg1;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;

@end
