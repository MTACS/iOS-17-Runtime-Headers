
@interface HMDMediaGroupsAggregator : HMFObject <HMDMediaGroupsAggregatorMessengerDelegate, HMDMediaSystemsAggregateDataGeneratorDataSource, HMDTimerProvider, HMEEventConsumer, HMFLogging, HMFTimerDelegate> {
    HMDMediaGroupsAggregateData * _aggregateData;
    <HMDMediaGroupsAggregatorDataSource> * _dataSource;
    <HMDMediaGroupsAggregatorDelegate> * _delegate;
    NSMutableDictionary * _destinationControllersData;
    NSMutableDictionary * _destinations;
    <HMEEventForwarder> * _eventForwarder;
    <HMELastEventStoreReadHandle> * _eventStoreReadHandle;
    <HMDFeaturesDataSource> * _featuresDataSource;
    NSArray * _generators;
    HMDMediaGroupsLocalDataStorage * _groupLocalDataStorage;
    NSUUID * _identifier;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    HMDMediaGroupsAggregatorMessenger * _messenger;
    unsigned long long  _state;
    <HMESubscriptionProviding> * _subscriptionProvider;
    <HMDTimerProvider> * _timerProvider;
    HMFTimer * _warmUpTimer;
}

@property (retain) HMDMediaGroupsAggregateData *aggregateData;
@property <HMDMediaGroupsAggregatorDataSource> *dataSource;
@property (readonly, copy) NSString *debugDescription;
@property <HMDMediaGroupsAggregatorDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) <HMEEventForwarder> *eventForwarder;
@property (readonly) <HMELastEventStoreReadHandle> *eventStoreReadHandle;
@property (readonly) <HMDFeaturesDataSource> *featuresDataSource;
@property (readonly) NSArray *generators;
@property (readonly) HMDMediaGroupsLocalDataStorage *groupLocalDataStorage;
@property (readonly) unsigned long long hash;
@property (readonly, copy) NSUUID *identifier;
@property (readonly) HMDMediaGroupsAggregatorMessenger *messenger;
@property (readonly) <HMESubscriptionProviding> *subscriptionProvider;
@property (readonly) Class superclass;
@property <HMDTimerProvider> *timerProvider;
@property (retain) HMFTimer *warmUpTimer;

+ (id)logCategory;

- (void).cxx_destruct;
- (id)aggregateData;
- (id)aggregateDataTopic;
- (id)appleMediaAccessories;
- (void)clearCachedData;
- (void)clearCachedDataForParticipantAccessoryUUID:(id)arg1;
- (void)configureWithHome:(id)arg1 messageDispatcher:(id)arg2 notificationCenter:(id)arg3 primaryResidentChangeMonitor:(id)arg4;
- (id)createGenerators;
- (id)dataSource;
- (id)delegate;
- (id)destinationControllersData;
- (id)destinationManagerWithIdentifier:(id)arg1;
- (id)destinations;
- (void)didReceiveCachedEvent:(id)arg1 topic:(id)arg2 source:(id)arg3;
- (void)didReceiveEvent:(id)arg1 topic:(id)arg2;
- (void)didReceiveUpdateAssociatedGroupRequestMessage:(id)arg1 withGroupIdentifier:(id)arg2 associatedGroupIdentifier:(id)arg3 messenger:(id)arg4;
- (id)eventForwarder;
- (id)eventSource;
- (id)eventStoreReadHandle;
- (id)featuresDataSource;
- (void)fixupGroupsForRemovedParticipantAccessoryUUID:(id)arg1;
- (void)forwardAggregateData;
- (id)generators;
- (id)groupLocalDataStorage;
- (id)groups;
- (void)handleAccessoryChangedRoomNotification:(id)arg1;
- (void)handleHomeAddedAccessoryNotification:(id)arg1;
- (void)handleHomeRemovedAccessoryNotification:(id)arg1;
- (void)handleIncomingParticipantData:(id)arg1 forAccessoryUUID:(id)arg2;
- (void)handleMediaSystemAddedNotification:(id)arg1;
- (void)handleParticipantDataEvent:(id)arg1 accessoryUUID:(id)arg2;
- (void)handleParticipantDestination:(id)arg1 backedUpGroups:(id)arg2 forParticipantAccessoryUUID:(id)arg3;
- (void)handlePrimaryResidentDeviceChangeNotification:(id)arg1;
- (id)identifier;
- (id)initWithIdentifier:(id)arg1 messenger:(id)arg2 eventForwarder:(id)arg3 subscriptionProvider:(id)arg4 eventStoreReadHandle:(id)arg5 groupsLocalDataStorage:(id)arg6;
- (id)initWithIdentifier:(id)arg1 messenger:(id)arg2 eventForwarder:(id)arg3 subscriptionProvider:(id)arg4 eventStoreReadHandle:(id)arg5 groupsLocalDataStorage:(id)arg6 timerProvider:(id)arg7 featuresDataSource:(id)arg8;
- (bool)isRunning;
- (bool)isRunningAsPrimary;
- (id)localGroupWithIdentifier:(id)arg1;
- (id)logIdentifier;
- (id)messenger;
- (void)notifyOfStoppedState;
- (void)notifyOfUpdateAggregateData:(id)arg1;
- (id)participantAccessoryUUIDFromTopic:(id)arg1;
- (id)participantDataTopicForAccessory:(id)arg1;
- (void)refreshAggregateData;
- (void)refreshRunningStateUsingPrimaryResidentChangeMonitor:(id)arg1;
- (void)registerForEvents;
- (void)registerForEventsForAccessory:(id)arg1;
- (void)registerForNotificationsWithHome:(id)arg1 notificationCenter:(id)arg2 primaryResidentChangeMonitor:(id)arg3;
- (bool)removeDestinationControllerDataWithParentIdentifier:(id)arg1;
- (bool)removeDestinationWithParentIdentifier:(id)arg1;
- (void)removeGroupWithIdentifier:(id)arg1;
- (id)roomForAllDestinationParentIdentifiers:(id)arg1 mediaSystemsAggregateDataGenerator:(id)arg2;
- (void)runAsPrimary;
- (void)setAggregateData:(id)arg1;
- (void)setDataSource:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDestination:(id)arg1;
- (void)setDestinationControllerData:(id)arg1;
- (bool)setState:(unsigned long long)arg1;
- (bool)setState:(unsigned long long)arg1 previousState:(unsigned long long*)arg2;
- (void)setTimerProvider:(id)arg1;
- (void)setWarmUpTimer:(id)arg1;
- (bool)shouldWarmUp;
- (void)startWarmUpTimer;
- (void)stop;
- (void)stopWarmUpTimer;
- (id)subscriptionProvider;
- (void)timerDidFire:(id)arg1;
- (id)timerProvider;
- (id)timerWithTimeInterval:(double)arg1 options:(unsigned long long)arg2;
- (void)unregisterForAllEvents;
- (void)unregisterForEventsForAccessory:(id)arg1;
- (bool)updateAssociatedGroupIdentifier:(id)arg1 forGroupIdentifier:(id)arg2 error:(id*)arg3;
- (void)updateDestinationWithIdentifier:(id)arg1 audioGroupIdentifier:(id)arg2;
- (void)updateGroup:(id)arg1;
- (void)updateGroup:(id)arg1 participantAccessoryUUIDs:(id)arg2;
- (id)warmUpTimer;

@end
