
@interface HMDAccessCodeManagerContext : NSObject <HMDAccessCodeManagerContext, HMFLogging> {
    NSUUID * _UUID;
    HMDBulletinBoard * _bulletinBoard;
    HMDAccessCodeDemoDataMocker * _demoDataMocker;
    HMDHome * _home;
    HMFMessageDispatcher * _messageDispatcher;
    HMDRemoteMessageForwarder * _remoteMessageForwarder;
    NSObject<OS_dispatch_queue> * _workQueue;
}

@property (readonly, copy) NSUUID *UUID;
@property (readonly) NSArray *UUIDsOfAccessoriesSupportingAccessCodes;
@property (readonly) NSArray *UUIDsOfHAPAccessoriesSupportingAccessCodes;
@property (readonly) NSArray *UUIDsOfMatterAccessoriesSupportingAccessCodes;
@property (readonly) NSArray *UUIDsOfUsersWithoutAccessCodes;
@property (readonly) NSArray *accessoriesSupportingAccessCodes;
@property (readonly) long long accessoryReadWriteRetries;
@property (readonly) double accessoryReadWriteRetryTimeInterval;
@property (readonly) HMDHomeAdministratorHandler *administratorHandler;
@property (readonly) HMDBulletinBoard *bulletinBoard;
@property (getter=isCurrentDeviceOwnerController, readonly) bool currentDeviceOwnerController;
@property (getter=isCurrentDeviceOwnerUser, readonly) bool currentDeviceOwnerUser;
@property (getter=isCurrentDevicePrimaryResident, readonly) bool currentDevicePrimaryResident;
@property (getter=isCurrentDeviceResidentCapable, readonly) bool currentDeviceResidentCapable;
@property (getter=isCurrentDeviceWatch, readonly) bool currentDeviceWatch;
@property (readonly) double dataCleanUpCheckTimerInterval;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) HMDAccessCodeDemoDataMocker *demoDataMocker;
@property (getter=isDemoDataMockerEnabled, readonly) bool demoDataMockerEnabled;
@property (readonly, copy) NSString *description;
@property (getter=isFeatureEnabled, readonly) bool featureEnabled;
@property (readonly) unsigned long long hash;
@property (readonly) HMDHome *home;
@property (getter=isHomeAppForegrounded, readonly) bool homeAppForegrounded;
@property (getter=hasHomeOnboardedForAccessCodes, readonly) bool homeOnboardedForAccessCodes;
@property (readonly) HMFMessageDispatcher *messageDispatcher;
@property (readonly) NSNotificationCenter *notificationCenter;
@property (readonly) bool primaryResidentSupportsAccessCodes;
@property (readonly) HMDRemoteMessageForwarder *remoteMessageForwarder;
@property (readonly) double removedUserAccessCodeTimeToLive;
@property (readonly) HMDDevice *residentCommunicationHandlerPreferredDevice;
@property (readonly) long long residentDataSyncVerificationRetries;
@property (readonly) double residentDataSyncVerificationRetryTimeInterval;
@property (getter=isResidentSupported, readonly) bool residentSupported;
@property (readonly) Class superclass;
@property (readonly) HMDHomeWalletKeyManager *walletKeyManager;
@property (readonly) NSObject<OS_dispatch_queue> *workQueue;

+ (id)logCategory;

- (void).cxx_destruct;
- (id)UUID;
- (id)UUIDsOfAccessoriesSupportingAccessCodes;
- (id)UUIDsOfHAPAccessoriesSupportingAccessCodes;
- (id)UUIDsOfMatterAccessoriesSupportingAccessCodes;
- (id)UUIDsOfUsersWithoutAccessCodes;
- (id)_performMockedReadRequests:(id)arg1;
- (id)_performMockedWriteRequests:(id)arg1;
- (id)accessoriesSupportingAccessCodes;
- (long long)accessoryReadWriteRetries;
- (double)accessoryReadWriteRetryTimeInterval;
- (id)administratorHandler;
- (id)bulletinBoard;
- (void)configureWithMessageDispatcher:(id)arg1;
- (double)dataCleanUpCheckTimerInterval;
- (id)demoDataMocker;
- (id)generateAccessCodeValueFromConstraints:(id)arg1 accessoryAccessCodes:(id)arg2 homeAccessCodes:(id)arg3;
- (id)hapAccessoryWithUUID:(id)arg1;
- (bool)hasHomeOnboardedForAccessCodes;
- (id)home;
- (id)initWithHome:(id)arg1 workQueue:(id)arg2;
- (id)initWithHome:(id)arg1 workQueue:(id)arg2 UUID:(id)arg3;
- (bool)isCurrentDeviceOwnerController;
- (bool)isCurrentDeviceOwnerUser;
- (bool)isCurrentDevicePrimaryResident;
- (bool)isCurrentDeviceResidentCapable;
- (bool)isCurrentDeviceWatch;
- (bool)isDemoDataMockerEnabled;
- (bool)isFeatureEnabled;
- (bool)isHomeAppForegrounded;
- (bool)isResidentSupported;
- (id)messageDispatcher;
- (id)notificationCenter;
- (id)performReadRequests:(id)arg1 withRetries:(long long)arg2 timeInterval:(double)arg3 loggingObject:(id)arg4;
- (id)performWriteRequests:(id)arg1 withRetries:(long long)arg2 timeInterval:(double)arg3 loggingObject:(id)arg4;
- (bool)primaryResidentSupportsAccessCodes;
- (void)redispatchToResidentMessage:(id)arg1;
- (id)remoteMessageForwarder;
- (double)removedUserAccessCodeTimeToLive;
- (id)residentCommunicationHandlerPreferredDevice;
- (long long)residentDataSyncVerificationRetries;
- (double)residentDataSyncVerificationRetryTimeInterval;
- (id)userForMessage:(id)arg1;
- (id)userWithUUID:(id)arg1;
- (id)walletKeyManager;
- (id)workQueue;

@end
