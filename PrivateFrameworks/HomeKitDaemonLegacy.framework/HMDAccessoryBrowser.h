
@interface HMDAccessoryBrowser : HMFObject <HAPAccessoryServerBrowserDelegate, HAPAccessoryServerDelegate, HMDAccessoryBrowserHapProtocol, HMDAccessoryBrowserProtocol, HMDAuthServerDelegate, HMDMediaBrowserDelegate, HMDWACAccessoryConfigurationDelegate, HMDWACBrowserDelegate, HMDWatchSystemStateDelegate, HMFLogging, HMFMessageReceiver, HMFTimerDelegate> {
    HMDUnassociatedWACAccessory * _accessoryPerformingWAC;
    NSMutableArray * _accessoryServerBrowsers;
    bool  _active;
    NSHashTable * _activeAssertions;
    HMDAuthServer * _authServer;
    NSArray * _browseableLinkTypes;
    NSMutableSet * _browsingConnections;
    HAPAccessoryServerBrowserBTLE * _btleAccessoryServerBrowser;
    bool  _btlePowerState;
    HMMTRAccessoryServerBrowser * _chipAccessoryServerBrowser;
    NSString * _countrycodeForAccessoryReprovisioning;
    NSMutableArray * _currentlyPairingAccessories;
    NSMutableArray * _currentlyPairingProgressHandlers;
    HMDAccessoryServerBrowserDemo * _demoAccessoryServerBrowser;
    NSMutableSet * _deviceSetupMediaAccessories;
    NSMutableSet * _discoveredAccessoryServerIdentifiers;
    NSHashTable * _discoveringAccessoryServerBrowsers;
    NSHashTable * _discoveringBLEAccessoryServerIdentifiers;
    unsigned long long  _generationCounter;
    HAPAccessoryServerBrowser * _hap2AccessoryServerBrowser;
    HMDHAP2Storage * _hap2Storage;
    bool  _hasActiveWACPairing;
    HMDHomeManager * _homeManager;
    NSString * _identifierOfAccessoryBeingReprovisioned;
    bool  _internalDiscoveryRequest;
    HAPAccessoryServerBrowserIP * _ipAccessoryServerBrowser;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    <HMDAccessoryBrowserManagerDelegate> * _managerDelegate;
    HMDMediaBrowser * _mediaBrowser;
    HMFMessageDispatcher * _messageDispatcher;
    NSMutableArray * _pairedAccessories;
    NSObject<OS_dispatch_source> * _reachabilityTimerForBTLE;
    HMFTimer * _stopBrowsingAccessoriesNeedingReprovisioningTimer;
    HMFTimer * _stopReprovisioningTimer;
    NSHashTable * _tombstonedHAPAccessoryServers;
    NSMutableSet * _unassociatedMediaAccessories;
    NSMutableSet * _unassociatedWACAccessories;
    unsigned long long  _unitTestBTLEReachabilityInterval;
    <HMDAccessoryBrowserUnpairedAccessoryManagerDelegate> * _unpairedAccessoryManagerDelegate;
    NSMutableSet * _unpairedHAPAccessories;
    NSUUID * _uuid;
    HMDWACBrowser * _wacBrowser;
    NSData * _wiFiPSKForAccessoryReprovisioning;
    NSObject<OS_dispatch_queue> * _workQueue;
}

@property (getter=getActiveWACSession, setter=setActiveWACSession:, nonatomic, retain) HMDUnassociatedWACAccessory *accessoryPerformingWAC;
@property (nonatomic, retain) NSMutableArray *accessoryServerBrowsers;
@property (nonatomic) bool active;
@property (nonatomic, retain) HMDAuthServer *authServer;
@property (nonatomic, retain) NSArray *browseableLinkTypes;
@property (nonatomic, retain) HAPAccessoryServerBrowserBTLE *btleAccessoryServerBrowser;
@property (nonatomic) bool btlePowerState;
@property (readonly) HMMTRAccessoryServerBrowser *chipAccessoryServerBrowser;
@property (nonatomic, retain) NSString *countrycodeForAccessoryReprovisioning;
@property (nonatomic, retain) NSMutableArray *currentlyPairingAccessories;
@property (nonatomic, retain) NSMutableArray *currentlyPairingProgressHandlers;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, retain) HMDAccessoryServerBrowserDemo *demoAccessoryServerBrowser;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSArray *deviceSetupMediaAccessories;
@property (nonatomic, retain) NSMutableSet *discoveredAccessoryServerIdentifiers;
@property (nonatomic, retain) NSHashTable *discoveringAccessoryServerBrowsers;
@property (nonatomic, readonly) NSHashTable *discoveringBLEAccessoryServerIdentifiers;
@property (nonatomic) unsigned long long generationCounter;
@property (nonatomic, retain) HAPAccessoryServerBrowser *hap2AccessoryServerBrowser;
@property (nonatomic, retain) HMDHAP2Storage *hap2Storage;
@property (nonatomic) bool hasActiveWACPairing;
@property (readonly) unsigned long long hash;
@property (nonatomic) HMDHomeManager *homeManager;
@property (nonatomic, retain) NSString *identifierOfAccessoryBeingReprovisioned;
@property bool internalDiscoveryRequest;
@property (nonatomic, retain) HAPAccessoryServerBrowserIP *ipAccessoryServerBrowser;
@property (nonatomic) <HMDAccessoryBrowserManagerDelegate> *managerDelegate;
@property (nonatomic, retain) HMDMediaBrowser *mediaBrowser;
@property (nonatomic, retain) HMFMessageDispatcher *messageDispatcher;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property (nonatomic, readonly) NSUUID *messageTargetUUID;
@property (nonatomic, retain) NSMutableArray *pairedAccessories;
@property (nonatomic, retain) NSObject<OS_dispatch_source> *reachabilityTimerForBTLE;
@property (nonatomic, readonly) HMFTimer *stopBrowsingAccessoriesNeedingReprovisioningTimer;
@property (nonatomic, readonly) HMFTimer *stopReprovisioningTimer;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSHashTable *tombstonedHAPAccessoryServers;
@property (readonly, copy) NSArray *unassociatedAccessories;
@property (nonatomic, readonly) NSArray *unassociatedMediaAccessories;
@property (nonatomic) unsigned long long unitTestBTLEReachabilityInterval;
@property (nonatomic) <HMDAccessoryBrowserUnpairedAccessoryManagerDelegate> *unpairedAccessoryManagerDelegate;
@property (nonatomic, readonly) NSArray *unpairedHAPAccessories;
@property (nonatomic, retain) NSUUID *uuid;
@property (nonatomic, retain) HMDWACBrowser *wacBrowser;
@property (nonatomic, retain) NSData *wiFiPSKForAccessoryReprovisioning;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *workQueue;

+ (id)logCategory;

- (void).cxx_destruct;
- (void)__activate;
- (void)__addBrowsingConnection:(id)arg1;
- (void)__handleProcessStateChange:(id)arg1;
- (id)__identifiersOfPairedAccessoriesWithTransports:(unsigned long long)arg1;
- (void)__inactivate;
- (bool)__isAccessoryBrowsingRequested;
- (bool)__isMediaAccessoryBrowsingRequested;
- (void)__removeBrowsingObserver:(id)arg1 error:(id)arg2;
- (void)__resetBrowsingConnections;
- (void)_addDiscoveredAccessoryServerIdentifier:(id)arg1;
- (void)_addReconfirmTimer:(id)arg1 accessoryServer:(id)arg2;
- (void)_addUnpairedAccessoryForServer:(id)arg1;
- (void)_associate:(bool)arg1 hapAccessoryWithAdvertisement:(id)arg2;
- (void)_associateMediaAccessoryForServer:(id)arg1;
- (void)_btleAccessoryReachabilityProbeTimer:(bool)arg1;
- (void)_callProgressOrErrorOut:(id)arg1 pairingInfo:(id)arg2 accessoryInfo:(id)arg3 unpairedAccessory:(id)arg4 progress:(long long)arg5 certStatus:(unsigned long long)arg6;
- (void)_cancelCurrentlyPairingAccessories:(long long)arg1 linkType:(id)arg2;
- (void)_cancelPairingWithAccessory:(id)arg1 error:(id)arg2;
- (void)_cancelPairingWithAccessoryDescription:(id)arg1 error:(id)arg2;
- (void)_checkIfPairingWithPairedAccessoryServer:(id)arg1 errorCode:(long long)arg2;
- (void)_continueAfterPPIDValidation:(bool)arg1 server:(id)arg2;
- (void)_discoverAccessories:(id)arg1;
- (void)_discoverAccessoryServer:(id)arg1 linkType:(long long)arg2 errorHandler:(id /* block */)arg3;
- (id)_getHAPMetadataFromHMMetadata:(id)arg1;
- (void)_handleAddedAccessory:(id)arg1;
- (void)_handleAddedAccessoryAdvertisements:(id)arg1;
- (void)_handleCurrentWiFiNetworkChangedNotification:(id)arg1;
- (void)_handlePairingInterruptedTimeout:(id)arg1 error:(id)arg2;
- (void)_handleRemovedAccessory:(id)arg1;
- (void)_handleRemovedAccessoryAdvertisements:(id)arg1;
- (void)_handleRemovedUnpairedHAPAccessory:(id)arg1;
- (void)_handleRequestFetchNewAccessories:(id)arg1;
- (void)_handleRequestSearchForNewAccessories:(id)arg1;
- (void)_handleSetupCodeAvailable:(id)arg1;
- (void)_handleTestModeConfigRequest:(id)arg1;
- (void)_handleWACAccessoryFound;
- (bool)_isAccessoryServerTombstoned:(id)arg1;
- (bool)_isHomeHubMatterSharedAdminPairingCapableWithConfiguration:(id)arg1;
- (bool)_isOwnerPairingAccessoryWithConfiguration:(id)arg1;
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didDiscoverAccessories:(id)arg2 transaction:(id)arg3 error:(id)arg4;
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didStopPairingWithError:(id)arg2;
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didUpdateCategory:(id)arg2;
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didUpdateHasPairings:(bool)arg2;
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didUpdateValuesForCharacteristics:(id)arg2 stateNumber:(id)arg3 broadcast:(bool)arg4;
- (void)_notifyDelegateOfAccessoryServerNeedingReprovisioning:(id)arg1 error:(id)arg2;
- (void)_notifyDelegateOfDiscoveryFailure:(id)arg1 accessoryServer:(id)arg2 linkType:(long long)arg3;
- (void)_notifyDelegateOfNewPairedAccessoryServer:(id)arg1 stateChanged:(bool)arg2 stateNumber:(id)arg3;
- (void)_notifyDelegateOfReachabilityChange:(bool)arg1 forAccessoryWithIdentifier:(id)arg2;
- (void)_notifyDelegateOfReachabilityChangeChange:(bool)arg1 forBTLEAccessories:(id)arg2;
- (void)_notifyDelegateOfRemovedAccessoryServer:(id)arg1 error:(id)arg2;
- (void)_notifyDelegateOfTombstonedAccessoryServer:(id)arg1;
- (void)_notifyDelegateOfWACCompletionForAccessoryServerWithIdentifier:(id)arg1 error:(id)arg2;
- (void)_notifyManagerOfNewAccessory;
- (void)_pairAccessory:(id)arg1 configuration:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)_pairAccessoryWithDescription:(id)arg1 configuration:(id)arg2 progressHandler:(id /* block */)arg3 completionHandler:(id /* block */)arg4;
- (id)_pairingInformationForAccessoryIdentifier:(id)arg1;
- (id)_pairingInformationForUnpairedAccessory:(id)arg1;
- (id)_progressHandlerForUnpairedAccessory:(id)arg1;
- (void)_promptForPairingPasswordForServer:(id)arg1 reason:(id)arg2;
- (void)_registerForMessages;
- (void)_registerForNotifications;
- (void)_removeBrowsingConnection:(id)arg1 error:(id)arg2;
- (void)_removeDiscoveredAccessoryServerIdentifier:(id)arg1;
- (void)_removePairingInformation:(id)arg1 error:(id)arg2;
- (void)_removePairingInformationForUnpairedAccessory:(id)arg1;
- (void)_reprovisionAccessoryWithIdentifier:(id)arg1 wiFiPSK:(id)arg2 countryCode:(id)arg3 withCompletion:(id /* block */)arg4;
- (id)_requiredCharacteristicsTypesToReadFromBTLEServer:(id)arg1;
- (void)_restartBrowsers;
- (void)_resurrectAccessoryServer:(id)arg1;
- (void)_sendNewAccessoryData:(id)arg1 messageName:(id)arg2;
- (void)_sendPairingCompletionStatusForServer:(id)arg1 error:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)_setBTLEPowerChangeCompletionHandler;
- (bool)_shouldAccessoryServerBeTombstoned:(id)arg1;
- (void)_startDiscoveringAccessoriesNeedingReprovisioning;
- (void)_startDiscoveringAccessoriesWithLinkType:(id)arg1;
- (void)_startDiscoveringMediaAccessories;
- (void)_startDiscoveringPairedAccessories:(id)arg1;
- (void)_startDiscoveryForAccessoryServerBrowser:(id)arg1;
- (void)_startOrStopAccessoryDiscovery;
- (void)_startPairingInterruptionTimer:(id)arg1;
- (void)_stopBtleAccessoryReachabilityProbeTimer;
- (void)_stopDiscoveringAccessoriesWithError:(id)arg1;
- (void)_stopDiscoveringAccessoriesWithLinkType:(id)arg1 force:(bool)arg2 error:(id)arg3;
- (void)_stopDiscoveringMediaAccessories;
- (void)_stopDiscoveryForAccessoryServerBrowser:(id)arg1;
- (void)_stopReconfirmTimer:(id)arg1;
- (void)_stopReprovisioningTimerHandler;
- (void)_tombstoneAccessoryServer:(id)arg1 forceNotify:(bool)arg2;
- (id)_tombstonedAccessoryServerWithServerIdentifier:(id)arg1;
- (id)_unassociatedMediaAccessoryWithIdentifier:(id)arg1;
- (id)_unpairedAccessoryMatchingPairingInfo:(id)arg1;
- (void)_updateHasActiveWACPairing:(long long)arg1;
- (void)_updatePairingRetryTimerForAccessory:(id)arg1 delay:(long long)arg2;
- (id)accessoryBrowserHapProtocol;
- (void)accessoryServer:(id)arg1 authenticateUUID:(id)arg2 token:(id)arg3;
- (void)accessoryServer:(id)arg1 confirmUUID:(id)arg2 token:(id)arg3;
- (void)accessoryServer:(id)arg1 didDisconnectWithError:(id)arg2;
- (void)accessoryServer:(id)arg1 didDiscoverAccessories:(id)arg2 transaction:(id)arg3 error:(id)arg4;
- (void)accessoryServer:(id)arg1 didFinishAuth:(id)arg2;
- (void)accessoryServer:(id)arg1 didReceiveBadPasswordThrottleAttemptsWithDelay:(long long)arg2;
- (void)accessoryServer:(id)arg1 didStopPairingWithError:(id)arg2;
- (void)accessoryServer:(id)arg1 didUpdateCategory:(id)arg2;
- (void)accessoryServer:(id)arg1 didUpdateConnectionState:(bool)arg2 linkLayerType:(long long)arg3 withError:(id)arg4;
- (void)accessoryServer:(id)arg1 didUpdateConnectionState:(bool)arg2 sessionInfo:(id)arg3 linkLayerType:(long long)arg4 withError:(id)arg5;
- (void)accessoryServer:(id)arg1 didUpdateHasPairings:(bool)arg2;
- (void)accessoryServer:(id)arg1 didUpdateName:(id)arg2;
- (void)accessoryServer:(id)arg1 didUpdateValuesForCharacteristics:(id)arg2 stateNumber:(id)arg3 broadcast:(bool)arg4;
- (void)accessoryServer:(id)arg1 didUpdateWakeNumber:(id)arg2;
- (void)accessoryServer:(id)arg1 promptUserForPasswordWithType:(unsigned long long)arg2;
- (void)accessoryServer:(id)arg1 promtDialog:(id)arg2 forNotCertifiedAccessory:(id)arg3 completion:(id /* block */)arg4;
- (void)accessoryServer:(id)arg1 requestUserPermission:(long long)arg2 accessoryInfo:(id)arg3 error:(id)arg4;
- (void)accessoryServer:(id)arg1 updatePairingProgress:(long long)arg2;
- (void)accessoryServer:(id)arg1 validateCert:(id)arg2 model:(id)arg3;
- (void)accessoryServer:(id)arg1 validateUUID:(id)arg2 token:(id)arg3 model:(id)arg4;
- (void)accessoryServerBrowser:(id)arg1 accessoryServer:(id)arg2 didUpdateValuesForCharacteristics:(id)arg3 stateNumber:(id)arg4 broadcast:(bool)arg5;
- (void)accessoryServerBrowser:(id)arg1 didChangeReachability:(bool)arg2 forAccessoryServerWithIdentifier:(id)arg3;
- (void)accessoryServerBrowser:(id)arg1 didFailToDiscoverAccessoryServerWithIdentifier:(id)arg2;
- (void)accessoryServerBrowser:(id)arg1 didFindAccessoryServer:(id)arg2 stateChanged:(bool)arg3 stateNumber:(id)arg4;
- (void)accessoryServerBrowser:(id)arg1 didFindAccessoryServerForReprovisioning:(id)arg2;
- (void)accessoryServerBrowser:(id)arg1 didFindAccessoryServerNeedingReprovisioning:(id)arg2 error:(id)arg3;
- (void)accessoryServerBrowser:(id)arg1 didFinishPairingForAccessoryServer:(id)arg2;
- (void)accessoryServerBrowser:(id)arg1 didFinishWACForAccessoryWithIdentifier:(id)arg2 error:(id)arg3;
- (void)accessoryServerBrowser:(id)arg1 didRemoveAccessoryServer:(id)arg2 error:(id)arg3;
- (void)accessoryServerBrowser:(id)arg1 didStartDiscoveringWithError:(id)arg2;
- (void)accessoryServerBrowser:(id)arg1 didStopDiscoveringWithError:(id)arg2;
- (void)accessoryServerBrowser:(id)arg1 getCacheForAccessoryWithIdentifier:(id)arg2 withCompletion:(id /* block */)arg3;
- (void)accessoryServerBrowser:(id)arg1 getCommissioningCertificatesForNodeID:(id)arg2 fabricID:(id)arg3 publicKey:(id)arg4 completion:(id /* block */)arg5;
- (void)accessoryServerBrowser:(id)arg1 getThreadNetworkCredentialsForAccessoryWithIdentifier:(id)arg2 withCompletion:(id /* block */)arg3;
- (void)accessoryServerBrowser:(id)arg1 removeCacheForAccessoryWithIdentifier:(id)arg2;
- (void)accessoryServerBrowser:(id)arg1 saveCache:(id)arg2 serverIdentifier:(id)arg3;
- (id)accessoryServerBrowsers;
- (void)accessoryServerDidUpdateStateNumber:(id)arg1;
- (void)accessoryServerNeedsOwnershipToken:(id)arg1;
- (void)activate:(bool)arg1;
- (bool)active;
- (void)addPairedAccessory:(id)arg1;
- (void)addUnassociatedAccessory:(id)arg1 forDeviceSetup:(bool)arg2;
- (void)addUnassociatedMediaAccessory:(id)arg1 forDeviceSetup:(bool)arg2;
- (void)addUnassociatedWACAccessory:(id)arg1;
- (void)addUnpairedAccessoryServer:(id)arg1 identifier:(id)arg2;
- (void)addUnpairedHAPAccessory:(id)arg1;
- (bool)areThereAnyAssociatedAirPlayAccessories;
- (bool)areThereAnyPairedAccessories;
- (bool)areThereAnyPairedBTLEAccessories;
- (id)authServer;
- (id)beginActiveAssertionWithReason:(id)arg1;
- (id)browseableLinkTypes;
- (void)browser:(id)arg1 didAddAdvertisements:(id)arg2;
- (void)browser:(id)arg1 didRemoveAdvertisements:(id)arg2;
- (void)browser:(id)arg1 didRemoveSessions:(id)arg2;
- (void)browser:(id)arg1 didUpdateEndpoints:(id)arg2;
- (id)browsingConnections;
- (void)btleAccessoryReachabilityProbeTimer:(bool)arg1;
- (id)btleAccessoryServerBrowser;
- (bool)btlePowerState;
- (void)cancelPairingWithAccessory:(id)arg1 error:(id)arg2;
- (void)cancelPairingWithAccessoryDescription:(id)arg1 error:(id)arg2;
- (id)chipAccessoryServerBrowser;
- (void)configureAccessory:(id)arg1 trackState:(bool)arg2 connectionPriority:(bool)arg3;
- (void)configureDemoBrowserWithDemoAccessories:(id)arg1 finalized:(bool)arg2;
- (void)configureWithHomeManager:(id)arg1;
- (void)configureWithHomeManager:(id)arg1 mediaBrowserFactory:(id /* block */)arg2;
- (void)continueAddingAccessoryToHomeAfterUserConfirmation:(id)arg1 withError:(id)arg2;
- (id)countrycodeForAccessoryReprovisioning;
- (id)currentControllerPairingIdentity;
- (void)currentlyFoundHAPAccessoryServerWithIdentifier:(id)arg1 linkType:(long long)arg2 completion:(id /* block */)arg3;
- (id)currentlyPairingAccessories;
- (id)currentlyPairingProgressHandlers;
- (void)dealloc;
- (id)demoAccessoryServerBrowser;
- (void)deregisterPairedAccessory:(id)arg1;
- (id)deviceSetupMediaAccessories;
- (void)didFinishActivation:(id)arg1 context:(id)arg2;
- (void)didReceiveUserConsentResponseForSetupAccessoryDetail:(id)arg1 consent:(bool)arg2;
- (void)discoverAccessories:(id)arg1;
- (void)discoverAccessoryServer:(id)arg1 linkType:(long long)arg2 errorHandler:(id /* block */)arg3;
- (id)discoveredAccessoryServerIdentifiers;
- (id)discoveredAccessoryServers;
- (id)discoveringAccessoryServerBrowsers;
- (id)discoveringBLEAccessoryServerIdentifiers;
- (id)dumpBrowsingConnections;
- (id)dumpRegisteredPairedAccessories;
- (id)dumpUnassociatedAccessories;
- (void)endActiveAssertion:(id)arg1;
- (void)evaluateAccessoryDiscoveryState;
- (void)fetchAccessoryCacheForIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (id)findAccessoryServerForAccessoryDescription:(id)arg1;
- (unsigned long long)generationCounter;
- (id)getActiveWACSession;
- (void)handleActivationResponse:(id)arg1 context:(id)arg2;
- (void)handleAddedAccessory:(id)arg1;
- (void)handleConnectionDeactivation:(id)arg1;
- (void)handleNewlyPairedAccessory:(id)arg1 linkType:(long long)arg2;
- (void)handlePPIDInfoResponse:(id)arg1 context:(id)arg2 error:(id)arg3;
- (void)handleRemovedAccessory:(id)arg1;
- (void)handleSetupCodeAvailable:(id)arg1;
- (void)handleXPCConnectionInvalidated:(id)arg1;
- (id)hap2AccessoryServerBrowser;
- (id)hap2Storage;
- (bool)hasActiveWACPairing;
- (void)homeLocationChangeNotification:(id)arg1;
- (id)homeManager;
- (id)identifierOfAccessoryBeingReprovisioned;
- (id)identifiersOfAssociatedMediaAccessories;
- (id)identifiersOfPairedBTLEAccessories;
- (id)initWithMessageDispatcher:(id)arg1;
- (id)initWithMessageDispatcher:(id)arg1 injectedSettings:(id)arg2;
- (bool)internalDiscoveryRequest;
- (id)ipAccessoryServerBrowser;
- (bool)isBrowsingAllowed;
- (bool)isDiscoveringAccessoriesWithLinkType:(long long)arg1;
- (bool)isServerLinkTypeBrowseable:(long long)arg1;
- (id)managerDelegate;
- (id)mediaBrowser;
- (id)messageDestination;
- (id)messageDispatcher;
- (id)messageReceiveQueue;
- (id)messageTargetUUID;
- (unsigned long long)numPairedIPAccessories;
- (void)pairAccessory:(id)arg1 configuration:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)pairAccessoryWithDescription:(id)arg1 configuration:(id)arg2 progressHandler:(id /* block */)arg3 completionHandler:(id /* block */)arg4;
- (id)pairedAccessories;
- (id)pairedAccessoryInformationWithIdentifier:(id)arg1;
- (id)pairedAccessoryInformationWithSetupID:(id)arg1;
- (id)pairedHMDHAPAccessoryWithAccessoryServer:(id)arg1;
- (void)probeReachabilityForBTLEAccessoryServersWithIdentifiers:(id)arg1 forceScan:(bool)arg2 withCompletion:(id /* block */)arg3;
- (id)reachabilityTimerForBTLE;
- (void)registerPairedAccessory:(id)arg1 transports:(unsigned long long)arg2 setupHash:(id)arg3 delegate:(id)arg4;
- (void)registerProgressHandler:(id /* block */)arg1 unpairedAccessoryUUID:(id)arg2;
- (void)removeAccessoryCacheForIdentifier:(id)arg1;
- (void)removePairedAccessory:(id)arg1;
- (void)removePairedAccessoryInfoWithIdentifier:(id)arg1;
- (void)removePairingInformationForAccessoryServer:(id)arg1;
- (void)removeUnassociatedAccessory:(id)arg1;
- (void)removeUnassociatedAccessoryWithIdentifier:(id)arg1;
- (void)removeUnassociatedMediaAccessory:(id)arg1;
- (void)removeUnassociatedWACAccessory:(id)arg1;
- (void)removeUnpairedHAPAccessory:(id)arg1;
- (void)reprovisionAccessoryWithIdentifier:(id)arg1 wiFiPSK:(id)arg2 countryCode:(id)arg3 withCompletion:(id /* block */)arg4;
- (void)requestPermissionToAssociateWACAccessory:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)resetConfiguration;
- (void)resetPairedAccessories;
- (void)restartBrowsers;
- (void)resurrectAccessoryServer:(id)arg1;
- (void)retrieveCurrentStateForIdentifier:(id)arg1 stateNumber:(id*)arg2 isReachable:(bool*)arg3 linkQuality:(unsigned long long*)arg4 lastSeen:(id*)arg5;
- (void)saveAccessoryCache:(id)arg1 forIdentifier:(id)arg2;
- (void)setAccessoryServerBrowsers:(id)arg1;
- (void)setActive:(bool)arg1;
- (void)setActiveWACSession:(id)arg1;
- (void)setAuthServer:(id)arg1;
- (void)setBrowseableLinkTypes:(id)arg1;
- (void)setBtleAccessoryServerBrowser:(id)arg1;
- (void)setBtlePowerState:(bool)arg1;
- (void)setCountrycodeForAccessoryReprovisioning:(id)arg1;
- (void)setCurrentlyPairingAccessories:(id)arg1;
- (void)setCurrentlyPairingProgressHandlers:(id)arg1;
- (void)setDemoAccessoryServerBrowser:(id)arg1;
- (void)setDiscoveredAccessoryServerIdentifiers:(id)arg1;
- (void)setDiscoveringAccessoryServerBrowsers:(id)arg1;
- (void)setGenerationCounter:(unsigned long long)arg1;
- (void)setHap2AccessoryServerBrowser:(id)arg1;
- (void)setHap2Storage:(id)arg1;
- (void)setHasActiveWACPairing:(bool)arg1;
- (void)setHomeManager:(id)arg1;
- (void)setIdentifierOfAccessoryBeingReprovisioned:(id)arg1;
- (void)setInternalDiscoveryRequest:(bool)arg1;
- (void)setIpAccessoryServerBrowser:(id)arg1;
- (void)setManagerDelegate:(id)arg1;
- (void)setMediaBrowser:(id)arg1;
- (void)setMessageDispatcher:(id)arg1;
- (void)setPairedAccessories:(id)arg1;
- (void)setQOS:(long long)arg1;
- (void)setReachabilityTimerForBTLE:(id)arg1;
- (void)setUnitTestBTLEReachabilityInterval:(unsigned long long)arg1;
- (void)setUnpairedAccessoryManagerDelegate:(id)arg1;
- (void)setUuid:(id)arg1;
- (void)setWacBrowser:(id)arg1;
- (void)setWiFiPSKForAccessoryReprovisioning:(id)arg1;
- (void)setWorkQueue:(id)arg1;
- (void)startDiscoveringAccessories;
- (void)startDiscoveringAccessoriesNeedingReprovisioning;
- (void)startDiscoveringAccessoriesWithLinkType:(long long)arg1;
- (void)startDiscoveringMediaAccessories;
- (void)startDiscoveringPairedAccessories;
- (void)startDiscoveringPairedAccessoriesWithLinkType:(long long)arg1;
- (id)stopBrowsingAccessoriesNeedingReprovisioningTimer;
- (void)stopDiscoveringAccessories;
- (void)stopDiscoveringAccessoriesWithLinkType:(long long)arg1;
- (void)stopDiscoveringForUnpairedAccessoriesWithLinkType:(long long)arg1;
- (void)stopDiscoveringMediaAccessories;
- (id)stopReprovisioningTimer;
- (void)stopTrackingBTLEAccessoriesWithIdentifiers:(id)arg1;
- (void)timerDidFire:(id)arg1;
- (void)tombstoneAccessoryServer:(id)arg1;
- (id)tombstonedHAPAccessoryServers;
- (id)unassociatedAccessories;
- (id)unassociatedAccessoriesForClientRequest:(id)arg1;
- (id)unassociatedMediaAccessories;
- (void)unassociatedWACAccessoryDidFinishAssociation:(id)arg1 withError:(id)arg2;
- (void)unassociatedWACAccessoryDidStartAssociation:(id)arg1;
- (unsigned long long)unitTestBTLEReachabilityInterval;
- (id)unpairedAccessoryForServer:(id)arg1;
- (id)unpairedAccessoryManagerDelegate;
- (id)unpairedAccessoryWithServerIdentifier:(id)arg1;
- (id)unpairedAccessoryWithUUID:(id)arg1;
- (id)unpairedHAPAccessories;
- (id)unpairedHAPAccessoryWithAccessoryDescription:(id)arg1;
- (void)updateAlreadyPairingProgressForAccessoryServerIdentifier:(id)arg1 progressHandler:(id /* block */)arg2;
- (void)updateBroadcastKeyForIdentifier:(id)arg1 key:(id)arg2 keyUpdatedStateNumber:(id)arg3 keyUpdatedTime:(double)arg4;
- (void)updatePairingWithProgress:(long long)arg1 accessoryServer:(id)arg2;
- (void)updateProgressForMappedErrors:(id)arg1 accessoryServer:(id)arg2 progressHandler:(id /* block */)arg3;
- (void)updateStateForIdentifier:(id)arg1 stateNumber:(id)arg2;
- (void)updateUnassociatedWACAccessory:(id)arg1;
- (id)uuid;
- (void)validateLinkTypes:(id)arg1;
- (void)vendorModel:(id*)arg1 vendorManufacturer:(id*)arg2 accessoryInfo:(id)arg3;
- (id)wacBrowser;
- (id)wiFiPSKForAccessoryReprovisioning;
- (id)workQueue;

@end
