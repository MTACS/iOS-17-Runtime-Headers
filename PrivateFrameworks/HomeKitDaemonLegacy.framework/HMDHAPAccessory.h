
@interface HMDHAPAccessory : HMDAccessory <HAPAccessoryDelegate, HAPAccessoryServerNotification, HMDAccessoryMinimumUserPrivilegeCapable, HMDAccessoryUserManagement, HMDServiceOwner, HMDSiriEndpointProfileMetricsDispatcherDataSource, HMDSiriEndpointProfileMetricsDispatcherFactory, HMFTimerDelegate, HMMTRAccessoryServerDelegate> {
    NSMutableDictionary * _accessCodeCache;
    HMDAccessoryAdvertisement * _accessoryAdvertisement;
    HMFTimer * _accessoryDiscoveryBackoffTimer;
    NSNumber * _accessoryFlags;
    HMFTimer * _accessoryKeyRefreshTimer;
    HMDAccessoryMetric * _accessoryMetric;
    unsigned long long  _activationAttempts;
    NSMutableSet * _activeSessionRestoreClients;
    NSNumber * _backedOffStateNumber;
    NSData * _broadcastKey;
    HMDBulletinBoard * _bulletinBoard;
    HMDUser * _cachedRemovedUser;
    HMCameraUserNotificationSettings * _cameraProfileNotificationSettings;
    HMDCameraProfileSettingsManager * _cameraProfileSettingsManager;
    long long  _certificationStatus;
    HMDCHIPAccessoryStorage * _chipStorage;
    long long  _communicationProtocol;
    HMFConnectivityInfo * _connectivityInfo;
    HMDDataStreamController * _dataStreamController;
    HMDAccessoryDiagnosticsManager * _diagnosticsManager;
    NAFuture * _didConfigureCHIPAccessoryServerFuture;
    NSMutableArray * _discoveredServices;
    HMDDoorbellChimeController * _doorbellChimeController;
    HMDAccessoryFirmwareUpdateProfile * _firmwareUpdateProfile;
    HMDHAPMetadata * _hapMetadata;
    NSArray * _hapServicesListForAnalytics;
    bool  _hardwareSupport;
    NSNumber * _hasOnboardedForNaturalLighting;
    bool  _hasPostedBulletinForAccessCodeOnboarding;
    bool  _hasPostedBulletinForWalletKeyOnboarding;
    bool  _hasSiriEndpointService;
    NSSet * _identifiersForBridgedAccessories;
    NSSet * _initialServiceTypeUUIDs;
    NSNumber * _internalEnhancedAuthConfigNumber;
    NSNumber * _internalEnhancedAuthMethod;
    NSNumber * _internalThreadActive;
    NSNumber * _internalThreadCapabilities;
    NSNumber * _internalThreadStatus;
    bool  _keyGenerationInProgress;
    unsigned char  _keyGenerationType;
    NSNumber * _keyUpdatedStateNumber;
    NSDate * _keyUpdatedTime;
    double  _lastLinkChangeSessionCheckTime;
    unsigned long long  _lastSessionStatus;
    NSNumber * _matterNodeID;
    NSNumber * _matterProductID;
    NSNumber * _matterVendorID;
    NSNumber * _needsOnboarding;
    HMDNetworkRouterController * _networkRouterController;
    unsigned long long  _pairingAttempts;
    NSString * _pairingUsername;
    HMDPendingCharacteristic * _pendingPowerOn;
    NSMutableArray * _pendingReads;
    NSMutableArray * _powerOnCompletionRoutines;
    HMDAnalyticsHAPServiceData * _primaryHAPServiceForAnalytics;
    HMDService * _primaryService;
    NSData * _publicKey;
    bool  _reachableViaBSP;
    NSMutableArray * _services;
    HMFTimer * _sessionRestoreTimer;
    NSData * _setupHash;
    bool  _shouldDisconnectOnIdle;
    unsigned long long  _siriEndpointCapabilities;
    HMDSiriEndpointProfileMetricsDispatcher * _siriEndpointProfileMetricsDispatcher;
    NSNumber * _sleepInterval;
    bool  _supportsAccessCode;
    bool  _supportsTargetController;
    bool  _supportsWalletKey;
    unsigned long long  _suspendedState;
    HMDAccessorySymptomHandler * _symptomsHandler;
    HMDTargetControllerManager * _targetControllerManager;
    NSArray * _targetUUIDs;
    NSMutableArray * _transportInformationInstances;
    NSString * _uniqueIdentifier;
    NSNumber * _wakingViaCharacteristicWithIID;
    HMDWiFiManagementController * _wiFiManagementController;
    NSNumber * _wiFiTransportCapabilities;
}

@property (retain) NSMutableDictionary *accessCodeCache;
@property (nonatomic, retain) HMDAccessoryAdvertisement *accessoryAdvertisement;
@property (nonatomic, retain) HMFTimer *accessoryDiscoveryBackoffTimer;
@property (nonatomic, copy) NSNumber *accessoryFlags;
@property (nonatomic, retain) HMFTimer *accessoryKeyRefreshTimer;
@property (nonatomic, retain) HMDAccessoryMetric *accessoryMetric;
@property (nonatomic) unsigned long long activationAttempts;
@property (nonatomic, retain) NSMutableSet *activeSessionRestoreClients;
@property (readonly, copy) NSDictionary *assistantObject;
@property (nonatomic, readonly, copy) NSArray *attributeDescriptions;
@property (getter=isAutomaticThirdPartyAccessorySoftwareUpdateEnabled, readonly) bool automaticThirdPartyAccessorySoftwareUpdateEnabled;
@property (nonatomic, copy) NSNumber *backedOffStateNumber;
@property (nonatomic, copy) NSData *broadcastKey;
@property (nonatomic, retain) HMDBulletinBoard *bulletinBoard;
@property (nonatomic, retain) HMDUser *cachedRemovedUser;
@property (readonly, copy) HMCameraUserNotificationSettings *cameraProfileNotificationSettings;
@property (nonatomic, copy) HMCameraUserNotificationSettings *cameraProfileNotificationSettings;
@property (nonatomic, readonly) HMDCameraProfileSettingsManager *cameraProfileSettingsManager;
@property (nonatomic, readonly, copy) NSSet *cameraProfiles;
@property (nonatomic) long long certificationStatus;
@property (nonatomic, readonly) HMMTRAccessoryServer *chipAccessoryServer;
@property (readonly, copy) NSNumber *chipNodeId;
@property (nonatomic, retain) HMDCHIPAccessoryStorage *chipStorage;
@property (getter=isClientRegisteredForNotifications, readonly) bool clientRegisteredForNotifications;
@property long long communicationProtocol;
@property (nonatomic, retain) HMFConnectivityInfo *connectivityInfo;
@property (nonatomic, retain) HMDDataStreamController *dataStreamController;
@property (readonly) <HMDDataStreamSocketController> *dataStreamSocketController;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) HMDAccessoryDiagnosticsManager *diagnosticsManager;
@property (nonatomic, retain) HMDAccessoryDiagnosticsManager *diagnosticsManager;
@property (readonly) NAFuture *didConfigureCHIPAccessoryServerFuture;
@property (nonatomic, retain) NSMutableArray *discoveredServices;
@property (nonatomic, retain) HMDDoorbellChimeController *doorbellChimeController;
@property (nonatomic, readonly) unsigned long long enhancedAuthMethod;
@property (readonly) HMDAccessoryFirmwareUpdateProfile *firmwareUpdateProfile;
@property (nonatomic, retain) HMDAccessoryFirmwareUpdateProfile *firmwareUpdateProfile;
@property (nonatomic, readonly, copy) NSNumber *hapInstanceId;
@property (readonly) HMDHAPMetadata *hapMetadata;
@property (nonatomic, readonly, copy) NSArray *hapServicesListForAnalytics;
@property (nonatomic) bool hardwareSupport;
@property (readonly) bool hasCameraStreamService;
@property (copy) NSNumber *hasOnboardedForNaturalLighting;
@property (nonatomic) bool hasPostedBulletinForAccessCodeOnboarding;
@property (nonatomic) bool hasPostedBulletinForWalletKeyOnboarding;
@property (readonly) bool hasResidentWithFirmwareUpdatesSupport;
@property (readonly) bool hasSiriEndpointService;
@property bool hasSiriEndpointService;
@property (readonly) bool hasSiriSettingsService;
@property (readonly) bool hasSmartSpeakerService;
@property (readonly) bool hasTelevisionService;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSSet *identifiersForBridgedAccessories;
@property (readonly) unsigned long long identityType;
@property (nonatomic, readonly) NSSet *initialServiceTypeUUIDs;
@property (nonatomic, readonly) NSNumber *internalEnhancedAuthConfigNumber;
@property (nonatomic, readonly) NSNumber *internalEnhancedAuthMethod;
@property (nonatomic, retain) NSNumber *internalThreadActive;
@property (nonatomic, retain) NSNumber *internalThreadCapabilities;
@property (nonatomic, retain) NSNumber *internalThreadStatus;
@property (readonly) bool isAppleAccessory;
@property (nonatomic, readonly) bool isCertifiedForSiriEndpoint;
@property bool keyGenerationInProgress;
@property unsigned char keyGenerationType;
@property (nonatomic, copy) NSNumber *keyUpdatedStateNumber;
@property (nonatomic, copy) NSDate *keyUpdatedTime;
@property (nonatomic) double lastLinkChangeSessionCheckTime;
@property (nonatomic) unsigned long long lastSessionStatus;
@property (readonly) NSSet *lightProfiles;
@property (nonatomic, readonly) HMDLowPowerModeProfile *lpmProfile;
@property (nonatomic, retain) NSNumber *matterNodeID;
@property (nonatomic, copy) NSNumber *matterProductID;
@property (nonatomic, copy) NSNumber *matterVendorID;
@property (readonly) HMDMediaProfile *mediaProfile;
@property (nonatomic, readonly) unsigned short metric_threadCapabilities;
@property (nonatomic, retain) NSNumber *needsOnboarding;
@property (nonatomic, readonly) HMDNetworkRouterController *networkRouterController;
@property (nonatomic, retain) HMDNetworkRouterController *networkRouterController;
@property (nonatomic, readonly) HMDNetworkRouterProfile *networkRouterProfile;
@property (nonatomic, readonly) HMDNetworkRouterSatelliteProfile *networkRouterSatelliteProfile;
@property (readonly, copy) NSData *nfcReaderIdentifier;
@property (getter=isPaired, nonatomic, readonly) bool paired;
@property (nonatomic) unsigned long long pairingAttempts;
@property (readonly, copy) HMFPairingIdentity *pairingIdentity;
@property (nonatomic, retain) NSString *pairingUsername;
@property (nonatomic, retain) HMDPendingCharacteristic *pendingPowerOn;
@property (retain) NSMutableArray *pendingReads;
@property (nonatomic, retain) NSMutableArray *powerOnCompletionRoutines;
@property (nonatomic, readonly, copy) HMDAnalyticsHAPServiceData *primaryHAPServiceForAnalytics;
@property (readonly) <HMDMessageRouter> *primaryResidentMessageRouter;
@property (nonatomic, readonly) HMDService *primaryService;
@property (readonly, copy) NSString *privateDescription;
@property (readonly, copy) NSString *propertyDescription;
@property (nonatomic, retain) NSData *publicKey;
@property (getter=isReachableViaBSP, nonatomic) bool reachableViaBSP;
@property (nonatomic, readonly) NSString *serializedIdentifier;
@property (nonatomic, readonly) NSSet *serviceTypeUUIDs;
@property (readonly, copy) NSArray *services;
@property (nonatomic, retain) HMFTimer *sessionRestoreTimer;
@property (nonatomic, copy) NSData *setupHash;
@property (readonly, copy) NSString *shortDescription;
@property (readonly) bool shouldAutoDiscoverAccessoryServer;
@property bool shouldDisconnectOnIdle;
@property unsigned long long siriEndpointCapabilities;
@property (readonly) HMDSiriEndpointProfile *siriEndpointProfile;
@property (retain) HMDSiriEndpointProfileMetricsDispatcher *siriEndpointProfileMetricsDispatcher;
@property (nonatomic, copy) NSNumber *sleepInterval;
@property (readonly) Class superclass;
@property (nonatomic, readonly) HMSupportedAccessoryDiagnostics *supportedDiagnostics;
@property bool supportsAccessCode;
@property (readonly) bool supportsCHIP;
@property (getter=isCameraRecordingFeatureSupported, readonly) bool supportsCameraRecordingFeature;
@property (readonly) bool supportsHAP;
@property (nonatomic, readonly) bool supportsSiri;
@property (nonatomic, readonly) bool supportsSiriEndpoint;
@property (readonly) bool supportsSiriEndpointOnBoarding;
@property (readonly) bool supportsUserManagement;
@property bool supportsWalletKey;
@property (nonatomic) unsigned long long suspendedState;
@property (nonatomic, retain) HMDAccessorySymptomHandler *symptomsHandler;
@property (nonatomic, retain) HMDTargetControllerManager *targetControllerManager;
@property (nonatomic, retain) NSArray *targetUUIDs;
@property (getter=isThreadTheCurrentlyActiveTransport, nonatomic, readonly) bool threadActiveTransport;
@property (nonatomic, readonly) unsigned short threadCapabilities;
@property (nonatomic, readonly) unsigned short threadStatus;
@property (nonatomic, readonly, copy) NSArray *transportInformationInstances;
@property (nonatomic, copy) NSString *uniqueIdentifier;
@property (readonly, copy) NSString *urlString;
@property (nonatomic, copy) NSNumber *wakingViaCharacteristicWithIID;
@property (readonly) HMDWiFiManagementController *wiFiManagementController;
@property (nonatomic, retain) HMDWiFiManagementController *wiFiManagementController;
@property (nonatomic, copy) NSNumber *wiFiTransportCapabilities;

+ (double)chipPairingModeActiveDuration;
+ (void)encodeServices:(id)arg1 forXPCCoder:(id)arg2 metadata:(id)arg3;
+ (unsigned long long)getAWDTransportTypeWithLinkType:(long long)arg1;
+ (bool)hasMessageReceiverChildren;
+ (bool)supportsSecureCoding;
+ (Class)transactionClass;

- (void).cxx_destruct;
- (void)__checkLowBatteryUpdatedNotification:(id)arg1;
- (void)__createNetworkRouterController:(id)arg1;
- (bool)__createNetworkRouterProfileAndController:(id)arg1;
- (bool)__createSatelliteNetworkRouterProfile:(id)arg1;
- (void)__handleCharacteristicsChangedPayload:(id)arg1;
- (bool)__removeNetworkRouterController;
- (void)__updateNotifyingCharacteristicStateNumber:(id)arg1;
- (id)_accessoryForHH2MigrationFileName;
- (void)_addHAPAccessory:(id)arg1;
- (void)_addService:(id)arg1;
- (void)_autoConfigureTargetController;
- (void)_cancelPowerOn;
- (void)_challengeAccessoryAuthMethod;
- (void)_checkBridgedAccessoryOnConfigured;
- (void)_checkForSiriEndpointServiceChange;
- (void)_checkRegisterForServerNotification;
- (void)_checkResidentDeviceForReachabilityPing;
- (void)_checkSession;
- (void)_checkSessionRestoreOnLinkStateChange;
- (void)_commissionToThreadNetworkWithActivity:(id)arg1 pairingEvent:(id)arg2 completion:(id /* block */)arg3;
- (void)_configNumberUpdated;
- (void)_configureTargetControllerWithCompletion:(id /* block */)arg1;
- (void)_configureWithAccessoryServices:(id)arg1 changedCharacteristics:(id*)arg2;
- (bool)_containsSecureCharacteristic;
- (id)_createDiagnosticsManager:(id)arg1;
- (id)_createSymptomHandler;
- (void)_deregisterAllClientsFromSessionRestore;
- (void)_destroyDiagnosticsManager;
- (void)_disableNotificationsForBundleID:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)_doPrimaryResidentUpdated;
- (void)_doReachabilityUpdateForServer:(id)arg1;
- (void)_enableBroadcastNotifications:(bool)arg1 hapAccessory:(id)arg2 forCharacteristics:(id)arg3;
- (void)_enableNotification:(bool)arg1 forCharacteristics:(id)arg2 message:(id)arg3 clientIdentifier:(id)arg4;
- (void)_evaluateAvailableSoftwareUpdate;
- (void)_evaluateLocalOperation:(long long)arg1 state:(id)arg2 completion:(id /* block */)arg3;
- (void)_fetchPairingsAndUpdateTransaction;
- (id)_findThreadControlPointCharacteristicWithError:(id*)arg1;
- (void)_forceEnableReachabilityPingForPrimaryResident:(id)arg1;
- (void)_forceUpdateBTLEKeyGenerationForServer:(id)arg1;
- (double)_getDurationAndUpdateCurrentTime:(id)arg1 currentTime:(id*)arg2;
- (void)_groupCharacteristicsNotificationWithCharacteristics:(id)arg1 enable:(bool)arg2 activity:(id)arg3 clientIdentifier:(id)arg4 groupCharacteristicsError:(id*)arg5 characteristicsToModifyLocally:(id*)arg6 characteristicsToModifyOnResident:(id*)arg7 characteristicsToDisableOnResident:(id*)arg8 characteristicsErrorsMapFailingToModify:(id*)arg9;
- (void)_handleActivateCHIPPairingModeAndCreateSetupPayloadStringMessage:(id)arg1;
- (void)_handleActivateCHIPPairingModeMessage:(id)arg1;
- (void)_handleAddServiceTransaction:(id)arg1 message:(id)arg2;
- (void)_handleChangeUpdateSource:(id)arg1;
- (bool)_handleCharacteristicError:(id)arg1 read:(bool)arg2 characteristic:(id)arg3 didRelayMessage:(id)arg4;
- (void)_handleCharacteristicRead:(id)arg1;
- (void)_handleCharacteristicWrite:(id)arg1;
- (void)_handleConfigureTargets:(id)arg1;
- (void)_handleDiscoveryBackoffTimerFired;
- (void)_handleFetchCHIPPairingsMessage:(id)arg1;
- (void)_handleHomeNameChangedNotification:(id)arg1;
- (void)_handleHomeUserRemovedNotification:(id)arg1;
- (void)_handleKeyRefreshTimerFired;
- (void)_handleMultipleCharacteristicsUpdated:(id)arg1 message:(id)arg2 completionQueue:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)_handleRemoveCHIPPairingsMessage:(id)arg1;
- (void)_handleRemoveStagedSoftwareUpdate:(id)arg1;
- (void)_handleRenameService:(id)arg1;
- (void)_handleRoomChangedFromOldRoomName:(id)arg1;
- (void)_handleServiceRemovedTransaction:(id)arg1 message:(id)arg2;
- (void)_handleSessionRestoreTimerFired;
- (void)_handleStartUpdate:(id)arg1;
- (void)_handleUnreachableAccessoryToPerformOperation:(long long)arg1 operationBlock:(id /* block */)arg2 errorBlock:(id /* block */)arg3;
- (void)_handleUpdateAccessoryConnectionState:(id)arg1;
- (void)_handleUpdateAssociatedServiceType:(id)arg1;
- (void)_handleUpdateCharacteristicAuthorizationDataMessage:(id)arg1;
- (void)_handleUpdateMediaSourceDisplayOrder:(id)arg1;
- (void)_handleUpdatedAuthMethod;
- (void)_handleUpdatedName:(id)arg1;
- (void)_handleUpdatedPairings:(id)arg1 previousPairings:(id)arg2;
- (bool)_handleUpdatedServicesForAccessCodes;
- (bool)_handleUpdatedServicesForCameraProfiles:(id)arg1;
- (void)_handleUpdatedServicesForDataStreamController:(id)arg1;
- (bool)_handleUpdatedServicesForDiagnosticsManager:(id)arg1;
- (bool)_handleUpdatedServicesForDoorbellController;
- (bool)_handleUpdatedServicesForFirmwareUpdateProfile:(id)arg1;
- (bool)_handleUpdatedServicesForLightProfiles:(id)arg1;
- (bool)_handleUpdatedServicesForLowPowerModeProfile;
- (bool)_handleUpdatedServicesForMediaProfile:(id)arg1;
- (bool)_handleUpdatedServicesForNetworkRouterProfileAndController:(id)arg1;
- (void)_handleUpdatedServicesForProfilesAndControllers:(bool)arg1;
- (bool)_handleUpdatedServicesForSiriEndpointProfile:(id)arg1;
- (void)_handleUpdatedServicesForThreadManagementWithActivity:(id)arg1;
- (bool)_handleUpdatedServicesForWalletKey;
- (bool)_handleUpdatedServicesForWiFiManagementController;
- (void)_handleValidatePairingAuthMethodMessage:(id)arg1;
- (void)_handleWakeSuspendedAccessoryMessage:(id)arg1;
- (bool)_isRegisteredForNotificationsByForegroundProcess;
- (void)_logServerReachabilityNotification:(id)arg1;
- (void)_logServerReachabilityNotification:(bool)arg1 withDuration:(id)arg2 withLinkType:(id)arg3;
- (void)_maybeCommissionToThreadNetworkWithActivity:(id)arg1 completion:(id /* block */)arg2;
- (id)_messagesForUpdatedRoom:(id)arg1;
- (void)_notifyBridgedAccessoryReachabilityChange:(id)arg1;
- (void)_notifyCharacteristicNotificationChanges:(id)arg1 enableNotification:(bool)arg2 message:(id)arg3 clientIdentifier:(id)arg4;
- (void)_notifyClientsOfTargetControlSupportUpdate;
- (void)_notifyClientsWithNotificationChangesForCharacteristics:(id)arg1 characteristicErrors:(id)arg2 enableNotification:(bool)arg3 message:(id)arg4;
- (void)_parseResponseFromRemotePeer:(id)arg1 message:(id)arg2 error:(id)arg3 characteristic:(id)arg4;
- (void)_performOperation:(long long)arg1 linkType:(long long)arg2 operationBlock:(id /* block */)arg3 errorBlock:(id /* block */)arg4;
- (void)_postUpdateEventsIfDifferent:(id)arg1;
- (id)_prepareMessagePayloadForCharacteristicRemoteWrite:(id)arg1;
- (void)_readCharacteristicValues:(id)arg1 hapAccessory:(id)arg2 source:(unsigned long long)arg3 message:(id)arg4 logEvent:(id)arg5 completionHandler:(id /* block */)arg6;
- (void)_readCharacteristicValues:(id)arg1 localOperationRequired:(bool)arg2 source:(unsigned long long)arg3 message:(id)arg4 logEvent:(id)arg5 completionHandler:(id /* block */)arg6 errorBlock:(id /* block */)arg7;
- (void)_readValueForCharacteristic:(id)arg1 hapAccessory:(id)arg2 requestMessage:(id)arg3;
- (void)_reconcileAccessControlSetting;
- (void)_reenableNotificationsOnWatch;
- (void)_registerForMessages;
- (void)_registerForMessages_lowPowerMode;
- (void)_relayReadFromCharacteristic:(id)arg1 toResidentForMessage:(id)arg2 viaDevice:(id)arg3;
- (void)_relayWriteToCharacteristic:(id)arg1 toResidentForMessage:(id)arg2 viaDevice:(id)arg3;
- (bool)_remotelySetNotificationsEnabled:(bool)arg1 forCharacteristic:(id)arg2 clientIdentifier:(id)arg3;
- (void)_removeBackedoffAccessoryForStateNumber:(id)arg1;
- (void)_removeService:(id)arg1;
- (void)_removeSystemCommissionerPairingFromAccessoryPairings:(id)arg1 completion:(id /* block */)arg2;
- (void)_renameAccessory:(id)arg1 resetName:(bool)arg2 message:(id)arg3;
- (void)_renameService:(id)arg1 name:(id)arg2 message:(id)arg3 completionBlock:(id /* block */)arg4;
- (bool)_resolveAudioAbility:(id)arg1;
- (bool)_resolveSupportedSiriInputType:(id)arg1;
- (void)_retrieveHAPAccessoryToPerformOperation:(long long)arg1 linkType:(long long)arg2 operationBlock:(id /* block */)arg3 errorBlock:(id /* block */)arg4 activity:(id)arg5;
- (void)_retrieveHAPAccessoryToPerformOperation:(long long)arg1 linkType:(long long)arg2 retries:(unsigned long long)arg3 operationBlock:(id /* block */)arg4 errorBlock:(id /* block */)arg5 activity:(id)arg6;
- (void)_saveHardwareSupport:(bool)arg1;
- (void)_saveTargetUUIDs:(id)arg1;
- (bool)_serviceSupportsMinimumUserPrivilege:(id)arg1;
- (void)_setNotificationsEnabled:(bool)arg1 forCharacteristics:(id)arg2 clientIdentifier:(id)arg3 matchingHAPAccessory:(id)arg4;
- (void)_setNotificationsEnabled:(bool)arg1 forCharacteristics:(id)arg2 hapAccessory:(id)arg3 activity:(id)arg4 completion:(id /* block */)arg5;
- (void)_setTargetControllerSession;
- (bool)_shouldFilterAccessoryProfile:(id)arg1;
- (bool)_shouldTrackAccessoryWithPriority:(bool*)arg1;
- (void)_startManualUpdateFromBestSuitableDevice:(id)arg1;
- (void)_startSessionMonitor;
- (void)_startUpdateFromCurrentDeviceWithRequest:(id)arg1;
- (void)_startUpdateSessionWithRequest:(id)arg1;
- (void)_stopScan;
- (void)_stopSessionMonitor;
- (void)_submitReachabilityDelayedMetric:(id)arg1;
- (void)_submitStateNumberChangeMetric;
- (bool)_supportsMediaAccessControl;
- (unsigned long long)_threadRSSIToLinkQuality:(id)arg1;
- (void)_updateAccessoryTracking;
- (void)_updateAuthMethodWithServer:(id)arg1 completion:(id /* block */)arg2;
- (void)_updateBroadcastKey:(id)arg1 keyUpdatedStateNumber:(id)arg2 keyUpdatedTime:(double)arg3;
- (void)_updateCHIPAccessoryWithFabricLabel:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)_updatePrimaryServiceIfNeededWithService:(id)arg1;
- (void)_updateReachability;
- (void)_updateReachabilityMetric:(bool)arg1 withDuration:(id)arg2;
- (void)_updateSessionRestoreOnServer:(bool)arg1;
- (void)_updateSiriAudioFormat:(id)arg1;
- (void)_updateStateForTrackedAccessory:(id)arg1 stateNumber:(id)arg2;
- (id)_updatedResponseForRemoteResponse:(id)arg1;
- (id)_updatedResponseTuplesForRequests:(id)arg1 error:(id)arg2 source:(unsigned long long)arg3 suspended:(bool)arg4;
- (bool)_validateConnectivityInfo:(id)arg1;
- (bool)_validateCurrentThreadCredentials:(id)arg1 metadata:(id)arg2;
- (bool)_validateIncomingMessage:(id)arg1;
- (void)_wakeAccessoryIfNeededForCharacteristicRequests:(id)arg1 source:(unsigned long long)arg2 activity:(id)arg3 completion:(id /* block */)arg4;
- (void)_wakeSuspendedHAPAccessoryToPerformOperation:(long long)arg1 linkType:(long long)arg2 operationBlock:(id /* block */)arg3 errorBlock:(id /* block */)arg4 activity:(id)arg5;
- (unsigned long long)_wifiRSSIToLinkQuality:(id)arg1;
- (void)_wirelessPowerOn:(id /* block */)arg1;
- (void)_wol_ignoreWakingViaCharacteristicUpdateFromChangedService:(id)arg1;
- (void)_wol_processDidRemoveHPAccessoryServer:(id)arg1;
- (void)_wol_processReadWriteResponseForCharacteristic:(id)arg1 isRead:(bool)arg2 error:(id)arg3;
- (void)_wol_runAccessoryTransaction:(id)arg1 localOnly:(bool)arg2;
- (void)_wol_updateSuspendCapableHAPAccessoryServer:(id)arg1;
- (void)_wol_updateWakingViaCharacteristicForWriteRequests:(id)arg1;
- (void)_wol_updateWakingViaCharacteristicForWriteResponses:(id)arg1;
- (void)_writeCharacteristicValues:(id)arg1 hapAccessory:(id)arg2 source:(unsigned long long)arg3 message:(id)arg4 logEvent:(id)arg5 completionHandler:(id /* block */)arg6;
- (void)_writeCharacteristicValues:(id)arg1 localOperationRequired:(bool)arg2 source:(unsigned long long)arg3 completionHandler:(id /* block */)arg4 errorBlock:(id /* block */)arg5;
- (void)_writeCharacteristicValues:(id)arg1 localOperationRequired:(bool)arg2 source:(unsigned long long)arg3 message:(id)arg4 completionHandler:(id /* block */)arg5 logEvent:(id)arg6 errorBlock:(id /* block */)arg7;
- (void)_writeCredentialsForThreadNetworkWithActivity:(id)arg1 pairingEvent:(id)arg2 metadata:(id)arg3 threadControlPointCharacteristic:(id)arg4 completion:(id /* block */)arg5;
- (void)_writeThreadControlPointCharacteristic:(id)arg1 value:(id)arg2 activity:(id)arg3 completion:(id /* block */)arg4;
- (void)_writeValue:(id)arg1 forCharacteristic:(id)arg2 hapAccessory:(id)arg3 authorizationData:(id)arg4 message:(id)arg5;
- (id)accessCodeCache;
- (void)accessory:(id)arg1 didUpdateReachabilityState:(bool)arg2;
- (id)accessoryAdvertisement;
- (id)accessoryCategoryTypeForSiriEndpointProfileMetricsDispatcher:(id)arg1;
- (id)accessoryDiscoveryBackoffTimer;
- (id)accessoryFlags;
- (id)accessoryKeyRefreshTimer;
- (id)accessoryMetric;
- (void)acknowledgeTargetControlService:(id)arg1 active:(bool)arg2;
- (unsigned long long)activationAttempts;
- (id)activeSessionRestoreClients;
- (void)addAdvertisement:(id)arg1;
- (void)addDataStreamBulkSendListener:(id)arg1 fileType:(id)arg2;
- (void)addHostedAccessory:(id)arg1;
- (void)addSession:(long long)arg1;
- (void)addTarget:(id)arg1 buttonConfiguration:(id)arg2;
- (void)addTransportInformationInstance:(id)arg1;
- (void)addUser:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)anyIPServer;
- (id)assistantObject;
- (bool)associateControllerKeyWithAccessory:(id)arg1 error:(id*)arg2;
- (void)associateWithAccessoryAdvertisement:(id)arg1;
- (id)attributeDescriptions;
- (void)autoConfigureTargetController;
- (void)autoUpdateCachedCountDownCharacteristics:(id)arg1;
- (void)backOffAccessoryForStateNumber:(id)arg1 backoffPeriod:(double)arg2;
- (id)backedOffStateNumber;
- (id)backingStoreObjects:(long long)arg1;
- (id)backingStoreTransactionWithName:(id)arg1;
- (id)bridge;
- (id)broadcastKey;
- (bool)bulkSendListenersRequireCharacteristicReadsSync;
- (id)bulletinBoard;
- (id)cachedRemovedUser;
- (id)cameraProfileNotificationSettings;
- (id)cameraProfileNotificationSettingsFromCoder:(id)arg1;
- (id)cameraProfileSettingsManager;
- (id)cameraProfiles;
- (bool)canAcceptBulkSendListeners;
- (bool)canAcceptBulkSendListenersSync;
- (bool)canProceedWithRequests:(id)arg1 suspended:(bool*)arg2 error:(id*)arg3;
- (bool)canReturnCachedValueForCharacteristic:(id)arg1;
- (bool)canWakeBasedOnCharacteristicRequests:(id)arg1;
- (bool)canWakeUpViaWoL;
- (bool)canWakeViaCustomWoBLE;
- (void)cancelPowerOn;
- (long long)certificationStatus;
- (id)characteristicWithAuthorizationDataMessage:(id)arg1;
- (id)characteristicsPassingTest:(id /* block */)arg1;
- (void)checkHAPSessionRestore;
- (id)chipAccessoryServer;
- (id)chipNodeId;
- (id)chipStorage;
- (void)cleanupNotificationCenterObservers;
- (void)commissionToThreadNetworkWithPairingEvent:(id)arg1 completion:(id /* block */)arg2;
- (long long)communicationProtocol;
- (id)compositeSettingsControllerManagerForSiriEndpointProfileMetricsDispatcher:(id)arg1;
- (long long)computeSiriEndpointCertification;
- (void)configureBulletinNotification;
- (void)configureCHIPAccessory;
- (id)configureService:(id)arg1;
- (void)configureSiriEndpointProfileMetricsDispatcherWithFactory:(id)arg1 logEventSubmitter:(id)arg2 dailyScheduler:(id)arg3;
- (void)configureTargetControllerWithCompletion:(id /* block */)arg1;
- (void)configureWithAccessory:(id)arg1 homeNotificationsEnabled:(bool)arg2 queue:(id)arg3 completion:(id /* block */)arg4;
- (void)configureWithHome:(id)arg1 msgDispatcher:(id)arg2 configurationTracker:(id)arg3 initialConfiguration:(bool)arg4;
- (id)connectivityInfo;
- (id)createSiriEndpointProfileMetricsDispatcherWithAccessoryUUID:(id)arg1 homeUUID:(id)arg2 logEventSubmitter:(id)arg3;
- (id)createUpdateServiceTransactionWithServiceUUID:(id)arg1;
- (id)currentActiveSessionRestoreClients;
- (bool)custom1WoBLE;
- (id)dataStreamController;
- (id)dataStreamSocketController;
- (void)deregisterFromSessionRestore:(id)arg1;
- (id)diagnosticsManager;
- (id)didConfigureCHIPAccessoryServerFuture;
- (void)didUpdateConnectionState:(bool)arg1 linkLayerType:(long long)arg2 withError:(id)arg3;
- (void)didUpdateConnectionState:(bool)arg1 sessionInfo:(id)arg2 linkLayerType:(long long)arg3 withError:(id)arg4;
- (void)didUpdatePairingsForAccessoryServer:(id)arg1;
- (void)disableNotificationsForBundleID:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)discoveredServices;
- (id)doorbellChimeController;
- (id)dumpSimpleState;
- (id)dumpState;
- (void)enableNotification:(bool)arg1 forCharacteristicIDs:(id)arg2 message:(id)arg3 clientIdentifier:(id)arg4;
- (void)enableNotification:(bool)arg1 forCharacteristics:(id)arg2 message:(id)arg3 clientIdentifier:(id)arg4;
- (void)enableNotificationsWithHAPAccessory:(id)arg1 homeNotificationsEnabled:(bool)arg2;
- (void)encodeCameraProfileNotificationSettingsWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)endpointIdentifier;
- (unsigned long long)enhancedAuthMethod;
- (void)establishLocalHAPConnectionWithQueue:(id)arg1 completion:(id /* block */)arg2;
- (void)evaluateSymptomHandler;
- (id)eventForwarder;
- (id)eventSourceIdentifier;
- (id)eventStoreReadHandle;
- (double)eventTimestamp;
- (id)expectedTransport;
- (id)findCharacteristic:(id)arg1;
- (id)findCharacteristic:(id)arg1 forService:(id)arg2;
- (id)findCharacteristicType:(id)arg1 forServiceType:(id)arg2;
- (id)findCharacteristicsByType:(id)arg1 forServiceType:(id)arg2;
- (id)findCharacteristicsByTypes:(id)arg1 forServiceType:(id)arg2;
- (id)findService:(id)arg1;
- (id)findServiceWithServiceType:(id)arg1;
- (id)firmwareUpdateManager;
- (id)firmwareUpdateProfile;
- (id)getAccessoryDiagnostics;
- (id)getBluetoothAddress;
- (id)getConfiguredName;
- (id)getFullError:(id)arg1 source:(unsigned long long)arg2 suspended:(bool)arg3;
- (id)getHAPAccessoryMatchingInstanceId;
- (void)getLinkQualityForAccessory:(id)arg1 forMessage:(id)arg2;
- (id)getOrCreateServiceUpdateTransactionForKey:(id)arg1 fromDictionary:(id)arg2;
- (id)getPrimaryHAPAccessories;
- (void)getSupportedSiriAudioConfiguration:(id /* block */)arg1;
- (id)getTransportInformationArray;
- (void)handleAccessoryConfigured:(id)arg1;
- (void)handleActivateCHIPPairingModeAndCreateSetupPayloadStringMessage:(id)arg1;
- (void)handleActivateCHIPPairingModeMessage:(id)arg1;
- (void)handleCHIPSendRemoteRequestMessage:(id)arg1;
- (void)handleCharacteristicsChangedNotification:(id)arg1;
- (void)handleClearCredentialMessage:(id)arg1;
- (void)handleClearUserMessage:(id)arg1;
- (void)handleFetchCHIPPairingsMessage:(id)arg1;
- (void)handleGetAllUsersMessage:(id)arg1;
- (void)handleHomeUserRemovedNotification:(id)arg1;
- (void)handleIdentifyAccessoryMessage:(id)arg1;
- (void)handleLinkQualityRequestMessage:(id)arg1;
- (void)handleMultipleCharacteristicsUpdated:(id)arg1 message:(id)arg2 completionQueue:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)handlePairedStateChange:(bool)arg1;
- (void)handlePrimaryResidentUpdateNotification:(id)arg1;
- (void)handleRemoteGatewayNotificationRegistration:(id)arg1 enable:(bool)arg2 enableTime:(id)arg3;
- (void)handleRemoveCHIPPairingsMessage:(id)arg1;
- (void)handleRemoveCorrespondingSystemCommissionerMessage:(id)arg1;
- (void)handleResidentDeviceUpdated:(id)arg1;
- (void)handleRoomChanged:(id)arg1;
- (void)handleRoomNameChanged:(id)arg1;
- (void)handleSetHasOnboardedForNaturalLighting:(id)arg1;
- (void)handleUpdatePreferredMediaUser:(id)arg1;
- (void)handleUpdatedAuthMethod;
- (void)handleUpdatedCHIPPropertiesOnAccessoryModel:(id)arg1 actions:(id)arg2;
- (void)handleUpdatedMinimumUserPrivilege:(long long)arg1;
- (void)handleUpdatedPassword:(id)arg1;
- (void)handleUpdatedServicesForThreadManagementWithCompletion:(id /* block */)arg1;
- (id)hapCharacteristicWriteRequests:(id)arg1 hapAccessory:(id)arg2 hmdResponses:(id*)arg3 mapping:(id*)arg4;
- (id)hapInstanceId;
- (id)hapMetadata;
- (id)hapServicesListForAnalytics;
- (bool)hardwareSupport;
- (bool)hasAnyServiceWithTypes:(id)arg1;
- (bool)hasBLEServer;
- (bool)hasBTLELink;
- (bool)hasBattery;
- (bool)hasCameraStreamService;
- (bool)hasIPLink;
- (bool)hasIPServer;
- (id)hasOnboardedForNaturalLighting;
- (bool)hasPostedBulletinForAccessCodeOnboarding;
- (bool)hasPostedBulletinForWalletKeyOnboarding;
- (bool)hasResidentWithFirmwareUpdatesSupport;
- (bool)hasSiriEndpointService;
- (bool)hasSiriSettingsService;
- (bool)hasSmartSpeakerService;
- (bool)hasTelevisionService;
- (bool)hasThreadServer;
- (bool)hasValidCachedValueForCharacteristic:(id)arg1 shouldLog:(bool)arg2;
- (unsigned long long)hash;
- (id)hmdCharacteristicForInstanceId:(id)arg1;
- (id)hmdCharacteristicFromHapCharacteristic:(id)arg1;
- (bool)hmmtrHasBLEServer:(id)arg1;
- (bool)hmmtrHasIPServer:(id)arg1;
- (bool)hmmtrHasThreadServer:(id)arg1;
- (id)identifiersForBridgedAccessories;
- (unsigned long long)identityType;
- (void)indicateNotificationFromServer:(id)arg1 notifyType:(unsigned long long)arg2 withDictionary:(id)arg3;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithHAPMetadata:(id)arg1;
- (id)initWithTransaction:(id)arg1 home:(id)arg2;
- (id)initWithTransaction:(id)arg1 home:(id)arg2 hapMetadata:(id)arg3;
- (id)initialServiceTypeUUIDs;
- (void)initializeBTLEScan;
- (void)initiateScan:(id /* block */)arg1;
- (id)internalEnhancedAuthConfigNumber;
- (id)internalEnhancedAuthMethod;
- (id)internalThreadActive;
- (id)internalThreadCapabilities;
- (id)internalThreadStatus;
- (bool)isAppleAccessory;
- (bool)isAutomaticThirdPartyAccessorySoftwareUpdateEnabled;
- (bool)isBLELinkConnected;
- (bool)isBLESecureSessionEstablished;
- (bool)isCameraRecordingFeatureSupported;
- (bool)isCertifiedForSiriEndpoint;
- (bool)isClientRegisteredForNotifications;
- (bool)isEqual:(id)arg1;
- (bool)isHMMTRAccessoryServer:(id)arg1;
- (bool)isIPSecureSessionEstablished;
- (bool)isNonClientNotificationEnabled;
- (bool)isNotificationEnabled;
- (bool)isNotificationEnabledForClientIdentifier:(id)arg1;
- (bool)isPaired;
- (bool)isPoweringOn;
- (bool)isPrimary;
- (bool)isReachableViaBSP;
- (bool)isReadingRequiredForBTLEAccessoryCharacteristic:(id)arg1 forceReadFWVersion:(bool)arg2;
- (bool)isSecureSessionEstablished;
- (bool)isSecuritySessionOpen;
- (bool)isSuspended;
- (bool)isThreadSecureSessionEstablished;
- (bool)isThreadTheCurrentlyActiveTransport;
- (bool)keyGenerationInProgress;
- (unsigned char)keyGenerationType;
- (id)keyUpdatedStateNumber;
- (id)keyUpdatedTime;
- (double)lastLinkChangeSessionCheckTime;
- (unsigned long long)lastSessionStatus;
- (id)lightProfiles;
- (long long)linkLayerType;
- (long long)linkSpeed;
- (id)logIdentifier;
- (id)lpmProfile;
- (void)makeServiceNameConsistent:(id)arg1 withName:(id)arg2 completionHandler:(id /* block */)arg3;
- (bool)matchesHAPAccessory:(id)arg1;
- (bool)matchesHAPAccessoryWithServerIdentifier:(id)arg1 instanceID:(id)arg2;
- (bool)matchesHAPAccessoryWithServerIdentifier:(id)arg1 linkType:(long long*)arg2;
- (id)matchingHAPAccessoryServerIdentifierWithLinkType:(long long)arg1;
- (id)matchingHAPAccessoryWithLinkType:(long long)arg1;
- (id)matchingHAPAccessoryWithServerIdentifier:(id)arg1;
- (id)matchingHAPAccessoryWithServerIdentifier:(id)arg1 linkType:(long long)arg2;
- (id)matchingSystemCommissionerPairingForCHIPPairings:(id)arg1 amongSystemCommissionerPairings:(id)arg2;
- (id)matchingTransportInformation:(id)arg1;
- (id)matchingTransportInformationWithServerIdentifier:(id)arg1;
- (id)matchingTransportInformationWithServerIdentifier:(id)arg1 instanceID:(id)arg2 linkType:(long long)arg3;
- (id)matchingTransportInformationWithServerIdentifier:(id)arg1 linkType:(long long)arg2;
- (id)matterNodeID;
- (id)matterProductID;
- (id)matterVendorID;
- (void)maybeCommissionToThreadNetworkWithCompletion:(id /* block */)arg1;
- (id)mediaProfile;
- (id)messageReceiverChildren;
- (id)messageSendPolicy;
- (unsigned short)metric_threadCapabilities;
- (id)modelObjectWithChangeType:(unsigned long long)arg1;
- (id)modelObjectWithChangeType:(unsigned long long)arg1 version:(long long)arg2;
- (id)name;
- (id)namesOfServicesShowingTilesInHomeApp;
- (bool)needsAirplayAccess;
- (id)needsOnboarding;
- (id)networkRouterController;
- (id)networkRouterProfile;
- (id)networkRouterSatelliteProfile;
- (id)nfcReaderIdentifier;
- (void)notifyClientsOfTargetControlSupportUpdate;
- (void)notifyClientsOfUpdatedAccessoryControllableValue;
- (void)notifyValue:(id)arg1 previousValue:(id)arg2 error:(id)arg3 forCharacteristic:(id)arg4 requestMessage:(id)arg5;
- (void)notifyingCharacteristicStateNumberUpdated:(id)arg1;
- (unsigned long long)numActiveSessionClients;
- (id)numberFromAttributeReport:(id)arg1;
- (void)openBulkSendSessionForFileType:(id)arg1 reason:(id)arg2 metadata:(id)arg3 queue:(id)arg4 callback:(id /* block */)arg5;
- (unsigned long long)pairingAttempts;
- (id)pairingIdentity;
- (id)pairingUsername;
- (void)pairingsWithCompletionHandler:(id /* block */)arg1;
- (id)pendingPowerOn;
- (id)pendingReads;
- (void)performOperation:(long long)arg1 linkType:(long long)arg2 operationBlock:(id /* block */)arg3 errorBlock:(id /* block */)arg4;
- (void)populateHMDCharacteristicResponses:(id)arg1 hapResponses:(id)arg2 mapping:(id)arg3 overallError:(id)arg4 requests:(id)arg5;
- (void)populateModelObject:(id)arg1 version:(long long)arg2;
- (void)postNetworkRouterProfileNotification:(id)arg1 object:(id)arg2;
- (void)postUpdateEventsIfDifferentWithPreferredMediaUUID:(id)arg1 selectionType:(unsigned long long)arg2;
- (void)powerOnComplete:(id)arg1;
- (id)powerOnCompletionRoutines;
- (id)preferredHAPAccessoryForOperation:(long long)arg1 linkType:(long long*)arg2;
- (id)primaryHAPServiceForAnalytics;
- (id)primaryIPServer;
- (id)primaryResidentMessageRouter;
- (id)primaryService;
- (void)profile:(id)arg1 didUpdateAccessoryState:(unsigned long long)arg2;
- (void)profile:(id)arg1 didUpdateWoWLANInfos:(id)arg2;
- (id)profileFieldsForSiriEndpointProfileMetricsDispatcher:(id)arg1;
- (bool)providesHashRouteID;
- (id)publicKey;
- (void)reachabilityDidChangeToReachable:(id)arg1;
- (void)reachabilityDidChangeToUnreachable:(id)arg1;
- (long long)reachableTransports;
- (void)readCharacteristicValues:(id)arg1 source:(unsigned long long)arg2 message:(id)arg3 queue:(id)arg4 logEvent:(id)arg5 completionHandler:(id /* block */)arg6;
- (void)readCharacteristicValues:(id)arg1 source:(unsigned long long)arg2 queue:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)readInitialRequiredCharacteristicsForAccessory:(id /* block */)arg1;
- (void)registerForActiveIdentifierNotifications;
- (void)registerForSessionRestore:(id)arg1;
- (void)removeAdvertisement:(id)arg1;
- (void)removeAllCHIPPairingsWithCompletion:(id /* block */)arg1;
- (void)removeDataStreamBulkSendListener:(id)arg1;
- (void)removeHostedAccessory:(id)arg1;
- (void)removeSession:(long long)arg1;
- (void)removeTarget:(id)arg1;
- (void)removeTransportInformationInstance:(id)arg1;
- (void)removeUser:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)requestAccessoryDiagnosticCounterReset;
- (id)requestAccessoryDiagnostics;
- (void)requestResource:(id)arg1 queue:(id)arg2 completionHandler:(id /* block */)arg3;
- (bool)requiresRemovalOnPrimaryResident;
- (void)resetAccessoryDiagnosticCounters;
- (void)resetNotificationEnabledTime;
- (bool)residentCanWakeForWOL;
- (void)respondToFetchCHIPPairingsMessage:(id)arg1 pairings:(id)arg2 systemCommissionerPairings:(id)arg3 fetchError:(id)arg4;
- (void)routeUpdatePreferredMediaUser:(id)arg1;
- (void)runTransactionWithPreferredMediaUserUUID:(id)arg1 selectionType:(unsigned long long)arg2 completion:(id /* block */)arg3;
- (id)runtimeState;
- (void)saveBluetoothAddress:(id)arg1;
- (void)saveCharacteristicsToLocalDiskForHH2Migration;
- (void)saveHardwareSupport:(bool)arg1;
- (void)savePublicKeyToKeychain;
- (void)saveTargetUUIDs:(id)arg1;
- (void)scanningCompleteWithAccessoryFound:(bool)arg1 suspended:(bool)arg2;
- (void)sendTargetControlWhoAmIWithIdentifier:(unsigned int)arg1;
- (id)serializedIdentifier;
- (id)serviceTypeUUIDs;
- (id)serviceWithSPIClientIdentifier:(id)arg1;
- (id)serviceWithUUID:(id)arg1;
- (id)services;
- (double)sessionCheckPeriod;
- (id)sessionRestoreTimer;
- (void)setAccessCodeCache:(id)arg1;
- (void)setAccessoryAdvertisement:(id)arg1;
- (void)setAccessoryDiscoveryBackoffTimer:(id)arg1;
- (void)setAccessoryFlags:(id)arg1;
- (void)setAccessoryKeyRefreshTimer:(id)arg1;
- (void)setAccessoryMetric:(id)arg1;
- (void)setActivationAttempts:(unsigned long long)arg1;
- (void)setActiveSessionRestoreClients:(id)arg1;
- (void)setBackedOffStateNumber:(id)arg1;
- (void)setBroadcastKey:(id)arg1;
- (void)setBroadcastKey:(id)arg1 keyUpdatedStateNumber:(id)arg2 keyUpdatedTime:(id)arg3;
- (void)setBulletinBoard:(id)arg1;
- (void)setCHIPReportHandler:(id /* block */)arg1;
- (void)setCachedRemovedUser:(id)arg1;
- (void)setCameraProfileNotificationSettings:(id)arg1;
- (void)setCertificationStatus:(long long)arg1;
- (void)setChipStorage:(id)arg1;
- (void)setCommunicationProtocol:(long long)arg1;
- (void)setCommunicationProtocolIfNeeded;
- (void)setConnectivityInfo:(id)arg1;
- (void)setDataStreamController:(id)arg1;
- (void)setDefaultPreferredMediaUser;
- (void)setDefaultPreferredMediaUserIfNeeded;
- (void)setDiagnosticsManager:(id)arg1;
- (void)setDidConfigureCHIPAccessoryServer;
- (void)setDiscoveredServices:(id)arg1;
- (void)setDoorbellChimeController:(id)arg1;
- (void)setFirmwareUpdateProfile:(id)arg1;
- (void)setHardwareSupport:(bool)arg1;
- (void)setHasOnboardedForNaturalLighting:(id)arg1;
- (void)setHasPostedBulletinForAccessCodeOnboarding:(bool)arg1;
- (void)setHasPostedBulletinForWalletKeyOnboarding:(bool)arg1;
- (void)setHasSiriEndpointService:(bool)arg1;
- (void)setIdentifiersForBridgedAccessories:(id)arg1;
- (void)setInitialServiceTypeUUIDs:(id)arg1;
- (void)setInternalEnhancedAuthMethod:(id)arg1 configNumber:(unsigned long long)arg2;
- (void)setInternalThreadActive:(id)arg1;
- (void)setInternalThreadCapabilities:(id)arg1;
- (void)setInternalThreadStatus:(id)arg1;
- (void)setKeyGenerationInProgress:(bool)arg1;
- (void)setKeyGenerationType:(unsigned char)arg1;
- (void)setKeyUpdatedStateNumber:(id)arg1;
- (void)setKeyUpdatedTime:(id)arg1;
- (void)setLastLinkChangeSessionCheckTime:(double)arg1;
- (void)setLastSessionStatus:(unsigned long long)arg1;
- (void)setMatterNodeID:(id)arg1;
- (void)setMatterProductID:(id)arg1;
- (void)setMatterVendorID:(id)arg1;
- (void)setNeedsOnboarding:(id)arg1;
- (void)setNetworkRouterController:(id)arg1;
- (void)setNotificationsEnabled:(bool)arg1 forCharacteristics:(id)arg2 clientIdentifier:(id)arg3;
- (void)setPairingAttempts:(unsigned long long)arg1;
- (void)setPairingUsername:(id)arg1;
- (void)setPairingUsername:(id)arg1 publicKey:(id)arg2;
- (void)setPendingPowerOn:(id)arg1;
- (void)setPendingReads:(id)arg1;
- (void)setPowerOnCompletionRoutines:(id)arg1;
- (void)setPublicKey:(id)arg1;
- (void)setReachability:(bool)arg1 serverIdentifier:(id)arg2 linkType:(long long)arg3;
- (void)setReachableViaBSP:(bool)arg1;
- (void)setSelectedSiriAudioConfiguration:(id)arg1;
- (void)setSessionRestoreTimer:(id)arg1;
- (void)setSetupHash:(id)arg1;
- (void)setShouldDisconnectOnIdle:(bool)arg1;
- (void)setSiriEndpointCapabilities:(unsigned long long)arg1;
- (void)setSiriEndpointProfileMetricsDispatcher:(id)arg1;
- (void)setSleepInterval:(id)arg1;
- (void)setSupportsAccessCode:(bool)arg1;
- (void)setSupportsWalletKey:(bool)arg1;
- (void)setSuspendedState:(unsigned long long)arg1;
- (void)setSuspendedState:(unsigned long long)arg1 shouldNotify:(bool)arg2;
- (void)setSymptomsHandler:(id)arg1;
- (void)setTargetControllerManager:(id)arg1;
- (void)setTargetUUIDs:(id)arg1;
- (void)setUniqueIdentifier:(id)arg1;
- (void)setWakingViaCharacteristicWithIID:(id)arg1;
- (void)setWiFiManagementController:(id)arg1;
- (void)setWiFiTransportCapabilities:(id)arg1;
- (id)settingTopicForKeyPath:(id)arg1;
- (id)setupHash;
- (id)shortDescription;
- (bool)shouldAutoDiscoverAccessoryServer;
- (bool)shouldConfigureTargetController;
- (bool)shouldDisconnectOnIdle;
- (bool)shouldDiscoverSuspendCapableAccessoryServer:(id)arg1;
- (bool)shouldEnableDaemonRelaunch;
- (bool)shouldSubmitRoutineConfigurationEventForSiriEndpointProfileMetricsDispatcher:(id)arg1;
- (unsigned long long)siriEndpointCapabilities;
- (id)siriEndpointProfile;
- (id)siriEndpointProfileMetricsDispatcher;
- (id)sleepInterval;
- (void)startPing;
- (void)startReachabilityCheck;
- (void)stopPing;
- (void)stopReachabilityCheck;
- (void)stopScan;
- (void)submitCharacteristicReadErrorLogEvent:(id)arg1 message:(id)arg2 error:(id)arg3;
- (void)submitCharacteristicWriteErrorLogEvent:(id)arg1 startDate:(id)arg2 message:(id)arg3 error:(id)arg4;
- (id)supportedDiagnostics;
- (unsigned long long)supportedTransports;
- (bool)supportsAccessCode;
- (bool)supportsAnnounce;
- (bool)supportsCHIP;
- (bool)supportsDiagnosticsTransfer;
- (bool)supportsDoorbellChime;
- (bool)supportsFirmwareUpdate;
- (bool)supportsHAP;
- (bool)supportsIdentify;
- (bool)supportsMinimumUserPrivilege;
- (bool)supportsMultiUser;
- (bool)supportsMusicAlarm;
- (bool)supportsNetworkProtection;
- (bool)supportsPersonalRequests;
- (bool)supportsPreferredMediaUser;
- (bool)supportsPrimaryUserInfoSubscription;
- (bool)supportsSiri;
- (bool)supportsSiriEndpoint;
- (bool)supportsSiriEndpointOnBoarding;
- (bool)supportsSoftwareUpdate;
- (bool)supportsTargetController;
- (bool)supportsThread;
- (bool)supportsThreadCommissioning;
- (bool)supportsUnreachablePing;
- (bool)supportsUserManagement;
- (bool)supportsUserMediaSettings;
- (bool)supportsWalletKey;
- (bool)supportsWiFiReconfiguration;
- (bool)supportsWoL;
- (unsigned long long)suspendedState;
- (id)symptomsHandler;
- (id)targetControllerButtonConfiguration;
- (id)targetControllerManager;
- (unsigned long long)targetControllerTicksPerSecond;
- (id)targetUUIDs;
- (void)testSetInternalEnhancedAuthConfigNumber:(id)arg1;
- (void)testSetInternalEnhancedAuthMethod:(id)arg1;
- (unsigned short)threadCapabilities;
- (unsigned short)threadStatus;
- (void)timerDidFire:(id)arg1;
- (void)transactionObjectRemoved:(id)arg1 message:(id)arg2;
- (void)transactionObjectUpdated:(id)arg1 newValues:(id)arg2 message:(id)arg3;
- (id)transactionWithObjectChangeType:(unsigned long long)arg1;
- (id)transportInformationInstances;
- (id)transportReports;
- (void)unconfigure;
- (void)unconfigureAccessoryWithServerIdentifier:(id)arg1 linkType:(long long)arg2 updateReachability:(bool)arg3;
- (id)uniqueIdentifier;
- (void)unregisterFromAccessoryServer;
- (void)updateAccessoryFlags:(id)arg1;
- (id)updateAccessoryFlagsAndNotifyClients:(id)arg1;
- (bool)updateAccessoryInformationWithCharacteristicType:(id)arg1 serviceType:(id)arg2 value:(id)arg3 accessoryTransaction:(id)arg4;
- (void)updateActiveDisconnectOnIdleTimeout:(double)arg1;
- (void)updateBridgedAccessoryLightProfilesSettings;
- (void)updateButtonConfigurationForTarget:(id)arg1;
- (void)updateCHIPAccessoryName:(id)arg1;
- (void)updateCameraProfileNotificationSettings:(id)arg1;
- (void)updateHasPostedBulletinForWalletKeyOnboarding:(bool)arg1;
- (void)updateLightProfilesSettings;
- (void)updateNotificationEnabled:(bool)arg1 forCharacteristics:(id)arg2 onBehalfOf:(id)arg3;
- (void)updatePrimaryServiceIfNeeded;
- (void)updateSuspendedStateWithConnectionState:(bool)arg1 hapAccessory:(id)arg2;
- (void)updateSuspendedStateWithWakeNumber:(id)arg1 hapAccessory:(id)arg2;
- (void)updateTarget:(id)arg1 name:(id)arg2 buttonConfiguration:(id)arg3;
- (void)updateTargetUUIDs:(id)arg1;
- (void)updateTrackedAccessoryStateNumber:(id)arg1;
- (bool)updateTransportInformation:(id)arg1 localSource:(bool)arg2;
- (id)urlString;
- (void)verifyPairingWithCompletionHandler:(id /* block */)arg1;
- (id)waitForChipAccessoryServer;
- (id)waitForDoorLockClusterObjectWithFlow:(id)arg1;
- (void)wakeOrScanForSuspendedAccessoryForRequests:(id)arg1 source:(unsigned long long)arg2 completion:(id /* block */)arg3;
- (id)wakingViaCharacteristicWithIID;
- (bool)wasUpdatedWithServiceType:(id)arg1;
- (id)wiFiManagementController;
- (id)wiFiTransportCapabilities;
- (void)wirelessPowerOn:(id /* block */)arg1;
- (void)wirelessResumeInit;
- (void)writeCharacteristicValues:(id)arg1 source:(unsigned long long)arg2 message:(id)arg3 queue:(id)arg4 completionHandler:(id /* block */)arg5;
- (void)writeCharacteristicValues:(id)arg1 source:(unsigned long long)arg2 message:(id)arg3 queue:(id)arg4 logEvent:(id)arg5 completionHandler:(id /* block */)arg6;
- (void)writeCharacteristicValues:(id)arg1 source:(unsigned long long)arg2 queue:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)writeValue:(id)arg1 toCharacteristic:(id)arg2 queue:(id)arg3 completion:(id /* block */)arg4;

@end
