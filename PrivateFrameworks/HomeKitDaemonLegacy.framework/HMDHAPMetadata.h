
@interface HMDHAPMetadata : HMFObject {
    NSDictionary * _assistantCharacteristics;
    NSDictionary * _assistantChrHAPTypeNameMap;
    NSDictionary * _assistantServiceHAPTypeNameMap;
    NSDictionary * _assistantServiceNameHAPTypeMap;
    NSDictionary * _assistantUnits;
    NSDictionary * _firmwareUpdateAutoApplyPolicies;
    NSDictionary * _firmwareUpdateStagingPolicies;
    HAPMetadata * _hapMetadata;
    NSDictionary * _hmAccessoryCategories;
    NSDictionary * _hmAllowableSecuringWrites;
    NSSet * _hmBlacklistedCharacteristics;
    NSSet * _hmBlacklistedCharacteristicsFromApp;
    NSSet * _hmBlacklistedServices;
    NSSet * _hmBlacklistedServicesFromApp;
    NSSet * _hmBulletinBoardEnabledTuples;
    NSSet * _hmCoalesceNotificationsTuples;
    NSSet * _hmNotificationAutoEnabledTuples;
    NSSet * _hmRequiresDeviceUnlockTuples;
    NSDictionary * _hmWakeOnOperationsFilter;
    bool  _incomplete;
    NSDictionary * _rawPlist;
    NSNumber * _schemaVersion;
    NSNumber * _version;
}

@property (nonatomic, retain) NSDictionary *assistantCharacteristics;
@property (nonatomic, retain) NSDictionary *assistantChrHAPTypeNameMap;
@property (nonatomic, retain) NSDictionary *assistantServiceHAPTypeNameMap;
@property (nonatomic, retain) NSDictionary *assistantServiceNameHAPTypeMap;
@property (nonatomic, retain) NSDictionary *assistantUnits;
@property (nonatomic, retain) NSDictionary *firmwareUpdateAutoApplyPolicies;
@property (nonatomic, retain) NSDictionary *firmwareUpdateStagingPolicies;
@property (nonatomic, retain) HAPMetadata *hapMetadata;
@property (nonatomic, retain) NSDictionary *hmAccessoryCategories;
@property (nonatomic, retain) NSDictionary *hmAllowableSecuringWrites;
@property (nonatomic, retain) NSSet *hmBlacklistedCharacteristics;
@property (nonatomic, retain) NSSet *hmBlacklistedCharacteristicsFromApp;
@property (nonatomic, retain) NSSet *hmBlacklistedServices;
@property (nonatomic, retain) NSSet *hmBlacklistedServicesFromApp;
@property (nonatomic, retain) NSSet *hmBulletinBoardEnabledTuples;
@property (nonatomic, retain) NSSet *hmCoalesceNotificationsTuples;
@property (nonatomic, retain) NSSet *hmNotificationAutoEnabledTuples;
@property (nonatomic, retain) NSSet *hmRequiresDeviceUnlockTuples;
@property (nonatomic, retain) NSDictionary *hmWakeOnOperationsFilter;
@property (nonatomic) bool incomplete;
@property (nonatomic, readonly) NSDictionary *rawPlist;
@property (nonatomic, retain) NSNumber *schemaVersion;
@property (nonatomic, retain) NSNumber *version;

+ (void)_logCurrentMetadata;
+ (id)dataFromMetadataDictionaryWithKey:(id)arg1;
+ (id)getBuiltinInstance;
+ (id)getSharedInstance;
+ (bool)isAdminPrivilegeRequiredForWritingCharacteristicType:(id)arg1 serviceType:(id)arg2;
+ (bool)isHomedVersionSupported:(id)arg1;
+ (bool)isOwnerPrivilegeRequiredForWritingCharacteristicType:(id)arg1 serviceType:(id)arg2;
+ (bool)isServiceType:(id)arg1 compatibleWithAccessoryCategoryType:(id)arg2;
+ (id)legacyV3DataForCloud;
+ (id)legacyV3DataForIDS;
+ (id)metadataCache;
+ (id)metadataWithDictionary:(id)arg1 error:(id*)arg2;
+ (id)metadataWithPath:(id)arg1 error:(id*)arg2;
+ (void)prepareMetadata;
+ (void)resetShouldUploadToCloudAfterHomedReady;
+ (bool)shouldUploadToCloudAfterHomedReady;
+ (void)updateLocalMetadataWithBuiltinMetadata;
+ (void)updateLocalMetadataWithMetadata:(id)arg1;

- (void).cxx_destruct;
- (id)aliasedHAPCharacteristicTypes;
- (id)aliasedHAPServiceTypes;
- (bool)allowsSecuringWriteFor:(id)arg1 withValue:(id)arg2;
- (id)assistantCharacteristics;
- (id)assistantChrHAPTypeNameMap;
- (id)assistantServiceHAPTypeNameMap;
- (id)assistantServiceNameHAPTypeMap;
- (id)assistantUnits;
- (id)audioAccessoryCategory;
- (id)autoApplyPolicyConfigurationForService:(id)arg1 category:(id)arg2;
- (id)categoryForIdentifier:(id)arg1;
- (id)categoryForOther;
- (id)categoryForType:(id)arg1;
- (id)categoryTypeFromName:(id)arg1;
- (id)characteristicNameFromType:(id)arg1;
- (id)characteristicTypeFromName:(id)arg1;
- (id)characteristicValueUnit:(id)arg1;
- (bool)checkTupleExistsInSet:(id)arg1 forChrType:(id)arg2 svcType:(id)arg3;
- (id)descriptionForCharacteristicType:(id)arg1;
- (id)descriptionForServiceType:(id)arg1;
- (id)disallowedAssistantCharacteristicTypesByServiceType;
- (bool)disallowsAssistantServiceType:(id)arg1 characteristicType:(id)arg2;
- (id)firmwareUpdateAutoApplyPolicies;
- (id)firmwareUpdateStagingPolicies;
- (bool)generateNotificationOnConfigurationForCharacteristicType:(id)arg1 serviceType:(id)arg2;
- (id)getAliasedCharacteristicTypes:(id)arg1;
- (id)getAliasedServiceType:(id)arg1;
- (id)getCharacteristicTypeAlias:(id)arg1;
- (id)getServiceTypeAlias:(id)arg1;
- (id)getStatusCharacteristicTypes:(id)arg1 forServiceType:(id)arg2;
- (id)hapMetadata;
- (id)hmAccessoryCategories;
- (id)hmAllowableSecuringWrites;
- (id)hmBlacklistedCharacteristics;
- (id)hmBlacklistedCharacteristicsFromApp;
- (id)hmBlacklistedServices;
- (id)hmBlacklistedServicesFromApp;
- (id)hmBulletinBoardEnabledTuples;
- (id)hmCoalesceNotificationsTuples;
- (id)hmNotificationAutoEnabledTuples;
- (id)hmRequiresDeviceUnlockTuples;
- (id)hmWakeOnOperationsFilter;
- (bool)incomplete;
- (id)initWithDictionary:(id)arg1 hapMetadata:(id)arg2 error:(id*)arg3;
- (id)initWithFullPlist:(id)arg1 hapMetadata:(id)arg2;
- (id)initWithFullPlist:(id)arg1 hapMetadata:(id)arg2 error:(id*)arg3;
- (bool)isSecondsDownCounterCharacteristicType:(id)arg1;
- (bool)isStandardCharacteristicType:(id)arg1;
- (bool)isStandardServiceType:(id)arg1;
- (bool)isTargetCharacteristic:(id)arg1;
- (id)mapCharacteristicValueType:(id)arg1;
- (id)mapFromAssistantCharacteristicValue:(id)arg1 name:(id)arg2;
- (id)mapFromAssistantServiceName:(id)arg1;
- (id)mapFromAssistantUnitName:(id)arg1;
- (id)mapReadCharacteristicFromAssistantName:(id)arg1;
- (id)mapToAssistantCharacteristicName:(id)arg1;
- (id)mapToAssistantCharacteristicValue:(id)arg1 name:(id)arg2 getActionType:(bool)arg3;
- (id)mapToAssistantServiceName:(id)arg1;
- (id)mapToAssistantServiceSubtypeName:(id)arg1;
- (id)mapToAssistantServiceSubtypeName:(id)arg1 accessoryCategory:(id)arg2;
- (id)mapToAssistantUnitName:(id)arg1;
- (id)mapWriteCharacteristicFromAssistantName:(id)arg1;
- (void)parseAndSetAllowableSecuringWrites:(id)arg1;
- (bool)parseAndSetAssistantCharacteristics:(id)arg1;
- (bool)parseAndSetAssistantMetadataWithAssistantPlist:(id)arg1;
- (bool)parseAndSetAssistantServices:(id)arg1;
- (bool)parseAndSetAssistantUnits:(id)arg1;
- (void)parseAndSetHMAccessoryFirmwareUpdatePolicies:(id)arg1;
- (void)parseAndSetHMCategories:(id)arg1;
- (bool)parseAndSetHMMetadataWithHMPlist:(id)arg1;
- (id)parseAndSetRawPlist:(id)arg1;
- (void)parseAndSetWakeOnOperationsFilter:(id)arg1;
- (id)parseCharacteristicArray:(id)arg1;
- (id)parseHMAccessoryFirmwareUpdatePolicyCharacteristics:(id)arg1;
- (id)parseHMAccessoryFirmwareUpdatePolicyCriteria:(id)arg1;
- (id)parseHMAccessoryFirmwareUpdatePolicyServices:(id)arg1;
- (id)parseMetadataTupleSetFromPlist:(id)arg1;
- (id)parseServiceArray:(id)arg1;
- (bool)policyConfigurationAvailableForAllHAPServices;
- (id)rawPlist;
- (bool)requiresDeviceUnlock:(id)arg1 forService:(id)arg2;
- (bool)requiresTimedWrite:(id)arg1 forService:(id)arg2;
- (id)schemaVersion;
- (id)serviceNameFromType:(id)arg1;
- (id)serviceSubtypeForValue:(id)arg1 forServiceType:(id)arg2;
- (id)serviceTypeFromName:(id)arg1;
- (void)setAssistantCharacteristics:(id)arg1;
- (void)setAssistantChrHAPTypeNameMap:(id)arg1;
- (void)setAssistantServiceHAPTypeNameMap:(id)arg1;
- (void)setAssistantServiceNameHAPTypeMap:(id)arg1;
- (void)setAssistantUnits:(id)arg1;
- (void)setFirmwareUpdateAutoApplyPolicies:(id)arg1;
- (void)setFirmwareUpdateStagingPolicies:(id)arg1;
- (void)setHapMetadata:(id)arg1;
- (void)setHmAccessoryCategories:(id)arg1;
- (void)setHmAllowableSecuringWrites:(id)arg1;
- (void)setHmBlacklistedCharacteristics:(id)arg1;
- (void)setHmBlacklistedCharacteristicsFromApp:(id)arg1;
- (void)setHmBlacklistedServices:(id)arg1;
- (void)setHmBlacklistedServicesFromApp:(id)arg1;
- (void)setHmBulletinBoardEnabledTuples:(id)arg1;
- (void)setHmCoalesceNotificationsTuples:(id)arg1;
- (void)setHmNotificationAutoEnabledTuples:(id)arg1;
- (void)setHmRequiresDeviceUnlockTuples:(id)arg1;
- (void)setHmWakeOnOperationsFilter:(id)arg1;
- (void)setIncomplete:(bool)arg1;
- (void)setSchemaVersion:(id)arg1;
- (void)setVersion:(id)arg1;
- (bool)shouldAllowToWakeSuspendedAccessoryForOperation:(long long)arg1 service:(id)arg2 characteristicType:(id)arg3 value:(id)arg4;
- (bool)shouldAutoEnableNotificationForCharacteristic:(id)arg1 ofService:(id)arg2;
- (bool)shouldCoalesceCharacteristicNotifications:(id)arg1 forService:(id)arg2;
- (bool)shouldEnableHomeNotificationForCharacteristicType:(id)arg1 serviceType:(id)arg2;
- (bool)shouldFilterChangeNotificationsForCharacteristicType:(id)arg1 serviceType:(id)arg2;
- (bool)shouldFilterCharacteristicOfType:(id)arg1;
- (bool)shouldFilterCharacteristicOfTypeFromApp:(id)arg1;
- (bool)shouldFilterEnableNotificationsForCharacteristicType:(id)arg1 serviceType:(id)arg2;
- (bool)shouldFilterServiceOfType:(id)arg1;
- (bool)shouldFilterServiceOfTypeFromApp:(id)arg1;
- (bool)shouldHomeAppShowTileForServiceType:(id)arg1;
- (bool)shouldNotCacheCharacteristicOfType:(id)arg1;
- (bool)shouldRefreshValueForCharacteristicWithType:(id)arg1 serviceType:(id)arg2;
- (id)stagingPolicyConfigurationForService:(id)arg1 category:(id)arg2;
- (id)statusHAPCharacteristicTypesForServiceType;
- (bool)supportsAuthorizationData:(id)arg1 forService:(id)arg2;
- (bool)supportsLocalization:(id)arg1;
- (id)validateAssociatedServiceType:(id)arg1 forService:(id)arg2;
- (id)version;
- (id)xpcData:(bool)arg1;

@end
