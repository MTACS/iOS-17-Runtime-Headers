
@interface HMDUnpairedHAPAccessoryPairingInformation : HMFObject {
    NSString * _accessoryName;
    NSString * _accessoryServerIdentifier;
    NSUUID * _accessoryUUID;
    id /* block */  _addAccessoryCompletionHandler;
    id /* block */  _addAccessoryProgressHandler;
    bool  _allowAddUnauthenticatedAccessory;
    NSUUID * _homeUUID;
    bool  _legacyWAC;
    long long  _linkType;
    HMFActivity * _pairingActivity;
    HMFTimer * _pairingInterruptionTimer;
    HAPAccessoryPairingRequest * _pairingRequest;
    HMFTimer * _pairingRetryTimer;
    bool  _provideNetworkCredentialsToAccessory;
    HMFTimer * _reconfirmTimer;
    NSData * _setupAuthToken;
    NSUUID * _setupAuthTokenUUID;
    NSString * _setupCode;
    bool  _setupCodeProvided;
    id /* block */  _setupCodeProviderCompletionHandler;
    NSString * _setupID;
    bool  _wacAccessory;
}

@property (nonatomic, retain) NSString *accessoryName;
@property (nonatomic, retain) NSString *accessoryServerIdentifier;
@property (nonatomic, retain) NSUUID *accessoryUUID;
@property (nonatomic, copy) id /* block */ addAccessoryCompletionHandler;
@property (nonatomic, copy) id /* block */ addAccessoryProgressHandler;
@property (nonatomic) bool allowAddUnauthenticatedAccessory;
@property (copy) NSUUID *homeUUID;
@property (nonatomic) bool legacyWAC;
@property (nonatomic) long long linkType;
@property (nonatomic) HMFActivity *pairingActivity;
@property (nonatomic, retain) HMFTimer *pairingInterruptionTimer;
@property (nonatomic, readonly) HAPAccessoryPairingRequest *pairingRequest;
@property (nonatomic, retain) HMFTimer *pairingRetryTimer;
@property (nonatomic) bool provideNetworkCredentialsToAccessory;
@property (nonatomic, retain) HMFTimer *reconfirmTimer;
@property (nonatomic, retain) NSData *setupAuthToken;
@property (nonatomic, retain) NSUUID *setupAuthTokenUUID;
@property (nonatomic, retain) NSString *setupCode;
@property (nonatomic) bool setupCodeProvided;
@property (nonatomic, copy) id /* block */ setupCodeProviderCompletionHandler;
@property (nonatomic, retain) NSString *setupID;
@property (nonatomic) bool wacAccessory;

- (void).cxx_destruct;
- (id)accessoryName;
- (id)accessoryServerIdentifier;
- (id)accessoryUUID;
- (id /* block */)addAccessoryCompletionHandler;
- (id /* block */)addAccessoryProgressHandler;
- (bool)allowAddUnauthenticatedAccessory;
- (id)description;
- (id)homeUUID;
- (id)initWithAccessoryDescription:(id)arg1 linkType:(long long)arg2 completionHandler:(id /* block */)arg3 progressHandler:(id /* block */)arg4 pairingRequest:(id)arg5;
- (id)initWithAccessoryUUID:(id)arg1 accessoryName:(id)arg2 linkType:(long long)arg3 setupCode:(id)arg4 completionHandler:(id /* block */)arg5 setupCodeProvider:(id /* block */)arg6 pairingRequest:(id)arg7;
- (bool)legacyWAC;
- (long long)linkType;
- (bool)matchesAccessoryServer:(id)arg1;
- (bool)matchesUnpairedAccessory:(id)arg1;
- (id)pairingActivity;
- (id)pairingInterruptionTimer;
- (id)pairingRequest;
- (id)pairingRetryTimer;
- (bool)provideNetworkCredentialsToAccessory;
- (id)reconfirmTimer;
- (void)setAccessoryName:(id)arg1;
- (void)setAccessoryServerIdentifier:(id)arg1;
- (void)setAccessoryUUID:(id)arg1;
- (void)setAddAccessoryCompletionHandler:(id /* block */)arg1;
- (void)setAddAccessoryProgressHandler:(id /* block */)arg1;
- (void)setAllowAddUnauthenticatedAccessory:(bool)arg1;
- (void)setHomeUUID:(id)arg1;
- (void)setLegacyWAC:(bool)arg1;
- (void)setLinkType:(long long)arg1;
- (void)setPairingActivity:(id)arg1;
- (void)setPairingInterruptionTimer:(id)arg1;
- (void)setPairingRetryTimer:(id)arg1;
- (void)setProvideNetworkCredentialsToAccessory:(bool)arg1;
- (void)setReconfirmTimer:(id)arg1;
- (void)setSetupAuthToken:(id)arg1;
- (void)setSetupAuthTokenUUID:(id)arg1;
- (void)setSetupCode:(id)arg1;
- (void)setSetupCodeProvided:(bool)arg1;
- (void)setSetupCodeProviderCompletionHandler:(id /* block */)arg1;
- (void)setSetupID:(id)arg1;
- (void)setWacAccessory:(bool)arg1;
- (id)setupAuthToken;
- (id)setupAuthTokenUUID;
- (id)setupCode;
- (bool)setupCodeProvided;
- (id /* block */)setupCodeProviderCompletionHandler;
- (id)setupID;
- (bool)wacAccessory;

@end
