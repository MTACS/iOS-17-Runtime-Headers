
@interface HMDSiriEndpointProfile : HMDAccessoryProfile <HMFLogging, HMFStagedValueDelegate> {
    NSNumber * _activeIdentifier;
    NSArray * _assistants;
    NSString * _clientEndpointIdentifier;
    NSString * _clientSettingsIdentifier;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    bool  _manuallyDisabled;
    long long  _multifunctionButton;
    NSNotificationCenter * _notificationCenter;
    unsigned long long  _notifications;
    NSArray * _profileServices;
    NSUUID * _sessionHubIdentifier;
    long long  _sessionState;
    long long  _siriEnable;
    NSString * _siriEndpointVersion;
    NSString * _siriEngineVersion;
    long long  _siriLightOnUse;
    long long  _siriListening;
    long long  _siriTouchToUse;
    HMFStagedValue * _stagedNeedsOnboarding;
}

@property (readonly, copy) NSArray *_allEndpointCharacteristicsToMonitor;
@property (readonly, copy) NSArray *_allSettingsCharacteristicsToMonitor;
@property (readonly) unsigned long long _capability;
@property (copy) NSNumber *activeIdentifier;
@property (retain) NSArray *assistants;
@property (readonly) NSString *clientEndpointIdentifier;
@property (readonly) NSString *clientSettingsIdentifier;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property bool manuallyDisabled;
@property long long multifunctionButton;
@property (readonly) NSNumber *needsOnboarding;
@property (readonly) NSNotificationCenter *notificationCenter;
@property unsigned long long notifications;
@property (retain) NSArray *profileServices;
@property (copy) NSUUID *sessionHubIdentifier;
@property long long sessionState;
@property long long siriEnable;
@property (copy) NSString *siriEndpointVersion;
@property (copy) NSString *siriEngineVersion;
@property long long siriLightOnUse;
@property long long siriListening;
@property (readonly) long long siriSoundOnUse;
@property long long siriTouchToUse;
@property (readonly) HMFStagedValue *stagedNeedsOnboarding;
@property (readonly) Class superclass;

+ (void)initialize;
+ (id)logCategory;
+ (id)namespace;
+ (bool)supportsSecureCoding;
+ (id)uniqueIdentifierFromAccessory:(id)arg1;

- (void).cxx_destruct;
- (id)_allEndpointCharacteristicsToMonitor;
- (id)_allSettingsCharacteristicsToMonitor;
- (unsigned long long)_capability;
- (void)_handleCharacteristicChanges:(id)arg1;
- (void)_handleRefreshProfileState:(id)arg1;
- (void)_handleRefreshProfileState:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)_notificationEnable:(bool)arg1 forType:(unsigned long long)arg2;
- (bool)_notificationEnabledForType:(unsigned long long)arg1;
- (void)_notifyProfileSettingsUpdated:(id)arg1;
- (void)_setNotifications:(bool)arg1 options:(unsigned long long)arg2;
- (id)_siriEndpointActiveIdentifierCharacteristic;
- (id)_siriEndpointActiveIdentifierReadRequest;
- (id)_siriEndpointManuallyDisabledCharacteristic;
- (id)_siriEndpointManuallyDisabledReadRequest;
- (id)_siriEndpointService;
- (id)_siriEndpointSessionStatusCharacteristic;
- (id)_siriEndpointSessionStatusReadRequest;
- (id)_siriEndpointVersionCharacteristic;
- (id)_siriEndpointVersionReadRequest;
- (id)_siriService;
- (id)_siriSettingMultifunctionButtonCharacteristic;
- (id)_siriSettingMultifunctionButtonReadRequest;
- (id)_siriSettingSiriEnableCharacteristic;
- (id)_siriSettingSiriEnableReadRequest;
- (id)_siriSettingSiriEngineVersionCharacteristic;
- (id)_siriSettingSiriEngineVersionReadRequest;
- (id)_siriSettingSiriLightOnUseCharacteristic;
- (id)_siriSettingSiriLightOnUseReadRequest;
- (id)_siriSettingSiriListeningCharacteristic;
- (id)_siriSettingSiriListeningReadRequest;
- (id)_siriSettingSiriTouchCharacteristic;
- (id)_siriSettingSiriTouchReadRequest;
- (void)_updateSessionState:(id)arg1 settings:(id)arg2 message:(id)arg3;
- (id)activeIdentifier;
- (void)addService:(id)arg1;
- (id)assistants;
- (id)attributeDescriptions;
- (id)clientEndpointIdentifier;
- (id)clientSettingsIdentifier;
- (void)encodeWithCoder:(id)arg1;
- (void)handleAccessoryConfigured:(id)arg1;
- (void)handleDeviceCapabilitiesUpdated:(id)arg1;
- (void)handleEnableNotifications:(id)arg1;
- (void)handleHomeCharacteristicValuesChanged:(id)arg1;
- (void)handlePrimaryResidentChanged:(id)arg1;
- (void)handleUpdateNeedsOnboarding:(id)arg1;
- (id)initWithSiriEndpointServices:(id)arg1;
- (id)initWithSiriEndpointServices:(id)arg1 notificationCenter:(id)arg2;
- (bool)manuallyDisabled;
- (long long)multifunctionButton;
- (id)needsOnboarding;
- (id)notificationCenter;
- (unsigned long long)notifications;
- (void)notifyClientsDidUpdateStagedNeedsOnboarding;
- (id)profileServices;
- (void)refreshStateWithCompletionHandler:(id /* block */)arg1;
- (void)registerForMessages;
- (void)registerForNotifications;
- (id)services;
- (id)sessionHubIdentifier;
- (long long)sessionState;
- (void)setActiveIdentifier:(id)arg1;
- (void)setAssistants:(id)arg1;
- (void)setEnable:(long long)arg1 completionHandler:(id /* block */)arg2;
- (void)setLightOnUse:(long long)arg1 completionHandler:(id /* block */)arg2;
- (void)setListening:(long long)arg1 completionHandler:(id /* block */)arg2;
- (void)setManuallyDisabled:(bool)arg1;
- (void)setMultifunctionButton:(long long)arg1;
- (void)setNotifications:(unsigned long long)arg1;
- (void)setNotifications:(bool)arg1 options:(unsigned long long)arg2;
- (void)setProfileServices:(id)arg1;
- (void)setSessionHubIdentifier:(id)arg1;
- (void)setSessionState:(long long)arg1;
- (void)setSiriEnable:(long long)arg1;
- (void)setSiriEndpointVersion:(id)arg1;
- (void)setSiriEngineVersion:(id)arg1;
- (void)setSiriLightOnUse:(long long)arg1;
- (void)setSiriListening:(long long)arg1;
- (void)setSiriTouchToUse:(long long)arg1;
- (void)setSoundOnUse:(long long)arg1 completionHandler:(id /* block */)arg2;
- (void)setTouchToUse:(long long)arg1 completionHandler:(id /* block */)arg2;
- (long long)siriEnable;
- (id)siriEndpointVersion;
- (id)siriEngineVersion;
- (long long)siriLightOnUse;
- (long long)siriListening;
- (long long)siriSoundOnUse;
- (long long)siriTouchToUse;
- (void)stageNeedsOnboarding:(long long)arg1;
- (void)stageNeedsOnboarding:(long long)arg1 withTimeout:(double)arg2;
- (id)stagedNeedsOnboarding;
- (void)stagedValue:(id)arg1 didExpireValue:(id)arg2;
- (void)unregisterForNotifications;
- (void)updateNeedsOnboarding:(long long)arg1 withTimeout:(double)arg2;

@end
