
@interface HMDDataStreamBulkSendProtocol : NSObject <HMDDataStreamProtocol, HMFLogging, HMFTimerDelegate> {
    id  _accessory;
    NSMapTable * _activeBulkSendSessions;
    id /* block */  _bulkSendSessionContextFactory;
    <HMDDataStreamProtocolDelegate> * _dataStream;
    bool  _isConnected;
    NSMapTable * _listeners;
    NSString * _logIdentifier;
    unsigned int  _nextSessionIdentifier;
    NSMutableDictionary * _pendingBulkSendSessionContextBySessionIdentifier;
    NSObject<OS_dispatch_queue> * _queue;
}

@property (nonatomic) id accessory;
@property (getter=isActive, nonatomic, readonly) bool active;
@property (readonly) NSMapTable *activeBulkSendSessions;
@property (readonly) id /* block */ bulkSendSessionContextFactory;
@property (nonatomic) <HMDDataStreamProtocolDelegate> *dataStream;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isConnected;
@property (nonatomic, retain) NSMapTable *listeners;
@property (nonatomic, readonly, copy) NSString *logIdentifier;
@property unsigned int nextSessionIdentifier;
@property (readonly) NSMutableDictionary *pendingBulkSendSessionContextBySessionIdentifier;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (readonly) Class superclass;

+ (id)logCategory;
+ (id)protocolName;

- (void).cxx_destruct;
- (void)_cancelSessionWithIdentifier:(id)arg1 reason:(unsigned short)arg2 hadReceivedEof:(bool)arg3;
- (void)_closeAllSessionsWithError:(id)arg1;
- (id)_createSessionCandidateWithRequestHeader:(id)arg1 metadata:(id)arg2;
- (id)_createSessionFromCandidate:(id)arg1 queue:(id)arg2;
- (id)_createSessionIdentifier;
- (id)_getBulkSendSessionForSessionIdentifier:(id)arg1;
- (void)_handleCloseMessage:(id)arg1;
- (void)_handleDataMessage:(id)arg1;
- (void)_handleOpenWithRequestHeader:(id)arg1 payload:(id)arg2;
- (void)_maybeSubmitMetricForDroppedOpenRequestOfType:(id)arg1;
- (void)_notifyActiveStatusChangedFromPreviousValue:(bool)arg1;
- (void)_openSessionForFileType:(id)arg1 reason:(id)arg2 metadata:(id)arg3 queue:(id)arg4 callback:(id /* block */)arg5;
- (void)_pumpMessage:(id)arg1 session:(id)arg2;
- (void)_pumpReceiveFailure:(id)arg1 session:(id)arg2;
- (void)_rejectSessionCandidate:(id)arg1 status:(unsigned short)arg2;
- (void)_removeBulkSendSessionForSessionIdentifier:(id)arg1;
- (void)_sendAckMessageWithIdentifier:(id)arg1;
- (void)_sendCloseMessageWithIdentifier:(id)arg1 reason:(unsigned short)arg2;
- (void)_sendOpenResponseWithRequestHeader:(id)arg1 bulkSendStatus:(unsigned short)arg2;
- (void)_sendOpenResponseWithRequestHeader:(id)arg1 payload:(id)arg2 status:(unsigned short)arg3;
- (void)_sendOpenResponseWithRequestHeader:(id)arg1 status:(unsigned short)arg2;
- (void)_sendOpenResponseWithRequestHeader:(id)arg1 streamIdentifier:(id)arg2;
- (void)_startSessionCandidate:(id)arg1 queue:(id)arg2 callback:(id /* block */)arg3;
- (id)accessory;
- (id)activeBulkSendSessions;
- (void)addListener:(id)arg1 fileType:(id)arg2;
- (void)asyncBulkSendSessionCandidate:(id)arg1 didAcceptOnQueue:(id)arg2 callback:(id /* block */)arg3;
- (void)asyncBulkSendSessionCandidate:(id)arg1 didRejectWithStatus:(unsigned short)arg2;
- (void)asyncBulkSendSessionDidCancelSessionWithIdentifier:(id)arg1 reason:(unsigned short)arg2 hadReceivedEof:(bool)arg3;
- (id /* block */)bulkSendSessionContextFactory;
- (id)dataStream;
- (void)dataStream:(id)arg1 didFailWithError:(id)arg2;
- (void)dataStream:(id)arg1 didReceiveEvent:(id)arg2 header:(id)arg3 payload:(id)arg4;
- (void)dataStream:(id)arg1 didReceiveRequest:(id)arg2 header:(id)arg3 payload:(id)arg4;
- (void)dataStream:(id)arg1 didReceiveResponse:(id)arg2 header:(id)arg3 payload:(id)arg4;
- (void)dataStreamDidClose:(id)arg1;
- (void)dataStreamDidOpen:(id)arg1;
- (void)dataStreamInitiatedClose:(id)arg1;
- (id)initWithQueue:(id)arg1 accessory:(id)arg2 logIdentifier:(id)arg3;
- (id)initWithQueue:(id)arg1 accessory:(id)arg2 logIdentifier:(id)arg3 bulkSendSessionContextFactory:(id /* block */)arg4;
- (bool)isActive;
- (bool)isConnected;
- (id)listeners;
- (id)logIdentifier;
- (unsigned int)nextSessionIdentifier;
- (void)openSessionForFileType:(id)arg1 reason:(id)arg2 metadata:(id)arg3 queue:(id)arg4 callback:(id /* block */)arg5;
- (id)pendingBulkSendSessionContextBySessionIdentifier;
- (id)queue;
- (void)removeListener:(id)arg1;
- (void)setAccessory:(id)arg1;
- (void)setDataStream:(id)arg1;
- (void)setIsConnected:(bool)arg1;
- (void)setListeners:(id)arg1;
- (void)setNextSessionIdentifier:(unsigned int)arg1;
- (void)setQueue:(id)arg1;
- (void)timerDidFire:(id)arg1;

@end
