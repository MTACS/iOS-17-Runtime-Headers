
@interface HMDMediaDestinationController : HMFObject <HMDMediaDestinationControllerBackingStoreHandlerDelegate, HMDMediaDestinationControllerMessageHandlerDataSource, HMDMediaDestinationControllerMessageHandlerDelegate, HMFLogging, HMFStagedValueDelegate> {
    HMDMediaDestinationControllerBackingStoreHandler * _backingStoreHandler;
    <HMDMediaDestinationControllerDataSource> * _dataSource;
    <HMDMediaDestinationControllerDelegate> * _delegate;
    NSUUID * _identifier;
    bool  _isTargetDevice;
    NSObject<OS_os_log> * _logger;
    HMDMediaDestinationControllerMessageHandler * _messageHandler;
    HMDMediaDestinationControllerMetricsEventDispatcher * _metricsEventDispatcher;
    HMFStagedValue * _stagedAvailableDestinationIdentifiers;
    HMFStagedValue * _stagedDestinationIdentifier;
}

@property (readonly) HMDMediaDestinationControllerBackingStoreHandler *backingStoreHandler;
@property (readonly, copy) HMMediaDestinationControllerData *committedData;
@property (readonly, copy) HMMediaDestinationControllerData *data;
@property <HMDMediaDestinationControllerDataSource> *dataSource;
@property (readonly, copy) NSString *debugDescription;
@property <HMDMediaDestinationControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, copy) NSUUID *identifier;
@property (readonly) bool isTargetDevice;
@property (readonly) HMDMediaDestinationControllerMessageHandler *messageHandler;
@property (retain) HMDMediaDestinationControllerMetricsEventDispatcher *metricsEventDispatcher;
@property (readonly) HMFStagedValue *stagedAvailableDestinationIdentifiers;
@property (readonly) HMFStagedValue *stagedDestinationIdentifier;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *urlString;

+ (unsigned long long)expectedSupportOptions;
+ (id)logCategory;

- (void).cxx_destruct;
- (id)_updateDestinationIdentifier:(id)arg1;
- (id)assistantObjectWithHome:(id)arg1 name:(id)arg2;
- (id)attributeDescriptions;
- (id)backingStoreHandler;
- (id)committedData;
- (void)configureWithHome:(id)arg1;
- (id)data;
- (id)dataSource;
- (id)dataSourceAvailableDestinationIdentifiers;
- (id)dataSourceDestinationManagerWithIdentifier:(id)arg1;
- (id)dataSourceDestinationUsingRelatedIdentifier:(id)arg1;
- (id)dataSourceDestinationWithIdentifier:(id)arg1;
- (id)dataSourceTargetAccessory;
- (id)delegate;
- (id)filteredAvailableDestinationIdentifiers;
- (id)filteredDestinationIdentifierFilteredAvailableDestinationIdentifiers:(id)arg1;
- (bool)hasSetDestinationRelatedToIdentifier:(id)arg1;
- (id)identifier;
- (id)initWithBackingStoreHandler:(id)arg1 messageHandler:(id)arg2 metricsEventDispatcher:(id)arg3 targetDevice:(bool)arg4 dataSource:(id)arg5 delegate:(id)arg6;
- (id)initWithData:(id)arg1 backingStore:(id)arg2 messageDispatcher:(id)arg3 notificationCenter:(id)arg4 logEventSubmitter:(id)arg5 dailyScheduler:(id)arg6 targetDevice:(bool)arg7 dataSource:(id)arg8 delegate:(id)arg9;
- (bool)isTargetDevice;
- (id)legacyUpdateAvailableDestinationIdentifiers:(id)arg1;
- (id)legacyUpdateDestinationIdentifier:(id)arg1;
- (id)logIdentifier;
- (void)mediaDestinationControllerBackingStoreHandler:(id)arg1 didUpdateAvailableDestinationIdentifiers:(id)arg2;
- (void)mediaDestinationControllerBackingStoreHandler:(id)arg1 didUpdateDestinationIdentifier:(id)arg2;
- (void)mediaDestinationControllerBackingStoreHandlerDidProcessUnexpectedModelAdd:(id)arg1;
- (void)mediaDestinationControllerMessageHandler:(id)arg1 didReceiveAccessoryChangedRoomNotification:(id)arg2;
- (void)mediaDestinationControllerMessageHandler:(id)arg1 didReceiveHomeAccessoryRemovedNotification:(id)arg2 destination:(id)arg3;
- (void)mediaDestinationControllerMessageHandler:(id)arg1 didReceiveMediaDestinationControllerUpdateDestinationRequestMessage:(id)arg2 destinationIdentifier:(id)arg3 updateOptions:(unsigned long long)arg4;
- (void)mediaDestinationControllerMessageHandler:(id)arg1 didReceiveMediaDestinationControllerUpdatedDestinationNotification:(id)arg2 destinationControllerIdentifier:(id)arg3 destinationIdentifier:(id)arg4;
- (void)mediaDestinationControllerMessageHandler:(id)arg1 didReceiveMediaDestinationUpdatedNotification:(id)arg2;
- (void)mediaDestinationControllerMessageHandler:(id)arg1 didReceiveMediaGroupsAggregateConsumerUpdatedAggregateDataNotification:(id)arg2;
- (void)mediaDestinationControllerMessageHandler:(id)arg1 didReceiveMediaSystemAddedNotification:(id)arg2;
- (void)mediaDestinationControllerMessageHandler:(id)arg1 didReceiveMediaSystemRemovedNotification:(id)arg2;
- (id)mediaGroupParticipantDataLocalStorage;
- (void)mergeData:(id)arg1;
- (id)messageHandler;
- (id)messageHandler:(id)arg1 deviceForOutgoingMessage:(id)arg2;
- (id)messageHandler:(id)arg1 shouldRelayIncomingMessage:(id)arg2;
- (id)metricsEventDispatcher;
- (void)migrateSupportOptions;
- (void)migrateWithHome:(id)arg1 cloudZone:(id)arg2 migrationQueue:(id)arg3 completion:(id /* block */)arg4;
- (void)notifyDelegateDidUpdateStagedValues;
- (id)privateDescription;
- (void)refreshAvailableDestinationIdentifiers;
- (void)refreshDestinationController;
- (void)refreshDestinationIdentifier;
- (void)setDataSource:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setMetricsEventDispatcher:(id)arg1;
- (void)stageAvailableDestinationIdentifiers:(id)arg1;
- (void)stageDestinationIdentifier:(id)arg1;
- (id)stagedAvailableDestinationIdentifiers;
- (id)stagedDestinationIdentifier;
- (void)stagedValue:(id)arg1 didExpireAvailableDestinationIdentifiers:(id)arg2;
- (void)stagedValue:(id)arg1 didExpireDestinationIdentifier:(id)arg2;
- (void)stagedValue:(id)arg1 didExpireValue:(id)arg2;
- (void)triggerStageValueDidExpireValueForStagedAvailableDestinationIdentifiers;
- (void)triggerStageValueDidExpireValueForStagedDestinationIdentifier;
- (void)unsetAudioGroupForCurrentDestination;
- (id)updateAvailableDestinationIdentifiers:(id)arg1;
- (id)updateDestinationIdentifier:(id)arg1;
- (id)updateDestinationIdentifier:(id)arg1 updateOptions:(unsigned long long)arg2;
- (id)updateDestinationWithIdentifier:(id)arg1 audioGroupIdentifier:(id)arg2;
- (id)urlString;

@end
