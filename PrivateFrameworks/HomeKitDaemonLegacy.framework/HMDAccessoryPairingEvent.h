
@interface HMDAccessoryPairingEvent : HMMHomeLogEvent <HMMCoreAnalyticsLogging> {
    NSString * _accessoryAddRequestIdentifier;
    NSString * _accessoryCategory;
    NSString * _accessoryManufacturer;
    NSString * _accessoryModel;
    NSString * _accessoryServerIdentifier;
    bool  _accessorySupportsWoL;
    NSUUID * _accessoryUUID;
    bool  _addOperation;
    bool  _addViaWAC;
    NSString * _appIdentifier;
    unsigned long long  _authMethod;
    bool  _btCommissioned;
    NSString * _categoryType;
    long long  _certificationStatus;
    long long  _communicationProtocol;
    bool  _firstHAPAccessoryInAnyHome;
    bool  _firstHAPAccessoryInHome;
    long long  _hmdAccessoryPairingEventResidentConfirmation;
    NSString * _lastAccessoryPairingState;
    long long  _linkType;
    double  _longestPairingProgressStateDurationInMilliseconds;
    NSString * _longestPairingState;
    NSDictionary * _matterMetrics;
    NSString * _matterSoftwareVersionString;
    bool  _networkRouterAdd;
    bool  _networkRouterReplace;
    HMDAccessory * _pairedAccessory;
    unsigned long long  _pairingUIState;
    unsigned long long  _previousRecoveryType;
    NSString * _primaryServiceType;
    NSString * _productNumber;
    unsigned long long  _recoveryType;
    bool  _requiresMatterCustomCommissioningFlow;
    double  _residentConfirmationDurationInSeconds;
    NSDate * _residentConfirmationTimeStarted;
    bool  _retry;
    long long  _retryCount;
    bool  _threadAccessory;
    unsigned int  _threadCapabilities;
    double  _threadCommissioningDuration;
    NSError * _threadCommissioningError;
    unsigned int  _threadStatus;
    bool  _usedOwnershipProof;
    bool  _usedWiFiPPSK;
    NSDictionary * _vendorDetailsForCoreAnalytics;
    HMDAccessoryMetricVendorDetails * _vendorDetailsForReporting;
    bool  _wacLegacy;
}

@property (nonatomic, retain) NSString *accessoryAddRequestIdentifier;
@property (nonatomic, retain) NSString *accessoryCategory;
@property (nonatomic, readonly, copy) NSString *accessoryIdentifier;
@property (nonatomic, retain) NSString *accessoryManufacturer;
@property (nonatomic, retain) NSString *accessoryModel;
@property (nonatomic, retain) NSString *accessoryServerIdentifier;
@property (nonatomic, readonly) bool accessorySupportsWoL;
@property (nonatomic, retain) NSUUID *accessoryUUID;
@property (getter=isAddOperation, nonatomic, readonly) bool addOperation;
@property (getter=isAddViaWAC) bool addViaWAC;
@property (nonatomic, copy) NSString *appIdentifier;
@property unsigned long long authMethod;
@property (getter=isBTCommissioned) bool btCommissioned;
@property (nonatomic, readonly) NSString *categoryType;
@property long long certificationStatus;
@property long long communicationProtocol;
@property (nonatomic, readonly, copy) NSDictionary *coreAnalyticsEventDictionary;
@property (nonatomic, readonly, copy) NSString *coreAnalyticsEventName;
@property (nonatomic, readonly) unsigned long long coreAnalyticsEventOptions;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (getter=isFirstHAPAccessoryInAnyHome) bool firstHAPAccessoryInAnyHome;
@property (getter=isFirstHAPAccessoryInHome) bool firstHAPAccessoryInHome;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long hmdAccessoryPairingEventResidentConfirmation;
@property (nonatomic, readonly) NSUUID *homeUUID;
@property (nonatomic, retain) NSString *lastAccessoryPairingState;
@property long long linkType;
@property double longestPairingProgressStateDurationInMilliseconds;
@property (nonatomic, retain) NSString *longestPairingState;
@property (nonatomic, copy) NSDictionary *matterMetrics;
@property (nonatomic, copy) NSString *matterSoftwareVersionString;
@property (getter=isNetworkRouterAdd) bool networkRouterAdd;
@property (getter=isNetworkRouterReplace) bool networkRouterReplace;
@property (retain) HMDAccessory *pairedAccessory;
@property (nonatomic) unsigned long long pairingUIState;
@property (nonatomic) unsigned long long previousRecoveryType;
@property (nonatomic, retain) NSString *primaryServiceType;
@property (nonatomic, readonly) NSString *productNumber;
@property (nonatomic) unsigned long long recoveryType;
@property (nonatomic, readonly) bool requiresMatterCustomCommissioningFlow;
@property (nonatomic, readonly) double residentConfirmationDurationInSeconds;
@property (nonatomic, readonly) NSDate *residentConfirmationTimeStarted;
@property (nonatomic) bool retry;
@property long long retryCount;
@property (readonly) Class superclass;
@property (getter=isThreadAccessory) bool threadAccessory;
@property unsigned int threadCapabilities;
@property (nonatomic) double threadCommissioningDuration;
@property (nonatomic, copy) NSError *threadCommissioningError;
@property unsigned int threadStatus;
@property (getter=didUseOwnershipProof) bool usedOwnershipProof;
@property (getter=didUseWiFiPPSK) bool usedWiFiPPSK;
@property (nonatomic, retain) NSDictionary *vendorDetailsForCoreAnalytics;
@property (nonatomic, retain) HMDAccessoryMetricVendorDetails *vendorDetailsForReporting;
@property (getter=isWacLegacy) bool wacLegacy;

+ (id)pairingAccessory:(id)arg1 home:(id)arg2;
+ (id)pairingAccessoryWithDescription:(id)arg1 home:(id)arg2;
+ (id)removingAccessory:(id)arg1 hapAccessory:(id)arg2;
+ (bool)submitEventWithHistogrammedAggregateHomeDataCommonDimensions;

- (void).cxx_destruct;
- (bool)_isMatterAccessory;
- (void)_updateThreadPropertiesWithPairedAccessory:(id)arg1;
- (id)accessoryAddRequestIdentifier;
- (id)accessoryCategory;
- (id)accessoryManufacturer;
- (id)accessoryModel;
- (id)accessoryServerIdentifier;
- (bool)accessorySupportsWoL;
- (id)accessoryUUID;
- (id)appIdentifier;
- (unsigned long long)authMethod;
- (id)categoryType;
- (long long)certificationStatus;
- (long long)communicationProtocol;
- (id)coreAnalyticsEventDictionary;
- (id)coreAnalyticsEventName;
- (unsigned long long)coreAnalyticsEventOptions;
- (bool)didUseOwnershipProof;
- (bool)didUseWiFiPPSK;
- (id)getLowestError:(id)arg1;
- (long long)hmdAccessoryPairingEventResidentConfirmation;
- (id)initWithAccessoryDescription:(id)arg1 home:(id)arg2;
- (id)initWithUnpairedAccessory:(id)arg1 pairedAccessory:(id)arg2 hapAccessory:(id)arg3 home:(id)arg4 isAddOperation:(bool)arg5;
- (bool)isAddOperation;
- (bool)isAddViaWAC;
- (bool)isBTCommissioned;
- (bool)isFirstHAPAccessoryInAnyHome;
- (bool)isFirstHAPAccessoryInHome;
- (bool)isNetworkRouterAdd;
- (bool)isNetworkRouterReplace;
- (bool)isThreadAccessory;
- (bool)isWacLegacy;
- (id)lastAccessoryPairingState;
- (long long)linkType;
- (double)longestPairingProgressStateDurationInMilliseconds;
- (id)longestPairingState;
- (id)matterMetrics;
- (id)matterSoftwareVersionString;
- (id)pairedAccessory;
- (void)pairedToServer:(id)arg1 certificationStatus:(long long)arg2 addedViaWAC:(bool)arg3 legacyWAC:(bool)arg4;
- (unsigned long long)pairingUIState;
- (unsigned long long)previousRecoveryType;
- (id)primaryServiceType;
- (id)productNumber;
- (unsigned long long)recoveryType;
- (bool)requiresMatterCustomCommissioningFlow;
- (double)residentConfirmationDurationInSeconds;
- (id)residentConfirmationTimeStarted;
- (id)residentConfirmationToString:(long long)arg1;
- (bool)retry;
- (long long)retryCount;
- (void)setAccessoryAddRequestIdentifier:(id)arg1;
- (void)setAccessoryCategory:(id)arg1;
- (void)setAccessoryManufacturer:(id)arg1;
- (void)setAccessoryModel:(id)arg1;
- (void)setAccessoryServerIdentifier:(id)arg1;
- (void)setAccessoryUUID:(id)arg1;
- (void)setAddViaWAC:(bool)arg1;
- (void)setAddedViaWAC:(bool)arg1;
- (void)setAppIdentifier:(id)arg1;
- (void)setAuthMethod:(unsigned long long)arg1;
- (void)setAuthenticationMethod:(unsigned long long)arg1;
- (void)setBtCommissioned:(bool)arg1;
- (void)setCertificationStatus:(long long)arg1;
- (void)setCommunicationProtocol:(long long)arg1;
- (void)setFirstHAPAccessoryInAnyHome:(bool)arg1;
- (void)setFirstHAPAccessoryInHome:(bool)arg1;
- (void)setHmdAccessoryPairingEventResidentConfirmation:(long long)arg1;
- (void)setLastAccessoryPairingState:(id)arg1;
- (void)setLinkType:(long long)arg1;
- (void)setLongestPairingProgressStateDurationInMilliseconds:(double)arg1;
- (void)setLongestPairingState:(id)arg1;
- (void)setMatterMetrics:(id)arg1;
- (void)setMatterSoftwareVersionString:(id)arg1;
- (void)setNetworkRouterAdd:(bool)arg1;
- (void)setNetworkRouterReplace:(bool)arg1;
- (void)setPairedAccessory:(id)arg1;
- (void)setPairingUIState:(unsigned long long)arg1;
- (void)setPreviousRecoveryType:(unsigned long long)arg1;
- (void)setPrimaryServiceType:(id)arg1;
- (void)setRecoveryType:(unsigned long long)arg1;
- (void)setRetry:(bool)arg1;
- (void)setRetryCount:(long long)arg1;
- (void)setThreadAccessory:(bool)arg1;
- (void)setThreadCapabilities:(unsigned int)arg1;
- (void)setThreadCommissioningDuration:(double)arg1;
- (void)setThreadCommissioningError:(id)arg1;
- (void)setThreadStatus:(unsigned int)arg1;
- (void)setUsedOwnershipProof:(bool)arg1;
- (void)setUsedWiFiPPSK:(bool)arg1;
- (void)setVendorDetailsForCoreAnalytics:(id)arg1;
- (void)setVendorDetailsForReporting:(id)arg1;
- (void)setWacLegacy:(bool)arg1;
- (void)submitAtDate:(id)arg1;
- (unsigned int)threadCapabilities;
- (double)threadCommissioningDuration;
- (id)threadCommissioningError;
- (unsigned int)threadStatus;
- (void)updateEventPropertiesWithHAPAccessory:(id)arg1;
- (void)updateEventPropertiesWithPairedAccessory:(id)arg1;
- (void)updateResidentConfirmationDurationWithConfirmation:(long long)arg1;
- (id)vendorDetailsForCoreAnalytics;
- (id)vendorDetailsForReporting;

@end
