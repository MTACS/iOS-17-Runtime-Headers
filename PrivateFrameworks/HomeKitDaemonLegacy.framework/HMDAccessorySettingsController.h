
@interface HMDAccessorySettingsController : HMFObject <HMDAccessorySettingGroupDataSource, HMDAccessorySettingsBackingStoreTransactionReceiverDelegate, HMDAccessorySettingsMessageController, HMDLegacyAccessorySettingsAdaptorDelegate, HMFLogging, HMFTimerDelegate, NSSecureCoding> {
    NSMutableArray * _allChildrenIdentifiers;
    HMFTimer * _auditSettingsTimer;
    NSString * _codingKey;
    NSMutableSet * _constraintItemsMarkedForRemoval;
    NSOperationQueue * _constraintModifyOperationQueue;
    <HMDAccessorySettingsControllerDataSource> * _dataSource;
    <HMDAccessorySettingsControllerDelegate> * _delegate;
    NSMutableSet * _dependantControllers;
    bool  _didInitiateSettingsCreationForOlderSoftwareCounterpart;
    <HMDAccessorySettingsControllerDependencyFactory> * _factory;
    HMFTimer * _fixupSettingsTimer;
    NSMapTable * _groupsMap;
    bool  _hasCreatedUnprocessedRootGroup;
    bool  _isMigrationOwner;
    bool  _isSettingOwner;
    HMFTimer * _languageChangeDebounceTimer;
    <HMDLegacyAccessorySettingsAdaptor> * _legacySettingsAdaptor;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    <HMMLogEventSubmitting> * _logEventSubmitter;
    NSObject<OS_os_log> * _logger;
    <HMDAccessorySettingsMessageHandler> * _messageHandler;
    NSNotificationCenter * _notificationCenter;
    HMDAccessorySettingsController * _ownerController;
    NSUUID * _parentUUID;
    HMDAccessorySettingGroup * _rootGroup;
    NSMapTable * _settingsMap;
    <HMDBackingStoreObjectProtocol> * _transactionReceiver;
    NSObject<OS_dispatch_queue> * _workQueue;
}

@property (readonly) NSMutableArray *allChildrenIdentifiers;
@property (retain) HMFTimer *auditSettingsTimer;
@property (readonly, copy) NSArray *childrenIdentifiers;
@property (readonly) NSString *codingKey;
@property (nonatomic, retain) NSMutableSet *constraintItemsMarkedForRemoval;
@property (nonatomic, retain) NSOperationQueue *constraintModifyOperationQueue;
@property <HMDAccessorySettingsControllerDataSource> *dataSource;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) <HMDAccessorySettingsControllerDelegate> *delegate;
@property (readonly) NSMutableSet *dependantControllers;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool didInitiateSettingsCreationForOlderSoftwareCounterpart;
@property (readonly) <HMDAccessorySettingsControllerDependencyFactory> *factory;
@property (retain) HMFTimer *fixupSettingsTimer;
@property (retain) NSMapTable *groupsMap;
@property bool hasCreatedUnprocessedRootGroup;
@property (readonly) unsigned long long hash;
@property (readonly) HMDHome *home;
@property bool isMigrationOwner;
@property bool isSettingOwner;
@property (nonatomic, retain) HMFTimer *languageChangeDebounceTimer;
@property (nonatomic, retain) <HMDLegacyAccessorySettingsAdaptor> *legacySettingsAdaptor;
@property (readonly) <HMMLogEventSubmitting> *logEventSubmitter;
@property (readonly) <HMDAccessorySettingsMessageHandler> *messageHandler;
@property (readonly, copy) NSUUID *messageTargetUUID;
@property (readonly) NSNotificationCenter *notificationCenter;
@property HMDAccessorySettingsController *ownerController;
@property (readonly, copy) NSUUID *parentUUID;
@property (retain) HMDAccessorySettingGroup *rootGroup;
@property (retain) NSMapTable *settingsMap;
@property (readonly, copy) NSString *siriLanguage;
@property (readonly) Class superclass;
@property (readonly) <HMDBackingStoreObjectProtocol> *transactionReceiver;
@property (readonly) NSObject<OS_dispatch_queue> *workQueue;

+ (id)logCategory;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (void)_cacheConstraintAdditions:(id)arg1 removals:(id)arg2 setting:(id)arg3;
- (void)_createSettings;
- (void)_didAddGroup:(id)arg1;
- (void)_didAddSetting:(id)arg1;
- (void)_didRemoveGroup:(id)arg1;
- (void)_didRemoveSetting:(id)arg1;
- (id)_keyPathsForSettings;
- (void)_migrateSettingsWithCompletion:(id /* block */)arg1;
- (void)_onMessageUpdateValue:(id)arg1 settingKeyPath:(id)arg2 senderVersion:(id)arg3 senderProductClass:(long long)arg4 completion:(id /* block */)arg5;
- (void)_performDependantFixup;
- (void)_performSettingsAudit;
- (void)_reevaluateDependantSettings;
- (void)_removeDependant:(id)arg1;
- (void)_removeManagedConfigurationProfile:(id)arg1 completion:(id /* block */)arg2;
- (void)_replaceConstraintsOnMessageToChildWithAdditions:(id)arg1 removedChildConstraints:(id)arg2 settingKeyPath:(id)arg3 senderProductClass:(long long)arg4 completion:(id /* block */)arg5;
- (void)_replaceConstraintsOnSetting:(id)arg1 additions:(id)arg2 removals:(id)arg3 completion:(id /* block */)arg4;
- (void)_runUpdateTransactionWithValue:(id)arg1 setting:(id)arg2 completion:(id /* block */)arg3;
- (void)_scheduleAuditWithReason:(unsigned long long)arg1;
- (void)_updateValue:(id)arg1 forSetting:(id)arg2 senderVersion:(id)arg3 senderProductClass:(long long)arg4 completion:(id /* block */)arg5;
- (void)addDependant:(id)arg1;
- (void)addedSettingModel:(id)arg1 completion:(id /* block */)arg2;
- (id)allChildrenIdentifiers;
- (void)auditOnFirstFetch;
- (id)auditSettingsTimer;
- (void)boolSettingForKeyPath:(id)arg1 completion:(id /* block */)arg2;
- (bool)canUser:(id)arg1 editConstraintsForSettingWithKeyPath:(id)arg2;
- (id)childrenIdentifiers;
- (id)codingKey;
- (void)configureIsSettingOwner:(bool)arg1 home:(id)arg2;
- (void)configureIsSettingOwner:(bool)arg1 home:(id)arg2 legacySettingsAdaptor:(id)arg3;
- (void)configureIsSettingOwner:(bool)arg1 migrationOwner:(bool)arg2 home:(id)arg3 legacySettingsAdaptor:(id)arg4;
- (id)constraintItemsMarkedForRemoval;
- (id)constraintModifyOperationQueue;
- (id)dataSource;
- (void)decodeWithCoder:(id)arg1;
- (id)delegate;
- (id)dependantControllers;
- (id)description;
- (void)didBecomeIndependantOwner;
- (void)didChangeDependantSettings:(id)arg1 ownerSettingsKeyPaths:(id)arg2;
- (void)didChangeSetting:(id)arg1;
- (void)didDetectCounterpartUsesSoftwareVersionBasedMigrationOwner;
- (bool)didInitiateSettingsCreationForOlderSoftwareCounterpart;
- (void)didUpdateSettingConstraints:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)factory;
- (id)fixupSettingsTimer;
- (id)groupForKeyPath:(id)arg1;
- (id)groupsMap;
- (void)handleLanguageChangeTimerFired;
- (void)handleRemovedGroupModel:(id)arg1 completion:(id /* block */)arg2;
- (void)handleRemovedSettingConstraintModel:(id)arg1 completion:(id /* block */)arg2;
- (void)handleRemovedSettingModel:(id)arg1 completion:(id /* block */)arg2;
- (void)handleUpdatedGroupModel:(id)arg1 completion:(id /* block */)arg2;
- (void)handleUpdatedSettingConstraintModel:(id)arg1 completion:(id /* block */)arg2;
- (void)handleUpdatedSettingModel:(id)arg1 completion:(id /* block */)arg2;
- (bool)hasCreatedUnprocessedRootGroup;
- (bool)hasDependants;
- (bool)haveGroupWithUUID:(id)arg1;
- (id)home;
- (id)initWithCoder:(id)arg1;
- (id)initWithParentUUID:(id)arg1 codingKey:(id)arg2;
- (id)initWithQueue:(id)arg1 delegate:(id)arg2 dataSource:(id)arg3 parentUUID:(id)arg4 codingKey:(id)arg5 logEventSubmitter:(id)arg6;
- (id)initWithQueue:(id)arg1 delegate:(id)arg2 dataSource:(id)arg3 parentUUID:(id)arg4 codingKey:(id)arg5 logEventSubmitter:(id)arg6 settingOwner:(bool)arg7 migrationOwner:(bool)arg8 factory:(id)arg9 rootGroup:(id)arg10 notificationCenter:(id)arg11;
- (bool)isMigrationOwner;
- (bool)isProxy;
- (bool)isSettingOwner;
- (id)languageChangeDebounceTimer;
- (id)languageValueList;
- (id)legacySettingsAdaptor;
- (void)legacySettingsAdaptor:(id)arg1 didLoadSettingKeyPath:(id)arg2 boolValue:(bool)arg3;
- (void)legacySettingsAdaptor:(id)arg1 didLoadSettingKeyPath:(id)arg2 numberValue:(id)arg3;
- (void)legacySettingsAdaptor:(id)arg1 didLoadSettingKeyPath:(id)arg2 selectedLanguageValue:(id)arg3 availableLanguageList:(id)arg4;
- (void)legacySettingsAdaptor:(id)arg1 didUpdateSettingKeyPath:(id)arg2 boolValue:(bool)arg3;
- (void)legacySettingsAdaptor:(id)arg1 didUpdateSettingKeyPath:(id)arg2 numberValue:(id)arg3;
- (void)legacySettingsAdaptor:(id)arg1 didUpdateSettingKeyPath:(id)arg2 selectedLanguageValue:(id)arg3 availableLanguageList:(id)arg4;
- (id)logEventSubmitter;
- (id)logIdentifier;
- (id)mergeWithSettingsMetadata:(id)arg1;
- (id)messageHandler;
- (id)messageTargetUUID;
- (id)modelObjectsForSettings;
- (id)notificationCenter;
- (void)onMessageAddConstraint:(id)arg1 keyPath:(id)arg2 completion:(id /* block */)arg3;
- (void)onMessageRemoveConstraint:(id)arg1 keyPath:(id)arg2 completion:(id /* block */)arg3;
- (void)onMessageReplaceConstraintsWithAdditions:(id)arg1 constraintIdsToRemove:(id)arg2 keyPath:(id)arg3 senderProductClass:(long long)arg4 isRemote:(bool)arg5 completion:(id /* block */)arg6;
- (void)onMessageReplaceConstraintsWithAdditions:(id)arg1 constraintIdsToRemove:(id)arg2 settingIdentifier:(id)arg3 senderProductClass:(long long)arg4 isRemote:(bool)arg5 completion:(id /* block */)arg6;
- (void)onMessageUpdateConstraints:(id)arg1 keyPath:(id)arg2 completion:(id /* block */)arg3;
- (void)onMessageUpdateValue:(id)arg1 settingIdentifier:(id)arg2 senderVersion:(id)arg3 senderProductClass:(long long)arg4 completion:(id /* block */)arg5;
- (void)onMessageUpdateValue:(id)arg1 settingKeyPath:(id)arg2 senderVersion:(id)arg3 senderProductClass:(long long)arg4 completion:(id /* block */)arg5;
- (void)owner:(id)arg1 didUpdateSettings:(id)arg2;
- (id)ownerController;
- (id)parentUUID;
- (void)removeAllDependants;
- (void)removeDependant:(id)arg1;
- (id)rootGroup;
- (void)scheduleAuditWithReason:(unsigned long long)arg1 from:(id)arg2;
- (void)scheduleDependantFixup;
- (void)setAuditSettingsTimer:(id)arg1;
- (void)setConstraintItemsMarkedForRemoval:(id)arg1;
- (void)setConstraintModifyOperationQueue:(id)arg1;
- (void)setDataSource:(id)arg1;
- (void)setDidInitiateSettingsCreationForOlderSoftwareCounterpart:(bool)arg1;
- (void)setFixupSettingsTimer:(id)arg1;
- (void)setGroupsMap:(id)arg1;
- (void)setHasCreatedUnprocessedRootGroup:(bool)arg1;
- (void)setIsMigrationOwner:(bool)arg1;
- (void)setIsSettingOwner:(bool)arg1;
- (void)setLanguageChangeDebounceTimer:(id)arg1;
- (void)setLegacySettingsAdaptor:(id)arg1;
- (void)setNestedGroupsDataSourcesWithGroup:(id)arg1;
- (void)setOwnerController:(id)arg1;
- (void)setRootGroup:(id)arg1;
- (void)setSettingsMap:(id)arg1;
- (id)settingForKeyPath:(id)arg1;
- (void)settingsHierarchyDidChange;
- (id)settingsMap;
- (bool)shouldEncodeForNonAdminSharedUserForSetting:(id)arg1;
- (bool)shouldEncodeForXPCTransportForSetting:(id)arg1;
- (bool)shouldEncodeSetting:(id)arg1 withCoder:(id)arg2 forAccessorySettingGroup:(id)arg3;
- (id)siriLanguage;
- (void)timerDidFire:(id)arg1;
- (id)transactionReceiver;
- (void)updateSettingOwner:(bool)arg1;
- (void)updatedSetting:(id)arg1 model:(id)arg2 completion:(id /* block */)arg3;
- (id)workQueue;

@end
