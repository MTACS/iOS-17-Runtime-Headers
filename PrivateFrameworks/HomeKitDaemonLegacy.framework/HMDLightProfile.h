
@interface HMDLightProfile : HMDAccessoryProfile <HMDCharacteristicsAvailabilityListenerDelegate> {
    unsigned char  _activeTransitionsCount;
    HMDCharacteristic * _brightnessCharacteristic;
    NSHashTable * _characteristicValueObservers;
    HMDCharacteristicsAvailabilityListener * _characteristicsAvailabilityListener;
    NSString * _clientIdentifier;
    HMDCharacteristic * _colorTemperatureCharacteristic;
    <HMDLightProfileDataSource> * _dataSource;
    HMDHAPAccessory * _hapAccessory;
    NSDate * _lastNaturalLightingCurveUpdateDate;
    NSDate * _lastNaturalLightingEnabledDate;
    NSDate * _lastNaturalLightingUsedDate;
    HMDNaturalLightingActiveTransitionContext * _naturalLightingActiveTransitionContext;
    bool  _naturalLightingCapable;
    HMDNaturalLightingCurve * _naturalLightingCurve;
    HMDNaturalLightingCurveWriter * _naturalLightingCurveWriter;
    bool  _naturalLightingEnabled;
    HMDNaturalLightingEnabledRetryContext * _naturalLightingEnabledRetryContext;
    NSSet * _notificationEnabledCharacteristics;
    NSSet * _readCharacteristics;
    HMDService * _service;
    unsigned long long  _supportedFeatures;
}

@property unsigned char activeTransitionsCount;
@property (readonly, copy) NSSet *availableCharacteristics;
@property (retain) HMDCharacteristic *brightnessCharacteristic;
@property (retain) NSHashTable *characteristicValueObservers;
@property (readonly) HMDCharacteristicsAvailabilityListener *characteristicsAvailabilityListener;
@property (readonly) NSString *clientIdentifier;
@property (retain) HMDCharacteristic *colorTemperatureCharacteristic;
@property (readonly) <HMDLightProfileDataSource> *dataSource;
@property HMDHAPAccessory *hapAccessory;
@property (copy) NSDate *lastNaturalLightingCurveUpdateDate;
@property (copy) NSDate *lastNaturalLightingEnabledDate;
@property (copy) NSDate *lastNaturalLightingUsedDate;
@property (readonly, copy) NSDate *mostRecentNaturalLightingEnabledDate;
@property (readonly, copy) NSDate *mostRecentNaturalLightingUsedDate;
@property (copy) HMDNaturalLightingActiveTransitionContext *naturalLightingActiveTransitionContext;
@property (getter=isNaturalLightingCapable) bool naturalLightingCapable;
@property (copy) HMDNaturalLightingCurve *naturalLightingCurve;
@property (readonly) HMDNaturalLightingCurveWriter *naturalLightingCurveWriter;
@property (getter=isNaturalLightingEnabled) bool naturalLightingEnabled;
@property (copy) HMDNaturalLightingEnabledRetryContext *naturalLightingEnabledRetryContext;
@property (copy) NSSet *notificationEnabledCharacteristics;
@property (readonly, copy) NSSet *readCharacteristicRequests;
@property (copy) NSSet *readCharacteristics;
@property (readonly) HMDService *service;
@property (readonly) HMLightProfileSettings *settings;
@property unsigned long long supportedFeatures;
@property (getter=isUsingNaturalLighting, readonly) bool usingNaturalLighting;

+ (id)logCategory;

- (void).cxx_destruct;
- (void)_handleAccessoryCharacteristicsChanged:(id)arg1;
- (unsigned char)activeTransitionsCount;
- (id)availableCharacteristicWithType:(id)arg1 fromChangedObjects:(id)arg2;
- (id)availableCharacteristics;
- (id)brightnessCharacteristic;
- (void)callSetNaturalLightingEnabledCompletion:(id /* block */)arg1 error:(id)arg2;
- (id)characteristicValueObservers;
- (id)characteristicsAvailabilityListener;
- (id)clientIdentifier;
- (id)colorTemperatureCharacteristic;
- (id)dataSource;
- (void)dealloc;
- (void)disableNaturalLightingCharacteristicNotificationsForObserver:(id)arg1;
- (bool)enableNaturalLightingCharacteristicNotificationsForObserver:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)fetchNaturalLightingEnabledWithCompletion:(id /* block */)arg1;
- (void)handleAccessoryCharacteristicsChanged:(id)arg1;
- (void)handleAccessoryUnconfigured:(id)arg1;
- (void)handleFetchNaturalLightColorTemperatureForBrightnessMessage:(id)arg1;
- (void)handleHomeDidDisableCharacteristicNotification:(id)arg1;
- (void)handleHomeDidEnableCharacteristicNotification:(id)arg1;
- (void)handleHomeNaturalLightingContextUpdated:(id)arg1;
- (void)handleSetNaturalLightingEnabled:(bool)arg1;
- (void)handleSetNaturalLightingEnabledMessage:(id)arg1;
- (id)hapAccessory;
- (id)initWithUUID:(id)arg1 workQueue:(id)arg2 lightService:(id)arg3 accessory:(id)arg4 characteristicsAvailabilityListener:(id)arg5 naturalLightingCurveWriter:(id)arg6 dataSource:(id)arg7;
- (id)initWithWorkQueue:(id)arg1 lightService:(id)arg2 accessory:(id)arg3;
- (bool)isNaturalLightingCapable;
- (bool)isNaturalLightingEnabled;
- (bool)isUsingNaturalLighting;
- (id)lastNaturalLightingCurveUpdateDate;
- (id)lastNaturalLightingEnabledDate;
- (id)lastNaturalLightingUsedDate;
- (void)listener:(id)arg1 didUpdateAvailableCharacteristics:(id)arg2;
- (id)mostRecentNaturalLightingEnabledDate;
- (id)mostRecentNaturalLightingUsedDate;
- (id)naturalLightingActiveTransitionContext;
- (id)naturalLightingCurve;
- (id)naturalLightingCurveWriter;
- (id)naturalLightingEnabledRetryContext;
- (id)notificationEnabledCharacteristics;
- (void)notifyClientsOfUpdatedSettingsWithPreviousSettings:(id)arg1;
- (id)readCharacteristicRequests;
- (id)readCharacteristics;
- (void)readNaturalLightingCharacteristicsWithReason:(id)arg1;
- (void)readNaturalLightingCharacteristicsWithReason:(id)arg1 completion:(id /* block */)arg2;
- (void)registerForMessages;
- (void)resetNaturalLightingEnabledRetryContext;
- (void)retrySetNaturalLightingEnabledWithContext:(id)arg1 error:(id)arg2;
- (id)service;
- (void)setActiveTransitionsCount:(unsigned char)arg1;
- (void)setBrightnessCharacteristic:(id)arg1;
- (void)setCharacteristicValueObservers:(id)arg1;
- (void)setColorTemperatureCharacteristic:(id)arg1;
- (void)setHapAccessory:(id)arg1;
- (void)setLastNaturalLightingCurveUpdateDate:(id)arg1;
- (void)setLastNaturalLightingEnabledDate:(id)arg1;
- (void)setLastNaturalLightingUsedDate:(id)arg1;
- (void)setNaturalLightingActiveTransitionContext:(id)arg1;
- (void)setNaturalLightingCapable:(bool)arg1;
- (void)setNaturalLightingCharacteristicsNotificationEnabled:(bool)arg1 forObserver:(id)arg2;
- (void)setNaturalLightingCurve:(id)arg1;
- (void)setNaturalLightingEnabled:(bool)arg1;
- (void)setNaturalLightingEnabled:(bool)arg1 completion:(id /* block */)arg2;
- (void)setNaturalLightingEnabled:(bool)arg1 completion:(id /* block */)arg2 retryContext:(id)arg3;
- (void)setNaturalLightingEnabled:(bool)arg1 shouldRetryOnFailure:(bool)arg2 completion:(id /* block */)arg3;
- (void)setNaturalLightingEnabledRetryContext:(id)arg1;
- (void)setNotificationEnabledCharacteristics:(id)arg1;
- (void)setReadCharacteristics:(id)arg1;
- (void)setSupportedFeatures:(unsigned long long)arg1;
- (id)settings;
- (bool)shouldRetrySetNaturalLightingEnabledWithError:(id)arg1;
- (unsigned long long)supportedFeatures;
- (void)synchronizeCurveToAccessory;
- (bool)updateActiveTransitionCountWithCharacteristic:(id)arg1;
- (bool)updateEnabledCharacteristicsNotifications;
- (void)updateLastNaturalLightingUsedState;
- (bool)updateNaturalLightingCurve;
- (void)updateNaturalLightingEnabledForCharacteristic:(id)arg1;
- (void)updateSettingsWithCharacteristics:(id)arg1;
- (id)updateSettingsWithReadCharacteristicResponsePayload:(id)arg1 error:(id*)arg2;
- (void)updateSupportedFeaturesWithCharacteristics:(id)arg1;

@end
