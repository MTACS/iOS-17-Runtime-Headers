
@interface HMDMatterThirdPartyPairingLogEvent : HMMLogEvent <HMMCoreAnalyticsLogging> {
    NSString * _accessoryTransportType;
    NSNumber * _caseSessionSanityCheckPassed;
    bool  _cleanClose;
    NSString * _client;
    NSNumber * _communicationProtocol;
    NSNumber * _credentialsSentToClient;
    NSNumber * _discoveredOverBLE;
    NSNumber * _errorCode;
    NSString * _errorDomain;
    NSString * _firmwareVersion;
    NSNumber * _hasShortDiscriminator;
    NSNumber * _knownToSystemCommissioner;
    NSNumber * _longestStateDuration;
    NSString * _longestStateName;
    NSNumber * _matterCategoryNumber;
    NSNumber * _matterProductID;
    NSNumber * _matterProductNumber;
    NSNumber * _matterVendorNumber;
    NSNumber * _pairingDuration;
    NSNumber * _pairingWindowOpenedWithPasscodeDuration;
    NSNumber * _providedThreadScanResults;
    NSNumber * _providedWiFiScanResults;
    NSNumber * _requiresMatterCustomCommissioningFlow;
    NSNumber * _success;
    NSNumber * _supportsSoftAP;
    NSNumber * _threadSetupDuration;
    NSNumber * _underlyingErrorCode;
    NSString * _underlyingErrorDomain;
}

@property (nonatomic, readonly, copy) NSString *accessoryIdentifier;
@property (nonatomic, copy) NSString *accessoryTransportType;
@property (nonatomic, retain) NSNumber *caseSessionSanityCheckPassed;
@property (nonatomic) bool cleanClose;
@property (nonatomic, copy) NSString *client;
@property (nonatomic, retain) NSNumber *communicationProtocol;
@property (nonatomic, readonly, copy) NSDictionary *coreAnalyticsEventDictionary;
@property (nonatomic, readonly, copy) NSString *coreAnalyticsEventName;
@property (nonatomic, readonly) unsigned long long coreAnalyticsEventOptions;
@property (nonatomic, retain) NSNumber *credentialsSentToClient;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSNumber *discoveredOverBLE;
@property (nonatomic, retain) NSNumber *errorCode;
@property (nonatomic, copy) NSString *errorDomain;
@property (nonatomic, copy) NSString *firmwareVersion;
@property (nonatomic, retain) NSNumber *hasShortDiscriminator;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSUUID *homeUUID;
@property (nonatomic, retain) NSNumber *knownToSystemCommissioner;
@property (nonatomic, retain) NSNumber *longestStateDuration;
@property (nonatomic, copy) NSString *longestStateName;
@property (nonatomic, retain) NSNumber *matterCategoryNumber;
@property (nonatomic, retain) NSNumber *matterProductID;
@property (nonatomic, retain) NSNumber *matterProductNumber;
@property (nonatomic, retain) NSNumber *matterVendorNumber;
@property (nonatomic, retain) NSNumber *pairingDuration;
@property (nonatomic, copy) NSNumber *pairingWindowOpenedWithPasscodeDuration;
@property (nonatomic, retain) NSNumber *providedThreadScanResults;
@property (nonatomic, retain) NSNumber *providedWiFiScanResults;
@property (nonatomic, retain) NSNumber *requiresMatterCustomCommissioningFlow;
@property (nonatomic, retain) NSNumber *success;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSNumber *supportsSoftAP;
@property (nonatomic, copy) NSNumber *threadSetupDuration;
@property (nonatomic, retain) NSNumber *underlyingErrorCode;
@property (nonatomic, copy) NSString *underlyingErrorDomain;

+ (bool)submitEventWithHistogrammedAggregateHomeDataCommonDimensions;

- (void).cxx_destruct;
- (id)accessoryTransportType;
- (id)caseSessionSanityCheckPassed;
- (bool)cleanClose;
- (id)client;
- (id)communicationProtocol;
- (id)coreAnalyticsEventDictionary;
- (id)coreAnalyticsEventName;
- (unsigned long long)coreAnalyticsEventOptions;
- (id)credentialsSentToClient;
- (id)discoveredOverBLE;
- (id)errorCode;
- (id)errorDomain;
- (id)firmwareVersion;
- (id)hasShortDiscriminator;
- (id)knownToSystemCommissioner;
- (id)longestStateDuration;
- (id)longestStateName;
- (id)matterCategoryNumber;
- (id)matterProductID;
- (id)matterProductNumber;
- (id)matterVendorNumber;
- (id)pairingDuration;
- (id)pairingWindowOpenedWithPasscodeDuration;
- (id)providedThreadScanResults;
- (id)providedWiFiScanResults;
- (id)requiresMatterCustomCommissioningFlow;
- (void)setAccessoryTransportType:(id)arg1;
- (void)setCaseSessionSanityCheckPassed:(id)arg1;
- (void)setCleanClose:(bool)arg1;
- (void)setClient:(id)arg1;
- (void)setCommunicationProtocol:(id)arg1;
- (void)setCredentialsSentToClient:(id)arg1;
- (void)setDiscoveredOverBLE:(id)arg1;
- (void)setErrorCode:(id)arg1;
- (void)setErrorDomain:(id)arg1;
- (void)setFirmwareVersion:(id)arg1;
- (void)setHasShortDiscriminator:(id)arg1;
- (void)setKnownToSystemCommissioner:(id)arg1;
- (void)setLongestStateDuration:(id)arg1;
- (void)setLongestStateName:(id)arg1;
- (void)setMatterCategoryNumber:(id)arg1;
- (void)setMatterProductID:(id)arg1;
- (void)setMatterProductNumber:(id)arg1;
- (void)setMatterVendorNumber:(id)arg1;
- (void)setPairingDuration:(id)arg1;
- (void)setPairingWindowOpenedWithPasscodeDuration:(id)arg1;
- (void)setProvidedThreadScanResults:(id)arg1;
- (void)setProvidedWiFiScanResults:(id)arg1;
- (void)setRequiresMatterCustomCommissioningFlow:(id)arg1;
- (void)setSuccess:(id)arg1;
- (void)setSupportsSoftAP:(id)arg1;
- (void)setThreadSetupDuration:(id)arg1;
- (void)setUnderlyingErrorCode:(id)arg1;
- (void)setUnderlyingErrorDomain:(id)arg1;
- (id)success;
- (id)supportsSoftAP;
- (id)threadSetupDuration;
- (id)underlyingErrorCode;
- (id)underlyingErrorDomain;

@end
