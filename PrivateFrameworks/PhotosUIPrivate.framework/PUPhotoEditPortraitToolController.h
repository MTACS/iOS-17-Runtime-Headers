
@interface PUPhotoEditPortraitToolController : PUPhotoEditToolController <CEKLightingControlDelegate, CEKSliderDelegate, PUPhotoEditApertureToolbarDelegate, PUPhotoEditPortraitFocusDelegate, PXNavigationActionReceiver> {
    CEKApertureButton * _apertureButton;
    UIView * _apertureContainer;
    PUPhotoEditApertureToolbar * _apertureToolbar;
    NSDictionary * _cachedPortraitEffectSettings;
    NSNumber * _cachedSpillMatteAllowed;
    NSMutableArray * _containerConstraints;
    PUPhotoEditPortraitFocusOverlayViewController * _focusOverlayController;
    NSMutableArray * _focusOverlayControllerConstraints;
    double  _initialLightingIntensity;
    long long  _initialLightingType;
    bool  _isStageLightEnabled;
    double  _lastKnownAperture;
    UIView * _lightingContainer;
    CEKLightingControl * _lightingControl;
    NSArray * _lightingControlConstraints;
    _PULightingGradientView * _lightingGradient;
    PUPhotoEditToolbarButton * _lightingIntensityButton;
    NSMutableDictionary * _lightingIntensityCache;
    CEKLightingNameBadge * _lightingNameBadge;
    NSArray * _lightingNameBadgeConstraints;
    CEKSlider * _lightingSlider;
    bool  _livePhotoOnBeforeAdjustingLighting;
    unsigned long long  _majorVersion;
    unsigned long long  _minorVersion;
    PUPhotoEditToolActivationButton * _portraitToolbarButton;
    unsigned long long  _sDOFRenderingVersion;
    bool  _suspendUIUpdatesFromComposition;
    NSMutableArray * _toolConstraints;
    long long  _toolSelection;
}

@property (nonatomic, readonly) PUPhotoEditApertureToolbar *apertureToolbar;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) CEKLightingControl *lightingControl;
@property (nonatomic) unsigned long long majorVersion;
@property (nonatomic) unsigned long long minorVersion;
@property (nonatomic) unsigned long long sDOFRenderingVersion;
@property (readonly) Class superclass;
@property (nonatomic) long long toolSelection;

- (void).cxx_destruct;
- (bool)_canRenderPortraitEffect;
- (void)_createFocusOverlayIfNeeded;
- (long long)_defaultPortraitTool;
- (id)_depthButtonTitle;
- (void)_didModifyLightingIntensity;
- (void)_handlePortraitEffectButton:(id)arg1;
- (void)_handlePortraitNavigationButtons:(id)arg1;
- (void)_refreshFromValuesCalculator;
- (void)_removeFocusOverlayIfNeeded;
- (void)_resetDefaultToolMode;
- (void)_restoreCachedLightingIntensity;
- (void)_selectNextEffectType:(bool)arg1;
- (void)_setShowLightingControl:(bool)arg1 animated:(bool)arg2;
- (bool)_setupApertureControlsIfNeeded;
- (bool)_setupDepthControlsIfNeeded;
- (bool)_setupLightingControlsIfNeeded;
- (bool)_shouldShowPortraitFocusEditingUI;
- (bool)_shouldShowPortraitV2;
- (void)_updateApertureSliderLength;
- (void)_updateCompositionWithLightingIntensity;
- (void)_updateFocusOverlay;
- (void)_updateFocusOverlayConstraints;
- (void)_updateLabelOrientation;
- (void)_updateLightingControl;
- (void)_updateLightingIntensityCache;
- (void)_updateLightingMarkerForType:(long long)arg1;
- (void)_updateLightingNameBadgeForOrientation:(long long)arg1 expanded:(bool)arg2;
- (void)_updateLightingSliderAnimated:(bool)arg1;
- (void)_updateNavigationButtonsAnimated:(bool)arg1;
- (void)_updateToolConstraints;
- (void)_updateToolContainerConstraints;
- (void)_updateToolVisibilityAnimated:(bool)arg1;
- (id)accessibilityHUDItemForButton:(id)arg1;
- (id)apertureToolbar;
- (void)apertureToolbar:(id)arg1 didChangeValue:(double)arg2;
- (void)apertureToolbar:(id)arg1 didUpdateDepthActive:(bool)arg2;
- (void)apertureToolbarDidStartSliding:(id)arg1;
- (void)apertureToolbarDidStopSliding:(id)arg1;
- (bool)apertureToolbarIsDepthActive;
- (bool)apertureToolbarShouldRotateLabelsWithOrientation:(id)arg1;
- (bool)canResetToDefaultValue;
- (id)centerToolbarView;
- (void)compositionControllerDidChangeForAdjustments:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })currentFocusRect;
- (void)decreaseScrubberValue:(bool)arg1;
- (void)decreaseSliderValue:(bool)arg1;
- (void)editValuesCalculatorHasChangedImageValues:(id)arg1;
- (void)focusRectChanged:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)increaseScrubberValue:(bool)arg1;
- (void)increaseSliderValue:(bool)arg1;
- (id)leadingToolbarViews;
- (id)lightingControl;
- (void)lightingControl:(id)arg1 willChangeExpanded:(bool)arg2;
- (void)lightingControlDidChangeExpanded:(id)arg1;
- (void)lightingControlDidChangeSelectedLightingType:(id)arg1;
- (id)localizedName;
- (unsigned long long)majorVersion;
- (void)mediaView:(id)arg1 didZoom:(double)arg2;
- (void)mediaViewDidScroll:(id)arg1;
- (void)mediaViewIsReady;
- (unsigned long long)minorVersion;
- (void)navigateToNextTab:(id)arg1;
- (void)navigateToPreviousTab:(id)arg1;
- (void)reactivate;
- (unsigned long long)sDOFRenderingVersion;
- (id)selectedToolbarIconGlyphName;
- (void)setBackdropViewGroupName:(id)arg1;
- (void)setLayoutOrientation:(long long)arg1 withTransitionCoordinator:(id)arg2;
- (void)setMajorVersion:(unsigned long long)arg1;
- (void)setMinorVersion:(unsigned long long)arg1;
- (void)setPhotoEditSpec:(id)arg1;
- (void)setSDOFRenderingVersion:(unsigned long long)arg1;
- (void)setToolSelection:(long long)arg1;
- (void)setToolSelection:(long long)arg1 animated:(bool)arg2;
- (void)setupWithAsset:(id)arg1 compositionController:(id)arg2 editSource:(id)arg3 valuesCalculator:(id)arg4;
- (void)sliderDidEndScrolling:(id)arg1;
- (void)sliderDidScroll:(id)arg1;
- (void)sliderWillBeginScrolling:(id)arg1;
- (void)sliderWillEndScrolling:(id)arg1 withVelocity:(struct CGPoint { double x1; double x2; })arg2 targetContentOffset:(inout struct CGPoint { double x1; double x2; }*)arg3;
- (long long)toolControllerTag;
- (long long)toolSelection;
- (id)toolbarIcon;
- (id)toolbarIconAccessibilityLabel;
- (id)toolbarIconGlyphName;
- (void)updateViewConstraints;
- (void)validateCommand:(id)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (bool)wantsScrubberKeyControl;
- (bool)wantsSecondaryToolbarVisible;
- (bool)wantsSliderKeyControl;
- (bool)wantsTapToToggleOriginalEnabled;
- (bool)wantsZoomAndPanEnabled;
- (void)willBecomeActiveTool;

@end
