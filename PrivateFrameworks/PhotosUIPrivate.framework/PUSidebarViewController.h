
@interface PUSidebarViewController : UIViewController <PUCollectionsCollectionViewDropDataProvider, PUOutlineCellDelegate, PXAlbumStreamingOptionsViewControllerDelegate, PXAssetCollectionActionPerformerDelegate, PXChangeObserver, PXCollectionActionReceiver, PXSidebarOutlineSectionControllerDelegate, PXSplitViewControllerChangeObserver, UICollectionViewDelegate, UIPopoverPresentationControllerDelegate> {
    PXAssetCollectionActionManager * _assetCollectionActionManager;
    NSPredicate * _assetsFilterPredicate;
    UICollectionView * _collectionView;
    PXProgrammaticNavigationDestination * _currentNavigationDestination;
    UICollectionViewDiffableDataSource * _dataSource;
    <PXNavigationListItem> * _deferredNavigationItem;
    PUCollectionsCollectionViewDropDelegate * _dropDelegate;
    bool  _isUpdating;
    PXLibraryFilterState * _libraryFilterState;
    <PXProgrammaticNavigationParticipant> * _navigationRoot;
    unsigned long long  _options;
    PHPhotoLibrary * _photoLibrary;
    PHAssetCollection * _pickerAllPhotosVirtualCollection;
    PUSidebarReorderController * _reorderController;
    bool  _selectingAlreadySelectedIndexPath;
    PXSidebarDataController * _sidebarDataController;
    PUSidebarDataSectionEnablementController * _sidebarDataSectionEnablementController;
    PXSidebarOutlineSectionController * _sidebarOutlineSectionController;
}

@property (nonatomic, retain) PXAssetCollectionActionManager *assetCollectionActionManager;
@property (nonatomic, readonly) NSPredicate *assetsFilterPredicate;
@property (nonatomic, retain) UICollectionView *collectionView;
@property (nonatomic, retain) PXProgrammaticNavigationDestination *currentNavigationDestination;
@property (nonatomic, retain) UICollectionViewDiffableDataSource *dataSource;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, retain) <PXNavigationListItem> *deferredNavigationItem;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) PUCollectionsCollectionViewDropDelegate *dropDelegate;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isUpdating;
@property (nonatomic, readonly) PXLibraryFilterState *libraryFilterState;
@property (nonatomic, readonly) <PXMemoryAssetsActionFactory> *memoryAssetsActionFactory;
@property (nonatomic, readonly) <PXProgrammaticNavigationParticipant> *navigationRoot;
@property (nonatomic) unsigned long long options;
@property (nonatomic, readonly) PHPhotoLibrary *photoLibrary;
@property (nonatomic, readonly) PHAssetCollection *pickerAllPhotosVirtualCollection;
@property (nonatomic, retain) PUSidebarReorderController *reorderController;
@property (nonatomic) bool selectingAlreadySelectedIndexPath;
@property (nonatomic, readonly) <PXSelectionContainerProvider> *selectionProvider;
@property (nonatomic, retain) PXSidebarDataController *sidebarDataController;
@property (nonatomic, retain) PUSidebarDataSectionEnablementController *sidebarDataSectionEnablementController;
@property (nonatomic, retain) PXSidebarOutlineSectionController *sidebarOutlineSectionController;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)_backNavigationRootItemForItem:(id)arg1;
- (id)_collectionViewIndexPathForItemIdentifier:(id)arg1;
- (void)_createSharedAlbum;
- (void)_deleteItemTapped:(id)arg1 sourceView:(id)arg2 completion:(id /* block */)arg3;
- (void)_handleDidSelectListItem:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)_highlightNavigationDestination:(id)arg1;
- (void)_keyboardWillChangeFrame:(id)arg1;
- (void)_navigateToDestinationForItem:(id)arg1 sameItem:(bool)arg2 completionHandler:(id /* block */)arg3;
- (void)_performActionForType:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)_trailingSwipeActionConfigurationForIndexPath:(id)arg1;
- (void)_triggerNavigationToDestination:(id)arg1 animated:(bool)arg2 completionHandler:(id /* block */)arg3;
- (void)_updateHeaderCell:(id)arg1 forListItem:(id)arg2;
- (void)_updateOutlineCell:(id)arg1 forListItem:(id)arg2;
- (void)_updateSelectedRowScrollToVisible:(bool)arg1;
- (bool)actionPerformer:(id)arg1 dismissViewController:(id)arg2 completionHandler:(id /* block */)arg3;
- (bool)actionPerformer:(id)arg1 presentViewController:(id)arg2;
- (bool)actionPerformer:(id)arg1 transitionToViewController:(id)arg2 transitionType:(long long)arg3;
- (id)actionPerformerDelegateForCollectionViewDropDelegate:(id)arg1;
- (void)albumStreamingOptionsViewController:(id)arg1 didCompleteWithReason:(int)arg2;
- (id)assetCollectionActionManager;
- (void)assetCollectionActionPerformer:(id)arg1 playMovieForAssetCollection:(id)arg2;
- (id)assetsFilterPredicate;
- (bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (id)collectionView;
- (id)collectionView:(id)arg1 contextMenuConfigurationForItemAtIndexPath:(id)arg2 point:(struct CGPoint { double x1; double x2; })arg3;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (bool)collectionView:(id)arg1 selectionFollowsFocusForItemAtIndexPath:(id)arg2;
- (bool)collectionView:(id)arg1 shouldSelectItemAtIndexPath:(id)arg2;
- (bool)collectionView:(id)arg1 shouldSpringLoadItemAtIndexPath:(id)arg2 withContext:(id)arg3;
- (id)collectionView:(id)arg1 targetIndexPathForMoveFromItemAtIndexPath:(id)arg2 toProposedIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 willPerformPreviewActionForMenuWithConfiguration:(id)arg2 animator:(id)arg3;
- (id)collectionViewDropDelegate:(id)arg1 collectionAtIndexPath:(id)arg2;
- (void)configureDataSource;
- (void)configureViewHierarchy;
- (id)currentNavigationDestination;
- (id)dataSource;
- (id)deferredNavigationItem;
- (id)dropDelegate;
- (id)generateLayout;
- (id)hostViewControllerForActionPerformer:(id)arg1;
- (id)initWithNavigationRoot:(id)arg1 photoLibrary:(id)arg2 libraryFilterState:(id)arg3;
- (id)initWithNavigationRoot:(id)arg1 photoLibrary:(id)arg2 libraryFilterState:(id)arg3 options:(unsigned long long)arg4 additionalAssetsFilterPredicate:(id)arg5 pickerAllPhotosVirtualCollection:(id)arg6;
- (bool)isUpdating;
- (id)libraryFilterState;
- (void)navigateToFallbackForDestination:(id)arg1;
- (id)navigationRoot;
- (void)newAlbum:(id)arg1;
- (void)newFolder:(id)arg1;
- (void)newSharedAlbum:(id)arg1;
- (void)newSmartAlbum:(id)arg1;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void*)arg3;
- (unsigned long long)options;
- (void)outlineCell:(id)arg1 updatedTitle:(id)arg2 forItem:(id)arg3;
- (id)photoLibrary;
- (id)pickerAllPhotosVirtualCollection;
- (void)popoverPresentationController:(id)arg1 willRepositionPopoverToRect:(inout struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg2 inView:(inout id*)arg3;
- (bool)popoverPresentationControllerShouldDismissPopover:(id)arg1;
- (void)ppt_runTabSwitchingTestWithName:(id)arg1 options:(id)arg2 delegate:(id)arg3 completionHandler:(id /* block */)arg4;
- (id)presentationEnvironmentForActionPerformer:(id)arg1;
- (id)reorderController;
- (void)selectItemForDestination:(id)arg1;
- (bool)selectingAlreadySelectedIndexPath;
- (id)selectionProvider;
- (void)setAssetCollectionActionManager:(id)arg1;
- (void)setCollectionView:(id)arg1;
- (void)setCurrentNavigationDestination:(id)arg1;
- (void)setDataSource:(id)arg1;
- (void)setDeferredNavigationItem:(id)arg1;
- (void)setDropDelegate:(id)arg1;
- (void)setEditing:(bool)arg1 animated:(bool)arg2;
- (void)setIsUpdating:(bool)arg1;
- (void)setOptions:(unsigned long long)arg1;
- (void)setReorderController:(id)arg1;
- (void)setSelectingAlreadySelectedIndexPath:(bool)arg1;
- (void)setSidebarDataController:(id)arg1;
- (void)setSidebarDataSectionEnablementController:(id)arg1;
- (void)setSidebarOutlineSectionController:(id)arg1;
- (void)setupDataSectionManagerWithLoadMode:(long long)arg1;
- (id)sidebarDataController;
- (id)sidebarDataSectionEnablementController;
- (id)sidebarOutlineSectionController;
- (void)sidebarOutlineSectionController:(id)arg1 willApplySnapshotWithChangedItemsAfterChange:(id)arg2 applyBlock:(id /* block */)arg3;
- (void)splitViewControllerWillExpand:(id)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (id)undoManagerForActionPerformer:(id)arg1;
- (void)validateCommand:(id)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;

@end
