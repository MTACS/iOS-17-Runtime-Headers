
@interface PUWallpaperPosterEditViewModel : PXObservable <PUWallpaperPosterMutableEditViewModel, PXChangeObserver> {
    NSSet * _activeLayerStackViewModels;
    bool  _appliesDepthToAllOrientations;
    NSArray * _availableStyles;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _containerFrame;
    PUParallaxLayerStackViewModel * _currentLayerStackViewModel;
    NSArray * _currentStyles;
    bool  _depthEnabled;
    NSNumber * _desiredHeadroomVisibilityAmount;
    long long  _deviceOrientation;
    PXNumberAnimator * _headroomVisibilityAmountAnimator;
    bool  _isUserPanningOrZooming;
    NSMutableDictionary * _layerStackViewModelsByStyleKind;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _normalizedVisibleFrame;
    bool  _parallaxDisabled;
    bool  _presentingSingleStyle;
    struct { 
        NSString *firstStyle; 
        double secondStyleMixFactor; 
        NSString *secondStyle; 
    }  _scrollPosition;
    <PISegmentationItem> * _segmentationItem;
    bool  _settlingEffectEnabled;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _settlingEffectStateRestorationLandscapeNormalizedVisibleFrame;
    NSString * _settlingEffectStateRestorationLayerStyleKind;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _settlingEffectStateRestorationPortraitNormalizedVisibleFrame;
    long long  _stylesChange;
    PXUpdater * _updater;
    bool  _userHasAdjustedLandscapeVisibleFrame;
    bool  _userHasAdjustedPortraitVisibleFrame;
    bool  _usingHeadroom;
    NSMutableDictionary * _viewModelUpdatersByStyleKind;
    bool  _visibleFrameCrossesHeadroomBoundary;
    NSArray * _visibleLayerStackViewModels;
}

@property (nonatomic, readonly, copy) NSSet *activeLayerStackViewModels;
@property (nonatomic, readonly) bool appliesDepthToAllOrientations;
@property (nonatomic, copy) NSArray *availableStyles;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } containerFrame;
@property (nonatomic, readonly) PUParallaxLayerStackViewModel *currentLayerStackViewModel;
@property (nonatomic, readonly) PUParallaxLayerStackViewModelUpdater *currentLayerStackViewModelUpdater;
@property (nonatomic, readonly, copy) NSArray *currentStyleKinds;
@property (nonatomic, copy) NSArray *currentStyles;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) bool depthEnabled;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSNumber *desiredHeadroomVisibilityAmount;
@property (nonatomic, readonly) long long deviceOrientation;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) PXNumberAnimator *headroomVisibilityAmountAnimator;
@property (nonatomic, readonly) bool isUserPanningOrZooming;
@property (nonatomic, readonly) NSMutableDictionary *layerStackViewModelsByStyleKind;
@property (nonatomic, readonly) PFWallpaperCompoundDeviceConfiguration *layoutConfiguration;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } normalizedVisibleFrame;
@property (nonatomic, readonly) PUParallaxLayerStackViewModel *originalLayerStackViewModel;
@property (nonatomic, readonly) bool parallaxDisabled;
@property (getter=isPresentingSingleStyle, nonatomic, readonly) bool presentingSingleStyle;
@property (nonatomic, readonly) struct { id x1; double x2; id x3; } scrollPosition;
@property (nonatomic, readonly) <PISegmentationItem> *segmentationItem;
@property (nonatomic, readonly) bool settlingEffectEnabled;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } settlingEffectStateRestorationLandscapeNormalizedVisibleFrame;
@property (nonatomic, readonly) NSString *settlingEffectStateRestorationLayerStyleKind;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } settlingEffectStateRestorationPortraitNormalizedVisibleFrame;
@property (nonatomic) long long stylesChange;
@property (readonly) Class superclass;
@property (nonatomic, readonly) PXUpdater *updater;
@property (nonatomic) bool userHasAdjustedLandscapeVisibleFrame;
@property (nonatomic) bool userHasAdjustedPortraitVisibleFrame;
@property (getter=isUsingHeadroom, nonatomic) bool usingHeadroom;
@property (nonatomic, readonly) NSMutableDictionary *viewModelUpdatersByStyleKind;
@property (nonatomic) bool visibleFrameCrossesHeadroomBoundary;
@property (nonatomic, readonly, copy) NSArray *visibleLayerStackViewModels;

- (void).cxx_destruct;
- (void)_createViewModelsWithInitialViewModel:(id)arg1;
- (void)_initScrollPositionWithViewModel:(id)arg1;
- (void)_invalidateActiveLayerStackViewModels;
- (void)_invalidateAvailableLayerStackViewModelsContainerGeometry;
- (void)_invalidateAvailableLayerStackViewModelsProperties;
- (void)_invalidateCurrentLayerStackViewModel;
- (void)_invalidateCurrentStyles;
- (void)_invalidateDepthEnabled;
- (void)_invalidateDesiredHeadroomVisibilityAmount;
- (void)_invalidateNormalizedVisibleFrame;
- (void)_invalidatePresentingSingleStyle;
- (void)_invalidatePropertiesFromCurrentLayerStackViewModel;
- (void)_invalidateVisibleFrameCrossesHeadroomBoundary;
- (void)_invalidateVisibleLayerStackViewModels;
- (id)_layerStackViewModelForStyleKind:(id)arg1;
- (id)_nextStyleKindForStyleKind:(id)arg1;
- (id)_previousStyleKindForStyleKind:(id)arg1;
- (void)_setNeedsUpdate;
- (void)_updateActiveLayerStackViewModels;
- (void)_updateAvailableLayerStackViewModelsContainerGeometry;
- (void)_updateAvailableLayerStackViewModelsProperties;
- (void)_updateCurrentLayerStackViewModel;
- (void)_updateCurrentStyles;
- (void)_updateCurrentStylesWithChange:(long long)arg1;
- (void)_updateDepthEnabled;
- (void)_updateDesiredHeadroomVisibilityAmount;
- (void)_updateLayerStackViewModelProperties:(id)arg1;
- (void)_updateNormalizedVisibleFrame;
- (void)_updatePresentingSingleStyle;
- (void)_updatePropertiesFromCurrentLayerStackViewModel;
- (void)_updateVisibleFrameCrossesHeadroomBoundary;
- (void)_updateVisibleLayerStackViewModels;
- (id)activeLayerStackViewModels;
- (bool)appliesDepthToAllOrientations;
- (void)applyChangesFromPosterEditConfiguration:(id)arg1;
- (bool)applySettlingEffectVisibleFrameRestoration;
- (id)availableLayerStackViewModels;
- (id)availableStyles;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })containerFrame;
- (double)currentClockAreaLuminanceForStyleKind:(id)arg1;
- (id)currentLayerStackViewModel;
- (id)currentLayerStackViewModelUpdater;
- (id)currentStyleKinds;
- (id)currentStyles;
- (bool)depthEnabled;
- (id)desiredHeadroomVisibilityAmount;
- (long long)deviceOrientation;
- (void)didPerformChanges;
- (id)headroomVisibilityAmountAnimator;
- (id)init;
- (id)initWithInitialLayerStackViewModel:(id)arg1 availableStyles:(id)arg2;
- (bool)isPresentingSingleStyle;
- (bool)isUserPanningOrZooming;
- (bool)isUsingHeadroom;
- (id)layerStackViewModelsByStyleKind;
- (id)layoutConfiguration;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })normalizedVisibleFrame;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void*)arg3;
- (id)originalLayerStackViewModel;
- (bool)parallaxDisabled;
- (void)performChanges:(id /* block */)arg1;
- (id)posterEditConfigurationRepresentation;
- (void)reframeToSettlingEffectBoundsIfNeeded;
- (struct { id x1; double x2; id x3; })scrollPosition;
- (void)scrollToPosition:(struct { id x1; double x2; id x3; })arg1;
- (id)segmentationItem;
- (void)setActiveLayerStackViewModels:(id)arg1;
- (void)setAppliesDepthToAllOrientations:(bool)arg1;
- (void)setAvailableStyles:(id)arg1;
- (void)setContainerFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setCurrentLayerStackViewModel:(id)arg1;
- (void)setCurrentStyles:(id)arg1;
- (void)setDepthEnabled:(bool)arg1;
- (void)setDesiredHeadroomVisibilityAmount:(id)arg1;
- (void)setDeviceOrientation:(long long)arg1;
- (void)setHeadroomVisibilityAmountAnimator:(id)arg1;
- (void)setIsUserPanningOrZooming:(bool)arg1;
- (void)setNormalizedVisibleFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setNormalizedVisibleFrameAnimated:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setParallaxDisabled:(bool)arg1;
- (void)setPresentingSingleStyle:(bool)arg1;
- (void)setSettlingEffectEnabled:(bool)arg1;
- (void)setSettlingEffectStateRestorationLandscapeNormalizedVisibleFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setSettlingEffectStateRestorationLayerStyleKind:(id)arg1;
- (void)setSettlingEffectStateRestorationPortraitNormalizedVisibleFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setStylesChange:(long long)arg1;
- (void)setUserHasAdjustedLandscapeVisibleFrame:(bool)arg1;
- (void)setUserHasAdjustedPortraitVisibleFrame:(bool)arg1;
- (void)setUsingHeadroom:(bool)arg1;
- (void)setVisibleFrameCrossesHeadroomBoundary:(bool)arg1;
- (void)setVisibleLayerStackViewModels:(id)arg1;
- (bool)settlingEffectEnabled;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })settlingEffectStateRestorationLandscapeNormalizedVisibleFrame;
- (id)settlingEffectStateRestorationLayerStyleKind;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })settlingEffectStateRestorationPortraitNormalizedVisibleFrame;
- (void)shutdownWithTimeout:(double)arg1;
- (long long)stylesChange;
- (void)updateSettlingEffectWithSegmentationItem:(id)arg1 layerStack:(id)arg2;
- (id)updater;
- (void)userDidAdjustVisibleFrame;
- (bool)userHasAdjustedLandscapeVisibleFrame;
- (bool)userHasAdjustedPortraitVisibleFrame;
- (id)viewModelUpdatersByStyleKind;
- (bool)visibleFrameCrossesHeadroomBoundary;
- (id)visibleLayerStackViewModels;

@end
