
@interface SFNavigationBarToggleButton : SFClickableButton <UIPointerInteractionDelegate> {
    UIView * _accessoryView;
    UIView * _badgeView;
    long long  _cornerRoundingMode;
    UIImageView * _defaultStateImageView;
    bool  _drawsLightGlyph;
    UIColor * _glyphTintColor;
    bool  _highlightsBackground;
    UIImage * _image;
    unsigned long long  _inputMode;
    double  _insetFromBackground;
    bool  _liftedForCursor;
    double  _minimumSideMargin;
    UIPointerInteraction * _pointerInteraction;
    UIView * _pointerPreviewContainer;
    UIImageSymbolConfiguration * _preferredSymbolConfiguration;
    double  _resizableBackgroundCornerRadius;
    UIImageView * _secondaryImageView;
    UIView * _selectedStateFillView;
    UIImageView * _selectedStateImageView;
    SFToggleBackgroundView * _selectedStateMaskView;
    bool  _showsBadge;
    UIImageView * _tertiaryImageView;
    UIView * _tiplessPopoverSourceView;
    bool  _usesInsetFromBackground;
}

@property (nonatomic, retain) UIView *accessoryView;
@property (nonatomic) long long cornerRoundingMode;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool drawsLightGlyph;
@property (nonatomic, retain) UIColor *glyphTintColor;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool highlightsBackground;
@property (nonatomic, retain) UIImage *image;
@property (nonatomic) double insetFromBackground;
@property (nonatomic) double minimumSideMargin;
@property (nonatomic, readonly) UIPointerInteraction *pointerInteraction;
@property (nonatomic) UIView *pointerPreviewContainer;
@property (nonatomic, retain) UIImageSymbolConfiguration *preferredSymbolConfiguration;
@property (nonatomic) double resizableBackgroundCornerRadius;
@property (nonatomic, retain) UIImage *secondaryImage;
@property (nonatomic, retain) UIColor *secondaryImageColor;
@property (nonatomic) bool showsBadge;
@property (readonly) Class superclass;
@property (nonatomic, retain) UIImage *tertiaryImage;
@property (nonatomic, retain) UIColor *tertiaryImageColor;
@property (nonatomic, retain) UIView *tiplessPopoverSourceView;
@property (nonatomic) bool usesInsetFromBackground;

+ (id)extensionsImage;
+ (id)formatMenuImage;
+ (struct CGSize { double x1; double x2; })glyphSize;
+ (id)readerImage;
+ (id)siriReaderPlayingImage;
+ (id)translationImage;

- (void).cxx_destruct;
- (id)accessoryView;
- (long long)cornerRoundingMode;
- (bool)drawsLightGlyph;
- (id)glyphTintColor;
- (bool)highlightsBackground;
- (id)image;
- (id)initWithImage:(id)arg1 forInputMode:(unsigned long long)arg2;
- (double)insetFromBackground;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (void)layoutSubviews;
- (double)minimumSideMargin;
- (id)pointerInteraction;
- (id)pointerInteraction:(id)arg1 regionForRequest:(id)arg2 defaultRegion:(id)arg3;
- (id)pointerInteraction:(id)arg1 styleForRegion:(id)arg2;
- (void)pointerInteraction:(id)arg1 willEnterRegion:(id)arg2 animator:(id)arg3;
- (void)pointerInteraction:(id)arg1 willExitRegion:(id)arg2 animator:(id)arg3;
- (id)pointerPreviewContainer;
- (id)preferredSymbolConfiguration;
- (double)resizableBackgroundCornerRadius;
- (id)secondaryImage;
- (id)secondaryImageColor;
- (void)setAccessoryView:(id)arg1;
- (void)setCornerRoundingMode:(long long)arg1;
- (void)setDrawsLightGlyph:(bool)arg1;
- (void)setGlyphTintColor:(id)arg1;
- (void)setHighlighted:(bool)arg1;
- (void)setHighlightsBackground:(bool)arg1;
- (void)setImage:(id)arg1;
- (void)setInsetFromBackground:(double)arg1;
- (void)setMinimumSideMargin:(double)arg1;
- (void)setPointerPreviewContainer:(id)arg1;
- (void)setPreferredSymbolConfiguration:(id)arg1;
- (void)setResizableBackgroundCornerRadius:(double)arg1;
- (void)setSecondaryImage:(id)arg1;
- (void)setSecondaryImageColor:(id)arg1;
- (void)setSelected:(bool)arg1;
- (void)setShowsBadge:(bool)arg1;
- (void)setTertiaryImage:(id)arg1;
- (void)setTertiaryImageColor:(id)arg1;
- (void)setTiplessPopoverSourceView:(id)arg1;
- (void)setUsesInsetFromBackground:(bool)arg1;
- (bool)showsBadge;
- (id)tertiaryImage;
- (id)tertiaryImageColor;
- (void)tintColorDidChange;
- (id)tiplessPopoverSourceView;
- (bool)usesInsetFromBackground;

@end
