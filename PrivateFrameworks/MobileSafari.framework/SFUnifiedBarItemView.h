
@interface SFUnifiedBarItemView : UIButton {
    double  _barBackgroundAlpha;
    SFUnifiedBarMetrics * _barMetrics;
    SFUnifiedBarTheme * _barTheme;
    UIView * _contentView;
    NSString * _cutoutBorderCopyGroupName;
    _UIVisualEffectBackdropView * _cutoutBorderCopyView;
    UIView * _cutoutBorderEraserView;
    SFUnifiedBarItemPlatterView * _cutoutBorderPlatterView;
    bool  _hovering;
    SFUnifiedBarItem * _item;
    long long  _lastAppliedPlatterStyle;
    bool  _needsEraserBasedCutoutBorder;
    bool  _occluded;
    UIVisualEffectView * _platterFillView;
    long long  _platterStyle;
    SFUnifiedBarItemPlatterView * _platterView;
    NSArray * _platterViewConstraints;
    NSString * _reuseIdentifier;
    double  _squishTransformFactor;
    double  _squishedInset;
    double  _themeColorVisibility;
    bool  _visible;
}

@property (nonatomic) double barBackgroundAlpha;
@property (nonatomic, retain) SFUnifiedBarMetrics *barMetrics;
@property (nonatomic, retain) SFUnifiedBarTheme *barTheme;
@property (nonatomic, readonly) UIView *contentView;
@property (nonatomic, copy) NSString *cutoutBorderCopyGroupName;
@property (getter=isHovering, nonatomic) bool hovering;
@property SFUnifiedBarItem *item;
@property (nonatomic) bool needsEraserBasedCutoutBorder;
@property (getter=isOccluded, nonatomic) bool occluded;
@property (nonatomic) long long platterStyle;
@property (nonatomic, readonly) double preferredWidth;
@property (nonatomic, readonly) UIDragPreviewParameters *previewParameters;
@property (nonatomic, copy) NSString *reuseIdentifier;
@property (nonatomic) double squishTransformFactor;
@property (nonatomic) double squishedInset;
@property (nonatomic) double themeColorVisibility;
@property (getter=isVisible, nonatomic) bool visible;

- (void).cxx_destruct;
- (void)_applyPlatterColor:(id)arg1;
- (void)_applyThemeToPlatterView:(id)arg1;
- (void)_buttonShapesEnabledDidChange;
- (void)_disableVibrancyIfNeededForTheme:(id)arg1;
- (void)_layOutCutoutBorder;
- (void)_setShowsCutoutBorderEffects:(bool)arg1;
- (void)_setShowsCutoutBorderEraser:(bool)arg1;
- (void)_setShowsPlatter:(bool)arg1;
- (bool)_shouldEnableCopyCutoutBorder;
- (bool)_shouldEnablePlatterCutoutBorder;
- (bool)_shouldHidePlatterView;
- (void)_updateBackgroundAlpha;
- (void)_updateContentAlpha;
- (void)_updateOverrideUserInterfaceStyle;
- (void)_updatePlatterEffect;
- (void)_updateShowsCutoutBorder;
- (void)applyTheme;
- (double)barBackgroundAlpha;
- (id)barMetrics;
- (id)barTheme;
- (id)contentView;
- (id)cutoutBorderCopyGroupName;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isHovering;
- (bool)isOccluded;
- (bool)isVisible;
- (id)item;
- (void)layoutSubviews;
- (bool)needsEraserBasedCutoutBorder;
- (long long)platterStyle;
- (double)preferredWidth;
- (void)prepareForReuse;
- (id)previewParameters;
- (id)reuseIdentifier;
- (void)setBarBackgroundAlpha:(double)arg1;
- (void)setBarMetrics:(id)arg1;
- (void)setBarTheme:(id)arg1;
- (void)setCutoutBorderCopyGroupName:(id)arg1;
- (void)setHighlighted:(bool)arg1;
- (void)setHovering:(bool)arg1;
- (void)setItem:(id)arg1;
- (void)setNeedsEraserBasedCutoutBorder:(bool)arg1;
- (void)setOccluded:(bool)arg1;
- (void)setPlatterStyle:(long long)arg1;
- (void)setReuseIdentifier:(id)arg1;
- (void)setSquishTransformFactor:(double)arg1;
- (void)setSquishedInset:(double)arg1;
- (void)setThemeColorVisibility:(double)arg1;
- (void)setVisible:(bool)arg1;
- (double)squishTransformFactor;
- (double)squishedInset;
- (double)themeColorVisibility;
- (void)updateConstraints;
- (void)updateCornerRadius;

@end
