
@interface ASVUnifiedGestureRecognizer : NSObject <ASVSingleFingerGestureDelegate, ASVTwoFingerGestureDelegate> {
    bool  _allowObjectScaling;
    float  _animateScaleEnd;
    float  _animateScaleStart;
    ASVGesture * _currentGesture;
    float  _currentObjectScale;
    NSMutableSet * _currentTouches;
    <ASVGestureDataSource> * _dataSource;
    <ASVUnifiedGestureRecognizerDelegate> * _delegate;
    unsigned long long  _enabledGestureTypes;
    ASVGestureFeedbackGenerator * _feedbackGenerator;
    bool  _isScaleAnimating;
    double  _lastFireFeedbackTime;
    void _lastTapLocation;
    double  _lastTapTime;
    bool  _lastTapWasOnAsset;
    NSTimer * _singleTapTimer;
    double  _startScaleAnimationTime;
}

@property (nonatomic) bool allowObjectScaling;
@property (nonatomic) float animateScaleEnd;
@property (nonatomic) float animateScaleStart;
@property (nonatomic, readonly) float animatedScaleValue;
@property (nonatomic, retain) ASVGesture *currentGesture;
@property (nonatomic) float currentObjectScale;
@property (nonatomic, retain) NSMutableSet *currentTouches;
@property (nonatomic) <ASVGestureDataSource> *dataSource;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <ASVUnifiedGestureRecognizerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) unsigned long long enabledGestureTypes;
@property (nonatomic, retain) ASVGestureFeedbackGenerator *feedbackGenerator;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isActive;
@property (nonatomic, readonly) bool isDecelerating;
@property (nonatomic, readonly) bool isEnabled;
@property (nonatomic) bool isScaleAnimating;
@property (nonatomic) double lastFireFeedbackTime;
@property (nonatomic) void lastTapLocation;
@property (nonatomic) double lastTapTime;
@property (nonatomic) bool lastTapWasOnAsset;
@property (nonatomic, readonly) float maximumObjectScale;
@property (nonatomic, readonly) float minimumObjectScale;
@property (nonatomic, retain) NSTimer *singleTapTimer;
@property (nonatomic) double startScaleAnimationTime;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (bool)allowObjectScaling;
- (float)animateScaleEnd;
- (float)animateScaleStart;
- (float)animatedScaleValue;
- (void)cancelDeceleration;
- (float)clampedScaleForScale:(float)arg1;
- (id)currentGesture;
- (float)currentObjectScale;
- (id)currentTouches;
- (id)dataSource;
- (id)delegate;
- (unsigned long long)enabledGestureTypes;
- (id)feedbackGenerator;
- (bool)generatesTaps;
- (bool)generatesTransforms;
- (void)gesture:(id)arg1 rotatedAssetByDeltaYaw:(float)arg2;
- (void)gesture:(id)arg1 scaledAssetToScale:(float)arg2;
- (void)gesture:(void *)arg1 singleTappedAtScreenPoint:(void *)arg2 onAsset:(void *)arg3; // needs 3 arg types, found 2: id, bool
- (void)gestureBeganRotation:(id)arg1;
- (void)gestureBeganScaling:(id)arg1;
- (void)gestureDidSnapAwayFromScale:(id)arg1;
- (void)gestureDidSnapToScale:(id)arg1;
- (void)gestureEndedRotation:(id)arg1;
- (void)gestureEndedScaling:(id)arg1;
- (void)gestureStartScaleAnimationFrom:(float)arg1 to:(float)arg2;
- (void)gestureStopScaleAnimation;
- (bool)gestureTypeIsEnabled:(unsigned long long)arg1;
- (id)initWithDelegate:(id)arg1 feedbackGenerator:(id)arg2;
- (bool)isActive;
- (bool)isDecelerating;
- (bool)isEnabled;
- (bool)isScaleAnimating;
- (double)lastFireFeedbackTime;
- (void)lastTapLocation;
- (double)lastTapTime;
- (bool)lastTapWasOnAsset;
- (float)maximumObjectScale;
- (float)minimumObjectScale;
- (void)processTouches:(id)arg1 phase:(long long)arg2;
- (void)setAllowObjectScaling:(bool)arg1;
- (void)setAnimateScaleEnd:(float)arg1;
- (void)setAnimateScaleStart:(float)arg1;
- (void)setCurrentGesture:(id)arg1;
- (void)setCurrentObjectScale:(float)arg1;
- (void)setCurrentTouches:(id)arg1;
- (void)setDataSource:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEnabledGestureTypes:(unsigned long long)arg1;
- (void)setFeedbackGenerator:(id)arg1;
- (void)setIsScaleAnimating:(bool)arg1;
- (void)setLastFireFeedbackTime:(double)arg1;
- (void)setLastTapLocation;
- (void)setLastTapTime:(double)arg1;
- (void)setLastTapWasOnAsset:(bool)arg1;
- (void)setSingleTapTimer:(id)arg1;
- (void)setStartScaleAnimationTime:(double)arg1;
- (id)singleFingerGestureForTouch:(id)arg1 dataSource:(id)arg2 enabledGestureTypes:(unsigned long long)arg3;
- (bool)singleFingerGesturesEnabled;
- (id)singleTapTimer;
- (void)startGestureFromTouches:(id)arg1;
- (double)startScaleAnimationTime;
- (id)twoFingerGestureForFirstTouch:(id)arg1 secondTouch:(id)arg2 dataSource:(id)arg3;
- (bool)twoFingerGesturesEnabled;
- (void)update;
- (void)updateGestureFromTouches:(id)arg1 phase:(long long)arg2;

@end
