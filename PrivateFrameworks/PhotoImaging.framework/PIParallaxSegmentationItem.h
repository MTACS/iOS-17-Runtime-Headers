
@interface PIParallaxSegmentationItem : NSObject <NSCopying, PISegmentationItem> {
    NSArray * __availableStyles;
    NSArray * __defaultStyles;
    unsigned long long  _classification;
    PIParallaxColorAnalysis * _colorAnalysis;
    NUComposition * _composition;
    PISegmentationContextInfo * _contextInfo;
    PFPosterLayout * _defaultLayout;
    NSURL * _fileURL;
    PFParallaxAssetResource * _livePhotoResource;
    unsigned long long  _loadingState;
    NSDictionary * _localLightData;
    PFPosterLayout * _originalLayout;
    <PFParallaxAssetRegions> * _regions;
    PFParallaxAssetResource * _resource;
    NSDictionary * _scores;
    <NUImageBuffer> * _segmentationBackground;
    <NUImageBuffer> * _segmentationConfidenceMap;
    NSURL * _segmentationDataURL;
    <NUImageBuffer> * _segmentationMatte;
    PFPosterLayout * _settlingEffectLayout;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _settlingEffectNormalizedBounds;
    unsigned long long  _settlingEffectStatus;
    NSData * _settlingEffectVideoData;
}

@property (nonatomic, copy) NSArray *_availableStyles;
@property (nonatomic, copy) NSArray *_defaultStyles;
@property (nonatomic, readonly, copy) NSArray *availableStyles;
@property (nonatomic) unsigned long long classification;
@property (nonatomic, retain) PIParallaxColorAnalysis *colorAnalysis;
@property (nonatomic, retain) NUComposition *composition;
@property (nonatomic, retain) PISegmentationContextInfo *contextInfo;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, retain) PFPosterLayout *defaultLayout;
@property (nonatomic, readonly, copy) NSArray *defaultStyles;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSURL *fileURL;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isComplete;
@property (nonatomic, readonly) bool isSettlingEffectAvailable;
@property (nonatomic, readonly) PFWallpaperCompoundDeviceConfiguration *layoutConfiguration;
@property (nonatomic, retain) PFParallaxAssetResource *livePhotoResource;
@property (nonatomic) unsigned long long loadingState;
@property (nonatomic, copy) NSDictionary *localLightData;
@property (nonatomic, retain) PFPosterLayout *originalLayout;
@property (nonatomic, readonly) PFParallaxLayerStyle *originalStyle;
@property (nonatomic, retain) <PFParallaxAssetRegions> *regions;
@property (nonatomic, retain) PFParallaxAssetResource *resource;
@property (nonatomic, copy) NSDictionary *scores;
@property (nonatomic, retain) <NUImageBuffer> *segmentationBackground;
@property (nonatomic, retain) <NUImageBuffer> *segmentationConfidenceMap;
@property (nonatomic, retain) NSURL *segmentationDataURL;
@property (nonatomic, retain) <NUImageBuffer> *segmentationMatte;
@property (nonatomic, readonly) bool settlingEffectFailedAnyGating;
@property (nonatomic, readonly) NSArray *settlingEffectGatingDiagnostics;
@property (nonatomic, readonly) bool settlingEffectHasInterestingMotion;
@property (nonatomic, retain) PFPosterLayout *settlingEffectLayout;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } settlingEffectNormalizedBounds;
@property (nonatomic) unsigned long long settlingEffectStatus;
@property (nonatomic, copy) NSData *settlingEffectVideoData;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsBackgroundlessStyles;
@property (nonatomic, readonly) bool supportsManualClockIntersectionTolerance;
@property (nonatomic, readonly) bool supportsSegmentedStyles;
@property (nonatomic, readonly) unsigned long long version;

+ (id /* block */)_backgroundImageLoadingBlock;
+ (id /* block */)_matteImageLoadingBlock;
+ (id /* block */)_settlingEffectDataLoadingBlock;
+ (id)dataForImageBuffer:(id)arg1 error:(out id*)arg2;
+ (id)imageBufferFromData:(id)arg1 error:(out id*)arg2;
+ (void)loadSettlingEffectVideoDataFromURL:(id)arg1 completion:(id /* block */)arg2;
+ (id)readImageBufferFromURL:(id)arg1 error:(out id*)arg2;
+ (bool)writeImageBuffer:(id)arg1 toURL:(id)arg2 error:(out id*)arg3;

- (void).cxx_destruct;
- (id)_availableStyles;
- (id)_defaultStyles;
- (void)_invalidateCachedData;
- (bool)_loadSegmentationDataFromURL:(id)arg1 error:(out id*)arg2 matteImageLoadingBlock:(id /* block */)arg3 backgroundImageLoadingBlock:(id /* block */)arg4 settingEffectDataLoadingBlock:(id /* block */)arg5;
- (void)_populateAvailableStyles;
- (void)_populateDefaultStyles;
- (id)adjustedStyleForHeadroom:(id)arg1;
- (id)availableStyleOfKind:(id)arg1;
- (id)availableStyles;
- (unsigned long long)classification;
- (id)colorAnalysis;
- (id)composition;
- (id)contentsDictionary;
- (id)contextInfo;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)debugDescription;
- (id)defaultLayout;
- (id)defaultStyleOfKind:(id)arg1;
- (id)defaultStyles;
- (id)fileURL;
- (id)init;
- (bool)isComplete;
- (bool)isSettlingEffectAvailable;
- (id)layoutConfiguration;
- (id)livePhotoResource;
- (bool)loadContentsFromDictionary:(id)arg1 hasMatte:(bool*)arg2 hasBackground:(bool*)arg3 error:(out id*)arg4;
- (bool)loadFromURL:(id)arg1 error:(out id*)arg2;
- (bool)loadSegmentationDataFromURL:(id)arg1 error:(out id*)arg2;
- (unsigned long long)loadingState;
- (id)localLightData;
- (id)originalLayout;
- (id)originalStyle;
- (id)regions;
- (void)resetSettlingEffectGatingFailure;
- (id)resource;
- (bool)saveAssetResourceToURL:(id)arg1 error:(out id*)arg2;
- (bool)saveSegmentationDataToURL:(id)arg1 error:(out id*)arg2;
- (bool)saveToURL:(id)arg1 error:(out id*)arg2;
- (id)scores;
- (id)segmentationBackground;
- (id)segmentationConfidenceMap;
- (id)segmentationDataURL;
- (id)segmentationMatte;
- (void)setClassification:(unsigned long long)arg1;
- (void)setColorAnalysis:(id)arg1;
- (void)setComposition:(id)arg1;
- (void)setContextInfo:(id)arg1;
- (void)setDefaultLayout:(id)arg1;
- (void)setFileURL:(id)arg1;
- (void)setLivePhotoResource:(id)arg1;
- (void)setLoadingState:(unsigned long long)arg1;
- (void)setLocalLightData:(id)arg1;
- (void)setOriginalLayout:(id)arg1;
- (void)setRegions:(id)arg1;
- (void)setResource:(id)arg1;
- (void)setScores:(id)arg1;
- (void)setSegmentationBackground:(id)arg1;
- (void)setSegmentationConfidenceMap:(id)arg1;
- (void)setSegmentationDataURL:(id)arg1;
- (void)setSegmentationMatte:(id)arg1;
- (void)setSettlingEffectLayout:(id)arg1;
- (void)setSettlingEffectNormalizedBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setSettlingEffectStatus:(unsigned long long)arg1;
- (void)setSettlingEffectVideoData:(id)arg1;
- (void)set_availableStyles:(id)arg1;
- (void)set_defaultStyles:(id)arg1;
- (bool)settlingEffectFailedAnyGating;
- (id)settlingEffectGatingDiagnostics;
- (bool)settlingEffectHasInterestingMotion;
- (id)settlingEffectLayout;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })settlingEffectNormalizedBounds;
- (unsigned long long)settlingEffectStatus;
- (id)settlingEffectVideoData;
- (id)suggestedStyleForCategory:(id)arg1;
- (bool)supportsBackgroundlessStyles;
- (bool)supportsManualClockIntersectionTolerance;
- (bool)supportsSegmentedStyles;
- (void)updateScores:(id)arg1;
- (unsigned long long)version;

@end
