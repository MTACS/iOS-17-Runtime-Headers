
@interface WGWidgetListViewController : UIViewController <UIScrollViewDelegate, WGWidgetDebugging, WGWidgetDiscoveryObserving, WGWidgetExtensionVisibilityProviding, WGWidgetHostingViewControllerDelegate, WGWidgetListItemViewControllerDelegate> {
    NSMutableDictionary * _cancelTouchesAssertionsByWidgetID;
    MTMaterialView * _captureOnlyMaterialView;
    <WGWidgetListViewControllerDelegate> * _delegate;
    WGWidgetDiscoveryController * _discoveryController;
    UIControl * _editButton;
    bool  _editingIcons;
    struct CGSize { 
        double width; 
        double height; 
    }  _maxVisibleContentSize;
    NSArray * _previouslyVisibleWidgetIDs;
    NSMutableDictionary * _resizeContexts;
    UIScrollView * _scrollView;
    bool  _shouldBlurContent;
    bool  _shouldIncludeScrollView;
    UIStackView * _stackView;
    NSLayoutConstraint * _stackViewBottomConstraint;
    NSMutableDictionary * _userInterfaceStylesToCaptureOnlyMaterialViews;
    NSMutableDictionary * _widgetIDsToItemVCs;
}

@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <WGWidgetListViewControllerDelegatePrivate> *delegate;
@property (nonatomic) <WGWidgetListViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) UIControl *editButton;
@property (getter=isEditingIcons, nonatomic) bool editingIcons;
@property (getter=_group, nonatomic, readonly) NSString *group;
@property (readonly) unsigned long long hash;
@property (getter=_previouslyVisibleWidgetIDs, setter=_setPreviouslyVisibleWidgetIDs:, nonatomic, retain) NSArray *previouslyVisibleWidgetIDs;
@property (nonatomic, retain) NSMutableDictionary *resizeContexts;
@property (nonatomic) bool shouldBlurContent;
@property (nonatomic) bool shouldIncludeScrollView;
@property (nonatomic, readonly) NSLayoutConstraint *stackViewBottomConstraint;
@property (readonly) Class superclass;
@property (nonatomic, readonly) unsigned long long widgetCount;
@property (nonatomic, readonly) UIScrollView *widgetListView;

- (void).cxx_destruct;
- (void)_adjustContentOffsetToInsideContent:(bool)arg1;
- (id)_animatablePropertiesForStackViewUpdate;
- (id /* block */)_beginInsertion:(bool)arg1 ofListItem:(id)arg2 withOrderedIdentifiers:(id)arg3 removingViewIfPossible:(bool)arg4;
- (void)_cancelTouchesForHitWidgetIfNecessaryAndDisableTouchesOnAllWidgets;
- (void)_cancelTouchesForWidget:(id)arg1;
- (void)_configureAlternateCaptureOnlyMaterialViewWithUserInterfaceStyle:(long long)arg1;
- (void)_configureCaptureOnlyMaterialView;
- (void)_configureScrollView;
- (void)_configureStackView;
- (void)_createPropertiesForStackViewUpdate;
- (void)_didUpdateStackViewArrangedSubviews;
- (void)_disableTouchesOnAllWidgets;
- (void)_enableTouchesOnAllWidgets;
- (id)_group;
- (id)_identifierForCell:(id)arg1;
- (id /* block */)_insert:(bool)arg1 listItem:(id)arg2 withOrderedIdentifiers:(id)arg3 animated:(bool)arg4;
- (unsigned long long)_insertionIndexofListItem:(id)arg1 intoWidgetViews:(id)arg2 withOrderedIdentifiers:(id)arg3;
- (void)_invalidateAllAlternateCaptureOnlyMaterialViews;
- (void)_invalidateAllCancelTouchesAssertions;
- (void)_invalidateAlternateCaptureOnlyMaterialViewWithUserInterfaceStyle:(long long)arg1;
- (void)_invokeBlock:(id /* block */)arg1 withPlatterViewsPassingTest:(id /* block */)arg2;
- (void)_invokeBlockWithAllPlatterViews:(id /* block */)arg1;
- (void)_invokeBlockWithPlatterViewsVisibleInBounds:(id /* block */)arg1;
- (void)_invokeBlockWithPlatterViewsVisibleInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 block:(id /* block */)arg2;
- (id)_listItemViewControllerForWidgetWithIdentifier:(id)arg1 creatingIfNecessary:(bool)arg2;
- (struct CGSize { double x1; double x2; })_maxVisibleContentSize;
- (id)_newCaptureOnlyMaterialView;
- (id)_platterViewAtLocation:(struct CGPoint { double x1; double x2; })arg1;
- (id)_platterViewForWidgetWithIdentifier:(id)arg1 creatingIfNecessary:(bool)arg2;
- (void)_presentEditViewController;
- (id)_previouslyVisibleWidgetIDs;
- (void)_pruneAlternateCaptureOnlyMaterialViews;
- (void)_repopulateStackView;
- (void)_repopulateStackViewWithWidgetIdentifiers:(id)arg1;
- (void)_resizeCell:(id)arg1;
- (void)_scrollViewDidStop;
- (id)_scrollViewIfLoaded;
- (id)_scrollViewLoadingIfNecessary:(bool)arg1;
- (void)_setPreviouslyVisibleWidgetIDs:(id)arg1;
- (void)_stackViewArrangedSubviewsTransformPresentationValueChanged;
- (void)_updateBackgroundViewForPlatter:(id)arg1;
- (void)_updateWidgetViewStateWithPreviouslyVisibleWidgetIdentifiers:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_visibleContentFrameForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withContentOccludingInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg2;
- (id)_widgetIdentifiersForPlatterViewsVisibleInBounds;
- (id)_wrapperViewForWidgetPlatterView:(id)arg1;
- (void)brokenViewDidAppearForWidget:(id)arg1;
- (void)dealloc;
- (id)delegate;
- (id)editButton;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithWidgetDiscoveryController:(id)arg1;
- (bool)isEditingIcons;
- (bool)isWidgetExtensionVisible:(id)arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })layoutMarginForWidget:(id)arg1;
- (void)makeVisibleWidgetWithIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (bool)managingContainerIsVisibleForWidget:(id)arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })marginInsetsForWidget:(id)arg1;
- (struct CGSize { double x1; double x2; })maxSizeForWidget:(id)arg1 forDisplayMode:(long long)arg2;
- (void)preferredContentSizeDidChangeForChildContentContainer:(id)arg1;
- (void)registerWidgetForRefreshEvents:(id)arg1;
- (void)remoteViewControllerDidDisconnectForWidget:(id)arg1;
- (void)remoteViewControllerViewDidAppearForWidget:(id)arg1;
- (void)remoteViewControllerViewDidHideForWidget:(id)arg1;
- (id)resizeContexts;
- (void)resizeWidgetWrapperView:(id)arg1 toSize:(struct CGSize { double x1; double x2; })arg2 withTransitionContext:(id)arg3 completion:(id /* block */)arg4;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(bool)arg2;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewDidScrollToTop:(id)arg1;
- (bool)scrollViewShouldScrollToTop:(id)arg1;
- (void)scrollViewWillBeginDecelerating:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint { double x1; double x2; })arg2 targetContentOffset:(inout struct CGPoint { double x1; double x2; }*)arg3;
- (void)setDelegate:(id)arg1;
- (void)setEditButton:(id)arg1;
- (void)setEditingIcons:(bool)arg1;
- (void)setResizeContexts:(id)arg1;
- (void)setShouldBlurContent:(bool)arg1;
- (void)setShouldIncludeScrollView:(bool)arg1;
- (bool)shouldAutomaticallyForwardAppearanceMethods;
- (bool)shouldBlurContent;
- (bool)shouldIncludeScrollView;
- (struct CGSize { double x1; double x2; })sizeForChildContentContainer:(id)arg1 withParentContainerSize:(struct CGSize { double x1; double x2; })arg2;
- (id)stackViewBottomConstraint;
- (void)traitCollectionDidChange:(id)arg1;
- (void)unregisterWidgetForRefreshEvents:(id)arg1;
- (void)updatePreviouslyVisibleWidgetIDs;
- (void)updateWidgetViewState;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })visibleFrameForWidget:(id)arg1;
- (id)visibleWidgetIdentifiers;
- (void)widget:(id)arg1 didChangeLargestSupportedDisplayMode:(long long)arg2;
- (unsigned long long)widgetCount;
- (void)widgetDiscoveryController:(id)arg1 orderDidChangeForWidgetIdentifiers:(id)arg2;
- (void)widgetDiscoveryControllerSignificantWidgetsChange:(id)arg1;
- (id)widgetListItemViewController:(id)arg1 widgetHostWithIdentifier:(id)arg2;
- (id)widgetListView;

@end
