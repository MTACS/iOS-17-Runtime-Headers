
@interface AVTSimpleAvatarPicker : NSObject <AVTAvatarActionsViewControllerDelegate, AVTAvatarEditorViewControllerDelegate, AVTAvatarPicker, AVTNotifyingContainerViewDelegate, AVTObjectViewController, UICollectionViewDataSource, UICollectionViewDelegate, UICollectionViewDelegateFlowLayout> {
    bool  _allowEditing;
    UICollectionView * _collectionView;
    AVTEdgeDisappearingCollectionViewLayout * _collectionViewLayout;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _contentInset;
    AVTAvatarPickerDataSource * _dataSource;
    AVTSimpleAvatarPickerHeaderView * _headerView;
    <AVTStickerViewControllerImageDelegate> * _imageDelegate;
    _AVTAvatarRecordImageProvider * _imageProvider;
    AVTImageStore * _imageStore;
    NSMutableDictionary * _itemsToTasksMap;
    double  _minimumInteritemSpacing;
    AVTRenderingScope * _renderingScope;
    bool  _shouldHideUserInfoView;
    <AVTStickerTaskScheduler> * _taskScheduler;
    UIView * _view;
    AVTViewSessionProvider * _viewSessionProvider;
    <AVTAvatarPickerDelegate> * avatarPickerDelegate;
    <AVTPresenterDelegate> * presenterDelegate;
}

@property (nonatomic) bool allowEditing;
@property (nonatomic) <AVTAvatarPickerDelegate> *avatarPickerDelegate;
@property (nonatomic, retain) UICollectionView *collectionView;
@property (nonatomic, retain) AVTEdgeDisappearingCollectionViewLayout *collectionViewLayout;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } contentInset;
@property (nonatomic, retain) AVTAvatarPickerDataSource *dataSource;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) AVTSimpleAvatarPickerHeaderView *headerView;
@property (nonatomic) <AVTStickerViewControllerImageDelegate> *imageDelegate;
@property (nonatomic, readonly) _AVTAvatarRecordImageProvider *imageProvider;
@property (nonatomic, retain) AVTImageStore *imageStore;
@property (nonatomic, retain) NSMutableDictionary *itemsToTasksMap;
@property (nonatomic) double minimumInteritemSpacing;
@property (nonatomic) <AVTPresenterDelegate> *presenterDelegate;
@property (nonatomic, readonly) AVTRenderingScope *renderingScope;
@property (nonatomic) bool shouldHideUserInfoView;
@property (readonly) Class superclass;
@property (nonatomic, readonly) <AVTStickerTaskScheduler> *taskScheduler;
@property (nonatomic, retain) UIView *view;
@property (nonatomic, readonly) AVTViewSessionProvider *viewSessionProvider;

- (void).cxx_destruct;
- (id)actionsModelForRecord:(id)arg1;
- (bool)allowEditing;
- (id)avatarActionsViewController:(id)arg1 recordUpdateForDeletingRecord:(id)arg2;
- (void)avatarActionsViewController:(id)arg1 willPresentAvatarRecord:(id)arg2;
- (void)avatarActionsViewControllerDidFinish:(id)arg1;
- (void)avatarEditorViewController:(id)arg1 didFinishWithAvatarRecord:(id)arg2;
- (void)avatarEditorViewControllerDidCancel:(id)arg1;
- (id)avatarPickerDelegate;
- (bool)canCreateAvatar;
- (void)cancelCurrentRenderingTaskForRecordItem:(id)arg1;
- (id)collectionView;
- (bool)collectionView:(id)arg1 canFocusItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 didHighlightItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didUnhighlightItemAtIndexPath:(id)arg2;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })collectionView:(id)arg1 layout:(id)arg2 insetForSectionAtIndex:(long long)arg3;
- (struct CGSize { double x1; double x2; })collectionView:(id)arg1 layout:(id)arg2 referenceSizeForHeaderInSection:(long long)arg3;
- (struct CGSize { double x1; double x2; })collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (bool)collectionView:(id)arg1 shouldSelectItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (id)collectionViewLayout;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })contentInset;
- (id)currentCellForRecordItem:(id)arg1 atIndexPath:(id)arg2 displaySessionUUID:(id)arg3 previousCell:(id)arg4;
- (id /* block */)currentRenderingTaskForRecordItem:(id)arg1;
- (id)dataSource;
- (void)deselectPreviousSelectedItemExcludingIndexPath:(id)arg1;
- (id)headerView;
- (id)imageDelegate;
- (id)imageProvider;
- (id)imageStore;
- (long long)indexForSelectedAvatar;
- (id)initWithDataSource:(id)arg1 recordImageProvider:(id)arg2 avtViewSessionProvider:(id)arg3 taskScheduler:(id)arg4 allowEditing:(bool)arg5;
- (id)initWithDataSource:(id)arg1 recordImageProvider:(id)arg2 avtViewSessionProvider:(id)arg3 taskScheduler:(id)arg4 allowEditing:(bool)arg5 interItemSpacing:(double)arg6;
- (id)initWithStore:(id)arg1 environment:(id)arg2 allowAddItem:(bool)arg3;
- (id)initWithStore:(id)arg1 environment:(id)arg2 allowAddItem:(bool)arg3 interItemSpacing:(double)arg4;
- (bool)isItemAtIndexPathOffscreen:(id)arg1;
- (struct CGSize { double x1; double x2; })itemSize;
- (id)itemsToTasksMap;
- (void)loadView;
- (double)minimumInteritemSpacing;
- (void)notifyingContainerViewDidChangeSize:(struct CGSize { double x1; double x2; })arg1;
- (void)notifyingContainerViewWillChangeSize:(struct CGSize { double x1; double x2; })arg1;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (void)presentActionsForAvatarForPPT:(id)arg1;
- (void)presentActionsForAvatarRecord:(id)arg1;
- (void)presentActionsForSelectedAvatar;
- (void)presentMemojiEditorForCreation;
- (void)presentedAvatarRecord:(id)arg1;
- (id)presenterDelegate;
- (void)registerRenderingTask:(id /* block */)arg1 forRecordItem:(id)arg2;
- (void)reloadData;
- (void)reloadDataSource;
- (void)renderThumbnailsIfNeeded;
- (id)renderingScope;
- (void)scheduleRenderingTask:(id /* block */)arg1 forRecordItem:(id)arg2;
- (void)selectAvatarRecordWithIdentifier:(id)arg1 animated:(bool)arg2;
- (id)selectedAvatar;
- (void)setAllowEditing:(bool)arg1;
- (void)setAvatarPickerDelegate:(id)arg1;
- (void)setCollectionView:(id)arg1;
- (void)setCollectionViewLayout:(id)arg1;
- (void)setContentInset:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setDataSource:(id)arg1;
- (void)setHeaderView:(id)arg1;
- (void)setImageDelegate:(id)arg1;
- (void)setImageStore:(id)arg1;
- (void)setItemsToTasksMap:(id)arg1;
- (void)setMinimumInteritemSpacing:(double)arg1;
- (void)setPresenterDelegate:(id)arg1;
- (void)setShouldHideUserInfoView:(bool)arg1;
- (void)setView:(id)arg1;
- (bool)shouldHideUserInfoView;
- (bool)shouldShowHeaderButton;
- (id)taskScheduler;
- (void)unregisterCurrentRenderingTaskForRecordItem:(id)arg1;
- (void)updateCell:(id)arg1 withImage:(id)arg2 animated:(bool)arg3;
- (void)updateHeaderButtonForSelectedAvatar:(id)arg1 invalidateLayout:(bool)arg2 animated:(bool)arg3;
- (id)view;
- (id)viewForAddItem;
- (id)viewSessionProvider;
- (void)wrapAndPresentViewController:(id)arg1 animated:(bool)arg2;

@end
