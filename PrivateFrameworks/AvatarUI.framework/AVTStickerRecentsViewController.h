
@interface AVTStickerRecentsViewController : UIViewController <AVTStickerBackendDelegate, AVTStickerRecentsOverlayDelegate, UICollectionViewDataSource, UICollectionViewDelegate> {
    <AVTAvatarStoreInternal> * _avatarStore;
    <NSObject> * _avatarStoreChangeObserver;
    <AVTStickerRecentsItem> * _buttonItem;
    <AVTResourceCache> * _cache;
    UICollectionView * _collectionView;
    UICollectionViewFlowLayout * _collectionViewLayout;
    AVTStickerConfigurationProvider * _configurationProvider;
    <AVTAvatarRecord> * _defaultMemoji;
    <AVTStickerRecentsViewControllerDelegate> * _delegate;
    NSArray * _displayItems;
    CALayer * _edgeMaskLayer;
    NSObject<OS_dispatch_queue> * _encodingQueue;
    AVTUIEnvironment * _environment;
    AVTUIStickerGeneratorPool * _generatorPool;
    bool  _hasFetchedDefaultMemoji;
    AVTClippableImageStore * _imageStore;
    AVTStickerRecentsOverlayView * _overlayView;
    NSObject<OS_dispatch_queue> * _recentsWorkQueue;
    NSObject<OS_dispatch_queue> * _renderingQueue;
    bool  _showPrereleaseSticker;
    AVTStickerGenerator * _stickerGenerator;
    NSArray * _stickerItems;
    AVTStickerRecentsLayout * _stickerRecentsLayout;
    AVTStickerRecentsMigrator * _stickerRecentsMigrator;
    AVTSerialTaskScheduler * _taskScheduler;
}

@property (nonatomic, readonly) <AVTAvatarStoreInternal> *avatarStore;
@property (nonatomic, retain) <NSObject> *avatarStoreChangeObserver;
@property (nonatomic, retain) <AVTStickerRecentsItem> *buttonItem;
@property (nonatomic, readonly) <AVTResourceCache> *cache;
@property (nonatomic, retain) UICollectionView *collectionView;
@property (nonatomic, retain) UICollectionViewFlowLayout *collectionViewLayout;
@property (nonatomic, retain) AVTStickerConfigurationProvider *configurationProvider;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, retain) <AVTAvatarRecord> *defaultMemoji;
@property (nonatomic) <AVTStickerRecentsViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSArray *displayItems;
@property (nonatomic, retain) CALayer *edgeMaskLayer;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *encodingQueue;
@property (nonatomic, readonly) AVTUIEnvironment *environment;
@property (nonatomic, retain) AVTUIStickerGeneratorPool *generatorPool;
@property (nonatomic) bool hasFetchedDefaultMemoji;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) AVTClippableImageStore *imageStore;
@property (nonatomic, retain) AVTStickerRecentsOverlayView *overlayView;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *recentsWorkQueue;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *renderingQueue;
@property (nonatomic) bool showPrereleaseSticker;
@property (nonatomic, readonly) AVTStickerGenerator *stickerGenerator;
@property (nonatomic, retain) NSArray *stickerItems;
@property (nonatomic, readonly) AVTStickerRecentsLayout *stickerRecentsLayout;
@property (nonatomic, retain) AVTStickerRecentsMigrator *stickerRecentsMigrator;
@property (readonly) Class superclass;
@property (nonatomic, retain) AVTSerialTaskScheduler *taskScheduler;

+ (id)imageStoreWithEnvironment:(id)arg1;
+ (id)layoutForSize:(struct CGSize { double x1; double x2; })arg1;
+ (id)stickerCacheWithEnvironment:(id)arg1;
+ (id)stickerForRecentItem:(id)arg1;
+ (id)stickerRecentsController;
+ (id)stickerRecentsControllerForStore:(id)arg1;

- (void).cxx_destruct;
- (id)avatarStore;
- (id)avatarStoreChangeObserver;
- (void)beginObservingAvatarStoreChanges;
- (void)buildRecentsItemsWithCompletionBlock:(id /* block */)arg1;
- (id)buttonItem;
- (id)cache;
- (id)collectionView;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (id)collectionViewLayout;
- (id)configurationProvider;
- (void)dealloc;
- (id)defaultMemoji;
- (id)delegate;
- (void)determineOverlayTypeWithCompletionBlock:(id /* block */)arg1;
- (void)dismissOverlayViewAnimated:(bool)arg1;
- (id)displayItems;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })edgeInsetsForContainerSize:(struct CGSize { double x1; double x2; })arg1;
- (id)edgeMaskLayer;
- (id)encodingQueue;
- (void)endObservingAvatarStoreChanges;
- (id)environment;
- (void)fetchDefaultMemojiIfNeeded;
- (id)generatorPool;
- (bool)hasFetchedDefaultMemoji;
- (id)imageStore;
- (id)initWithAvatarStore:(id)arg1 environment:(id)arg2;
- (void)overlayDidTapCloseButton:(id)arg1;
- (void)overlayDidTapContentView:(id)arg1;
- (void)overlayDidTapContinueButton:(id)arg1;
- (id)overlayView;
- (id)placeholderItems;
- (void)recentStickersDidChange:(id)arg1;
- (id)recentStickersWithCount:(long long)arg1;
- (id)recentsWorkQueue;
- (id)renderingQueue;
- (void)setAvatarStoreChangeObserver:(id)arg1;
- (void)setButtonItem:(id)arg1;
- (void)setCollectionView:(id)arg1;
- (void)setCollectionViewLayout:(id)arg1;
- (void)setConfigurationProvider:(id)arg1;
- (void)setDefaultMemoji:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDisplayItems:(id)arg1;
- (void)setEdgeMaskLayer:(id)arg1;
- (void)setEncodingQueue:(id)arg1;
- (void)setGeneratorPool:(id)arg1;
- (void)setHasFetchedDefaultMemoji:(bool)arg1;
- (void)setImageStore:(id)arg1;
- (void)setOverlayView:(id)arg1;
- (void)setRecentsWorkQueue:(id)arg1;
- (void)setRenderingQueue:(id)arg1;
- (void)setShowPrereleaseSticker:(bool)arg1;
- (void)setStickerItems:(id)arg1;
- (void)setStickerRecentsMigrator:(id)arg1;
- (void)setTaskScheduler:(id)arg1;
- (void)setupRenderingDependentPieces;
- (bool)showPrereleaseSticker;
- (id)stickerGenerator;
- (id)stickerItems;
- (id)stickerRecentsLayout;
- (id)stickerRecentsMigrator;
- (id)taskScheduler;
- (void)traitCollectionDidChange:(id)arg1;
- (void)updateDisplayItems;
- (void)updateItemSizeForContainerSize:(struct CGSize { double x1; double x2; })arg1;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillLayoutSubviews;

@end
