
@interface WFHTMLToMarkdown : NSObject <WFPythonHTMLParserDelegate> {
    NSMutableArray * _a;
    long long  _aCount;
    NSMutableArray * _aStack;
    NSString * _abbreviationData;
    NSMutableOrderedSet * _abbreviationList;
    NSString * _abbreviationTitle;
    NSURL * _baseURL;
    long long  _blockquote;
    long long  _bodyWidth;
    bool  _code;
    NSString * _emphasisMark;
    bool  _escapeSnob;
    bool  _ignoreEmphasis;
    bool  _ignoreImages;
    bool  _ignoreLinks;
    bool  _inlineLinks;
    bool  _lastWasList;
    bool  _lastWasNewline;
    bool  _linksEachParagraph;
    NSMutableArray * _list;
    NSString * _maybeAutomaticLink;
    NSDictionary * _nameToCodepointMapping;
    long long  _outCount;
    NSString * _outText;
    NSMutableArray * _outTextList;
    long long  _p_p;
    WFPythonHTMLParser * _parser;
    bool  _pre;
    long long  _quiet;
    bool  _skipInternalLinks;
    bool  _space;
    bool  _start;
    bool  _startpre;
    NSString * _strongMark;
    long long  _style;
    NSString * _ulItemMark;
    bool  _unicodeSnob;
    NSDictionary * _unifiableN;
}

@property (nonatomic, retain) NSMutableArray *a;
@property (nonatomic) long long aCount;
@property (nonatomic, retain) NSMutableArray *aStack;
@property (nonatomic, copy) NSString *abbreviationData;
@property (nonatomic, retain) NSMutableOrderedSet *abbreviationList;
@property (nonatomic, copy) NSString *abbreviationTitle;
@property (nonatomic, retain) NSURL *baseURL;
@property (nonatomic) long long blockquote;
@property (nonatomic) long long bodyWidth;
@property (nonatomic) bool code;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) NSString *emphasisMark;
@property (nonatomic) bool escapeSnob;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool ignoreEmphasis;
@property (nonatomic) bool ignoreImages;
@property (nonatomic) bool ignoreLinks;
@property (nonatomic) bool inlineLinks;
@property (nonatomic) bool lastWasList;
@property (nonatomic) bool lastWasNewline;
@property (nonatomic) bool linksEachParagraph;
@property (nonatomic, retain) NSMutableArray *list;
@property (nonatomic, copy) NSString *maybeAutomaticLink;
@property (nonatomic, retain) NSDictionary *nameToCodepointMapping;
@property (nonatomic) long long outCount;
@property (nonatomic, copy) NSString *outText;
@property (nonatomic, retain) NSMutableArray *outTextList;
@property (nonatomic) long long p_p;
@property (nonatomic, retain) WFPythonHTMLParser *parser;
@property (nonatomic) bool pre;
@property (nonatomic) long long quiet;
@property (nonatomic) bool skipInternalLinks;
@property (nonatomic) bool space;
@property (nonatomic) bool start;
@property (nonatomic) bool startpre;
@property (nonatomic, copy) NSString *strongMark;
@property (nonatomic) long long style;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSString *ulItemMark;
@property (nonatomic) bool unicodeSnob;
@property (nonatomic, retain) NSDictionary *unifiableN;

- (void).cxx_destruct;
- (id)a;
- (long long)aCount;
- (id)aStack;
- (id)abbreviationData;
- (id)abbreviationList;
- (id)abbreviationTitle;
- (void)addOutput:(id)arg1;
- (id)baseURL;
- (long long)blockquote;
- (long long)bodyWidth;
- (id)charref:(id)arg1;
- (void)close;
- (bool)code;
- (id)emphasisMark;
- (id)entityref:(id)arg1;
- (id)escapeMD:(id)arg1;
- (id)escapeMDSection:(id)arg1 snob:(bool)arg2;
- (bool)escapeSnob;
- (id)handleHTML:(id)arg1;
- (void)handleTag:(id)arg1 attributes:(id)arg2 start:(bool)arg3;
- (bool)ignoreEmphasis;
- (bool)ignoreImages;
- (bool)ignoreLinks;
- (id)initWithBaseURL:(id)arg1;
- (bool)inlineLinks;
- (bool)lastWasList;
- (bool)lastWasNewline;
- (bool)linksEachParagraph;
- (id)list;
- (id)maybeAutomaticLink;
- (unsigned short)nameToCodepoint:(id)arg1;
- (id)nameToCodepointMapping;
- (bool)onlywhite:(id)arg1;
- (id)optwrap:(id)arg1;
- (long long)outCount;
- (id)outText;
- (id)outTextList;
- (void)output:(id)arg1;
- (void)output:(id)arg1 pureData:(bool)arg2 force:(id)arg3;
- (void)p;
- (long long)p_p;
- (id)parser;
- (void)parser:(id)arg1 foundCharacterRef:(id)arg2;
- (void)parser:(id)arg1 foundData:(id)arg2;
- (void)parser:(id)arg1 foundEndTag:(id)arg2;
- (void)parser:(id)arg1 foundEntityRef:(id)arg2;
- (void)parser:(id)arg1 foundStartTag:(id)arg2 attributes:(id)arg3;
- (void)pbr;
- (bool)pre;
- (id)previousIndex:(id)arg1;
- (long long)quiet;
- (void)setA:(id)arg1;
- (void)setACount:(long long)arg1;
- (void)setAStack:(id)arg1;
- (void)setAbbreviationData:(id)arg1;
- (void)setAbbreviationList:(id)arg1;
- (void)setAbbreviationTitle:(id)arg1;
- (void)setBaseURL:(id)arg1;
- (void)setBlockquote:(long long)arg1;
- (void)setBodyWidth:(long long)arg1;
- (void)setCode:(bool)arg1;
- (void)setEmphasisMark:(id)arg1;
- (void)setEscapeSnob:(bool)arg1;
- (void)setIgnoreEmphasis:(bool)arg1;
- (void)setIgnoreImages:(bool)arg1;
- (void)setIgnoreLinks:(bool)arg1;
- (void)setInlineLinks:(bool)arg1;
- (void)setLastWasList:(bool)arg1;
- (void)setLastWasNewline:(bool)arg1;
- (void)setLinksEachParagraph:(bool)arg1;
- (void)setList:(id)arg1;
- (void)setMaybeAutomaticLink:(id)arg1;
- (void)setNameToCodepointMapping:(id)arg1;
- (void)setOutCount:(long long)arg1;
- (void)setOutText:(id)arg1;
- (void)setOutTextList:(id)arg1;
- (void)setP_p:(long long)arg1;
- (void)setParser:(id)arg1;
- (void)setPre:(bool)arg1;
- (void)setQuiet:(long long)arg1;
- (void)setSkipInternalLinks:(bool)arg1;
- (void)setSpace:(bool)arg1;
- (void)setStart:(bool)arg1;
- (void)setStartpre:(bool)arg1;
- (void)setStrongMark:(id)arg1;
- (void)setStyle:(long long)arg1;
- (void)setUlItemMark:(id)arg1;
- (void)setUnicodeSnob:(bool)arg1;
- (void)setUnifiableN:(id)arg1;
- (bool)skipInternalLinks;
- (bool)skipwrap:(id)arg1;
- (bool)space;
- (bool)start;
- (bool)startpre;
- (id)strongMark;
- (long long)style;
- (int)tagHeaderNumber:(id)arg1;
- (id)ulItemMark;
- (bool)unicodeSnob;
- (id)unifiable;
- (id)unifiableN;
- (id)wrapText:(id)arg1 toWidth:(long long)arg2;

@end
