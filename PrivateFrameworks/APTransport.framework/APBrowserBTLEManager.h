
@interface APBrowserBTLEManager : NSObject {
    bool  _browseForAltReceiver;
    CBAdvertiser * _btleAdvertiser;
    int  _btleAdvertiserSeed;
    NSMutableDictionary * _btleDevices;
    CBDiscovery * _btleDiscoverer;
    int  _btleDiscovererSeed;
    const void * _btleDiscoveryManagerToken;
    unsigned short  _btleMode;
    void * _eventContext;
    void * _eventHandlerContext;
    int (* _eventHandlerFunc;
    NSObject<OS_dispatch_queue> * _eventQueue;
    bool  _isAdvertising;
    bool  _isEnabled;
    bool  _isInvalidated;
    bool  _isScanning;
    bool  _isSoloBeaconDisabled;
    bool  _p2pSoloSupported;
    bool  _p2pSoloSupportedIsSet;
    bool  _preferencesUpdated;
    NSObject<OS_dispatch_queue> * _queue;
}

@property (nonatomic) bool browseForAltReceiver;
@property (nonatomic, retain) CBAdvertiser *btleAdvertiser;
@property (nonatomic) int btleAdvertiserSeed;
@property (nonatomic, retain) NSMutableDictionary *btleDevices;
@property (nonatomic, retain) CBDiscovery *btleDiscoverer;
@property (nonatomic) int btleDiscovererSeed;
@property (nonatomic) const void*btleDiscoveryManagerToken;
@property (nonatomic) void*eventHandlerContext;
@property (nonatomic) int (*eventHandlerFunc;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *eventQueue;
@property (nonatomic) bool isAdvertising;
@property (nonatomic) bool isEnabled;
@property (nonatomic) bool isInvalidated;
@property (nonatomic) bool isScanning;
@property (nonatomic) bool isSoloBeaconDisabled;
@property (nonatomic) bool preferencesUpdated;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *queue;

+ (int)createEventInfoDictionary:(id*)arg1 withDeviceID:(id)arg2 IPAddress:(id)arg3 port:(id)arg4 supportsSolo:(id)arg5 rssi:(id)arg6;
+ (id)stringForBTLEMode:(unsigned short)arg1;
+ (id)stringForBTLEState:(long long)arg1;

- (bool)browseForAltReceiver;
- (id)btleAdvertiser;
- (int)btleAdvertiserSeed;
- (id)btleDevices;
- (id)btleDiscoverer;
- (int)btleDiscovererSeed;
- (const void*)btleDiscoveryManagerToken;
- (long long)btleManagerState;
- (int)copyShowInfo:(id*)arg1 verbose:(bool)arg2;
- (id)createBTLEAdvertiser;
- (id)createBTLEDiscoverer;
- (void)dealloc;
- (int)dispatchEvent:(unsigned int)arg1 withEventInfo:(id)arg2;
- (int)ensureAdvertisingStarted;
- (int)ensureAdvertisingStopped;
- (int)ensureAdvertisingStoppedWithSeed:(int)arg1;
- (int)ensurePreferencesUpdatedWithShouldForce:(bool)arg1;
- (int)ensureScanningStarted;
- (int)ensureScanningStopped;
- (int)ensureScanningStoppedWithSeed:(int)arg1;
- (void*)eventHandlerContext;
- (int (*)eventHandlerFunc;
- (id)eventQueue;
- (int)getBTLEMode:(unsigned short*)arg1;
- (int)handleFoundDevice:(id)arg1;
- (int)handleLostDevice:(id)arg1;
- (id)initWithEventContext:(void*)arg1;
- (int)invalidate;
- (bool)isAdvertising;
- (bool)isEnabled;
- (bool)isInvalidated;
- (bool)isScanning;
- (bool)isSoloBeaconDisabled;
- (unsigned long long)nearbySoloDevicesCount;
- (bool)preferencesUpdated;
- (id)queue;
- (int)setBTLEMode:(unsigned short)arg1;
- (void)setBrowseForAltReceiver:(bool)arg1;
- (void)setBtleAdvertiser:(id)arg1;
- (void)setBtleAdvertiserSeed:(int)arg1;
- (void)setBtleDevices:(id)arg1;
- (void)setBtleDiscoverer:(id)arg1;
- (void)setBtleDiscovererSeed:(int)arg1;
- (void)setBtleDiscoveryManagerToken:(const void*)arg1;
- (int)setEventHandler:(int (*)arg1 context:(void*)arg2 managerRef:(struct OpaqueAPBrowserBTLEManager { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; id x2; }*)arg3;
- (void)setEventHandlerContext:(void*)arg1;
- (void)setEventHandlerFunc:(int (*)arg1;
- (void)setIsAdvertising:(bool)arg1;
- (void)setIsEnabled:(bool)arg1;
- (void)setIsInvalidated:(bool)arg1;
- (void)setIsScanning:(bool)arg1;
- (void)setIsSoloBeaconDisabled:(bool)arg1;
- (void)setPreferencesUpdated:(bool)arg1;
- (int)setSupportsSolo:(bool)arg1;
- (bool)shouldAdvertiseSourcePresence;
- (int)startMode:(unsigned short)arg1;
- (int)stop;
- (int)update;

@end
