
@interface IDSDirectMessageConnection : NSObject {
    IMPowerAssertion * _assertion;
    bool  _conciseACKSupported;
    NSObject<OS_nw_connection> * _connection;
    bool  _connectionIsIncoming;
    NSMutableArray * _connectionMessageSendQueue;
    NSObject<OS_dispatch_queue> * _connectionQueue;
    bool  _connectionSetupInProgress;
    int  _connectionState;
    NSString * _currentStreamName;
    unsigned int  _dataProtectionClass;
    <IDSDirectMessageConnectionDelegate> * _delegate;
    IDSDevice * _device;
    IDSDeviceConnection * _deviceConnection;
    bool  _directMessagingAllowed;
    int  _directMessagingReportStatsMSEC;
    int  _directMessagingRetryMSEC;
    unsigned long long  _directMessagingState;
    bool  _directMessagingSupported;
    int  _directMessagingTimeOutMSEC;
    unsigned long long  _identifier;
    long long  _idsPriorityToUse;
    unsigned long long  _incomingMessageBytes;
    unsigned long long  _incomingMessageCount;
    NSMutableDictionary * _messageIDToMessageDictionary;
    int  _notifyToken;
    unsigned long long  _outgoingMessageBytes;
    unsigned long long  _outgoingMessageCount;
    NSString * _peerID;
    bool  _peerIsConnected;
    bool  _peerIsNearby;
    bool  _peerSupportsDeviceConnection;
    NSObject<OS_dispatch_source> * _pendingAckTimer;
    bool  _pendingAckTimerSuspended;
    NSDictionary * _powerAssertionOptions;
    NSMutableDictionary * _queueOneToMessageIDDictionary;
    NSObject<OS_dispatch_source> * _reporterTimer;
    NSString * _serviceName;
    IDSServiceProperties * _serviceProperties;
    char * _shortServiceNameCString;
    long long  _trafficClassApplied;
    bool  _trafficClassInitialized;
    bool  _trafficClassTLVProcessed;
    unsigned int  _trafficClassToUse;
    bool  _upgradedTrafficClass;
}

@property (nonatomic, retain) IMPowerAssertion *assertion;
@property (nonatomic) bool conciseACKSupported;
@property (nonatomic, retain) NSObject<OS_nw_connection> *connection;
@property (nonatomic) bool connectionIsIncoming;
@property (nonatomic, retain) NSMutableArray *connectionMessageSendQueue;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *connectionQueue;
@property (nonatomic) bool connectionSetupInProgress;
@property (nonatomic) int connectionState;
@property (nonatomic, retain) NSString *currentStreamName;
@property (nonatomic) unsigned int dataProtectionClass;
@property (nonatomic) <IDSDirectMessageConnectionDelegate> *delegate;
@property (nonatomic, retain) IDSDevice *device;
@property (nonatomic, retain) IDSDeviceConnection *deviceConnection;
@property (nonatomic) bool directMessagingAllowed;
@property (nonatomic) int directMessagingReportStatsMSEC;
@property (nonatomic) int directMessagingRetryMSEC;
@property (nonatomic) unsigned long long directMessagingState;
@property (nonatomic) bool directMessagingSupported;
@property (nonatomic) int directMessagingTimeOutMSEC;
@property (nonatomic) unsigned long long identifier;
@property (nonatomic) long long idsPriorityToUse;
@property (nonatomic) unsigned long long incomingMessageBytes;
@property (nonatomic) unsigned long long incomingMessageCount;
@property (nonatomic, retain) NSMutableDictionary *messageIDToMessageDictionary;
@property (nonatomic) int notifyToken;
@property (nonatomic) unsigned long long outgoingMessageBytes;
@property (nonatomic) unsigned long long outgoingMessageCount;
@property (nonatomic, retain) NSString *peerID;
@property (nonatomic) bool peerIsConnected;
@property (nonatomic) bool peerIsNearby;
@property (nonatomic) bool peerSupportsDeviceConnection;
@property (nonatomic, retain) NSObject<OS_dispatch_source> *pendingAckTimer;
@property (nonatomic) bool pendingAckTimerSuspended;
@property (nonatomic, retain) NSDictionary *powerAssertionOptions;
@property (nonatomic, retain) NSMutableDictionary *queueOneToMessageIDDictionary;
@property (nonatomic, retain) NSObject<OS_dispatch_source> *reporterTimer;
@property (nonatomic, retain) NSString *serviceName;
@property (nonatomic, retain) IDSServiceProperties *serviceProperties;
@property (nonatomic) char *shortServiceNameCString;
@property (nonatomic) long long trafficClassApplied;
@property (nonatomic) bool trafficClassInitialized;
@property (nonatomic) bool trafficClassTLVProcessed;
@property (nonatomic) unsigned int trafficClassToUse;
@property (nonatomic) bool upgradedTrafficClass;

+ (bool)isDirectMessagingRequested:(id)arg1;

- (void).cxx_destruct;
- (id)assertion;
- (bool)canUseDirectMessaging;
- (void)cancel;
- (void)cancelPendingAckTimer;
- (void)clearPowerAssertion;
- (bool)conciseACKSupported;
- (id)connection;
- (bool)connectionIsIncoming;
- (id)connectionMessageSendQueue;
- (id)connectionQueue;
- (bool)connectionSetupInProgress;
- (int)connectionState;
- (id)createDispatchDataForMessageSend:(id)arg1 isAck:(bool)arg2 ackMessageId:(unsigned int)arg3;
- (id)currentStreamName;
- (unsigned int)dataProtectionClass;
- (void)dealloc;
- (id)delegate;
- (void)dequeueMessages;
- (id)description;
- (id)device;
- (id)deviceConnection;
- (bool)directMessagingAllowed;
- (int)directMessagingReportStatsMSEC;
- (int)directMessagingRetryMSEC;
- (unsigned long long)directMessagingState;
- (bool)directMessagingSupported;
- (int)directMessagingTimeOutMSEC;
- (void)failedToSendMessage:(id)arg1 responseCode:(long long)arg2;
- (unsigned char)getMessageTypeForFirstMessage;
- (void)getPowerAssertion;
- (unsigned long long)identifier;
- (long long)idsPriorityToUse;
- (unsigned long long)incomingMessageBytes;
- (unsigned long long)incomingMessageCount;
- (id)initWithServiceName:(id)arg1 queue:(id)arg2 delegate:(id)arg3;
- (void)invalidate;
- (bool)isMessageEligible:(id)arg1 options:(id)arg2 destinationDevice:(id)arg3;
- (void)logConnectionStatisticsInPowerDictionary;
- (id)messageIDToMessageDictionary;
- (int)notifyToken;
- (unsigned long long)outgoingMessageBytes;
- (unsigned long long)outgoingMessageCount;
- (void)parseDirectMessagingState;
- (id)peerID;
- (bool)peerIsConnected;
- (bool)peerIsNearby;
- (bool)peerSupportsDeviceConnection;
- (id)pendingAckTimer;
- (bool)pendingAckTimerSuspended;
- (id)powerAssertionOptions;
- (void)processIncomingMessage:(id)arg1 messageType:(unsigned char)arg2 messageIdentifier:(unsigned int)arg3;
- (id)queueOneToMessageIDDictionary;
- (void)receiveMessages;
- (void)receivedDirectMessagingSocketWithContext:(id)arg1;
- (id)reporterTimer;
- (void)resetConnection;
- (void)resumePendingAckTimer;
- (void)sendAckForMessageID:(unsigned int)arg1 guidToAck:(id)arg2;
- (void)sendAppAckWithGUID:(id)arg1;
- (void)sendMessageWithParameters:(id)arg1 options:(id)arg2;
- (id)serviceName;
- (id)serviceProperties;
- (void)setAssertion:(id)arg1;
- (void)setConciseACKSupported:(bool)arg1;
- (void)setConnection:(id)arg1;
- (void)setConnectionIsIncoming:(bool)arg1;
- (void)setConnectionMessageSendQueue:(id)arg1;
- (void)setConnectionQueue:(id)arg1;
- (void)setConnectionSetupInProgress:(bool)arg1;
- (void)setConnectionState:(int)arg1;
- (void)setCurrentStreamName:(id)arg1;
- (void)setDataProtectionClass:(unsigned int)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDestinationDevice:(id)arg1;
- (void)setDevice:(id)arg1;
- (void)setDeviceConnection:(id)arg1;
- (void)setDirectMessagingAllowed:(bool)arg1;
- (void)setDirectMessagingReportStatsMSEC:(int)arg1;
- (void)setDirectMessagingRetryMSEC:(int)arg1;
- (void)setDirectMessagingState:(unsigned long long)arg1;
- (void)setDirectMessagingSupported:(bool)arg1;
- (void)setDirectMessagingTimeOutMSEC:(int)arg1;
- (void)setIdentifier:(unsigned long long)arg1;
- (void)setIdsPriorityToUse:(long long)arg1;
- (void)setIncomingMessageBytes:(unsigned long long)arg1;
- (void)setIncomingMessageCount:(unsigned long long)arg1;
- (void)setMessageIDToMessageDictionary:(id)arg1;
- (void)setNotifyToken:(int)arg1;
- (void)setOutgoingMessageBytes:(unsigned long long)arg1;
- (void)setOutgoingMessageCount:(unsigned long long)arg1;
- (void)setPeerID:(id)arg1;
- (void)setPeerIsConnected:(bool)arg1;
- (void)setPeerIsNearby:(bool)arg1;
- (void)setPeerSupportsDeviceConnection:(bool)arg1;
- (void)setPendingAckTimer:(id)arg1;
- (void)setPendingAckTimerSuspended:(bool)arg1;
- (void)setPowerAssertionOptions:(id)arg1;
- (void)setQueueOneToMessageIDDictionary:(id)arg1;
- (void)setReporterTimer:(id)arg1;
- (void)setServiceName:(id)arg1;
- (void)setServiceProperties:(id)arg1;
- (void)setShortServiceNameCString:(char *)arg1;
- (void)setTrafficClassApplied:(long long)arg1;
- (void)setTrafficClassInitialized:(bool)arg1;
- (void)setTrafficClassTLVProcessed:(bool)arg1;
- (void)setTrafficClassToUse:(unsigned int)arg1;
- (void)setUpgradedTrafficClass:(bool)arg1;
- (void)setupConnectionIfApplicable;
- (void)setupIDSDeviceConnection;
- (char *)shortServiceNameCString;
- (void)startPowerLogReportTimer;
- (void)suspendPendingAckTimer;
- (long long)trafficClassApplied;
- (bool)trafficClassInitialized;
- (bool)trafficClassTLVProcessed;
- (unsigned int)trafficClassToUse;
- (void)updateConnectedDevices:(id)arg1;
- (void)updateConnection:(id)arg1;
- (void)updateMetadata:(id)arg1;
- (void)updateTrafficClass:(unsigned short)arg1;
- (bool)upgradedTrafficClass;

@end
