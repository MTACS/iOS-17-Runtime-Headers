
@interface ActivityUIServices.ActivityHostViewController : UIViewController <ActivityUIServices.ActivitySceneHosting, BSInvalidatable, FBSceneDelegate, FBSceneLayerManagerObserver> {
    void $__lazy_storage_$_logIdentifier;
    void $__lazy_storage_$_queue;
    void _presentationMode;
    void activatedSceneView;
    void activitySceneDescriptor;
    void activityTouchRestrictedRects;
    void audioCategoriesDisablingVolumeHUD;
    void backOffTimer;
    void backgroundTintColor;
    void debugLabel;
    void delegate;
    void ensureContentTimer;
    void idleTimerDisabled;
    void invalidated;
    void liveSceneSnapshotView;
    void presentationAssertion;
    void processResource;
    void resolvedMetrics;
    void scene;
    void sceneActivated;
    void sceneActivatedBlocks;
    void sceneClientExitCountWithinTimeout;
    void sceneClientExitTimer;
    void sceneForeground;
    void scenePresenter;
    void settingsDiffInspector;
    void shouldShareTouchesWithHost;
    void systemProvidedMetrics;
    void textColor;
    void touchDeliveryPolicyAssertions;
    void waitingForArchiveContentReady;
    void waitingForArchiveContentReadyBlocks;
    void waitingForInitialContentSizeReadyBlocks;
}

@property (nonatomic, readonly) ACActivityDescriptor *acActivityDescriptor;
@property (nonatomic, retain) _TtC18ActivityUIServices23ActivitySceneDescriptor *activitySceneDescriptor;
@property (nonatomic, copy) NSArray *activityTouchRestrictedRects;
@property (nonatomic, copy) NSArray *audioCategoriesDisablingVolumeHUD;
@property (nonatomic, retain) UIColor *backgroundTintColor;
@property (nonatomic, readonly) <BLSHBacklightSceneHostEnvironment> *backlightHostEnvironment;
@property (nonatomic) <_TtP18ActivityUIServices34ActivityHostViewControllerDelegate_> *delegate;
@property (nonatomic, readonly) NSString *description;
@property (nonatomic, readonly) _TtC18ActivityUIServices20ActivitySceneMetrics *fallbackMetrics;
@property (nonatomic) bool idleTimerDisabled;
@property (nonatomic) unsigned int presentationMode;
@property (nonatomic, retain) _TtC18ActivityUIServices20ActivitySceneMetrics *resolvedMetrics;
@property (nonatomic) bool shouldShareTouchesWithHost;
@property (nonatomic, retain) _TtC18ActivityUIServices22ActivityMetricsRequest *systemProvidedMetrics;
@property (nonatomic, retain) UIColor *textColor;

- (void).cxx_destruct;
- (bool)_canShowWhileLocked;
- (id)acActivityDescriptor;
- (id)activitySceneDescriptor;
- (id)activityTouchRestrictedRects;
- (id)audioCategoriesDisablingVolumeHUD;
- (id)backgroundTintColor;
- (id)backlightHostEnvironment;
- (id)cancelTouchesForCurrentEventInHostedContent;
- (void)dealloc;
- (id)delegate;
- (id)description;
- (void)ensureContentWithTimeout:(double)arg1 queue:(id)arg2 completion:(id /* block */)arg3;
- (id)fallbackMetrics;
- (bool)idleTimerDisabled;
- (id)initWithActivitySceneDescriptor:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)invalidate;
- (unsigned int)presentationMode;
- (id)resolvedMetrics;
- (void)scene:(id)arg1 didReceiveActions:(id)arg2;
- (void)scene:(id)arg1 didUpdateClientSettingsWithDiff:(id)arg2 oldClientSettings:(id)arg3 transitionContext:(id)arg4;
- (void)sceneContentStateDidChange:(id)arg1;
- (void)sceneDidActivate:(id)arg1;
- (void)sceneDidDeactivate:(id)arg1 withError:(id)arg2;
- (void)sceneDidInvalidate:(id)arg1;
- (void)sceneLayerManagerDidStartTrackingLayers:(id)arg1;
- (void)sceneLayerManagerDidStopTrackingLayers:(id)arg1;
- (void)sceneLayerManagerDidUpdateLayers:(id)arg1;
- (void)setActivitySceneDescriptor:(id)arg1;
- (void)setActivityTouchRestrictedRects:(id)arg1;
- (void)setAudioCategoriesDisablingVolumeHUD:(id)arg1;
- (void)setBackgroundTintColor:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setIdleTimerDisabled:(bool)arg1;
- (void)setPresentationMode:(unsigned int)arg1;
- (void)setResolvedMetrics:(id)arg1;
- (void)setShouldShareTouchesWithHost:(bool)arg1;
- (void)setSystemProvidedMetrics:(id)arg1;
- (void)setTextColor:(id)arg1;
- (bool)shouldShareTouchesWithHost;
- (id)systemProvidedMetrics;
- (id)textColor;
- (void)traitCollectionDidChange:(id)arg1;
- (void)viewDidLoad;
- (void)viewDidMoveToWindow:(id)arg1 shouldAppearOrDisappear:(bool)arg2;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillLayoutSubviews;

@end
