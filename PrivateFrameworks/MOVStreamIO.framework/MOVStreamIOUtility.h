
@interface MOVStreamIOUtility : NSObject

+ (id)AVEProfileLevel10BitMonochrome;
+ (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })CGAffineTransformValueFromNSValue:(id)arg1;
+ (id)addEncodingQuality:(double)arg1 toConfiguration:(id)arg2;
+ (id)addTrackTypeInfo:(unsigned long long)arg1 toConfiguration:(id)arg2;
+ (id)addTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1 toConfiguration:(id)arg2;
+ (id)audioNoneEncoderConfig;
+ (unsigned long long)bytesPerPixelForFormat:(unsigned int)arg1;
+ (double)clampedQuality:(double)arg1;
+ (id)color8bitHEVCWithAlphaEncoderConfig;
+ (id)color8bitHEVCWithAlphaEncoderConfigWithBitrate:(unsigned long long)arg1;
+ (id)colorH264EncoderConfig;
+ (id)colorH264EncoderConfigWithBitrate:(unsigned long long)arg1;
+ (id)colorHEVCEncoderConfig;
+ (id)colorHEVCEncoderConfigWithBitrate:(unsigned long long)arg1;
+ (id)colorHEVCEncoderConfigWithQuality:(double)arg1;
+ (id)colorHEVCLosslessEncoderConfig;
+ (id)colorRecordingConfigBitDepth:(unsigned long long)arg1 bitrate:(unsigned long long)arg2 chromaSampling:(long long)arg3 error:(id*)arg4;
+ (id)colorRecordingConfigBitDepth:(unsigned long long)arg1 chromaSampling:(long long)arg2 error:(id*)arg3;
+ (id)colorRecordingConfigBitDepth:(unsigned long long)arg1 lossless:(bool)arg2 chromaSampling:(long long)arg3 error:(id*)arg4;
+ (id)colorRecordingConfigBitDepth:(unsigned long long)arg1 quality:(double)arg2 chromaSampling:(long long)arg3 error:(id*)arg4;
+ (id)colorWithAlphaLossless8bitHEVCEncoderConfig;
+ (struct opaqueCMFormatDescription { }*)createFormatDescriptionFromPixelBuffer:(struct __CVBuffer { }*)arg1;
+ (struct opaqueCMFormatDescription { }*)createL008FormatDescriptionFromCompandedRawBayerFormatDescription:(struct opaqueCMFormatDescription { }*)arg1;
+ (struct opaqueCMFormatDescription { }*)createL008FormatDescriptionFromNonPlanarFormatDescription:(struct opaqueCMFormatDescription { }*)arg1;
+ (struct opaqueCMFormatDescription { }*)createL010FormatDescriptionFromL016FormatDescription:(struct opaqueCMFormatDescription { }*)arg1;
+ (struct opaqueCMFormatDescription { }*)createL010FormatDescriptionFromRawBayerFormatDescription:(struct opaqueCMFormatDescription { }*)arg1;
+ (struct opaqueCMFormatDescription { }*)createxf20FormatDescriptionFromRawBayerFormatDescription:(struct opaqueCMFormatDescription { }*)arg1;
+ (id)customEncoderConfig;
+ (id)customEncoderConfigWithEmbeddedConfiguration:(id)arg1;
+ (unsigned int)detectPixelFormatForAsset:(id)arg1 videoTrackId:(int)arg2 error:(id*)arg3;
+ (struct opaqueCMFormatDescription { }*)formatForPixelBuffer:(struct __CVBuffer { }*)arg1;
+ (unsigned long long)getDefaultBitrateForVideoDimension:(struct { int x1; int x2; })arg1 atExpectedFramerate:(double)arg2 forEncoderType:(int)arg3;
+ (id)getJsonFriendlyCopy:(id)arg1;
+ (id)getPlistFriendlyCopyOf:(id)arg1;
+ (unsigned long long)getPreferredBytesPerRowAlignmentSize;
+ (unsigned long long)getPreferredPlaneAlignmentSize;
+ (unsigned int)guessYCbCrPixelFormatFromFormatDescription:(struct opaqueCMFormatDescription { }*)arg1;
+ (bool)isEncoderAvailableForEncoderType:(int)arg1;
+ (bool)isEncoderAvailableWithEncoderName:(id)arg1;
+ (bool)isKeyFrame:(struct opaqueCMSampleBuffer { }*)arg1 error:(id*)arg2;
+ (bool)isValidJSONObject:(id)arg1 path:(id)arg2;
+ (id)jsonFriendlyCopy:(id)arg1;
+ (id)monochrome10bitHEVCEncoderConfig;
+ (id)monochrome10bitHEVCEncoderConfigWithBitrate:(unsigned long long)arg1;
+ (id)monochrome10bitHEVCEncoderConfigWithQuality:(double)arg1;
+ (id)monochrome10bitHEVCLosslessEncoderConfig;
+ (id)monochrome8bitHEVCEncoderConfig;
+ (id)monochrome8bitHEVCEncoderConfigWithBitrate:(unsigned long long)arg1;
+ (id)monochrome8bitHEVCEncoderConfigWithQuality:(double)arg1;
+ (id)monochrome8bitHEVCLosslessEncoderConfig;
+ (id)noneEncoderConfig;
+ (id)plistDeserializedObject:(id)arg1 error:(id*)arg2;
+ (id)plistFriendlyCopyOf:(id)arg1;
+ (id)plistSerializedObject:(id)arg1 error:(id*)arg2;
+ (id)proRes422EncoderConfig;
+ (id)proRes422EncoderConfigWithQuality:(long long)arg1;
+ (id)proRes4444EncoderConfig;
+ (id)proRes4444EncoderConfigWithHighQuality;
+ (id)sampleBufferConfigWithPixelFormat:(unsigned int)arg1;
+ (id)slimEncoderConfig;
+ (id)slimXEncoderConfig;
+ (double)transformAngleFromVideoOrientation:(int)arg1;
+ (id)valueWithCGAffineTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1;
+ (bool)verifyExactBytesPerRow:(id)arg1 width:(unsigned long long)arg2 height:(unsigned long long)arg3 pixelFormat:(unsigned int)arg4;

@end
