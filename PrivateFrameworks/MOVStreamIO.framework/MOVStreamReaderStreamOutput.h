
@interface MOVStreamReaderStreamOutput : NSObject <MOVStreamReaderAudioStreamOutput, MOVStreamReaderMetadataStreamOutput, MOVStreamReaderStreamOutputPrivate, MOVStreamReaderVideoStreamOutput, MOVStreamReaderVideoStreamOutputPrivate> {
    AVAssetReader * _assetReader;
    AVAssetTrack * _assetTrack;
    int  _attachmentSerializationMode;
    AVAssetReaderOutputMetadataAdaptor * _attachmentsAdaptor;
    <MOVStreamReaderDelegate> * _delegate;
    unsigned int  _determinedPixelFormat;
    bool  _endOfStreamReached;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _frameDuration;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _futureAttachementsDuration;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _futureAttachementsPts;
    NSData * _futureAttachmentsData;
    bool  _isLegacyIMUTrack;
    long long  _mediaType;
    NSDictionary * _metadataAdaptors;
    unsigned int  _originalPixelFormat;
    MOVStreamReader * _reader;
    NSString * _relatedStreamId;
    NSString * _relationSpecifier;
    NSString * _streamId;
    AVAssetReaderTrackOutput * _streamOutput;
    AVAssetTrack * _track;
    unsigned long long  _trackTypeInfo;
    struct CGAffineTransform { 
        double a; 
        double b; 
        double c; 
        double d; 
        double tx; 
        double ty; 
    }  _transform;
    MIOVersion * _version;
    <MOVStreamPostProcessor> * postProcessor;
}

@property AVAssetReader *assetReader;
@property AVAssetTrack *assetTrack;
@property int attachmentSerializationMode;
@property (retain) AVAssetReaderOutputMetadataAdaptor *attachmentsAdaptor;
@property (readonly, copy) NSString *debugDescription;
@property <MOVStreamReaderDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property unsigned int determinedPixelFormat;
@property bool endOfStreamReached;
@property (readonly) struct { long long x1; int x2; unsigned int x3; long long x4; } frameDuration;
@property struct { long long x1; int x2; unsigned int x3; long long x4; } futureAttachementsDuration;
@property struct { long long x1; int x2; unsigned int x3; long long x4; } futureAttachementsPts;
@property (retain) NSData *futureAttachmentsData;
@property (readonly) unsigned long long hash;
@property bool isLegacyIMUTrack;
@property long long mediaType;
@property (retain) NSDictionary *metadataAdaptors;
@property unsigned int originalPixelFormat;
@property (retain) <MOVStreamPostProcessor> *postProcessor;
@property MOVStreamReader *reader;
@property (retain) NSString *relatedStreamId;
@property (retain) NSString *relationSpecifier;
@property (retain) NSString *streamId;
@property (retain) AVAssetReaderTrackOutput *streamOutput;
@property (readonly) Class superclass;
@property AVAssetTrack *track;
@property unsigned long long trackTypeInfo;
@property struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; } transform;
@property MIOVersion *version;

- (void).cxx_destruct;
- (bool)alwaysCopiesSampleDataForStream;
- (id)assetReader;
- (id)assetTrack;
- (int)attachmentSerializationMode;
- (id)attachmentsAdaptor;
- (id)attachmentsDataForStreamPts:(struct { long long x1; int x2; unsigned int x3; long long x4; }*)arg1 duration:(struct { long long x1; int x2; unsigned int x3; long long x4; }*)arg2;
- (struct __CVBuffer { }*)copyNextFrameForStreamTimestamp:(out struct { long long x1; int x2; unsigned int x3; long long x4; }*)arg1 error:(out id*)arg2;
- (id)customTrackMetadata;
- (id)decodeAttachmentsData:(id)arg1 error:(id*)arg2;
- (id)delegate;
- (unsigned int)determinedPixelFormat;
- (bool)endOfStreamReached;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })frameDuration;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })futureAttachementsDuration;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })futureAttachementsPts;
- (id)futureAttachmentsData;
- (id)getAssociatedMetadataStreams;
- (id)getKeyFromMetadataTrack:(id)arg1;
- (unsigned int)getOutputPixelFormatForStream;
- (struct opaqueCMSampleBuffer { }*)grabNextAudioSampleForStreamTimestamp:(out struct { long long x1; int x2; unsigned int x3; long long x4; }*)arg1 error:(out id*)arg2;
- (id)grabNextMetadataItemsOfTrackAssociatedWithStreamWithIdentifier:(in id)arg1 timeRange:(out struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; }*)arg2 error:(out id*)arg3;
- (id)grabNextMetadataOfStreamTimeRange:(out struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; }*)arg1 error:(out id*)arg2;
- (struct opaqueCMSampleBuffer { }*)grabNextSampleBufferForStreamTimestamp:(out struct { long long x1; int x2; unsigned int x3; long long x4; }*)arg1 error:(out id*)arg2;
- (id)grabNextTimedMetadataGroupOfStreamError:(out id*)arg1;
- (id)init;
- (id)initWithAudioTrack:(id)arg1 assetReader:(id)arg2 associatedMetadataTracks:(id)arg3 version:(id)arg4 unknownStreamId:(id)arg5 reader:(id)arg6 delegate:(id)arg7 error:(id*)arg8;
- (id)initWithMetadataTrack:(id)arg1 assetReader:(id)arg2 version:(id)arg3 unknownStreamId:(id)arg4 reader:(id)arg5 delegate:(id)arg6 error:(id*)arg7;
- (id)initWithSceneTrack:(id)arg1 assetReader:(id)arg2 associatedMetadataTracks:(id)arg3 version:(id)arg4 unknownStreamId:(id)arg5 reader:(id)arg6 delegate:(id)arg7 error:(id*)arg8;
- (id)initWithVideoTrack:(id)arg1 assetReader:(id)arg2 associatedMetadataTracks:(id)arg3 version:(id)arg4 unknownStreamId:(id)arg5 reader:(id)arg6 delegate:(id)arg7 error:(id*)arg8;
- (bool)isLegacyIMUTrack;
- (long long)mediaType;
- (id)metadataAdaptors;
- (id)nextAttachmentWithError:(id*)arg1;
- (struct __CVBuffer { }*)nextPixelBufferForStreamAttachementsData:(out id*)arg1 timestamp:(out struct { long long x1; int x2; unsigned int x3; long long x4; }*)arg2 error:(out id*)arg3;
- (struct opaqueCMSampleBuffer { }*)nextSampleBufferForStreamAttachementsData:(out id*)arg1 timestamp:(out struct { long long x1; int x2; unsigned int x3; long long x4; }*)arg2 error:(out id*)arg3;
- (unsigned int)originalPixelFormat;
- (unsigned int)pixelFormatForStream;
- (int)playbackPixelFormatForTrack:(id)arg1 ofStream:(id)arg2 delegate:(id)arg3;
- (int)playbackPixelFormatForTrack:(id)arg1 ofStream:(id)arg2 streamEncodingType:(id)arg3 inputPixelFormat:(unsigned int)arg4 delegate:(id)arg5;
- (id)postProcessor;
- (id)reader;
- (id)relatedStreamId;
- (id)relationSpecifier;
- (void)removePixelBufferPadding:(bool)arg1;
- (void)setAssetReader:(id)arg1;
- (void)setAssetTrack:(id)arg1;
- (void)setAttachmentSerializationMode:(int)arg1;
- (void)setAttachmentsAdaptor:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDeterminedPixelFormat:(unsigned int)arg1;
- (void)setEndOfStreamReached:(bool)arg1;
- (void)setFutureAttachementsDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setFutureAttachementsPts:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setFutureAttachmentsData:(id)arg1;
- (void)setIsLegacyIMUTrack:(bool)arg1;
- (void)setMediaType:(long long)arg1;
- (void)setMetadataAdaptors:(id)arg1;
- (void)setOriginalPixelFormat:(unsigned int)arg1;
- (void)setPostProcessor:(id)arg1;
- (void)setReader:(id)arg1;
- (void)setRelatedStreamId:(id)arg1;
- (void)setRelationSpecifier:(id)arg1;
- (void)setStreamId:(id)arg1;
- (void)setStreamOutput:(id)arg1;
- (void)setTrack:(id)arg1;
- (void)setTrackTypeInfo:(unsigned long long)arg1;
- (void)setTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1;
- (void)setVersion:(id)arg1;
- (id)streamId;
- (id)streamIdFromTrackStreamTypeIdentifier:(id)arg1;
- (id)streamOutput;
- (id)track;
- (unsigned long long)trackTypeInfo;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })transform;
- (id)version;

@end
