
@interface PRPosterEnvironmentImpl : NSObject <NSCopying, PRPosterEditingEnvironment, PRPosterRenderingEnvironment_Private, UITraitEnvironment> {
    double  _backlightProgress;
    NSURL * _bundleURL;
    PREditorElementLayoutController * _layoutController;
    double  _linearBacklightProgress;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    PRPosterConfigurableOptions * _lock_sourceConfigurableOptions;
    <PRPosterContentsInternal> * _lock_sourceContents;
    PRTimeFontConfiguration * _lock_sourceTitleFontConfiguration;
    PRPosterMutableConfiguredProperties * _lock_targetConfiguredProperties;
    FBSSceneSettings * _settings;
    PRMutablePosterConfiguration * _targetConfig;
    UITraitCollection * _traitCollection;
    double  _unlockProgress;
    bool  _wakeSourceIsSwipeToUnlock;
}

@property (nonatomic, readonly) <PRPosterAmbientEnvironment> *ambientEnvironment;
@property (nonatomic, readonly) bool andromeda;
@property (nonatomic) double backlightProgress;
@property (nonatomic, readonly) UIColor *caseColor;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } contentCutoutBounds;
@property (nonatomic, readonly) <PRPosterContents> *contents;
@property (nonatomic, readonly) PRPosterEnvironmentContext *context;
@property (readonly, copy) NSString *debugDescription;
@property (getter=isDepthEffectDisallowed, nonatomic, readonly) bool depthEffectDisallowed;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } desiredContentSize;
@property (nonatomic, readonly) long long deviceOrientation;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } floatingObscurableBounds;
@property (getter=isFloatingViewSnapshot, nonatomic, readonly) bool floatingViewSnapshot;
@property (readonly) unsigned long long hash;
@property (nonatomic) double linearBacklightProgress;
@property (getter=isLowLuminance, nonatomic, readonly) bool lowLuminance;
@property (nonatomic, readonly) long long luminance;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } minimumContentSize;
@property (nonatomic, readonly) long long mode;
@property (getter=isParallaxEnabled, nonatomic, readonly) bool parallaxEnabled;
@property (getter=isPreview, nonatomic, readonly) bool preview;
@property (nonatomic, readonly) NSString *role;
@property (nonatomic, readonly) unsigned long long significantEventsCounter;
@property (getter=isSnapshot, nonatomic, readonly) bool snapshot;
@property (nonatomic, readonly) PRPosterConfigurableOptions *sourceConfigurableOptions;
@property (nonatomic, readonly) <PRPosterContents> *sourceContents;
@property (nonatomic, readonly) PRTimeFontConfiguration *sourceTimeFontConfiguration;
@property (readonly) Class superclass;
@property (nonatomic, readonly) PRMutablePosterConfiguration *targetConfiguration;
@property (nonatomic, readonly) PRPosterMutableConfiguredProperties *targetConfiguredProperties;
@property (nonatomic, readonly) unsigned long long titleAlignment;
@property (nonatomic, readonly) UITraitCollection *traitCollection;
@property (nonatomic) double unlockProgress;
@property (nonatomic, readonly) long long userInterfaceStyle;
@property (nonatomic) bool wakeSourceIsSwipeToUnlock;

- (void).cxx_destruct;
- (void)_appendDescriptionToStream:(id)arg1;
- (void)_applyToSceneSettings:(id)arg1;
- (id)_initWithSceneSettings:(id)arg1 traitCollection:(id)arg2 targetConfig:(id)arg3 extensionBundleURL:(id)arg4;
- (void)_lock_hydratePosterContents:(out id*)arg1 sourceConfigurableOptions:(out id*)arg2 sourceTitleFontConfiguration:(out id*)arg3 targetConfigurableProperties:(out id*)arg4;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_normalizedBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_targetConfiguredProperties;
- (id)ambientEnvironment;
- (bool)andromeda;
- (double)backlightProgress;
- (id)caseColor;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })contentCutoutBounds;
- (id)contents;
- (id)context;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (struct CGSize { double x1; double x2; })desiredContentSize;
- (long long)deviceOrientation;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })floatingObscurableBounds;
- (bool)isDepthEffectDisallowed;
- (bool)isFloatingViewSnapshot;
- (bool)isLowLuminance;
- (bool)isParallaxEnabled;
- (bool)isPreview;
- (bool)isSnapshot;
- (double)linearBacklightProgress;
- (long long)luminance;
- (struct CGSize { double x1; double x2; })minimumContentSize;
- (long long)mode;
- (id)role;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })screenBounds;
- (void)setBacklightProgress:(double)arg1;
- (void)setLinearBacklightProgress:(double)arg1;
- (void)setUnlockProgress:(double)arg1;
- (void)setWakeSourceIsSwipeToUnlock:(bool)arg1;
- (unsigned long long)significantEventsCounter;
- (id)sourceConfigurableOptions;
- (id)sourceContents;
- (id)sourceTimeFontConfiguration;
- (id)targetConfiguration;
- (id)targetConfiguredProperties;
- (unsigned long long)titleAlignment;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })titleBoundsForLayout:(unsigned long long)arg1;
- (id)traitCollection;
- (void)traitCollectionDidChange:(id)arg1;
- (double)unlockProgress;
- (long long)userInterfaceStyle;
- (bool)wakeSourceIsSwipeToUnlock;

@end
