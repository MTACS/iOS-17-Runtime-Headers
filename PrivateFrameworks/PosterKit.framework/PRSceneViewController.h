
@interface PRSceneViewController : UIViewController <BSInvalidatable, FBSceneDelegate, _UISceneSettingsDiffAction> {
    PRPosterComplicationLayout * _complicationLayout;
    PRPosterConfiguredProperties * _configuredProperties;
    PRSServerPosterIdentity * _contentsIdentity;
    bool  _forcesSceneForeground;
    bool  _invalidated;
    <BSInvalidatable> * _keyboardFocusDeferringRule;
    PRPosterRenderingConfiguration * _renderingConfiguration;
    FBScene * _scene;
    bool  _sceneAvailable;
    <UIScenePresenter> * _scenePresenter;
    bool  _sceneUserInteractionEnabled;
    UIView * _touchBlockingView;
    UIScene * _uiParentScene;
    id  _userInfo;
}

@property (nonatomic, readonly, copy) PRPosterComplicationLayout *complicationLayout;
@property (nonatomic, readonly) PRPosterConfigurableOptions *configurableOptions;
@property (nonatomic, readonly) PRPosterConfiguredProperties *configuredProperties;
@property (nonatomic, readonly) PRSServerPosterIdentity *contentsIdentity;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool forcesSceneForeground;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, copy) PRPosterRenderingConfiguration *renderingConfiguration;
@property (getter=isSceneAvailable, nonatomic) bool sceneAvailable;
@property (getter=isSceneContentReady, nonatomic, readonly) bool sceneContentReady;
@property (nonatomic, readonly) <UIScenePresenter> *scenePresenter;
@property (nonatomic, readonly) bool scenePresenterIsValid;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } sceneSize;
@property (getter=isSceneUserInteractionEnabled, nonatomic) bool sceneUserInteractionEnabled;
@property (nonatomic, readonly) unsigned long long significantEventsCounter;
@property (readonly) Class superclass;
@property (nonatomic, retain) id userInfo;

+ (id)role;

- (void).cxx_destruct;
- (void)_acquireKeyboardFocusDeferringRuleIfNecessary;
- (id)_acquireLocalKeyboardFocusAssertion;
- (void)_addScenePresentationView:(id)arg1;
- (void)_adjustParentScene;
- (void)_configureInitialSceneClientSettings:(id)arg1;
- (void)_configureInitialSceneSettings:(id)arg1;
- (void)_configureUsingPath:(id)arg1;
- (void)_failWithFatalError:(id)arg1;
- (id)_initWithProvider:(id)arg1 contents:(id)arg2 configurableOptions:(id)arg3 configuredProperties:(id)arg4 previewing:(bool)arg5;
- (id)_initWithProvider:(id)arg1 contents:(id)arg2 previewing:(bool)arg3;
- (void)_performActionsForUIScene:(id)arg1 withUpdatedFBSScene:(id)arg2 settingsDiff:(id)arg3 fromSettings:(id)arg4 transitionContext:(id)arg5 lifecycleActionType:(unsigned int)arg6;
- (id)_presentationBackgroundColor;
- (void)_sceneContentReadinessDidChange;
- (bool)_shouldSceneBeForeground;
- (void)_teardown;
- (void)_update;
- (void)_updatePresentationBackgroundColor;
- (void)_updateSceneSettings:(id)arg1 transitionContext:(id)arg2;
- (void)_updateSceneToSize:(struct CGSize { double x1; double x2; })arg1 orientation:(long long)arg2 withAnimationSettings:(id)arg3 fence:(id)arg4;
- (id)complicationLayout;
- (id)configurableOptions;
- (id)configuredProperties;
- (id)contentsIdentity;
- (void)dealloc;
- (void)didMoveToParentViewController:(id)arg1;
- (bool)forcesSceneForeground;
- (id)initWithProvider:(id)arg1 contents:(id)arg2;
- (id)initWithProvider:(id)arg1 contents:(id)arg2 configurableOptions:(id)arg3;
- (id)initWithProvider:(id)arg1 contents:(id)arg2 configurableOptions:(id)arg3 configuredProperties:(id)arg4;
- (id)initWithProvider:(id)arg1 contents:(id)arg2 configurableOptions:(id)arg3 configuredProperties:(id)arg4 additionalInfo:(id)arg5;
- (id)initWithProvider:(id)arg1 contents:(id)arg2 configuredProperties:(id)arg3;
- (void)invalidate;
- (bool)isSceneAvailable;
- (bool)isSceneContentReady;
- (bool)isSceneUserInteractionEnabled;
- (id)renderingConfiguration;
- (id)scene;
- (void)scene:(id)arg1 clientDidConnect:(id)arg2;
- (void)scene:(id)arg1 didUpdateClientSettingsWithDiff:(id)arg2 oldClientSettings:(id)arg3 transitionContext:(id)arg4;
- (id)scene:(id)arg1 handleActions:(id)arg2;
- (void)sceneContentStateDidChange:(id)arg1;
- (void)sceneDidActivate:(id)arg1;
- (void)sceneDidDeactivate:(id)arg1 withError:(id)arg2;
- (id)scenePresenter;
- (bool)scenePresenterIsValid;
- (struct CGSize { double x1; double x2; })sceneSize;
- (void)setForcesSceneForeground:(bool)arg1;
- (void)setSceneAvailable:(bool)arg1;
- (void)setSceneUserInteractionEnabled:(bool)arg1;
- (void)setUserInfo:(id)arg1;
- (unsigned long long)significantEventsCounter;
- (id)userInfo;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewDidMoveToWindow:(id)arg1 shouldAppearOrDisappear:(bool)arg2;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;

@end
