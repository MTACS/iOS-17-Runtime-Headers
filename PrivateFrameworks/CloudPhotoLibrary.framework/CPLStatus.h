
@interface CPLStatus : NSObject {
    NSMutableSet * _changedKeys;
    <CPLStatusDelegate> * _delegate;
    Protocol * _delegationProtocol;
    SEL  _delegationSelector;
    bool  _forCPL;
    NSObject<OS_dispatch_queue> * _lock;
    NSMutableDictionary * _status;
    NSURL * _statusFileURL;
}

@property (nonatomic, readonly) CPLAccountFlags *accountFlags;
@property (nonatomic, copy) NSData *accountFlagsData;
@property (nonatomic, readonly) long long blockedReason;
@property (nonatomic) long long busyState;
@property (getter=isCellularRestricted, nonatomic, readonly) bool cellularRestricted;
@property (nonatomic, readonly) long long clientFeatureCompatibleVersion;
@property (nonatomic, readonly) NSDictionary *cloudAssetCountPerType;
@property (nonatomic, readonly) NSDate *cloudAssetCountPerTypeLastCheckDate;
@property (getter=isConnectedToNetwork, nonatomic, readonly) bool connectedToNetwork;
@property (nonatomic) bool containerHasBeenWiped;
@property (nonatomic) <CPLStatusDelegate> *delegate;
@property (nonatomic, copy) NSArray *disabledFeatures;
@property (nonatomic) unsigned long long estimatedCountOfRemainingRecordsDuringSharedLibraryExit;
@property (nonatomic, copy) NSDate *exitDeleteTime;
@property (nonatomic, readonly) bool hasBatteryBudget;
@property (nonatomic, readonly) bool hasCellularBudget;
@property (nonatomic) bool hasChangesToProcess;
@property (nonatomic, readonly) bool hasHeavyResourceUsage;
@property (nonatomic, readonly) bool hasLowBatteryLevel;
@property (nonatomic, readonly) bool hasModerateThermalPressure;
@property (nonatomic, readonly) bool hasPoorNetworkQuality;
@property (nonatomic, readonly) bool hasPoorSystemConditions;
@property (nonatomic, readonly) bool hasThermalPressure;
@property (nonatomic, readonly) bool hasValidSystemBudget;
@property (nonatomic) bool iCloudLibraryClientIsNotAuthenticated;
@property (nonatomic) bool iCloudLibraryClientVersionTooOld;
@property (nonatomic) bool iCloudLibraryExists;
@property (nonatomic) bool iCloudLibraryHasBeenWiped;
@property (getter=isInAirplaneMode, nonatomic, readonly) bool inAirplaneMode;
@property (nonatomic, copy) NSDate *initialSyncDate;
@property (nonatomic, readonly) bool isBlockedByLowPowerMode;
@property (nonatomic, readonly) bool isBlockedBySnapshot;
@property (nonatomic, readonly) bool isConstrainedNetwork;
@property (nonatomic) bool isExceedingQuota;
@property (nonatomic) bool isExceedingSharedLibraryQuota;
@property (nonatomic) bool isStuckInExitForSharedLibrary;
@property (nonatomic, copy) NSDate *lastCompletePrefetchDate;
@property (nonatomic, copy) NSDate *lastPruneDate;
@property (nonatomic, copy) NSDate *lastSuccessfulSyncDate;
@property (nonatomic, readonly) bool lowDiskSpace;
@property (nonatomic) long long serverFeatureCompatibleVersion;
@property (copy) CPLSyncSessionMetrics *syncSessionMetrics;
@property (nonatomic, readonly) long long unBlockedReason;
@property (getter=isUpgradeSuggestedToAccessAllPhotos, nonatomic) bool upgradeSuggestedToAccessAllPhotos;
@property (nonatomic, readonly) bool veryLowDiskSpace;
@property (getter=isWalrusEnabled, nonatomic) bool walrusEnabled;

- (void).cxx_destruct;
- (bool)_deleteInitialSyncMarkerWithError:(id*)arg1;
- (void)_loadIfNecessary;
- (void)_save;
- (void)_setObjectInStatus:(id)arg1 forKey:(id)arg2;
- (void)_statusDidChange;
- (bool)_writeInitialSyncMarkerForDate:(id)arg1 error:(id*)arg2;
- (id)accountFlags;
- (id)accountFlagsData;
- (long long)blockedReason;
- (long long)busyState;
- (void)checkInitialSyncMarker;
- (long long)clientFeatureCompatibleVersion;
- (id)cloudAssetCountPerType;
- (id)cloudAssetCountPerTypeLastCheckDate;
- (bool)containerHasBeenWiped;
- (id)delegate;
- (id)disabledFeatures;
- (unsigned long long)estimatedCountOfRemainingRecordsDuringSharedLibraryExit;
- (id)exitDeleteTime;
- (bool)hasBatteryBudget;
- (bool)hasCellularBudget;
- (bool)hasChangesToProcess;
- (bool)hasHeavyResourceUsage;
- (bool)hasLowBatteryLevel;
- (bool)hasModerateThermalPressure;
- (bool)hasPoorNetworkQuality;
- (bool)hasPoorSystemConditions;
- (bool)hasThermalPressure;
- (bool)hasValidSystemBudget;
- (bool)iCloudLibraryClientIsNotAuthenticated;
- (bool)iCloudLibraryClientVersionTooOld;
- (bool)iCloudLibraryExists;
- (bool)iCloudLibraryHasBeenWiped;
- (id)initWithClientLibraryBaseURL:(id)arg1;
- (id)initWithClientLibraryBaseURLForCPLEngine:(id)arg1;
- (id)initialSyncDate;
- (bool)isBlockedByLowPowerMode;
- (bool)isBlockedBySnapshot;
- (bool)isCellularRestricted;
- (bool)isConnectedToNetwork;
- (bool)isConstrainedNetwork;
- (bool)isExceedingQuota;
- (bool)isExceedingSharedLibraryQuota;
- (bool)isInAirplaneMode;
- (bool)isStuckInExitForSharedLibrary;
- (bool)isUpgradeSuggestedToAccessAllPhotos;
- (bool)isWalrusEnabled;
- (id)lastCompletePrefetchDate;
- (id)lastPruneDate;
- (id)lastSuccessfulSyncDate;
- (bool)lowDiskSpace;
- (void)preventDelegateWithDelegationClass:(id)arg1 selector:(SEL)arg2;
- (void)refetchFromDisk;
- (long long)serverFeatureCompatibleVersion;
- (void)setAccountFlagsData:(id)arg1;
- (void)setBusyState:(long long)arg1;
- (void)setCloudAssetCountPerType:(id)arg1 updateCheckDate:(bool)arg2;
- (void)setConnectedToNetwork:(bool)arg1 cellularIsRestricted:(bool)arg2 inAirplaneMode:(bool)arg3;
- (void)setContainerHasBeenWiped:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDisabledFeatures:(id)arg1;
- (void)setEstimatedCountOfRemainingRecordsDuringSharedLibraryExit:(unsigned long long)arg1;
- (void)setExitDeleteTime:(id)arg1;
- (void)setHasCellularBudget:(bool)arg1 hasBatteryBudget:(bool)arg2 hasLowBatteryLevel:(bool)arg3 isConstrainedNetwork:(bool)arg4 isBlockedByLowPowerMode:(bool)arg5 hasHeavyResourceUsage:(bool)arg6 hasPoorNetworkQuality:(bool)arg7 hasModerateThermalPressure:(bool)arg8 hasThermalPressure:(bool)arg9 hasPoorSystemConditions:(bool)arg10 isBudgetValid:(bool)arg11 blockedReason:(long long)arg12 unBlockedReason:(long long)arg13;
- (void)setHasChangesToProcess:(bool)arg1;
- (void)setICloudLibraryClientIsNotAuthenticated:(bool)arg1;
- (void)setICloudLibraryClientVersionTooOld:(bool)arg1;
- (void)setICloudLibraryExists:(bool)arg1;
- (void)setICloudLibraryHasBeenWiped:(bool)arg1;
- (void)setInitialSyncDate:(id)arg1;
- (void)setIsExceedingQuota:(bool)arg1;
- (void)setIsExceedingSharedLibraryQuota:(bool)arg1;
- (void)setIsStuckInExitForSharedLibrary:(bool)arg1;
- (void)setLastCompletePrefetchDate:(id)arg1;
- (void)setLastPruneDate:(id)arg1;
- (void)setLastSuccessfulSyncDate:(id)arg1;
- (void)setLowDiskSpace:(bool)arg1 veryLowDiskSpace:(bool)arg2;
- (void)setServerFeatureCompatibleVersion:(long long)arg1;
- (void)setSyncSessionMetrics:(id)arg1;
- (void)setUpgradeSuggestedToAccessAllPhotos:(bool)arg1;
- (void)setWalrusEnabled:(bool)arg1;
- (id)statusDescription;
- (id)syncSessionMetrics;
- (long long)unBlockedReason;
- (bool)veryLowDiskSpace;
- (bool)writeInitialSyncMarker:(id*)arg1;

@end
