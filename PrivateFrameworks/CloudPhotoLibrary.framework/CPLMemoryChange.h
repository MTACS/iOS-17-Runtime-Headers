
@interface CPLMemoryChange : CPLRecordChange {
    CPLMemoryAssetList * _assetList;
    NSData * _assetListPredicate;
    NSData * _blacklistedFeature;
    long long  _category;
    NSDate * _creationDate;
    CPLMemoryAssetList * _customUserAssetList;
    bool  _favorite;
    NSData * _graphData;
    long long  _graphVersion;
    NSData * _movieData;
    long long  _notificationState;
    long long  _playCount;
    bool  _rejected;
    double  _score;
    long long  _shareCount;
    long long  _subcategory;
    NSString * _subtitle;
    NSString * _title;
    long long  _userActionOptions;
    long long  _viewCount;
}

@property (nonatomic, copy) CPLMemoryAssetList *assetList;
@property (nonatomic, copy) NSData *assetListPredicate;
@property (nonatomic, copy) NSData *blacklistedFeature;
@property (nonatomic) long long category;
@property (nonatomic, copy) NSDate *creationDate;
@property (nonatomic, copy) CPLMemoryAssetList *customUserAssetList;
@property (getter=isFavorite, nonatomic) bool favorite;
@property (nonatomic, copy) NSData *graphData;
@property (nonatomic) long long graphVersion;
@property (nonatomic, copy) NSData *movieData;
@property (nonatomic) long long notificationState;
@property (nonatomic) long long playCount;
@property (getter=isRejected, nonatomic) bool rejected;
@property (nonatomic) double score;
@property (nonatomic) long long shareCount;
@property (nonatomic) long long subcategory;
@property (nonatomic, copy) NSString *subtitle;
@property (nonatomic, copy) NSString *title;
@property (nonatomic) long long userActionOptions;
@property (nonatomic) long long viewCount;

+ (id)_createTestMemoryWithAssets:(id)arg1;
+ (bool)supportsDeletion;
+ (bool)supportsDirectDeletion;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)assetList;
- (id)assetListPredicate;
- (id)blacklistedFeature;
- (long long)category;
- (id /* block */)checkDefaultValueBlockForPropertyWithSelector:(SEL)arg1;
- (id)creationDate;
- (id)customUserAssetList;
- (void)encodeWithCoder:(id)arg1;
- (id)graphData;
- (long long)graphVersion;
- (id)initWithCoder:(id)arg1;
- (bool)isFavorite;
- (bool)isRejected;
- (id)movieData;
- (long long)notificationState;
- (long long)playCount;
- (id)propertiesDescription;
- (id)scopedIdentifiersForMapping;
- (double)score;
- (void)setAssetList:(id)arg1;
- (void)setAssetListPredicate:(id)arg1;
- (void)setBlacklistedFeature:(id)arg1;
- (void)setCategory:(long long)arg1;
- (void)setCreationDate:(id)arg1;
- (void)setCustomUserAssetList:(id)arg1;
- (void)setFavorite:(bool)arg1;
- (void)setGraphData:(id)arg1;
- (void)setGraphVersion:(long long)arg1;
- (void)setMovieData:(id)arg1;
- (void)setNotificationState:(long long)arg1;
- (void)setPlayCount:(long long)arg1;
- (void)setRejected:(bool)arg1;
- (void)setScore:(double)arg1;
- (void)setShareCount:(long long)arg1;
- (void)setSubcategory:(long long)arg1;
- (void)setSubtitle:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setUserActionOptions:(long long)arg1;
- (void)setViewCount:(long long)arg1;
- (long long)shareCount;
- (long long)subcategory;
- (id)subtitle;
- (id)title;
- (id)translateToClientChangeUsingIDMapping:(id)arg1 error:(id*)arg2;
- (id)translateToCloudChangeUsingIDMapping:(id)arg1 error:(id*)arg2;
- (long long)userActionOptions;
- (long long)viewCount;

@end
