
@interface CPLRecordChange : NSObject <NSCopying, NSSecureCoding> {
    CPLRecordChangeDiffTracker * _attachedDiffTracker;
    unsigned long long  _cachedRealResourceSizeInStorage;
    unsigned long long  _changeType;
    NSDate * _dateDeleted;
    bool  _didCacheRealResourceSizeInStorage;
    CPLRecordChange * _ignoredRecord;
    bool  _inExpunged;
    bool  _inTrash;
    bool  _isSparseFullChange;
    CPLRecordPushContext * _pushContext;
    NSString * _realIdentifier;
    NSData * _recordChangeData;
    NSDate * _recordModificationDate;
    bool  _relatedRecordShouldBeShared;
    CPLScopedIdentifier * _resourceCopyFromScopedIdentifier;
    CPLScopedIdentifier * _scopedIdentifier;
    bool  _serverRecordIsCorrupted;
    NSArray * _sharingContributorUserIdentifiers;
    NSData * _sharingRecordChangeData;
    NSString * _sharingRecordIdentifier;
    NSString * _sharingScopeIdentifier;
    bool  _shouldFilterDefaultValuesForNewProperties;
    bool  _shouldNotTrustCloudCache;
    bool  _shouldOnlyUploadNewResources;
    NSArray * _updateSharingContributorUserIdentifiers;
}

@property (nonatomic) unsigned long long changeType;
@property (nonatomic, copy) NSDate *dateDeleted;
@property (nonatomic, copy) NSString *identifier;
@property (nonatomic) bool inExpunged;
@property (nonatomic) bool inTrash;
@property (nonatomic, copy) NSString *realIdentifier;
@property (nonatomic, copy) NSData *recordChangeData;
@property (nonatomic, copy) NSDate *recordModificationDate;
@property (nonatomic, copy) CPLScopedIdentifier *resourceCopyFromScopedIdentifier;
@property (nonatomic, copy) CPLScopedIdentifier *scopedIdentifier;
@property (nonatomic) bool serverRecordIsCorrupted;
@property (nonatomic, copy) NSArray *sharingContributorUserIdentifiers;
@property (nonatomic, copy) NSData *sharingRecordChangeData;
@property (nonatomic, copy) NSString *sharingRecordIdentifier;
@property (nonatomic, copy) NSString *sharingScopeIdentifier;
@property (nonatomic, copy) NSArray *updateSharingContributorUserIdentifiers;

+ (id)_descriptionForChangeType:(unsigned long long)arg1 isSparseFullChange:(bool)arg2 onlyUploadNewResources:(bool)arg3;
+ (Class)classForStoredClassName:(id)arg1 forCPLArchiver:(id)arg2;
+ (id /* block */)copyPropertyBlockForDirection:(unsigned long long)arg1;
+ (id)cplAdditionalSecureClassesForProperty:(id)arg1;
+ (bool)cplShouldIgnorePropertyForCoding:(id)arg1;
+ (bool)cplShouldIgnorePropertyForEquality:(id)arg1;
+ (id)descriptionForChangeType:(unsigned long long)arg1;
+ (id)descriptionForDirection:(unsigned long long)arg1;
+ (id /* block */)equalityBlockForDirection:(unsigned long long)arg1;
+ (bool)isContributorsUpdateSupported;
+ (long long)maxInlineDataSize;
+ (id)newChangeWithIdentifier:(id)arg1 changeType:(unsigned long long)arg2;
+ (id)newChangeWithScopedIdentifier:(id)arg1 changeType:(unsigned long long)arg2;
+ (id)newChangeWithType:(unsigned long long)arg1;
+ (id)newDeleteChangeWithIdentifier:(id)arg1;
+ (id)newDeleteChangeWithScopedIdentifier:(id)arg1;
+ (id)newRecord;
+ (id)newRecordInScopeWithIdentifier:(id)arg1;
+ (id)newRecordWithIdentifier:(id)arg1;
+ (id)newRecordWithScopedIdentifier:(id)arg1;
+ (Class)relatedRecordClass;
+ (bool)shouldReallyQuarantineRecord;
+ (bool)supportsDeletion;
+ (bool)supportsDirectDeletion;
+ (bool)supportsResources;
+ (bool)supportsSecureCoding;
+ (bool)supportsSharing;
+ (bool)supportsSharingScopedIdentifier;

- (void).cxx_destruct;
- (id)_ignoredRecord;
- (void)_noteRelatedRecordShouldBeShared;
- (id)_pushContext;
- (bool)_relatedRecordShouldBeShared;
- (void)_setIgnoredRecord:(id)arg1;
- (void)_setPushContext:(id)arg1;
- (void)_setShouldNotTrustCloudCache:(bool)arg1;
- (bool)_shouldNotTrustCloudCache;
- (id)_unscopedIdentifier;
- (id)allRelatedScopedIdentifiers;
- (bool)allResourcesAreAvailable;
- (bool)allowsToOnlyUploadNewResources;
- (void)applyChange:(id)arg1;
- (bool)applyChange:(id)arg1 copyPropertiesToFinalChange:(id)arg2 forChangeType:(unsigned long long)arg3 direction:(unsigned long long)arg4 diffTracker:(id)arg5;
- (void)applyChangeType:(unsigned long long)arg1 fromChange:(id)arg2;
- (id)asRecordView;
- (void)attachDiffTracker:(id)arg1;
- (id)attachedDiffTracker;
- (void)awakeFromStorage;
- (unsigned long long)baseDerivativeResourceType;
- (unsigned long long)baseVideoComplemenentResourceType;
- (bool)canLowerQuota;
- (bool)changeIsOnlyAddingResourcesToRecord:(id)arg1 addedResources:(id*)arg2;
- (unsigned long long)changeType;
- (id /* block */)checkDefaultValueBlockForPropertyWithSelector:(SEL)arg1;
- (void)clearChangeType:(unsigned long long)arg1;
- (void)clearIdentifiers;
- (id)compactedChangeWithRelatedChanges:(id)arg1 isOnlyChange:(bool)arg2 fullRecord:(id)arg3 usingStorageView:(id)arg4;
- (id)copyChangeType:(unsigned long long)arg1;
- (void)copyDerivatives:(unsigned long long*)arg1 count:(int)arg2 avoidResourceType:(unsigned long long)arg3 fromRecord:(id)arg4 inResourcePerType:(id)arg5;
- (void)copyDerivativesFromRecordIfPossible:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)cplFullDescription;
- (id)dateDeleted;
- (long long)dequeueOrder;
- (id)description;
- (unsigned long long)effectiveResourceSizeToUploadUsingStorage:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)enumerateChangeTypesForChangeType:(unsigned long long)arg1 block:(id /* block */)arg2;
- (unsigned long long)estimatedRecordSize;
- (id)fingerprintScheme;
- (unsigned long long)fullChangeTypeForFullRecord;
- (bool)hasChangeType:(unsigned long long)arg1;
- (unsigned long long)hash;
- (id)identifier;
- (bool)inExpunged;
- (bool)inTrash;
- (id)initWithCPLArchiver:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (bool)isAssetChange;
- (bool)isDelete;
- (bool)isEqual:(id)arg1;
- (bool)isFullRecord;
- (bool)isInScopeWithIdentifier:(id)arg1;
- (bool)isMasterChange;
- (bool)isResourceTypeAGeneratedDerivative:(unsigned long long)arg1;
- (bool)isScopeChange;
- (bool)isSharedInScopeWithIdentifier:(id)arg1;
- (bool)isSparseFullChange;
- (void)markAsSparseFullChange;
- (void)markToOnlyUploadNewResources;
- (id)mergeRecordChangeWithNewRecordChange:(id)arg1 direction:(unsigned long long)arg2;
- (id)onlyAddedResources;
- (unsigned long long)originalResourceSize;
- (void)prepareForStorage;
- (id)propertiesDescription;
- (id)propertiesForChangeType:(unsigned long long)arg1;
- (id)proposedCloudScopedIdentifierWithError:(id*)arg1;
- (id)proposedLocalScopedIdentifier;
- (id)realIdentifier;
- (id)realRecordChangeFromRecordChange:(id)arg1 direction:(unsigned long long)arg2 newRecord:(id*)arg3;
- (id)realRecordChangeFromRecordChange:(id)arg1 direction:(unsigned long long)arg2 newRecord:(id*)arg3 changeType:(unsigned long long)arg4 diffTracker:(id)arg5;
- (id)realRecordChangeFromRecordChange:(id)arg1 direction:(unsigned long long)arg2 newRecord:(id*)arg3 diffTracker:(id)arg4;
- (unsigned long long)realResourceSize;
- (id)realScopedIdentifier;
- (unsigned long long)realUploadResourceSize;
- (id)recordChangeData;
- (Class)recordClass;
- (id)recordModificationDate;
- (id)redactedDescription;
- (id)relatedIdentifier;
- (Class)relatedRecordClass;
- (id)relatedScopedIdentifier;
- (bool)resourceChangeWillOnlyChangeDerivatives:(id)arg1;
- (id)resourceCopyFromScopedIdentifier;
- (id)resourceForType:(unsigned long long)arg1;
- (id)resourcePerType;
- (id)resources;
- (id)resourcesDescription;
- (void)restoreRelationShipsFromFullRecord:(id)arg1;
- (id)scopedIdentifier;
- (id)scopedIdentifiersForMapping;
- (id)secondaryIdentifier;
- (id)secondaryScopedIdentifier;
- (bool)serverRecordIsCorrupted;
- (void)setChangeType:(unsigned long long)arg1;
- (void)setDateDeleted:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setInExpunged:(bool)arg1;
- (void)setInTrash:(bool)arg1;
- (void)setRealIdentifier:(id)arg1;
- (void)setRecordChangeData:(id)arg1;
- (void)setRecordModificationDate:(id)arg1;
- (void)setRelatedIdentifier:(id)arg1;
- (void)setResourceCopyFromScopedIdentifier:(id)arg1;
- (void)setResources:(id)arg1;
- (void)setScopeIndex:(long long)arg1;
- (void)setScopedIdentifier:(id)arg1;
- (void)setSecondaryIdentifier:(id)arg1;
- (void)setServerRecordIsCorrupted:(bool)arg1;
- (void)setSharingContributorUserIdentifiers:(id)arg1;
- (void)setSharingRecordChangeData:(id)arg1;
- (void)setSharingRecordIdentifier:(id)arg1;
- (void)setSharingRecordScopedIdentifier:(id)arg1;
- (void)setSharingScopeIdentifier:(id)arg1;
- (void)setShouldFilterDefaultValuesForNewProperties:(bool)arg1;
- (void)setUpdateSharingContributorUserIdentifiers:(id)arg1;
- (id)sharingContributorUserIdentifiers;
- (id)sharingRecordChangeData;
- (id)sharingRecordIdentifier;
- (id)sharingRecordScopedIdentifier;
- (id)sharingScopeIdentifier;
- (bool)shouldApplyPropertiesWithSelector:(SEL)arg1;
- (bool)shouldFilterDefaultValuesForNewProperties;
- (bool)shouldOnlyUploadNewResources;
- (id)storedClassNameForCPLArchiver:(id)arg1;
- (unsigned long long)supportedChangeTypes;
- (bool)supportsDeletion;
- (bool)supportsDirectDeletion;
- (bool)supportsResourceType:(unsigned long long)arg1;
- (bool)supportsResources;
- (bool)supportsSharing;
- (bool)supportsSharingScopedIdentifier;
- (unsigned long long)totalResourceSize;
- (id)translateToClientChangeUsingIDMapping:(id)arg1 error:(id*)arg2;
- (id)translateToCloudChangeUsingIDMapping:(id)arg1 error:(id*)arg2;
- (void)updateScopeIdentifier:(id)arg1;
- (id)updateSharingContributorUserIdentifiers;
- (bool)validateChangeWithError:(id*)arg1;
- (bool)validateFullRecord;
- (bool)validateRecordForTracker:(id)arg1;

@end
