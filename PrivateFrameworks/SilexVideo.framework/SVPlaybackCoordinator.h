
@interface SVPlaybackCoordinator : NSObject <SVVideoMetadata> {
    id /* block */  _cancelHandler;
    struct CGSize { 
        double width; 
        double height; 
    }  _dimensions;
    NSError * _error;
    NSObject<SVVideoPlaybackHost> * _host;
    bool  _initiatedPlayback;
    SVKeyValueObserver * _muteStateObserver;
    bool  _muted;
    NSHashTable * _observers;
    double  _pausedAtTime;
    bool  _playbackBufferFull;
    SVKeyValueObserver * _playbackBufferFullObserver;
    bool  _playbackLikelyToKeepUp;
    SVKeyValueObserver * _playbackLikelyToKeepUpObserver;
    bool  _playbackRequested;
    SVAVPlayer * _player;
    <SVAVPlayerFactory> * _playerFactory;
    SVKeyValueObserver * _playerItemPresentationSizeObserver;
    SVKeyValueObserver * _readyForDisplayObserver;
    NSTimer * _readyToPlayTimer;
    unsigned long long  _state;
    SVTimeline * _timeline;
    <SVVideoProviding> * _video;
    NSURL * _videoURL;
}

@property (nonatomic, copy) id /* block */ cancelHandler;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) struct CGSize { double x1; double x2; } dimensions;
@property (nonatomic, readonly) double duration;
@property (nonatomic, retain) NSError *error;
@property (nonatomic, readonly) double framerate;
@property (readonly) unsigned long long hash;
@property (nonatomic) NSObject<SVVideoPlaybackHost> *host;
@property (nonatomic) bool initiatedPlayback;
@property (nonatomic, readonly) NSArray *loadedTimeRanges;
@property (nonatomic, readonly) double loadingProgress;
@property (nonatomic, retain) SVKeyValueObserver *muteStateObserver;
@property (nonatomic) bool muted;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } naturalSize;
@property (nonatomic, readonly) NSHashTable *observers;
@property (nonatomic) double pausedAtTime;
@property (nonatomic, readonly) bool playbackBufferFull;
@property (nonatomic, retain) SVKeyValueObserver *playbackBufferFullObserver;
@property (nonatomic, readonly) bool playbackLikelyToKeepUp;
@property (nonatomic, retain) SVKeyValueObserver *playbackLikelyToKeepUpObserver;
@property (nonatomic) bool playbackRequested;
@property (nonatomic, readonly) unsigned long long playbackState;
@property (nonatomic, retain) SVAVPlayer *player;
@property (nonatomic, readonly) <SVAVPlayerFactory> *playerFactory;
@property (nonatomic, retain) SVKeyValueObserver *playerItemPresentationSizeObserver;
@property (nonatomic, retain) SVKeyValueObserver *readyForDisplayObserver;
@property (nonatomic, retain) NSTimer *readyToPlayTimer;
@property (nonatomic) unsigned long long state;
@property (readonly) Class superclass;
@property (nonatomic, readonly) double time;
@property (nonatomic, readonly) double timePlayed;
@property (nonatomic, readonly) SVTimeline *timeline;
@property (nonatomic, readonly) <SVVideoProviding> *video;
@property (nonatomic, retain) NSURL *videoURL;
@property (nonatomic, readonly) double volume;

- (void).cxx_destruct;
- (void)addMuteStateObserver;
- (void)addPlaybackBufferObserver;
- (void)addPlaybackLikelyToKeepUpObserver;
- (void)addPlaybackObserver:(id)arg1;
- (void)addPlayerItemPresentationSizeObserver;
- (id /* block */)cancelHandler;
- (void)configureTimeline;
- (struct CGSize { double x1; double x2; })dimensions;
- (double)duration;
- (id)error;
- (void)finishedLoadingVideoURL:(id)arg1;
- (double)framerate;
- (id)host;
- (id)initWithVideo:(id)arg1 playerFactory:(id)arg2;
- (bool)initiatedPlayback;
- (void)load;
- (void)loadVideoIfNeeded;
- (id)loadedTimeRanges;
- (void)loadedTimeRangesChanged;
- (double)loadingProgress;
- (void)muteStateChanged;
- (id)muteStateObserver;
- (bool)muted;
- (struct CGSize { double x1; double x2; })naturalSize;
- (id)observers;
- (void)pause;
- (double)pausedAtTime;
- (void)playWithButtonTapped:(bool)arg1;
- (bool)playbackBufferFull;
- (id)playbackBufferFullObserver;
- (void)playbackBufferFullStateChanged;
- (void)playbackFailedWithError:(id)arg1;
- (void)playbackFinished;
- (void)playbackInitiatedWithButtonTapped:(bool)arg1;
- (bool)playbackLikelyToKeepUp;
- (id)playbackLikelyToKeepUpObserver;
- (void)playbackLikelyToKeepUpStateChanged;
- (void)playbackPaused;
- (void)playbackPausedAtTime:(double)arg1;
- (void)playbackReadyToStart;
- (bool)playbackRequested;
- (void)playbackResumed;
- (void)playbackResumedAtTime:(double)arg1;
- (void)playbackStarted;
- (unsigned long long)playbackState;
- (id)player;
- (id)playerFactory;
- (id)playerItemPresentationSizeObserver;
- (id)readyForDisplayObserver;
- (id)readyToPlayTimer;
- (void)removePlaybackObserver:(id)arg1;
- (void)removePlayerItemPresentationSizeObserver;
- (void)seekToTime:(double)arg1 withCompletionBlock:(id /* block */)arg2;
- (void)setCancelHandler:(id /* block */)arg1;
- (void)setDimensions:(struct CGSize { double x1; double x2; })arg1;
- (void)setError:(id)arg1;
- (void)setHost:(id)arg1;
- (void)setInitiatedPlayback:(bool)arg1;
- (void)setMuteStateObserver:(id)arg1;
- (void)setMuted:(bool)arg1;
- (void)setPausedAtTime:(double)arg1;
- (void)setPlaybackBufferFullObserver:(id)arg1;
- (void)setPlaybackLikelyToKeepUpObserver:(id)arg1;
- (void)setPlaybackRequested:(bool)arg1;
- (void)setPlayer:(id)arg1;
- (void)setPlayerItemPresentationSizeObserver:(id)arg1;
- (void)setReadyForDisplayObserver:(id)arg1;
- (void)setReadyToPlayTimer:(id)arg1;
- (void)setState:(unsigned long long)arg1;
- (void)setVideoURL:(id)arg1;
- (void)setupPlayerWithURL:(id)arg1;
- (void)startedLoadingVideo;
- (unsigned long long)state;
- (void)stateChanged;
- (bool)supportImpressionTracking;
- (bool)supportsQuartileTracking;
- (double)time;
- (void)timeElapsed:(double)arg1 duration:(double)arg2;
- (double)timePlayed;
- (id)timeline;
- (id)video;
- (id)videoURL;
- (double)volume;

@end
