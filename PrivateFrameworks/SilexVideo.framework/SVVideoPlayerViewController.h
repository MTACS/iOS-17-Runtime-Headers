
@interface SVVideoPlayerViewController : UIViewController <AVPlayerViewControllerDelegatePrivate, AVPlayerViewControllerDelegate_WebKitOnly, SVAutomaticFullscreenVideoPlaybackBehaviorManagerDelegate, SVVideoAdViewControllerProviding, SVVideoPlaybackObserver, UIGestureRecognizerDelegate> {
    UIActivityIndicatorView * _activityIndicatorView;
    SVAdGradientView * _adGradientView;
    SVAdPrivacyButton * _adPrivacyButton;
    SVPlaybackCoordinator * _coordinator;
    <SVVideoPlayerViewControllerDataSource> * _dataSource;
    <SVVideoPlayerViewControllerDelegate> * _delegate;
    bool  _enablePictureInPictureBehaviors;
    bool  _fullscreen;
    unsigned long long  _fullscreenBehavior;
    SVAutomaticFullscreenVideoPlaybackBehaviorManager * _fullscreenBehaviorManager;
    SVLearnMoreButton * _learnMoreButton;
    unsigned long long  _mode;
    bool  _playButtonTapped;
    AVPlayerViewController * _playerViewController;
    SVPlaybackCoordinator * _primaryContentCoordinator;
    SVVideoPlaybackQueue * _queue;
    bool  _showsPlaybackControls;
    SVVideoAdSkipButton * _skipButton;
    UIGestureRecognizer * _tapGesture;
    <SVVideoAdProviding> * _videoAd;
    SVKeyValueObserver * _videoBoundsObserver;
    SVVideoVolumeObserver * _volumeObserver;
}

@property (nonatomic, retain) UIActivityIndicatorView *activityIndicatorView;
@property (nonatomic, retain) SVAdGradientView *adGradientView;
@property (nonatomic, retain) SVAdPrivacyButton *adPrivacyButton;
@property (nonatomic, retain) SVPlaybackCoordinator *coordinator;
@property (nonatomic) <SVVideoPlayerViewControllerDataSource> *dataSource;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <SVVideoPlayerViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool enablePictureInPictureBehaviors;
@property (getter=isFullscreen, nonatomic) bool fullscreen;
@property (nonatomic) unsigned long long fullscreenBehavior;
@property (nonatomic, readonly) SVAutomaticFullscreenVideoPlaybackBehaviorManager *fullscreenBehaviorManager;
@property (getter=isFullscreenInProgress, nonatomic, readonly) bool fullscreenInProgress;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) SVLearnMoreButton *learnMoreButton;
@property (getter=isLoading, nonatomic, readonly) bool loading;
@property (nonatomic) unsigned long long mode;
@property (getter=isPictureInPictureActive, nonatomic, readonly) bool pictureInPictureActive;
@property (nonatomic) bool playButtonTapped;
@property (nonatomic, retain) AVPlayerViewController *playerViewController;
@property (getter=isPlaying, nonatomic, readonly) bool playing;
@property (nonatomic, retain) SVPlaybackCoordinator *primaryContentCoordinator;
@property (nonatomic, retain) SVVideoPlaybackQueue *queue;
@property (nonatomic) bool showsPlaybackControls;
@property (nonatomic, retain) SVVideoAdSkipButton *skipButton;
@property (readonly) Class superclass;
@property (nonatomic, readonly) UIGestureRecognizer *tapGesture;
@property (nonatomic, retain) <SVVideoAdProviding> *videoAd;
@property (nonatomic, retain) SVKeyValueObserver *videoBoundsObserver;
@property (nonatomic, readonly) UIViewController *viewControllerForModalPresentation;
@property (nonatomic, retain) SVVideoVolumeObserver *volumeObserver;

- (void).cxx_destruct;
- (id)activityIndicatorView;
- (id)adGradientView;
- (id)adPrivacyButton;
- (void)adSkipButtonTapped:(id)arg1;
- (void)addDebuggerAction:(id /* block */)arg1;
- (void)advance;
- (id)coordinator;
- (id)dataSource;
- (void)dealloc;
- (id)delegate;
- (void)embedVideoPlayerIfNeeded;
- (bool)enablePictureInPictureBehaviors;
- (void)enterFullscreenWithCompletionBlock:(id /* block */)arg1;
- (void)exitFullscreenWithCompletionBlock:(id /* block */)arg1;
- (void)finished;
- (void)flashPlaybackControlsWithDuration:(double)arg1;
- (unsigned long long)fullscreenBehavior;
- (id)fullscreenBehaviorManager;
- (void)fullscreenBehaviorManagerRequiresFullscreenPlayback:(id)arg1;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (id)init;
- (bool)isFullscreen;
- (bool)isFullscreenInProgress;
- (bool)isLoading;
- (bool)isPictureInPictureActive;
- (bool)isPlaying;
- (id)learnMoreButton;
- (void)learnMoreButtonTapped:(id)arg1;
- (void)loadView;
- (unsigned long long)mode;
- (void)pause;
- (bool)playButtonTapped;
- (void)playWithButtonTapped:(bool)arg1;
- (bool)playbackAllowedForPlaybackCoordinator:(id)arg1;
- (void)playbackCoordinator:(id)arg1 playbackFailedWithError:(id)arg2;
- (void)playbackCoordinator:(id)arg1 timeElapsed:(double)arg2 duration:(double)arg3;
- (void)playbackCoordinatorFinishedLoadingVideoURL:(id)arg1;
- (void)playbackCoordinatorFinishedPlayback:(id)arg1;
- (void)playbackCoordinatorPausedPlayback:(id)arg1;
- (void)playbackCoordinatorResumedPlayback:(id)arg1;
- (void)playbackCoordinatorStartedPlayback:(id)arg1;
- (void)playbackCoordinatorStateChanged:(id)arg1;
- (id)playerViewController;
- (void)playerViewController:(id)arg1 metricsCollectionEventOccured:(long long)arg2;
- (void)playerViewController:(id)arg1 restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:(id /* block */)arg2;
- (bool)playerViewController:(id)arg1 shouldExitFullScreenWithReason:(long long)arg2;
- (void)playerViewController:(id)arg1 willBeginFullScreenPresentationWithAnimationCoordinator:(id)arg2;
- (void)playerViewController:(id)arg1 willEndFullScreenPresentationWithAnimationCoordinator:(id)arg2;
- (void)playerViewController:(id)arg1 willTransitionToVisibilityOfPlaybackControls:(bool)arg2 withAnimationCoordinator:(id)arg3;
- (void)playerViewControllerDidStartPictureInPicture:(id)arg1;
- (void)playerViewControllerDidStopPictureInPicture:(id)arg1;
- (void)playerViewControllerWillStartPictureInPicture:(id)arg1;
- (void)playerViewControllerWillStopPictureInPicture:(id)arg1;
- (id)primaryContentCoordinator;
- (id)queue;
- (void)refreshControlsForPlaybackCoordinator:(id)arg1;
- (void)removeVideoPlayerIfNeeded;
- (void)setActivityIndicatorView:(id)arg1;
- (void)setAdGradientView:(id)arg1;
- (void)setAdPrivacyButton:(id)arg1;
- (void)setCoordinator:(id)arg1;
- (void)setDataSource:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEnablePictureInPictureBehaviors:(bool)arg1;
- (void)setFullscreen:(bool)arg1;
- (void)setFullscreenBehavior:(unsigned long long)arg1;
- (void)setLearnMoreButton:(id)arg1;
- (void)setMode:(unsigned long long)arg1;
- (void)setPlayButtonTapped:(bool)arg1;
- (void)setPlayerViewController:(id)arg1;
- (void)setPrimaryContentCoordinator:(id)arg1;
- (void)setQueue:(id)arg1;
- (void)setShowsPlaybackControls:(bool)arg1;
- (void)setSkipButton:(id)arg1;
- (void)setVideoAd:(id)arg1;
- (void)setVideoBoundsObserver:(id)arg1;
- (void)setVolumeObserver:(id)arg1;
- (void)setupQueueIfNeeded;
- (bool)showsPlaybackControls;
- (id)skipButton;
- (void)startPictureInPictureIfPossible;
- (void)startPlaybackForCoordinatorIfAllowed:(id)arg1;
- (void)stopPictureInPicture;
- (id)tapGesture;
- (void)tapped;
- (void)transitionToCoordinator:(id)arg1;
- (void)updateAdsButtonsVisibility;
- (void)updateSkipButtonWithThreshold:(unsigned long long)arg1 time:(double)arg2;
- (void)updateViewConstraints;
- (id)videoAd;
- (id)videoBoundsObserver;
- (id)viewControllerForModalPresentation;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (id)volumeObserver;
- (void)willUnload;

@end
