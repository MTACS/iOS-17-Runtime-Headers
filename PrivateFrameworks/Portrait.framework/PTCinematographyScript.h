
@interface PTCinematographyScript : NSObject {
    AVAsset * _asset;
    NSArray * _baseDecisions;
    bool  _baseDecisionsAreMutable;
    <PTCinematographyScriptChanges> * _changesDelegate;
    bool  _didInternalizeTracks;
    NSMutableArray * _effectiveDecisions;
    PTCinematographyFocusFramesOptions * _focusFramesOptions;
    PTCinematographyFocusPuller * _focusPuller;
    NSArray * _frames;
    bool  _framesAreMutable;
    PTGlobalCinematographyMetadata * _globals;
    long long  _loadedTrackAllocatorState;
    float  _loadedUserAperture;
    NSMutableArray * _mutableGroupTracks;
    NSMutableArray * _mutableTracks;
    NSObject<OS_dispatch_queue> * _serialQueue;
    struct { 
        struct { 
            long long value; 
            int timescale; 
            unsigned int flags; 
            long long epoch; 
        } start; 
        struct { 
            long long value; 
            int timescale; 
            unsigned int flags; 
            long long epoch; 
        } duration; 
    }  _timeRange;
    PTCinematographyTrackAllocator * _trackAllocator;
    PTCinematographyTrackAllocator * _trackAllocatorForFocusIdentifier;
    NSArray * _trackDecisions;
    NSMutableDictionary * _trackForGroupNumber;
    NSMutableDictionary * _trackForNumber;
    NSMutableDictionary * _trackNumberForFocusIdentifier;
    float  _userAperture;
    NSMutableArray * _userDecisions;
    PTCinematographyTrack * _zeroDisparityTrack;
}

@property (nonatomic, retain) AVAsset *asset;
@property (nonatomic, retain) NSArray *baseDecisions;
@property (nonatomic) <PTCinematographyScriptChanges> *changesDelegate;
@property (nonatomic) bool didInternalizeTracks;
@property (nonatomic, retain) NSMutableArray *effectiveDecisions;
@property (nonatomic, retain) PTCinematographyFocusFramesOptions *focusFramesOptions;
@property (nonatomic, retain) PTCinematographyFocusPuller *focusPuller;
@property (nonatomic, retain) NSArray *frames;
@property (nonatomic, retain) PTGlobalCinematographyMetadata *globals;
@property (nonatomic) long long loadedTrackAllocatorState;
@property (nonatomic) float loadedUserAperture;
@property (nonatomic, retain) NSMutableArray *mutableGroupTracks;
@property (nonatomic, retain) NSMutableArray *mutableTracks;
@property (nonatomic, readonly) struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; } timeRange;
@property (nonatomic, retain) PTCinematographyTrackAllocator *trackAllocator;
@property (nonatomic, retain) PTCinematographyTrackAllocator *trackAllocatorForFocusIdentifier;
@property (nonatomic, retain) NSArray *trackDecisions;
@property (nonatomic, retain) NSMutableDictionary *trackForGroupNumber;
@property (nonatomic, retain) NSMutableDictionary *trackForNumber;
@property (nonatomic, retain) NSMutableDictionary *trackNumberForFocusIdentifier;
@property (nonatomic, readonly) NSArray *tracks;
@property (nonatomic) float userAperture;
@property (nonatomic, retain) NSMutableArray *userDecisions;
@property (nonatomic, retain) PTCinematographyTrack *zeroDisparityTrack;

+ (struct { long long x1; int x2; unsigned int x3; long long x4; })defaultMinimumUserFocusDuration;

- (void).cxx_destruct;
- (void)_addDecision:(id)arg1 toTrackDecisions:(id)arg2;
- (void)_addDecisions:(id)arg1 toTrackDecisions:(id)arg2;
- (void)_addDetectionsFromCustomTrack:(id)arg1;
- (void)_addDetectionsFromFixedFocusTrack:(id)arg1;
- (void)_addGroupDecision:(id)arg1 toTrackDecisions:(id)arg2 nextDecision:(id)arg3;
- (void)_addGroupTrack:(id)arg1;
- (void)_addTrack:(id)arg1 identifier:(long long)arg2;
- (void)_addZeroDisparityTrack;
- (id)_bestDetectionForGroupIdentifier:(long long)arg1 time:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (id)_calculateTrackDecisions;
- (id)_detectionWithGroupIdentifier:(long long)arg1 atOrBeforeTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (id)_detectionWithTrackIdentifier:(long long)arg1 atOrBeforeTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (id)_effectiveDecisionsFromBaseDecisionsRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 userDecisionsRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 endTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3;
- (id)_effectiveDecisionsFromZippedDecisions:(id)arg1 endTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (id)_existingGroupTrackForGroupIdentifier:(long long)arg1;
- (void)_internalizeBaseDecisionsFromFrames:(id)arg1;
- (void)_internalizeDetectionsFromTrack:(id)arg1;
- (void)_internalizeFocusPullerFromFrames:(id)arg1;
- (id)_internalizeGroupTrackForDetection:(id)arg1;
- (void)_internalizeLoadedFrames:(id)arg1 changesDictionary:(id)arg2 reloading:(bool)arg3;
- (id)_internalizeTrackForDetection:(id)arg1;
- (id)_internalizeTrackNumberForFocusIdentifier:(id)arg1;
- (id)_internalizeTrackWithGroupNumberFromDetection:(id)arg1;
- (id)_internalizeTrackWithNumberFromDetection:(id)arg1;
- (void)_internalizeTracksFromChangesDictionary:(id)arg1;
- (void)_internalizeTracksFromFrames:(id)arg1;
- (void)_internalizeUserApertureFromChangesDictionary:(id)arg1;
- (void)_internalizeUserDecisionsFromChangesDictionary:(id)arg1;
- (void)_internalizeUserDecisionsFromFrames:(id)arg1;
- (void)_invalidateTrackDecisions;
- (bool)_isEditCreatedTrack:(id)arg1;
- (id)_latestDetectionOfGroupIdentifier:(long long)arg1 atOrBeforeFrameIndex:(unsigned long long)arg2 timeLimit:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3;
- (id)_latestDetectionOfTrackIdentifier:(long long)arg1 atOrBeforeFrameIndex:(unsigned long long)arg2 timeLimit:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3;
- (bool)_loadWithAsset:(id)arg1 changesDictionary:(id)arg2 error:(id*)arg3;
- (void)_notifyDelegateOfChangesToDecisionsInTimeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg1;
- (void)_notifyDelegateOfChangesToFramesInTimeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg1;
- (void)_reloadTrackAllocator;
- (void)_removeAllUserTracksForReloading;
- (void)_removeDetectionsWithTrackIdentifier:(long long)arg1;
- (void)_removeTrack:(id)arg1;
- (bool)_removeUserDecision:(id)arg1;
- (bool)_resolveIfGroupDecision:(id)arg1;
- (bool)_shouldAddTrackDecision:(id)arg1 afterDecision:(id)arg2;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })_startTimeOfFixedTransitionToDecision:(id)arg1;
- (struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })_timeRangeOfTransitionfromDecision:(id)arg1 toDecision:(id)arg2;
- (struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })_timeRangeOfTransitionfromDecision:(id)arg1 toDecision:(id)arg2 didShortenTransition:(bool*)arg3;
- (long long)_trackAllocatorState;
- (id)_trackDecisionsInTimeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg1;
- (void)_updateDecisionsAndFramesInTimeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg1;
- (void)_updateEffectiveDecisionsInTimeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg1;
- (void)_updateFramesForDecision:(id)arg1 upToTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (void)_updateFramesForDecisions:(id)arg1 indexRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)_updateFramesForDecisions:(id)arg1 timeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg2;
- (void)_updateFramesForFinalDecision:(id)arg1;
- (void)_updateFramesForTransitionFromDecision:(id)arg1 toDecision:(id)arg2;
- (void)_updateFramesForTransitionFromDecision:(id)arg1 toDecision:(id)arg2 timeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg3;
- (void)_updateFramesFromDecision:(id)arg1 toDecision:(id)arg2;
- (void)_updateFramesInIndexRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 forTransition:(id)arg2 fromDetection:(id)arg3 toDetection:(id)arg4;
- (void)_updateFramesInIndexRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 forTransition:(id)arg2 fromDetection:(id)arg3 toDetection:(id)arg4 overTimeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg5;
- (void)_updateFramesInIndexRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 toFocusOnDetection:(id)arg2;
- (void)_updateFramesInIndexRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 toFocusOnTrackIdentifier:(long long)arg2;
- (void)_updateFramesInTimeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg1 forTransition:(id)arg2 fromDetection:(id)arg3 toDetection:(id)arg4;
- (void)_updateFramesInTimeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg1 toFocusOnTrackIdentifier:(unsigned long long)arg2;
- (bool)_useFixedTransition;
- (id)_userCreatedTracks;
- (id)_userDecisionDictionaries;
- (id)_userDecisionDictionariesTrimmedByTimeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg1;
- (id)_userDecisionToFocusOnDetection:(id)arg1 time:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 strong:(bool)arg3 group:(bool)arg4;
- (id)_userTrackDictionaries;
- (id)_userTrackDictionariesTrimmedByTimeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg1;
- (id)_zipBaseDecisionsRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 userDecisionsRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)addBaseDecision:(id)arg1;
- (void)addFrame:(id)arg1;
- (bool)addTrack:(id)arg1;
- (bool)addUserDecision:(id)arg1;
- (id)asset;
- (id)baseDecisions;
- (id)baseDecisionsInTimeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg1;
- (id)changesDelegate;
- (id)changesDictionary;
- (id)changesDictionaryTrimmedByTimeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg1;
- (id)decisionAfterTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (id)decisionAtOrBeforeTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (id)decisionBeforeTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (id)decisionNearestTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (id)decisionsInTimeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg1;
- (bool)didInternalizeTracks;
- (id)effectiveDecisions;
- (id)focusFramesOptions;
- (bool)focusOnDetection:(id)arg1 strong:(bool)arg2;
- (bool)focusOnGroupIdentifier:(long long)arg1 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 strong:(bool)arg3;
- (bool)focusOnTrack:(id)arg1 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 strong:(bool)arg3;
- (bool)focusOnTrackIdentifier:(long long)arg1 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 strong:(bool)arg3;
- (id)focusPuller;
- (id)frameAtTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 tolerance:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (id)frameNearestTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (id)frames;
- (id)framesInTimeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg1;
- (id)globals;
- (id)init;
- (id)loadWithAsset:(id)arg1 changesDictionary:(id)arg2 completion:(id /* block */)arg3;
- (long long)loadedTrackAllocatorState;
- (float)loadedUserAperture;
- (id)mutableGroupTracks;
- (id)mutableTracks;
- (id)primaryDecisionAtTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)reloadWithChangesDictionary:(id)arg1;
- (bool)removeAllUserDecisions;
- (bool)removeTrack:(id)arg1;
- (bool)removeUserDecision:(id)arg1;
- (id)secondaryDecisionAtTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setAsset:(id)arg1;
- (void)setBaseDecisions:(id)arg1;
- (void)setBaseDecisionsAreMutable:(bool)arg1;
- (void)setChangesDelegate:(id)arg1;
- (void)setDidInternalizeTracks:(bool)arg1;
- (void)setEffectiveDecisions:(id)arg1;
- (void)setFocusFramesOptions:(id)arg1;
- (void)setFocusPuller:(id)arg1;
- (void)setFrames:(id)arg1;
- (void)setFramesAreMutable:(bool)arg1;
- (void)setGlobals:(id)arg1;
- (void)setLoadedTrackAllocatorState:(long long)arg1;
- (void)setLoadedUserAperture:(float)arg1;
- (void)setMutableGroupTracks:(id)arg1;
- (void)setMutableTracks:(id)arg1;
- (void)setTrackAllocator:(id)arg1;
- (void)setTrackAllocatorForFocusIdentifier:(id)arg1;
- (void)setTrackDecisions:(id)arg1;
- (void)setTrackForGroupNumber:(id)arg1;
- (void)setTrackForNumber:(id)arg1;
- (void)setTrackNumberForFocusIdentifier:(id)arg1;
- (void)setUserAperture:(float)arg1;
- (void)setUserDecisions:(id)arg1;
- (void)setZeroDisparityTrack:(id)arg1;
- (struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })timeRange;
- (struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })timeRangeOfTransitionAfterDecision:(id)arg1;
- (struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })timeRangeOfTransitionBeforeDecision:(id)arg1;
- (id)trackAllocator;
- (id)trackAllocatorForFocusIdentifier;
- (id)trackDecisions;
- (id)trackForDecision:(id)arg1;
- (id)trackForGroupIdentifier:(long long)arg1;
- (id)trackForGroupNumber;
- (id)trackForIdentifier:(long long)arg1;
- (id)trackForNumber;
- (id)trackNumberForFocusIdentifier;
- (id)tracks;
- (float)userAperture;
- (id)userDecisions;
- (id)userDecisionsInTimeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg1;
- (id)zeroDisparityTrack;

@end
