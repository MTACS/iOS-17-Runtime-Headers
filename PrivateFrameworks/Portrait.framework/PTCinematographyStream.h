
@interface PTCinematographyStream : NSObject {
    PTCinematographyUserTap * _activeUserTap;
    unsigned long long  _activeVersion;
    unsigned long long  _autoFocusInFocusRegionSelect;
    bool  _autoFocusUseBlurMap;
    bool  _autoFocusUseMask;
    bool  _canCopyISPDetectionsIfMissing;
    <PTCinematographyStreamDelegate> * _delegate;
    unsigned long long  _detectionModel;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _detectorDidRunNextExpectedTime;
    bool  _didReadFocusStrategyDefault;
    unsigned long long  _focusBlurMapMode;
    unsigned long long  _frameIndex;
    float  _internalDefaultFixedFocusDisparity;
    unsigned long long  _internalDefaultFocusStrategy;
    NSString * _internalDefaultNetworkVersion;
    PTCinematographyNetwork * _network;
    PTCinematographyStreamOptions * _options;
    PTCinematographyFocusPuller * _previewFocusPuller;
    PTCinematographyFrame * _previousFrame;
    unsigned long long  _previousRecordingState;
    PTCinematographyTrackAllocator * _trackAllocator;
    float  _userAperture;
}

@property (nonatomic, retain) PTCinematographyUserTap *activeUserTap;
@property (readonly) unsigned long long activeVersion;
@property (nonatomic) unsigned long long autoFocusInFocusRegionSelect;
@property (nonatomic) bool autoFocusUseBlurMap;
@property (nonatomic) bool autoFocusUseMask;
@property (nonatomic) bool canCopyISPDetectionsIfMissing;
@property (nonatomic) <PTCinematographyStreamDelegate> *delegate;
@property (nonatomic) unsigned long long detectionModel;
@property (nonatomic) struct { long long x1; int x2; unsigned int x3; long long x4; } detectorDidRunNextExpectedTime;
@property bool didReadFocusStrategyDefault;
@property (nonatomic) unsigned long long focusBlurMapMode;
@property (nonatomic) unsigned long long frameIndex;
@property float internalDefaultFixedFocusDisparity;
@property unsigned long long internalDefaultFocusStrategy;
@property (retain) NSString *internalDefaultNetworkVersion;
@property (readonly) NSString *modelVersionString;
@property (nonatomic, retain) PTCinematographyNetwork *network;
@property (nonatomic, retain) PTCinematographyStreamOptions *options;
@property (nonatomic, retain) PTCinematographyFocusPuller *previewFocusPuller;
@property (nonatomic, retain) PTCinematographyFrame *previousFrame;
@property (nonatomic) unsigned long long previousRecordingState;
@property (nonatomic, retain) PTCinematographyTrackAllocator *trackAllocator;
@property (nonatomic) float userAperture;

+ (bool)isSupportedVersion:(unsigned long long)arg1;
+ (unsigned long long)latestVersion;

- (void).cxx_destruct;
- (id)_ANODPoseFromFTTrackMetadata:(id)arg1;
- (id)_autoFocusBlurMapFromMetadata:(id)arg1;
- (id)_autoFocusDetectionWithTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 rect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_autoFocusRectFromMetadata:(id)arg1;
- (id)_chooseClosestObjectDetection:(id)arg1;
- (id)_chooseFocusDetection:(id)arg1;
- (id)_chooseLargestAreaDetection:(id)arg1;
- (id)_copyInternalState;
- (void)_copyPreviousISPDetections:(id)arg1 toDetections:(id)arg2 time:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3;
- (id)_copyUserFocusDetectionFromDetections:(id)arg1;
- (float)_defaultAperture;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_defaultFixedFocusRectForPoint:(struct CGPoint { double x1; double x2; })arg1 disparityBuffer:(struct __CVBuffer { }*)arg2;
- (id)_detectionForFixedFocusAtNormalizedPoint:(struct CGPoint { double x1; double x2; })arg1 disparityBuffer:(struct __CVBuffer { }*)arg2;
- (id)_detectionForFixedFocusDistance:(float)arg1 rect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (unsigned long long)_detectionTypeForFTObjectKind:(unsigned long long)arg1;
- (id)_detectionsFromFTTrackingResult:(id)arg1 autoFocusRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 focusBlurMap:(id)arg3 namedSignalsPerTrack:(id)arg4 time:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg5 disparityBuffer:(struct __CVBuffer { }*)arg6;
- (bool)_detectorDidRunFromFTTrackingResult:(id)arg1 time:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (id)_disparityWeightingValue;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_fixedFocusRectForPoint:(struct CGPoint { double x1; double x2; })arg1 disparityBuffer:(struct __CVBuffer { }*)arg2;
- (float)_floatValueForAssignmentString:(id)arg1;
- (float)_focusDistanceForAutoFocusDetection:(id)arg1 lockedDisparityBufferAddress:(void*)arg2 width:(unsigned long long)arg3 height:(unsigned long long)arg4 bytesPerRow:(unsigned long long)arg5 formatType:(unsigned int)arg6 focusBlurMap:(id)arg7;
- (float)_focusDistanceForDetection:(id)arg1 lockedDisparityBufferAddress:(void*)arg2 width:(unsigned long long)arg3 height:(unsigned long long)arg4 bytesPerRow:(unsigned long long)arg5 formatType:(unsigned int)arg6;
- (id)_frameDetectionsFromFusionTrackerMetadata:(id)arg1 time:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 disparityBuffer:(struct __CVBuffer { }*)arg3;
- (id)_frameDetectionsFromMetadata:(id)arg1 time:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 disparityBuffer:(struct __CVBuffer { }*)arg3;
- (id)_frameFromDetections:(id)arg1 userAperture:(float)arg2 snapshotPolicy:(unsigned long long)arg3 disparityPixelBuffer:(struct __CVBuffer { }*)arg4;
- (void)_getFocusStrategyIfNeeded;
- (bool)_hasFusionTrackerMetadata:(id)arg1;
- (id)_inFocusRegionForFocusBlurMap:(id)arg1;
- (bool)_isFailedTapToTrackFTTapResponse:(id)arg1;
- (bool)_isFixedFocusFTTapRequest:(id)arg1;
- (bool)_isFixedFocusFTTapRequestMetadata:(id)arg1;
- (bool)_isInvalidFTTrack:(id)arg1;
- (bool)_isSuccessfulTapToTrackFTTapResponse:(id)arg1;
- (bool)_isTapToTrackFTTapRequest:(id)arg1;
- (bool)_isUserTap:(id)arg1 inFrameDetections:(id)arg2;
- (bool)_isValidNormalizedPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)_logFocusChangeForFrame:(id)arg1;
- (bool)_logUnusualDetection:(id)arg1 info:(id)arg2;
- (bool)_logUnusualDisparity:(float)arg1 kind:(id)arg2 info:(id)arg3;
- (void)_logUserTap:(id)arg1;
- (float)_minimumUserTapSeconds;
- (id)_mutableDetectionsFromFTTrackingResult:(id)arg1 namedSignalsPerTrack:(id)arg2 time:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3;
- (id)_namedSignals:(id)arg1 addingANODPoseFromFTTrackMetadata:(id)arg2;
- (id)_nextSnapshotForPolicy:(unsigned long long)arg1;
- (void)_reset;
- (void)_restoreInternalState:(id)arg1;
- (struct CGSize { double x1; double x2; })_sensorSizeFromMetadata:(id)arg1;
- (void)_setDisparityOfDetections:(id)arg1 disparityBuffer:(struct __CVBuffer { }*)arg2 focusBlurMap:(id)arg3;
- (id)_stringValueForAssignmentString:(id)arg1;
- (id)_trackingResultFromFusionTrackerMetadata:(id)arg1;
- (void)_updateDetectionModelFromMetadata:(id)arg1;
- (void)_updateDetections:(id)arg1 ifMissingISPDetectionsFromTrackingResult:(id)arg2 time:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3;
- (void)_updateFocusBlurMapModeFromMetadata:(id)arg1;
- (bool)_useSyntheticDDR;
- (float)_userDefaultFixedFocusDisparity;
- (unsigned long long)_userDefaultFocusStrategy;
- (id)_userDefaultNetworkVersion;
- (bool)_userTapEndsForBaseFocusDetection:(id)arg1;
- (bool)_userTapEndsForChangedFocusWithDisparityBuffer:(struct __CVBuffer { }*)arg1;
- (id)_userTapFromFTTapResponse:(id)arg1 frameDetections:(id)arg2 disparityBuffer:(struct __CVBuffer { }*)arg3;
- (id)_userTapFromMetadata:(id)arg1 frameDetections:(id)arg2 disparityBuffer:(struct __CVBuffer { }*)arg3;
- (bool)_userTapLockEndsAtTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_validSensorRectFromMetadata:(id)arg1;
- (id)activeUserTap;
- (unsigned long long)activeVersion;
- (void)adviseDidStartRecording;
- (void)adviseDidStopRecording;
- (unsigned long long)autoFocusInFocusRegionSelect;
- (bool)autoFocusUseBlurMap;
- (bool)autoFocusUseMask;
- (bool)canCopyISPDetectionsIfMissing;
- (id)delegate;
- (unsigned long long)detectionModel;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })detectorDidRunNextExpectedTime;
- (bool)didReadFocusStrategyDefault;
- (void)endOfStream;
- (unsigned long long)focusBlurMapMode;
- (unsigned long long)frameIndex;
- (bool)getGlobalMetadata:(id)arg1;
- (id)init;
- (id)initWithOptions:(id)arg1;
- (float)internalDefaultFixedFocusDisparity;
- (unsigned long long)internalDefaultFocusStrategy;
- (id)internalDefaultNetworkVersion;
- (id)modelVersionString;
- (id)network;
- (id)options;
- (id)previewFocusPuller;
- (id)previousFrame;
- (unsigned long long)previousRecordingState;
- (id)processColorBuffer:(struct __CVBuffer { }*)arg1 disparityBuffer:(struct __CVBuffer { }*)arg2 metadataDictionary:(id)arg3 presentationTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg4;
- (void)setActiveUserTap:(id)arg1;
- (void)setAutoFocusInFocusRegionSelect:(unsigned long long)arg1;
- (void)setAutoFocusUseBlurMap:(bool)arg1;
- (void)setAutoFocusUseMask:(bool)arg1;
- (void)setCanCopyISPDetectionsIfMissing:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDetectionModel:(unsigned long long)arg1;
- (void)setDetectorDidRunNextExpectedTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setDidReadFocusStrategyDefault:(bool)arg1;
- (void)setFocusBlurMapMode:(unsigned long long)arg1;
- (void)setFrameIndex:(unsigned long long)arg1;
- (void)setInternalDefaultFixedFocusDisparity:(float)arg1;
- (void)setInternalDefaultFocusStrategy:(unsigned long long)arg1;
- (void)setInternalDefaultNetworkVersion:(id)arg1;
- (void)setNetwork:(id)arg1;
- (void)setOptions:(id)arg1;
- (void)setPreviewFocusPuller:(id)arg1;
- (void)setPreviousFrame:(id)arg1;
- (void)setPreviousRecordingState:(unsigned long long)arg1;
- (void)setTrackAllocator:(id)arg1;
- (void)setUserAperture:(float)arg1;
- (float)smoothFocusDistance:(float)arg1 trackIdentifier:(long long)arg2 sampleCount:(unsigned long long)arg3;
- (id)trackAllocator;
- (float)userAperture;

@end
