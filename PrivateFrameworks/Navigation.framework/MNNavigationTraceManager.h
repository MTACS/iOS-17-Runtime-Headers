
@interface MNNavigationTraceManager : NSObject <GEOMotionContextProvider, MNLocationProvider, MNTracePlayerObserver, MNVirtualGarageProvider> {
    MNTraceNetworkEvent * _initialNetworkState;
    bool  _isSimulation;
    <MNLocationProviderDelegate> * _locationProviderDelegate;
    <GEOMotionContextProviderDelegate> * _motionContextProviderDelegate;
    long long  _navigationType;
    <MNNavigationTraceManagerDelegate> * _traceManagerDelegate;
    MNTracePlayer * _tracePlayer;
    MNTraceRecorder * _traceRecorder;
    <MNVirtualGarageProviderDelegate> * _virtualGarageProviderDelegate;
}

@property (nonatomic, readonly) bool assumesFullCharge;
@property (nonatomic, readonly) bool coarseModeEnabled;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <MNLocationProviderDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSBundle *effectiveBundle;
@property (nonatomic, copy) NSString *effectiveBundleIdentifier;
@property (nonatomic, readonly) double expectedGpsUpdateInterval;
@property (readonly) unsigned long long hash;
@property (nonatomic) int headingOrientation;
@property (nonatomic, readonly) bool isAuthorized;
@property (nonatomic, readonly) bool isTracePlayer;
@property (nonatomic) <GEOMotionContextProviderDelegate> *motionDelegate;
@property (nonatomic) long long navigationType;
@property (readonly) Class superclass;
@property (nonatomic, readonly) double timeScale;
@property (nonatomic) <MNNavigationTraceManagerDelegate> *traceManagerDelegate;
@property (nonatomic, readonly) MNTracePlayer *tracePlayer;
@property (nonatomic, readonly) MNTraceRecorder *traceRecorder;
@property (nonatomic, readonly) unsigned long long traceVersion;
@property (nonatomic, readonly) unsigned long long vehiclesCount;
@property (nonatomic) <MNVirtualGarageProviderDelegate> *virtualGarageDelegate;

- (void).cxx_destruct;
- (void)_copyTraceToCrashReporterDirectory:(id)arg1;
- (void)_createSymlinkForTracePath:(id)arg1;
- (id)_defaultTraceExtension;
- (id)_defaultTraceNameForDestination:(id)arg1 isSimulation:(bool)arg2;
- (bool)_isNavigating;
- (void)_recordEnvironmentInfo:(id)arg1;
- (void)_recordStylesheet:(id)arg1;
- (unsigned long long)_startIndexForNavigation;
- (id)_tracePathForTraceName:(id)arg1;
- (id)_validFilenameForTraceName:(id)arg1;
- (bool)assumesFullCharge;
- (void)close;
- (bool)coarseModeEnabled;
- (void)dealloc;
- (id)delegate;
- (id)effectiveBundle;
- (id)effectiveBundleIdentifier;
- (double)expectedGpsUpdateInterval;
- (int)headingOrientation;
- (bool)isAuthorized;
- (bool)isTracePlayer;
- (id)motionDelegate;
- (long long)navigationType;
- (void)openForPlaybackWithTracePath:(id)arg1;
- (void)openForRecordingWithTraceRecordingData:(id)arg1 traceName:(id)arg2 selectedRouteIndex:(unsigned long long)arg3 isReconnecting:(bool)arg4 isSimulation:(bool)arg5;
- (void)openForSimulationWithRoute:(id)arg1 traceRecordingData:(id)arg2 traceNameOverride:(id)arg3;
- (void)resetForActiveTileGroupChanged;
- (void)setDelegate:(id)arg1;
- (void)setEffectiveBundle:(id)arg1;
- (void)setEffectiveBundleIdentifier:(id)arg1;
- (void)setHeadingOrientation:(int)arg1;
- (void)setMotionDelegate:(id)arg1;
- (void)setNavigationType:(long long)arg1;
- (void)setTraceManagerDelegate:(id)arg1;
- (void)setVirtualGarageDelegate:(id)arg1;
- (void)startMonitoringForRegion:(id)arg1;
- (void)startMotionUpdates;
- (void)startUpdatingHeading;
- (void)startUpdatingLocation;
- (void)startUpdatingVehicleHeading;
- (void)startUpdatingVehicleSpeed;
- (void)startVirtualGarageUpdates;
- (void)stopMonitoringForRegion:(id)arg1;
- (void)stopMotionUpdates;
- (void)stopUpdatingHeading;
- (void)stopUpdatingLocation;
- (void)stopUpdatingVehicleHeading;
- (void)stopUpdatingVehicleSpeed;
- (void)stopVirtualGarageUpdates;
- (double)timeScale;
- (id)traceManagerDelegate;
- (id)tracePlayer;
- (void)tracePlayer:(id)arg1 didJumpToRouteResponse:(id)arg2 request:(id)arg3 waypoints:(id)arg4;
- (void)tracePlayer:(id)arg1 didPlayAtTime:(double)arg2;
- (void)tracePlayer:(id)arg1 didReceiveLocationError:(id)arg2;
- (void)tracePlayer:(id)arg1 didRecieveNetworkEvent:(id)arg2;
- (void)tracePlayer:(id)arg1 didSeekToTime:(double)arg2 fromTime:(double)arg3 location:(id)arg4;
- (void)tracePlayer:(id)arg1 didSeekToTransportType:(int)arg2;
- (void)tracePlayer:(id)arg1 didUpdateEVData:(id)arg2;
- (void)tracePlayer:(id)arg1 didUpdateHeading:(id)arg2;
- (void)tracePlayer:(id)arg1 didUpdateLocation:(id)arg2;
- (void)tracePlayer:(id)arg1 didUpdateMotion:(unsigned long long)arg2 exitType:(unsigned long long)arg3 confidence:(unsigned long long)arg4;
- (void)tracePlayer:(id)arg1 didUpdateVehicleHeading:(double)arg2 timestamp:(id)arg3;
- (void)tracePlayer:(id)arg1 didUpdateVehicleSpeed:(double)arg2 timestamp:(id)arg3;
- (void)tracePlayerDidPause:(id)arg1;
- (void)tracePlayerDidPauseLocationUpdates:(id)arg1;
- (void)tracePlayerDidResume:(id)arg1;
- (void)tracePlayerDidResumeLocationUpdates:(id)arg1;
- (void)tracePlayerDidStart:(id)arg1;
- (void)tracePlayerDidStayOnRoute:(id)arg1;
- (void)tracePlayerDidStop:(id)arg1;
- (id)traceRecorder;
- (unsigned long long)traceVersion;
- (void)updatedVehicleStateWithHandler:(id /* block */)arg1;
- (unsigned long long)vehiclesCount;
- (id)virtualGarageDelegate;

@end
