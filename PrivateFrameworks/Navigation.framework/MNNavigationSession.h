
@interface MNNavigationSession : NSObject <GEOConfigChangeListenerDelegate, GEOMotionContextDelegate, MNAudioManagerObserver, MNGuidanceManagerDelegate, MNIdleTimerUpdaterDelegate, MNLocationManagerHeadingObserver, MNLocationManagerObserver, MNLocationTrackerDelegate, MNSessionUpdateManagerDelegate, MNTimeAndDistanceUpdaterDelegate, MNTracePlayerObserver, MNVehicleMonitorDelegate, MNVirtualGarageManagerObserver> {
    MNTrafficIncidentAlert * _activeTrafficIncidentAlert;
    MNAudioManager * _audioManager;
    GEOApplicationAuditToken * _auditToken;
    GEOComposedWaypoint * _destination;
    unsigned long long  _displayedStepIndex;
    bool  _etaUpdatesDisabled;
    MNGuidanceManager * _guidanceManager;
    bool  _guidancePromptsEnabled;
    GEONavigationGuidanceState * _guidanceState;
    MNIdleTimerUpdater * _idleTimerUpdater;
    bool  _isAllowedToSwitchTransportTypes;
    bool  _isConnectedToCarplay;
    bool  _isSpeakingTrafficIncidentAlert;
    double  _locationProjectionTime;
    MNLocationTracker * _locationTracker;
    MNNavigationSessionLogger * _logger;
    GEOResourceManifestUpdateAssertion * _manifestUpdateAssertion;
    GEOMotionContext * _motionContext;
    MNTraceNavigationEventRecorder * _navigationEventRecorder;
    MNNavigationSessionState * _navigationSessionState;
    NSMutableArray * _navigationSessionStateListeners;
    long long  _navigationType;
    MNTraceNavigationUpdateRecorder * _navigationUpdateRecorder;
    MNObserverHashTable * _observers;
    GEOProbeCrumbs * _probeCrumbs;
    MNRouteManager * _routeManager;
    MNServerSessionStateInfo * _serverSessionStateInfo;
    NSString * _tileLoaderClient;
    MNTimeAndDistanceUpdater * _timeAndDistanceUpdater;
    MNNavigationTraceManager * _traceManager;
    MNVehicleMonitor * _vehicleMonitor;
}

@property (nonatomic, readonly) MNAudioManager *audioManager;
@property (nonatomic, readonly) GEOApplicationAuditToken *auditToken;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) GEOComposedWaypoint *destination;
@property (nonatomic) unsigned long long displayedStepIndex;
@property (nonatomic) bool guidancePromptsEnabled;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isAllowedToSwitchTransportTypes;
@property (nonatomic) bool isConnectedToCarplay;
@property (nonatomic, readonly) MNLocation *lastMatchedLocation;
@property (nonatomic, readonly) GEOMotionContext *motionContext;
@property (nonatomic, retain) MNNavigationSessionState *navigationSessionState;
@property (nonatomic, readonly) int navigationState;
@property (nonatomic, readonly) long long navigationType;
@property (nonatomic, readonly) MNRouteManager *routeManager;
@property (nonatomic, readonly) MNServerSessionStateInfo *serverSessionStateInfo;
@property (nonatomic, readonly) int state;
@property (readonly) Class superclass;
@property (nonatomic, readonly) unsigned long long targetLegIndex;
@property (nonatomic, readonly) MNNavigationTraceManager *traceManager;

- (void).cxx_destruct;
- (void)_closeTileLoader;
- (id)_locationTrackerForTransportType:(int)arg1 navigationType:(long long)arg2;
- (void)_openTileLoader;
- (void)_startAudioSession;
- (void)_startGuidanceAllowMidRouteStart:(bool)arg1 announcementsToIgnore:(id)arg2;
- (void)_startIdleTimerUpdates;
- (void)_startLocationTrackingWithInitialLocation:(id)arg1 targetLegIndex:(unsigned long long)arg2;
- (void)_startLocationUpdates;
- (void)_startMotionUpdates;
- (void)_startTravelTimeUpdates;
- (void)_startVirtualGarageUpdates;
- (void)_stopAudioSession;
- (void)_stopGuidance;
- (void)_stopIdleTimerUpdates;
- (void)_stopLocationTracking;
- (void)_stopLocationUpdates;
- (void)_stopMotionUpdates;
- (void)_stopTravelTimeUpdates;
- (void)_stopVirtualGarageUpdates;
- (void)_updateNavigationSessionState:(id)arg1;
- (void)_updateResumeRouteInfoFrom:(struct { unsigned int x1; float x2; })arg1;
- (void)addObserver:(id)arg1;
- (void)advanceToNextLeg;
- (id)audioManager;
- (void)audioManager:(id)arg1 didActivateAudioSession:(bool)arg2;
- (void)audioManager:(id)arg1 didStartSpeakingPrompt:(id)arg2;
- (id)auditToken;
- (void)changeOfflineState:(unsigned long long)arg1;
- (void)changeTransportType:(int)arg1 route:(id)arg2;
- (void)dealloc;
- (id)destination;
- (void)didChangeUserOptionsFrom:(id)arg1 to:(id)arg2;
- (void)disableNavigationCapability:(unsigned long long)arg1;
- (unsigned long long)displayedStepIndex;
- (void)enableNavigationCapability:(unsigned long long)arg1;
- (void)forceReroute;
- (void)guidanceManager:(id)arg1 announce:(id)arg2 isImportant:(bool)arg3 shortPromptType:(unsigned long long)arg4 ignorePromptStyle:(bool)arg5 stage:(unsigned long long)arg6 completionBlock:(id /* block */)arg7;
- (void)guidanceManager:(id)arg1 didProcessSpeechEvent:(id)arg2;
- (void)guidanceManager:(id)arg1 hideJunctionViewForId:(id)arg2;
- (void)guidanceManager:(id)arg1 hideLaneDirectionsForId:(id)arg2;
- (void)guidanceManager:(id)arg1 newGuidanceEventFeedback:(id)arg2;
- (void)guidanceManager:(id)arg1 showJunctionView:(id)arg2;
- (void)guidanceManager:(id)arg1 showLaneDirections:(id)arg2;
- (void)guidanceManager:(id)arg1 triggerHaptics:(int)arg2;
- (void)guidanceManager:(id)arg1 updateSignsWithARInfo:(id)arg2;
- (void)guidanceManager:(id)arg1 updateSignsWithInfo:(id)arg2;
- (void)guidanceManager:(id)arg1 updatedGuidanceEventFeedback:(id)arg2;
- (void)guidanceManager:(id)arg1 usePersistentDisplay:(bool)arg2;
- (void)guidanceManager:(id)arg1 willAnnounce:(unsigned long long)arg2 inSeconds:(double)arg3;
- (void)guidanceManager:(id)arg1 willProcessSpeechEvent:(id)arg2;
- (void)guidanceManagerBeginGuidanceUpdate:(id)arg1;
- (void)guidanceManagerEndGuidanceUpdate:(id)arg1;
- (bool)guidanceManagerIsRerouting;
- (bool)guidancePromptsEnabled;
- (void)idleTimerUpdater:(id)arg1 shouldEnableIdleTimer:(bool)arg2;
- (id)init;
- (id)initWithRouteManager:(id)arg1 auditToken:(id)arg2 traceManager:(id)arg3;
- (void)insertWaypoint:(id)arg1;
- (bool)isAllowedToSwitchTransportTypes;
- (bool)isConnectedToCarplay;
- (bool)isCurrentlySpeaking;
- (id)lastMatchedLocation;
- (void)locationManager:(id)arg1 didUpdateVehicleHeading:(double)arg2 timestamp:(id)arg3;
- (void)locationManager:(id)arg1 didUpdateVehicleSpeed:(double)arg2 timestamp:(id)arg3;
- (void)locationManagerDidPauseLocationUpdates:(id)arg1;
- (void)locationManagerDidReset:(id)arg1;
- (void)locationManagerDidResumeLocationUpdates:(id)arg1;
- (void)locationManagerFailedToUpdateLocation:(id)arg1 withError:(id)arg2;
- (bool)locationManagerShouldPauseLocationUpdates:(id)arg1;
- (void)locationManagerUpdatedHeading:(id)arg1;
- (void)locationManagerUpdatedLocation:(id)arg1;
- (void)locationTracker:(id)arg1 didArriveAtWaypoint:(id)arg2 endOfLegIndex:(unsigned long long)arg3;
- (void)locationTracker:(id)arg1 didChangeState:(int)arg2;
- (void)locationTracker:(id)arg1 didEndNavigatingWithReason:(unsigned long long)arg2;
- (void)locationTracker:(id)arg1 didEnterPreArrivalStateForWaypoint:(id)arg2 endOfLegIndex:(unsigned long long)arg3;
- (void)locationTracker:(id)arg1 didFailRerouteWithError:(id)arg2;
- (void)locationTracker:(id)arg1 didReachETAUpdatePosition:(id)arg2;
- (void)locationTracker:(id)arg1 didReceiveRouteSignalStrength:(unsigned long long)arg2;
- (void)locationTracker:(id)arg1 didReceiveTransitAlert:(id)arg2;
- (void)locationTracker:(id)arg1 didReroute:(id)arg2 newAlternateRoutes:(id)arg3 rerouteReason:(unsigned long long)arg4 request:(id)arg5 response:(id)arg6;
- (void)locationTracker:(id)arg1 didResumeNavigatingFromWaypoint:(id)arg2 endOfLegIndex:(unsigned long long)arg3 reason:(unsigned long long)arg4;
- (void)locationTracker:(id)arg1 didSuppressReroute:(id)arg2;
- (void)locationTracker:(id)arg1 didSwitchToNewTransportType:(int)arg2 newRoute:(id)arg3 request:(id)arg4 response:(id)arg5;
- (void)locationTracker:(id)arg1 didUpdateAlternateRoutes:(id)arg2;
- (void)locationTracker:(id)arg1 didUpdateArrivalInfo:(id)arg2;
- (void)locationTracker:(id)arg1 didUpdateBackgroundWalkingRoute:(id)arg2;
- (void)locationTracker:(id)arg1 didUpdateETAForRoute:(id)arg2;
- (void)locationTracker:(id)arg1 didUpdateMatchedLocation:(id)arg2;
- (void)locationTracker:(id)arg1 didUpdateTargetLegIndex:(unsigned long long)arg2;
- (void)locationTracker:(id)arg1 didUpdateVehicleParkingInfo:(id)arg2;
- (void)locationTracker:(id)arg1 dismissedTrafficIncidentAlert:(id)arg2;
- (void)locationTracker:(id)arg1 invalidatedTrafficIncidentAlert:(id)arg2;
- (void)locationTracker:(id)arg1 isApproachingEndOfLeg:(unsigned long long)arg2;
- (void)locationTracker:(id)arg1 receivedTrafficIncidentAlert:(id)arg2 responseCallback:(id /* block */)arg3;
- (void)locationTracker:(id)arg1 shouldShowChargingInfoForWaypoint:(id)arg2;
- (void)locationTracker:(id)arg1 updatedTrafficIncidentAlert:(id)arg2;
- (void)locationTrackerDidArrive:(id)arg1;
- (void)locationTrackerDidCancelReroute:(id)arg1;
- (void)locationTrackerDidEnterPreArrivalState:(id)arg1;
- (void)locationTrackerWillReroute:(id)arg1;
- (id)motionContext;
- (void)motionContextDidUpdateMotion:(id)arg1;
- (id)navigationSessionState;
- (int)navigationState;
- (long long)navigationType;
- (id)recentLocationHistory;
- (id)recentLocationHistoryForUpdateManager:(id)arg1;
- (void)removeObserver:(id)arg1;
- (void)removeWaypointAtIndex:(unsigned long long)arg1;
- (bool)repeatCurrentGuidance;
- (bool)repeatCurrentTrafficAlert;
- (void)rerouteWithWaypoints:(id)arg1;
- (void)resumeOriginalDestination;
- (id)routeInfoForUpdateManager:(id)arg1;
- (id)routeManager;
- (id)serverSessionStateInfo;
- (void)setDisplayedStepIndex:(unsigned long long)arg1;
- (void)setGuidancePromptsEnabled:(bool)arg1;
- (void)setIsConnectedToCarplay:(bool)arg1;
- (void)setIsNavigatingInLowGuidance:(bool)arg1;
- (void)setJunctionViewImageWidth:(double)arg1 height:(double)arg2;
- (void)setNavigationSessionState:(id)arg1;
- (void)startNavigationSessionWithDetails:(id)arg1;
- (int)state;
- (void)stopCurrentGuidancePrompt;
- (void)stopNavigationSessionWithReason:(unsigned long long)arg1;
- (void)switchToRoute:(id)arg1;
- (unsigned long long)targetLegIndex;
- (void)timeAndDistanceUpdater:(id)arg1 currentStepIndex:(unsigned long long)arg2 didUpdateDistanceUntilManeuver:(double)arg3 timeUntilManeuver:(double)arg4;
- (void)timeAndDistanceUpdater:(id)arg1 didUpdateDisplayETA:(id)arg2 remainingDistance:(id)arg3 batteryChargeInfo:(id)arg4;
- (double)timeSinceLastAnnouncement;
- (double)timeUntilNextAnnouncement;
- (void)traceJumpedInTime;
- (id)traceManager;
- (void)tracePlayer:(id)arg1 didJumpToRouteResponse:(id)arg2 request:(id)arg3 waypoints:(id)arg4;
- (void)tracePlayer:(id)arg1 didPlayAtTime:(double)arg2;
- (void)tracePlayer:(id)arg1 didReceiveLocationError:(id)arg2;
- (void)tracePlayer:(id)arg1 didRecieveNetworkEvent:(id)arg2;
- (void)tracePlayer:(id)arg1 didResumeNavigatingFromWaypoint:(id)arg2 endOfLegIndex:(unsigned long long)arg3 reason:(unsigned long long)arg4;
- (void)tracePlayer:(id)arg1 didSeekToTime:(double)arg2 fromTime:(double)arg3 location:(id)arg4;
- (void)tracePlayer:(id)arg1 didSeekToTransportType:(int)arg2;
- (void)tracePlayer:(id)arg1 didUpdateCurrentRoute:(id)arg2 reason:(unsigned long long)arg3;
- (void)tracePlayer:(id)arg1 didUpdateHeading:(id)arg2;
- (void)tracePlayer:(id)arg1 didUpdateLocation:(id)arg2;
- (void)tracePlayer:(id)arg1 didUpdateMotion:(unsigned long long)arg2 exitType:(unsigned long long)arg3 confidence:(unsigned long long)arg4;
- (void)tracePlayer:(id)arg1 didUpdateVehicleHeading:(double)arg2 timestamp:(id)arg3;
- (void)tracePlayer:(id)arg1 didUpdateVehicleSpeed:(double)arg2 timestamp:(id)arg3;
- (void)tracePlayerDidPause:(id)arg1;
- (void)tracePlayerDidPauseLocationUpdates:(id)arg1;
- (void)tracePlayerDidResume:(id)arg1;
- (void)tracePlayerDidResumeLocationUpdates:(id)arg1;
- (void)tracePlayerDidStart:(id)arg1;
- (void)tracePlayerDidStayOnRoute:(id)arg1;
- (void)tracePlayerDidStop:(id)arg1;
- (void)updateDestination:(id)arg1;
- (void)updateManager:(id)arg1 didReceiveETAResponse:(id)arg2;
- (void)updateManager:(id)arg1 didReceiveTransitError:(id)arg2;
- (void)updateManager:(id)arg1 didReceiveTransitUpdateResponse:(id)arg2;
- (void)updateManager:(id)arg1 didReceiveTransitUpdates:(id)arg2;
- (void)updateManager:(id)arg1 willSendETARequest:(id)arg2;
- (void)updateManager:(id)arg1 willSendTransitUpdateRequestForRouteIDs:(id)arg2;
- (void)updateManager:(id)arg1 willSendTransitUpdateRequests:(id)arg2;
- (void)updateWithInitialLocation:(id)arg1;
- (id)userLocationForUpdateManager:(id)arg1;
- (void)valueChangedForGEOConfigKey:(struct { unsigned int x1; void *x2; })arg1;
- (void)vehicleMonitorDidDisconnectFromVehicle:(id)arg1;
- (bool)vibrateForPrompt:(unsigned long long)arg1;
- (void)virtualGarageManager:(id)arg1 didUpdateSelectedVehicle:(id)arg2;
- (bool)wantsETAUpdates;

@end
