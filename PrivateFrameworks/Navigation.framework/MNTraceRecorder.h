
@interface MNTraceRecorder : NSObject <MNLocationRecorder> {
    bool  _closed;
    bool  _corrupted;
    bool  _created;
    id /* block */  _errorHandler;
    unsigned long long  _etaTrafficUpdateCount;
    NSMapTable * _eventsPendingLocationReference;
    unsigned long long  _lastLaneEventHash;
    bool  _lastPauseSpokenAudio;
    long long  _lastVoiceGuidanceSetting;
    MNTracePreparedStatement * _recordAudioSettingStatement;
    MNTracePreparedStatement * _recordCompassHeading;
    MNTracePreparedStatement * _recordDebugSettingStatement;
    MNTracePreparedStatement * _recordDirectionsStatement;
    MNTracePreparedStatement * _recordETAUStatement;
    MNTracePreparedStatement * _recordEnvironmentInfoStatement;
    MNTracePreparedStatement * _recordLocationErrorStatement;
    MNTracePreparedStatement * _recordLocationStatement;
    MNTracePreparedStatement * _recordMatchInfoStatement;
    MNTracePreparedStatement * _recordMotionData;
    MNTracePreparedStatement * _recordNavigationEvent;
    MNTracePreparedStatement * _recordNavigationUpdate;
    MNTracePreparedStatement * _recordRealtimeTransitUpdateRequest;
    MNTracePreparedStatement * _recordRealtimeTransitUpdateResponse;
    MNTracePreparedStatement * _recordRealtimeTransitUpdateResponseError;
    MNTracePreparedStatement * _recordStylesheetStatement;
    MNTracePreparedStatement * _recordVehicleHeading;
    MNTracePreparedStatement * _recordVehicleSpeed;
    MNTracePreparedStatement * _recordVirtualGarageVehicleState;
    NSDate * _recordingCompassHeadingLastDate;
    NSDate * _recordingStartTime;
    unsigned long long  _routeRequestCount;
    MNTrace * _trace;
    NSString * _tracePath;
    MNTracePreparedStatement * _updateNavigationEventLocationID;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSDate *recordingStartTime;
@property (readonly) Class superclass;
@property (nonatomic, readonly) MNTrace *trace;

- (void).cxx_destruct;
- (void)_closeTraceDB;
- (void)_dispatchWrite:(id /* block */)arg1;
- (void)_executeStatementForQuery:(id)arg1 handler:(id /* block */)arg2;
- (void)_initializeTraceDB;
- (bool)_isTracePathValid:(id)arg1;
- (void)_logError:(id)arg1 resultCode:(int)arg2;
- (void)_logSqliteErrorWithResult:(int)arg1 file:(const char *)arg2 line:(int)arg3;
- (void)_prepareStatements;
- (void)_recordLocationEvent:(long long)arg1 recordingTimestamp:(double)arg2 coordinate:(struct CLLocationCoordinate2D { double x1; double x2; })arg3 rawCoordinate:(struct CLLocationCoordinate2D { double x1; double x2; })arg4 timestamp:(double)arg5 horizontalAccuracy:(double)arg6 verticalAccuracy:(double)arg7 altitude:(double)arg8 speed:(double)arg9 speedAccuracy:(double)arg10 course:(double)arg11 rawCourse:(double)arg12 type:(int)arg13 courseAccuracy:(double)arg14 correctedCoordinate:(struct CLLocationCoordinate2D { double x1; double x2; })arg15 correctedCourse:(double)arg16 matchType:(int)arg17 activeTransportType:(int)arg18 matchInfo:(id)arg19 correctedLocation:(id)arg20 speedLimit:(int)arg21 shieldText:(id)arg22 shieldType:(int)arg23;
- (void)_recordLocationEvent:(long long)arg1 recordingTimestamp:(double)arg2 location:(id)arg3 correctedLocation:(id)arg4;
- (void)_recordLocationMatchInfoOnWriteQueue:(id)arg1 forLocationID:(int)arg2;
- (void)_recordNavigationUpdate:(long long)arg1 parameters:(id)arg2;
- (void)_updateForExistingTrace;
- (void)_updateNavigationEventsWithLocationReference:(id)arg1;
- (void)beginTransaction;
- (void)endTransaction;
- (id)init;
- (void)recordAudioSetting:(bool)arg1 voiceGuidance:(long long)arg2;
- (void)recordCompassHeading:(double)arg1 magneticHeading:(double)arg2 accuracy:(double)arg3 timestamp:(id)arg4;
- (void)recordDebugSetting:(id)arg1 settingValue:(id)arg2;
- (void)recordDepartWaypoint:(id)arg1 legIndex:(unsigned long long)arg2 departureReason:(unsigned long long)arg3;
- (void)recordDirectionsRequest:(id)arg1 response:(id)arg2 error:(id)arg3 waypoints:(id)arg4 selectedRouteIndex:(unsigned long long)arg5 requestTimestamp:(double)arg6 responseTimestamp:(double)arg7;
- (void)recordETAURequest:(id)arg1 response:(id)arg2 error:(id)arg3 destinationName:(id)arg4 requestTimestamp:(double)arg5 responseTimestamp:(double)arg6;
- (void)recordEnvironmentInfo:(id)arg1 value:(id)arg2;
- (void)recordError:(id)arg1;
- (void)recordInitialCourse:(double)arg1;
- (void)recordLocation:(id)arg1 correctedLocation:(id)arg2;
- (void)recordLocation:(id)arg1 rawLocation:(id)arg2;
- (void)recordLocation:(id)arg1 rawLocation:(id)arg2 timestamp:(double)arg3;
- (void)recordLocation:(id)arg1 timestamp:(double)arg2;
- (void)recordLocationUpdatePause;
- (void)recordLocationUpdateResume;
- (void)recordMiscInfo:(id)arg1 value:(id)arg2;
- (void)recordMotionUpdate:(unsigned long long)arg1 exitType:(unsigned long long)arg2 confidence:(unsigned long long)arg3;
- (void)recordNavigationEvent:(long long)arg1 forLocation:(id)arg2 description:(id)arg3;
- (void)recordRouteChangeWithIndex:(unsigned long long)arg1 directionsResponseID:(id)arg2 etauResponseID:(id)arg3 rerouteReason:(unsigned long long)arg4;
- (void)recordSimulatedCoordinate:(struct CLLocationCoordinate2D { double x1; double x2; })arg1 course:(double)arg2 altitude:(double)arg3 speed:(double)arg4 timestamp:(double)arg5 activeTransportType:(int)arg6;
- (void)recordStylesheet:(id)arg1 data:(id)arg2;
- (void)recordTransitUpdateError:(id)arg1;
- (void)recordTransitUpdateRequest:(id)arg1 withTimestamp:(double)arg2;
- (void)recordTransitUpdateResponse:(id)arg1;
- (void)recordVehicleHeading:(double)arg1 timestamp:(id)arg2;
- (void)recordVehicleSpeed:(double)arg1 timestamp:(id)arg2;
- (void)recordVirtualGarageVehicleState:(id)arg1 isDifferentVehicle:(bool)arg2;
- (id)recordingStartTime;
- (void)resetLocationsForSimulation;
- (void)saveTraceSynchronously;
- (void)saveTraceWithCompletionHandler:(id /* block */)arg1;
- (void)setIsSimulation:(bool)arg1;
- (void)setRecordingStartTime:(id)arg1;
- (void)setRouteGenius:(bool)arg1;
- (void)startWritingTraceToPath:(id)arg1 withErrorHandler:(id /* block */)arg2;
- (double)timeSinceRecordingBegan;
- (id)trace;

@end
