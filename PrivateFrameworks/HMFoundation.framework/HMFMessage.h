
@interface HMFMessage : HMFObject <NSCopying, NSMutableCopying, NSSecureCoding> {
    HMFMessageInternal * _internal;
}

@property (nonatomic, readonly) HMFActivity *activity;
@property (nonatomic, readonly, copy) NSString *applicationBundleIdentifier;
@property (getter=isAuthorizedForHomeDataAccess, nonatomic, readonly) bool authorizedForHomeDataAccess;
@property (getter=isAuthorizedForLocationAccess, nonatomic, readonly) bool authorizedForLocationAccess;
@property (getter=isAuthorizedForMicrophoneAccess, nonatomic, readonly) bool authorizedForMicrophoneAccess;
@property (getter=isBackground, nonatomic, readonly) bool background;
@property (readonly) NSString *clientName;
@property (nonatomic, readonly, copy) NSString *companionAppBundleIdentifier;
@property (nonatomic, retain) HMFMessageDestination *destination;
@property (getter=isEntitledForAPIAccess, nonatomic, readonly) bool entitledForAPIAccess;
@property (getter=isEntitledForAssistantIdentifiers, nonatomic, readonly) bool entitledForAssistantIdentifiers;
@property (getter=isEntitledForBackgroundMode, nonatomic, readonly) bool entitledForBackgroundMode;
@property (getter=isEntitledForHomeLocationAccess, nonatomic, readonly) bool entitledForHomeLocationAccess;
@property (getter=isEntitledForHomeLocationFeedbackAccess, nonatomic, readonly) bool entitledForHomeLocationFeedbackAccess;
@property (getter=isEntitledForSPIAccess, nonatomic, readonly) bool entitledForSPIAccess;
@property (getter=isEntitledForSecureAccess, nonatomic, readonly) bool entitledForSecureAccess;
@property (getter=isEntitledForShortcutsAutomationAccess, nonatomic, readonly) bool entitledForShortcutsAutomationAccess;
@property (getter=isEntitledForStateDump, nonatomic, readonly) bool entitledForStateDump;
@property (getter=isEntitledToProvideAccessorySetupPayload, nonatomic, readonly) bool entitledToProvideAccessorySetupPayload;
@property (getter=isEntitledToProvideMatterSetupPayload, nonatomic, readonly) bool entitledToProvideMatterSetupPayload;
@property (nonatomic, readonly) unsigned long long entitlements;
@property (readonly, copy) HMFFlow *flow;
@property (nonatomic, readonly, copy) NSDictionary *headers;
@property (getter=requiresHomeLocationEntitlement, nonatomic, readonly) bool homeLocationEntitlementRequired;
@property (nonatomic, copy) NSUUID *identifier;
@property (getter=isInternal, nonatomic, readonly) bool internal;
@property (nonatomic, readonly) HMFMessageInternal *internal;
@property (getter=isLocationAuthorized, nonatomic, readonly) bool locationAuthorized;
@property (nonatomic, copy) NSDictionary *messagePayload;
@property (nonatomic, readonly, copy) NSString *name;
@property (readonly) HMDXPCClientConnection *proxyConnection;
@property (nonatomic, readonly) long long qualityOfService;
@property (getter=isRemote, nonatomic, readonly) bool remote;
@property (nonatomic, readonly) unsigned long long remoteResponseRestriction;
@property (nonatomic, readonly) unsigned long long remoteRestriction;
@property (nonatomic, readonly) HMDRemoteMessageSenderContext *remoteSenderContext;
@property (nonatomic, readonly) HMDDevice *remoteSourceDevice;
@property (nonatomic, readonly) NSString *remoteSourceID;
@property (nonatomic, readonly) NSString *remoteToID;
@property (nonatomic, readonly) HAPPairingIdentity *remoteUserPairingIdentity;
@property (nonatomic, readonly) bool requiresCameraClipsEntitlement;
@property (nonatomic, readonly) bool requiresMatterSetupPayloadEntitlement;
@property (nonatomic, readonly) bool requiresMultiUserSetupEntitlement;
@property (nonatomic, readonly) bool requiresNoSPIEntitlement;
@property (nonatomic, readonly) bool requiresPersonManagerEntitlement;
@property (nonatomic, readonly) bool requiresSPIEntitlement;
@property (nonatomic, readonly) bool requiresSetupPayloadEntitlement;
@property (nonatomic, readonly) bool requiresWalletKeyEntitlement;
@property (nonatomic, copy) id /* block */ responseHandler;
@property (getter=isSecureRemote, nonatomic, readonly) bool secureRemote;
@property (nonatomic, readonly) HMDXPCMessageSendPolicy *sendPolicy;
@property (nonatomic, readonly) int sourcePid;
@property (nonatomic, readonly) double timeout;
@property (readonly) HMDBackingStoreTransactionActions *transactionResult;
@property (nonatomic, readonly) HMFMessageTransport *transport;
@property (nonatomic, readonly, copy) NSDictionary *userInfo;

// Image: /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation

+ (id)activityNameWithMessageName:(id)arg1;
+ (id)allowedClassesForXPC;
+ (id)messageWithMessage:(id)arg1 messagePayload:(id)arg2;
+ (id)messageWithMessage:(id)arg1 messagePayload:(id)arg2 responseHandler:(id /* block */)arg3;
+ (id)messageWithName:(id)arg1 destination:(id)arg2 payload:(id)arg3;
+ (id)messageWithName:(id)arg1 identifier:(id)arg2 messagePayload:(id)arg3;
+ (id)messageWithName:(id)arg1 messagePayload:(id)arg2;
+ (id)messageWithName:(id)arg1 messagePayload:(id)arg2 responseHandler:(id /* block */)arg3;
+ (id)messageWithName:(id)arg1 qualityOfService:(long long)arg2 destination:(id)arg3 payload:(id)arg4;
+ (id)shortDescription;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)URLForKey:(id)arg1;
- (void)__initWithInternalMessage:(id)arg1;
- (id)activity;
- (id)arrayForKey:(id)arg1;
- (id)arrayOfDateComponentsForKey:(id)arg1;
- (bool)boolForKey:(id)arg1;
- (bool)boolForKey:(id)arg1 keyPresent:(bool*)arg2;
- (id)calendarForKey:(id)arg1;
- (id)copy;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)dataForKey:(id)arg1;
- (id)dateComponentsForKey:(id)arg1;
- (id)dateForKey:(id)arg1;
- (id)debugDescription;
- (id)description;
- (id)descriptionWithPointer:(bool)arg1;
- (id)destination;
- (id)dictionaryForKey:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)errorForKey:(id)arg1;
- (id)fileHandleForKey:(id)arg1;
- (id)flow;
- (id)headers;
- (id)identifier;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithInternalMessage:(id)arg1;
- (id)initWithName:(id)arg1 destination:(id)arg2 payload:(id)arg3;
- (id)initWithName:(id)arg1 identifier:(id)arg2 messagePayload:(id)arg3 responseHandler:(id /* block */)arg4;
- (id)initWithName:(id)arg1 qualityOfService:(long long)arg2 destination:(id)arg3 payload:(id)arg4;
- (id)initWithName:(id)arg1 qualityOfService:(long long)arg2 destination:(id)arg3 userInfo:(id)arg4 headers:(id)arg5 payload:(id)arg6;
- (id)internal;
- (id)logEventSession;
- (id)messagePayload;
- (id)mutableCopy;
- (id)mutableCopyWithZone:(struct _NSZone { }*)arg1;
- (id)name;
- (id)nullForKey:(id)arg1;
- (id)numberForKey:(id)arg1;
- (id)predicateForKey:(id)arg1;
- (long long)qualityOfService;
- (bool)respondWithError:(id)arg1;
- (bool)respondWithOutcomeOf:(id)arg1;
- (bool)respondWithPayload:(id)arg1;
- (bool)respondWithPayload:(id)arg1 error:(id)arg2;
- (bool)respondWithSuccess;
- (id /* block */)responseHandler;
- (void)setDestination:(id)arg1;
- (id)setForKey:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setLogEventSession:(id)arg1;
- (void)setMessagePayload:(id)arg1;
- (void)setResponseHandler:(id /* block */)arg1;
- (id)shortDescription;
- (id)stringForKey:(id)arg1;
- (id)timeZoneForKey:(id)arg1;
- (double)timeout;
- (id)transport;
- (id)unarchivedObjectForKey:(id)arg1 ofClasses:(id)arg2;
- (id)userInfo;
- (id)uuidForKey:(id)arg1;

// Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon

+ (id)entitledMessageWithName:(id)arg1 identifier:(id)arg2 messagePayload:(id)arg3;
+ (id)entitledMessageWithName:(id)arg1 messagePayload:(id)arg2;
+ (id)homeLocationAuthorizedAndEntitledMessageWithName:(id)arg1 target:(id)arg2 messagePayload:(id)arg3;
+ (id)internalMessageWithName:(id)arg1 destination:(id)arg2 messagePayload:(id)arg3;
+ (id)internalMessageWithName:(id)arg1 messagePayload:(id)arg2;
+ (id)internalMessageWithName:(id)arg1 messagePayload:(id)arg2 responseHandler:(id /* block */)arg3;
+ (id)locationAuthorizedMessageWithName:(id)arg1 messagePayload:(id)arg2;
+ (id)nonSPIEntitledMessageWithName:(id)arg1 messagePayload:(id)arg2;

- (id)applicationBundleIdentifier;
- (id)clientName;
- (id)companionAppBundleIdentifier;
- (unsigned long long)entitlements;
- (unsigned long long)homeManagerOptions;
- (bool)isAuthorizedForHomeDataAccess;
- (bool)isAuthorizedForLocationAccess;
- (bool)isAuthorizedForMicrophoneAccess;
- (bool)isBackground;
- (bool)isEntitledForAPIAccess;
- (bool)isEntitledForAssistantIdentifiers;
- (bool)isEntitledForBackgroundMode;
- (bool)isEntitledForHomeLocationAccess;
- (bool)isEntitledForHomeLocationFeedbackAccess;
- (bool)isEntitledForSPIAccess;
- (bool)isEntitledForSecureAccess;
- (bool)isEntitledForShortcutsAutomationAccess;
- (bool)isEntitledForStateDump;
- (bool)isEntitledToProvideAccessorySetupPayload;
- (bool)isEntitledToProvideMatterSetupPayload;
- (bool)isInternal;
- (bool)isLocationAuthorized;
- (bool)isRemote;
- (bool)isRequestType;
- (bool)isSecureRemote;
- (bool)isSingleReadWriteRequest;
- (id)matchingRemoteIdentityUserForHome:(id)arg1;
- (id)proxyConnection;
- (unsigned long long)remoteResponseRestriction;
- (unsigned long long)remoteRestriction;
- (id)remoteSenderContext;
- (id)remoteSourceDevice;
- (id)remoteSourceID;
- (id)remoteToID;
- (id)remoteUserPairingIdentity;
- (bool)requiresCameraClipsEntitlement;
- (bool)requiresHomeLocationEntitlement;
- (bool)requiresMatterSetupPayloadEntitlement;
- (bool)requiresMultiUserSetupEntitlement;
- (bool)requiresNoSPIEntitlement;
- (bool)requiresPersonManagerEntitlement;
- (bool)requiresSPIEntitlement;
- (bool)requiresSetupPayloadEntitlement;
- (bool)requiresWalletKeyEntitlement;
- (id)sendPolicy;
- (int)sourcePid;
- (id)transactionResult;
- (id)userForHome:(id)arg1;

// Image: /System/Library/PrivateFrameworks/HomeKitDaemonLegacy.framework/HomeKitDaemonLegacy

+ (id)entitledMessageWithName:(id)arg1 identifier:(id)arg2 messagePayload:(id)arg3;
+ (id)entitledMessageWithName:(id)arg1 messagePayload:(id)arg2;
+ (id)homeLocationAuthorizedAndEntitledMessageWithName:(id)arg1 target:(id)arg2 messagePayload:(id)arg3;
+ (id)internalMessageWithName:(id)arg1 destination:(id)arg2 messagePayload:(id)arg3;
+ (id)internalMessageWithName:(id)arg1 messagePayload:(id)arg2;
+ (id)internalMessageWithName:(id)arg1 messagePayload:(id)arg2 responseHandler:(id /* block */)arg3;
+ (id)locationAuthorizedMessageWithName:(id)arg1 messagePayload:(id)arg2;
+ (id)nonSPIEntitledMessageWithName:(id)arg1 messagePayload:(id)arg2;

- (id)applicationBundleIdentifier;
- (id)clientName;
- (id)companionAppBundleIdentifier;
- (unsigned long long)entitlements;
- (unsigned long long)homeManagerOptions;
- (bool)isAuthorizedForHomeDataAccess;
- (bool)isAuthorizedForLocationAccess;
- (bool)isAuthorizedForMicrophoneAccess;
- (bool)isBackground;
- (bool)isEntitledForAPIAccess;
- (bool)isEntitledForAssistantIdentifiers;
- (bool)isEntitledForBackgroundMode;
- (bool)isEntitledForHomeLocationAccess;
- (bool)isEntitledForHomeLocationFeedbackAccess;
- (bool)isEntitledForSPIAccess;
- (bool)isEntitledForSecureAccess;
- (bool)isEntitledForShortcutsAutomationAccess;
- (bool)isEntitledForStateDump;
- (bool)isEntitledToProvideAccessorySetupPayload;
- (bool)isEntitledToProvideMatterSetupPayload;
- (bool)isInternal;
- (bool)isLocationAuthorized;
- (bool)isRemote;
- (bool)isSecureRemote;
- (bool)isSingleReadWriteRequest;
- (id)matchingRemoteIdentityUserForHome:(id)arg1;
- (id)proxyConnection;
- (unsigned long long)remoteResponseRestriction;
- (unsigned long long)remoteRestriction;
- (id)remoteSenderContext;
- (id)remoteSourceDevice;
- (id)remoteSourceID;
- (id)remoteToID;
- (id)remoteUserPairingIdentity;
- (bool)requiresCameraClipsEntitlement;
- (bool)requiresHomeLocationEntitlement;
- (bool)requiresMatterSetupPayloadEntitlement;
- (bool)requiresMultiUserSetupEntitlement;
- (bool)requiresNoSPIEntitlement;
- (bool)requiresPersonManagerEntitlement;
- (bool)requiresSPIEntitlement;
- (bool)requiresSetupPayloadEntitlement;
- (bool)requiresWalletKeyEntitlement;
- (id)sendPolicy;
- (int)sourcePid;
- (id)transactionResult;
- (id)userForHome:(id)arg1;

@end
