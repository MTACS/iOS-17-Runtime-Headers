
@interface TPSTipStatus : NSObject <NSCopying, NSSecureCoding> {
    NSString * _clonedFromIdentifier;
    NSDate * _contentViewedDate;
    NSString * _correlationIdentifier;
    NSDate * _dateForTriggerRestartTracking;
    NSMutableArray * _desiredOutcomePerformedDates;
    unsigned long long  _displayType;
    bool  _expired;
    NSDate * _hintDismissalDate;
    NSMutableArray * _hintDisplayedDates;
    NSDate * _hintEligibleDate;
    long long  _hintIneligibleReason;
    NSMutableArray * _hintNotDisplayedDueToFrequencyControlDates;
    NSDate * _hintWouldHaveBeenDisplayedDate;
    NSString * _identifier;
    NSString * _lastDisplayContext;
    NSString * _lastUsedVersion;
    NSString * _modelVersion;
    bool  _overrideFrequencyControl;
    bool  _overrideHoldout;
    bool  _preconditionMatched;
    NSDate * _savedDate;
    NSMutableDictionary * _userInfo;
    NSString * _variantIdentifier;
}

@property (nonatomic, copy) NSString *clonedFromIdentifier;
@property (getter=isContentViewed, nonatomic, readonly) bool contentViewed;
@property (nonatomic, copy) NSDate *contentViewedDate;
@property (nonatomic, copy) NSString *correlationIdentifier;
@property (nonatomic, copy) NSDate *dateForTriggerRestartTracking;
@property (getter=isDesiredOutcomePerformed, nonatomic, readonly) bool desiredOutcomePerformed;
@property (nonatomic, copy) NSArray *desiredOutcomePerformedDates;
@property (nonatomic) unsigned long long displayType;
@property (getter=isExpired, nonatomic) bool expired;
@property (nonatomic, copy) NSDate *hintDismissalDate;
@property (getter=isHintDismissed, nonatomic, readonly) bool hintDismissed;
@property (getter=isHintDisplayed, nonatomic, readonly) bool hintDisplayed;
@property (nonatomic, copy) NSArray *hintDisplayedDates;
@property (getter=isHintDisplayedOnAnyDevice, nonatomic, readonly) bool hintDisplayedOnAnyDevice;
@property (getter=isHintDisplayedOnCloudDevices, nonatomic, readonly) bool hintDisplayedOnCloudDevices;
@property (nonatomic, copy) NSDate *hintEligibleDate;
@property (getter=isHintInelgibile, nonatomic, readonly) bool hintInelgibile;
@property (nonatomic) long long hintIneligibleReason;
@property (nonatomic, copy) NSArray *hintNotDisplayedDueToFrequencyControlDates;
@property (nonatomic, copy) NSDate *hintWouldHaveBeenDisplayedDate;
@property (nonatomic, copy) NSString *identifier;
@property (nonatomic, copy) NSString *lastDisplayContext;
@property (nonatomic, copy) NSString *lastUsedVersion;
@property (nonatomic, copy) NSString *modelVersion;
@property (nonatomic) bool overrideFrequencyControl;
@property (nonatomic) bool overrideHoldout;
@property (getter=isPreconditionMatched, nonatomic) bool preconditionMatched;
@property (nonatomic, copy) NSDate *savedDate;
@property (nonatomic, readonly) unsigned long long usageFlags;
@property (nonatomic, copy) NSDictionary *userInfo;
@property (nonatomic, copy) NSString *variantIdentifier;

+ (id)_userInfoClasses;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (void)addDesiredOutcomePerformedDate:(id)arg1;
- (void)addHintDisplayedDate:(id)arg1;
- (void)addHintNotDisplayedDueToFrequencyControlDate:(id)arg1;
- (id)clonedFromIdentifier;
- (long long)compare:(id)arg1;
- (id)contentViewedDate;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)correlationIdentifier;
- (id)dateForTriggerRestartTracking;
- (id)debugDescription;
- (id)desiredOutcomePerformedDates;
- (unsigned long long)displayType;
- (void)encodeWithCoder:(id)arg1;
- (id)hintDismissalDate;
- (id)hintDisplayedDates;
- (id)hintEligibleDate;
- (long long)hintIneligibleReason;
- (id)hintNotDisplayedDueToFrequencyControlDates;
- (id)hintWouldHaveBeenDisplayedDate;
- (id)identifier;
- (id)initWithCoder:(id)arg1;
- (id)initWithIdentifier:(id)arg1;
- (bool)isContentViewed;
- (bool)isDesiredOutcomePerformed;
- (bool)isExpired;
- (bool)isHintDismissed;
- (bool)isHintDisplayed;
- (bool)isHintDisplayedOnAnyDevice;
- (bool)isHintDisplayedOnCloudDevices;
- (bool)isHintInelgibile;
- (bool)isPreconditionMatched;
- (bool)isUserKnew;
- (id)lastDisplayContext;
- (id)lastUsedVersion;
- (id)modelVersion;
- (bool)overrideFrequencyControl;
- (bool)overrideHoldout;
- (bool)reenrollIfAllowed;
- (void)removeHintEligibleDateStatus;
- (void)removeUserInfo;
- (id)savedDate;
- (void)setClonedFromIdentifier:(id)arg1;
- (void)setContentViewedDate:(id)arg1;
- (void)setCorrelationIdentifier:(id)arg1;
- (void)setDateForTriggerRestartTracking:(id)arg1;
- (void)setDesiredOutcomePerformedDates:(id)arg1;
- (void)setDisplayType:(unsigned long long)arg1;
- (void)setExpired:(bool)arg1;
- (void)setHintDismissalDate:(id)arg1;
- (void)setHintDisplayedDates:(id)arg1;
- (void)setHintEligibleDate:(id)arg1;
- (void)setHintIneligibleReason:(long long)arg1;
- (void)setHintNotDisplayedDueToFrequencyControlDates:(id)arg1;
- (void)setHintWouldHaveBeenDisplayedDate:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setLastDisplayContext:(id)arg1;
- (void)setLastUsedVersion:(id)arg1;
- (void)setModelVersion:(id)arg1;
- (void)setOverrideFrequencyControl:(bool)arg1;
- (void)setOverrideHoldout:(bool)arg1;
- (void)setPreconditionMatched:(bool)arg1;
- (void)setSavedDate:(id)arg1;
- (void)setUserInfo:(id)arg1;
- (void)setVariantIdentifier:(id)arg1;
- (void)updateUserInfoValue:(id)arg1 forKey:(id)arg2;
- (unsigned long long)usageFlags;
- (id)userInfo;
- (id)variantIdentifier;

@end
