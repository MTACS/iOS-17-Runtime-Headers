
@interface DBDashboard : NSObject <CARSessionCommandObserving, CRSInCallAssertionServiceObserver, DBAppAlertPresenting, DBEnvironment, DBEnvironmentConfigurationObserving, DBLockoutControllerDelegate, DBNotificationViewControllerDelegate, DBSystemAlertPresenting, DBWorkspaceObserver> {
    id  _activeCallScreenBorrowToken;
    UIViewController * _alertViewController;
    int  _connectedNotifyToken;
    UIView * _cornerRadiusView;
    UIWindow * _cornerRadiusWindow;
    double  _currentCornerRadius;
    DBDashboardStateProvider * _dashboardStateProvider;
    <BSInvalidatable> * _dispatchingAssertion;
    <BSInvalidatable> * _dispatchingAssertionACBack;
    <BSInvalidatable> * _dispatchingAssertionACHome;
    <BSInvalidatable> * _dispatchingAssertionACSelect;
    <BSInvalidatable> * _dispatchingAssertionTelephonyDrop;
    CARDisplayInfo * _displayInfo;
    DBEnvironmentConfiguration * _environmentConfiguration;
    DBFocusController * _focusController;
    DBFocusMovementManager * _focusMovementManager;
    DBStatusBarHomeButtonStateManager * _homeButtonStateManager;
    NSMutableDictionary * _identifierToAppInfoMap;
    NSMutableDictionary * _identifierToAppScenesMap;
    NSMutableDictionary * _identifierToForegroundAppScenesMap;
    UIView * _interestingView;
    UIWindow * _interestingWindow;
    DBDashboardLayoutEngine * _layoutEngine;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    DBLockOutController * _lockOutController;
    bool  _lock_hasHandledConnect;
    bool  _lock_hasPendingRequestUITake;
    bool  _lock_invalidated;
    UIWindow * _mainWindow;
    DBNotificationViewController * _notificationViewController;
    DBNotificationWindow * _notificationWindow;
    DBNowPlayingObserver * _nowPlayingObserver;
    <BSInvalidatable> * _oemScreenLayoutElementAssertion;
    bool  _pendingInCallServiceActivation;
    <BSInvalidatable> * _preventPasscodeLockToken;
    <BSInvalidatable> * _preventSpuriousScreenUndimToken;
    UIWindow * _resizeWindow;
    DBDashboardRootViewController * _rootViewController;
    NSHashTable * _sceneObservers;
    UIScreen * _screen;
    bool  _screenAvailable;
    DBScreenshotManager * _screenshotManager;
    bool  _showingApp;
    SiriActivityAssertion * _siriButtonAssertion;
    SiriLongPressButtonSource * _siriButtonSource;
    SiriDirectActionSource * _siriDirectActionSource;
    <SiriAssertion> * _siriPrewarmAssertion;
    double  _siriPrewarmTimestamp;
    DBSiriViewController * _siriViewController;
    DBSplashScreenAlert * _splashScreenAlert;
    FBScene * _statusBarHostScene;
    UIWindow * _statusBarHostWindow;
    <UIScenePresenter> * _statusBarScenePresenter;
    DBStatusBarStateProvider * _statusBarStateProvider;
    DBRootStatusBarViewController * _statusBarViewController;
    DBStatusBarWindow * _statusBarWindow;
    RBSProcessMonitor * _templateAppProcessMonitor;
    DBUserAlertServer * _userAlertServer;
    DBWallpaperViewController * _wallpaperViewController;
    UIWindowScene * _windowScene;
    DBWorkspace * _workspace;
    DBDashboardWorkspaceOwner * _workspaceOwner;
}

@property (nonatomic, readonly) NSString *activeBundleIdentifier;
@property (nonatomic, retain) id activeCallScreenBorrowToken;
@property (nonatomic, retain) UIViewController *alertViewController;
@property (nonatomic) int connectedNotifyToken;
@property (nonatomic, retain) UIView *cornerRadiusView;
@property (nonatomic, retain) UIWindow *cornerRadiusWindow;
@property (nonatomic) double currentCornerRadius;
@property (nonatomic, retain) DBDashboardStateProvider *dashboardStateProvider;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly, copy) FBSDisplayConfiguration *displayConfiguration;
@property (nonatomic, readonly, copy) FBSDisplayIdentity *displayIdentity;
@property (nonatomic, retain) CARDisplayInfo *displayInfo;
@property (nonatomic, retain) DBEnvironmentConfiguration *environmentConfiguration;
@property (nonatomic, retain) DBFocusController *focusController;
@property (nonatomic, retain) DBFocusMovementManager *focusMovementManager;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) DBStatusBarHomeButtonStateManager *homeButtonStateManager;
@property (nonatomic, readonly) <CRSIconLayoutVehicleDataProviding> *iconLayoutDataProvider;
@property (nonatomic, retain) NSMutableDictionary *identifierToAppInfoMap;
@property (nonatomic, retain) NSMutableDictionary *identifierToAppScenesMap;
@property (nonatomic, retain) NSMutableDictionary *identifierToForegroundAppScenesMap;
@property (nonatomic, retain) UIView *interestingView;
@property (nonatomic, retain) UIWindow *interestingWindow;
@property (nonatomic, retain) DBDashboardLayoutEngine *layoutEngine;
@property (nonatomic, retain) DBLockOutController *lockOutController;
@property (nonatomic, retain) UIWindow *mainWindow;
@property (nonatomic, retain) DBNotificationViewController *notificationViewController;
@property (nonatomic, retain) DBNotificationWindow *notificationWindow;
@property (nonatomic, retain) DBNowPlayingObserver *nowPlayingObserver;
@property (nonatomic, retain) <BSInvalidatable> *oemScreenLayoutElementAssertion;
@property (nonatomic) bool pendingInCallServiceActivation;
@property (nonatomic, retain) <BSInvalidatable> *preventPasscodeLockToken;
@property (nonatomic, retain) <BSInvalidatable> *preventSpuriousScreenUndimToken;
@property (nonatomic, retain) UIWindow *resizeWindow;
@property (nonatomic, retain) DBDashboardRootViewController *rootViewController;
@property (nonatomic, retain) NSHashTable *sceneObservers;
@property (nonatomic, retain) UIScreen *screen;
@property (getter=isScreenAvailable, nonatomic) bool screenAvailable;
@property (nonatomic, retain) DBScreenshotManager *screenshotManager;
@property (nonatomic) bool showingApp;
@property (nonatomic, retain) SiriActivityAssertion *siriButtonAssertion;
@property (nonatomic, retain) SiriLongPressButtonSource *siriButtonSource;
@property (nonatomic, retain) SiriDirectActionSource *siriDirectActionSource;
@property (nonatomic, retain) <SiriAssertion> *siriPrewarmAssertion;
@property (nonatomic) double siriPrewarmTimestamp;
@property (nonatomic, retain) DBSiriViewController *siriViewController;
@property (nonatomic, retain) DBSplashScreenAlert *splashScreenAlert;
@property (nonatomic, retain) FBScene *statusBarHostScene;
@property (nonatomic, retain) UIWindow *statusBarHostWindow;
@property (nonatomic, retain) <UIScenePresenter> *statusBarScenePresenter;
@property (nonatomic, retain) DBStatusBarStateProvider *statusBarStateProvider;
@property (nonatomic, retain) DBRootStatusBarViewController *statusBarViewController;
@property (nonatomic, retain) DBStatusBarWindow *statusBarWindow;
@property (readonly) Class superclass;
@property (nonatomic, retain) RBSProcessMonitor *templateAppProcessMonitor;
@property (nonatomic, retain) DBUserAlertServer *userAlertServer;
@property (nonatomic, retain) DBWallpaperViewController *wallpaperViewController;
@property (nonatomic, retain) UIWindowScene *windowScene;
@property (nonatomic, retain) DBWorkspace *workspace;
@property (nonatomic, retain) DBDashboardWorkspaceOwner *workspaceOwner;

- (void).cxx_destruct;
- (void)_acBackPressed:(id)arg1;
- (id)_activeBundleIdentifierForScene:(id)arg1;
- (void)_animateStartupFromScaledMainWindow;
- (void)_animateStartupToHomeScreen;
- (void)_animateStartupToIcons;
- (id)_applicationSceneForBundleID:(id)arg1;
- (void)_backLongPressed:(id)arg1;
- (void)_collectMemgraphsForTapToRadarWithCompletion:(id /* block */)arg1;
- (void)_createBackgroundSceneForTemplateAppBundleID:(id)arg1;
- (id)_dashboardScene;
- (void)_dismissFloatingSiriIfNecessary;
- (void)_displayRecordingAlert;
- (void)_drawCorners;
- (id)_foregroundActiveScene;
- (void)_handleBackgroundURLDeliveryForLaunchInfo:(id)arg1;
- (void)_handleCarPlayUIReady;
- (void)_handleHomeEvent:(id)arg1;
- (void)_handleOpenApplicationEvent:(id)arg1;
- (void)_handleReturnToHomeScreenEvent:(id)arg1;
- (void)_handleSessionURL:(id)arg1;
- (void)_handleSiriButtonDownWithTimestamp:(double)arg1;
- (void)_handleSiriButtonUpWithTimestamp:(double)arg1;
- (void)_handleSiriPrewarmWithTimestamp:(double)arg1;
- (void)_handleTapToRadarEvent;
- (void)_homeTapped:(id)arg1;
- (bool)_isPreYukonNavAppForAppInfo:(id)arg1 proxiedAppInfo:(id)arg2;
- (bool)_isStatusBarScene:(id)arg1;
- (void)_launchAppWithInfo:(id)arg1 forURL:(id)arg2;
- (id)_newResizeAnimationWindow;
- (void)_notifyAccessoryIfNeededWithUIContext:(id)arg1;
- (void)_pointerSelectionPressed:(id)arg1;
- (void)_presentPrivacyDisclosureAlertForApplication:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_rectForFocusedRectDictionary:(id)arg1;
- (long long)_sceneInterfaceStyleForScene:(id)arg1;
- (void)_screenDidBecomeAvailable:(id)arg1;
- (void)_screenDidBecomeUnavailable:(id)arg1;
- (void)_setInitialFocusOwner;
- (id)_takeSnapshotOfFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_templateAppStateUpdated:(id)arg1;
- (void)_updateAppScenesViewArea;
- (void)_updateDeferrals;
- (void)_updatePasscodeLockToken;
- (void)_updateUserInterfaceStyle;
- (void)_updateWallpaper;
- (void)_updateWindowFrames;
- (id)activeBundleIdentifier;
- (id)activeCallScreenBorrowToken;
- (void)addObserver:(id)arg1;
- (void)alertServer:(id)arg1 wantsAppDismissalForAlert:(id)arg2 bundleID:(id)arg3;
- (void)alertServer:(id)arg1 wantsAppPresentationForAlert:(id)arg2 bundleID:(id)arg3;
- (void)alertServer:(id)arg1 wantsSystemDismissalForViewController:(id)arg2;
- (void)alertServer:(id)arg1 wantsSystemPresentationForViewController:(id)arg2;
- (id)alertViewController;
- (id)applicationInfoForScene:(id)arg1;
- (int)connectedNotifyToken;
- (id)cornerRadiusView;
- (id)cornerRadiusWindow;
- (double)currentCornerRadius;
- (id)dashboardStateProvider;
- (void)dealloc;
- (void)didDismissNotificationForNotificationViewController:(id)arg1;
- (id)displayConfiguration;
- (id)displayIdentity;
- (id)displayInfo;
- (id)environmentConfiguration;
- (void)environmentConfiguration:(id)arg1 appearanceStyleDidChange:(long long)arg2;
- (void)environmentConfiguration:(id)arg1 mapsAppearanceStyleDidChange:(long long)arg2;
- (void)environmentConfiguration:(id)arg1 nightModeDidChange:(bool)arg2;
- (void)environmentConfiguration:(id)arg1 viewAreaDidChangeFromViewAreaFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 safeAreaInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg3 toViewAreaFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg4 safeAreaInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg5 duration:(double)arg6 transitionControlType:(unsigned long long)arg7;
- (void)environmentConfigurationPairedVehiclesDidChange:(id)arg1;
- (id)focusController;
- (id)focusMovementManager;
- (id)focusWindow;
- (void)goToPageContainingBundleIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (bool)handleACHomeUp:(unsigned long long)arg1;
- (void)handleConnect;
- (void)handleEvent:(id)arg1;
- (void)handleFocusMovementAction:(id)arg1 fromScene:(id)arg2;
- (void)handleLongBackPress;
- (bool)hasActiveCall;
- (id)homeButtonStateManager;
- (id)iconLayoutDataProvider;
- (id)identifierToAppInfoMap;
- (id)identifierToAppScenesMap;
- (id)identifierToForegroundAppScenesMap;
- (void)inCallAssertionService:(id)arg1 didSetBannersEnabled:(bool)arg2;
- (void)inCallAssertionServiceDidDismiss:(id)arg1;
- (void)inCallAssertionServiceDidPresent:(id)arg1;
- (id)initWithWindowScene:(id)arg1 environmentConfiguration:(id)arg2;
- (id)interestingView;
- (id)interestingWindow;
- (void)invalidate;
- (bool)isScreenAvailable;
- (id)layoutEngine;
- (id)lockOutController;
- (void)lockOutController:(id)arg1 didChangeFromLockoutMode:(long long)arg2 toLockOutMode:(long long)arg3 animated:(bool)arg4 takeScreen:(bool)arg5;
- (id)mainWindow;
- (id)notificationViewController;
- (id)notificationWindow;
- (id)nowPlayingObserver;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (id)oemScreenLayoutElementAssertion;
- (bool)pendingInCallServiceActivation;
- (bool)preflightRequiredForApplicationInfo:(id)arg1;
- (id)preventPasscodeLockToken;
- (id)preventSpuriousScreenUndimToken;
- (void)processMonitor:(id)arg1 didHandleDeathOfBundleIdentifier:(id)arg2;
- (void)processMonitor:(id)arg1 shouldHandleDeathOfBundleIdentifier:(id)arg2 isCrash:(bool)arg3;
- (void)removeObserver:(id)arg1;
- (id)resizeWindow;
- (id)rootViewController;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })safeAreaInsetsForAppInfo:(id)arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })safeAreaInsetsForAppInfo:(id)arg1 proxyAppInfo:(id)arg2;
- (id)sceneForAppInfo:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })sceneFrameForAppInfo:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })sceneFrameForAppInfo:(id)arg1 proxyAppInfo:(id)arg2;
- (id)sceneIdentifierForAppInfo:(id)arg1;
- (long long)sceneInterfaceStyleForAppInfo:(id)arg1 proxyAppInfo:(id)arg2;
- (void)sceneManager:(id)arg1 didCreateScene:(id)arg2;
- (void)sceneManager:(id)arg1 didDestroyScene:(id)arg2;
- (void)sceneManager:(id)arg1 scene:(id)arg2 didReceiveActions:(id)arg3;
- (void)sceneManager:(id)arg1 scene:(id)arg2 didUpdateClientSettingsWithDiff:(id)arg3 oldClientSettings:(id)arg4 transitionContext:(id)arg5;
- (void)sceneManager:(id)arg1 updateForScene:(id)arg2 appliedWithContext:(id)arg3;
- (void)sceneManager:(id)arg1 updateForScene:(id)arg2 completedWithContext:(id)arg3 error:(id)arg4;
- (void)sceneManager:(id)arg1 updateForScene:(id)arg2 preparedWithContext:(id)arg3;
- (void)sceneManager:(id)arg1 willDestroyScene:(id)arg2;
- (long long)sceneMapInterfaceStyleForAppInfo:(id)arg1 proxyAppInfo:(id)arg2;
- (id)sceneObservers;
- (id)screen;
- (id)screenshotManager;
- (void)session:(id)arg1 handleSiriRequestEvent:(long long)arg2 withPayload:(id)arg3;
- (void)session:(id)arg1 openURL:(id)arg2;
- (void)session:(id)arg1 receivedUnhandledRemoteEvent:(id)arg2 withPayload:(id)arg3;
- (void)setActiveCallScreenBorrowToken:(id)arg1;
- (void)setAlertViewController:(id)arg1;
- (void)setConnectedNotifyToken:(int)arg1;
- (void)setCornerRadiusView:(id)arg1;
- (void)setCornerRadiusWindow:(id)arg1;
- (void)setCurrentCornerRadius:(double)arg1;
- (void)setDashboardStateProvider:(id)arg1;
- (void)setDisplayInfo:(id)arg1;
- (void)setEnvironmentConfiguration:(id)arg1;
- (void)setFocusController:(id)arg1;
- (void)setFocusMovementManager:(id)arg1;
- (void)setHomeButtonStateManager:(id)arg1;
- (void)setIdentifierToAppInfoMap:(id)arg1;
- (void)setIdentifierToAppScenesMap:(id)arg1;
- (void)setIdentifierToForegroundAppScenesMap:(id)arg1;
- (void)setInterestingView:(id)arg1;
- (void)setInterestingWindow:(id)arg1;
- (void)setLayoutEngine:(id)arg1;
- (void)setLockOutController:(id)arg1;
- (void)setMainWindow:(id)arg1;
- (void)setNotificationViewController:(id)arg1;
- (void)setNotificationWindow:(id)arg1;
- (void)setNowPlayingObserver:(id)arg1;
- (void)setOemScreenLayoutElementAssertion:(id)arg1;
- (void)setPendingInCallServiceActivation:(bool)arg1;
- (void)setPreventPasscodeLockToken:(id)arg1;
- (void)setPreventSpuriousScreenUndimToken:(id)arg1;
- (void)setResizeWindow:(id)arg1;
- (void)setRootViewController:(id)arg1;
- (void)setSceneObservers:(id)arg1;
- (void)setScreen:(id)arg1;
- (void)setScreenAvailable:(bool)arg1;
- (void)setScreenshotManager:(id)arg1;
- (void)setShowingApp:(bool)arg1;
- (void)setSiriButtonAssertion:(id)arg1;
- (void)setSiriButtonSource:(id)arg1;
- (void)setSiriDirectActionSource:(id)arg1;
- (void)setSiriPrewarmAssertion:(id)arg1;
- (void)setSiriPrewarmTimestamp:(double)arg1;
- (void)setSiriViewController:(id)arg1;
- (void)setSplashScreenAlert:(id)arg1;
- (void)setStatusBarHostScene:(id)arg1;
- (void)setStatusBarHostWindow:(id)arg1;
- (void)setStatusBarScenePresenter:(id)arg1;
- (void)setStatusBarStateProvider:(id)arg1;
- (void)setStatusBarViewController:(id)arg1;
- (void)setStatusBarWindow:(id)arg1;
- (void)setTemplateAppProcessMonitor:(id)arg1;
- (void)setUserAlertServer:(id)arg1;
- (void)setWallpaperViewController:(id)arg1;
- (void)setWindowScene:(id)arg1;
- (void)setWorkspace:(id)arg1;
- (void)setWorkspaceOwner:(id)arg1;
- (bool)shouldDisableFiveRowKeyboards;
- (bool)showingApp;
- (id)siriButtonAssertion;
- (id)siriButtonSource;
- (id)siriDirectActionSource;
- (id)siriPrewarmAssertion;
- (double)siriPrewarmTimestamp;
- (id)siriViewController;
- (id)splashScreenAlert;
- (id)statusBarHostScene;
- (id)statusBarHostWindow;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })statusBarInsets;
- (id)statusBarScenePresenter;
- (id)statusBarStateProvider;
- (id)statusBarViewController;
- (id)statusBarWindow;
- (id)systemGestureWindow;
- (id)templateAppProcessMonitor;
- (id)userAlertServer;
- (id)wallpaperViewController;
- (void)willDisplayNotificationForNotificationViewController:(id)arg1;
- (id)windowScene;
- (id)workspace;
- (void)workspace:(id)arg1 stateDidChangeFromState:(id)arg2 toState:(id)arg3;
- (id)workspaceOwner;

@end
