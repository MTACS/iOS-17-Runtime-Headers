
@interface DBWidgetSceneViewController : DBWidgetViewController <BSInvalidatable, CRSUIDashboardWidgetWindowService, DBProcessMonitorObserving, DBWidgetFocusableViewDelegate, FBSceneManagerObserver, FBSceneObserver, NSXPCListenerDelegate> {
    DBTodayViewSynchronizedAnimationManager * _animationManager;
    BKSTouchDeliveryPolicyAssertion * _cancelTouchesInIsolatedViewAssertion;
    NSXPCConnection * _connection;
    unsigned long long  _deactivationReasons;
    bool  _debugSnapshotLabelEnabled;
    FBSDisplayConfiguration * _displayConfiguration;
    bool  _enabled;
    NSArray * _focusableItemViews;
    bool  _foreground;
    double  _initialTouchTimestamp;
    bool  _invalidated;
    NSXPCListener * _listener;
    UIView * _loadingView;
    unsigned long long  _proxyAppCrashTally;
    bool  _proxySceneContentReady;
    NSString * _requester;
    double  _retryDelay;
    NSTimer * _retryTimer;
    FBScene * _scene;
    UIView<UIScenePresentation> * _sceneHostView;
    <UIScenePresenter> * _scenePresenter;
    UITapGestureRecognizer * _selectTapGestureRecognizer;
    unsigned long long  _targetAppCrashTally;
    NSString * _targetBundleIdentifier;
    NSMutableSet * _touchActionDisabledRequesters;
    UIView * _touchActionView;
    BKSTouchDeliveryPolicyAssertion * _touchDeliveryPolicyAssertion;
    UITapGestureRecognizer * _touchTapGestureRecognizer;
    FBApplicationUpdateScenesTransaction * _transaction;
    unsigned int  _widgetContextId;
    unsigned long long  _widgetStyle;
}

@property (nonatomic, retain) DBTodayViewSynchronizedAnimationManager *animationManager;
@property (nonatomic, readonly) DBApplicationInfo *applicationInfo;
@property (nonatomic, retain) BKSTouchDeliveryPolicyAssertion *cancelTouchesInIsolatedViewAssertion;
@property (nonatomic, retain) NSXPCConnection *connection;
@property (nonatomic) unsigned long long deactivationReasons;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) bool debugSnapshotLabelEnabled;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) FBSDisplayConfiguration *displayConfiguration;
@property (nonatomic) bool enabled;
@property (nonatomic, retain) NSArray *focusableItemViews;
@property (nonatomic) bool foreground;
@property (readonly) unsigned long long hash;
@property (nonatomic) double initialTouchTimestamp;
@property (nonatomic) bool invalidated;
@property (nonatomic, retain) NSXPCListener *listener;
@property (nonatomic, retain) UIView *loadingView;
@property (nonatomic, readonly) DBApplicationInfo *proxiedApplicationInfo;
@property (nonatomic) unsigned long long proxyAppCrashTally;
@property (nonatomic) bool proxySceneContentReady;
@property (nonatomic, copy) NSString *requester;
@property (nonatomic) double retryDelay;
@property (nonatomic, retain) NSTimer *retryTimer;
@property (nonatomic, retain) FBScene *scene;
@property (nonatomic, retain) UIView<UIScenePresentation> *sceneHostView;
@property (nonatomic, readonly) NSString *sceneID;
@property (nonatomic, retain) <UIScenePresenter> *scenePresenter;
@property (nonatomic, retain) UITapGestureRecognizer *selectTapGestureRecognizer;
@property (readonly) Class superclass;
@property (nonatomic) unsigned long long targetAppCrashTally;
@property (nonatomic, copy) NSString *targetBundleIdentifier;
@property (nonatomic, retain) NSMutableSet *touchActionDisabledRequesters;
@property (nonatomic, retain) UIView *touchActionView;
@property (nonatomic, retain) BKSTouchDeliveryPolicyAssertion *touchDeliveryPolicyAssertion;
@property (nonatomic, retain) UITapGestureRecognizer *touchTapGestureRecognizer;
@property (nonatomic, retain) FBApplicationUpdateScenesTransaction *transaction;
@property (nonatomic) unsigned int widgetContextId;
@property (nonatomic) unsigned long long widgetStyle;

- (void).cxx_destruct;
- (void)_animateLoadingViewRemovalIfNecessary;
- (void)_beginTouchCancellation;
- (void)_endTouchCancellation;
- (void)_handleTapGesture:(id)arg1;
- (void)_invalidateRetryTimer;
- (long long)_mapStyle;
- (void)_performSceneUpdateForeground:(bool)arg1;
- (void)_postTransactionUpdateSceneSettingsForScene:(id)arg1;
- (void)_retryTimerFired:(id)arg1;
- (void)_scheduleForegroundRetry;
- (void)_scrollViewDidEndDragging:(id)arg1;
- (void)_scrollViewWillBeginDragging:(id)arg1;
- (void)_setSceneActive:(bool)arg1;
- (void)_setTouchActionDisabled:(bool)arg1 forRequester:(id)arg2;
- (long long)_uiStyle;
- (void)_updateTouchActionDisabled;
- (id)animationManager;
- (id)applicationInfo;
- (id)cancelTouchesInIsolatedViewAssertion;
- (void)clientSetContentReady;
- (void)clientSetFocusableItems:(id)arg1;
- (void)clientSetWantsLargeSize:(bool)arg1 fenceHandle:(id)arg2 animationSettings:(id)arg3;
- (id)connection;
- (void)connectionReady;
- (unsigned long long)deactivationReasons;
- (bool)debugSnapshotLabelEnabled;
- (id)displayConfiguration;
- (bool)enabled;
- (bool)entireWidgetFocusable;
- (void)focusableItem:(id)arg1 didChangeFocused:(bool)arg2;
- (void)focusableItem:(id)arg1 didChangePressed:(bool)arg2;
- (id)focusableItemViews;
- (bool)foreground;
- (id)initWithEnvironment:(id)arg1 animationManager:(id)arg2;
- (double)initialTouchTimestamp;
- (void)invalidate;
- (bool)invalidated;
- (id)linearFocusItems;
- (id)listener;
- (bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (id)loadingIconImage;
- (id)loadingView;
- (id)preferredFocusEnvironments;
- (void)prepareLoadingViewAnimated:(bool)arg1;
- (void)processMonitor:(id)arg1 didHandleDeathOfBundleIdentifier:(id)arg2;
- (void)processMonitor:(id)arg1 shouldHandleDeathOfBundleIdentifier:(id)arg2 isCrash:(bool)arg3;
- (id)proxiedApplicationInfo;
- (unsigned long long)proxyAppCrashTally;
- (bool)proxySceneContentReady;
- (void)replaceLoadingViewWithView:(id)arg1;
- (id)requester;
- (double)retryDelay;
- (id)retryTimer;
- (id)scene;
- (void)sceneContentStateDidChange:(id)arg1;
- (void)sceneDidInvalidate:(id)arg1;
- (id)sceneHostView;
- (id)sceneID;
- (void)sceneManager:(id)arg1 didCreateScene:(id)arg2;
- (void)sceneManager:(id)arg1 didDestroyScene:(id)arg2;
- (id)scenePresenter;
- (id)selectTapGestureRecognizer;
- (void)selectedFocusableItem:(id)arg1;
- (void)setAnimationManager:(id)arg1;
- (void)setCancelTouchesInIsolatedViewAssertion:(id)arg1;
- (void)setConnection:(id)arg1;
- (void)setDeactivationReasons:(unsigned long long)arg1;
- (void)setDebugSnapshotLabelEnabled:(bool)arg1;
- (void)setDisplayConfiguration:(id)arg1;
- (void)setEnabled:(bool)arg1;
- (void)setFocusableItemViews:(id)arg1;
- (void)setForeground:(bool)arg1;
- (void)setInitialTouchTimestamp:(double)arg1;
- (void)setInvalidated:(bool)arg1;
- (void)setListener:(id)arg1;
- (void)setLoadingView:(id)arg1;
- (void)setProxyAppCrashTally:(unsigned long long)arg1;
- (void)setProxySceneContentReady:(bool)arg1;
- (void)setRequester:(id)arg1;
- (void)setRetryDelay:(double)arg1;
- (void)setRetryTimer:(id)arg1;
- (void)setScene:(id)arg1;
- (void)setSceneHostView:(id)arg1;
- (void)setScenePresenter:(id)arg1;
- (void)setSelectTapGestureRecognizer:(id)arg1;
- (void)setTargetAppCrashTally:(unsigned long long)arg1;
- (void)setTargetBundleIdentifier:(id)arg1;
- (void)setTouchActionDisabledRequesters:(id)arg1;
- (void)setTouchActionView:(id)arg1;
- (void)setTouchDeliveryPolicyAssertion:(id)arg1;
- (void)setTouchTapGestureRecognizer:(id)arg1;
- (void)setTransaction:(id)arg1;
- (void)setWidgetContextId:(unsigned int)arg1;
- (void)setWidgetStyle:(unsigned long long)arg1;
- (unsigned long long)targetAppCrashTally;
- (id)targetBundleIdentifier;
- (id)touchActionDisabledRequesters;
- (id)touchActionView;
- (id)touchDeliveryPolicyAssertion;
- (id)touchTapGestureRecognizer;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (id)transaction;
- (void)updateContextId:(unsigned int)arg1;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (unsigned int)widgetContextId;
- (unsigned long long)widgetStyle;

@end
