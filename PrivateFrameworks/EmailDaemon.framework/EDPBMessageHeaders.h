
@interface EDPBMessageHeaders : PBCodable <NSCopying> {
    struct { 
        long long *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _bccAddress;
    struct { 
        long long *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _bccContactIds;
    struct { 
        long long *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _bccDomains;
    struct { 
        bool *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _bccIsVips;
    struct { 
        long long *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _ccAddress;
    struct { 
        long long *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _ccContactIds;
    struct { 
        long long *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _ccDomains;
    struct { 
        bool *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _ccIsVips;
    unsigned long long  _dateReceived;
    struct { 
        unsigned int dateReceived : 1; 
        unsigned int listId : 1; 
        unsigned int sender : 1; 
        unsigned int senderContactId : 1; 
        unsigned int senderDomain : 1; 
        unsigned int messageIsForwarded : 1; 
        unsigned int messageIsReply : 1; 
        unsigned int senderIsVip : 1; 
        unsigned int userIsBcc : 1; 
        unsigned int userIsCc : 1; 
        unsigned int userIsSender : 1; 
        unsigned int userIsTo : 1; 
    }  _has;
    long long  _listId;
    bool  _messageIsForwarded;
    bool  _messageIsReply;
    struct { 
        long long *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _references;
    long long  _sender;
    long long  _senderContactId;
    long long  _senderDomain;
    bool  _senderIsVip;
    struct { 
        long long *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _subjectWords;
    struct { 
        long long *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _toAddress;
    struct { 
        long long *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _toContactIds;
    struct { 
        long long *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _toDomains;
    struct { 
        bool *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _toIsVips;
    bool  _userIsBcc;
    bool  _userIsCc;
    bool  _userIsSender;
    bool  _userIsTo;
}

@property (nonatomic, readonly) long long*bccAddress;
@property (nonatomic, readonly) unsigned long long bccAddressCount;
@property (nonatomic, readonly) long long*bccContactIds;
@property (nonatomic, readonly) unsigned long long bccContactIdsCount;
@property (nonatomic, readonly) long long*bccDomains;
@property (nonatomic, readonly) unsigned long long bccDomainsCount;
@property (nonatomic, readonly) bool*bccIsVips;
@property (nonatomic, readonly) unsigned long long bccIsVipsCount;
@property (nonatomic, readonly) long long*ccAddress;
@property (nonatomic, readonly) unsigned long long ccAddressCount;
@property (nonatomic, readonly) long long*ccContactIds;
@property (nonatomic, readonly) unsigned long long ccContactIdsCount;
@property (nonatomic, readonly) long long*ccDomains;
@property (nonatomic, readonly) unsigned long long ccDomainsCount;
@property (nonatomic, readonly) bool*ccIsVips;
@property (nonatomic, readonly) unsigned long long ccIsVipsCount;
@property (nonatomic) unsigned long long dateReceived;
@property (nonatomic) bool hasDateReceived;
@property (nonatomic) bool hasListId;
@property (nonatomic) bool hasMessageIsForwarded;
@property (nonatomic) bool hasMessageIsReply;
@property (nonatomic) bool hasSender;
@property (nonatomic) bool hasSenderContactId;
@property (nonatomic) bool hasSenderDomain;
@property (nonatomic) bool hasSenderIsVip;
@property (nonatomic) bool hasUserIsBcc;
@property (nonatomic) bool hasUserIsCc;
@property (nonatomic) bool hasUserIsSender;
@property (nonatomic) bool hasUserIsTo;
@property (nonatomic) long long listId;
@property (nonatomic) bool messageIsForwarded;
@property (nonatomic) bool messageIsReply;
@property (nonatomic, readonly) long long*references;
@property (nonatomic, readonly) unsigned long long referencesCount;
@property (nonatomic) long long sender;
@property (nonatomic) long long senderContactId;
@property (nonatomic) long long senderDomain;
@property (nonatomic) bool senderIsVip;
@property (nonatomic, readonly) long long*subjectWords;
@property (nonatomic, readonly) unsigned long long subjectWordsCount;
@property (nonatomic, readonly) long long*toAddress;
@property (nonatomic, readonly) unsigned long long toAddressCount;
@property (nonatomic, readonly) long long*toContactIds;
@property (nonatomic, readonly) unsigned long long toContactIdsCount;
@property (nonatomic, readonly) long long*toDomains;
@property (nonatomic, readonly) unsigned long long toDomainsCount;
@property (nonatomic, readonly) bool*toIsVips;
@property (nonatomic, readonly) unsigned long long toIsVipsCount;
@property (nonatomic) bool userIsBcc;
@property (nonatomic) bool userIsCc;
@property (nonatomic) bool userIsSender;
@property (nonatomic) bool userIsTo;

- (void)addBccAddress:(long long)arg1;
- (void)addBccContactId:(long long)arg1;
- (void)addBccDomain:(long long)arg1;
- (void)addBccIsVip:(bool)arg1;
- (void)addCcAddress:(long long)arg1;
- (void)addCcContactId:(long long)arg1;
- (void)addCcDomain:(long long)arg1;
- (void)addCcIsVip:(bool)arg1;
- (void)addReferences:(long long)arg1;
- (void)addSubjectWords:(long long)arg1;
- (void)addToAddress:(long long)arg1;
- (void)addToContactId:(long long)arg1;
- (void)addToDomain:(long long)arg1;
- (void)addToIsVip:(bool)arg1;
- (long long*)bccAddress;
- (long long)bccAddressAtIndex:(unsigned long long)arg1;
- (unsigned long long)bccAddressCount;
- (long long)bccContactIdAtIndex:(unsigned long long)arg1;
- (long long*)bccContactIds;
- (unsigned long long)bccContactIdsCount;
- (long long)bccDomainAtIndex:(unsigned long long)arg1;
- (long long*)bccDomains;
- (unsigned long long)bccDomainsCount;
- (bool)bccIsVipAtIndex:(unsigned long long)arg1;
- (bool*)bccIsVips;
- (unsigned long long)bccIsVipsCount;
- (long long*)ccAddress;
- (long long)ccAddressAtIndex:(unsigned long long)arg1;
- (unsigned long long)ccAddressCount;
- (long long)ccContactIdAtIndex:(unsigned long long)arg1;
- (long long*)ccContactIds;
- (unsigned long long)ccContactIdsCount;
- (long long)ccDomainAtIndex:(unsigned long long)arg1;
- (long long*)ccDomains;
- (unsigned long long)ccDomainsCount;
- (bool)ccIsVipAtIndex:(unsigned long long)arg1;
- (bool*)ccIsVips;
- (unsigned long long)ccIsVipsCount;
- (void)clearBccAddress;
- (void)clearBccContactIds;
- (void)clearBccDomains;
- (void)clearBccIsVips;
- (void)clearCcAddress;
- (void)clearCcContactIds;
- (void)clearCcDomains;
- (void)clearCcIsVips;
- (void)clearReferences;
- (void)clearSubjectWords;
- (void)clearToAddress;
- (void)clearToContactIds;
- (void)clearToDomains;
- (void)clearToIsVips;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (unsigned long long)dateReceived;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (bool)hasDateReceived;
- (bool)hasListId;
- (bool)hasMessageIsForwarded;
- (bool)hasMessageIsReply;
- (bool)hasSender;
- (bool)hasSenderContactId;
- (bool)hasSenderDomain;
- (bool)hasSenderIsVip;
- (bool)hasUserIsBcc;
- (bool)hasUserIsCc;
- (bool)hasUserIsSender;
- (bool)hasUserIsTo;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (long long)listId;
- (void)mergeFrom:(id)arg1;
- (bool)messageIsForwarded;
- (bool)messageIsReply;
- (bool)readFrom:(id)arg1;
- (long long*)references;
- (long long)referencesAtIndex:(unsigned long long)arg1;
- (unsigned long long)referencesCount;
- (long long)sender;
- (long long)senderContactId;
- (long long)senderDomain;
- (bool)senderIsVip;
- (void)setBccAddress:(long long*)arg1 count:(unsigned long long)arg2;
- (void)setBccContactIds:(long long*)arg1 count:(unsigned long long)arg2;
- (void)setBccDomains:(long long*)arg1 count:(unsigned long long)arg2;
- (void)setBccIsVips:(bool*)arg1 count:(unsigned long long)arg2;
- (void)setCcAddress:(long long*)arg1 count:(unsigned long long)arg2;
- (void)setCcContactIds:(long long*)arg1 count:(unsigned long long)arg2;
- (void)setCcDomains:(long long*)arg1 count:(unsigned long long)arg2;
- (void)setCcIsVips:(bool*)arg1 count:(unsigned long long)arg2;
- (void)setDateReceived:(unsigned long long)arg1;
- (void)setHasDateReceived:(bool)arg1;
- (void)setHasListId:(bool)arg1;
- (void)setHasMessageIsForwarded:(bool)arg1;
- (void)setHasMessageIsReply:(bool)arg1;
- (void)setHasSender:(bool)arg1;
- (void)setHasSenderContactId:(bool)arg1;
- (void)setHasSenderDomain:(bool)arg1;
- (void)setHasSenderIsVip:(bool)arg1;
- (void)setHasUserIsBcc:(bool)arg1;
- (void)setHasUserIsCc:(bool)arg1;
- (void)setHasUserIsSender:(bool)arg1;
- (void)setHasUserIsTo:(bool)arg1;
- (void)setListId:(long long)arg1;
- (void)setMessageIsForwarded:(bool)arg1;
- (void)setMessageIsReply:(bool)arg1;
- (void)setReferences:(long long*)arg1 count:(unsigned long long)arg2;
- (void)setSender:(long long)arg1;
- (void)setSenderContactId:(long long)arg1;
- (void)setSenderDomain:(long long)arg1;
- (void)setSenderIsVip:(bool)arg1;
- (void)setSubjectWords:(long long*)arg1 count:(unsigned long long)arg2;
- (void)setToAddress:(long long*)arg1 count:(unsigned long long)arg2;
- (void)setToContactIds:(long long*)arg1 count:(unsigned long long)arg2;
- (void)setToDomains:(long long*)arg1 count:(unsigned long long)arg2;
- (void)setToIsVips:(bool*)arg1 count:(unsigned long long)arg2;
- (void)setUserIsBcc:(bool)arg1;
- (void)setUserIsCc:(bool)arg1;
- (void)setUserIsSender:(bool)arg1;
- (void)setUserIsTo:(bool)arg1;
- (long long*)subjectWords;
- (long long)subjectWordsAtIndex:(unsigned long long)arg1;
- (unsigned long long)subjectWordsCount;
- (long long*)toAddress;
- (long long)toAddressAtIndex:(unsigned long long)arg1;
- (unsigned long long)toAddressCount;
- (long long)toContactIdAtIndex:(unsigned long long)arg1;
- (long long*)toContactIds;
- (unsigned long long)toContactIdsCount;
- (long long)toDomainAtIndex:(unsigned long long)arg1;
- (long long*)toDomains;
- (unsigned long long)toDomainsCount;
- (bool)toIsVipAtIndex:(unsigned long long)arg1;
- (bool*)toIsVips;
- (unsigned long long)toIsVipsCount;
- (bool)userIsBcc;
- (bool)userIsCc;
- (bool)userIsSender;
- (bool)userIsTo;
- (void)writeTo:(id)arg1;

@end
