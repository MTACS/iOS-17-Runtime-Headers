
@interface EDThreadPersistence : NSObject <EDAccountChangeHookResponder, EDDatabaseChangeHookResponder, EDMailboxChangeHookResponder, EDMessageChangeHookResponder, EDPersistenceDatabaseSchemaProvider, EDProtectedDataReconciliationHookResponder, EDSenderBucketChangeHookResponder, EDThreadScopeManagerDataSource, EFLoggable, EFSignpostable> {
    EMBlockedSenderManager * _blockedSenderManager;
    <EFScheduler> * _consistencyCheckScheduler;
    EDPersistenceDatabase * _database;
    EDPersistenceHookRegistry * _hookRegistry;
    EDMessagePersistence * _messagePersistence;
    NSMutableArray * _migratingThreadScopes;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _migratingThreadScopesLock;
    NSMutableSet * _threadObjectIDsToRecompute;
    EFDebouncer * _threadRecomputationDebouncer;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _threadRecomputationLock;
    <EFScheduler> * _threadRecomputationScheduler;
    EDThreadScopeManager * _threadScopeManager;
    <EMVIPManager> * _vipManager;
}

@property (nonatomic, readonly) EMBlockedSenderManager *blockedSenderManager;
@property (nonatomic, readonly) <EFScheduler> *consistencyCheckScheduler;
@property (nonatomic, readonly) EDPersistenceDatabase *database;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) EDPersistenceHookRegistry *hookRegistry;
@property (nonatomic, readonly) EDMessagePersistence *messagePersistence;
@property (readonly) unsigned long long signpostID;
@property (readonly) Class superclass;
@property (nonatomic, retain) EFDebouncer *threadRecomputationDebouncer;
@property (nonatomic, retain) <EFScheduler> *threadRecomputationScheduler;
@property (nonatomic, readonly) EDThreadScopeManager *threadScopeManager;
@property (nonatomic, readonly) <EMVIPManager> *vipManager;

+ (id)log;
+ (id)signpostLog;
+ (id)tablesAndForeignKeysToResolve:(id*)arg1 associationsToResolve:(id*)arg2;
+ (id)threadMailboxesTableSchema;
+ (id)threadRecipientsTableSchema;
+ (id)threadScopesTableSchema;
+ (id)threadSendersTableSchema;
+ (id)threadsTableSchema;

- (void).cxx_destruct;
- (void)_addKeyPathsForBasicPropertiesChangeToKeyPaths:(id)arg1;
- (void)_addKeyPathsForDisplayMessageChangeToKeyPaths:(id)arg1;
- (void)_addOrderByToThreadSelect:(id)arg1 forSortDescriptors:(id)arg2;
- (void)_addPersistedMessages:(id)arg1 journaled:(bool)arg2 generationWindow:(id)arg3;
- (bool)_addThreadScopeToDatabase:(id)arg1 needsUpdate:(bool)arg2 lastViewedDate:(id)arg3 updateThreadScopeManager:(bool)arg4;
- (bool)_addThreadScopeToDatabase:(id)arg1 withMailboxDatabaseID:(long long)arg2 filterPredicate:(long long)arg3 needsUpdate:(bool)arg4 lastViewedDate:(id)arg5 updateThreadScopeManager:(bool)arg6 connection:(id)arg7;
- (bool)_addThreadScopeToDatabaseWithMailboxType:(id)arg1 filterPredicate:(long long)arg2 needsUpdate:(bool)arg3 lastViewedDate:(id)arg4 connection:(id)arg5;
- (id)_addressesFromMessageAddressesStatement:(id)arg1;
- (id)_addressesFromSelectStatement:(id)arg1 additionalRowHandling:(id /* block */)arg2;
- (id)_columnForSortDescriptor:(id)arg1;
- (id)_comparisonExpressionForSortDescriptors:(id)arg1 conversationID:(long long)arg2 threadExpression:(id)arg3 threadScopeDatabaseID:(long long)arg4 connection:(id)arg5;
- (id)_countMessagesForExpression:(id)arg1;
- (long long)_databaseIDForThreadObjectID:(id)arg1;
- (bool)_deleteMailboxesFromWrappedMessages:(id)arg1 fromThreadWithDatabaseID:(id)arg2 messageThreadExpression:(id)arg3;
- (bool)_deleteRecipientsOfType:(unsigned long long)arg1 fromThreadWithDatabaseID:(id)arg2 messageThreadExpression:(id)arg3;
- (bool)_deleteSendersFromThreadWithDatabaseID:(id)arg1 messageThreadExpression:(id)arg2;
- (id)_deleteWrappedMessages:(id)arg1 fromThreadWithObjectID:(id)arg2 threadScopeDatabaseID:(long long)arg3 generationWindow:(id)arg4;
- (bool)_enumerateThreadObjectIDsForThreadScope:(id)arg1 filterClause:(id)arg2 sortDescriptors:(id)arg3 batchBlock:(id /* block */)arg4;
- (void)_enumerateThreadScopesUsingBlock:(id /* block */)arg1;
- (id)_expressionForThreadScope:(id)arg1;
- (id)_filteredPersistedMessagesForPersistedMessages:(id)arg1;
- (id)_flagColorsFromRow:(id)arg1;
- (void)_getIndividualMailboxScopes:(id*)arg1 unifiedMailboxThreadScopes:(id*)arg2 forAccount:(id)arg3;
- (id)_int64SetFromSet:(id)arg1 byRemovingIndexesFromSet:(id)arg2 andLimitingTo:(unsigned long long)arg3;
- (bool)_isThreadScopePrecomputed:(id)arg1 shouldMigrate:(bool*)arg2;
- (void)_iterateWrappedMessagesByConversationForPersistedMessages:(id)arg1 block:(id /* block */)arg2;
- (void)_iterateWrappedMessagesByConversationForPersistedMessages:(id)arg1 messageFilter:(id /* block */)arg2 writeBlock:(id /* block */)arg3;
- (void)_logFailedVerifyConsistencyForConversationIDs:(id)arg1;
- (id)_mailboxDatabaseIDsForWrappedMessages:(id)arg1;
- (id)_mailboxScopeForThreadScope:(id)arg1 andFilterPredicate:(long long*)arg2;
- (id)_mailboxesForThreadDatabaseID:(id)arg1;
- (id)_messageActiveFollowUpExpressionForSentMailboxObjectIDs:(id)arg1;
- (id)_messageFilterExpressionForFilterPredicate:(id)arg1;
- (id)_messageFiredReadLaterExpression:(id)arg1;
- (id)_messageIsNotDeletedExpression;
- (id)_messageMailboxesExpressionForAccountObjectIDs:(id)arg1;
- (id)_messageMailboxesExpressionForMailboxObjectIDs:(id)arg1;
- (id)_messageMailboxesExpressionForMailboxScope:(id)arg1;
- (id)_messageMailboxesExpressionForMailboxType:(long long)arg1;
- (id)_messageThreadExpressionForThreadObjectID:(id)arg1;
- (id)_messageThreadExpressionForThreadScope:(id)arg1 conversationExpression:(id)arg2;
- (id)_messageThreadExpressionForThreadScope:(id)arg1 objectIDs:(id)arg2;
- (bool)_messagesAreJournaledForThreadWithObjectID:(id)arg1;
- (id)_nonJournaledSubjectForThreadWithObjectID:(id)arg1 connection:(id)arg2;
- (id)_persistedMessagesByPossibleThreadScopeForPersistedMessages:(id)arg1;
- (id)_persistedMessagesForMailboxScope:(id)arg1 messageExpression:(id)arg2;
- (void)_persistenceDidUpdateFollowUpOrReadLaterForMessages:(id)arg1 generationWindow:(id)arg2 isFollowUp:(bool)arg3;
- (void)_persistenceIsChangingFlags:(id)arg1 messages:(id)arg2 generationWindow:(id)arg3;
- (id)_persistenceIsChangingFlags:(id)arg1 wrappedMessages:(id)arg2 threadObjectID:(id)arg3 threadScopeDatabaseID:(long long)arg4;
- (void)_persistenceIsDeletingMessages:(id)arg1 generationWindow:(id)arg2;
- (id)_recalculateDisplayMessageForThreadObjectID:(id)arg1 threadScopeDatabaseID:(long long)arg2;
- (bool)_recalculateNewestReadMessageForThreadObjectID:(id)arg1 threadScopeDatabaseID:(long long)arg2;
- (id)_recipientAddressesExpressionForRecipientType:(unsigned long long)arg1 messages:(id)arg2;
- (id)_recipientsOfType:(unsigned long long)arg1 forThreadDatabaseID:(id)arg2;
- (id)_recipientsOfType:(unsigned long long)arg1 fromMessagesForThreadObjectID:(id)arg2;
- (void)_recomputeThreads;
- (void)_reportSenderBucketChangeForThreadsWithSenderAddresses:(id)arg1 generation:(long long)arg2;
- (void)_resetThreadScope:(id)arg1 withDatabaseID:(id)arg2;
- (void)_scheduleRecomputationForThread:(id)arg1 reason:(id)arg2;
- (id)_senderAddressesExpressionForMessages:(id)arg1;
- (id)_sendersForThreadDatabaseID:(id)arg1 senderBucket:(long long*)arg2;
- (id)_sendersFromMessagesForThreadObjectID:(id)arg1;
- (id)_statementForOldestThreadInMailbox:(id)arg1 threadScope:(id)arg2 createMailboxDatabaseIDIfNecessary:(bool)arg3;
- (id)_threadDatabaseIDExpressionForThreadScopeDatabaseID:(long long)arg1 conversation:(long long)arg2;
- (id)_threadExpressionForThreadScopeDatabaseID:(long long)arg1 conversation:(long long)arg2;
- (id)_threadForWrappedMessages:(id)arg1 objectID:(id)arg2;
- (id)_threadQueryForThreadScope:(id)arg1;
- (id)_updateBasicPropertiesAfterDeleteForThreadObjectID:(id)arg1 threadScopeDatabaseID:(long long)arg2;
- (bool)_updateNewestReadMessageWithWrappedMessage:(id)arg1 threadExpression:(id)arg2;
- (id)_updateThreadForDeleteWithObjectID:(id)arg1 threadScopeDatabaseID:(long long)arg2 generationWindow:(id)arg3;
- (id)_upsertForThreadsWithThreadScopeDatabaseID:(long long)arg1 conversation:(long long)arg2;
- (id)_wrappedMessageForPersistedMessages:(id)arg1 threadScope:(id)arg2 messageFilter:(id /* block */)arg3;
- (id)_wrappedMessagesByThreadScopeForPersistedMessages:(id)arg1 messageFilter:(id /* block */)arg2;
- (void)_writeThreadedMessages:(id)arg1 withChangedKeyPaths:(id)arg2 journaled:(bool)arg3 generationWindow:(id)arg4;
- (bool)addThreadScopeToDatabase:(id)arg1 needsUpdate:(bool)arg2 lastViewedDate:(id)arg3;
- (bool)addThreads:(id)arg1;
- (bool)beginMigratingThreadScope:(id)arg1;
- (id)blockedSenderManager;
- (id)changeForThreadWithObjectID:(id)arg1 changedKeyPaths:(id)arg2;
- (id)consistencyCheckScheduler;
- (id)database;
- (bool)deleteThreadsWithObjectIDs:(id)arg1;
- (bool)endMigratingThreadScope:(id)arg1 wasCanceledOrReset:(bool)arg2;
- (id)hookRegistry;
- (id)initWithMessagePersistence:(id)arg1 database:(id)arg2 hookRegistry:(id)arg3 vipManager:(id)arg4 blockedSenderManager:(id)arg5;
- (id)messagePersistence;
- (id)nextExistingThreadObjectIDForThreadObjectID:(id)arg1 forSortDescriptors:(id)arg2 journaledThreadsToCheck:(id)arg3 excluding:(id)arg4;
- (id)oldestThreadObjectIDForMailbox:(id)arg1 threadScope:(id)arg2;
- (void)persistenceDidAddAddresses:(id)arg1 toSender:(id)arg2 generation:(long long)arg3;
- (void)persistenceDidAddMessages:(id)arg1 generationWindow:(id)arg2;
- (void)persistenceDidChangeFlags:(id)arg1 messages:(id)arg2 generationWindow:(id)arg3;
- (void)persistenceDidChangeGlobalMessageID:(long long)arg1 orConversationID:(long long)arg2 message:(id)arg3 generationWindow:(id)arg4;
- (void)persistenceDidChangeReadLaterDate:(id)arg1 messages:(id)arg2 changeIsRemote:(bool)arg3 generationWindow:(id)arg4;
- (void)persistenceDidChangeSenderBucketForSenders:(id)arg1 generation:(long long)arg2;
- (void)persistenceDidDeleteAllMessagesInMailboxesWithURLs:(id)arg1 generationWindow:(id)arg2;
- (void)persistenceDidDeleteMessages:(id)arg1 generationWindow:(id)arg2;
- (void)persistenceDidRemoveAddresses:(id)arg1 fromSender:(id)arg2 generation:(long long)arg3;
- (void)persistenceDidUpdateDisplayDateForMessages:(id)arg1 changeIsRemote:(bool)arg2 generation:(long long)arg3;
- (void)persistenceDidUpdateDisplayDateForReadLaterDateMessages:(id)arg1 generationWindow:(id)arg2;
- (void)persistenceDidUpdateFollowUpForMessages:(id)arg1 generationWindow:(id)arg2;
- (void)persistenceDidUpdateProperties:(id)arg1 message:(id)arg2 generationWindow:(id)arg3;
- (void)persistenceIsAddingMailboxWithDatabaseID:(long long)arg1 objectID:(id)arg2 generationWindow:(id)arg3;
- (void)persistenceIsAddingMessages:(id)arg1 journaled:(bool)arg2 generationWindow:(id)arg3;
- (void)persistenceIsChangingConversationID:(long long)arg1 messages:(id)arg2 generationWindow:(id)arg3;
- (void)persistenceIsChangingFlags:(id)arg1 messages:(id)arg2 generationWindow:(id)arg3;
- (void)persistenceIsDeletingAllMessagesInMailboxWithURL:(id)arg1 generationWindow:(id)arg2;
- (void)persistenceIsDeletingMessages:(id)arg1 generationWindow:(id)arg2;
- (void)persistenceIsInitializingDatabaseWithConnection:(id)arg1;
- (void)persistenceIsUpdatingDisplayDateForMessage:(id)arg1 fromDate:(id)arg2 generation:(long long)arg3;
- (unsigned long long)persistenceStateForThreadScope:(id)arg1;
- (id)resetThreadScopesForAccount:(id)arg1;
- (void)resetThreadScopesForMailboxScope:(id)arg1;
- (void)setNeedsUpdateForThreadScope:(id)arg1;
- (bool)setPriorityForDisplayMessageSenderForThreadObjectID:(id)arg1;
- (void)setThreadRecomputationDebouncer:(id)arg1;
- (void)setThreadRecomputationScheduler:(id)arg1;
- (unsigned long long)signpostID;
- (id)statisticsForThreadScopesWithDatabaseIDs:(id)arg1;
- (void)test_tearDown;
- (id)threadForObjectID:(id)arg1 originatingQuery:(id)arg2 error:(id*)arg3;
- (id)threadObjectIDsByNextExistingForThreadObjectIDs:(id)arg1 forSortDescriptors:(id)arg2 journaledThreadsToCheck:(id)arg3;
- (void)threadObjectIDsForThreadScope:(id)arg1 sortDescriptors:(id)arg2 initialBatchSize:(unsigned long long)arg3 journaledObjectIDs:(id)arg4 batchBlock:(id /* block */)arg5;
- (id)threadRecomputationDebouncer;
- (id)threadRecomputationScheduler;
- (id)threadScopeManager;
- (bool)threadScopeManager:(id)arg1 evictThreadScopesWithDatabaseIDs:(id)arg2 completionBlock:(id /* block */)arg3;
- (void)threadScopeManager:(id)arg1 gatherStatisticsForThreadScopesWithDatabaseIDs:(id)arg2 block:(id /* block */)arg3;
- (bool)threadScopeManager:(id)arg1 isValidMailboxObjectID:(id)arg2;
- (bool)threadScopeManager:(id)arg1 mailboxScopeExists:(id)arg2;
- (void)threadScopeManager:(id)arg1 populateThreadScopesWithBlock:(id /* block */)arg2;
- (id)threadScopesByDatabaseID;
- (void)updateLastViewedDateForThreadScope:(id)arg1;
- (void)verifyConsistencyOfThreadScope:(id)arg1;
- (id)vipManager;

@end
