
@interface EDInMemoryThreadQueryHandler : EDMessageRepositoryQueryHandler <EDMessageQueryHelperDelegate, EFContentProtectionObserver, EFLoggable, EMCollectionItemIDStateCapturerDelegate> {
    NSMutableDictionary * _changesWhilePaused;
    id /* block */  _comparator;
    NSObject<OS_dispatch_queue> * _contentProtectionQueue;
    NSMutableOrderedSet * _conversationIDs;
    bool  _didCancel;
    bool  _hasChangesWhilePaused;
    bool  _hasEverReconciledJournal;
    EFLazyCache * _inMemoryThreadCache;
    NSMutableDictionary * _inMemoryThreadsByConversationID;
    bool  _isInitialized;
    bool  _isPaused;
    EMMailboxScope * _mailboxScope;
    NSMutableDictionary * _mailboxesByConversationID;
    EDMessageQueryHelper * _messageQueryHelper;
    NSArray * _messageSortDescriptors;
    NSMutableDictionary * _oldestThreadsByMailboxObjectIDs;
    EFProcessTransaction * _processTransaction;
    EDThreadReloadSummaryHelper * _reloadSummaryHelper;
    <EDRemoteSearchProvider> * _remoteSearchProvider;
    NSObject<OS_dispatch_queue> * _resultQueue;
    <EFScheduler> * _scheduler;
    EMCollectionItemIDStateCapturer * _stateCapturer;
    NSMutableDictionary * _threadsByConversationID;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _threadsLock;
    EDUpdateThrottler * _updateThrottler;
    EDVIPManager * _vipManager;
}

@property (nonatomic, readonly) id /* block */ comparator;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *contentProtectionQueue;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool didCancel;
@property (nonatomic) bool hasChangesWhilePaused;
@property (nonatomic) bool hasEverReconciledJournal;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) EFLazyCache *inMemoryThreadCache;
@property (nonatomic) bool isInitialized;
@property (nonatomic) bool isPaused;
@property (nonatomic, readonly) EMMailboxScope *mailboxScope;
@property (nonatomic, retain) EDMessageQueryHelper *messageQueryHelper;
@property (nonatomic, readonly, copy) NSArray *messageSortDescriptors;
@property (nonatomic, readonly) EDThreadReloadSummaryHelper *reloadSummaryHelper;
@property (nonatomic, readonly) <EDRemoteSearchProvider> *remoteSearchProvider;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *resultQueue;
@property (nonatomic, readonly) <EMMessageListItemQueryResultsObserver> *resultsObserverIfNotPaused;
@property (nonatomic, readonly) <EFScheduler> *scheduler;
@property (nonatomic, readonly) EMCollectionItemIDStateCapturer *stateCapturer;
@property (readonly) Class superclass;
@property (nonatomic, readonly) EDUpdateThrottler *updateThrottler;
@property (nonatomic, readonly) EDVIPManager *vipManager;

+ (id)log;

- (void).cxx_destruct;
- (void)_blockedSendersDidChange:(id)arg1;
- (void)_contentProtectionChangedToLocked;
- (void)_contentProtectionChangedToUnlocked;
- (long long)_conversationIDFromObjectID:(id)arg1;
- (void)_createHelper;
- (id)_createInMemoryThreadForConversationID:(long long)arg1;
- (bool)_didMergeInThreads:(id)arg1;
- (void)_didSendUpdates;
- (id)_inMemoryThreadForConversationID:(long long)arg1;
- (id)_inMemoryThreadSortDescriptorsForThreadSortDescriptors:(id)arg1;
- (id)_inMemoryThreadsForObjectIDs:(id)arg1 cacheResults:(bool)arg2;
- (void)_initializeOldestThreadsByMailbox;
- (bool)_mergeInThreads:(id)arg1 forMove:(bool)arg2;
- (bool)_messageListItemChangeAffectsSorting:(id)arg1;
- (id)_messageQueryFromThreadsQuery:(id)arg1;
- (id)_messagesByConversationIDForMessages:(id)arg1;
- (void)_messagesWereAdded:(id)arg1;
- (void)_messagesWereChanged:(id)arg1 forKeyPaths:(id)arg2 deleted:(bool)arg3;
- (void)_notifyObserverOfOldestThreadsByMailboxObjectIDs;
- (id)_predicateForMessagesInConversations:(id)arg1;
- (void)_prepareToSendUpdates;
- (bool)_queryHelperIsCurrent:(id)arg1;
- (void)_refreshObserver;
- (bool)_removeThreadProxies:(id)arg1 forMove:(bool)arg2;
- (bool)_reportChanges:(id)arg1;
- (bool)_reportDeletes:(id)arg1;
- (void)_restartHelper;
- (bool)_threadsWereDeleted;
- (bool)_updateCurrentOldestThreadWithThreadIfApplicable:(id)arg1 forMailbox:(id)arg2;
- (bool)_updateOldestThreadsForMailboxes:(id)arg1;
- (id)_updateThreadProxy:(id)arg1 threadIsEmpty:(bool*)arg2;
- (void)_vipsDidChange:(id)arg1;
- (void)cancel;
- (id /* block */)comparator;
- (id)contentProtectionQueue;
- (void)contentProtectionStateChanged:(long long)arg1 previousState:(long long)arg2;
- (void)dealloc;
- (bool)didCancel;
- (bool)hasChangesWhilePaused;
- (bool)hasEverReconciledJournal;
- (id)inMemoryThreadCache;
- (id)initWithQuery:(id)arg1 messagePersistence:(id)arg2 hookRegistry:(id)arg3 remindMeNotificationController:(id)arg4 vipManager:(id)arg5 remoteSearchProvider:(id)arg6 observer:(id)arg7 observationIdentifier:(id)arg8 observationResumer:(id)arg9;
- (bool)isInitialized;
- (bool)isPaused;
- (id)itemIDsForStateCaptureWithErrorString:(id*)arg1;
- (id)labelForStateCapture;
- (void)logThreadObjectIDsChangesWithMessage:(id)arg1 newObjectIDs:(id)arg2 beforeExistingObjectID:(id)arg3;
- (void)logThreadObjectIDsWithMessage:(id)arg1 objectIDs:(id)arg2;
- (id)mailboxScope;
- (id)messageListItemForObjectID:(id)arg1 error:(id*)arg2;
- (id)messageQueryHelper;
- (id)messageSortDescriptors;
- (id)messagesForThread:(id)arg1;
- (void)queryHelper:(id)arg1 conversationIDDidChangeForMessages:(id)arg2 fromConversationID:(long long)arg3;
- (void)queryHelper:(id)arg1 conversationNotificationLevelDidChangeForConversation:(long long)arg2 conversationID:(long long)arg3;
- (void)queryHelper:(id)arg1 didAddMessages:(id)arg2;
- (void)queryHelper:(id)arg1 didDeleteMessages:(id)arg2;
- (void)queryHelper:(id)arg1 didFindMessages:(id)arg2;
- (void)queryHelper:(id)arg1 didUpdateMessages:(id)arg2 forKeyPaths:(id)arg3;
- (void)queryHelper:(id)arg1 messageFlagsDidChangeForMessages:(id)arg2;
- (void)queryHelper:(id)arg1 objectIDDidChangeForMessage:(id)arg2 oldObjectID:(id)arg3 oldConversationID:(long long)arg4;
- (void)queryHelperDidFindAllMessages:(id)arg1;
- (void)queryHelperDidFinishRemoteSearch:(id)arg1;
- (void)queryHelperNeedsRestart:(id)arg1;
- (id)reloadSummaryHelper;
- (id)remoteSearchProvider;
- (id)resultQueue;
- (id)resultsObserverIfNotPaused;
- (id)scheduler;
- (void)setDidCancel:(bool)arg1;
- (void)setHasChangesWhilePaused:(bool)arg1;
- (void)setHasEverReconciledJournal:(bool)arg1;
- (void)setIsInitialized:(bool)arg1;
- (void)setIsPaused:(bool)arg1;
- (void)setMessageQueryHelper:(id)arg1;
- (bool)start;
- (id)stateCapturer;
- (void)tearDown;
- (void)test_tearDown;
- (id)threadsAndMessagesForObjectIDs:(id)arg1;
- (id)updateThrottler;
- (id)vipManager;

@end
