
@interface MessageListSectionDataSource : NSObject <EMMessageListChangeObserver, MessageListCellDisclosureDelegate, MessageListThreadHelperDelegate> {
    MessageListCollectionHelper * _collectionHelper;
    UICollectionView * _collectionView;
    EMCachingContactStore * _contactStore;
    <MessageListSectionDataSourceDelegate> * _delegate;
    EFLocked * _failedItemIDs;
    bool  _hasReloadedForTimeOut;
    EFPromise * _initialLoadCompletedPromise;
    bool  _isRefreshing;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _isRefreshingLock;
    MessageListItemHelper * _itemHelper;
    MessageListCellLayoutValuesHelper * _layoutValuesHelper;
    Class  _listCellClass;
    NSObject<OS_os_log> * _log;
    EMMessageList * _messageList;
    bool  _nextUpdateNeedsCleanSnapshot;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _nextUpdateNeedsCleanSnapshotLock;
    EMObjectID * _objectID;
    <MessageListSectionDataSourceProvider> * _provider;
    NSString * _section;
    <MessageListSectionDataSourceSelectionModelProvider> * _selectionModelProvider;
    bool  _shouldAlertOnBlankCell;
    <EFCancelable> * _shouldAlertOnBlankCellToken;
    NSObject<OS_os_log> * _signpostLog;
    MessageListViewControllerState * _state;
    MessageListThreadHelper * _threadHelper;
    NSMutableSet * _timedOutItemIDs;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _timedOutItemIDsLock;
}

@property (nonatomic, retain) MessageListCollectionHelper *collectionHelper;
@property (nonatomic) UICollectionView *collectionView;
@property (nonatomic, retain) EMCachingContactStore *contactStore;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <MessageListSectionDataSourceDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSSet *expandedThreadItemIDs;
@property (nonatomic, retain) EFLocked *failedItemIDs;
@property (nonatomic) bool hasReloadedForTimeOut;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) EFPromise *initialLoadCompletedPromise;
@property (nonatomic) bool isRefreshing;
@property (nonatomic, retain) MessageListItemHelper *itemHelper;
@property (nonatomic, retain) MessageListCellLayoutValuesHelper *layoutValuesHelper;
@property (nonatomic, retain) Class listCellClass;
@property (nonatomic, retain) NSObject<OS_os_log> *log;
@property (nonatomic, retain) EMMessageList *messageList;
@property (nonatomic) bool nextUpdateNeedsCleanSnapshot;
@property (nonatomic, readonly) EMObjectID *objectID;
@property (nonatomic) <MessageListSectionDataSourceProvider> *provider;
@property (nonatomic, readonly) NSString *section;
@property (nonatomic) <MessageListSectionDataSourceSelectionModelProvider> *selectionModelProvider;
@property (nonatomic, retain) <EFCancelable> *shouldAlertOnBlankCellToken;
@property (nonatomic, retain) NSObject<OS_os_log> *signpostLog;
@property (nonatomic, retain) MessageListViewControllerState *state;
@property (readonly) Class superclass;
@property (nonatomic, retain) MessageListThreadHelper *threadHelper;
@property (nonatomic, retain) NSMutableSet *timedOutItemIDs;

+ (id)changeWithCount:(long long)arg1;
+ (bool)isEmptyChange:(id)arg1;
+ (bool)isFirstChange:(id)arg1;
+ (bool)isValidChange:(id)arg1;
+ (id)publicDescriptionForChange:(id)arg1;
+ (id)skippedChange;

- (void).cxx_destruct;
- (void)_addedItemIDs:(id)arg1 before:(bool)arg2 existingItemID:(id)arg3 toThreadWithItemID:(id)arg4 inCollection:(id)arg5;
- (void)_configureCell:(id)arg1 atIndexPath:(id)arg2 itemID:(id)arg3;
- (void)_deleteItemsWithIDs:(id)arg1 fromCollection:(id)arg2 useImmediateCompletion:(bool)arg3 completionHandler:(id /* block */)arg4;
- (void)_enumerateItemIDs:(id)arg1 block:(id /* block */)arg2;
- (void)_maybeReloadForTimedOutItemIDs;
- (void)_performDataSourceUpdateAnimated:(bool)arg1 cleanSnapshot:(bool)arg2 prepare:(id /* block */)arg3 update:(id /* block */)arg4 completion:(id /* block */)arg5;
- (id)_preparedMessageListItemIDs;
- (void)_recoverFailedItemIDsForCollection:(id)arg1 completion:(id /* block */)arg2;
- (void)_recoverFailedItemIDsForCollection:(id)arg1 excluding:(id)arg2 completion:(id /* block */)arg3;
- (void)_reloadItemsWithItemIDs:(id)arg1;
- (void)_reloadPreparedItemIDsForCollection:(id)arg1 completion:(id /* block */)arg2;
- (void)_updateSelectionStateForItemsWithIDs:(id)arg1 inThreadWithItemID:(id)arg2 snapshot:(id)arg3 shouldDeselectMessages:(bool)arg4;
- (void)applyFilterPredicate:(id)arg1 ignoreMessagesPredicate:(id)arg2;
- (void)beginObservingAnimated:(bool)arg1 cleanSnapshot:(bool)arg2;
- (void)collection:(id)arg1 addedItemIDs:(id)arg2 after:(id)arg3;
- (void)collection:(id)arg1 addedItemIDs:(id)arg2 before:(id)arg3;
- (void)collection:(id)arg1 addedItemIDs:(id)arg2 toThreadWithItemID:(id)arg3 after:(id)arg4 unreadItemIDs:(id)arg5;
- (void)collection:(id)arg1 addedItemIDs:(id)arg2 toThreadWithItemID:(id)arg3 before:(id)arg4 unreadItemIDs:(id)arg5;
- (void)collection:(id)arg1 changedItemIDs:(id)arg2;
- (void)collection:(id)arg1 changedItemIDs:(id)arg2 itemIDsWithCountChanges:(id)arg3;
- (void)collection:(id)arg1 deletedItemIDs:(id)arg2;
- (void)collection:(id)arg1 didFinishInitialLoadForThreadWithItemID:(id)arg2;
- (void)collection:(id)arg1 movedItemIDs:(id)arg2 after:(id)arg3;
- (void)collection:(id)arg1 movedItemIDs:(id)arg2 before:(id)arg3;
- (void)collection:(id)arg1 oldestItemsUpdatedForMailboxes:(id)arg2;
- (void)collection:(id)arg1 replacedExistingItemID:(id)arg2 withNewItemID:(id)arg3;
- (void)collectionDidFinishInitialLoad:(id)arg1;
- (id)collectionHelper;
- (id)collectionView;
- (id)configuredCollectionViewCellForCollectionView:(id)arg1 indexPath:(id)arg2 itemID:(id)arg3;
- (id)configuredReusableSupplementaryViewForCollectionView:(id)arg1 elementKind:(id)arg2 indexPath:(id)arg3;
- (id)contactStore;
- (void)dealloc;
- (id)delegate;
- (void)deleteItemsWithIDs:(id)arg1 useImmediateCompletion:(bool)arg2 completionHandler:(id /* block */)arg3;
- (void)didFinishRecoveryForCollection:(id)arg1;
- (void)didFinishRemoteSearchForCollection:(id)arg1;
- (void)didScheduleReadInteractionForItemID:(id)arg1;
- (void)didSelectDisclosureButtonForMessageListItem:(id)arg1 disclosureEnabled:(bool)arg2;
- (id)expandedThreadItemIDs;
- (id)failedItemIDs;
- (bool)hasReloadedForTimeOut;
- (bool)hasSupplementaryViewOfKind:(id)arg1;
- (id)initWithConfiguration:(id)arg1;
- (id)initWithIdentifier:(id)arg1 section:(id)arg2 collectionView:(id)arg3 listCellClass:(Class)arg4 messageList:(id)arg5 initialLoadCompletedPromise:(id)arg6 layoutValuesHelper:(id)arg7 state:(id)arg8;
- (id)initialLoadCompletedPromise;
- (bool)isRefreshing;
- (id)itemHelper;
- (id)itemIDsInExpandedThread:(id)arg1;
- (id)layoutValuesHelper;
- (Class)listCellClass;
- (id)log;
- (id)messageList;
- (id)messageListItemForItemID:(id)arg1 indexPath:(id)arg2 receiver:(id)arg3 completion:(id /* block */)arg4;
- (bool)messageListItemHelper:(id)arg1 anyExpandedThreadContainsItemID:(id)arg2;
- (bool)messageListItemHelper:(id)arg1 isItemIDExpandedThread:(id)arg2;
- (bool)messageListItemHelper:(id)arg1 isItemIDSelected:(id)arg2;
- (void)messageListThreadHelper:(id)arg1 didCollapseMessageListItem:(id)arg2;
- (void)messageListThreadHelper:(id)arg1 didExpandMessageListItem:(id)arg2;
- (bool)nextUpdateNeedsCleanSnapshot;
- (id)objectID;
- (id)provider;
- (void)reconfigureItemsAtIndexPaths:(id)arg1;
- (void)refresh;
- (id)relatedItemIDsForSelectedItemID:(id)arg1 snapshot:(id)arg2;
- (void)replaceMessageList:(id)arg1 initialLoadCompletedPromise:(id)arg2;
- (id)section;
- (id)selectionModelProvider;
- (void)setCollectionHelper:(id)arg1;
- (void)setCollectionView:(id)arg1;
- (void)setContactStore:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setFailedItemIDs:(id)arg1;
- (void)setHasReloadedForTimeOut:(bool)arg1;
- (void)setInitialLoadCompletedPromise:(id)arg1;
- (void)setIsRefreshing:(bool)arg1;
- (void)setItemHelper:(id)arg1;
- (void)setLayoutValuesHelper:(id)arg1;
- (void)setListCellClass:(Class)arg1;
- (void)setLog:(id)arg1;
- (void)setMessageList:(id)arg1;
- (void)setNextUpdateNeedsCleanSnapshot:(bool)arg1;
- (void)setProvider:(id)arg1;
- (void)setSelectionModelProvider:(id)arg1;
- (void)setShouldAlertOnBlankCellToken:(id)arg1;
- (void)setSignpostLog:(id)arg1;
- (void)setState:(id)arg1;
- (void)setThreadHelper:(id)arg1;
- (void)setTimedOutItemIDs:(id)arg1;
- (id)shouldAlertOnBlankCellToken;
- (bool)shouldAlwaysShowSupplementaryViewOfKind:(id)arg1;
- (id)signpostLog;
- (id)state;
- (void)stopObserving;
- (id)threadHelper;
- (id)threadItemIDForItemInExpandedThread:(id)arg1;
- (id)timedOutItemIDs;

@end
