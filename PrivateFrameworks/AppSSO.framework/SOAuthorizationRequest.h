
@interface SOAuthorizationRequest : NSObject {
    bool  _authorizationCanceled;
    SOAuthorizationCredential * _canceledAuthorizationCredential;
    NSError * _canceledAuthorizationError;
    POLoginManager * _loginManager;
    SORemoteExtensionContext * _remoteExtensionContext;
    SOAuthorizationRequestParameters * _requestParameters;
    NSArray * _secKeyProxies;
    int  _secKeyProxiesConnectedClients;
}

@property (nonatomic, retain) NSData *auditTokenData;
@property (getter=isAuthorizationCanceled, nonatomic) bool authorizationCanceled;
@property (nonatomic, retain) NSDictionary *authorizationOptions;
@property (nonatomic, retain) NSString *callerBundleIdentifier;
@property (getter=isCallerManaged, nonatomic) bool callerManaged;
@property (nonatomic, retain) NSString *callerTeamIdentifier;
@property (nonatomic, retain) SOAuthorizationCredential *canceledAuthorizationCredential;
@property (nonatomic, retain) NSError *canceledAuthorizationError;
@property (getter=isCFNetworkInterception, setter=setCFNetworkInterception:, nonatomic) bool cfNetworkInterception;
@property (getter=isUserInteractionEnabled, nonatomic) bool enableUserInteraction;
@property (nonatomic, retain) NSDictionary *extensionData;
@property (nonatomic, retain) NSData *httpBody;
@property (nonatomic, retain) NSDictionary *httpHeaders;
@property (nonatomic, readonly) NSString *identifier;
@property (nonatomic, copy) NSString *impersonationBundleIdentifier;
@property (nonatomic, retain) NSString *localizedCallerDisplayName;
@property (nonatomic, readonly) POLoginManager *loginManager;
@property (nonatomic, retain) NSString *realm;
@property (nonatomic, retain) NSString *requestedOperation;
@property (nonatomic, retain) NSArray *secKeyProxies;
@property (nonatomic) int secKeyProxiesConnectedClients;
@property (nonatomic, retain) NSURL *url;

- (void).cxx_destruct;
- (void)_completeFinishAuthorizationWithRequestIdentifier:(id)arg1 error:(id)arg2;
- (id)_createSecKeyProxiesForSecKeys:(id)arg1 error:(id*)arg2;
- (id)_hostExtensionContext;
- (void)_invalidateLoginManager;
- (bool)_isUserInterfaceAllowed;
- (id)auditTokenData;
- (id)authorizationOptions;
- (id)callerBundleIdentifier;
- (id)callerTeamIdentifier;
- (void)cancel;
- (id)canceledAuthorizationCredential;
- (id)canceledAuthorizationError;
- (void)complete;
- (void)completeWithAuthorizationResult:(id)arg1;
- (void)completeWithError:(id)arg1;
- (void)completeWithHTTPAuthorizationHeaders:(id)arg1;
- (void)completeWithHTTPResponse:(id)arg1 httpBody:(id)arg2;
- (void)doNotHandle;
- (id)extensionData;
- (id)httpBody;
- (id)httpHeaders;
- (id)identifier;
- (id)impersonationBundleIdentifier;
- (id)initWithRequestParameters:(id)arg1 remoteExtensionContext:(id)arg2;
- (bool)isAuthorizationCanceled;
- (bool)isCFNetworkInterception;
- (bool)isCallerManaged;
- (bool)isUserInteractionEnabled;
- (id)localizedCallerDisplayName;
- (id)loginManager;
- (void)presentAuthorizationViewControllerWithCompletion:(id /* block */)arg1;
- (void)presentAuthorizationViewControllerWithHints:(id)arg1 completion:(id /* block */)arg2;
- (id)realm;
- (id)requestedOperation;
- (id)secKeyProxies;
- (int)secKeyProxiesConnectedClients;
- (void)setAuditTokenData:(id)arg1;
- (void)setAuthorizationCanceled:(bool)arg1;
- (void)setAuthorizationOptions:(id)arg1;
- (void)setCFNetworkInterception:(bool)arg1;
- (void)setCallerBundleIdentifier:(id)arg1;
- (void)setCallerManaged:(bool)arg1;
- (void)setCallerTeamIdentifier:(id)arg1;
- (void)setCanceledAuthorizationCredential:(id)arg1;
- (void)setCanceledAuthorizationError:(id)arg1;
- (void)setEnableUserInteraction:(bool)arg1;
- (void)setExtensionData:(id)arg1;
- (void)setHttpBody:(id)arg1;
- (void)setHttpHeaders:(id)arg1;
- (void)setImpersonationBundleIdentifier:(id)arg1;
- (void)setLocalizedCallerDisplayName:(id)arg1;
- (void)setRealm:(id)arg1;
- (void)setRequestedOperation:(id)arg1;
- (void)setSecKeyProxies:(id)arg1;
- (void)setSecKeyProxiesConnectedClients:(int)arg1;
- (void)setUrl:(id)arg1;
- (id)url;

@end
