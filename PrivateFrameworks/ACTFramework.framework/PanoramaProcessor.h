
@interface PanoramaProcessor : NSObject <MetalImageBufferProcessor> {
    struct { 
        /* Warning: Unrecognized filer type: ']' using 'void*' */ void*columns[3]; 
    }  _accumulatedInitialHomography;
    PanoramaAssemblyStage * _assemblyStage;
    NSDictionary * _cameraSetupPlist;
    <MTLCommandQueue> * _commandQueue;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _cropRect;
    struct { 
        /* Warning: Unrecognized filer type: ']' using 'void*' */ void*columns[3]; 
    }  _currentInitialHomography;
    NSNumber * _defaultBlendingConfig;
    NSNumber * _defaultDirection;
    NSNumber * _defaultFallback;
    NSNumber * _defaultPrediction;
    NSNumber * _defaultPredictionMethod;
    NSNumber * _defaultRegistrationMethod;
    int  _direction;
    bool  _doParallaxCorrection;
    struct __CVPixelBufferPool { } * _downsampledRegistrationPool;
    ACTPanoGPUDownscaler * _downscaler;
    PanoramaGyroStage * _gyroStage;
    struct __CVPixelBufferPool { } * _inputSlicePool;
    NSDictionary * _lastMetadata;
    NSNumber * _maxWidth;
    FigMetalContext * _metal;
    unsigned long long  _nbFramesDropped;
    unsigned long long  _nbFramesReceived;
    unsigned long long  _nbFramesSkipped;
    NRFProcessor * _nrfProcessor;
    PanoramaOutput * _output;
    struct { 
        unsigned long long frameWidth; 
        unsigned long long frameHeight; 
        bool enableTranslationCorrection; 
        int movingAverageFilterSize; 
        int referenceMeanStartingFrame; 
        float atlasTranslationShiftLowThreshold; 
        float atlasTranslationShiftHighThreshold; 
        float atlasTranslationCorrectionStrength; 
        int NRFversion; 
    }  _panoramaParams;
    PanoramaParallaxStage * _parallaxStage;
    unsigned long long  _poolOccupancy;
    bool  _prevFrameDropped;
    NSNumber * _previewHeight;
    PanoramaPreviewOutput * _previewOutput;
    NSNumber * _previewScale;
    NSNumber * _previewWidth;
    NSObject<OS_dispatch_queue> * _processingQueue;
    <PanoRegistrationProvider> * _registrationProvider;
    PanoramaRegistrationStage * _registrationStage;
    unsigned long long  _sliceHeight;
    unsigned long long  _sliceWidth;
    PanoramaStitchingStage * _stitchingStage;
    struct __CVBuffer { } * _toACTFramework;
    struct OpaqueVTPixelTransferSession { } * _vtSession;
    NSNumber * _writeSlicesToDisc;
    NSDictionary * cameraInfoByPortType;
    <MTLCommandQueue> * metalCommandQueue;
    NSDictionary * tuningParameters;
}

@property (nonatomic, retain) NSDictionary *cameraInfoByPortType;
@property (nonatomic, readonly) <MTLCommandQueue> *commandQueue;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) NSNumber *defaultBlendingConfig;
@property (nonatomic, readonly) NSNumber *defaultDirection;
@property (nonatomic, readonly) NSNumber *defaultFallback;
@property (nonatomic, readonly) NSNumber *defaultPrediction;
@property (nonatomic, readonly) NSNumber *defaultPredictionMethod;
@property (nonatomic, readonly) NSNumber *defaultRegistrationMethod;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool doParallaxCorrection;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSNumber *maxWidth;
@property (nonatomic, retain) <MTLCommandQueue> *metalCommandQueue;
@property (nonatomic, readonly) unsigned long long nbFramesDropped;
@property (nonatomic, readonly) unsigned long long nbFramesReceived;
@property (nonatomic, readonly) unsigned long long nbFramesSkipped;
@property (nonatomic, retain) PanoramaOutput *output;
@property (nonatomic, readonly) NSNumber *previewHeight;
@property (nonatomic, retain) PanoramaPreviewOutput *previewOutput;
@property (nonatomic, readonly) NSNumber *previewScale;
@property (nonatomic, readonly) NSNumber *previewWidth;
@property (nonatomic, retain) <PanoRegistrationProvider> *registrationProvider;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSDictionary *tuningParameters;
@property (nonatomic, retain) NSNumber *writeSlicesToDisc;

+ (void)prewarm;

- (void).cxx_destruct;
- (int)_addLastSlice;
- (int)_commonInitWithContext:(id)arg1 NRFversion:(int)arg2;
- (int)_createDummyOutput;
- (void)_setPreviousFrameDroppedFlag:(struct opaqueCMSampleBuffer { }*)arg1 dropped:(bool)arg2;
- (int)addFrame:(struct opaqueCMSampleBuffer { }*)arg1 registrationCallback:(id /* block */)arg2;
- (int)addFrameForStitching:(struct opaqueCMSampleBuffer { }*)arg1 withInitialHomography:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[3]; })arg2 registrationCallback:(id /* block */)arg3;
- (int)addFrameWithoutStitching:(struct opaqueCMSampleBuffer { }*)arg1 registrationCallback:(id /* block */)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })autocropMask;
- (id)cameraInfoByPortType;
- (id)commandQueue;
- (void)dealloc;
- (id)defaultBlendingConfig;
- (id)defaultDirection;
- (id)defaultFallback;
- (id)defaultPrediction;
- (id)defaultPredictionMethod;
- (id)defaultRegistrationMethod;
- (bool)doParallaxCorrection;
- (id)encodedResult;
- (int)finishProcessing;
- (int)getMaskAsBuffer:(char **)arg1 widthOut:(unsigned long long*)arg2 heightOut:(unsigned long long*)arg3;
- (void)getRegistrationWidth:(unsigned long long*)arg1 height:(unsigned long long*)arg2;
- (id)init:(struct { unsigned long long x1; unsigned long long x2; bool x3; int x4; int x5; float x6; float x7; float x8; int x9; })arg1;
- (id)maxWidth;
- (id)metalCommandQueue;
- (id)metalContext;
- (unsigned long long)nbFramesDropped;
- (unsigned long long)nbFramesReceived;
- (unsigned long long)nbFramesSkipped;
- (id)output;
- (int)prepareToProcess:(unsigned int)arg1;
- (int)prepareToProcess_PanoSpecific:(unsigned int)arg1 frameWidth:(unsigned long long)arg2 frameHeight:(unsigned long long)arg3;
- (id)previewHeight;
- (id)previewOutput;
- (id)previewScale;
- (id)previewWidth;
- (int)prewarm;
- (int)process;
- (int)purgeResources;
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[3]; })refineInitialHomography:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[3]; })arg1;
- (id)registrationProvider;
- (int)resetState;
- (void)setCameraInfoByPortType:(id)arg1;
- (int)setDirection:(int)arg1;
- (void)setDoParallaxCorrection:(bool)arg1;
- (void)setMetalCommandQueue:(id)arg1;
- (void)setOutput:(id)arg1;
- (int)setPanoramaParameters:(struct { unsigned long long x1; unsigned long long x2; bool x3; int x4; int x5; float x6; float x7; float x8; int x9; })arg1;
- (void)setPreviewOutput:(id)arg1;
- (void)setRegistrationProvider:(id)arg1;
- (void)setTuningParameters:(id)arg1;
- (void)setWriteSlicesToDisc:(id)arg1;
- (int)setup;
- (id)tuningParameters;
- (id)writeSlicesToDisc;

@end
