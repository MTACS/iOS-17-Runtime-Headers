
@interface ASCOfferButton : UIControl {
    UIViewPropertyAnimator * _currentTransition;
    <ASCOfferButtonDelegate> * _delegate;
    bool  _fixedHeight;
    ASCOfferButtonBackgroundImageView * _imageView;
    ASCOfferMetadata * _metadata;
    ASCModalViewInteraction * _modalInteraction;
    bool  _shouldExpandBackground;
    bool  _shouldTopAlign;
    NSString * _size;
    UILabel * _subtitleLabelIfLoaded;
    long long  _subtitlePosition;
    ASCOfferTheme * _theme;
    UILabel * _titleLabelIfLoaded;
    double  _topPadding;
}

@property (nonatomic, retain) UIViewPropertyAnimator *currentTransition;
@property (nonatomic) <ASCOfferButtonDelegate> *delegate;
@property (getter=isFixedHeight, nonatomic) bool fixedHeight;
@property (nonatomic, retain) CAAnimation *imageAnimation;
@property (nonatomic, readonly) ASCOfferButtonBackgroundImageView *imageView;
@property (nonatomic, retain) ASCOfferMetadata *metadata;
@property (nonatomic, retain) ASCModalViewInteraction *modalInteraction;
@property (nonatomic) bool shouldExpandBackground;
@property (nonatomic) bool shouldTopAlign;
@property (nonatomic, retain) NSString *size;
@property (nonatomic, readonly) UILabel *subtitleLabel;
@property (nonatomic, readonly) UILabel *subtitleLabelIfLoaded;
@property (nonatomic) long long subtitlePosition;
@property (nonatomic, retain) ASCOfferTheme *theme;
@property (nonatomic, readonly) UILabel *titleLabel;
@property (nonatomic, readonly) UILabel *titleLabelIfLoaded;
@property (nonatomic) double topPadding;

+ (bool)adjustsTitleFontSizeToFitWidthForSize:(id)arg1;
+ (id)mediumTitleFontForText:(id)arg1 compatibleWithTraitCollection:(id)arg2;
+ (id)progressStateImageFittingSize:(id)arg1 forTheme:(id)arg2 startPercent:(double)arg3 endPercent:(double)arg4 useFullImageSize:(bool)arg5;
+ (id)smallTitleFontForText:(id)arg1 compatibleWithTraitCollection:(id)arg2;
+ (id)viewInAppStoreTitleFontForText:(id)arg1 compatibleWithTraitCollection:(id)arg2;

- (void).cxx_destruct;
- (bool)accessibilityActivate;
- (id)accessibilityHint;
- (id)accessibilityIdentifier;
- (id)accessibilityLabel;
- (unsigned long long)accessibilityTraits;
- (id)accessibilityValue;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })alignmentRectInsets;
- (void)beginModalStateWithCancelBlock:(id /* block */)arg1;
- (bool)canBecomeFocused;
- (bool)canTransitionToMetadata:(id)arg1;
- (bool)chainTransitionToMetadata:(id)arg1 scalingDurationBy:(double)arg2 withCompletion:(id /* block */)arg3;
- (id)currentTransition;
- (id)delegate;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (void)endModalState;
- (id)focusEffect;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)imageAnimation;
- (id)imageView;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (void)invalidateIntrinsicContentSize;
- (bool)isAccessibilityElement;
- (bool)isFixedHeight;
- (void)layoutSubviews;
- (id)makeLayout;
- (id)metadata;
- (id)modalInteraction;
- (void)onTraitCollectionChange;
- (void)pressesBegan:(id)arg1 withEvent:(id)arg2;
- (void)pressesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)pressesEnded:(id)arg1 withEvent:(id)arg2;
- (void)setCurrentTransition:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEnabled:(bool)arg1;
- (void)setFixedHeight:(bool)arg1;
- (void)setHighlighted:(bool)arg1;
- (void)setImageAnimation:(id)arg1;
- (void)setMetadata:(id)arg1;
- (void)setModalInteraction:(id)arg1;
- (void)setSemanticContentAttribute:(long long)arg1;
- (void)setShouldExpandBackground:(bool)arg1;
- (void)setShouldTopAlign:(bool)arg1;
- (void)setSize:(id)arg1;
- (void)setSubtitleLabelIfLoaded:(id)arg1;
- (void)setSubtitlePosition:(long long)arg1;
- (void)setTheme:(id)arg1;
- (void)setTitleLabelIfLoaded:(id)arg1;
- (void)setTopPadding:(double)arg1;
- (bool)shouldExpandBackground;
- (bool)shouldTopAlign;
- (bool)shouldTransitionImageViewFromMetadata:(id)arg1 toMetadata:(id)arg2;
- (id)size;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (id)subtitleLabel;
- (id)subtitleLabelIfLoaded;
- (long long)subtitlePosition;
- (id)theme;
- (id)titleLabel;
- (id)titleLabelIfLoaded;
- (double)topPadding;
- (id)transitionColorForMetadata:(id)arg1;
- (id)transitionImageForMetadata:(id)arg1;
- (void)transitionToMetadata:(id)arg1 scalingDurationBy:(double)arg2 withCompletion:(id /* block */)arg3;
- (void)transitionToMetadata:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)updateFocusState;
- (void)updateImageStyleProperties;
- (void)updateLabelStyleProperties;

@end
