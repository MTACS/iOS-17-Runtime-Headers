
@interface CUBluetoothClassicConnection : NSObject <CUReadWriteRequestable> {
    id /* block */  _activateCompletion;
    bool  _btConnected;
    BOOL  _btDeviceAddrStr;
    bool  _btServiceAddCallbacks;
    struct BTSessionImpl { } * _btSession;
    bool  _btSessionAttaching;
    bool  _btSessionNeeded;
    bool  _btSessionStarted;
    unsigned int  _connectionFlags;
    NSString * _destinationPeer;
    NSString * _destinationService;
    NSObject<OS_dispatch_queue> * _dispatchQueue;
    id /* block */  _errorHandler;
    bool  _invalidateCalled;
    bool  _invalidateDone;
    id /* block */  _invalidationHandler;
    CBL2CAPChannel * _l2capChannel;
    NSString * _label;
    CUReadRequest * _readRequestCurrent;
    NSMutableArray * _readRequests;
    NSObject<OS_dispatch_source> * _readSource;
    unsigned char  _readSuspended;
    unsigned int  _requiredServices;
    id /* block */  _serverInvalidationHandler;
    int  _socketFD;
    int  _state;
    NSObject<OS_dispatch_source> * _timeoutTimer;
    struct LogCategory { int x1; int x2; char *x3; unsigned int x4; char *x5; char *x6; int x7; struct LogCategory {} *x8; struct LogOutput {} *x9; struct LogOutput {} *x10; unsigned long long x11; unsigned long long x12; unsigned int x13; unsigned int x14; char *x15; struct LogCategoryPrivate {} *x16; } * _ucat;
    CUWriteRequest * _writeRequestCurrent;
    NSMutableArray * _writeRequests;
    NSObject<OS_dispatch_source> * _writeSource;
    unsigned char  _writeSuspended;
}

@property (nonatomic) unsigned int connectionFlags;
@property (nonatomic, copy) NSString *destinationPeer;
@property (nonatomic, copy) NSString *destinationService;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (nonatomic, copy) id /* block */ errorHandler;
@property (nonatomic, copy) id /* block */ invalidationHandler;
@property (nonatomic, retain) CBL2CAPChannel *l2capChannel;
@property (nonatomic, copy) NSString *label;
@property (nonatomic) unsigned int requiredServices;
@property (nonatomic, copy) id /* block */ serverInvalidationHandler;

- (void).cxx_destruct;
- (void)_abortReadsWithError:(id)arg1;
- (void)_abortWritesWithError:(id)arg1;
- (struct BTDeviceImpl { }*)_btDeviceWithID:(id)arg1 error:(id*)arg2;
- (void)_btEnsureStopped;
- (void)_completeReadRequest:(id)arg1 error:(id)arg2;
- (void)_completeWriteRequest:(id)arg1 error:(id)arg2;
- (void)_invalidate;
- (void)_invalidated;
- (void)_prepareReadRequest:(id)arg1;
- (bool)_prepareWriteRequest:(id)arg1 error:(id*)arg2;
- (bool)_processReadStatus;
- (void)_processReads:(bool)arg1;
- (void)_processWrites;
- (void)_reportError:(id)arg1;
- (void)_run;
- (bool)_runBTSessionStart;
- (bool)_runConnectStart;
- (bool)_runOpenChannelStart;
- (bool)_runSetupChannel;
- (bool)_setupIOAndReturnError:(id*)arg1;
- (bool)_startConnectingAndReturnError:(id*)arg1;
- (bool)activateDirectAndReturnError:(id*)arg1;
- (void)activateWithCompletion:(id /* block */)arg1;
- (unsigned int)connectionFlags;
- (void)dealloc;
- (id)destinationPeer;
- (id)destinationService;
- (id)dispatchQueue;
- (id /* block */)errorHandler;
- (id)init;
- (void)invalidate;
- (id /* block */)invalidationHandler;
- (id)l2capChannel;
- (id)label;
- (void)readWithRequest:(id)arg1;
- (unsigned int)requiredServices;
- (id /* block */)serverInvalidationHandler;
- (void)setConnectionFlags:(unsigned int)arg1;
- (void)setDestinationPeer:(id)arg1;
- (void)setDestinationService:(id)arg1;
- (void)setDispatchQueue:(id)arg1;
- (void)setErrorHandler:(id /* block */)arg1;
- (void)setInvalidationHandler:(id /* block */)arg1;
- (void)setL2capChannel:(id)arg1;
- (void)setLabel:(id)arg1;
- (void)setRequiredServices:(unsigned int)arg1;
- (void)setServerInvalidationHandler:(id /* block */)arg1;
- (void)writeEndOfDataWithCompletion:(id /* block */)arg1;
- (void)writeWithRequest:(id)arg1;

@end
