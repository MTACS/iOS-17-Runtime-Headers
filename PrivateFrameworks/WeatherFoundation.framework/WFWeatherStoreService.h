
@interface WFWeatherStoreService : NSObject <WFWeatherStore> {
    NSMutableDictionary * _URLToCallbackMap;
    NSMutableDictionary * _URLToTaskMap;
    NSMutableDictionary * _UUIDToCallbackMap;
    NSMutableDictionary * _UUIDToURLMap;
    WFWeatherStoreCache * _cache;
    WFWeatherStoreServiceConfiguration * _configuration;
    id /* block */  _forecastRequestStartingCallback;
    NSObject<OS_dispatch_queue> * _incomingRequestQueue;
    id /* block */  _locationGeocodeForCoordinateRequestStartingCallback;
    NSObject<OS_dispatch_queue> * _mapQueue;
    NSObject<OS_dispatch_queue> * _parseQueue;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _retryLock;
    WFNetworkRetryManager * _retryManager;
}

@property (retain) NSMutableDictionary *URLToCallbackMap;
@property (retain) NSMutableDictionary *URLToTaskMap;
@property (retain) NSMutableDictionary *UUIDToCallbackMap;
@property (retain) NSMutableDictionary *UUIDToURLMap;
@property (retain) WFWeatherStoreCache *cache;
@property (nonatomic, copy) WFWeatherStoreServiceConfiguration *configuration;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) id /* block */ forecastRequestStartingCallback;
@property (readonly) unsigned long long hash;
@property (retain) NSObject<OS_dispatch_queue> *incomingRequestQueue;
@property (nonatomic, copy) id /* block */ locationGeocodeForCoordinateRequestStartingCallback;
@property (retain) NSObject<OS_dispatch_queue> *mapQueue;
@property (retain) NSObject<OS_dispatch_queue> *parseQueue;
@property struct os_unfair_lock_s { unsigned int x1; } retryLock;
@property (nonatomic, retain) WFNetworkRetryManager *retryManager;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)URLToCallbackMap;
- (id)URLToTaskMap;
- (id)UUIDToCallbackMap;
- (id)UUIDToURLMap;
- (void)_addCallback:(id)arg1 requestIdentifier:(id)arg2 forURL:(id)arg3;
- (void)_cacheObject:(id)arg1 type:(unsigned long long)arg2 date:(id)arg3 forLocation:(id)arg4;
- (bool)_cacheParsedForecastData:(id)arg1 types:(unsigned long long)arg2 location:(id)arg3 date:(id)arg4 requestIdentifier:(id)arg5;
- (id)_cachedAirQualityConditionsForLocation:(id)arg1 date:(id)arg2;
- (id)_cachedChangeForecastForLocation:(id)arg1 date:(id)arg2;
- (id)_cachedCurrentObservationsForLocation:(id)arg1 date:(id)arg2;
- (id)_cachedDailyForecastedConditionsForLocation:(id)arg1 date:(id)arg2;
- (id)_cachedDailyPollenForecastedConditionsForLocation:(id)arg1 date:(id)arg2;
- (id)_cachedData:(unsigned long long)arg1 forLocation:(id)arg2 date:(id)arg3;
- (id)_cachedHistoricalObservationsForLast24hForLocation:(id)arg1 date:(id)arg2;
- (id)_cachedHourlyForecastedConditionsForLocation:(id)arg1 date:(id)arg2;
- (id)_cachedNextHourPrecipitationForLocation:(id)arg1 date:(id)arg2;
- (id)_cachedSevereWeatherEventsForLocation:(id)arg1 date:(id)arg2;
- (void)_cancelWithRequestIdentifier:(id)arg1;
- (void)_cleanupCallbacksAndTasksForURL:(id)arg1;
- (id)_currentScaleCategoryForScale:(id)arg1 index:(unsigned long long)arg2;
- (void)_enumerateForecastTypesIn:(unsigned long long)arg1 usingBlock:(id /* block */)arg2;
- (void)_executeCallbacksForURL:(id)arg1 responseData:(id)arg2 error:(id)arg3;
- (void)_forecastConditionsForTWCAQIAndTypes:(unsigned long long)arg1 location:(id)arg2 locale:(id)arg3 date:(id)arg4 requestIdentifier:(id)arg5 completionHandler:(id /* block */)arg6;
- (void)_forecastConditionsForTypes:(unsigned long long)arg1 location:(id)arg2 locale:(id)arg3 date:(id)arg4 requestIdentifier:(id)arg5 completionHandler:(id /* block */)arg6;
- (void)_forecastConditionsForTypes:(unsigned long long)arg1 location:(id)arg2 units:(int)arg3 locale:(id)arg4 date:(id)arg5 requestIdentifier:(id)arg6 requestOptions:(id)arg7 completionHandler:(id /* block */)arg8;
- (bool)_handleDataTaskCompletionWithData:(id)arg1 httpResponse:(id)arg2 apiVersion:(id)arg3 identifier:(id)arg4 requestURL:(id)arg5 dataTask:(id)arg6 dataTaskError:(id)arg7 startDate:(id)arg8;
- (bool)_isConnectivityAvailableForWeatherHost:(id*)arg1;
- (void)_setTask:(id)arg1 requestIdentifier:(id)arg2 callback:(id)arg3 forURL:(id)arg4;
- (void)_submitRequest:(id)arg1 withIdentifier:(id)arg2 forLocation:(id)arg3 forecastTypes:(unsigned long long)arg4 configuration:(id)arg5 units:(int)arg6 locale:(id)arg7 date:(id)arg8 apiVersion:(id)arg9 completionHandler:(id /* block */)arg10;
- (void)_submitRequest:(id)arg1 withIdentifier:(id)arg2 forScaleNamed:(id)arg3 language:(id)arg4 configuration:(id)arg5 apiVersion:(id)arg6 completionHandler:(id /* block */)arg7;
- (id)_taskForURL:(id)arg1;
- (void)airQualityForLocation:(id)arg1 locale:(id)arg2 requestIdentifier:(id)arg3 options:(id)arg4 completionHandler:(id /* block */)arg5;
- (id)apiVersionForSettings:(id)arg1;
- (id)cache;
- (void)cancelTaskWithIdentifier:(id)arg1;
- (void)completeErroneousForecastRequestWithHandler:(id /* block */)arg1 requestIdentifier:(id)arg2 error:(id)arg3;
- (id)configuration;
- (void)dailyForecastForLocation:(id)arg1 locale:(id)arg2 requestIdentifier:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)dealloc;
- (void)forecast:(unsigned long long)arg1 forLocation:(id)arg2 locale:(id)arg3 requestIdentifier:(id)arg4 completionHandler:(id /* block */)arg5;
- (void)forecast:(unsigned long long)arg1 forLocation:(id)arg2 withUnits:(int)arg3 locale:(id)arg4 requestIdentifier:(id)arg5 completionHandler:(id /* block */)arg6;
- (void)forecast:(unsigned long long)arg1 forLocation:(id)arg2 withUnits:(int)arg3 locale:(id)arg4 requestIdentifier:(id)arg5 requestOptions:(id)arg6 completionHandler:(id /* block */)arg7;
- (void)forecastForLocation:(id)arg1 locale:(id)arg2 onDate:(id)arg3 requestIdentifier:(id)arg4 options:(id)arg5 completionHandler:(id /* block */)arg6;
- (id /* block */)forecastRequestStartingCallback;
- (void)hourlyForecastForLocation:(id)arg1 locale:(id)arg2 requestIdentifier:(id)arg3 completionHandler:(id /* block */)arg4;
- (id)incomingRequestQueue;
- (id)init;
- (id)initWithConfiguration:(id)arg1;
- (id)initWithConfiguration:(id)arg1 error:(id*)arg2;
- (void)invalidateCacheWithIdentifier:(id)arg1;
- (id)languageForLocale:(id)arg1;
- (id /* block */)locationGeocodeForCoordinateRequestStartingCallback;
- (id)mapQueue;
- (id)parseQueue;
- (void)requestFailureForAPIVersion:(id)arg1 error:(id)arg2;
- (void)requestSuccessForAPIVersion:(id)arg1;
- (struct os_unfair_lock_s { unsigned int x1; })retryLock;
- (id)retryManager;
- (void)setCache:(id)arg1;
- (void)setConfiguration:(id)arg1;
- (void)setForecastRequestStartingCallback:(id /* block */)arg1;
- (void)setIncomingRequestQueue:(id)arg1;
- (void)setLocationGeocodeForCoordinateRequestStartingCallback:(id /* block */)arg1;
- (void)setMapQueue:(id)arg1;
- (void)setParseQueue:(id)arg1;
- (void)setRetryLock:(struct os_unfair_lock_s { unsigned int x1; })arg1;
- (void)setRetryManager:(id)arg1;
- (void)setURLToCallbackMap:(id)arg1;
- (void)setURLToTaskMap:(id)arg1;
- (void)setUUIDToCallbackMap:(id)arg1;
- (void)setUUIDToURLMap:(id)arg1;

@end
