
@interface MeasureFoundation.PatchTracker : _TtCs12_SwiftObject {
    void $__lazy_storage_$_convolveTempBuffer;
    void $__lazy_storage_$_embossBuffer;
    void $__lazy_storage_$_embossTempBuffer;
    void $__lazy_storage_$_frameImageBufferPool;
    void $__lazy_storage_$_frameImageRect;
    void $__lazy_storage_$_frameImageRectRounded;
    void $__lazy_storage_$_imageScaleFactor;
    void $__lazy_storage_$_imageScaleTempBuffer;
    void $__lazy_storage_$_imageToScreenTransformScaled;
    void $__lazy_storage_$_patchHalfSize;
    void $__lazy_storage_$_patchKernel;
    void $__lazy_storage_$_patchSize;
    void $__lazy_storage_$_patchUnscaledSize;
    void $__lazy_storage_$_pointFilter;
    void $__lazy_storage_$_scaledImageRect;
    void $__lazy_storage_$_scaledImageSize;
    void $__lazy_storage_$_screenToImageTransformScaled;
    void $__lazy_storage_$_screenToImageTransformUnscaled;
    void $__lazy_storage_$_viewportSize;
    void bestTriangulatedAngle;
    void cameraAnchorEnabled;
    void camerasConsiderAlignedCos;
    void checkCameraMotion;
    void currentKeyframe;
    void debugOptions;
    void debugger;
    void deltaRateToConsiderNoise;
    void depthCellExpiration;
    void depthMap;
    void depthMinAccumulation;
    void extrapolationEnabled;
    void frameIndex;
    void imageScaleFlags;
    void interpolationCameraMaxRotation;
    void interpolationCameraMaxTranslation;
    void interpolationEnabled;
    void lastKeyframes;
    void linePoints;
    void lock;
    void maxCameraFramerate;
    void maxMatchingPatches;
    void maxMatchingSimilarities;
    void maxMatchingThreshold;
    void maxMotionAcceleration;
    void maxTriangulatedAngleCos;
    void maxTriangulatedRaysErrorCos;
    void minCameraTranslation;
    void minMatchingPatches;
    void minMatchingThreshold;
    void minTriangulatedAngleCos;
    void motion;
    void numKeyframes;
    void orientation;
    void patchPlainDetection;
    void patchPlainWeightThreshold;
    void patchSizeInPixels;
    void pointFilterEnabled;
    void pointFilterErrorThreshold;
    void precomputePatchWeights;
    void rangeEstimationBiases;
    void rangeEstimationEnabled;
    void rayRange;
    void sceneView;
    void threePointMatching;
    void threePointOffsets;
}

@end
