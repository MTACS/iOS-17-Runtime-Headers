
@interface MRDestinationResolver : NSObject {
    MSVVariableIntervalTimer * _connectionRetryTimer;
    <MRDestinationResolverDelegate> * _delegate;
    MRAVEndpoint * _delegateEndpoint;
    MROrigin * _delegateOrigin;
    MRPlayerPath * _delegatePlayerPath;
    NSObject<OS_dispatch_queue> * _delegateQueue;
    MRDestinationResolverDependencies * _dependencies;
    MRDestination * _destination;
    MRAVEndpointObserver * _endpointObserver;
    NSString * _endpointObserverGroupUID;
    NSString * _label;
    MRDestination * _originalDestination;
    id  _playerPathInvalidationObserver;
    MSVVariableIntervalTimer * _reconRetryTimer;
    bool  _registeredForEndpointChanges;
    bool  _registeredForEndpointInvalidations;
    bool  _registeredForNotifications;
    bool  _registeredForPlayerPathInvalidations;
    bool  _resolving;
    MRAVEndpoint * _resolvingEndpoint;
    MRPlayerPath * _resolvingPlayerPath;
    NSObject<OS_dispatch_queue> * _serialQueue;
}

@property (nonatomic, retain) MSVVariableIntervalTimer *connectionRetryTimer;
@property (nonatomic) <MRDestinationResolverDelegate> *delegate;
@property (nonatomic, retain) MRAVEndpoint *delegateEndpoint;
@property (nonatomic, retain) MROrigin *delegateOrigin;
@property (nonatomic, retain) MRPlayerPath *delegatePlayerPath;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *delegateQueue;
@property (nonatomic, retain) MRDestinationResolverDependencies *dependencies;
@property (nonatomic, readonly, copy) MRDestination *destination;
@property (nonatomic, retain) MRAVEndpointObserver *endpointObserver;
@property (nonatomic, retain) NSString *endpointObserverGroupUID;
@property (nonatomic, readonly) NSString *label;
@property (nonatomic, retain) MRDestination *originalDestination;
@property (nonatomic, retain) id playerPathInvalidationObserver;
@property (nonatomic, retain) MSVVariableIntervalTimer *reconRetryTimer;
@property (nonatomic) bool registeredForEndpointChanges;
@property (nonatomic) bool registeredForEndpointInvalidations;
@property (nonatomic) bool registeredForNotifications;
@property (nonatomic) bool registeredForPlayerPathInvalidations;
@property (nonatomic) bool resolving;
@property (nonatomic, retain) MRAVEndpoint *resolvingEndpoint;
@property (nonatomic, retain) MRPlayerPath *resolvingPlayerPath;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *serialQueue;

+ (void)resolveDestination:(id)arg1 level:(long long)arg2 timeout:(double)arg3 completion:(id /* block */)arg4;
+ (void)resolveDestination:(id)arg1 timeout:(double)arg2 completion:(id /* block */)arg3;
+ (void)resolvePartialDestination:(id)arg1 level:(long long)arg2 timeout:(double)arg3 completion:(id /* block */)arg4;
+ (void)resolvePartialDestination:(id)arg1 level:(long long)arg2 timeout:(double)arg3 dependencies:(id)arg4 completion:(id /* block */)arg5;

- (void).cxx_destruct;
- (void)_handleEndpointDidDisconnectNotification:(id)arg1;
- (void)beginResolving;
- (id)connectionRetryTimer;
- (void)createPlayerPathForEndpoint:(id)arg1 client:(id)arg2 player:(id)arg3 completion:(id /* block */)arg4;
- (void)dealloc;
- (id)debugDescription;
- (id)delegate;
- (id)delegateEndpoint;
- (id)delegateOrigin;
- (id)delegatePlayerPath;
- (id)delegateQueue;
- (id)dependencies;
- (id)description;
- (id)destination;
- (void)endpointDidDisconnect:(id)arg1;
- (id)endpointObserver;
- (id)endpointObserverGroupUID;
- (void)handleActiveSystemEndpointChangedNotification:(id)arg1;
- (void)handleEndpointChanged;
- (void)handleEndpointInvalidated;
- (void)handleEndpointResolution:(id)arg1 client:(id)arg2 player:(id)arg3 source:(id)arg4 error:(id)arg5;
- (void)handlePlayerPathInvalidatedWithPlayerPath:(id)arg1;
- (id)initWithDestination:(id)arg1 label:(id)arg2;
- (id)initWithDestination:(id)arg1 label:(id)arg2 dependencies:(id)arg3;
- (bool)isDynamicEndpoint;
- (bool)isProactiveEndpoint;
- (bool)isUserSelectedEndpoint;
- (id)label;
- (void)notifyDelegateOfEndpointChange:(id)arg1;
- (void)notifyDelegateOfError:(id)arg1;
- (void)notifyDelegateOfInvalidation;
- (void)notifyDelegateOfOriginChange:(id)arg1;
- (void)notifyDelegateOfPlayerPathChange:(id)arg1;
- (void)onQueue_clearStateForEndpoint;
- (void)onQueue_clearStateForOutputDeviceUID;
- (void)onQueue_clearStateForPlayerPath;
- (void)onQueue_registerForEndpointInvalidations:(id)arg1;
- (void)onQueue_registerForPlayerPathInvalidationsForUnresolvedPlayerPath:(id)arg1;
- (void)onQueue_retrieveEndpointForContextUID:(id)arg1 completion:(id /* block */)arg2;
- (void)onQueue_retrieveEndpointForUID:(id)arg1 completion:(id /* block */)arg2;
- (void)onQueue_setEndpoint:(id)arg1;
- (void)onQueue_setOrigin:(id)arg1;
- (void)onQueue_setResolvedPlayerPath:(id)arg1;
- (void)onQueue_setUnresolvedPlayerPath:(id)arg1;
- (id)originalDestination;
- (id)playerPathInvalidationObserver;
- (id)reconRetryTimer;
- (void)registerForEndpointChangesForOutputDeviceUID:(id)arg1;
- (bool)registeredForEndpointChanges;
- (bool)registeredForEndpointInvalidations;
- (bool)registeredForNotifications;
- (bool)registeredForPlayerPathInvalidations;
- (void)resolve;
- (void)resolveForEndpoint:(id)arg1 client:(id)arg2 player:(id)arg3;
- (void)resolveForOutputContextUID:(id)arg1 client:(id)arg2 player:(id)arg3;
- (void)resolveForOutputDeviceUID:(id)arg1 client:(id)arg2 player:(id)arg3;
- (void)resolveForResolvedPlayerPath:(id)arg1;
- (void)resolveForUnresolvedPlayerPath:(id)arg1;
- (void)resolvePlayerPath:(id)arg1 completion:(id /* block */)arg2;
- (bool)resolving;
- (id)resolvingEndpoint;
- (id)resolvingPlayerPath;
- (id)serialQueue;
- (void)setConnectionRetryTimer:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDelegateEndpoint:(id)arg1;
- (void)setDelegateOrigin:(id)arg1;
- (void)setDelegatePlayerPath:(id)arg1;
- (void)setDelegateQueue:(id)arg1;
- (void)setDependencies:(id)arg1;
- (void)setEndpointObserver:(id)arg1;
- (void)setEndpointObserverGroupUID:(id)arg1;
- (void)setOriginalDestination:(id)arg1;
- (void)setPlayerPathInvalidationObserver:(id)arg1;
- (void)setReconRetryTimer:(id)arg1;
- (void)setRegisteredForEndpointChanges:(bool)arg1;
- (void)setRegisteredForEndpointInvalidations:(bool)arg1;
- (void)setRegisteredForNotifications:(bool)arg1;
- (void)setRegisteredForPlayerPathInvalidations:(bool)arg1;
- (void)setResolving:(bool)arg1;
- (void)setResolvingEndpoint:(id)arg1;
- (void)setResolvingPlayerPath:(id)arg1;
- (void)setSerialQueue:(id)arg1;
- (void)unregisterForEndpointChanges;
- (void)unregisterForEndpointInvalidations;
- (void)unregisterForPlayerPathInvalidations;

@end
