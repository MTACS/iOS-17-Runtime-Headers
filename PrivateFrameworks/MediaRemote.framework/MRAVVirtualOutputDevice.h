
@interface MRAVVirtualOutputDevice : MRAVOutputDevice {
    NSData * _MACAddress;
    NSObject<OS_dispatch_queue> * _accessSerialQueue;
    bool  _airPlayReceiver;
    NSArray * _availableBluetoothListeningModes;
    float  _batteryLevel;
    NSString * _bluetoothID;
    bool  _canAccessAppleMusic;
    bool  _canAccessRemoteAssets;
    bool  _canAccessiCloudMusicLibrary;
    bool  _canFetchMediaDataFromSender;
    bool  _canPlayEncryptedProgressiveDownloadAssets;
    bool  _canRelayCommunicationChannel;
    NSString * _currentBluetoothListeningMode;
    unsigned int  _deviceSubType;
    unsigned int  _deviceType;
    NSString * _firmwareVersion;
    bool  _groupContainsGroupLeader;
    NSString * _groupID;
    bool  _hasBatteryLevel;
    bool  _isAddedToHomeKit;
    bool  _isGroupLeader;
    bool  _isGroupable;
    bool  _isLocalDevice;
    bool  _isPickedOnPairedDevice;
    bool  _isProxyGroupPlayer;
    bool  _isRemoteControllable;
    bool  _isUsingJSONProtocol;
    bool  _isVolumeControlAvailable;
    NSData * _jsonDeviceDefinition;
    NSString * _logicalDeviceID;
    NSString * _modelID;
    NSDictionary * _modelSpecificInfo;
    NSString * _name;
    NSString * _parentGroupIdentifier;
    NSXPCListenerEndpoint * _pipeEndpoint;
    NSString * _playingPairedDeviceName;
    bool  _presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets;
    bool  _requiresAuthorization;
    bool  _supportsBluetoothSharing;
    bool  _supportsBufferedAirPlay;
    bool  _supportsExternalScreen;
    bool  _supportsRapport;
    NSString * _uid;
    float  _volume;
}

@property (nonatomic, readonly) NSData *jsonDeviceDefinition;
@property (nonatomic, readonly) NSXPCListenerEndpoint *pipeEndpoint;

- (void).cxx_destruct;
- (id)MACAddress;
- (id)availableBluetoothListeningModes;
- (float)batteryLevel;
- (id)bluetoothID;
- (bool)canAccessAppleMusic;
- (bool)canAccessRemoteAssets;
- (bool)canAccessiCloudMusicLibrary;
- (bool)canFetchMediaDataFromSender;
- (bool)canPlayEncryptedProgressiveDownloadAssets;
- (bool)canRelayCommunicationChannel;
- (id)currentBluetoothListeningMode;
- (unsigned int)deviceSubtype;
- (unsigned int)deviceType;
- (id)firmwareVersion;
- (bool)groupContainsGroupLeader;
- (id)groupID;
- (bool)hasBatteryLevel;
- (id)initWithJSONData:(id)arg1 pipeEndpoint:(id)arg2;
- (bool)isAddedToHomeKit;
- (bool)isAirPlayReceiverSessionActive;
- (bool)isDeviceGroupable;
- (bool)isGroupLeader;
- (bool)isGroupable;
- (bool)isLocalDevice;
- (bool)isPickedOnPairedDevice;
- (bool)isProxyGroupPlayer;
- (bool)isRemoteControllable;
- (bool)isUsingJSONProtocol;
- (bool)isVolumeControlAvailable;
- (id)jsonDeviceDefinition;
- (id)logicalDeviceID;
- (id)modelID;
- (id)modelSpecificInfo;
- (id)name;
- (bool)parentGroupContainsDiscoverableLeader;
- (id)parentGroupIdentifier;
- (id)pipeEndpoint;
- (id)playingPairedDeviceName;
- (bool)presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets;
- (bool)requiresAuthorization;
- (id)sourceInfo;
- (bool)supportsBluetoothSharing;
- (bool)supportsBufferedAirPlay;
- (bool)supportsExternalScreen;
- (bool)supportsRapport;
- (id)uid;
- (float)volume;

@end
