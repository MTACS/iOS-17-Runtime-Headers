
@interface MRContentItemMetadata : NSObject <NSCopying> {
    MRContentItemMetadataAudioFormat * _activeFormat;
    long long  _activeFormatJustification;
    bool  _advertisement;
    NSString * _albumArtistName;
    NSString * _albumName;
    unsigned long long  _albumTraits;
    NSString * _albumYear;
    NSArray * _alternativeFormats;
    bool  _alwaysLive;
    NSDictionary * _appMetrics;
    bool  _artworkAvailable;
    long long  _artworkDataHeightDeprecated;
    long long  _artworkDataWidthDeprecated;
    NSURL * _artworkFileURL;
    NSString * _artworkIdentifier;
    NSString * _artworkMIMEType;
    NSURL * _artworkURL;
    NSArray * _artworkURLTemplates;
    NSURL * _assetURL;
    MRContentItemMetadataAudioRoute * _audioRoute;
    NSString * _brandIdentifier;
    long long  _chapterCount;
    NSString * _classicalWork;
    NSString * _collectionIdentifier;
    NSDictionary * _collectionInfo;
    NSString * _composer;
    bool  _container;
    NSString * _contentIdentifier;
    NSDate * _currentPlaybackDate;
    bool  _currentlyPlaying;
    float  _defaultPlaybackRate;
    NSDictionary * _deviceSpecificUserInfo;
    NSString * _directorName;
    long long  _discNumber;
    float  _downloadProgress;
    long long  _downloadState;
    double  _duration;
    NSString * _durationStringLocalizationKey;
    long long  _editingStyleFlags;
    double  _elapsedTime;
    double  _elapsedTimeTimestamp;
    long long  _episodeNumber;
    long long  _episodeType;
    bool  _explicitItem;
    unsigned long long  _formatTierPreference;
    NSString * _genre;
    bool  _hasActiveFormatJustification;
    bool  _hasAdvertisement;
    bool  _hasAlbumTraits;
    bool  _hasAlwaysLive;
    bool  _hasArtworkAvailable;
    bool  _hasArtworkDataHeightDeprecated;
    bool  _hasArtworkDataWidthDeprecated;
    bool  _hasChapterCount;
    bool  _hasContainer;
    bool  _hasCurrentlyPlaying;
    bool  _hasDefaultPlaybackRate;
    bool  _hasDiscNumber;
    bool  _hasDownloadProgress;
    bool  _hasDownloadState;
    bool  _hasDuration;
    bool  _hasEditingStyleFlags;
    bool  _hasElapsedTime;
    bool  _hasElapsedTimeTimestamp;
    bool  _hasEpisodeNumber;
    bool  _hasEpisodeType;
    bool  _hasExplicitItem;
    bool  _hasFormatTierPreference;
    bool  _hasITunesStoreAlbumArtistIdentifier;
    bool  _hasITunesStoreAlbumIdentifier;
    bool  _hasITunesStoreArtistIdentifier;
    bool  _hasITunesStoreIdentifier;
    bool  _hasITunesStoreSubscriptionIdentifier;
    bool  _hasInWishList;
    bool  _hasInferredTimestamp;
    bool  _hasInfoAvailable;
    bool  _hasIsResolvableParticipant;
    bool  _hasLanguageOptionsAvailable;
    bool  _hasLegacyUniqueIdentifier;
    bool  _hasLiked;
    bool  _hasLoading;
    bool  _hasLyricsAdamID;
    bool  _hasLyricsAvailable;
    bool  _hasMediaSubType;
    bool  _hasMediaType;
    bool  _hasNumberOfSections;
    bool  _hasPlayCount;
    bool  _hasPlayable;
    bool  _hasPlaybackProgress;
    bool  _hasPlaybackRate;
    bool  _hasPlaylistTraits;
    bool  _hasPlaylistType;
    bool  _hasRadioStationIdentifier;
    bool  _hasRadioStationType;
    bool  _hasReportingAdamID;
    bool  _hasSeasonNumber;
    bool  _hasSharable;
    bool  _hasSongTraits;
    bool  _hasStartTime;
    bool  _hasSteerable;
    bool  _hasStreamingContent;
    bool  _hasTotalDiscCount;
    bool  _hasTotalTrackCount;
    bool  _hasTrackNumber;
    long long  _iTunesStoreAlbumArtistIdentifier;
    long long  _iTunesStoreAlbumIdentifier;
    long long  _iTunesStoreArtistIdentifier;
    long long  _iTunesStoreIdentifier;
    long long  _iTunesStoreSubscriptionIdentifier;
    bool  _inWishList;
    double  _inferredTimestamp;
    bool  _infoAvailable;
    bool  _isResolvableParticipant;
    bool  _languageOptionsAvailable;
    long long  _legacyUniqueIdentifier;
    bool  _liked;
    bool  _loading;
    NSString * _localizedContentRating;
    NSString * _localizedDurationString;
    long long  _lyricsAdamID;
    bool  _lyricsAvailable;
    NSURL * _lyricsURL;
    long long  _mediaSubType;
    long long  _mediaType;
    NSDictionary * _nowPlayingInfo;
    long long  _numberOfSections;
    NSString * _participantIdentifier;
    NSString * _participantName;
    long long  _playCount;
    bool  _playable;
    float  _playbackProgress;
    float  _playbackRate;
    unsigned long long  _playlistTraits;
    long long  _playlistType;
    MRContentItemMetadataAudioFormat * _preferredFormat;
    NSString * _profileIdentifier;
    NSData * _purchaseInfoData;
    long long  _radioStationIdentifier;
    NSString * _radioStationName;
    NSString * _radioStationString;
    long long  _radioStationType;
    NSDate * _releaseDate;
    long long  _reportingAdamID;
    long long  _seasonNumber;
    NSString * _seriesName;
    NSString * _serviceIdentifier;
    bool  _sharable;
    unsigned long long  _songTraits;
    double  _startTime;
    bool  _steerable;
    bool  _streamingContent;
    NSString * _subtitle;
    NSString * _title;
    long long  _totalDiscCount;
    long long  _totalTrackCount;
    NSString * _trackArtistName;
    long long  _trackNumber;
    NSDictionary * _userInfo;
}

@property (nonatomic, copy) MRContentItemMetadataAudioFormat *activeFormat;
@property (nonatomic) long long activeFormatJustification;
@property (getter=isAdvertisement, nonatomic) bool advertisement;
@property (nonatomic, copy) NSString *albumArtistName;
@property (nonatomic, copy) NSString *albumName;
@property (nonatomic) unsigned long long albumTraits;
@property (nonatomic, copy) NSString *albumYear;
@property (nonatomic, copy) NSArray *alternativeFormats;
@property (getter=isAlwaysLive, nonatomic) bool alwaysLive;
@property (nonatomic, copy) NSDictionary *appMetrics;
@property (nonatomic) bool artworkAvailable;
@property (nonatomic, readonly) long long artworkDataHeightDeprecated;
@property (nonatomic, readonly) long long artworkDataWidthDeprecated;
@property (nonatomic, copy) NSURL *artworkFileURL;
@property (nonatomic, copy) NSString *artworkIdentifier;
@property (nonatomic, copy) NSString *artworkMIMEType;
@property (nonatomic, copy) NSURL *artworkURL;
@property (nonatomic, copy) NSArray *artworkURLTemplates;
@property (nonatomic, copy) NSURL *assetURL;
@property (nonatomic, copy) MRContentItemMetadataAudioRoute *audioRoute;
@property (nonatomic, copy) NSString *brandIdentifier;
@property (nonatomic, readonly) double calculatedPlaybackPosition;
@property (nonatomic) long long chapterCount;
@property (nonatomic, copy) NSString *classicalWork;
@property (nonatomic, copy) NSString *collectionIdentifier;
@property (nonatomic, copy) NSDictionary *collectionInfo;
@property (nonatomic, copy) NSString *composer;
@property (getter=isContainer, nonatomic) bool container;
@property (nonatomic, copy) NSString *contentIdentifier;
@property (nonatomic, copy) NSDate *currentPlaybackDate;
@property (getter=isCurrentlyPlaying, nonatomic) bool currentlyPlaying;
@property (nonatomic, readonly, copy) NSData *data;
@property (nonatomic) float defaultPlaybackRate;
@property (nonatomic, copy) NSDictionary *deviceSpecificUserInfo;
@property (nonatomic, readonly) NSDictionary *dictionaryRepresentation;
@property (nonatomic, copy) NSString *directorName;
@property (nonatomic) long long discNumber;
@property (nonatomic) float downloadProgress;
@property (nonatomic) long long downloadState;
@property (nonatomic) double duration;
@property (nonatomic, copy) NSString *durationStringLocalizationKey;
@property (nonatomic) long long editingStyleFlags;
@property (nonatomic) double elapsedTime;
@property (nonatomic) double elapsedTimeTimestamp;
@property (nonatomic) long long episodeNumber;
@property (nonatomic) long long episodeType;
@property (getter=isExplicitItem, nonatomic) bool explicitItem;
@property (nonatomic) unsigned long long formatTierPreference;
@property (nonatomic, copy) NSString *genre;
@property (nonatomic) bool hasActiveFormatJustification;
@property (nonatomic) bool hasAdvertisement;
@property (nonatomic) bool hasAlbumTraits;
@property (nonatomic) bool hasAlwaysLive;
@property (nonatomic) bool hasArtworkAvailable;
@property (nonatomic, readonly) bool hasArtworkDataHeightDeprecated;
@property (nonatomic, readonly) bool hasArtworkDataWidthDeprecated;
@property (nonatomic) bool hasChapterCount;
@property (nonatomic) bool hasContainer;
@property (nonatomic) bool hasCurrentlyPlaying;
@property (nonatomic) bool hasDefaultPlaybackRate;
@property (nonatomic) bool hasDiscNumber;
@property (nonatomic) bool hasDownloadProgress;
@property (nonatomic) bool hasDownloadState;
@property (nonatomic) bool hasDuration;
@property (nonatomic) bool hasEditingStyleFlags;
@property (nonatomic) bool hasElapsedTime;
@property (nonatomic) bool hasElapsedTimeTimestamp;
@property (nonatomic) bool hasEpisodeNumber;
@property (nonatomic) bool hasEpisodeType;
@property (nonatomic) bool hasExplicitItem;
@property (nonatomic) bool hasFormatTierPreference;
@property (nonatomic) bool hasITunesStoreAlbumArtistIdentifier;
@property (nonatomic) bool hasITunesStoreAlbumIdentifier;
@property (nonatomic) bool hasITunesStoreArtistIdentifier;
@property (nonatomic) bool hasITunesStoreIdentifier;
@property (nonatomic) bool hasITunesStoreSubscriptionIdentifier;
@property (nonatomic) bool hasInWishList;
@property (nonatomic) bool hasInferredTimestamp;
@property (nonatomic) bool hasInfoAvailable;
@property (nonatomic, readonly) bool hasIsResolvableParticipant;
@property (nonatomic) bool hasLanguageOptionsAvailable;
@property (nonatomic) bool hasLegacyUniqueIdentifier;
@property (nonatomic) bool hasLiked;
@property (nonatomic) bool hasLoading;
@property (nonatomic, readonly) bool hasLoadingPlaceholderTitle;
@property (nonatomic) bool hasLyricsAdamID;
@property (nonatomic) bool hasLyricsAvailable;
@property (nonatomic) bool hasMediaSubType;
@property (nonatomic) bool hasMediaType;
@property (nonatomic) bool hasNumberOfSections;
@property (nonatomic) bool hasPlayCount;
@property (nonatomic) bool hasPlayable;
@property (nonatomic) bool hasPlaybackProgress;
@property (nonatomic) bool hasPlaybackRate;
@property (nonatomic) bool hasPlaylistTraits;
@property (nonatomic) bool hasPlaylistType;
@property (nonatomic) bool hasRadioStationIdentifier;
@property (nonatomic) bool hasRadioStationType;
@property (nonatomic) bool hasReportingAdamID;
@property (nonatomic) bool hasSeasonNumber;
@property (nonatomic) bool hasSharable;
@property (nonatomic) bool hasSongTraits;
@property (nonatomic) bool hasStartTime;
@property (nonatomic) bool hasSteerable;
@property (nonatomic) bool hasStreamingContent;
@property (nonatomic) bool hasTotalDiscCount;
@property (nonatomic) bool hasTotalTrackCount;
@property (nonatomic) bool hasTrackNumber;
@property (nonatomic) long long iTunesStoreAlbumArtistIdentifier;
@property (nonatomic) long long iTunesStoreAlbumIdentifier;
@property (nonatomic) long long iTunesStoreArtistIdentifier;
@property (nonatomic) long long iTunesStoreIdentifier;
@property (nonatomic) long long iTunesStoreSubscriptionIdentifier;
@property (getter=isInWishList, nonatomic) bool inWishList;
@property (nonatomic) double inferredTimestamp;
@property (nonatomic) bool infoAvailable;
@property (nonatomic) bool isResolvableParticipant;
@property (nonatomic) bool languageOptionsAvailable;
@property (nonatomic) long long legacyUniqueIdentifier;
@property (getter=isLiked, nonatomic) bool liked;
@property (getter=isLoading, nonatomic) bool loading;
@property (nonatomic, copy) NSString *localizedContentRating;
@property (nonatomic, copy) NSString *localizedDurationString;
@property (nonatomic, readonly, copy) NSString *localizedTitle;
@property (nonatomic) long long lyricsAdamID;
@property (nonatomic) bool lyricsAvailable;
@property (nonatomic, copy) NSURL *lyricsURL;
@property (nonatomic) long long mediaSubType;
@property (nonatomic) long long mediaType;
@property (nonatomic, copy) NSDictionary *nowPlayingInfo;
@property (nonatomic) long long numberOfSections;
@property (nonatomic, copy) NSString *participantIdentifier;
@property (nonatomic, copy) NSString *participantName;
@property (nonatomic) long long playCount;
@property (getter=isPlayable, nonatomic) bool playable;
@property (nonatomic) float playbackProgress;
@property (nonatomic) float playbackRate;
@property (nonatomic) unsigned long long playlistTraits;
@property (nonatomic) long long playlistType;
@property (nonatomic, copy) MRContentItemMetadataAudioFormat *preferredFormat;
@property (nonatomic, copy) NSString *profileIdentifier;
@property (nonatomic, copy) NSData *purchaseInfoData;
@property (nonatomic) long long radioStationIdentifier;
@property (nonatomic, copy) NSString *radioStationName;
@property (nonatomic, copy) NSString *radioStationString;
@property (nonatomic) long long radioStationType;
@property (nonatomic, copy) NSDate *releaseDate;
@property (nonatomic) long long reportingAdamID;
@property (nonatomic) long long seasonNumber;
@property (nonatomic, copy) NSString *seriesName;
@property (nonatomic, copy) NSString *serviceIdentifier;
@property (getter=isSharable, nonatomic) bool sharable;
@property (nonatomic) unsigned long long songTraits;
@property (nonatomic) double startTime;
@property (getter=isSteerable, nonatomic) bool steerable;
@property (getter=isStreamingContent, nonatomic) bool streamingContent;
@property (nonatomic, copy) NSString *subtitle;
@property (nonatomic, copy) NSString *title;
@property (nonatomic) long long totalDiscCount;
@property (nonatomic) long long totalTrackCount;
@property (nonatomic, copy) NSString *trackArtistName;
@property (nonatomic) long long trackNumber;
@property (nonatomic, copy) NSDictionary *userInfo;

- (void).cxx_destruct;
- (id)activeFormat;
- (long long)activeFormatJustification;
- (id)albumArtistName;
- (id)albumName;
- (unsigned long long)albumTraits;
- (id)albumYear;
- (id)alternativeFormats;
- (id)appMetrics;
- (bool)artworkAvailable;
- (long long)artworkDataHeightDeprecated;
- (long long)artworkDataWidthDeprecated;
- (id)artworkFileURL;
- (id)artworkIdentifier;
- (id)artworkMIMEType;
- (id)artworkURL;
- (id)artworkURLTemplates;
- (id)assetURL;
- (id)audioRoute;
- (id)brandIdentifier;
- (double)calculatedPlaybackPosition;
- (double)calculatedPlaybackPositionFromDate:(id)arg1;
- (long long)chapterCount;
- (id)classicalWork;
- (id)collectionIdentifier;
- (id)collectionInfo;
- (id)composer;
- (id)contentIdentifier;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)currentPlaybackDate;
- (id)data;
- (float)defaultPlaybackRate;
- (id)description;
- (id)deviceSpecificUserInfo;
- (id)dictionaryRepresentation;
- (id)directorName;
- (long long)discNumber;
- (float)downloadProgress;
- (long long)downloadState;
- (double)duration;
- (id)durationStringLocalizationKey;
- (long long)editingStyleFlags;
- (double)elapsedTime;
- (double)elapsedTimeTimestamp;
- (long long)episodeNumber;
- (long long)episodeType;
- (unsigned long long)formatTierPreference;
- (id)genre;
- (bool)hasActiveFormatJustification;
- (bool)hasAdvertisement;
- (bool)hasAlbumTraits;
- (bool)hasAlwaysLive;
- (bool)hasArtworkAvailable;
- (bool)hasArtworkDataHeightDeprecated;
- (bool)hasArtworkDataWidthDeprecated;
- (bool)hasChapterCount;
- (bool)hasContainer;
- (bool)hasCurrentlyPlaying;
- (bool)hasDefaultPlaybackRate;
- (bool)hasDiscNumber;
- (bool)hasDownloadProgress;
- (bool)hasDownloadState;
- (bool)hasDuration;
- (bool)hasEditingStyleFlags;
- (bool)hasElapsedTime;
- (bool)hasElapsedTimeTimestamp;
- (bool)hasEpisodeNumber;
- (bool)hasEpisodeType;
- (bool)hasExplicitItem;
- (bool)hasFormatTierPreference;
- (bool)hasITunesStoreAlbumArtistIdentifier;
- (bool)hasITunesStoreAlbumIdentifier;
- (bool)hasITunesStoreArtistIdentifier;
- (bool)hasITunesStoreIdentifier;
- (bool)hasITunesStoreSubscriptionIdentifier;
- (bool)hasInWishList;
- (bool)hasInferredTimestamp;
- (bool)hasInfoAvailable;
- (bool)hasIsResolvableParticipant;
- (bool)hasLanguageOptionsAvailable;
- (bool)hasLegacyUniqueIdentifier;
- (bool)hasLiked;
- (bool)hasLoading;
- (bool)hasLoadingPlaceholderTitle;
- (bool)hasLyricsAdamID;
- (bool)hasLyricsAvailable;
- (bool)hasMediaSubType;
- (bool)hasMediaType;
- (bool)hasNumberOfSections;
- (bool)hasPlayCount;
- (bool)hasPlayable;
- (bool)hasPlaybackProgress;
- (bool)hasPlaybackRate;
- (bool)hasPlaylistTraits;
- (bool)hasPlaylistType;
- (bool)hasRadioStationIdentifier;
- (bool)hasRadioStationType;
- (bool)hasReportingAdamID;
- (bool)hasSeasonNumber;
- (bool)hasSharable;
- (bool)hasSongTraits;
- (bool)hasStartTime;
- (bool)hasSteerable;
- (bool)hasStreamingContent;
- (bool)hasTotalDiscCount;
- (bool)hasTotalTrackCount;
- (bool)hasTrackNumber;
- (long long)iTunesStoreAlbumArtistIdentifier;
- (long long)iTunesStoreAlbumIdentifier;
- (long long)iTunesStoreArtistIdentifier;
- (long long)iTunesStoreIdentifier;
- (long long)iTunesStoreSubscriptionIdentifier;
- (double)inferredTimestamp;
- (bool)infoAvailable;
- (id)initWithData:(id)arg1;
- (id)initWithProtobuf:(id)arg1;
- (bool)isAdvertisement;
- (bool)isAlwaysLive;
- (bool)isContainer;
- (bool)isCurrentlyPlaying;
- (bool)isEqual:(id)arg1;
- (bool)isExplicitItem;
- (bool)isInWishList;
- (bool)isLiked;
- (bool)isLoading;
- (bool)isPlayable;
- (bool)isResolvableParticipant;
- (bool)isSharable;
- (bool)isSteerable;
- (bool)isStreamingContent;
- (bool)languageOptionsAvailable;
- (long long)legacyUniqueIdentifier;
- (id)localizedContentRating;
- (id)localizedDurationString;
- (id)localizedTitle;
- (long long)lyricsAdamID;
- (bool)lyricsAvailable;
- (id)lyricsURL;
- (long long)mediaSubType;
- (long long)mediaType;
- (void)mergeFrom:(id)arg1;
- (id)nowPlayingInfo;
- (long long)numberOfSections;
- (id)participantIdentifier;
- (id)participantName;
- (long long)playCount;
- (float)playbackProgress;
- (float)playbackRate;
- (unsigned long long)playlistTraits;
- (long long)playlistType;
- (id)preferredFormat;
- (id)profileIdentifier;
- (id)protobufWithEncoding:(long long)arg1;
- (id)purchaseInfoData;
- (long long)radioStationIdentifier;
- (id)radioStationName;
- (id)radioStationString;
- (long long)radioStationType;
- (id)releaseDate;
- (long long)reportingAdamID;
- (long long)seasonNumber;
- (id)seriesName;
- (id)serviceIdentifier;
- (void)setActiveFormat:(id)arg1;
- (void)setActiveFormatJustification:(long long)arg1;
- (void)setAdvertisement:(bool)arg1;
- (void)setAlbumArtistName:(id)arg1;
- (void)setAlbumName:(id)arg1;
- (void)setAlbumTraits:(unsigned long long)arg1;
- (void)setAlbumYear:(id)arg1;
- (void)setAlternativeFormats:(id)arg1;
- (void)setAlwaysLive:(bool)arg1;
- (void)setAppMetrics:(id)arg1;
- (void)setArtworkAvailable:(bool)arg1;
- (void)setArtworkDataHeightDeprecated:(long long)arg1;
- (void)setArtworkDataWidthDeprecated:(long long)arg1;
- (void)setArtworkFileURL:(id)arg1;
- (void)setArtworkIdentifier:(id)arg1;
- (void)setArtworkMIMEType:(id)arg1;
- (void)setArtworkURL:(id)arg1;
- (void)setArtworkURLTemplates:(id)arg1;
- (void)setAssetURL:(id)arg1;
- (void)setAudioRoute:(id)arg1;
- (void)setBrandIdentifier:(id)arg1;
- (void)setChapterCount:(long long)arg1;
- (void)setClassicalWork:(id)arg1;
- (void)setCollectionIdentifier:(id)arg1;
- (void)setCollectionInfo:(id)arg1;
- (void)setComposer:(id)arg1;
- (void)setContainer:(bool)arg1;
- (void)setContentIdentifier:(id)arg1;
- (void)setCurrentPlaybackDate:(id)arg1;
- (void)setCurrentlyPlaying:(bool)arg1;
- (void)setDefaultPlaybackRate:(float)arg1;
- (void)setDeviceSpecificUserInfo:(id)arg1;
- (void)setDirectorName:(id)arg1;
- (void)setDiscNumber:(long long)arg1;
- (void)setDownloadProgress:(float)arg1;
- (void)setDownloadState:(long long)arg1;
- (void)setDuration:(double)arg1;
- (void)setDurationStringLocalizationKey:(id)arg1;
- (void)setEditingStyleFlags:(long long)arg1;
- (void)setElapsedTime:(double)arg1;
- (void)setElapsedTimeTimestamp:(double)arg1;
- (void)setEpisodeNumber:(long long)arg1;
- (void)setEpisodeType:(long long)arg1;
- (void)setExplicitItem:(bool)arg1;
- (void)setFormatTierPreference:(unsigned long long)arg1;
- (void)setGenre:(id)arg1;
- (void)setHasActiveFormatJustification:(bool)arg1;
- (void)setHasAdvertisement:(bool)arg1;
- (void)setHasAlbumTraits:(bool)arg1;
- (void)setHasAlwaysLive:(bool)arg1;
- (void)setHasArtworkAvailable:(bool)arg1;
- (void)setHasChapterCount:(bool)arg1;
- (void)setHasContainer:(bool)arg1;
- (void)setHasCurrentlyPlaying:(bool)arg1;
- (void)setHasDefaultPlaybackRate:(bool)arg1;
- (void)setHasDiscNumber:(bool)arg1;
- (void)setHasDownloadProgress:(bool)arg1;
- (void)setHasDownloadState:(bool)arg1;
- (void)setHasDuration:(bool)arg1;
- (void)setHasEditingStyleFlags:(bool)arg1;
- (void)setHasElapsedTime:(bool)arg1;
- (void)setHasElapsedTimeTimestamp:(bool)arg1;
- (void)setHasEpisodeNumber:(bool)arg1;
- (void)setHasEpisodeType:(bool)arg1;
- (void)setHasExplicitItem:(bool)arg1;
- (void)setHasFormatTierPreference:(bool)arg1;
- (void)setHasITunesStoreAlbumArtistIdentifier:(bool)arg1;
- (void)setHasITunesStoreAlbumIdentifier:(bool)arg1;
- (void)setHasITunesStoreArtistIdentifier:(bool)arg1;
- (void)setHasITunesStoreIdentifier:(bool)arg1;
- (void)setHasITunesStoreSubscriptionIdentifier:(bool)arg1;
- (void)setHasInWishList:(bool)arg1;
- (void)setHasInferredTimestamp:(bool)arg1;
- (void)setHasInfoAvailable:(bool)arg1;
- (void)setHasLanguageOptionsAvailable:(bool)arg1;
- (void)setHasLegacyUniqueIdentifier:(bool)arg1;
- (void)setHasLiked:(bool)arg1;
- (void)setHasLoading:(bool)arg1;
- (void)setHasLyricsAdamID:(bool)arg1;
- (void)setHasLyricsAvailable:(bool)arg1;
- (void)setHasMediaSubType:(bool)arg1;
- (void)setHasMediaType:(bool)arg1;
- (void)setHasNumberOfSections:(bool)arg1;
- (void)setHasPlayCount:(bool)arg1;
- (void)setHasPlayable:(bool)arg1;
- (void)setHasPlaybackProgress:(bool)arg1;
- (void)setHasPlaybackRate:(bool)arg1;
- (void)setHasPlaylistTraits:(bool)arg1;
- (void)setHasPlaylistType:(bool)arg1;
- (void)setHasRadioStationIdentifier:(bool)arg1;
- (void)setHasRadioStationType:(bool)arg1;
- (void)setHasReportingAdamID:(bool)arg1;
- (void)setHasSeasonNumber:(bool)arg1;
- (void)setHasSharable:(bool)arg1;
- (void)setHasSongTraits:(bool)arg1;
- (void)setHasStartTime:(bool)arg1;
- (void)setHasSteerable:(bool)arg1;
- (void)setHasStreamingContent:(bool)arg1;
- (void)setHasTotalDiscCount:(bool)arg1;
- (void)setHasTotalTrackCount:(bool)arg1;
- (void)setHasTrackNumber:(bool)arg1;
- (void)setITunesStoreAlbumArtistIdentifier:(long long)arg1;
- (void)setITunesStoreAlbumIdentifier:(long long)arg1;
- (void)setITunesStoreArtistIdentifier:(long long)arg1;
- (void)setITunesStoreIdentifier:(long long)arg1;
- (void)setITunesStoreSubscriptionIdentifier:(long long)arg1;
- (void)setInWishList:(bool)arg1;
- (void)setInferredTimestamp:(double)arg1;
- (void)setInfoAvailable:(bool)arg1;
- (void)setIsResolvableParticipant:(bool)arg1;
- (void)setLanguageOptionsAvailable:(bool)arg1;
- (void)setLegacyUniqueIdentifier:(long long)arg1;
- (void)setLiked:(bool)arg1;
- (void)setLoading:(bool)arg1;
- (void)setLocalizedContentRating:(id)arg1;
- (void)setLocalizedDurationString:(id)arg1;
- (void)setLyricsAdamID:(long long)arg1;
- (void)setLyricsAvailable:(bool)arg1;
- (void)setLyricsURL:(id)arg1;
- (void)setMediaSubType:(long long)arg1;
- (void)setMediaType:(long long)arg1;
- (void)setNowPlayingInfo:(id)arg1;
- (void)setNumberOfSections:(long long)arg1;
- (void)setParticipantIdentifier:(id)arg1;
- (void)setParticipantName:(id)arg1;
- (void)setPlayCount:(long long)arg1;
- (void)setPlayable:(bool)arg1;
- (void)setPlaybackProgress:(float)arg1;
- (void)setPlaybackRate:(float)arg1;
- (void)setPlaylistTraits:(unsigned long long)arg1;
- (void)setPlaylistType:(long long)arg1;
- (void)setPreferredFormat:(id)arg1;
- (void)setProfileIdentifier:(id)arg1;
- (void)setPurchaseInfoData:(id)arg1;
- (void)setRadioStationIdentifier:(long long)arg1;
- (void)setRadioStationName:(id)arg1;
- (void)setRadioStationString:(id)arg1;
- (void)setRadioStationType:(long long)arg1;
- (void)setReleaseDate:(id)arg1;
- (void)setReportingAdamID:(long long)arg1;
- (void)setSeasonNumber:(long long)arg1;
- (void)setSeriesName:(id)arg1;
- (void)setServiceIdentifier:(id)arg1;
- (void)setSharable:(bool)arg1;
- (void)setSongTraits:(unsigned long long)arg1;
- (void)setStartTime:(double)arg1;
- (void)setSteerable:(bool)arg1;
- (void)setStreamingContent:(bool)arg1;
- (void)setSubtitle:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setTotalDiscCount:(long long)arg1;
- (void)setTotalTrackCount:(long long)arg1;
- (void)setTrackArtistName:(id)arg1;
- (void)setTrackNumber:(long long)arg1;
- (void)setUserInfo:(id)arg1;
- (unsigned long long)songTraits;
- (double)startTime;
- (id)subtitle;
- (id)title;
- (long long)totalDiscCount;
- (long long)totalTrackCount;
- (id)trackArtistName;
- (long long)trackNumber;
- (id)userInfo;

@end
