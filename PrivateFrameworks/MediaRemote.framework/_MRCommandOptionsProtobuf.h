
@interface _MRCommandOptionsProtobuf : PBCodable <NSCopying> {
    bool  _alwaysIgnoreDuringCall;
    bool  _alwaysIgnoreDuringSharePlay;
    NSData * _applicationUserIdentity;
    double  _assistantCommandSendTimestamp;
    double  _assistantTTSEndTimestamp;
    bool  _beginSeek;
    NSString * _commandID;
    NSString * _commandSequenceUUID;
    double  _commandTimeout;
    NSString * _contentItemID;
    NSString * _contextID;
    NSString * _desiredSessionID;
    NSString * _destinationAppDisplayID;
    NSData * _destinationDeviceUIDs;
    bool  _endSeek;
    NSString * _eventNoticeIdentifier;
    NSString * _eventNoticeType;
    bool  _externalPlayerCommand;
    struct { 
        unsigned int assistantCommandSendTimestamp : 1; 
        unsigned int assistantTTSEndTimestamp : 1; 
        unsigned int commandTimeout : 1; 
        unsigned int playbackPosition : 1; 
        unsigned int radioStationID : 1; 
        unsigned int trackID : 1; 
        unsigned int playbackQueueDestinationOffset : 1; 
        unsigned int playbackQueueInsertionPosition : 1; 
        unsigned int playbackQueueOffset : 1; 
        unsigned int playbackRate : 1; 
        unsigned int playbackSessionPriority : 1; 
        unsigned int prepareForSetQueueProactiveReasonType : 1; 
        unsigned int queueEndAction : 1; 
        unsigned int rating : 1; 
        unsigned int repeatMode : 1; 
        unsigned int replaceIntent : 1; 
        unsigned int sendOptions : 1; 
        unsigned int shuffleMode : 1; 
        unsigned int skipInterval : 1; 
        unsigned int vocalsControlLevel : 1; 
        unsigned int vocalsControlMaxLevel : 1; 
        unsigned int vocalsControlMinLevel : 1; 
        unsigned int alwaysIgnoreDuringCall : 1; 
        unsigned int alwaysIgnoreDuringSharePlay : 1; 
        unsigned int beginSeek : 1; 
        unsigned int endSeek : 1; 
        unsigned int externalPlayerCommand : 1; 
        unsigned int negative : 1; 
        unsigned int originatedFromRemoteDevice : 1; 
        unsigned int prepareForSetQueueIsProactive : 1; 
        unsigned int preservesQueueEndAction : 1; 
        unsigned int preservesRepeatMode : 1; 
        unsigned int preservesShuffleMode : 1; 
        unsigned int requestDefermentToPlaybackQueuePosition : 1; 
        unsigned int shouldBeginRadioPlayback : 1; 
        unsigned int shouldOverrideManuallyCuratedQueue : 1; 
        unsigned int trueCompletion : 1; 
        unsigned int verifySupportedCommands : 1; 
        unsigned int vocalsControlActive : 1; 
        unsigned int vocalsControlContinuous : 1; 
    }  _has;
    NSString * _homeKitUserIdentifier;
    NSString * _insertAfterContentItemID;
    NSString * _insertBeforeContentItemID;
    NSData * _languageOption;
    NSString * _mediaType;
    bool  _negative;
    NSString * _nowPlayingContentItemID;
    bool  _originatedFromRemoteDevice;
    NSString * _originatingDeviceUID;
    NSString * _playbackAuthorizationToken;
    double  _playbackPosition;
    NSData * _playbackQueueContext;
    int  _playbackQueueDestinationOffset;
    int  _playbackQueueInsertionPosition;
    int  _playbackQueueOffset;
    float  _playbackRate;
    NSData * _playbackSession;
    NSString * _playbackSessionFilePath;
    NSString * _playbackSessionIdentifier;
    NSData * _playbackSessionMetadata;
    int  _playbackSessionPriority;
    NSString * _playbackSessionRevision;
    NSString * _playbackSessionType;
    bool  _prepareForSetQueueIsProactive;
    NSString * _prepareForSetQueueProactiveReason;
    int  _prepareForSetQueueProactiveReasonType;
    bool  _preservesQueueEndAction;
    bool  _preservesRepeatMode;
    bool  _preservesShuffleMode;
    int  _queueEndAction;
    NSString * _radioStationHash;
    long long  _radioStationID;
    float  _rating;
    NSString * _remoteControlInterface;
    int  _repeatMode;
    int  _replaceIntent;
    bool  _requestDefermentToPlaybackQueuePosition;
    int  _sendOptions;
    NSString * _senderID;
    NSString * _sharedPlaybackSessionIdentifier;
    bool  _shouldBeginRadioPlayback;
    bool  _shouldOverrideManuallyCuratedQueue;
    int  _shuffleMode;
    NSString * _siriSearchDataSetIdentifier;
    NSString * _siriTurnIdentifier;
    float  _skipInterval;
    NSString * _sourceID;
    NSString * _stationURL;
    _MRSystemPlaybackQueueProtobuf * _systemAppPlaybackQueue;
    NSData * _systemAppPlaybackQueueData;
    unsigned long long  _trackID;
    bool  _trueCompletion;
    NSData * _userIdentityData;
    bool  _verifySupportedCommands;
    bool  _vocalsControlActive;
    bool  _vocalsControlContinuous;
    float  _vocalsControlLevel;
    float  _vocalsControlMaxLevel;
    float  _vocalsControlMinLevel;
}

@property (nonatomic) bool alwaysIgnoreDuringCall;
@property (nonatomic) bool alwaysIgnoreDuringSharePlay;
@property (nonatomic, retain) NSData *applicationUserIdentity;
@property (nonatomic) double assistantCommandSendTimestamp;
@property (nonatomic) double assistantTTSEndTimestamp;
@property (nonatomic) bool beginSeek;
@property (nonatomic, retain) NSString *commandID;
@property (nonatomic, retain) NSString *commandSequenceUUID;
@property (nonatomic) double commandTimeout;
@property (nonatomic, retain) NSString *contentItemID;
@property (nonatomic, retain) NSString *contextID;
@property (nonatomic, retain) NSString *desiredSessionID;
@property (nonatomic, retain) NSString *destinationAppDisplayID;
@property (nonatomic, retain) NSData *destinationDeviceUIDs;
@property (nonatomic) bool endSeek;
@property (nonatomic, retain) NSString *eventNoticeIdentifier;
@property (nonatomic, retain) NSString *eventNoticeType;
@property (nonatomic) bool externalPlayerCommand;
@property (nonatomic) bool hasAlwaysIgnoreDuringCall;
@property (nonatomic) bool hasAlwaysIgnoreDuringSharePlay;
@property (nonatomic, readonly) bool hasApplicationUserIdentity;
@property (nonatomic) bool hasAssistantCommandSendTimestamp;
@property (nonatomic) bool hasAssistantTTSEndTimestamp;
@property (nonatomic) bool hasBeginSeek;
@property (nonatomic, readonly) bool hasCommandID;
@property (nonatomic, readonly) bool hasCommandSequenceUUID;
@property (nonatomic) bool hasCommandTimeout;
@property (nonatomic, readonly) bool hasContentItemID;
@property (nonatomic, readonly) bool hasContextID;
@property (nonatomic, readonly) bool hasDesiredSessionID;
@property (nonatomic, readonly) bool hasDestinationAppDisplayID;
@property (nonatomic, readonly) bool hasDestinationDeviceUIDs;
@property (nonatomic) bool hasEndSeek;
@property (nonatomic, readonly) bool hasEventNoticeIdentifier;
@property (nonatomic, readonly) bool hasEventNoticeType;
@property (nonatomic) bool hasExternalPlayerCommand;
@property (nonatomic, readonly) bool hasHomeKitUserIdentifier;
@property (nonatomic, readonly) bool hasInsertAfterContentItemID;
@property (nonatomic, readonly) bool hasInsertBeforeContentItemID;
@property (nonatomic, readonly) bool hasLanguageOption;
@property (nonatomic, readonly) bool hasMediaType;
@property (nonatomic) bool hasNegative;
@property (nonatomic, readonly) bool hasNowPlayingContentItemID;
@property (nonatomic) bool hasOriginatedFromRemoteDevice;
@property (nonatomic, readonly) bool hasOriginatingDeviceUID;
@property (nonatomic, readonly) bool hasPlaybackAuthorizationToken;
@property (nonatomic) bool hasPlaybackPosition;
@property (nonatomic, readonly) bool hasPlaybackQueueContext;
@property (nonatomic) bool hasPlaybackQueueDestinationOffset;
@property (nonatomic) bool hasPlaybackQueueInsertionPosition;
@property (nonatomic) bool hasPlaybackQueueOffset;
@property (nonatomic) bool hasPlaybackRate;
@property (nonatomic, readonly) bool hasPlaybackSession;
@property (nonatomic, readonly) bool hasPlaybackSessionFilePath;
@property (nonatomic, readonly) bool hasPlaybackSessionIdentifier;
@property (nonatomic, readonly) bool hasPlaybackSessionMetadata;
@property (nonatomic) bool hasPlaybackSessionPriority;
@property (nonatomic, readonly) bool hasPlaybackSessionRevision;
@property (nonatomic, readonly) bool hasPlaybackSessionType;
@property (nonatomic) bool hasPrepareForSetQueueIsProactive;
@property (nonatomic, readonly) bool hasPrepareForSetQueueProactiveReason;
@property (nonatomic) bool hasPrepareForSetQueueProactiveReasonType;
@property (nonatomic) bool hasPreservesQueueEndAction;
@property (nonatomic) bool hasPreservesRepeatMode;
@property (nonatomic) bool hasPreservesShuffleMode;
@property (nonatomic) bool hasQueueEndAction;
@property (nonatomic, readonly) bool hasRadioStationHash;
@property (nonatomic) bool hasRadioStationID;
@property (nonatomic) bool hasRating;
@property (nonatomic, readonly) bool hasRemoteControlInterface;
@property (nonatomic) bool hasRepeatMode;
@property (nonatomic) bool hasReplaceIntent;
@property (nonatomic) bool hasRequestDefermentToPlaybackQueuePosition;
@property (nonatomic) bool hasSendOptions;
@property (nonatomic, readonly) bool hasSenderID;
@property (nonatomic, readonly) bool hasSharedPlaybackSessionIdentifier;
@property (nonatomic) bool hasShouldBeginRadioPlayback;
@property (nonatomic) bool hasShouldOverrideManuallyCuratedQueue;
@property (nonatomic) bool hasShuffleMode;
@property (nonatomic, readonly) bool hasSiriSearchDataSetIdentifier;
@property (nonatomic, readonly) bool hasSiriTurnIdentifier;
@property (nonatomic) bool hasSkipInterval;
@property (nonatomic, readonly) bool hasSourceID;
@property (nonatomic, readonly) bool hasStationURL;
@property (nonatomic, readonly) bool hasSystemAppPlaybackQueue;
@property (nonatomic, readonly) bool hasSystemAppPlaybackQueueData;
@property (nonatomic) bool hasTrackID;
@property (nonatomic) bool hasTrueCompletion;
@property (nonatomic, readonly) bool hasUserIdentityData;
@property (nonatomic) bool hasVerifySupportedCommands;
@property (nonatomic) bool hasVocalsControlActive;
@property (nonatomic) bool hasVocalsControlContinuous;
@property (nonatomic) bool hasVocalsControlLevel;
@property (nonatomic) bool hasVocalsControlMaxLevel;
@property (nonatomic) bool hasVocalsControlMinLevel;
@property (nonatomic, retain) NSString *homeKitUserIdentifier;
@property (nonatomic, retain) NSString *insertAfterContentItemID;
@property (nonatomic, retain) NSString *insertBeforeContentItemID;
@property (nonatomic, retain) NSData *languageOption;
@property (nonatomic, retain) NSString *mediaType;
@property (nonatomic) bool negative;
@property (nonatomic, retain) NSString *nowPlayingContentItemID;
@property (nonatomic) bool originatedFromRemoteDevice;
@property (nonatomic, retain) NSString *originatingDeviceUID;
@property (nonatomic, retain) NSString *playbackAuthorizationToken;
@property (nonatomic) double playbackPosition;
@property (nonatomic, retain) NSData *playbackQueueContext;
@property (nonatomic) int playbackQueueDestinationOffset;
@property (nonatomic) int playbackQueueInsertionPosition;
@property (nonatomic) int playbackQueueOffset;
@property (nonatomic) float playbackRate;
@property (nonatomic, retain) NSData *playbackSession;
@property (nonatomic, retain) NSString *playbackSessionFilePath;
@property (nonatomic, retain) NSString *playbackSessionIdentifier;
@property (nonatomic, retain) NSData *playbackSessionMetadata;
@property (nonatomic) int playbackSessionPriority;
@property (nonatomic, retain) NSString *playbackSessionRevision;
@property (nonatomic, retain) NSString *playbackSessionType;
@property (nonatomic) bool prepareForSetQueueIsProactive;
@property (nonatomic, retain) NSString *prepareForSetQueueProactiveReason;
@property (nonatomic) int prepareForSetQueueProactiveReasonType;
@property (nonatomic) bool preservesQueueEndAction;
@property (nonatomic) bool preservesRepeatMode;
@property (nonatomic) bool preservesShuffleMode;
@property (nonatomic) int queueEndAction;
@property (nonatomic, retain) NSString *radioStationHash;
@property (nonatomic) long long radioStationID;
@property (nonatomic) float rating;
@property (nonatomic, retain) NSString *remoteControlInterface;
@property (nonatomic) int repeatMode;
@property (nonatomic) int replaceIntent;
@property (nonatomic) bool requestDefermentToPlaybackQueuePosition;
@property (nonatomic) int sendOptions;
@property (nonatomic, retain) NSString *senderID;
@property (nonatomic, retain) NSString *sharedPlaybackSessionIdentifier;
@property (nonatomic) bool shouldBeginRadioPlayback;
@property (nonatomic) bool shouldOverrideManuallyCuratedQueue;
@property (nonatomic) int shuffleMode;
@property (nonatomic, retain) NSString *siriSearchDataSetIdentifier;
@property (nonatomic, retain) NSString *siriTurnIdentifier;
@property (nonatomic) float skipInterval;
@property (nonatomic, retain) NSString *sourceID;
@property (nonatomic, retain) NSString *stationURL;
@property (nonatomic, retain) _MRSystemPlaybackQueueProtobuf *systemAppPlaybackQueue;
@property (nonatomic, retain) NSData *systemAppPlaybackQueueData;
@property (nonatomic) unsigned long long trackID;
@property (nonatomic) bool trueCompletion;
@property (nonatomic, retain) NSData *userIdentityData;
@property (nonatomic) bool verifySupportedCommands;
@property (nonatomic) bool vocalsControlActive;
@property (nonatomic) bool vocalsControlContinuous;
@property (nonatomic) float vocalsControlLevel;
@property (nonatomic) float vocalsControlMaxLevel;
@property (nonatomic) float vocalsControlMinLevel;

- (void).cxx_destruct;
- (int)StringAsPlaybackSessionPriority:(id)arg1;
- (int)StringAsPrepareForSetQueueProactiveReasonType:(id)arg1;
- (int)StringAsQueueEndAction:(id)arg1;
- (int)StringAsRepeatMode:(id)arg1;
- (int)StringAsReplaceIntent:(id)arg1;
- (int)StringAsSendOptions:(id)arg1;
- (int)StringAsShuffleMode:(id)arg1;
- (bool)alwaysIgnoreDuringCall;
- (bool)alwaysIgnoreDuringSharePlay;
- (id)applicationUserIdentity;
- (double)assistantCommandSendTimestamp;
- (double)assistantTTSEndTimestamp;
- (bool)beginSeek;
- (id)commandID;
- (id)commandSequenceUUID;
- (double)commandTimeout;
- (id)contentItemID;
- (id)contextID;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)desiredSessionID;
- (id)destinationAppDisplayID;
- (id)destinationDeviceUIDs;
- (id)dictionaryRepresentation;
- (bool)endSeek;
- (id)eventNoticeIdentifier;
- (id)eventNoticeType;
- (bool)externalPlayerCommand;
- (bool)hasAlwaysIgnoreDuringCall;
- (bool)hasAlwaysIgnoreDuringSharePlay;
- (bool)hasApplicationUserIdentity;
- (bool)hasAssistantCommandSendTimestamp;
- (bool)hasAssistantTTSEndTimestamp;
- (bool)hasBeginSeek;
- (bool)hasCommandID;
- (bool)hasCommandSequenceUUID;
- (bool)hasCommandTimeout;
- (bool)hasContentItemID;
- (bool)hasContextID;
- (bool)hasDesiredSessionID;
- (bool)hasDestinationAppDisplayID;
- (bool)hasDestinationDeviceUIDs;
- (bool)hasEndSeek;
- (bool)hasEventNoticeIdentifier;
- (bool)hasEventNoticeType;
- (bool)hasExternalPlayerCommand;
- (bool)hasHomeKitUserIdentifier;
- (bool)hasInsertAfterContentItemID;
- (bool)hasInsertBeforeContentItemID;
- (bool)hasLanguageOption;
- (bool)hasMediaType;
- (bool)hasNegative;
- (bool)hasNowPlayingContentItemID;
- (bool)hasOriginatedFromRemoteDevice;
- (bool)hasOriginatingDeviceUID;
- (bool)hasPlaybackAuthorizationToken;
- (bool)hasPlaybackPosition;
- (bool)hasPlaybackQueueContext;
- (bool)hasPlaybackQueueDestinationOffset;
- (bool)hasPlaybackQueueInsertionPosition;
- (bool)hasPlaybackQueueOffset;
- (bool)hasPlaybackRate;
- (bool)hasPlaybackSession;
- (bool)hasPlaybackSessionFilePath;
- (bool)hasPlaybackSessionIdentifier;
- (bool)hasPlaybackSessionMetadata;
- (bool)hasPlaybackSessionPriority;
- (bool)hasPlaybackSessionRevision;
- (bool)hasPlaybackSessionType;
- (bool)hasPrepareForSetQueueIsProactive;
- (bool)hasPrepareForSetQueueProactiveReason;
- (bool)hasPrepareForSetQueueProactiveReasonType;
- (bool)hasPreservesQueueEndAction;
- (bool)hasPreservesRepeatMode;
- (bool)hasPreservesShuffleMode;
- (bool)hasQueueEndAction;
- (bool)hasRadioStationHash;
- (bool)hasRadioStationID;
- (bool)hasRating;
- (bool)hasRemoteControlInterface;
- (bool)hasRepeatMode;
- (bool)hasReplaceIntent;
- (bool)hasRequestDefermentToPlaybackQueuePosition;
- (bool)hasSendOptions;
- (bool)hasSenderID;
- (bool)hasSharedPlaybackSessionIdentifier;
- (bool)hasShouldBeginRadioPlayback;
- (bool)hasShouldOverrideManuallyCuratedQueue;
- (bool)hasShuffleMode;
- (bool)hasSiriSearchDataSetIdentifier;
- (bool)hasSiriTurnIdentifier;
- (bool)hasSkipInterval;
- (bool)hasSourceID;
- (bool)hasStationURL;
- (bool)hasSystemAppPlaybackQueue;
- (bool)hasSystemAppPlaybackQueueData;
- (bool)hasTrackID;
- (bool)hasTrueCompletion;
- (bool)hasUserIdentityData;
- (bool)hasVerifySupportedCommands;
- (bool)hasVocalsControlActive;
- (bool)hasVocalsControlContinuous;
- (bool)hasVocalsControlLevel;
- (bool)hasVocalsControlMaxLevel;
- (bool)hasVocalsControlMinLevel;
- (unsigned long long)hash;
- (id)homeKitUserIdentifier;
- (id)insertAfterContentItemID;
- (id)insertBeforeContentItemID;
- (bool)isEqual:(id)arg1;
- (id)languageOption;
- (id)mediaType;
- (void)mergeFrom:(id)arg1;
- (bool)negative;
- (id)nowPlayingContentItemID;
- (bool)originatedFromRemoteDevice;
- (id)originatingDeviceUID;
- (id)playbackAuthorizationToken;
- (double)playbackPosition;
- (id)playbackQueueContext;
- (int)playbackQueueDestinationOffset;
- (int)playbackQueueInsertionPosition;
- (int)playbackQueueOffset;
- (float)playbackRate;
- (id)playbackSession;
- (id)playbackSessionFilePath;
- (id)playbackSessionIdentifier;
- (id)playbackSessionMetadata;
- (int)playbackSessionPriority;
- (id)playbackSessionPriorityAsString:(int)arg1;
- (id)playbackSessionRevision;
- (id)playbackSessionType;
- (bool)prepareForSetQueueIsProactive;
- (id)prepareForSetQueueProactiveReason;
- (int)prepareForSetQueueProactiveReasonType;
- (id)prepareForSetQueueProactiveReasonTypeAsString:(int)arg1;
- (bool)preservesQueueEndAction;
- (bool)preservesRepeatMode;
- (bool)preservesShuffleMode;
- (int)queueEndAction;
- (id)queueEndActionAsString:(int)arg1;
- (id)radioStationHash;
- (long long)radioStationID;
- (float)rating;
- (bool)readFrom:(id)arg1;
- (id)remoteControlInterface;
- (int)repeatMode;
- (id)repeatModeAsString:(int)arg1;
- (int)replaceIntent;
- (id)replaceIntentAsString:(int)arg1;
- (bool)requestDefermentToPlaybackQueuePosition;
- (int)sendOptions;
- (id)sendOptionsAsString:(int)arg1;
- (id)senderID;
- (void)setAlwaysIgnoreDuringCall:(bool)arg1;
- (void)setAlwaysIgnoreDuringSharePlay:(bool)arg1;
- (void)setApplicationUserIdentity:(id)arg1;
- (void)setAssistantCommandSendTimestamp:(double)arg1;
- (void)setAssistantTTSEndTimestamp:(double)arg1;
- (void)setBeginSeek:(bool)arg1;
- (void)setCommandID:(id)arg1;
- (void)setCommandSequenceUUID:(id)arg1;
- (void)setCommandTimeout:(double)arg1;
- (void)setContentItemID:(id)arg1;
- (void)setContextID:(id)arg1;
- (void)setDesiredSessionID:(id)arg1;
- (void)setDestinationAppDisplayID:(id)arg1;
- (void)setDestinationDeviceUIDs:(id)arg1;
- (void)setEndSeek:(bool)arg1;
- (void)setEventNoticeIdentifier:(id)arg1;
- (void)setEventNoticeType:(id)arg1;
- (void)setExternalPlayerCommand:(bool)arg1;
- (void)setHasAlwaysIgnoreDuringCall:(bool)arg1;
- (void)setHasAlwaysIgnoreDuringSharePlay:(bool)arg1;
- (void)setHasAssistantCommandSendTimestamp:(bool)arg1;
- (void)setHasAssistantTTSEndTimestamp:(bool)arg1;
- (void)setHasBeginSeek:(bool)arg1;
- (void)setHasCommandTimeout:(bool)arg1;
- (void)setHasEndSeek:(bool)arg1;
- (void)setHasExternalPlayerCommand:(bool)arg1;
- (void)setHasNegative:(bool)arg1;
- (void)setHasOriginatedFromRemoteDevice:(bool)arg1;
- (void)setHasPlaybackPosition:(bool)arg1;
- (void)setHasPlaybackQueueDestinationOffset:(bool)arg1;
- (void)setHasPlaybackQueueInsertionPosition:(bool)arg1;
- (void)setHasPlaybackQueueOffset:(bool)arg1;
- (void)setHasPlaybackRate:(bool)arg1;
- (void)setHasPlaybackSessionPriority:(bool)arg1;
- (void)setHasPrepareForSetQueueIsProactive:(bool)arg1;
- (void)setHasPrepareForSetQueueProactiveReasonType:(bool)arg1;
- (void)setHasPreservesQueueEndAction:(bool)arg1;
- (void)setHasPreservesRepeatMode:(bool)arg1;
- (void)setHasPreservesShuffleMode:(bool)arg1;
- (void)setHasQueueEndAction:(bool)arg1;
- (void)setHasRadioStationID:(bool)arg1;
- (void)setHasRating:(bool)arg1;
- (void)setHasRepeatMode:(bool)arg1;
- (void)setHasReplaceIntent:(bool)arg1;
- (void)setHasRequestDefermentToPlaybackQueuePosition:(bool)arg1;
- (void)setHasSendOptions:(bool)arg1;
- (void)setHasShouldBeginRadioPlayback:(bool)arg1;
- (void)setHasShouldOverrideManuallyCuratedQueue:(bool)arg1;
- (void)setHasShuffleMode:(bool)arg1;
- (void)setHasSkipInterval:(bool)arg1;
- (void)setHasTrackID:(bool)arg1;
- (void)setHasTrueCompletion:(bool)arg1;
- (void)setHasVerifySupportedCommands:(bool)arg1;
- (void)setHasVocalsControlActive:(bool)arg1;
- (void)setHasVocalsControlContinuous:(bool)arg1;
- (void)setHasVocalsControlLevel:(bool)arg1;
- (void)setHasVocalsControlMaxLevel:(bool)arg1;
- (void)setHasVocalsControlMinLevel:(bool)arg1;
- (void)setHomeKitUserIdentifier:(id)arg1;
- (void)setInsertAfterContentItemID:(id)arg1;
- (void)setInsertBeforeContentItemID:(id)arg1;
- (void)setLanguageOption:(id)arg1;
- (void)setMediaType:(id)arg1;
- (void)setNegative:(bool)arg1;
- (void)setNowPlayingContentItemID:(id)arg1;
- (void)setOriginatedFromRemoteDevice:(bool)arg1;
- (void)setOriginatingDeviceUID:(id)arg1;
- (void)setPlaybackAuthorizationToken:(id)arg1;
- (void)setPlaybackPosition:(double)arg1;
- (void)setPlaybackQueueContext:(id)arg1;
- (void)setPlaybackQueueDestinationOffset:(int)arg1;
- (void)setPlaybackQueueInsertionPosition:(int)arg1;
- (void)setPlaybackQueueOffset:(int)arg1;
- (void)setPlaybackRate:(float)arg1;
- (void)setPlaybackSession:(id)arg1;
- (void)setPlaybackSessionFilePath:(id)arg1;
- (void)setPlaybackSessionIdentifier:(id)arg1;
- (void)setPlaybackSessionMetadata:(id)arg1;
- (void)setPlaybackSessionPriority:(int)arg1;
- (void)setPlaybackSessionRevision:(id)arg1;
- (void)setPlaybackSessionType:(id)arg1;
- (void)setPrepareForSetQueueIsProactive:(bool)arg1;
- (void)setPrepareForSetQueueProactiveReason:(id)arg1;
- (void)setPrepareForSetQueueProactiveReasonType:(int)arg1;
- (void)setPreservesQueueEndAction:(bool)arg1;
- (void)setPreservesRepeatMode:(bool)arg1;
- (void)setPreservesShuffleMode:(bool)arg1;
- (void)setQueueEndAction:(int)arg1;
- (void)setRadioStationHash:(id)arg1;
- (void)setRadioStationID:(long long)arg1;
- (void)setRating:(float)arg1;
- (void)setRemoteControlInterface:(id)arg1;
- (void)setRepeatMode:(int)arg1;
- (void)setReplaceIntent:(int)arg1;
- (void)setRequestDefermentToPlaybackQueuePosition:(bool)arg1;
- (void)setSendOptions:(int)arg1;
- (void)setSenderID:(id)arg1;
- (void)setSharedPlaybackSessionIdentifier:(id)arg1;
- (void)setShouldBeginRadioPlayback:(bool)arg1;
- (void)setShouldOverrideManuallyCuratedQueue:(bool)arg1;
- (void)setShuffleMode:(int)arg1;
- (void)setSiriSearchDataSetIdentifier:(id)arg1;
- (void)setSiriTurnIdentifier:(id)arg1;
- (void)setSkipInterval:(float)arg1;
- (void)setSourceID:(id)arg1;
- (void)setStationURL:(id)arg1;
- (void)setSystemAppPlaybackQueue:(id)arg1;
- (void)setSystemAppPlaybackQueueData:(id)arg1;
- (void)setTrackID:(unsigned long long)arg1;
- (void)setTrueCompletion:(bool)arg1;
- (void)setUserIdentityData:(id)arg1;
- (void)setVerifySupportedCommands:(bool)arg1;
- (void)setVocalsControlActive:(bool)arg1;
- (void)setVocalsControlContinuous:(bool)arg1;
- (void)setVocalsControlLevel:(float)arg1;
- (void)setVocalsControlMaxLevel:(float)arg1;
- (void)setVocalsControlMinLevel:(float)arg1;
- (id)sharedPlaybackSessionIdentifier;
- (bool)shouldBeginRadioPlayback;
- (bool)shouldOverrideManuallyCuratedQueue;
- (int)shuffleMode;
- (id)shuffleModeAsString:(int)arg1;
- (id)siriSearchDataSetIdentifier;
- (id)siriTurnIdentifier;
- (float)skipInterval;
- (id)sourceID;
- (id)stationURL;
- (id)systemAppPlaybackQueue;
- (id)systemAppPlaybackQueueData;
- (unsigned long long)trackID;
- (bool)trueCompletion;
- (id)userIdentityData;
- (bool)verifySupportedCommands;
- (bool)vocalsControlActive;
- (bool)vocalsControlContinuous;
- (float)vocalsControlLevel;
- (float)vocalsControlMaxLevel;
- (float)vocalsControlMinLevel;
- (void)writeTo:(id)arg1;

@end
