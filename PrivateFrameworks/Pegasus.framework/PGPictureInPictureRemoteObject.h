
@interface PGPictureInPictureRemoteObject : NSObject <BSDescriptionProviding, PGCommandHandler, PGPictureInPictureRemoteObjectInterface, PGPictureInPictureViewControllerDelegate> {
    unsigned long long  _UILockedResourcesUsageReductionReasons;
    NSString * _activitySessionIdentifier;
    NSString * _activitySessionIdentifierForLastActivePIPSession;
    <PGPictureInPictureAnalyticsDelegate> * _analyticsDelegate;
    NSUUID * _analyticsSourceUUID;
    PGProcessAssertion * _cancelPictureInPictureFinishTaskAssertion;
    NSXPCConnection * _connection;
    NSTimer * _considerStashedPlaybackAsBackgroundAudioTimer;
    long long  _controlsStyle;
    long long  _currentState;
    <PGPictureInPictureRemoteObjectDelegate> * _delegate;
    NSString * _exemptAttribution;
    unsigned long long  _externalResourcesUsageReductionReasons;
    NSUUID * _finishTaskInvalidationUUID;
    bool  _hasBegunTwoStageStop;
    bool  _hasPendingCancellationRequest;
    bool  _hasPendingStopRequest;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _initialLayerFrameForInteractiveTransitionAnimationUponBackgrounding;
    PGInterruptionAssistant * _interruptionAssistant;
    PGProcessAssertion * _interruptionBeganFinishTaskAssertion;
    bool  _isPictureInPicturePossible;
    NSArray * _menuItems;
    PGPictureInPictureApplication * _pictureInPictureApplication;
    bool  _pictureInPictureShouldStartWhenEnteringBackground;
    bool  _pictureInPictureStartedAutomatically;
    PGPictureInPictureViewController * _pictureInPictureViewController;
    PGPlaybackState * _playbackState;
    struct CGSize { 
        double width; 
        double height; 
    }  _preferredContentSize;
    PGProcessAssertion * _processAssertion;
    NSObject<OS_dispatch_queue> * _queue;
    long long  _queue_outstandingRotationAnimationsCount;
    unsigned long long  _resourcesUsageReductionReasons;
    bool  _shouldShowAlternateActionButtonImage;
    bool  _shouldShowLoadingIndicator;
    FBScene * _sourceScene;
    NSString * _sourceSceneSessionPersistentIdentifier;
    PGProcessAssertion * _startBackgroundPIPAssertion;
    bool  _stashed;
    <BSInvalidatable> * _stateCaptureInvalidatable;
    PGPictureInPictureRemoteObject * _tetheredRemoteObject;
    PGPictureInPictureRemoteObject * _tetheringRemoteObject;
    NSTimer * _timerForInvalidatingIfStopOrCancelFails;
}

@property (nonatomic, readonly, copy) NSString *activitySessionIdentifier;
@property (nonatomic) <PGPictureInPictureAnalyticsDelegate> *analyticsDelegate;
@property (nonatomic, readonly) bool canCancelPictureInPicture;
@property (nonatomic, readonly) bool canEndTwoStageStopPictureInPicture;
@property (nonatomic, readonly) bool canStartBackgroundPIPForCurrentActivitySessionIdentifier;
@property (nonatomic, readonly) bool canStopPictureInPicture;
@property (nonatomic, readonly) NSXPCConnection *connection;
@property (nonatomic, readonly) long long contentType;
@property (nonatomic, readonly) long long currentState;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PGPictureInPictureRemoteObjectDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) NSString *exemptAttribution;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } initialLayerFrameForInteractiveTransitionAnimationUponBackgrounding;
@property (getter=isInterrupted, nonatomic, readonly) bool interrupted;
@property (nonatomic, readonly) bool isStartingStoppingOrCancellingPictureInPicture;
@property (nonatomic, readonly) bool isStoppingOrCancellingPictureInPicture;
@property (nonatomic, readonly) PGPictureInPictureApplication *pictureInPictureApplication;
@property (getter=isPictureInPicturePossible, nonatomic) bool pictureInPicturePossible;
@property (nonatomic, readonly) PGPictureInPictureViewController *pictureInPictureViewController;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } preferredContentSize;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, readonly) bool shouldStartPictureInPictureEnteringBackground;
@property (nonatomic, readonly) NSString *sourceSceneSessionPersistentIdentifier;
@property (readonly) Class superclass;
@property (nonatomic, retain) PGPictureInPictureRemoteObject *tetheredRemoteObject;
@property (nonatomic, retain) PGPictureInPictureRemoteObject *tetheringRemoteObject;
@property (getter=isVideoCall, nonatomic, readonly) bool videoCall;

+ (void)tetherRemoteObject:(id)arg1 toRemoteObject:(id)arg2 mode:(long long)arg3;

- (void).cxx_destruct;
- (void)_acquireOrInvalidateProcessAssertionIfNeeded;
- (bool)_canTransitionToState:(long long)arg1;
- (bool)_currentStateAllowsProcessAssertion;
- (void)_finishCleanup;
- (void)_invalidateAllAssertions;
- (void)_invalidateForFailureToStartStopOrCancel;
- (void)_invalidateInterruptionBeganFinishTaskAssertion;
- (id)_invalidationTimerWithTimeout:(double)arg1;
- (id)_invalidationTimerWithTimeout:(double)arg1 block:(id /* block */)arg2;
- (bool)_isAppICS;
- (bool)_isAssociatedWithOtherObject:(id)arg1;
- (bool)_isICSVideoCall;
- (bool)_isInActivitySession;
- (bool)_isUnderLock;
- (void)_notifyProxyOfStashedOrUnderLock:(bool)arg1;
- (void)_queue_notifyProxyOfInterruptionBegan;
- (void)_queue_notifyProxyOfInterruptionEnded;
- (void)_setCurrentState:(long long)arg1;
- (void)_setResolvedResourcesUsageReductionReasons:(unsigned long long)arg1;
- (void)_setUILockedResourcesUsageReductionReasons:(unsigned long long)arg1;
- (void)_stopTethering;
- (void)_updateActiveProxyAndViewControllerOfInterruptionIfNeeded;
- (void)_updatePreferredContentSize:(struct CGSize { double x1; double x2; })arg1 withCompletionHandler:(id /* block */)arg2;
- (bool)_wantsProcessAssertion;
- (id)activitySessionIdentifier;
- (id)analyticsDelegate;
- (void)beginTwoStageStopPictureInPictureByRestoringUserInterfaceWithCompletionHandler:(id /* block */)arg1;
- (bool)canActivateUntetheredAlongsideOtherObject:(id)arg1;
- (bool)canCancelPictureInPicture;
- (bool)canEndTwoStageStopPictureInPicture;
- (bool)canPreventOrSuspendRemoteObject:(id)arg1;
- (bool)canStartBackgroundPIPForCurrentActivitySessionIdentifier;
- (bool)canStartMicroPIP;
- (bool)canStopPictureInPicture;
- (bool)canTetherRemoteObjectAsMicroPIP:(id)arg1;
- (void)cancel;
- (oneway void)checkActivePictureInPictureCancellationPolicyWithCompletion:(id /* block */)arg1;
- (oneway void)cleanupWithCompletionHandler:(id /* block */)arg1;
- (id)connection;
- (long long)contentType;
- (long long)currentState;
- (void)dealloc;
- (id)delegate;
- (id)description;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
- (void)endTwoStageStopPictureInPictureWithCompletionBlock:(id /* block */)arg1;
- (id)exemptAttribution;
- (void)handleCommand:(id)arg1;
- (id)init;
- (id)initWithConnection:(id)arg1 interruptionAssistant:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })initialLayerFrameForInteractiveTransitionAnimationUponBackgrounding;
- (oneway void)initializePictureInPictureWithControlsStyle:(long long)arg1 preferredContentSize:(struct CGSize { double x1; double x2; })arg2 completionHandler:(id /* block */)arg3;
- (void)invalidate;
- (bool)isAssociatedWithRemoteObject:(id)arg1;
- (bool)isInterrupted;
- (bool)isPictureInPicturePossible;
- (bool)isStartingPictureInPicture;
- (bool)isStartingStoppingOrCancellingPictureInPicture;
- (bool)isStoppingOrCancellingPictureInPicture;
- (bool)isVideoCall;
- (bool)matchesSceneSessionIdentifier:(id)arg1;
- (id)pictureInPictureApplication;
- (void)pictureInPictureInterruptionBeganWithReason:(long long)arg1 attribution:(id)arg2;
- (void)pictureInPictureInterruptionEndedWithReason:(long long)arg1 attribution:(id)arg2;
- (id)pictureInPictureViewController;
- (void)pictureInPictureViewController:(id)arg1 didReceiveCommand:(id)arg2;
- (void)pictureInPictureViewController:(id)arg1 didTransitionToStashed:(bool)arg2;
- (void)pictureInPictureViewController:(id)arg1 updateHostedWindowSize:(struct CGSize { double x1; double x2; })arg2 animationType:(long long)arg3 initialSpringVelocity:(double)arg4;
- (void)pictureInPictureViewControllerDidRequestCancel:(id)arg1;
- (void)pictureInPictureViewControllerDidRequestStop:(id)arg1;
- (void)pictureInPictureViewControllerHostedWindowSizeChangeBegan:(id)arg1;
- (void)pictureInPictureViewControllerHostedWindowSizeChangeEnded:(id)arg1;
- (bool)pictureInPictureViewControllerShouldHideTetheredViewControllerAlongsideControls:(id)arg1;
- (bool)pictureInPictureViewControllerWantsStashTabSuppression:(id)arg1;
- (struct CGSize { double x1; double x2; })preferredContentSize;
- (id)queue;
- (void)resume;
- (oneway void)rotateContentContainer:(long long)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)sendStartPictureInPictureTestAction;
- (oneway void)setActivitySessionIdentifier:(id)arg1;
- (void)setAnalyticsDelegate:(id)arg1;
- (void)setCurrentResourcesUsageReductionReasons:(unsigned long long)arg1;
- (void)setDelegate:(id)arg1;
- (void)setExemptAttribution:(id)arg1;
- (void)setPictureInPicturePossible:(bool)arg1;
- (oneway void)setPictureInPictureShouldStartWhenEnteringBackground:(bool)arg1 completionHandler:(id /* block */)arg2;
- (void)setSourceSceneSessionPersistentIdentifier:(id)arg1;
- (void)setTetheredRemoteObject:(id)arg1;
- (void)setTetheringRemoteObject:(id)arg1;
- (oneway void)setupStartAnimated:(bool)arg1 hostedWindowHostingHandle:(id)arg2 sceneSessionPersistentIdentifier:(id)arg3 preferredContentSize:(struct CGSize { double x1; double x2; })arg4 initialInterfaceOrientation:(long long)arg5 initialLayerFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg6 completionHandler:(id /* block */)arg7;
- (oneway void)setupStopAnimated:(bool)arg1 needsApplicationActivation:(bool)arg2 completionHandler:(id /* block */)arg3;
- (bool)shouldStartPictureInPictureEnteringBackground;
- (id)sourceSceneSessionPersistentIdentifier;
- (oneway void)startPictureInPictureAnimated:(bool)arg1 completionHandler:(id /* block */)arg2;
- (void)startPictureInPictureEnteringBackgroundAnimated:(bool)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)startPictureInPictureFromBackground;
- (oneway void)stopPictureInPictureAndRestoreUserInterface;
- (void)stopPictureInPictureAnimated:(bool)arg1 withCompletionHandler:(id /* block */)arg2;
- (oneway void)stopPictureInPictureAnimated:(bool)arg1 withFinalInterfaceOrientation:(long long)arg2 finalLayerFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 completionHandler:(id /* block */)arg4;
- (id)succinctDescription;
- (id)succinctDescriptionBuilder;
- (bool)supportsMicroPIP;
- (void)suspend;
- (id)tetheredRemoteObject;
- (id)tetheringRemoteObject;
- (oneway void)updateInitialLayerFrameForInteractiveTransitionAnimationUponBackgrounding:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withCompletionHandler:(id /* block */)arg2;
- (oneway void)updateMenuItems:(id)arg1;
- (oneway void)updatePlaybackStateWithDiff:(id)arg1;
- (oneway void)updatePreferredContentSize:(struct CGSize { double x1; double x2; })arg1 withCompletionHandler:(id /* block */)arg2;
- (oneway void)updateSourceSceneSessionPersistentIdentifierForInteractiveTransitionAnimationUponBackgrounding:(id)arg1 withCompletionHandler:(id /* block */)arg2;

@end
