
@interface PGPictureInPictureProxy : NSObject <PGPictureInPictureExportedInterface> {
    id /* block */  __pipStopFinalStageCompletionHandler;
    id /* block */  __pipStopUserInterfaceRestoreContinuationBlock;
    long long  _activationState;
    bool  _automaticallyInterruptsForLegacyFaceTimeBehaviors;
    bool  _canSendPlaybackState;
    NSString * _clientSessionIdentifier;
    NSString * _clientSessionIdentifierAccordingToRemoteObject;
    long long  _controlsStyle;
    <PGPictureInPictureProxyDelegate> * _delegate;
    struct { 
        unsigned int pictureInPictureProxyInterfaceOrientationForTransitionAnimation : 1; 
        unsigned int pictureInPictureProxyViewFrameForTransitionAnimation : 1; 
        unsigned int pictureInPictureProxyViewControllerWindowForTransitionAnimation : 1; 
        unsigned int pictureInPictureProxy_willStartPictureInPictureWithAnimationType : 1; 
        unsigned int pictureInPictureProxy_didStartPictureInPictureWithAnimationType : 1; 
        unsigned int pictureInPictureProxy_failedToStartPictureInPictureWithAnimationType_error : 1; 
        unsigned int pictureInPictureProxy_restoreUserInterfaceForPictureInPictureStopWithCompletionHandler : 1; 
        unsigned int pictureInPictureProxy_willStopPictureInPictureWithAnimationType_reason : 1; 
        unsigned int pictureInPictureProxy_didStopPictureInPictureWithAnimationType_reason : 1; 
        unsigned int pictureInPictureProxyPictureInPictureInterruptionBegan : 1; 
        unsigned int pictureInPictureProxyPictureInPictureInterruptionEnded : 1; 
        unsigned int pictureInPictureProxy_didUpdateStashedOrUnderLockState : 1; 
        unsigned int pictureInPictureProxy_didUpdateResourcesUsageReductionReasons_oldReasons : 1; 
        unsigned int pictureInPictureProxyWillSetupPictureInPictureStop : 1; 
    }  _delegateRespondsTo;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _frameForInteractiveTransitions;
    PGHostedWindow * _hostedWindow;
    bool  _isHostedWindowSizeChangeDuringPinchGesture;
    bool  _isInViewService;
    bool  _isInterruptedForAnyReason;
    bool  _isInterruptedForDefaultReason;
    bool  _isInterruptedForStash;
    bool  _isObservingViewController;
    bool  _isPictureInPictureActive;
    bool  _isPictureInPicturePossible;
    bool  _isPictureInPictureSuspended;
    NSArray * _loadedTimeRanges;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    NSXPCConnection * _lock_connection;
    NSXPCConnection * _lock_connectionIfInterrupted;
    NSArray * _menuItems;
    bool  _needsReinitialization;
    bool  _pictureInPictureShouldStartWhenEnteringBackground;
    bool  _pictureInPictureStashedOrUnderLock;
    bool  _pictureInPictureWasStartedWhenEnteringBackground;
    double  _playbackProgress;
    double  _playbackRate;
    PGPlaybackState * _playbackState;
    PGPlaybackState * _playbackStateAccordingToRemoteObject;
    struct CGSize { 
        double width; 
        double height; 
    }  _preferredContentSize;
    NSTimer * _prewarmingTimeoutTimer;
    NSObject<OS_dispatch_queue> * _queue;
    bool  _readyForDisplay;
    unsigned long long  _resourcesUsageReductionReasons;
    UIViewController * _rootViewController;
    PGRunLoopObserver * _runLoopObserver;
    NSString * _sceneSessionPersistentIdentifier;
    NSString * _sceneSessionPersistentIdentifierAccordingToRemoteObject;
    bool  _shouldCancelActivePictureInPictureOnStart;
    bool  _shouldCancelUponActivation;
    bool  _shouldPullCancellationPolicyOnStart;
    bool  _shouldStopUponActivation;
    bool  _stashed;
    UIViewController<PGPictureInPictureViewController> * _viewController;
    id  _windowSceneActivationStateObserver;
}

@property (nonatomic, copy) id /* block */ _pipStopFinalStageCompletionHandler;
@property (nonatomic, copy) id /* block */ _pipStopUserInterfaceRestoreContinuationBlock;
@property (nonatomic) long long controlsStyle;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PGPictureInPictureProxyDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (getter=isPictureInPictureActive, nonatomic, readonly) bool pictureInPictureActive;
@property (getter=isPictureInPictureInterrupted, nonatomic, readonly) bool pictureInPictureInterrupted;
@property (getter=isPictureInPicturePossible, nonatomic, readonly) bool pictureInPicturePossible;
@property (nonatomic) bool pictureInPictureShouldStartWhenEnteringBackground;
@property (getter=isPictureInPictureStashedOrUnderLock, nonatomic, readonly) bool pictureInPictureStashedOrUnderLock;
@property (getter=isPictureInPictureSuspended, nonatomic, readonly) bool pictureInPictureSuspended;
@property (nonatomic, readonly) bool pictureInPictureWasStartedWhenEnteringBackground;
@property (nonatomic, readonly) PGPlaybackState *playbackState;
@property (getter=isReadyForDisplay, nonatomic) bool readyForDisplay;
@property (nonatomic, readonly) unsigned long long resourcesUsageReductionReasons;
@property (getter=isPictureInPictureStashed, nonatomic) bool stashed;
@property (readonly) Class superclass;
@property (nonatomic, readonly) UIViewController<PGPictureInPictureViewController> *viewController;

+ (void)_updatePictureInPictureActive:(bool)arg1;
+ (bool)isPictureInPictureActive;
+ (bool)isPictureInPictureSupported;
+ (id)pictureInPictureProxyWithControlsStyle:(long long)arg1 viewController:(id)arg2;

- (void).cxx_destruct;
- (void)__actuallyStartWithAnimationType:(long long)arg1 successHandler:(id /* block */)arg2 failureHandler:(id /* block */)arg3;
- (void)__actuallyStopAnimated:(bool)arg1 reason:(long long)arg2 completionHandler:(id /* block */)arg3;
- (void)__actuallyStopAnimated:(bool)arg1 reason:(long long)arg2 finalLayerFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 finalInterfaceOrientation:(long long)arg4 completionHandler:(id /* block */)arg5;
- (void)__cleanupWithCompletionHandler:(id /* block */)arg1;
- (void)__coordinateStartAnimated:(bool)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)__didStartWithAnimationType:(long long)arg1 completionHandler:(id /* block */)arg2;
- (void)__restoreUserInterfaceAnimated:(bool)arg1 reason:(long long)arg2 completionHandler:(id /* block */)arg3;
- (void)__setConnection:(id)arg1;
- (void)__setupStartWithAnimationType:(long long)arg1 initialLayerFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 successHandler:(id /* block */)arg3 failureHandler:(id /* block */)arg4;
- (void)__setupStopAnimated:(bool)arg1 needsApplicationActivation:(bool)arg2 successHandler:(id /* block */)arg3 failureHandler:(id /* block */)arg4;
- (void)__setupStopAnimated:(bool)arg1 needsApplicationActivation:(bool)arg2 waitForApplicationActivation:(bool)arg3 successHandler:(id /* block */)arg4 failureHandler:(id /* block */)arg5;
- (void)__updateCancellationPolicyWithSuccessHandler:(id /* block */)arg1 failureHandler:(id /* block */)arg2;
- (void)__waitForApplicationActivationWithSuccessHandler:(id /* block */)arg1 failureHandler:(id /* block */)arg2;
- (long long)_activationState;
- (void)_addViewControllerToHostedWindowIfNeeded;
- (void)_addWindowSceneActivationStateObserverIfNeeded:(id)arg1;
- (void)_applicationDidBecomeActive;
- (void)_beginDeactivatingPictureInPicture;
- (void)_beginDeactivatingPictureInPictureWithAnimationType:(long long)arg1 stopReason:(long long)arg2;
- (id)_bestKnownConnectedSceneSessionPersistentIdentifier;
- (bool)_canBeShownInMicroPIPMode;
- (void)_cancelPrewarming;
- (id)_connection;
- (void)_deactivateIfNeededForInterruptedOrInvalidatedConnection;
- (void)_endDeactivatingPictureInPictureIfNeededWithAnimationType:(long long)arg1 stopReason:(long long)arg2;
- (void)_endDeactivatingPictureInPictureIfNeededWithAnimationType:(long long)arg1 stopReason:(long long)arg2 cleanupHandlerOrNil:(id /* block */)arg3;
- (void)_establishConnection;
- (void)_executeDelegateCallbackBlock:(id /* block */)arg1 assumeApplicationActive:(bool)arg2;
- (id)_expectedScene;
- (id)_generatePlaybackStateDiffAndMarkAsSent;
- (void)_handleSceneConnectionChangedNotification:(id)arg1;
- (void)_initializeWithControlsStyle:(long long)arg1 viewController:(id)arg2 reason:(id)arg3;
- (long long)_interfaceOrientationForTransitionAnimationAssumeApplicationActive:(bool)arg1;
- (void)_invalidateConnectionForFailure;
- (bool)_isInCallService;
- (bool)_isInactive;
- (bool)_isViewControllerWindowSceneActive;
- (bool)_isViewControllerWindowSceneConsideredActive;
- (void)_legacyPictureInPictureInterruptionBegan;
- (void)_legacyPictureInPictureInterruptionEnded;
- (void)_markConnectionAsInterrupted;
- (void)_notifyActionButtonTapped;
- (id /* block */)_pipStopFinalStageCompletionHandler;
- (id /* block */)_pipStopUserInterfaceRestoreContinuationBlock;
- (void)_prewarmAndStartAfterTimeout;
- (id)_remoteObject;
- (id)_remoteObjectWithErrorHandler:(id /* block */)arg1;
- (void)_removeViewControllerFromHostedWindowIfNeeded;
- (void)_resetInternalState;
- (void)_restoreInterruptedConnectionIfNeeded;
- (void)_setActivationState:(long long)arg1 reason:(id)arg2;
- (void)_setInterruptedForDefaultReason:(bool)arg1 initiatedByRemoteObject:(bool)arg2;
- (void)_setMaybeNeedsUpdatePlaybackState;
- (void)_setPictureInPictureActive:(bool)arg1;
- (void)_setPictureInPicturePossible:(bool)arg1;
- (void)_setPictureInPictureSuspended:(bool)arg1;
- (void)_setResourcesUsageReductionReasons:(unsigned long long)arg1;
- (void)_setStashedOrUnderLock:(bool)arg1 reason:(id)arg2;
- (id)_sourceScene;
- (void)_startBackgroundPIPWhilePrewarmingIfNeeded;
- (void)_startPictureInPictureAnimated:(bool)arg1 enteringBackground:(bool)arg2 reason:(id)arg3 withCompletionHandler:(id /* block */)arg4;
- (void)_stopObservingWindowSceneActivationState;
- (void)_stopPictureInPictureAnimated:(bool)arg1 restoreUserInterface:(bool)arg2 withCompletionHandler:(id /* block */)arg3;
- (void)_twoStageStopForPictureInPictureRestoreWithContinueAfterUserInterfaceRestoreBlock:(id /* block */)arg1 completionHandler:(id /* block */)arg2;
- (void)_updateAutoPIPSettingsAndNotifyRemoteObjectIfNeeded;
- (void)_updateAutoPIPSettingsAndNotifyRemoteObjectWithReason:(id)arg1;
- (void)_updateFaceTimePlaybackStateUsingBlock:(id /* block */)arg1;
- (void)_updateInteractiveFrameWorkaroundFor_100127310:(id)arg1;
- (void)_updateIsInterruptedIfNeededForReason:(id)arg1;
- (void)_updateIsInterruptedIfNeededForReason:(id)arg1 initiatedByRemoteObject:(bool)arg2;
- (void)_updatePlaybackStateContentTypeIfNeeded;
- (void)_updatePlaybackStateIfNeeded;
- (void)_updateScreenSharingInfoIfNeeded;
- (void)_viewFrameForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewControllerWithReason:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_viewFrameForTransitionAnimationAssumeApplicationActive:(bool)arg1;
- (void)_windowSceneForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewControllerWithReason:(id)arg1;
- (oneway void)actionButtonTapped;
- (bool)automaticallyInterruptsForLegacyFaceTimeBehaviors;
- (oneway void)beginTwoStagePictureInPictureStopByRestoringUserInterfaceWithCompletionHandler:(id /* block */)arg1;
- (bool)canSwitchCamera;
- (id)clientSessionIdentifier;
- (long long)controlsStyle;
- (void)dealloc;
- (id)delegate;
- (bool)disablesLayerCloning;
- (oneway void)endTwoStagePictureInPictureStopWithCompletionBlock:(id /* block */)arg1;
- (oneway void)handleCommand:(id)arg1;
- (oneway void)hostedWindowSizeChangeBegan;
- (oneway void)hostedWindowSizeChangeEnded;
- (id)init;
- (id)initWithControlsStyle:(long long)arg1 viewController:(id)arg2;
- (bool)isCameraActive;
- (bool)isMicrophoneMuted;
- (bool)isPictureInPictureActive;
- (bool)isPictureInPictureInterrupted;
- (bool)isPictureInPicturePossible;
- (bool)isPictureInPictureStashed;
- (bool)isPictureInPictureStashedOrUnderLock;
- (bool)isPictureInPictureSuspended;
- (bool)isReadyForDisplay;
- (id)loadedTimeRanges;
- (id)menuItems;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (oneway void)pictureInPictureCancelRequestedAnimated:(bool)arg1 withCompletionHandler:(id /* block */)arg2;
- (oneway void)pictureInPictureInvalidated;
- (bool)pictureInPictureShouldStartWhenEnteringBackground;
- (oneway void)pictureInPictureStartRequestedAnimated:(bool)arg1 withCompletionHandler:(id /* block */)arg2;
- (oneway void)pictureInPictureStopRequestedAnimated:(bool)arg1 withCompletionHandler:(id /* block */)arg2;
- (bool)pictureInPictureWasStartedWhenEnteringBackground;
- (double)playbackProgress;
- (double)playbackRate;
- (id)playbackState;
- (void)preferredContentSizeDidChangeForViewController;
- (unsigned long long)resourcesUsageReductionReasons;
- (void)rotateContentContainer:(long long)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)setAutomaticallyInterruptsForLegacyFaceTimeBehaviors:(bool)arg1;
- (void)setCameraActive:(bool)arg1;
- (void)setCanSwitchCamera:(bool)arg1;
- (void)setClientSessionIdentifier:(id)arg1;
- (void)setControlsStyle:(long long)arg1;
- (void)setControlsStyle:(long long)arg1 animated:(bool)arg2 withCompletionHandler:(id /* block */)arg3;
- (void)setDelegate:(id)arg1;
- (void)setDisablesLayerCloning:(bool)arg1;
- (void)setLoadedTimeRanges:(id)arg1;
- (void)setMenuItems:(id)arg1;
- (void)setMicrophoneMuted:(bool)arg1;
- (void)setPictureInPictureShouldStartWhenEnteringBackground:(bool)arg1;
- (void)setPlaybackProgress:(double)arg1 playbackRate:(double)arg2;
- (void)setReadyForDisplay:(bool)arg1;
- (oneway void)setResourcesUsageReductionReasons:(unsigned long long)arg1;
- (void)setScreenSharingTitle:(id)arg1 avatar:(id)arg2;
- (void)setStashed:(bool)arg1;
- (oneway void)setStashedOrUnderLock:(bool)arg1;
- (void)set_pipStopFinalStageCompletionHandler:(id /* block */)arg1;
- (void)set_pipStopUserInterfaceRestoreContinuationBlock:(id /* block */)arg1;
- (void)skipForwardButtonTappedWithTimeInterval:(double)arg1;
- (void)startPictureInPicture;
- (void)stopPictureInPictureAndRestoreUserInterface:(bool)arg1;
- (oneway void)updateHostedWindowSize:(struct CGSize { double x1; double x2; })arg1 animationType:(long long)arg2 initialSpringVelocity:(double)arg3 synchronizationFence:(id)arg4;
- (oneway void)updatePictureInPicturePossible:(bool)arg1;
- (void)updatePlaybackStateUsingBlock:(id /* block */)arg1;
- (id)viewController;
- (void)viewFrameForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewController;
- (void)windowSceneForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewController;

@end
