
@interface CRFDRSeal : NSObject <CRFDR> {
    NSString * FDRCAURL;
    NSString * FDRDSURL;
    NSString * FDRPersistentDataPath;
    NSString * FDRSealingURL;
    NSString * KBBSerialNumber;
    NSString * KGBSerialNumber;
    NSString * SOCKSHost;
    NSNumber * SOCKSPort;
    NSMutableArray * _currentClasses;
    NSMutableArray * _currentInstances;
    NSDictionary * _currentProperties;
    NSString * _failedSPC;
    NSMutableArray * _makeClasses;
    NSMutableArray * _makeInstances;
    NSDictionary * _makeProperties;
    NSMutableArray * _mergedDataClasses;
    NSMutableArray * _mergedDataInstances;
    NSArray * _minimalSealedClasses;
    NSArray * _minimalSealedInstances;
    NSArray * _minimalSealingInstances;
    NSMutableDictionary * _networkUsage;
    NSSet * _partSPC;
    NSArray * _patchDataClasses;
    NSArray * _patchDataInstances;
    NSArray * _patchValues;
    NSMutableArray * _recoverDataClasses;
    NSMutableArray * _recoverDataInstances;
    NSString * _sealedDataInstance;
    NSData * apTicketData;
    NSDictionary * claimDict;
    NSString * currentMLBSerialNumber;
    NSString * currentSerialNumber;
    NSURL * dataDirectoryURL;
    <setupModuleChallengeCallBack> * delegate;
    NSNumber * displayMaxDuration;
    bool  doSeal;
    bool  enableProxy;
    bool  enableStagedSeal;
    CRFDRBaseDeviceHandler * handler;
    bool  ignoreStagedData;
    bool  isStagedSealed;
    NSDictionary * manifestDataClassesAndInstances;
    NSDictionary * metadataDict;
    NSSet * overridePropertySet;
    NSMutableDictionary * postSealingManifest;
    NSMutableDictionary * preSealingManifest;
    NSArray * removedProperties;
    NSMutableDictionary * repairStats;
    int  sealCount;
    NSString * trustObjectURL;
    NSDictionary * updateClassDict;
    NSDictionary * updateProperties;
}

@property (nonatomic, retain) NSData *apTicketData;
@property (nonatomic, retain) NSMutableArray *currentClasses;
@property (nonatomic, retain) NSMutableArray *currentInstances;
@property (nonatomic, retain) NSDictionary *currentProperties;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <setupModuleChallengeCallBack> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSString *failedSPC;
@property (nonatomic, retain) CRFDRBaseDeviceHandler *handler;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSMutableArray *makeClasses;
@property (nonatomic, retain) NSMutableArray *makeInstances;
@property (nonatomic, retain) NSDictionary *makeProperties;
@property (nonatomic, retain) NSMutableArray *mergedDataClasses;
@property (nonatomic, retain) NSMutableArray *mergedDataInstances;
@property (nonatomic, retain) NSArray *minimalSealedClasses;
@property (nonatomic, retain) NSArray *minimalSealedInstances;
@property (nonatomic, retain) NSArray *minimalSealingInstances;
@property (nonatomic, retain) NSMutableDictionary *networkUsage;
@property (nonatomic, retain) NSSet *partSPC;
@property (nonatomic, retain) NSArray *patchDataClasses;
@property (nonatomic, retain) NSArray *patchDataInstances;
@property (nonatomic, retain) NSArray *patchValues;
@property (nonatomic, retain) NSMutableArray *recoverDataClasses;
@property (nonatomic, retain) NSMutableArray *recoverDataInstances;
@property (nonatomic, retain) NSString *sealedDataInstance;
@property (readonly) Class superclass;

+ (bool)currentProcessHasEntitlement:(id)arg1;

- (void).cxx_destruct;
- (bool)CRFDRCheckVerificationFatalErrors:(struct __CFError { }*)arg1 fdrLocal:(struct __AMFDR { }*)arg2 sealedData:(struct __AMFDRSealedData { }*)arg3 strict:(bool)arg4;
- (long long)CRFDRDataRepairRecover:(struct __AMFDR { }*)arg1 fdrRemote:(struct __AMFDR { }*)arg2 fdrError:(id*)arg3;
- (long long)CRFDRLocalPopulate:(struct __AMFDR { }*)arg1 fdrRemote:(struct __AMFDR { }*)arg2 sealedData:(struct __AMFDRSealedData {}**)arg3 fdrError:(id*)arg4;
- (long long)CRFDRPostRecoverVerify:(struct __AMFDR { }*)arg1 fdrRemote:(struct __AMFDR { }*)arg2 fdrError:(id*)arg3;
- (long long)CRFDRRecoverMissingData:(id*)arg1 fdrLocal:(struct __AMFDR { }*)arg2 fdrRemote:(struct __AMFDR { }*)arg3;
- (long long)CRFDRVerifyLocal:(struct __AMFDR { }*)arg1 fdrRemote:(struct __AMFDR { }*)arg2 sealedData:(struct __AMFDRSealedData {}**)arg3 mergedDataClasses:(id)arg4 mergedDataInstances:(id)arg5 currentManifestProperties:(id)arg6 fdrError:(id*)arg7 syncEAN:(bool)arg8 postSeal:(bool)arg9 skipSrvPCheck:(bool)arg10 ignoreBenignError:(bool)arg11;
- (long long)CRFDRVerifyProperties:(struct __AMFDR { }*)arg1 currentManifestProperties:(id)arg2 skipSrvPCheck:(bool)arg3 fdrError:(id*)arg4;
- (id)_baseFDROptionsWithDataStore:(id)arg1;
- (bool)_commitData:(id)arg1 fdrlocal:(struct __AMFDR { }*)arg2 fdrError:(id*)arg3;
- (long long)_commitSealedData:(struct __AMFDR { }*)arg1 fdrRemote:(struct __AMFDR { }*)arg2 sealedData:(struct __AMFDRSealedData { }*)arg3 returnError:(id*)arg4;
- (id)_copyFDROptionsForPatch:(struct __AMFDR { }*)arg1;
- (long long)_fetchRemoteTrustObject:(struct __AMFDR { }*)arg1 apTrustObjectDigest:(id)arg2 remoteTrustObject:(id*)arg3 fdrError:(id*)arg4;
- (id)_getCRFDRMetaDataDictionary;
- (void)_logSealingRequest:(struct __AMFDRSealedData { }*)arg1;
- (id)_personalizeTrustObjectWithDigest:(id)arg1 withError:(id*)arg2;
- (id)_setLocalAndRemotePermission:(struct __AMFDR { }*)arg1 fdrRemote:(struct __AMFDR { }*)arg2;
- (bool)_urlsOverrideIsAllowed;
- (bool)_writeBatteryDateOfFirstUse:(struct __AMFDR { }*)arg1 error:(id*)arg2;
- (id)apTicketData;
- (id)currentClasses;
- (id)currentInstances;
- (id)currentProperties;
- (id)delegate;
- (bool)deleteLocalData:(id)arg1;
- (bool)deleteLocalData:(id)arg1 dataClass:(id)arg2;
- (id)extractNetworkUsage;
- (id)failedSPC;
- (bool)generateFinalData;
- (id)handler;
- (id)init;
- (id)initForRegisterChangeWithParameters:(id)arg1;
- (id)initWithParameters:(id)arg1;
- (long long)localPatch:(struct __AMFDR { }*)arg1 dataClasses:(id)arg2 dataInstances:(id)arg3 values:(id)arg4 error:(id*)arg5;
- (id)makeClasses;
- (id)makeInstances;
- (id)makeProperties;
- (id)mergedDataClasses;
- (id)mergedDataInstances;
- (id)minimalSealedClasses;
- (id)minimalSealedInstances;
- (id)minimalSealingInstances;
- (id)networkUsage;
- (id)partSPC;
- (id)patchDataClasses;
- (id)patchDataInstances;
- (id)patchValues;
- (long long)patchWithOptions:(id)arg1 amfdr:(struct __AMFDR { }*)arg2 dataClasses:(id)arg3 dataInstances:(id)arg4 values:(id)arg5 datas:(id)arg6 error:(id*)arg7 local:(bool)arg8;
- (long long)performHTTPChallengeClaim:(struct __AMFDR { }*)arg1 fdrLocal:(struct __AMFDR { }*)arg2 fdrError:(id*)arg3 claimClassDict:(id)arg4 registerOnly:(bool)arg5;
- (long long)performMake:(struct __AMFDR { }*)arg1 fdrLocal:(struct __AMFDR { }*)arg2 fdrError:(id*)arg3;
- (long long)performRealToRealRepair:(id*)arg1 fdrLocal:(struct __AMFDR { }*)arg2 fdrRemote:(struct __AMFDR { }*)arg3;
- (long long)performRealToStagedRepair:(id*)arg1 fdrLocal:(struct __AMFDR { }*)arg2 fdrRemote:(struct __AMFDR { }*)arg3;
- (long long)performSealing:(struct __AMFDR { }*)arg1 fdrLocal:(struct __AMFDR { }*)arg2 fdrError:(id*)arg3;
- (long long)performStagedMake:(struct __AMFDR { }*)arg1 fdrLocal:(struct __AMFDR { }*)arg2 fdrError:(id*)arg3;
- (long long)performStagedSealing:(struct __AMFDR { }*)arg1 fdrLocal:(struct __AMFDR { }*)arg2 fdrError:(id*)arg3;
- (long long)performStagedToRealRepair:(id*)arg1 fdrLocal:(struct __AMFDR { }*)arg2 fdrRemote:(struct __AMFDR { }*)arg3;
- (long long)performStagedToStagedRepair:(id*)arg1 fdrLocal:(struct __AMFDR { }*)arg2 fdrRemote:(struct __AMFDR { }*)arg3;
- (long long)prefetchPermissionsForSealing:(id*)arg1 fdrRemote:(struct __AMFDR { }*)arg2 fdrLocal:(struct __AMFDR { }*)arg3 makeClasses:(id)arg4 makeInstances:(id)arg5 patchClasses:(id)arg6 patchInstances:(id)arg7 get1Classes:(id)arg8 get1Instances:(id)arg9;
- (long long)prefetchPermissionsWith:(struct __AMFDR { }*)arg1 claimClassDict:(id)arg2 returnError:(id*)arg3;
- (id)recoverDataClasses;
- (id)recoverDataInstances;
- (long long)registerChangeForComponent:(id)arg1 fdrError:(id*)arg2;
- (long long)remotePatch:(struct __AMFDR { }*)arg1 dataClasses:(id)arg2 dataInstances:(id)arg3 values:(id)arg4 datas:(id)arg5 error:(id*)arg6;
- (long long)seal:(id*)arg1 oldSealingManifest:(id*)arg2 newSealingManifest:(id*)arg3 stats:(id*)arg4;
- (long long)sealWithDataClass:(id)arg1 fdrError:(id*)arg2 registerOnly:(bool)arg3;
- (id)sealedDataInstance;
- (void)setApTicketData:(id)arg1;
- (void)setCurrentClasses:(id)arg1;
- (void)setCurrentInstances:(id)arg1;
- (void)setCurrentProperties:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setFailedSPC:(id)arg1;
- (void)setHandler:(id)arg1;
- (long long)setLocalAndRemoteTrustObject:(struct __AMFDR { }*)arg1 fdrLocal:(struct __AMFDR { }*)arg2 remoteTrustObjectDigest:(id)arg3 fdrError:(id*)arg4;
- (void)setMakeClasses:(id)arg1;
- (void)setMakeInstances:(id)arg1;
- (void)setMakeProperties:(id)arg1;
- (void)setMergedDataClasses:(id)arg1;
- (void)setMergedDataInstances:(id)arg1;
- (void)setMinimalSealedClasses:(id)arg1;
- (void)setMinimalSealedInstances:(id)arg1;
- (void)setMinimalSealingInstances:(id)arg1;
- (void)setNetworkUsage:(id)arg1;
- (void)setPartSPC:(id)arg1;
- (void)setPatchDataClasses:(id)arg1;
- (void)setPatchDataInstances:(id)arg1;
- (void)setPatchValues:(id)arg1;
- (void)setRecoverDataClasses:(id)arg1;
- (void)setRecoverDataInstances:(id)arg1;
- (void)setSealedDataInstance:(id)arg1;
- (id)summarizePatchInputs;

@end
