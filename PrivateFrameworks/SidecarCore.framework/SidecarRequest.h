
@interface SidecarRequest : NSObject <NSProgressReporting, SidecarSessionDelegate, SidecarTransferDelegate> {
    <SidecarRequestDelegate> * _delegate;
    SidecarDevice * _device;
    NSArray * _devices_deprecated;
    NSError * _error;
    NSArray * _items;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    <SidecarMessage> * _message;
    NSProgress * _progress;
    SidecarMapTable * _sendTransfers;
    SidecarService * _service;
    SidecarSession * _session;
    SidecarSession * _sessionZombie;
    _Atomic long long  _state;
    double  _timeAccept;
    double  _timeFinish;
    double  _timeStart;
    double  _timeTransfer;
    SidecarTransferReceiver * _transferReceiver;
    NSUUID * _uuid;
}

@property (getter=isCancelled, readonly) bool cancelled;
@property (readonly) NSData *data;
@property (readonly, copy) NSString *debugDescription;
@property <SidecarRequestDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) SidecarDevice *device;
@property (copy) NSArray *devices;
@property (nonatomic, readonly) bool didStart;
@property (retain) NSError *error;
@property (getter=isFinished, readonly) bool finished;
@property (readonly) unsigned long long hash;
@property (readonly) NSArray *items;
@property (readonly) NSString *localizedDescription;
@property (readonly) NSString *localizedItemName;
@property (nonatomic, readonly) <SidecarMessage> *message;
@property (readonly) NSProgress *progress;
@property (readonly) SidecarService *service;
@property (nonatomic, readonly) SidecarSession *session;
@property (readonly) Class superclass;
@property (nonatomic) double timeAccept;
@property (nonatomic) double timeFinish;
@property (nonatomic) double timeStart;
@property (nonatomic) double timeTransfer;
@property (readonly) NSString *uniformTypeIdentifier;
@property (readonly) NSUUID *uuid;

+ (bool)automaticallyNotifiesObserversForKey:(id)arg1;

- (void).cxx_destruct;
- (void)_registerStreamListeners;
- (void)_sendMessage:(id)arg1;
- (void)_willConnect;
- (void)accept;
- (void)cancel;
- (id)data;
- (void)dealloc;
- (id)delegate;
- (id)description;
- (id)device;
- (id)devices;
- (bool)didStart;
- (id)error;
- (id)initWithService:(id)arg1 device:(id)arg2;
- (id)initWithSession:(id)arg1 message:(id)arg2;
- (bool)isCancelled;
- (bool)isFinished;
- (id)items;
- (void)listenForStreamType:(long long)arg1 flags:(unsigned long long)arg2 identifier:(id)arg3 processUniqueID:(unsigned long long)arg4 completion:(id /* block */)arg5;
- (void)listenForStreamType:(long long)arg1 identifier:(id)arg2 completion:(id /* block */)arg3;
- (void)listenForStreamType:(long long)arg1 identifier:(id)arg2 processUniqueID:(unsigned long long)arg3 completion:(id /* block */)arg4;
- (id)localizedDescription;
- (id)localizedItemName;
- (id)message;
- (void)openStreamForType:(long long)arg1 flags:(unsigned long long)arg2 identifier:(id)arg3 processUniqueID:(unsigned long long)arg4 completion:(id /* block */)arg5;
- (void)openStreamForType:(long long)arg1 identifier:(id)arg2 completion:(id /* block */)arg3;
- (void)openStreamForType:(long long)arg1 identifier:(id)arg2 processUniqueID:(unsigned long long)arg3 completion:(id /* block */)arg4;
- (id)progress;
- (void)sendItems:(id)arg1;
- (void)sendItems:(id)arg1 complete:(bool)arg2;
- (id)service;
- (id)session;
- (id)sessionForDevice:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDevices:(id)arg1;
- (void)setError:(id)arg1;
- (void)setItems:(id)arg1;
- (void)setTimeAccept:(double)arg1;
- (void)setTimeFinish:(double)arg1;
- (void)setTimeStart:(double)arg1;
- (void)setTimeTransfer:(double)arg1;
- (void)sidecarServiceTerminate;
- (void)sidecarSession:(id)arg1 closedWithError:(id)arg2;
- (void)sidecarSession:(id)arg1 receivedMessage:(id)arg2;
- (void)sidecarSessionStarted:(id)arg1;
- (void)sidecarTransfer:(id)arg1 didComplete:(id)arg2;
- (void)sidecarTransfer:(id)arg1 receivedItems:(id)arg2 messageType:(long long)arg3;
- (void)start;
- (void)startWithTransport:(long long)arg1;
- (void)startWithTransport:(long long)arg1 reconnectToRequest:(id)arg2;
- (double)timeAccept;
- (double)timeFinish;
- (double)timeStart;
- (double)timeTransfer;
- (id)uniformTypeIdentifier;
- (id)uuid;

@end
