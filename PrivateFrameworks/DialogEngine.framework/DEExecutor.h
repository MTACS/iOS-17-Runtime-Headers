
@interface DEExecutor : NSObject {
    id /* block */  _callback;
    NSString * _catId;
    DEExecutionContext * _context;
    bool  _createTrace;
    long long  _currentTime;
    NSDictionary * _customPronunciations;
    bool  _debug;
    bool  _deterministic;
    NSDictionary * _dialogMetadata;
    DEDistribution * _distribution;
    bool  _enableUpdates;
    NSDictionary * _globalParameters;
    bool  _grounding;
    NSString * _interactionId;
    bool  _isLabelMode;
    bool  _isSpotlight;
    NSString * _locale;
    bool  _multiuser;
    NSDictionary * _parameters;
    DEPatternContext * _patternContext;
    NSString * _patternId;
    NSString * _pluginName;
    unsigned int  _randomSeed;
    bool  _resetState;
    NSString * _responseMode;
    bool  _switchFallthrough;
    NSString * _templateDir;
    bool  _test;
    NSDictionary * _userSettings;
    bool  _visual;
    NSString * _voiceGender;
}

@property (nonatomic, copy) id /* block */ callback;
@property (nonatomic, retain) NSString *catId;
@property (nonatomic, retain) DEExecutionContext *context;
@property (nonatomic) bool createTrace;
@property (nonatomic) long long currentTime;
@property (nonatomic, retain) NSDictionary *customPronunciations;
@property (nonatomic) bool debug;
@property (nonatomic) bool deterministic;
@property (nonatomic, retain) NSDictionary *dialogMetadata;
@property (nonatomic, retain) DEDistribution *distribution;
@property (nonatomic) bool enableUpdates;
@property (nonatomic, retain) NSDictionary *globalParameters;
@property (nonatomic) bool grounding;
@property (nonatomic, retain) NSString *interactionId;
@property (nonatomic) bool isLabelMode;
@property (nonatomic) bool isSpotlight;
@property (nonatomic, retain) NSString *locale;
@property (nonatomic) bool multiuser;
@property (nonatomic, retain) NSDictionary *parameters;
@property (nonatomic, retain) DEPatternContext *patternContext;
@property (nonatomic, retain) NSString *patternId;
@property (nonatomic, retain) NSString *pluginName;
@property (nonatomic) unsigned int randomSeed;
@property (nonatomic) bool resetState;
@property (nonatomic, retain) NSString *responseMode;
@property (nonatomic) bool switchFallthrough;
@property (nonatomic, retain) NSString *templateDir;
@property (nonatomic) bool test;
@property (nonatomic, retain) NSDictionary *userSettings;
@property (nonatomic) bool visual;
@property (nonatomic, retain) NSString *voiceGender;

+ (id)bundleTemplateDir:(id)arg1;
+ (void)executeWithJson:(id)arg1 callback:(id /* block */)arg2 completionBlock:(id /* block */)arg3;
+ (void)executeWithJson:(id)arg1 completionBlock:(id /* block */)arg2;
+ (void)executeWithJson:(id)arg1 paramsString:(id)arg2 localeString:(id)arg3 callback:(id /* block */)arg4 completionBlock:(id /* block */)arg5;
+ (void)initialize;
+ (void)preload;
+ (id /* block */)prepareCallback:(id /* block */)arg1 forContext:(void*)arg2;

- (void).cxx_destruct;
- (void)LogCurareCATExecution:(const void*)arg1;
- (id /* block */)callback;
- (id)catId;
- (id)consumeContext:(struct shared_ptr<siri::dialogengine::Context> { struct Context {} *x1; struct __shared_weak_count {} *x2; })arg1 paramsPath:(struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x_1_4_1; unsigned long long x_1_4_2; unsigned int x_1_4_3 : 63; unsigned int x_1_4_4 : 1; } x_1_3_1; struct __short { BOOL x_2_4_1[23]; unsigned char x_2_4_2[0]; unsigned int x_2_4_3 : 7; unsigned int x_2_4_4 : 1; } x_1_3_2; struct __raw { unsigned long long x_3_4_1[3]; } x_1_3_3; } x_1_2_1; } x_1_1_1; } x1; })arg2 localePath:(struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x_1_4_1; unsigned long long x_1_4_2; unsigned int x_1_4_3 : 63; unsigned int x_1_4_4 : 1; } x_1_3_1; struct __short { BOOL x_2_4_1[23]; unsigned char x_2_4_2[0]; unsigned int x_2_4_3 : 7; unsigned int x_2_4_4 : 1; } x_1_3_2; struct __raw { unsigned long long x_3_4_1[3]; } x_1_3_3; } x_1_2_1; } x_1_1_1; } x1; })arg3 visualPath:(struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x_1_4_1; unsigned long long x_1_4_2; unsigned int x_1_4_3 : 63; unsigned int x_1_4_4 : 1; } x_1_3_1; struct __short { BOOL x_2_4_1[23]; unsigned char x_2_4_2[0]; unsigned int x_2_4_3 : 7; unsigned int x_2_4_4 : 1; } x_1_3_2; struct __raw { unsigned long long x_3_4_1[3]; } x_1_3_3; } x_1_2_1; } x_1_1_1; } x1; })arg4;
- (struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x_1_4_1; unsigned long long x_1_4_2; unsigned int x_1_4_3 : 63; unsigned int x_1_4_4 : 1; } x_1_3_1; struct __short { BOOL x_2_4_1[23]; unsigned char x_2_4_2[0]; unsigned int x_2_4_3 : 7; unsigned int x_2_4_4 : 1; } x_1_3_2; struct __raw { unsigned long long x_3_4_1[3]; } x_1_3_3; } x_1_2_1; } x_1_1_1; } x1; })consumeContextForJson:(struct shared_ptr<siri::dialogengine::Context> { struct Context {} *x1; struct __shared_weak_count {} *x2; })arg1;
- (id)context;
- (bool)createTrace;
- (long long)currentTime;
- (id)customPronunciations;
- (bool)debug;
- (bool)deterministic;
- (id)dialogMetadata;
- (id)distribution;
- (bool)enableUpdates;
- (id)execute;
- (id)executeVisual:(id)arg1;
- (void)executeVisual:(id)arg1 completionBlock:(id /* block */)arg2;
- (void)executeWithCompletionBlock:(id /* block */)arg1;
- (id)executeWithParams:(id)arg1 locale:(id)arg2;
- (void)executeWithParams:(id)arg1 locale:(id)arg2 completionBlock:(id /* block */)arg3;
- (id)executeWithParams:(id)arg1 locale:(id)arg2 visual:(id)arg3;
- (struct shared_ptr<siri::dialogengine::Context> { struct Context {} *x1; struct __shared_weak_count {} *x2; })getContext:(struct ElapsedTimer { unsigned long long x1; struct TimeStamp { double x_2_1_1; double x_2_1_2; } x2; struct optional<siri::dialogengine::ElapsedTimer::TimeStamp> { union { BOOL x_1_2_1; struct TimeStamp { double x_2_3_1; double x_2_3_2; } x_1_2_2; } x_3_1_1; bool x_3_1_2; } x3; })arg1;
- (id)getRequestJSON;
- (id)globalParameters;
- (bool)grounding;
- (id)init;
- (id)interactionId;
- (bool)isLabelMode;
- (bool)isSpotlight;
- (id)locale;
- (bool)multiuser;
- (id)parameters;
- (id)patternContext;
- (id)patternId;
- (id)pluginName;
- (unsigned int)randomSeed;
- (bool)resetState;
- (id)responseMode;
- (void)setCallback:(id /* block */)arg1;
- (void)setCatId:(id)arg1;
- (void)setContext:(id)arg1;
- (void)setCreateTrace:(bool)arg1;
- (void)setCurrentTime:(long long)arg1;
- (void)setCustomPronunciations:(id)arg1;
- (void)setDebug:(bool)arg1;
- (void)setDeterministic:(bool)arg1;
- (void)setDialogMetadata:(id)arg1;
- (void)setDistribution:(id)arg1;
- (void)setEnableUpdates:(bool)arg1;
- (void)setGlobalParameters:(id)arg1;
- (void)setGrounding:(bool)arg1;
- (void)setInteractionId:(id)arg1;
- (void)setIsLabelMode:(bool)arg1;
- (void)setIsSpotlight:(bool)arg1;
- (void)setLocale:(id)arg1;
- (void)setMultiuser:(bool)arg1;
- (void)setParameters:(id)arg1;
- (void)setPatternContext:(id)arg1;
- (void)setPatternId:(id)arg1;
- (void)setPluginName:(id)arg1;
- (void)setRandomSeed:(unsigned int)arg1;
- (void)setResetState:(bool)arg1;
- (void)setResponseMode:(id)arg1;
- (void)setSwitchFallthrough:(bool)arg1;
- (void)setTemplateDir:(id)arg1;
- (void)setTest:(bool)arg1;
- (void)setUserSettings:(id)arg1;
- (void)setVisual:(bool)arg1;
- (void)setVoiceGender:(id)arg1;
- (bool)switchFallthrough;
- (id)templateDir;
- (bool)test;
- (void)updateContext:(void*)arg1 paramsPath:(struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x_1_4_1; unsigned long long x_1_4_2; unsigned int x_1_4_3 : 63; unsigned int x_1_4_4 : 1; } x_1_3_1; struct __short { BOOL x_2_4_1[23]; unsigned char x_2_4_2[0]; unsigned int x_2_4_3 : 7; unsigned int x_2_4_4 : 1; } x_1_3_2; struct __raw { unsigned long long x_3_4_1[3]; } x_1_3_3; } x_1_2_1; } x_1_1_1; } x1; })arg2 localePath:(struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x_1_4_1; unsigned long long x_1_4_2; unsigned int x_1_4_3 : 63; unsigned int x_1_4_4 : 1; } x_1_3_1; struct __short { BOOL x_2_4_1[23]; unsigned char x_2_4_2[0]; unsigned int x_2_4_3 : 7; unsigned int x_2_4_4 : 1; } x_1_3_2; struct __raw { unsigned long long x_3_4_1[3]; } x_1_3_3; } x_1_2_1; } x_1_1_1; } x1; })arg3 visualPath:(struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *x_1_4_1; unsigned long long x_1_4_2; unsigned int x_1_4_3 : 63; unsigned int x_1_4_4 : 1; } x_1_3_1; struct __short { BOOL x_2_4_1[23]; unsigned char x_2_4_2[0]; unsigned int x_2_4_3 : 7; unsigned int x_2_4_4 : 1; } x_1_3_2; struct __raw { unsigned long long x_3_4_1[3]; } x_1_3_3; } x_1_2_1; } x_1_1_1; } x1; })arg4;
- (id)userSettings;
- (bool)visual;
- (id)voiceGender;

@end
