
@interface UMLUser : NSObject {
    NSString * _alternateDSID;
    long long  _apnsID;
    NSDate * _cachedLoginEnd;
    NSDate * _cachedLoginStart;
    NSDate * _creationDate;
    NSData * _dataValue;
    NSString * _diskNode;
    NSString * _displayName;
    NSString * _fileInfoPath;
    NSDate * _firstLoginEnd;
    NSDate * _firstLoginStart;
    NSString * _firstName;
    int  _gid;
    int  _gracePeriod;
    bool  _hasSyncBag;
    NSString * _homeDirPath;
    bool  _isAdminUser;
    bool  _isAuditor;
    bool  _isDirty;
    bool  _isDisabledUser;
    bool  _isForeground;
    bool  _isLoginUser;
    bool  _isPrimaryUser;
    NSData * _keybagOpaqueData;
    NSDate * _lastLoginEnd;
    NSDate * _lastLoginStart;
    NSString * _lastName;
    NSString * _libInfoPath;
    bool  _needsMount;
    NSData * _opaqueData;
    int  _uid;
    NSString * _userLanguauge;
    NSString * _userType;
    NSString * _userUUID;
    NSString * _username;
    unsigned int  _version;
    NSString * _volumeUUID;
}

@property (nonatomic, copy) NSString *alternateDSID;
@property (nonatomic) long long apnsID;
@property (nonatomic, copy) NSDate *cachedLoginEnd;
@property (nonatomic, copy) NSDate *cachedLoginStart;
@property (nonatomic, copy) NSDate *creationDate;
@property (nonatomic, retain) NSData *dataValue;
@property (nonatomic, copy) NSString *diskNode;
@property (nonatomic, copy) NSString *displayName;
@property (nonatomic, copy) NSString *fileInfoPath;
@property (nonatomic, copy) NSDate *firstLoginEnd;
@property (nonatomic, copy) NSDate *firstLoginStart;
@property (nonatomic, copy) NSString *firstName;
@property (nonatomic) int gid;
@property (nonatomic) int gracePeriod;
@property (nonatomic) bool hasSyncBag;
@property (nonatomic, copy) NSString *homeDirPath;
@property (nonatomic) bool isAdminUser;
@property (nonatomic) bool isAuditor;
@property (nonatomic) bool isDirty;
@property (nonatomic) bool isDisabledUser;
@property (nonatomic) bool isForeground;
@property (nonatomic) bool isLoginUser;
@property (nonatomic) bool isPrimaryUser;
@property (nonatomic, copy) NSData *keybagOpaqueData;
@property (nonatomic, copy) NSDate *lastLoginEnd;
@property (nonatomic, copy) NSDate *lastLoginStart;
@property (nonatomic, copy) NSString *lastName;
@property (nonatomic, copy) NSString *libInfoPath;
@property (nonatomic) bool needsMount;
@property (nonatomic, copy) NSData *opaqueData;
@property (nonatomic) int uid;
@property (nonatomic, copy) NSString *userLanguauge;
@property (nonatomic, copy) NSString *userType;
@property (nonatomic, copy) NSString *userUUID;
@property (nonatomic, copy) NSString *username;
@property (nonatomic) unsigned int version;
@property (nonatomic, copy) NSString *volumeUUID;

+ (id)userFromManifestDictionary:(id)arg1;

- (void).cxx_destruct;
- (id)alternateDSID;
- (long long)apnsID;
- (id)cachedLoginEnd;
- (id)cachedLoginStart;
- (id)creationDate;
- (id)dataValue;
- (id)diskNode;
- (id)displayName;
- (id)fileInfoPath;
- (id)firstLoginEnd;
- (id)firstLoginStart;
- (id)firstName;
- (int)gid;
- (int)gracePeriod;
- (bool)hasSyncBag;
- (unsigned long long)hash;
- (id)homeDirPath;
- (id)init;
- (bool)isAdminUser;
- (bool)isAuditor;
- (bool)isDirty;
- (bool)isDisabledUser;
- (bool)isEqual:(id)arg1;
- (bool)isForeground;
- (bool)isLoginUser;
- (bool)isPrimaryUser;
- (bool)isValidClassTypeinDictionary:(id)arg1 withKey:(id)arg2 withType:(Class)arg3;
- (id)keybagOpaqueData;
- (id)lastLoginEnd;
- (id)lastLoginStart;
- (id)lastName;
- (id)libInfoPath;
- (bool)needsMount;
- (id)opaqueData;
- (void)setAlternateDSID:(id)arg1;
- (void)setApnsID:(long long)arg1;
- (void)setCachedLoginEnd:(id)arg1;
- (void)setCachedLoginStart:(id)arg1;
- (void)setCreationDate:(id)arg1;
- (void)setDataValue:(id)arg1;
- (void)setDiskNode:(id)arg1;
- (void)setDisplayName:(id)arg1;
- (void)setFileInfoPath:(id)arg1;
- (void)setFirstLoginEnd:(id)arg1;
- (void)setFirstLoginStart:(id)arg1;
- (void)setFirstName:(id)arg1;
- (void)setGid:(int)arg1;
- (void)setGracePeriod:(int)arg1;
- (void)setHasSyncBag:(bool)arg1;
- (void)setHomeDirPath:(id)arg1;
- (void)setIsAdminUser:(bool)arg1;
- (void)setIsAuditor:(bool)arg1;
- (void)setIsDirty:(bool)arg1;
- (void)setIsDisabledUser:(bool)arg1;
- (void)setIsForeground:(bool)arg1;
- (void)setIsLoginUser:(bool)arg1;
- (void)setIsPrimaryUser:(bool)arg1;
- (void)setKeybagOpaqueData:(id)arg1;
- (void)setLastLoginEnd:(id)arg1;
- (void)setLastLoginStart:(id)arg1;
- (void)setLastName:(id)arg1;
- (void)setLibInfoPath:(id)arg1;
- (void)setNeedsMount:(bool)arg1;
- (void)setOpaqueData:(id)arg1;
- (void)setUid:(int)arg1;
- (void)setUserLanguauge:(id)arg1;
- (void)setUserType:(id)arg1;
- (void)setUserUUID:(id)arg1;
- (void)setUsername:(id)arg1;
- (void)setVersion:(unsigned int)arg1;
- (void)setVolumeUUID:(id)arg1;
- (int)uid;
- (id)userLanguauge;
- (id)userManifestDictionary;
- (id)userType;
- (id)userUUID;
- (id)username;
- (unsigned int)version;
- (id)volumeUUID;

@end
