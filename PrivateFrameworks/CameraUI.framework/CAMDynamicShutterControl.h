
@interface CAMDynamicShutterControl : UIControl <CAMMetalViewDelegate, UIGestureRecognizerDelegate> {
    bool  __canZoom;
    UIImageView * __centerOuterImageView;
    UIView * __centerOuterLegibilityView;
    CAMShutterButtonRingView * __centerOuterView;
    CAMTimelapseShutterRingView * __centerTimelapseOuterView;
    UILabel * __counterLabel;
    long long  __counterValue;
    CADisplayLink * __displayLink;
    CEKDisplayLinkTarget * __displayLinkTarget;
    CAMSpring * __dragHandleAlphaSpring;
    CAMSpring * __dragHandleColorIsWhiteSpring;
    CAMTrackingSpring * __dragHandleOffsetSpring;
    long long  __dragHandleState;
    CAMSpring * __dragHandleWidthSpring;
    CAMSpring * __drawLockUISpring;
    CAMSpring * __expandLockRingSpring;
    bool  __externalLockButtonPressed;
    long long  __externalShutterLongPressBehavior;
    bool  __externalShutterPressed;
    CAMFeedbackController * __feedbackController;
    struct { 
        struct CGPoint { 
            double x; 
            double y; 
        } point; 
        double time; 
        bool isWithinShutterButton; 
        bool isWithinLockButton; 
    }  __firstTouch;
    CAMDynamicShutterGestureRecognizer * __gestureRecognizer;
    bool  __ignoreNextCancelledGesture;
    double  __initalZoomGestureOffsetY;
    CAMSpring * __innerShapeAlphaSpring;
    CAMSpring * __innerShapeColorIsRedSpring;
    CAMSpring * __innerShapePowerSpring;
    long long  __innerShapeState;
    CAMSpring * __innerShapeWidthSpring;
    UIView * __leftLineLegibilityView;
    UIView * __leftLineView;
    CAMLiquidShutterRenderer * __liquidShutterRenderer;
    struct CAMShutterButtonSpec { 
        double outerRingDiameter; 
        double outerRingStrokeWidth; 
        double stopSquareSideLength; 
        double stopSquareCornerRadius; 
        double interRingSpacing; 
    }  __lockButtonActiveSpec;
    struct CAMShutterButtonSpec { 
        double outerRingDiameter; 
        double outerRingStrokeWidth; 
        double stopSquareSideLength; 
        double stopSquareCornerRadius; 
        double interRingSpacing; 
    }  __lockButtonInactiveSpec;
    UIView * __lockButtonOuterLegibilityView;
    UIView * __lockButtonOuterView;
    CAMMetalView * __metalView;
    struct { 
        struct CGPoint { 
            double x; 
            double y; 
        } point; 
        double time; 
        bool isWithinShutterButton; 
        bool isWithinLockButton; 
    }  __mostRecentTouch;
    UIView * __rightLineLegibilityView;
    UIView * __rightLineView;
    bool  __shouldCheckTouchUpEvents;
    struct CAMShutterButtonSpec { 
        double outerRingDiameter; 
        double outerRingStrokeWidth; 
        double stopSquareSideLength; 
        double stopSquareCornerRadius; 
        double interRingSpacing; 
    }  __shutterButtonSpec;
    long long  __shutterState;
    UIView * __spinnerView;
    NSArray * __springs;
    double  __touchBeganTime;
    long long  __touchSequencePhase;
    UIImageView * __videoLockImageView;
    <CAMDynamicShutterControlDelegate> * _delegate;
    struct { 
        bool respondsToTopLevelSuperview; 
        bool respondsToDidShortPress; 
        bool respondsToCanStartOnTouchDown; 
        bool respondsToShouldBeginGesture; 
        bool respondsToGesturesDidBegin; 
        bool respondsToGesturesDidEnd; 
        bool respondsToGesturesDidCancel; 
        bool respondsToDidStart; 
        bool respondsToDidStartWithGesture; 
        bool respondsToDidStartZoomGesture; 
        bool respondsToDidChangeRelativeZoomProgress; 
        bool respondsToDidStop; 
        bool respondsToDidPressLockButton; 
        bool respondsToDidPresentCounter; 
        bool respondsToDidDismissCounter; 
        bool respondsToTouchAttemptedWhileDisabled; 
    }  _delegateFlags;
    double  _lockButtonCenterRightInset;
    long long  _orientation;
    struct { 
        long long tapBehavior; 
        long long longPressBehavior; 
        long long dragRightBehavior; 
        long long dragLeftBehavior; 
        bool allowsZoom; 
        long long lockBehavior; 
        long long ringStyle; 
        long long stopColor; 
        long long idleColor; 
    }  _settings;
    bool  _showContrastBorder;
    bool  _showDisabled;
    bool  _spinning;
    bool  _zooming;
}

@property (nonatomic) bool _canZoom;
@property (nonatomic, retain) UIImageView *_centerOuterImageView;
@property (nonatomic, readonly) UIView *_centerOuterLegibilityView;
@property (nonatomic, readonly) CAMShutterButtonRingView *_centerOuterView;
@property (nonatomic, retain) CAMTimelapseShutterRingView *_centerTimelapseOuterView;
@property (nonatomic, readonly) UILabel *_counterLabel;
@property (setter=_setCounterValue:, nonatomic) long long _counterValue;
@property (nonatomic, readonly) CADisplayLink *_displayLink;
@property (nonatomic, readonly) CEKDisplayLinkTarget *_displayLinkTarget;
@property (nonatomic, readonly) CAMSpring *_dragHandleAlphaSpring;
@property (nonatomic, readonly) CAMSpring *_dragHandleColorIsWhiteSpring;
@property (nonatomic, readonly) CAMTrackingSpring *_dragHandleOffsetSpring;
@property (setter=_setDragHandleState:, nonatomic) long long _dragHandleState;
@property (nonatomic, readonly) CAMSpring *_dragHandleWidthSpring;
@property (nonatomic, readonly) double _dragHandleXPosition;
@property (getter=_isDraggingEnabled, nonatomic, readonly) bool _draggingEnabled;
@property (nonatomic, readonly) CAMSpring *_drawLockUISpring;
@property (nonatomic, readonly) CAMSpring *_expandLockRingSpring;
@property (getter=_isExternalLockButtonPressed, setter=_setExternalLockButtonPressed:, nonatomic) bool _externalLockButtonPressed;
@property (nonatomic) long long _externalShutterLongPressBehavior;
@property (getter=_isExternalShutterPressed, setter=_setExternalShutterPressed:, nonatomic) bool _externalShutterPressed;
@property (nonatomic, readonly) CAMFeedbackController *_feedbackController;
@property (setter=_setFirstTouch:, nonatomic) struct { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; double x2; bool x3; bool x4; } _firstTouch;
@property (nonatomic, readonly) CAMDynamicShutterGestureRecognizer *_gestureRecognizer;
@property (setter=_setIgnoreNextCancelledGesture:, nonatomic) bool _ignoreNextCancelledGesture;
@property (nonatomic) double _initalZoomGestureOffsetY;
@property (nonatomic, readonly) CAMSpring *_innerShapeAlphaSpring;
@property (nonatomic, readonly) CAMSpring *_innerShapeColorIsRedSpring;
@property (nonatomic, readonly) CAMSpring *_innerShapePowerSpring;
@property (setter=_setInnerShapeState:, nonatomic) long long _innerShapeState;
@property (nonatomic, readonly) CAMSpring *_innerShapeWidthSpring;
@property (nonatomic, readonly) UIView *_leftLineLegibilityView;
@property (nonatomic, readonly) UIView *_leftLineView;
@property (nonatomic, readonly) CAMLiquidShutterRenderer *_liquidShutterRenderer;
@property (nonatomic, readonly) struct CAMShutterButtonSpec { double x1; double x2; double x3; double x4; double x5; } _lockButtonActiveSpec;
@property (nonatomic, readonly) struct CGPoint { double x1; double x2; } _lockButtonCenter;
@property (nonatomic, readonly) struct CAMShutterButtonSpec { double x1; double x2; double x3; double x4; double x5; } _lockButtonInactiveSpec;
@property (nonatomic, readonly) UIView *_lockButtonOuterLegibilityView;
@property (nonatomic, readonly) UIView *_lockButtonOuterView;
@property (nonatomic, readonly) CAMMetalView *_metalView;
@property (setter=_setMostRecentTouch:, nonatomic) struct { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; double x2; bool x3; bool x4; } _mostRecentTouch;
@property (getter=_isPastCounterDragThreshold, nonatomic, readonly) bool _pastCounterDragThreshold;
@property (getter=_isPastStartStopDragThreshold, nonatomic, readonly) bool _pastStartStopDragThreshold;
@property (nonatomic, readonly) UIView *_rightLineLegibilityView;
@property (nonatomic, readonly) UIView *_rightLineView;
@property (nonatomic) bool _shouldCheckTouchUpEvents;
@property (nonatomic, readonly) struct CGPoint { double x1; double x2; } _shutterButtonCenter;
@property (nonatomic, readonly) struct CAMShutterButtonSpec { double x1; double x2; double x3; double x4; double x5; } _shutterButtonSpec;
@property (setter=_setShutterState:, nonatomic) long long _shutterState;
@property (nonatomic, retain) UIView *_spinnerView;
@property (nonatomic, readonly) NSArray *_springs;
@property (setter=_setTouchBeganTime:, nonatomic) double _touchBeganTime;
@property (setter=_setTouchSequencePhase:, nonatomic) long long _touchSequencePhase;
@property (nonatomic, readonly) UIImageView *_videoLockImageView;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CAMDynamicShutterControlDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) double lockButtonCenterRightInset;
@property (nonatomic) long long orientation;
@property (nonatomic) struct { long long x1; long long x2; long long x3; long long x4; bool x5; long long x6; long long x7; long long x8; long long x9; } settings;
@property (nonatomic) bool showContrastBorder;
@property (nonatomic) bool showDisabled;
@property (getter=isSpinning, nonatomic) bool spinning;
@property (readonly) Class superclass;
@property (getter=isZooming, setter=setZooming:, nonatomic) bool zooming;

+ (struct CAMShutterButtonSpec { double x1; double x2; double x3; double x4; double x5; })shutterButtonSpecForLayoutStyle:(long long)arg1;

- (void).cxx_destruct;
- (double)_absoluteShutterToBottomDistance;
- (bool)_canDragCounter;
- (bool)_canDragStartStop;
- (bool)_canZoom;
- (void)_cancelTouchSequenceForReset:(bool)arg1;
- (id)_centerOuterImageView;
- (id)_centerOuterLegibilityView;
- (id)_centerOuterView;
- (id)_centerTimelapseOuterView;
- (long long)_consumeAndUpdateTouchSequencePhase;
- (id)_counterLabel;
- (long long)_counterValue;
- (id)_displayLink;
- (id)_displayLinkTarget;
- (id)_dragHandleAlphaSpring;
- (struct { double x1; double x2; double x3; double x4; })_dragHandleColor;
- (id)_dragHandleColorIsWhiteSpring;
- (id)_dragHandleOffsetSpring;
- (long long)_dragHandleState;
- (id)_dragHandleWidthSpring;
- (double)_dragHandleXPosition;
- (id)_drawLockUISpring;
- (id)_expandLockRingSpring;
- (long long)_externalShutterLongPressBehavior;
- (id)_feedbackController;
- (struct { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; double x2; bool x3; bool x4; })_firstTouch;
- (id)_gestureRecognizer;
- (void)_handlePress:(id)arg1;
- (void)_handleTapToStartStop;
- (bool)_ignoreNextCancelledGesture;
- (double)_initalZoomGestureOffsetY;
- (id)_innerShapeAlphaSpring;
- (struct { double x1; double x2; double x3; double x4; })_innerShapeColor;
- (id)_innerShapeColorIsRedSpring;
- (id)_innerShapePowerSpring;
- (long long)_innerShapeState;
- (id)_innerShapeWidthSpring;
- (bool)_isActiveTouchSequencePhase:(long long)arg1;
- (bool)_isDraggingEnabled;
- (bool)_isExternalLockButtonPressed;
- (bool)_isExternalShutterPressed;
- (bool)_isHandleWithinLockRing;
- (bool)_isPastCounterDragThreshold;
- (bool)_isPastStartStopDragThreshold;
- (bool)_isPointWithinLockRingTouchArea:(struct CGPoint { double x1; double x2; })arg1;
- (bool)_isPointWithinShutterButtonTouchArea:(struct CGPoint { double x1; double x2; })arg1;
- (bool)_isStartStopShutterState:(long long)arg1;
- (bool)_isTrackingHandleState:(long long)arg1;
- (bool)_isValidChangeFromState:(long long)arg1 toState:(long long)arg2;
- (id)_leftLineLegibilityView;
- (id)_leftLineView;
- (id)_liquidShutterRenderer;
- (struct CAMShutterButtonSpec { double x1; double x2; double x3; double x4; double x5; })_lockButtonActiveSpec;
- (struct CGPoint { double x1; double x2; })_lockButtonCenter;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_lockButtonFrame;
- (struct CAMShutterButtonSpec { double x1; double x2; double x3; double x4; double x5; })_lockButtonInactiveSpec;
- (id)_lockButtonOuterLegibilityView;
- (id)_lockButtonOuterView;
- (id)_metalView;
- (struct { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; double x2; bool x3; bool x4; })_mostRecentTouch;
- (id)_outerImage;
- (void)_resetShutterState;
- (id)_rightLineLegibilityView;
- (id)_rightLineView;
- (void)_setCounterValue:(long long)arg1;
- (void)_setDragHandleState:(long long)arg1;
- (void)_setDragHandleState:(long long)arg1 animated:(bool)arg2;
- (void)_setExternalLockButtonPressed:(bool)arg1;
- (void)_setExternalShutterPressed:(bool)arg1;
- (void)_setFirstTouch:(struct { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; double x2; bool x3; bool x4; })arg1;
- (void)_setIgnoreNextCancelledGesture:(bool)arg1;
- (void)_setInnerShapeState:(long long)arg1;
- (void)_setInnerShapeState:(long long)arg1 animated:(bool)arg2;
- (void)_setMostRecentTouch:(struct { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; double x2; bool x3; bool x4; })arg1;
- (void)_setShutterState:(long long)arg1;
- (void)_setTouchBeganTime:(double)arg1;
- (void)_setTouchSequencePhase:(long long)arg1;
- (bool)_shouldCheckTouchUpEvents;
- (bool)_shouldReceiveTouch:(struct { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; double x2; bool x3; bool x4; })arg1;
- (bool)_shouldShortPressOnTouchDown;
- (bool)_shouldShortPressOnTouchUp;
- (bool)_shouldStartStopOnTouchDown;
- (bool)_shouldStartTrackingHandle;
- (struct CGPoint { double x1; double x2; })_shutterButtonCenter;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_shutterButtonFrame;
- (struct CAMShutterButtonSpec { double x1; double x2; double x3; double x4; double x5; })_shutterButtonSpec;
- (long long)_shutterState;
- (id)_spinnerView;
- (id)_springs;
- (long long)_startGestureForShutterState:(long long)arg1;
- (double)_touchBeganTime;
- (struct { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; double x2; bool x3; bool x4; })_touchForPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)_touchSequenceBegan:(struct { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; double x2; bool x3; bool x4; })arg1;
- (void)_touchSequenceCancelledForReset:(bool)arg1;
- (void)_touchSequenceChanged:(struct { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; double x2; bool x3; bool x4; })arg1;
- (void)_touchSequenceEnded:(struct { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; double x2; bool x3; bool x4; })arg1 forReset:(bool)arg2;
- (long long)_touchSequencePhase;
- (void)_updateCenterLegibilityView;
- (void)_updateCounterAlpha;
- (void)_updateCounterLabelText;
- (void)_updateDragHandleAlphaTarget;
- (void)_updateDragHandleColorIsWhiteTarget;
- (void)_updateDragHandleWidthTarget;
- (void)_updateDrawLockUITarget;
- (void)_updateExpandLockRingTarget;
- (void)_updateForTargetTimestamp:(double)arg1;
- (void)_updateInnerShapeAlphaTarget;
- (void)_updateInnerShapeColorIsRedTarget;
- (void)_updateInnerShapePowerTarget;
- (void)_updateInnerShapeWidthTarget;
- (void)_updateLeftLine;
- (void)_updateLockGlyphTransformAndAlpha;
- (void)_updateLockUI;
- (void)_updateMetalViewAlpha;
- (void)_updateOuterAndInnerLayersAnimated:(bool)arg1;
- (void)_updateRendererShapes;
- (void)_updateRightLine;
- (void)_updateSpinningAnimations;
- (void)_updateSpringTargetsAnimated:(bool)arg1;
- (void)_updateStateForTouchPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)_updateStateToLongPressIfNeededWithPhase:(long long)arg1;
- (void)_updateStaticDragHandleOffsetTargetAnimated:(bool)arg1;
- (void)_updateTrackingDragHandleOffsetTargetWithPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)_updateTrackingSpringTargets;
- (void)_updateViewsFromCurrentState;
- (id)_videoLockImageView;
- (void)cancelZoom;
- (void)dealloc;
- (id)delegate;
- (void)externalButtonCancelled;
- (bool)externalButtonPressedWithBehavior:(long long)arg1;
- (bool)externalButtonReleased;
- (bool)externalLockButtonPressed;
- (void)externalLockButtonReleased;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameForAlignmentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 availableWidth:(double)arg2;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (long long)incrementCounter;
- (id)initWithMetalDevice:(id)arg1 commandQueue:(id)arg2;
- (id)initWithMetalDevice:(id)arg1 commandQueue:(id)arg2 layoutStyle:(long long)arg3;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (bool)isSpinning;
- (bool)isZooming;
- (void)layoutSubviews;
- (double)lockButtonCenterRightInset;
- (void)metalViewDidChangeDrawableSize:(id)arg1;
- (long long)orientation;
- (void)resetAnimated:(bool)arg1;
- (void)resetCounter;
- (void)setDelegate:(id)arg1;
- (void)setLockButtonCenterRightInset:(double)arg1;
- (void)setOrientation:(long long)arg1;
- (void)setOrientation:(long long)arg1 animated:(bool)arg2;
- (void)setSettings:(struct { long long x1; long long x2; long long x3; long long x4; bool x5; long long x6; long long x7; long long x8; long long x9; })arg1;
- (void)setSettings:(struct { long long x1; long long x2; long long x3; long long x4; bool x5; long long x6; long long x7; long long x8; long long x9; })arg1 animated:(bool)arg2;
- (void)setShowContrastBorder:(bool)arg1;
- (void)setShowDisabled:(bool)arg1;
- (void)setShowDisabled:(bool)arg1 animated:(bool)arg2;
- (void)setSpinning:(bool)arg1;
- (void)setZooming:(bool)arg1;
- (void)set_canZoom:(bool)arg1;
- (void)set_centerOuterImageView:(id)arg1;
- (void)set_centerTimelapseOuterView:(id)arg1;
- (void)set_externalShutterLongPressBehavior:(long long)arg1;
- (void)set_initalZoomGestureOffsetY:(double)arg1;
- (void)set_shouldCheckTouchUpEvents:(bool)arg1;
- (void)set_spinnerView:(id)arg1;
- (struct { long long x1; long long x2; long long x3; long long x4; bool x5; long long x6; long long x7; long long x8; long long x9; })settings;
- (bool)showContrastBorder;
- (bool)showDisabled;

@end
