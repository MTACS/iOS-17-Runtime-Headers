
@interface CAMFullscreenViewfinder : UIView <CAMAccessibilityHUDItemProvider, CAMBarsAccessibilityHUDManagerGestureProvider, CAMControlDrawerPresentationDelegate, CAMInstructionLabelDelegate, CAMMachineReadableCodeButtonDelegate, CAMSemanticStylePickerDelegate, CAMViewfinderTransitionable, CEKAdditiveAnimatorDelegate, CEKBadgeViewDelegate> {
    UIView * __bottomLegibilityBackground;
    UIView * __contentClippingContainer;
    CAMInterfaceModulationView * __contentView;
    bool  __controlDrawerPresentedModally;
    NSMutableArray * __createdPrimaryInstructionLabels;
    NSMutableArray * __createdSecondaryInstructionLabels;
    NSMutableDictionary * __descriptionOverlayViewByKey;
    NSMutableDictionary * __instructionLabelByValue;
    CAMFullscreenViewfinderLayout * __layout;
    CAMLowLightInstructionLabel * __lowLightInstructionLabel;
    UIView * __modeClippingView;
    AVSpatialOverCaptureVideoPreviewLayer * __overCapturePreviewLayer;
    UIView * __previewContainerView;
    CAMViewfinderReticleView * __reticleView;
    NSMutableArray * __semanticStyleBadges;
    UIView * __textInteractionBackground;
    bool  __usingCreativeCameraControls;
    CEKAdditiveAnimator * __viewportAnimator;
    CAMAutoMacroButton * _autoMacroButton;
    CAMBadgeTray * _badgeTray;
    CAMControlDrawer * _controlDrawer;
    bool  _controlDrawerAllowed;
    bool  _controlDrawerExpanded;
    CAMControlStatusBar * _controlStatusBar;
    CAMCreativeCameraButton * _creativeCameraButton;
    <CAMFullscreenViewfinderDelegate> * _delegate;
    CAMDepthEffectSuggestionButton * _depthEffectSuggestionButton;
    CAMDeviceTooHotInstructionLabel * _deviceTooHotInstructionLabel;
    CAMDisabledModeOverlayView * _disabledModeOverlayView;
    CAMElapsedTimeView * _elapsedTimeView;
    bool  _elapsedTimeViewVisible;
    CAMExternalStorageButton * _externalStorageButton;
    bool  _externalStorageButtonVisible;
    CAMFilterNameBadge * _filterNameBadge;
    CAMFlashCompromisedInstructionLabel * _flashCompromisedInstructionLabel;
    CAMFlipButton * _flipButton;
    bool  _flipButtonVisible;
    CAMFreeResourcesInstructionLabel * _freeResourcesInstructionLabel;
    CAMImageAnalysisButton * _imageAnalysisButton;
    bool  _imageAnalysisButtonVisible;
    CAMImageAnalysisInstructionLabel * _imageAnalysisInstructionLabel;
    CAMImageWell * _imageWell;
    bool  _legibilityBackgroundsVisible;
    CEKLightingControl * _lightingControl;
    CEKLightingNameBadge * _lightingNameBadge;
    CAMMachineReadableCodeButton * _machineReadableCodeButton;
    long long  _material;
    CAMMaxRecordingTimeInstructionLabel * _maxRecordingTimeInstructionLabel;
    CAMModeDial * _modeDial;
    CAMModeIndicatorView * _modeIndicator;
    CAMFullscreenModeSelector * _modeSelector;
    UILongPressGestureRecognizer * _modeSelectorGestureRecognizer;
    bool  _modeUIAllowed;
    long long  _orientation;
    CAMPanoramaView * _panoramaView;
    bool  _portraitControlsAllowed;
    CAMPortraitModeInstructionLabel * _portraitInstructionLabel;
    CAMPreviewAlignmentGuide * _previewAlignmentGuide;
    bool  _previewAlignmentGuideVisible;
    CAMPreviewView * _previewView;
    long long  _previewViewOrientation;
    CAMQRCodeInstructionLabel * _qrCodeInstructionLabel;
    CAMSemanticStylePicker * _semanticStylePicker;
    long long  _shallowDepthOfFieldStatus;
    CAMSharedLibraryImageWellIndicatorView * _sharedLibraryImageWellIndicatorView;
    bool  _sharedLibraryImageWellIndicatorVisible;
    CAMSharedLibraryBadge * _sharedLibraryInstructionLabel;
    CAMDynamicShutterControl * _shutterControl;
    bool  _shutterControlVisible;
    VKTextLiftingView * _textInteractionInsert;
    CAMTimerIndicatorView * _timerIndicator;
    bool  _timerIndicatorVisible;
    long long  _viewportAspectRatio;
    long long  _visibleInstructionLabel;
    long long  _visibleSecondaryInstructionLabel;
    long long  _visibleSuggestionButtonType;
    CAMZoomControl * _zoomControl;
    bool  _zoomControlVisible;
    CAMZoomSlider * _zoomSlider;
    unsigned long long  _zoomStyle;
}

@property (setter=_setBottomLegibilityBackground:, nonatomic, retain) UIView *_bottomLegibilityBackground;
@property (nonatomic, readonly) UIView *_contentClippingContainer;
@property (nonatomic, readonly) CAMInterfaceModulationView *_contentView;
@property (getter=_isControlDrawerPresentedModally, setter=_setControlDrawerPresentedModally:, nonatomic) bool _controlDrawerPresentedModally;
@property (nonatomic, readonly) NSMutableArray *_createdPrimaryInstructionLabels;
@property (nonatomic, readonly) NSMutableArray *_createdSecondaryInstructionLabels;
@property (nonatomic, readonly) NSMutableDictionary *_descriptionOverlayViewByKey;
@property (nonatomic, readonly) NSMutableDictionary *_instructionLabelByValue;
@property (nonatomic, readonly) CAMFullscreenViewfinderLayout *_layout;
@property (setter=_setLowLightInstructionLabel:, nonatomic, retain) CAMLowLightInstructionLabel *_lowLightInstructionLabel;
@property (nonatomic, readonly) UIView *_modeClippingView;
@property (setter=_setOverCapturePreviewLayer:, nonatomic, retain) AVSpatialOverCaptureVideoPreviewLayer *_overCapturePreviewLayer;
@property (nonatomic, readonly) UIView *_previewContainerView;
@property (nonatomic, readonly) CAMCircleButton *_previewSuggestionButton;
@property (nonatomic, readonly) CAMViewfinderReticleView *_reticleView;
@property (nonatomic, readonly) NSMutableArray *_semanticStyleBadges;
@property (setter=_setTextInteractionBackground:, nonatomic, retain) UIView *_textInteractionBackground;
@property (getter=_isUsingCreativeCameraControls, nonatomic, readonly) bool _usingCreativeCameraControls;
@property (nonatomic, readonly) CEKAdditiveAnimator *_viewportAnimator;
@property (setter=_setAutoMacroButton:, nonatomic, retain) CAMAutoMacroButton *autoMacroButton;
@property (nonatomic, readonly) CAMBadgeTray *badgeTray;
@property (setter=_setControlDrawer:, nonatomic, retain) CAMControlDrawer *controlDrawer;
@property (getter=isControlDrawerAllowed, nonatomic, readonly) bool controlDrawerAllowed;
@property (getter=isControlDrawerExpanded, nonatomic) bool controlDrawerExpanded;
@property (nonatomic, readonly) CAMControlStatusBar *controlStatusBar;
@property (nonatomic, readonly) CAMCreativeCameraButton *creativeCameraButton;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CAMFullscreenViewfinderDelegate> *delegate;
@property (setter=_setDepthEffectSuggestionButton:, nonatomic, retain) CAMDepthEffectSuggestionButton *depthEffectSuggestionButton;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) long long desiredAspectRatio;
@property (setter=_setDeviceTooHotInstructionLabel:, nonatomic, retain) CAMDeviceTooHotInstructionLabel *deviceTooHotInstructionLabel;
@property (nonatomic, retain) CAMDisabledModeOverlayView *disabledModeOverlayView;
@property (nonatomic, readonly) CAMElapsedTimeView *elapsedTimeView;
@property (getter=isElapsedTimeViewVisible, nonatomic) bool elapsedTimeViewVisible;
@property (nonatomic, readonly) CAMExternalStorageButton *externalStorageButton;
@property (getter=isExternalStorageButtonVisible, nonatomic) bool externalStorageButtonVisible;
@property (nonatomic, readonly) CAMFilterNameBadge *filterNameBadge;
@property (setter=_setFlashCompromisedInstructionLabel:, nonatomic, retain) CAMFlashCompromisedInstructionLabel *flashCompromisedInstructionLabel;
@property (nonatomic, readonly) CAMFlipButton *flipButton;
@property (getter=isFlipButtonVisible, nonatomic) bool flipButtonVisible;
@property (setter=_setFreeResourcesInstructionLabel:, nonatomic, retain) CAMFreeResourcesInstructionLabel *freeResourcesInstructionLabel;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) CAMImageAnalysisButton *imageAnalysisButton;
@property (getter=isImageAnalysisButtonVisible, nonatomic) bool imageAnalysisButtonVisible;
@property (setter=_setImageAnalysisInstructionLabel:, nonatomic, retain) CAMImageAnalysisInstructionLabel *imageAnalysisInstructionLabel;
@property (nonatomic, readonly) CAMImageWell *imageWell;
@property (nonatomic) unsigned long long interfaceModulation;
@property (getter=isLegibilityBackgroundsVisible, nonatomic) bool legibilityBackgroundsVisible;
@property (nonatomic, readonly) CEKLightingControl *lightingControl;
@property (nonatomic, readonly) CEKLightingNameBadge *lightingNameBadge;
@property (setter=_setMachineReadableCodeButton:, nonatomic, retain) CAMMachineReadableCodeButton *machineReadableCodeButton;
@property (nonatomic) long long material;
@property (setter=_setMaxRecordingTimeInstructionLabel:, nonatomic, retain) CAMMaxRecordingTimeInstructionLabel *maxRecordingTimeInstructionLabel;
@property (nonatomic, readonly) CAMModeDial *modeDial;
@property (nonatomic, readonly) CAMModeIndicatorView *modeIndicator;
@property (nonatomic, readonly) CAMFullscreenModeSelector *modeSelector;
@property (nonatomic, readonly) UILongPressGestureRecognizer *modeSelectorGestureRecognizer;
@property (getter=isModeUIAllowed, nonatomic, readonly) bool modeUIAllowed;
@property (nonatomic) long long orientation;
@property (nonatomic) struct CGSize { double x1; double x2; } panoramaCaptureSize;
@property (nonatomic, retain) CAMPanoramaView *panoramaView;
@property (getter=isPortraitControlsAllowed, nonatomic) bool portraitControlsAllowed;
@property (setter=_setPortraitInstructionLabel:, nonatomic, retain) CAMPortraitModeInstructionLabel *portraitInstructionLabel;
@property (setter=_setPreviewAlignmentGuide:, nonatomic, retain) CAMPreviewAlignmentGuide *previewAlignmentGuide;
@property (getter=isPreviewAlignmentGuideVisible, nonatomic) bool previewAlignmentGuideVisible;
@property (nonatomic, retain) CAMPreviewView *previewView;
@property (nonatomic) long long previewViewOrientation;
@property (setter=_setQRCodeInstructionLabel:, nonatomic, retain) CAMQRCodeInstructionLabel *qrCodeInstructionLabel;
@property (getter=isReticleAnimating, nonatomic, readonly) bool reticleAnimating;
@property (nonatomic, readonly) CAMSemanticStylePicker *semanticStylePicker;
@property (nonatomic) long long shallowDepthOfFieldStatus;
@property (setter=_setSharedLibraryImageWellIndicatorView:, nonatomic, retain) CAMSharedLibraryImageWellIndicatorView *sharedLibraryImageWellIndicatorView;
@property (getter=isSharedLibraryImageWellIndicatorVisible, nonatomic) bool sharedLibraryImageWellIndicatorVisible;
@property (nonatomic, readonly) CAMSharedLibraryBadge *sharedLibraryInstructionLabel;
@property (nonatomic, readonly) CAMDynamicShutterControl *shutterControl;
@property (getter=isShutterButtonVisible, nonatomic) bool shutterControlVisible;
@property (readonly) Class superclass;
@property (nonatomic) VKTextLiftingView *textInteractionInsert;
@property (setter=_setTimerIndicator:, nonatomic, retain) CAMTimerIndicatorView *timerIndicator;
@property (getter=isTimerIndicatorVisible, nonatomic) bool timerIndicatorVisible;
@property (nonatomic) long long viewportAspectRatio;
@property (nonatomic) long long visibleInstructionLabel;
@property (nonatomic) long long visibleSecondaryInstructionLabel;
@property (nonatomic) long long visibleSuggestionButtonType;
@property (setter=_setZoomControl:, nonatomic, retain) CAMZoomControl *zoomControl;
@property (getter=isZoomControlVisible, nonatomic) bool zoomControlVisible;
@property (setter=_setZoomSlider:, nonatomic, retain) CAMZoomSlider *zoomSlider;
@property (nonatomic) unsigned long long zoomStyle;

+ (id)darkControlBackgroundColor;
+ (Class)layerClass;
+ (id)lightControlBackgroundColor;

- (void).cxx_destruct;
- (double)_additionalBottomPaddingForLightingControl;
- (void)_applyTextInsertContentInsets;
- (unsigned long long)_badgeFontStyle;
- (id)_bottomLegibilityBackground;
- (double)_centerYForZoomControl:(id)arg1 zoomSlider:(id)arg2;
- (id)_contentClippingContainer;
- (id)_contentView;
- (void)_createExternalStorageButton;
- (void)_createViewIfNeededForInstructionLabel:(long long)arg1 isPrimary:(bool)arg2;
- (id)_createdPrimaryInstructionLabels;
- (id)_createdSecondaryInstructionLabels;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_currentFourThreeViewportFrame;
- (id)_descriptionOverlayViewByKey;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_frameForActionInfoView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_frameForBottomLegibilityBackground;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_frameForContentClippingContainer;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_frameForControlDrawer;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_frameForExternalStorageButton;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_frameForFlipButton;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_frameForImageWell;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_frameForLightingControl;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_frameForModeView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_frameForPreviewOverlaysInViewport:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_frameForPreviewView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_frameForReticleViewport;
- (struct { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGAffineTransform { double x_3_1_1; double x_3_1_2; double x_3_1_3; double x_3_1_4; double x_3_1_5; double x_3_1_6; } x3; })_geometryForBadgeTray;
- (struct { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGAffineTransform { double x_3_1_1; double x_3_1_2; double x_3_1_3; double x_3_1_4; double x_3_1_5; double x_3_1_6; } x3; })_geometryForBottomCenteredView:(id)arg1;
- (struct { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGAffineTransform { double x_3_1_1; double x_3_1_2; double x_3_1_3; double x_3_1_4; double x_3_1_5; double x_3_1_6; } x3; })_geometryForBottomCenteredView:(id)arg1 margin:(double)arg2;
- (struct { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGAffineTransform { double x_3_1_1; double x_3_1_2; double x_3_1_3; double x_3_1_4; double x_3_1_5; double x_3_1_6; } x3; })_geometryForBottomCenteredView:(id)arg1 margins:(struct CGSize { double x1; double x2; })arg2;
- (struct { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGAffineTransform { double x_3_1_1; double x_3_1_2; double x_3_1_3; double x_3_1_4; double x_3_1_5; double x_3_1_6; } x3; })_geometryForInstructionLabel:(id)arg1 belowInstructionLabelGeometry:(struct { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGAffineTransform { double x_3_1_1; double x_3_1_2; double x_3_1_3; double x_3_1_4; double x_3_1_5; double x_3_1_6; } x3; })arg2 elapsedTimeViewGeometry:(struct { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGAffineTransform { double x_3_1_1; double x_3_1_2; double x_3_1_3; double x_3_1_4; double x_3_1_5; double x_3_1_6; } x3; })arg3;
- (struct { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGAffineTransform { double x_3_1_1; double x_3_1_2; double x_3_1_3; double x_3_1_4; double x_3_1_5; double x_3_1_6; } x3; })_geometryForLandscapeLightingBadge;
- (struct { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGAffineTransform { double x_3_1_1; double x_3_1_2; double x_3_1_3; double x_3_1_4; double x_3_1_5; double x_3_1_6; } x3; })_geometryForMRCButton;
- (struct { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGAffineTransform { double x_3_1_1; double x_3_1_2; double x_3_1_3; double x_3_1_4; double x_3_1_5; double x_3_1_6; } x3; })_geometryForTextInteractionInsertWithViewport:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_handleDirectionIndicatorTapped;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_imageAnalysisButtonAlignmentRectForCenterY:(double)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_imageAnalysisButtonFrameForCenterY:(double)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_imageAnalysisButtonFrameForZoomControl:(id)arg1 zoomSlider:(id)arg2;
- (void)_insertBackgroundSubview:(id)arg1;
- (id)_instructionLabelByValue;
- (bool)_isControlDrawerPresentedModally;
- (bool)_isUsingCreativeCameraControls;
- (void)_iterateViewsForHUDManager:(id)arg1 withItemFoundBlock:(id /* block */)arg2;
- (id)_layout;
- (void)_layoutPanoramaView;
- (void)_layoutSemanticStyleMaskedBadges;
- (void)_layoutViewportWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 previewFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)_layoutZoomControls;
- (double)_legibilityBackgroundAlpha;
- (void)_loadFilterControlsIfNeeded;
- (void)_loadPortraitControlsIfNeeded;
- (void)_loadSemanticStyleControlsIfNeeded;
- (id)_lowLightInstructionLabel;
- (id)_modeClippingView;
- (id)_overCapturePreviewLayer;
- (id)_previewContainerView;
- (id)_previewSuggestionButton;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_previewSuggestionButtonFrameForCenterY:(double)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_previewSuggestionButtonFrameForZoomControl:(id)arg1 zoomSlider:(id)arg2;
- (id)_reticleView;
- (id)_semanticStyleBadges;
- (void)_setAutoMacroButton:(id)arg1;
- (void)_setBottomLegibilityBackground:(id)arg1;
- (void)_setControlDrawer:(id)arg1;
- (void)_setControlDrawerPresentedModally:(bool)arg1;
- (void)_setDepthEffectSuggestionButton:(id)arg1;
- (void)_setDeviceTooHotInstructionLabel:(id)arg1;
- (void)_setFlashCompromisedInstructionLabel:(id)arg1;
- (void)_setFreeResourcesInstructionLabel:(id)arg1;
- (void)_setImageAnalysisInstructionLabel:(id)arg1;
- (void)_setLowLightInstructionLabel:(id)arg1;
- (void)_setMachineReadableCodeButton:(id)arg1;
- (void)_setMaxRecordingTimeInstructionLabel:(id)arg1;
- (void)_setNeedsLayoutAnimated:(bool)arg1;
- (void)_setOverCapturePreviewLayer:(id)arg1;
- (void)_setPortraitInstructionLabel:(id)arg1;
- (void)_setPreviewAlignmentGuide:(id)arg1;
- (void)_setQRCodeInstructionLabel:(id)arg1;
- (void)_setSharedLibraryImageWellIndicatorView:(id)arg1;
- (void)_setTextInteractionBackground:(id)arg1;
- (void)_setTimerIndicator:(id)arg1;
- (void)_setViewportAnimatorFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_setViewportAnimatorFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withDuration:(double)arg2 timingCurve:(id)arg3;
- (void)_setZoomControl:(id)arg1;
- (void)_setZoomSlider:(id)arg1;
- (bool)_shouldShowControls;
- (bool)_shouldShowZoomControl;
- (bool)_showControlDrawer;
- (bool)_showFilterNameBadge;
- (bool)_showLandscapeLightingBadge;
- (bool)_showModeView;
- (bool)_showPortraitControls;
- (bool)_showSemanticStylePicker;
- (id)_textInteractionBackground;
- (void)_transitionView:(id)arg1 fromOrientation:(long long)arg2 toOrientation:(long long)arg3;
- (void)_updateDisabledModeOverlayViewportFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_updateGeometryForElapsedTimeAndInstructionLabels;
- (void)_updateModeDialClippingForViewportFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_updatePortraitControlsHighlightAnimated:(bool)arg1;
- (void)_updatePreviewAlignmentGuideForViewportFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_updatePreviewLayerForPreviewFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 viewportFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)_updateReticleForViewportFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_updateSemanticStylePickerForViewportFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_updateSubviewsVisibilityAnimated:(bool)arg1;
- (void)_updateTintColors;
- (id)_viewportAnimator;
- (long long)_viewportAspectRatioForControlsOverPreview;
- (id)_visibleInstructionLabelForInstructionLabelValue:(long long)arg1;
- (void)adoptMachineReadableCodeButton:(id)arg1 fromOriginalParent:(id)arg2 animated:(bool)arg3;
- (void)animator:(id)arg1 didUpdateValuesForKeys:(id)arg2;
- (id)autoMacroButton;
- (id)badgeTray;
- (void)badgeViewDidChangeIntrinsicContentSize:(id)arg1;
- (id)controlDrawer;
- (void)controlDrawer:(id)arg1 didChangeExpanded:(bool)arg2 forControlType:(long long)arg3 animated:(bool)arg4;
- (id)controlStatusBar;
- (id)creativeCameraButton;
- (id)delegate;
- (id)depthEffectSuggestionButton;
- (id)descriptionOverlayViewForKey:(id)arg1;
- (long long)desiredAspectRatio;
- (id)deviceTooHotInstructionLabel;
- (id)disabledModeOverlayView;
- (void)dismissMachineReadableCodeButtonAnimated:(bool)arg1;
- (void)dismissModalControlDrawerIfNeededForReason:(long long)arg1;
- (id)elapsedTimeView;
- (id)externalStorageButton;
- (id)filterNameBadge;
- (id)flashCompromisedInstructionLabel;
- (id)flipButton;
- (id)freeResourcesInstructionLabel;
- (id)hudItemForAccessibilityHUDManager:(id)arg1;
- (id)imageAnalysisButton;
- (id)imageAnalysisInstructionLabel;
- (id)imageWell;
- (id)initWithMetalContext:(id)arg1 useCreativeCameraControls:(bool)arg2;
- (void)instructionLabelDidChangeIntrinsicContentSize:(id)arg1;
- (unsigned long long)interfaceModulation;
- (bool)isControlDrawerAllowed;
- (bool)isControlDrawerExpanded;
- (bool)isControlDrawerPresentedModallyWithControlType:(long long)arg1;
- (bool)isElapsedTimeViewVisible;
- (bool)isExternalStorageButtonVisible;
- (bool)isFlipButtonVisible;
- (bool)isImageAnalysisButtonVisible;
- (bool)isLegibilityBackgroundsVisible;
- (bool)isModeUIAllowed;
- (bool)isPortraitControlsAllowed;
- (bool)isPreviewAlignmentGuideVisible;
- (bool)isReticleAnimating;
- (bool)isSharedLibraryImageWellIndicatorVisible;
- (bool)isShutterButtonVisible;
- (bool)isTimerIndicatorVisible;
- (bool)isZoomControlVisible;
- (void)layoutSubviews;
- (id)lightingControl;
- (id)lightingNameBadge;
- (id)machineReadableCodeButton;
- (void)machineReadableCodeButtonDidTapDismiss:(id)arg1;
- (long long)material;
- (id)maxRecordingTimeInstructionLabel;
- (id)modeDial;
- (id)modeIndicator;
- (id)modeSelector;
- (id)modeSelectorGestureRecognizer;
- (long long)orientation;
- (struct CGSize { double x1; double x2; })panoramaCaptureSize;
- (id)panoramaView;
- (id)portraitInstructionLabel;
- (void)prepareForResumingUsingCrossfade;
- (void)presentControlDrawerModally:(bool)arg1 forReason:(long long)arg2 controlType:(long long)arg3;
- (id)previewAlignmentGuide;
- (id)previewView;
- (long long)previewViewOrientation;
- (id)qrCodeInstructionLabel;
- (void)reloadSemanticStyleBadgesDelayIfNeeded:(bool)arg1;
- (void)removeInflightBlurAnimations;
- (bool)requestPreviewUpdateForSemanticStyleAnimated:(bool)arg1;
- (void)selectedByAccessibilityHUDManager:(id)arg1;
- (id)semanticStylePicker;
- (void)semanticStylePickerDidChangeSelectedStyle:(id)arg1;
- (void)semanticStylePickerDidScroll:(id)arg1;
- (void)setControlDrawerAllowed:(bool)arg1 modeUIAllowed:(bool)arg2 animated:(bool)arg3;
- (void)setControlDrawerExpanded:(bool)arg1;
- (void)setControlDrawerExpanded:(bool)arg1 forReason:(long long)arg2;
- (void)setControlDrawerExpanded:(bool)arg1 forReason:(long long)arg2 animated:(bool)arg3;
- (void)setDelegate:(id)arg1;
- (void)setDescriptionOverlayView:(id)arg1 forKey:(id)arg2;
- (void)setDisabledModeOverlayView:(id)arg1;
- (void)setElapsedTimeViewVisible:(bool)arg1;
- (void)setElapsedTimeViewVisible:(bool)arg1 animated:(bool)arg2;
- (void)setExternalStorageButtonVisible:(bool)arg1;
- (void)setExternalStorageButtonVisible:(bool)arg1 animated:(bool)arg2;
- (void)setFlipButtonVisible:(bool)arg1;
- (void)setFlipButtonVisible:(bool)arg1 animated:(bool)arg2;
- (void)setImageAnalysisButton:(id)arg1;
- (void)setImageAnalysisButtonVisible:(bool)arg1;
- (void)setImageAnalysisButtonVisible:(bool)arg1 animated:(bool)arg2;
- (void)setInterfaceModulation:(unsigned long long)arg1;
- (void)setInterfaceModulation:(unsigned long long)arg1 animated:(bool)arg2;
- (void)setLegibilityBackgroundsVisible:(bool)arg1;
- (void)setLegibilityBackgroundsVisible:(bool)arg1 animated:(bool)arg2;
- (void)setMaterial:(long long)arg1;
- (void)setMaterial:(long long)arg1 withDuration:(double)arg2;
- (void)setOrientation:(long long)arg1;
- (void)setOrientation:(long long)arg1 animated:(bool)arg2;
- (void)setPanoramaCaptureSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setPanoramaView:(id)arg1;
- (void)setPortraitControlsAllowed:(bool)arg1;
- (void)setPortraitControlsAllowed:(bool)arg1 animated:(bool)arg2;
- (void)setPreviewAlignmentGuideVisible:(bool)arg1;
- (void)setPreviewAlignmentGuideVisible:(bool)arg1 animated:(bool)arg2;
- (void)setPreviewView:(id)arg1;
- (void)setPreviewViewOrientation:(long long)arg1;
- (void)setShallowDepthOfFieldStatus:(long long)arg1;
- (void)setShallowDepthOfFieldStatus:(long long)arg1 animated:(bool)arg2;
- (void)setSharedLibraryImageWellIndicatorVisible:(bool)arg1;
- (void)setSharedLibraryImageWellIndicatorVisible:(bool)arg1 animated:(bool)arg2;
- (void)setShutterControlVisible:(bool)arg1;
- (void)setShutterControlVisible:(bool)arg1 animated:(bool)arg2;
- (void)setTextInteractionInsert:(id)arg1;
- (void)setTimerIndicatorVisible:(bool)arg1;
- (void)setTimerIndicatorVisible:(bool)arg1 animated:(bool)arg2;
- (void)setViewportAspectRatio:(long long)arg1;
- (void)setViewportAspectRatio:(long long)arg1 animated:(bool)arg2;
- (void)setVisibleInstructionLabel:(long long)arg1;
- (void)setVisibleInstructionLabel:(long long)arg1 animated:(bool)arg2;
- (void)setVisibleInstructionLabel:(long long)arg1 visibleSecondaryInstructionLabel:(long long)arg2 animated:(bool)arg3;
- (void)setVisiblePreviewSuggestionButton:(long long)arg1 animated:(bool)arg2;
- (void)setVisibleSecondaryInstructionLabel:(long long)arg1;
- (void)setVisibleSuggestionButtonType:(long long)arg1;
- (void)setZoomControlVisible:(bool)arg1;
- (void)setZoomControlVisible:(bool)arg1 animated:(bool)arg2;
- (void)setZoomStyle:(unsigned long long)arg1;
- (long long)shallowDepthOfFieldStatus;
- (id)sharedLibraryImageWellIndicatorView;
- (id)sharedLibraryInstructionLabel;
- (bool)shouldAccessibilityGestureBeginForHUDManager:(id)arg1;
- (id)shutterControl;
- (id)textInteractionInsert;
- (id)timerIndicator;
- (id)touchingRecognizersToCancel;
- (void)traitCollectionDidChange:(id)arg1;
- (long long)viewportAspectRatio;
- (long long)visibleInstructionLabel;
- (long long)visibleSecondaryInstructionLabel;
- (long long)visibleSuggestionButtonType;
- (id)zoomControl;
- (id)zoomSlider;
- (unsigned long long)zoomStyle;

@end
