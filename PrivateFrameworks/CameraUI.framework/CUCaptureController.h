
@interface CUCaptureController : NSObject <CAMCaptureRequestIntervalometerDelegate, CAMCaptureService> {
    bool  _HDRSuggested;
    CAMBurstController * __burstController;
    CAMCaptureEngine * __captureEngine;
    CAMStillImageCaptureRequest * __capturingCTMVideoRequest;
    CAMStillImageCaptureRequest * __capturingLowLightStillImageRequest;
    bool  __capturingPairedVideoPaused;
    CAMPanoramaCaptureRequest * __capturingPanoramaRequest;
    CAMVideoCaptureRequest * __capturingVideoRequest;
    PLCameraDeferredProcessingCoordinator * __deferredProcessingCoordinator;
    bool  __didCompleteInitialConfiguration;
    CAMKeyValueCoalescer * __exposureCoalescer;
    CAMKeyValueCoalescer * __focusCoalescer;
    NSMutableSet * __identifiersForActiveCTMVideoCaptures;
    NSMutableSet * __identifiersForActiveLivePhotoVideoCaptures;
    CAMIrisVideoController * __irisVideoController;
    bool  __isVideoCaptureAvailable;
    CAMLocationController * __locationController;
    long long  __maximumNumberOfStillImageRequests;
    CAMMotionController * __motionController;
    bool  __needsInitialPairedVideoUpdate;
    unsigned long long  __nextSignpostID;
    NSCountedSet * __numberOfInflightRequestsByType;
    CAMVideoCaptureRequest * __pendingVideoCaptureRequest;
    NSMutableDictionary * __persistenceUUIDToSignpostID;
    CAMPowerController * __powerController;
    CAMProtectionController * __protectionController;
    CAMRemoteShutterController * __remoteShutterController;
    NSObject<OS_dispatch_queue> * __responseQueue;
    CAMThumbnailGenerator * __responseThumbnailGenerator;
    bool  _autoMacroActive;
    bool  _autoMacroSuggested;
    <CAMAvailabilityDelegate> * _availabilityDelegate;
    <CAMBurstDelegate> * _burstDelegate;
    bool  _captureAvailable;
    bool  _capturingTimelapse;
    bool  _configurationAvailable;
    <CAMConfigurationDelegate> * _configurationDelegate;
    CAMCaptureRequestIntervalometer * _currentBurstIntervalometer;
    CAMSystemPressureState * _currentCameraSystemPressureState;
    <CAMExposureDelegate> * _exposureDelegate;
    <CAMFacesDelegate> * _facesDelegate;
    bool  _failedConfigurationPreventingCapture;
    bool  _flashActive;
    bool  _flashAvailable;
    unsigned long long  _flashCompromise;
    <CAMFocusDelegate> * _focusDelegate;
    <CAMHistogramDelegate> * _histogramDelegate;
    <CAMCaptureInterruptionDelegate> * _interruptionDelegate;
    long long  _lowLightStatus;
    <CAMMachineReadableCodeDelegate> * _machineReadableCodeDelegate;
    <CAMPanoramaChangeDelegate> * _panoramaChangeDelegate;
    CAMPanoramaPreviewView * _panoramaPreviewView;
    bool  _previewDisabled;
    <CAMPreviewLayerOverCaptureStatusDelegate> * _previewLayerOverCaptureStatusDelegate;
    bool  _rampingVideoZoom;
    <CAMCaptureRecoveryDelegate> * _recoveryDelegate;
    <CAMCaptureResultDelegate> * _resultDelegate;
    <CAMCaptureRunningDelegate> * _runningDelegate;
    <CAMShallowDepthOfFieldStatusDelegate> * _shallowDepthOfFieldStatusDelegate;
    <CAMStillImageCapturingVideoDelegate> * _stillImageCapturingVideoDelegate;
    <CAMSuggestionDelegate> * _suggestionDelegate;
    <CAMCaptureControllerSystemPressureStateDelegate> * _systemPressureStateDelegate;
    <CAMTextRegionResultDelegate> * _textRegionResultDelegate;
    bool  _torchActive;
    bool  _torchAvailable;
    _Atomic int  _uniqueRequestIDForConfigurationChange;
    <CAMZoomDelegate> * _zoomDelegate;
}

@property (getter=isHDRSuggested, setter=_setHDRSuggested:, nonatomic) bool HDRSuggested;
@property (nonatomic, readonly) CAMBurstController *_burstController;
@property (nonatomic, readonly) CAMCaptureEngine *_captureEngine;
@property (setter=_setCapturingCTMVideoRequest:, nonatomic, retain) CAMStillImageCaptureRequest *_capturingCTMVideoRequest;
@property (setter=_setCapturingLowLightStillImageRequest:, nonatomic, retain) CAMStillImageCaptureRequest *_capturingLowLightStillImageRequest;
@property (getter=_isCapturingPairedVideoPaused, setter=_setCapturingPairedVideoPaused:, nonatomic) bool _capturingPairedVideoPaused;
@property (setter=_setCapturingPanoramaRequest:, nonatomic, retain) CAMPanoramaCaptureRequest *_capturingPanoramaRequest;
@property (setter=_setCapturingVideoRequest:, nonatomic, retain) CAMVideoCaptureRequest *_capturingVideoRequest;
@property (setter=_setDeferredProcessingCoordinator:, nonatomic, retain) PLCameraDeferredProcessingCoordinator *_deferredProcessingCoordinator;
@property (setter=_setDidCompleteInitialConfiguration:, nonatomic) bool _didCompleteInitialConfiguration;
@property (nonatomic, readonly) CAMKeyValueCoalescer *_exposureCoalescer;
@property (nonatomic, readonly) CAMKeyValueCoalescer *_focusCoalescer;
@property (nonatomic, readonly) NSMutableSet *_identifiersForActiveCTMVideoCaptures;
@property (nonatomic, readonly) NSMutableSet *_identifiersForActiveLivePhotoVideoCaptures;
@property (nonatomic, readonly) CAMIrisVideoController *_irisVideoController;
@property (getter=_isVideoCaptureAvailable, setter=_setVideoCaptureAvailable:, nonatomic) bool _isVideoCaptureAvailable;
@property (nonatomic, readonly) CAMLocationController *_locationController;
@property (setter=_setMaximumNumberOfStillImageRequests:, nonatomic) long long _maximumNumberOfStillImageRequests;
@property (nonatomic, readonly) CAMMotionController *_motionController;
@property (setter=_setNeedsInitialPairedVideoUpdate:, nonatomic) bool _needsInitialPairedVideoUpdate;
@property (setter=_setNextSignpostID:, nonatomic) unsigned long long _nextSignpostID;
@property (nonatomic, readonly) NSCountedSet *_numberOfInflightRequestsByType;
@property (setter=_setPendingVideoCaptureRequest:, nonatomic, retain) CAMVideoCaptureRequest *_pendingVideoCaptureRequest;
@property (nonatomic, readonly) NSMutableDictionary *_persistenceUUIDToSignpostID;
@property (nonatomic, readonly) CAMPowerController *_powerController;
@property (nonatomic, readonly) CAMProtectionController *_protectionController;
@property (nonatomic, readonly) CAMRemoteShutterController *_remoteShutterController;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *_responseQueue;
@property (nonatomic, readonly) CAMThumbnailGenerator *_responseThumbnailGenerator;
@property (nonatomic, readonly) bool _shouldResetFocusAndExposureAfterCapture;
@property (getter=isAutoMacroActive, nonatomic) bool autoMacroActive;
@property (getter=isAutoMacroSuggested, nonatomic) bool autoMacroSuggested;
@property (nonatomic) <CAMAvailabilityDelegate> *availabilityDelegate;
@property (nonatomic) <CAMBurstDelegate> *burstDelegate;
@property (getter=isCaptureAvailable, setter=_setCaptureAvailable:, nonatomic) bool captureAvailable;
@property (getter=isCapturingBurst, nonatomic, readonly) bool capturingBurst;
@property (getter=isCapturingCTMVideo, nonatomic, readonly) bool capturingCTMVideo;
@property (getter=isCapturingLivePhotoVideo, nonatomic, readonly) bool capturingLivePhotoVideo;
@property (getter=isCapturingLowLightImage, nonatomic, readonly) bool capturingLowLightImage;
@property (getter=isCapturingPanorama, nonatomic, readonly) bool capturingPanorama;
@property (getter=isCapturingStandardVideo, nonatomic, readonly) bool capturingStandardVideo;
@property (getter=isCapturingStillImage, nonatomic, readonly) bool capturingStillImage;
@property (getter=isCapturingTimelapse, nonatomic, readonly) bool capturingTimelapse;
@property (getter=isCapturingVideo, nonatomic, readonly) bool capturingVideo;
@property (getter=isConfigurationAvailable, setter=_setConfigurationAvailable:, nonatomic) bool configurationAvailable;
@property (nonatomic) <CAMConfigurationDelegate> *configurationDelegate;
@property (nonatomic, readonly) unsigned long long currentBurstCount;
@property (setter=_setCurrentBurstIntervalometer:, nonatomic, retain) CAMCaptureRequestIntervalometer *currentBurstIntervalometer;
@property (setter=_setCurrentCameraSystemPressureState:, nonatomic, retain) CAMSystemPressureState *currentCameraSystemPressureState;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) <CAMExposureDelegate> *exposureDelegate;
@property (nonatomic) <CAMFacesDelegate> *facesDelegate;
@property (getter=_isFailedConfigurationPreventingCapture, setter=_setFailedConfigurationPreventingCapture:, nonatomic) bool failedConfigurationPreventingCapture;
@property (getter=isFlashActive, setter=_setFlashActive:, nonatomic) bool flashActive;
@property (getter=isFlashAvailable, setter=_setFlashAvailable:, nonatomic) bool flashAvailable;
@property (setter=_setFlashCompromise:, nonatomic) unsigned long long flashCompromise;
@property (nonatomic) <CAMFocusDelegate> *focusDelegate;
@property (readonly) unsigned long long hash;
@property (nonatomic) <CAMHistogramDelegate> *histogramDelegate;
@property (getter=isInterrupted, nonatomic, readonly) bool interrupted;
@property (nonatomic) <CAMCaptureInterruptionDelegate> *interruptionDelegate;
@property (setter=_setLowLightStatus:, nonatomic) long long lowLightStatus;
@property (nonatomic) <CAMMachineReadableCodeDelegate> *machineReadableCodeDelegate;
@property (nonatomic) <CAMPanoramaChangeDelegate> *panoramaChangeDelegate;
@property (nonatomic, readonly) CAMPanoramaPreviewView *panoramaPreviewView;
@property (getter=isPreviewDisabled, nonatomic, readonly) bool previewDisabled;
@property (nonatomic) <CAMPreviewLayerOverCaptureStatusDelegate> *previewLayerOverCaptureStatusDelegate;
@property (getter=isRampingVideoZoom, nonatomic) bool rampingVideoZoom;
@property (nonatomic) <CAMCaptureRecoveryDelegate> *recoveryDelegate;
@property (nonatomic) <CAMCaptureResultDelegate> *resultDelegate;
@property (nonatomic) <CAMCaptureRunningDelegate> *runningDelegate;
@property (nonatomic) <CAMShallowDepthOfFieldStatusDelegate> *shallowDepthOfFieldStatusDelegate;
@property (nonatomic, readonly) bool shouldAllowUserToChangeFocusAndExposure;
@property (nonatomic) <CAMStillImageCapturingVideoDelegate> *stillImageCapturingVideoDelegate;
@property (nonatomic) <CAMSuggestionDelegate> *suggestionDelegate;
@property (readonly) Class superclass;
@property (nonatomic) <CAMCaptureControllerSystemPressureStateDelegate> *systemPressureStateDelegate;
@property (nonatomic) <CAMTextRegionResultDelegate> *textRegionResultDelegate;
@property (getter=isTorchActive, setter=_setTorchActive:, nonatomic) bool torchActive;
@property (getter=isTorchAvailable, setter=_setTorchAvailable:, nonatomic) bool torchAvailable;
@property (nonatomic, readonly) AVCaptureVideoPreviewLayer *videoPreviewLayer;
@property (nonatomic) <CAMZoomDelegate> *zoomDelegate;

+ (float)focusLensPositionCurrentSentinel;

- (void).cxx_destruct;
- (id)_availabilityKeyPaths;
- (void)_availabilityResultChangedForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3;
- (void)_beginTrackingCTMVideoRecordingForIdentifier:(id)arg1;
- (void)_beginTrackingLivePhotoVideoRecordingForIdentifier:(id)arg1;
- (id)_burstController;
- (bool)_canBeginCaptureCheckAvailability:(bool)arg1 error:(id*)arg2;
- (id)_captureEngine;
- (id)_capturingCTMVideoRequest;
- (id)_capturingLowLightStillImageRequest;
- (id)_capturingPanoramaRequest;
- (id)_capturingVideoRequest;
- (long long)_cinematicMetadataObjectIDForMetadataObject:(id)arg1;
- (id)_commandForChangeToGraphConfiguration:(id)arg1 zoomFactor:(double)arg2 minimumExecutionTime:(double)arg3 outputToExternalStorage:(bool)arg4 outRequestID:(int*)arg5;
- (id)_commandForConfiguration:(id)arg1 zoomFactor:(double)arg2 outputToExternalStorage:(bool)arg3 outRequestID:(int*)arg4;
- (id)_commandForLockingExposureIncludingFocus:(bool)arg1;
- (id)_commandForResetFocus:(bool)arg1 resetExposure:(bool)arg2 resetExposureTargetBias:(bool)arg3;
- (id)_deferredProcessingCoordinator;
- (bool)_didCompleteInitialConfiguration;
- (void)_didPlayBeginVideoRecordingSound;
- (void)_endCaptureSignpostIntervalForPersistenceUUID:(id)arg1;
- (void)_endTrackingCTMVideoRecordingForIdentifier:(id)arg1;
- (void)_endTrackingLivePhotoVideoRecordingForIdentifier:(id)arg1;
- (id)_exposureCoalescer;
- (id)_exposureKVOKeyPaths;
- (void)_exposureResultChangedForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3;
- (id)_focusCoalescer;
- (id)_focusKVOKeyPaths;
- (void)_focusResultChangedForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3;
- (void)_handleCaptureEngineExecutionNotification:(id)arg1;
- (void)_handleShallowDepthOfFieldStatusChangedNotification:(id)arg1;
- (void)_handleSystemPressureState:(id)arg1;
- (id)_identifierForPendingVideoForStillImageRequest:(id)arg1;
- (id)_identifiersForActiveCTMVideoCaptures;
- (id)_identifiersForActiveLivePhotoVideoCaptures;
- (bool)_internalCaptureStillImageWithRequest:(id)arg1 error:(id*)arg2;
- (bool)_internalStartCapturingVideoWithRequest:(id)arg1 error:(id*)arg2;
- (id)_irisVideoController;
- (bool)_isCapturingPairedVideoPaused;
- (bool)_isFailedConfigurationPreventingCapture;
- (bool)_isVideoCaptureAvailable;
- (bool)_kvoDidEndForChange:(id)arg1;
- (bool)_kvoDidStartForChange:(id)arg1;
- (id)_locationController;
- (long long)_maximumNumberOfStillImageRequests;
- (unsigned long long)_maximumNumberOfStillImageRequestsDuringBurst;
- (id)_motionController;
- (bool)_needsInitialPairedVideoUpdate;
- (unsigned long long)_nextSignpostID;
- (void)_notifyDelegateOfCaptureAvailabilityChanged:(bool)arg1;
- (void)_notifyDelegateOfConfigurationAvailabilityChanged:(bool)arg1;
- (id)_numberOfInflightRequestsByType;
- (void)_overCapturePreviewStatusChangedForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3;
- (id)_pendingVideoCaptureRequest;
- (id)_persistenceUUIDToSignpostID;
- (id)_powerController;
- (void)_processCapturedBurstRequest:(id)arg1 withResult:(id)arg2;
- (void)_processPendingVideoCaptureRequest:(id)arg1;
- (id)_protectionController;
- (id)_realtimeMetadataCommandsForMode:(long long)arg1 videoConfiguration:(long long)arg2 capturing:(bool)arg3 wantsMachineReadableCodes:(bool)arg4 wantsImageAnalysis:(bool)arg5;
- (id)_remoteShutterController;
- (void)_resetFocusAndExposureAfterCapture;
- (void)_resetFocusAndExposureAfterCaptureForType:(long long)arg1;
- (void)_resetFocusAndExposureIfAppropriateForReason:(long long)arg1;
- (id)_responseQueue;
- (id)_responseThumbnailGenerator;
- (id)_sanitizePanoramaRequest:(id)arg1;
- (id)_sanitizeStillImageRequest:(id)arg1;
- (id)_sanitizeVideoRequest:(id)arg1;
- (void)_scheduleFocusAndExposureResetAfterCaptureIfNecessaryForType:(long long)arg1;
- (void)_setCaptureAvailable:(bool)arg1;
- (void)_setCapturingCTMVideoRequest:(id)arg1;
- (void)_setCapturingLowLightStillImageRequest:(id)arg1;
- (void)_setCapturingPairedVideoPaused:(bool)arg1;
- (void)_setCapturingPanoramaRequest:(id)arg1;
- (void)_setCapturingVideoRequest:(id)arg1;
- (void)_setConfigurationAvailable:(bool)arg1;
- (void)_setCurrentBurstIntervalometer:(id)arg1;
- (void)_setCurrentCameraSystemPressureState:(id)arg1;
- (void)_setDeferredProcessingCoordinator:(id)arg1;
- (void)_setDidCompleteInitialConfiguration:(bool)arg1;
- (void)_setFailedConfigurationPreventingCapture:(bool)arg1;
- (void)_setFlashActive:(bool)arg1;
- (void)_setFlashAvailable:(bool)arg1;
- (void)_setFlashCompromise:(unsigned long long)arg1;
- (void)_setHDRSuggested:(bool)arg1;
- (void)_setLowLightStatus:(long long)arg1;
- (void)_setMaximumNumberOfStillImageRequests:(long long)arg1;
- (void)_setNeedsInitialPairedVideoUpdate:(bool)arg1;
- (void)_setNextSignpostID:(unsigned long long)arg1;
- (void)_setPendingVideoCaptureRequest:(id)arg1;
- (void)_setTorchActive:(bool)arg1;
- (void)_setTorchAvailable:(bool)arg1;
- (void)_setVideoCaptureAvailable:(bool)arg1;
- (void)_setupAvailabilityMonitoring;
- (void)_setupExposureMonitoring;
- (void)_setupFocusAndExposureMonitoring;
- (void)_setupFocusMonitoring;
- (void)_setupOverCapturePreviewMonitoring;
- (void)_setupSuggestionMonitoring;
- (void)_setupSystemPressureStateMonitoring;
- (void)_setupZoomMonitoring;
- (void)_setupZoomPIPMonitoring;
- (bool)_shouldLockWhiteBalanceForActiveVideoRequest;
- (bool)_shouldLockWhiteBalanceForCTMVideoRequest:(id)arg1;
- (bool)_shouldLockWhiteBalanceForVideoCaptureRequest:(id)arg1;
- (bool)_shouldManageFocusForMode:(long long)arg1;
- (bool)_shouldMonitorSystemPressureState;
- (bool)_shouldResetFocusAndExposureAfterCapture;
- (bool)_shouldTrackInflightCountForRequest:(id)arg1;
- (void)_startCaptureSignpostIntervalForPersistenceUUID:(id)arg1;
- (void)_subjectAreaDidChange:(id)arg1;
- (id)_suggestionKeyPaths;
- (void)_suggestionResultChangedForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3;
- (void)_systemPressureStateMonitoringChangedForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3;
- (id)_systemPressureStateMonitoringKeyPaths;
- (void)_tearDownOverCapturePreviewMonitoring;
- (void)_teardownAvailabilityMonitoring;
- (void)_teardownFocusAndExposureMonitoring;
- (void)_teardownSuggestionMonitoring;
- (void)_teardownSystemPressureStateMonitoring;
- (void)_teardownZoomMonitoring;
- (void)_teardownZoomPIPMonitoring;
- (id)_textAnalysisImageFromStillImageResult:(id)arg1 imageOrientation:(long long)arg2;
- (id)_thumbnailImageFromStillImageCaptureResult:(id)arg1 imageOrientation:(long long)arg2;
- (id)_thumbnailImageFromVideoCaptureResult:(id)arg1 previewOrientation:(long long)arg2 previewImage:(out id*)arg3;
- (int)_uniqueRequestIDForChangeToModeAndDevice;
- (void)_updateAutoMacroActive;
- (void)_updateAutoMacroSuggested;
- (void)_updateAvailabilityAfterCapturedRequest:(id)arg1;
- (void)_updateAvailabilityAfterEnqueuedRequest:(id)arg1;
- (void)_updateAvailabilityAfterStopCapturingForRequest:(id)arg1;
- (void)_updateAvailabilityForRequestType:(long long)arg1;
- (void)_updateAvailabilityWhenPreparingToStopCapturingForRequest:(id)arg1;
- (id)_updateFocusAndExposureForStartBurstCapture;
- (id)_updateFocusAndExposureForStartPanorama;
- (void)_updateMaximumNumberOfStillImageRequestsAfterBurst;
- (void)_updateMaximumNumberOfStillImageRequestsAfterCapturedRequestIfNecessary:(id)arg1;
- (void)_updateMaximumNumberOfStillImageRequestsAfterEnqueuingRequest:(id)arg1;
- (bool)_useSmoothFocus;
- (bool)_wantsImageAnalysisForGraphConfiguration:(id)arg1;
- (bool)_wantsMachineReadableCodesForGraphConfiguration:(id)arg1;
- (id)_zoomMonitoringKeyPaths;
- (void)_zoomPIPChangedForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3;
- (void)_zoomResultChangedForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3;
- (int)applyCaptureConfiguration:(id)arg1 zoomFactor:(double)arg2 outputToExternalStorage:(bool)arg3;
- (void)attemptToEndInterruptions;
- (id)availabilityDelegate;
- (id)burstDelegate;
- (void)cancelAutoResumeAfterDate:(id)arg1;
- (void)cancelCTMCaptureForSettings:(id)arg1;
- (void)cancelDelayedFocusAndExposureReset;
- (bool)captureStillImageWithRequest:(id)arg1 error:(id*)arg2;
- (void)changeExposureTargetBias:(float)arg1;
- (void)changeToAspectRatioCrop:(long long)arg1;
- (void)changeToFlashMode:(long long)arg1;
- (int)changeToGraphConfiguration:(id)arg1 zoomFactor:(double)arg2 minimumExecutionTime:(double)arg3 outputToExternalStorage:(bool)arg4;
- (void)changeToLockedExposure;
- (void)changeToLockedFocusAndExposure;
- (void)changeToLowLightMode:(long long)arg1;
- (void)changeToPanoramaDirection:(long long)arg1;
- (void)changeToPanoramaEncodingBehavior:(long long)arg1;
- (void)changeToPortraitAperture:(double)arg1;
- (void)changeToPortraitLightingEffectStrength:(double)arg1;
- (void)changeToPreviewConfiguration:(unsigned long long)arg1;
- (void)changeToPreviewDisabled;
- (void)changeToPreviewEnabledWithConfiguration:(unsigned long long)arg1;
- (void)changeToPreviewFilters:(id)arg1;
- (void)changeToTimelapseCaptureRate:(float)arg1;
- (void)changeToTorchLevel:(float)arg1;
- (void)changeToTorchMode:(long long)arg1;
- (void)changeToVideoHDRSuspended:(bool)arg1;
- (void)changeToVideoRecordingCaptureOrientation:(long long)arg1;
- (void)changeToVideoZoomFactor:(double)arg1 graphConfiguration:(id)arg2;
- (bool)commitCTMCaptureWithRequest:(id)arg1 error:(id*)arg2;
- (id)configurationDelegate;
- (unsigned long long)currentBurstCount;
- (id)currentBurstIntervalometer;
- (id)currentCameraSystemPressureState;
- (void)dealloc;
- (void)endCTMVideoCapture;
- (id)exposureDelegate;
- (id)facesDelegate;
- (unsigned long long)flashCompromise;
- (void)focusAndExposeAtPoint:(struct CGPoint { double x1; double x2; })arg1 lockFocus:(bool)arg2 resetExposureTargetBias:(bool)arg3;
- (void)focusAtCenterForVideoRecording;
- (void)focusAtPoint:(struct CGPoint { double x1; double x2; })arg1 lockFocus:(bool)arg2;
- (id)focusDelegate;
- (void)forceDisableSubjectAreaChangeMonitoring;
- (void)handleSessionDidStartRunning;
- (void)handleSessionDidStopRunning;
- (void)handleSessionInterruptionEnded;
- (void)handleSessionInterruptionForReason:(long long)arg1;
- (bool)hasActiveCTMVideoCaptures;
- (id)histogramDelegate;
- (id)initWithCaptureConfiguration:(id)arg1 zoomFactor:(double)arg2 outputToExternalStorage:(bool)arg3 engineOptions:(long long)arg4 locationController:(id)arg5 motionController:(id)arg6 burstController:(id)arg7 protectionController:(id)arg8 powerController:(id)arg9 irisVideoController:(id)arg10 remoteShutterController:(id)arg11;
- (bool)initiateCTMCaptureWithSettings:(id)arg1 error:(id*)arg2;
- (id)interruptionDelegate;
- (bool)intervalometer:(id)arg1 didGenerateCaptureRequest:(id)arg2;
- (void)intervalometer:(id)arg1 didReachMaximumCountWithRequest:(id)arg2;
- (void)invalidateController;
- (bool)isAutoMacroActive;
- (bool)isAutoMacroSuggested;
- (bool)isCaptureAvailable;
- (bool)isCapturingBurst;
- (bool)isCapturingCTMVideo;
- (bool)isCapturingLivePhotoVideo;
- (bool)isCapturingLowLightImage;
- (bool)isCapturingPanorama;
- (bool)isCapturingStandardVideo;
- (bool)isCapturingStillImage;
- (bool)isCapturingTimelapse;
- (bool)isCapturingVideo;
- (bool)isConfigurationAvailable;
- (bool)isFlashActive;
- (bool)isFlashAvailable;
- (bool)isHDRSuggested;
- (bool)isInterrupted;
- (bool)isPreviewDisabled;
- (bool)isRampingVideoZoom;
- (bool)isTorchActive;
- (bool)isTorchAvailable;
- (void)lockFocusAtLensPosition:(float)arg1 completionBlock:(id /* block */)arg2;
- (void)logCaptureAvailabilityDescription;
- (long long)lowLightStatus;
- (id)machineReadableCodeDelegate;
- (void)metadataWasRecognized:(id)arg1 forMetadataObjectTypes:(id)arg2 deviceFormat:(id)arg3;
- (void)notifyTimelapseControllerFinishedUpdatingWithLocation;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (id)panoramaChangeDelegate;
- (void)panoramaConfigurationDidChangeWithImageQueue:(struct _CAImageQueue { }*)arg1 direction:(long long)arg2;
- (id)panoramaPreviewView;
- (void)panoramaRequest:(id)arg1 didCompleteCaptureWithResult:(id)arg2;
- (void)panoramaRequest:(id)arg1 didReceiveNotification:(long long)arg2;
- (void)panoramaRequestDidStartCapturing:(id)arg1;
- (void)panoramaRequestDidStopCapturing:(id)arg1 interrupted:(bool)arg2;
- (void)pauseCapturingStillImagePairedVideo;
- (void)prepareDeferredProcessingWithStillImageRequest:(id)arg1;
- (void)prepareToCaptureStillImageAtSystemTime:(long long)arg1;
- (id)previewLayerOverCaptureStatusDelegate;
- (void)queryTimelapseDimensionsWithCompletionBlock:(id /* block */)arg1;
- (void)queryVideoDimensionsWithCompletionBlock:(id /* block */)arg1;
- (id)recoveryDelegate;
- (void)registerCaptureService:(id)arg1;
- (void)registerEffectsPreviewSampleBufferDelegate:(id)arg1;
- (void)registerVideoThumbnailContentsDelegate:(id)arg1;
- (void)resetFocusAndExposure;
- (id)resultDelegate;
- (void)resumeCapturingStillImagePairedVideo;
- (id)runningDelegate;
- (void)setAutoMacroActive:(bool)arg1;
- (void)setAutoMacroSuggested:(bool)arg1;
- (void)setAvailabilityDelegate:(id)arg1;
- (void)setBurstDelegate:(id)arg1;
- (void)setCapturingTimelapse:(bool)arg1 forDevicePosition:(long long)arg2;
- (void)setCinematicFocusAtPoint:(struct CGPoint { double x1; double x2; })arg1 useFixedOpticalFocus:(bool)arg2 useHardFocus:(bool)arg3;
- (void)setCinematicFocusForMetadataObject:(id)arg1 atPoint:(struct CGPoint { double x1; double x2; })arg2 useFixedOpticalFocus:(bool)arg3 useHardFocus:(bool)arg4;
- (void)setConfigurationDelegate:(id)arg1;
- (void)setExposureDelegate:(id)arg1;
- (void)setFacesDelegate:(id)arg1;
- (void)setFallbackPrimaryConstituentDeviceSelection:(long long)arg1;
- (void)setFocusDelegate:(id)arg1;
- (void)setHistogramDelegate:(id)arg1;
- (void)setInterruptionDelegate:(id)arg1;
- (void)setMachineReadableCodeDelegate:(id)arg1;
- (void)setPanoramaChangeDelegate:(id)arg1;
- (void)setPreviewLayerOverCaptureStatusDelegate:(id)arg1;
- (void)setRampingVideoZoom:(bool)arg1;
- (void)setRecoveryDelegate:(id)arg1;
- (void)setResultDelegate:(id)arg1;
- (void)setRunningDelegate:(id)arg1;
- (void)setShallowDepthOfFieldStatusDelegate:(id)arg1;
- (void)setStillImageCapturingVideoDelegate:(id)arg1;
- (void)setSuggestionDelegate:(id)arg1;
- (void)setSystemPressureStateDelegate:(id)arg1;
- (void)setTextRegionResultDelegate:(id)arg1;
- (void)setZoomDelegate:(id)arg1;
- (id)shallowDepthOfFieldStatusDelegate;
- (bool)shouldAllowUserToChangeFocusAndExposure;
- (void)startCaptureSession;
- (void)startCaptureSessionWithRetryCount:(unsigned long long)arg1 retryInterval:(double)arg2 logReason:(id)arg3 completion:(id /* block */)arg4;
- (bool)startCapturingBurstWithRequest:(id)arg1 error:(id*)arg2;
- (bool)startCapturingPanoramaWithRequest:(id)arg1 error:(id*)arg2;
- (bool)startCapturingVideoWithRequest:(id)arg1 error:(id*)arg2;
- (void)startMonitoringForHDRSuggestions;
- (void)startRampToVideoZoomFactor:(double)arg1 withDuration:(double)arg2 zoomRampTuning:(long long)arg3 graphConfiguration:(id)arg4;
- (void)startRampToVideoZoomFactor:(double)arg1 withRate:(float)arg2 graphConfiguration:(id)arg3;
- (id)stillImageCapturingVideoDelegate;
- (void)stillImageRequest:(id)arg1 didCompleteStillImageCaptureWithResult:(id)arg2;
- (void)stillImageRequest:(id)arg1 didCompleteVideoCaptureWithResult:(id)arg2;
- (void)stillImageRequest:(id)arg1 didStopCapturingCTMVideoForCoordinationInfo:(id)arg2;
- (void)stillImageRequest:(id)arg1 didStopCapturingLivePhotoVideoForCoordinationInfo:(id)arg2;
- (void)stillImageRequestDidBeginCaptureBeforeResolvingSettings:(id)arg1;
- (void)stillImageRequestDidCompleteCapture:(id)arg1 error:(id)arg2;
- (void)stillImageRequestDidStartCapturing:(id)arg1 resolvedSettings:(id)arg2;
- (void)stillImageRequestDidStopCapturingStillImage:(id)arg1;
- (void)stillImageRequestDidUnblockResponsiveCapture:(id)arg1;
- (void)stillImageRequestWillStartCapturingVideo:(id)arg1;
- (void)stopCaptureSession;
- (void)stopCaptureSessionWithCompletion:(id /* block */)arg1;
- (void)stopCapturingBurst;
- (bool)stopCapturingPanoramaInterrupted:(bool)arg1;
- (bool)stopCapturingVideo;
- (void)stopMonitoringForHDRSuggestions;
- (void)stopRampToVideoZoomFactor;
- (id)suggestionDelegate;
- (id)systemPressureStateDelegate;
- (id)textRegionResultDelegate;
- (void)unregisterCaptureService:(id)arg1;
- (void)unregisterEffectsPreviewSampleBufferDelegate:(id)arg1;
- (void)unregisterVideoThumbnailContentsDelegate:(id)arg1;
- (void)updateRealtimeMetadataConfigurationForGraphConfiguration:(id)arg1 isCapturing:(bool)arg2;
- (id)videoPreviewLayer;
- (void)videoRequest:(id)arg1 didCompleteCaptureWithResult:(id)arg2;
- (void)videoRequestDidStartCapturing:(id)arg1;
- (void)videoRequestDidStopCapturing:(id)arg1;
- (void)willPerformRecoveryFromRuntimeError:(id)arg1;
- (id)zoomDelegate;

@end
