
@interface PLNotification : NSObject {
    NSString * _albumCloudGUID;
    NSString * _albumTitle;
    NSString * _albumUUID;
    bool  _allMultipleAssetIsMine;
    long long  _assetCount;
    NSMutableSet * _assetUUIDs;
    long long  _commentCount;
    NSDate * _commentDate;
    bool  _commentIsCaption;
    NSString * _commentText;
    bool  _containsBatchFirstKnownAsset;
    NSDate * _date;
    NSString * _destinationURLString;
    long long  _exitRetentionPolicy;
    short  _exitType;
    NSDate * _expirationDate;
    NSString * _firstCommentGUID;
    bool  _forMultipleAsset;
    NSString * _interestingMemoryUUID;
    int  _invitationState;
    bool  _isMixedType;
    NSString * _keyMomentShareUUID;
    NSMutableSet * _lowResThumbAssetUUIDs;
    bool  _mainAssetIsMine;
    bool  _mainAssetIsVideo;
    NSString * _mainAssetUUID;
    NSString * _momentShareOwnerLocalizedName;
    NSArray * _momentShareUUIDs;
    NSDate * _notificationDeliveryDate;
    NSString * _notificationSubtitle;
    NSString * _notificationTitle;
    long long  _notificationType;
    bool  _offerToReportAsJunk;
    NSDate * _originalDate;
    NSString * _participantName;
    NSString * _photoLibraryURLString;
    NSString * _photosBatchID;
    NSMutableSet * _placeholderAssetUUIDs;
    NSString * _scopeIdentifier;
    NSString * _senderEmailAddress;
    NSString * _senderName;
    NSMutableSet * _senderNames;
    NSString * _suggestedCMMUUID;
    bool  _suppressAlert;
    NSData * _thumbnailImageData;
    unsigned long long  _trashedAssetItemCount;
    unsigned long long  _trashedAssetPhotoCount;
    unsigned long long  _trashedAssetVideoCount;
}

@property (readonly, copy) NSString *albumCloudGUID;
@property (readonly, copy) NSString *albumUUID;
@property (readonly) bool allAssetsAreFullResolution;
@property (readonly) bool canMergeWithPersistedNotifications;
@property (readonly) NSString *commentText;
@property (readonly) double completionPercentage;
@property (readonly, copy) NSDate *date;
@property (readonly) NSString *destinationURLString;
@property (readonly) NSDictionary *dictionaryRepresentation;
@property (readonly, copy) NSDate *expirationDate;
@property (readonly) bool hasThumbnail;
@property (readonly) NSString *interestingMemoryUUID;
@property (readonly) NSString *keyObjectUUID;
@property (readonly, copy) NSString *mainAssetUUID;
@property (readonly) NSString *message;
@property (copy) NSDate *notificationDeliveryDate;
@property (readonly) long long notificationType;
@property (readonly) bool offerToReportAsJunk;
@property (copy) NSDate *originalDate;
@property (readonly) NSString *photoLibraryURLString;
@property (readonly) NSString *photosBatchID;
@property (readonly) NSString *requestIdentifier;
@property (readonly, copy) NSString *senderEmailAddress;
@property bool suppressAlert;
@property (readonly) NSArray *suppressionContexts;
@property (readonly) bool thumbnailAssetIsPlaceholder;
@property (retain) NSData *thumbnailImageData;
@property (readonly) NSString *title;

+ (id)_UNCategoryFromNotificationType:(long long)arg1;
+ (id)requestIdentifierByNotificationType:(long long)arg1 keyObjectUUID:(id)arg2 photosBatchID:(id)arg3;

- (void).cxx_destruct;
- (id)_initWithCommentsCount:(long long)arg1 commentDate:(id)arg2 firstCommentGUID:(id)arg3 toAssetWithUUID:(id)arg4 photosBatchID:(id)arg5 mainAssetIsMine:(bool)arg6 mainAssetIsVideo:(bool)arg7 inAlbumWithTitle:(id)arg8 albumUUID:(id)arg9 albumCloudGUID:(id)arg10 assetUUIDs:(id)arg11 placeholderAssetUUIDs:(id)arg12 lowResThumbAssetUUIDs:(id)arg13;
- (id)_initWithLikesCount:(long long)arg1 commentDate:(id)arg2 firstCommentGUID:(id)arg3 toAssetWithUUID:(id)arg4 photosBatchID:(id)arg5 mainAssetIsMine:(bool)arg6 mainAssetIsVideo:(bool)arg7 inAlbumWithTitle:(id)arg8 albumUUID:(id)arg9 albumCloudGUID:(id)arg10 assetUUIDs:(id)arg11 placeholderAssetUUIDs:(id)arg12 lowResThumbAssetUUIDs:(id)arg13 senderNames:(id)arg14 forMultipleAsset:(bool)arg15 allMultipleAssetIsMine:(bool)arg16 isMixedType:(bool)arg17;
- (id)_initWithPhotosAddedNotification:(id)arg1 mergedWithNotification:(id)arg2;
- (id)_initWithPhotosAddedNotification:(id)arg1 mergedWithNotificationDictionary:(id)arg2;
- (id)_initWithType:(long long)arg1;
- (id)albumCloudGUID;
- (id)albumUUID;
- (bool)allAssetsAreFullResolution;
- (bool)assetWithUUID:(id)arg1 didChangePlaceholderKindTo:(short)arg2 fromOldKind:(short)arg3;
- (bool)canMergeWithPersistedNotifications;
- (id)commentText;
- (double)completionPercentage;
- (id)date;
- (id)description;
- (id)destinationURLString;
- (id)dictionaryRepresentation;
- (id)expirationDate;
- (bool)hasThumbnail;
- (id)init;
- (id)initCMMInvitationReadyToViewWithMomentShare:(id)arg1;
- (id)initCMMInvitationWithMomentShare:(id)arg1;
- (id)initForPhotosChallengeNewQuestions;
- (id)initForPhotosChallengeSubmission;
- (id)initForSharedLibraryExitInitatedByOwnerWithType:(short)arg1 retentionPolicy:(long long)arg2 ownerName:(id)arg3;
- (id)initForSharedLibraryParticipantAssetTrashNotificationWithTrashedPhotoCount:(unsigned long long)arg1 videoCount:(unsigned long long)arg2 itemCount:(unsigned long long)arg3;
- (id)initForSharedLibraryScopeAcceptWithLibraryScopeIdentifier:(id)arg1 participantName:(id)arg2;
- (id)initForSharedLibrarySuggestions;
- (id)initWithAssetAdded:(id)arg1 atIndex:(unsigned long long)arg2 toAlbum:(id)arg3;
- (id)initWithAssetsAdded:(id)arg1 toAlbum:(id)arg2;
- (id)initWithCommentAdded:(id)arg1;
- (id)initWithExpiringMomentShareUUIDs:(id)arg1 thumbnailImageData:(id)arg2 notificationTitle:(id)arg3 notificationSubtitle:(id)arg4;
- (id)initWithExpiringMomentShares:(id)arg1;
- (id)initWithInterestingMemoryNotificationWithMemoryUUID:(id)arg1 keyAssetUUID:(id)arg2 notificationTitle:(id)arg3 notificationSubtitle:(id)arg4 photoLibraryURLString:(id)arg5;
- (id)initWithInvitationAlbum:(id)arg1;
- (id)initWithInvitationRecordStatusChanged:(id)arg1;
- (id)initWithLikeAdded:(id)arg1;
- (id)initWithMultipleContributorEnabledForAlbum:(id)arg1;
- (id)initWithSuggestedCMMUUID:(id)arg1 keyAssetUUID:(id)arg2 notificationTitle:(id)arg3 notificationSubtitle:(id)arg4;
- (id)interestingMemoryUUID;
- (bool)isCommentPiggyBackedOnPhotosAddedNotification;
- (id)keyObjectUUID;
- (id)mainAssetUUID;
- (id)message;
- (id)notificationByMergingWithNotification:(id)arg1;
- (id)notificationByMergingWithNotificationDictionary:(id)arg1;
- (id)notificationDeliveryDate;
- (long long)notificationType;
- (bool)offerToReportAsJunk;
- (id)originalDate;
- (id)photoLibraryURLString;
- (id)photosBatchID;
- (id)requestIdentifier;
- (id)senderEmailAddress;
- (void)setNotificationDeliveryDate:(id)arg1;
- (void)setOriginalDate:(id)arg1;
- (void)setSuppressAlert:(bool)arg1;
- (void)setThumbnailImageData:(id)arg1;
- (bool)suppressAlert;
- (id)suppressionContexts;
- (bool)thumbnailAssetIsPlaceholder;
- (id)thumbnailImageData;
- (id)title;

@end
