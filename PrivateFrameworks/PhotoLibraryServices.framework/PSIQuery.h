
@interface PSIQuery : NSObject {
    NSSet * _audioIdentifiers;
    PSIParse * _baseParse;
    bool  _baseParseCouldHaveResults;
    NSArray * _datedParses;
    NSArray * _dedupedGroupResults;
    <PSIQueryDelegate> * _delegate;
    _Atomic bool  _didStart;
    double  _elapsedTimeQueryParsing;
    double  _elapsedTimeResultGenerationAndIntersections;
    bool  _enableExactMatchPrioritization;
    NSMutableDictionary * _groupIdsByTokenKey;
    NSSet * _humanActionIdentifiers;
    NSArray * _identifierTokens;
    NSArray * _implicitelyTokenizedParses;
    NSArray * _implicitlyTokenizedDatedParses;
    bool  _implicitlyTokenizedParsesCouldHaveResults;
    bool  _includeAllFruitfulMatchedGroups;
    bool  _includeAllQueryMatchedGroups;
    _Atomic bool  _isCanceled;
    bool  _legacyDisableTopAssetsAndTopCollections;
    unsigned long long  _libraryScope;
    unsigned long long  _mergeFilterTokenAssetIDsIntervalID;
    NSArray * _nextKeywordSuggestions;
    unsigned long long  _numberOfNextKeywordSuggestionToProcess;
    NSSet * _personIdentifiers;
    NSDate * _queryBeginParsingTime;
    NSDate * _queryBeginResultGenerationAndIntersectionsTime;
    NSArray * _queryTokens;
    NSSet * _sceneIdentifiers;
    NSSet * _scopedSearchIdentifiers;
    unsigned long long  _searchResultTypes;
    unsigned long long  _searchSuggestionType;
    NSString * _searchText;
    NSMutableSet * _socialGroupExtendedAssetIds;
    NSMutableSet * _socialGroupExtendedCollectionIds;
    NSArray * _socialGroupPersonIdentifiers;
    NSDictionary * _substitutions;
    NSDictionary * _substitutionsByStringToken;
    unsigned long long  _suggestionLimit;
    bool  _useWildcardText;
    unsigned long long  _wordEmbeddingMode;
    NSArray * _wordEmbeddingParses;
}

@property (nonatomic, copy) NSSet *audioIdentifiers;
@property (getter=isCanceled, readonly) bool canceled;
@property (nonatomic, copy) NSArray *dedupedGroupResults;
@property (nonatomic) <PSIQueryDelegate> *delegate;
@property (nonatomic) double elapsedTimeQueryParsing;
@property (nonatomic) double elapsedTimeResultGenerationAndIntersections;
@property (nonatomic, readonly) bool enableExactMatchPrioritization;
@property (nonatomic, copy) NSSet *humanActionIdentifiers;
@property (nonatomic, readonly) bool implicitTokenizationIncludeBaseParseResults;
@property (nonatomic) bool includeAllFruitfulMatchedGroups;
@property (nonatomic) bool includeAllQueryMatchedGroups;
@property (nonatomic) bool legacyDisableTopAssetsAndTopCollections;
@property (nonatomic) unsigned long long libraryScope;
@property (nonatomic) unsigned long long mergeFilterTokenAssetIDsIntervalID;
@property (nonatomic, retain) NSArray *nextKeywordSuggestions;
@property (nonatomic) unsigned long long numberOfNextKeywordSuggestionToProcess;
@property (nonatomic, copy) NSSet *personIdentifiers;
@property (nonatomic, retain) NSDate *queryBeginParsingTime;
@property (nonatomic, retain) NSDate *queryBeginResultGenerationAndIntersectionsTime;
@property (nonatomic, readonly, copy) NSArray *queryTokens;
@property (nonatomic, copy) NSSet *sceneIdentifiers;
@property (nonatomic, readonly, copy) NSSet *scopedSearchIdentifiers;
@property (nonatomic, readonly) unsigned long long searchResultTypes;
@property (nonatomic, readonly) unsigned long long searchSuggestionType;
@property (nonatomic, readonly, copy) NSString *searchText;
@property (nonatomic, copy) NSSet *socialGroupExtendedAssetIds;
@property (nonatomic, copy) NSSet *socialGroupExtendedCollectionIds;
@property (nonatomic, retain) NSDictionary *substitutions;
@property (nonatomic, readonly) unsigned long long suggestionLimit;
@property (nonatomic, readonly) PSITokenizer *tokenizer;
@property (nonatomic, readonly) bool useWildcardText;
@property (nonatomic) unsigned long long wordEmbeddingMode;

+ (void)_aggregateAssetIdsOnFilterGroupsInGroupArrays:(id)arg1 searchTokens:(id)arg2 groupIdToOriginalAssetIdsMap:(id*)arg3;
+ (id)_indexesOfFilterTokensInSearchTokens:(id)arg1;
+ (id)_indexesToRemoveForDuplicatedFilterGroupsinGroupArrays:(id)arg1 searchTokens:(id)arg2;
+ (void)_restoreAssetIdsForGroupsInGroupArrays:(id)arg1 atRemovalIndexes:(id)arg2 groupIdToOriginalAssetIdsMap:(id)arg3 searchTokens:(id)arg4;
+ (bool)_shouldApplyFilterTokensForGroupArrays:(id)arg1 searchTokens:(id)arg2 filterGroupIds:(id)arg3;
+ (void)bootstrap;
+ (id)dateAttributesFromToken:(id)arg1;
+ (id)dateFilterByCombiningDateFilter:(id)arg1 withDateFilter:(id)arg2;
+ (id)dateFilterWithAttributes:(id)arg1;
+ (id)dateFilterWithAttributes:(id)arg1 andAttributes:(id)arg2;
+ (id)datedParsesWithParses:(id)arg1;
+ (bool)enumerateDatedParsesWithParse:(id)arg1 currentTokenIndex:(unsigned long long)arg2 potentialComboAttributes:(id)arg3 usingBlock:(id /* block */)arg4;
+ (id)parsedDatesFromText:(id)arg1;
+ (id)searchResultFromArrayOfGroupArrays:(id)arg1 searchTokens:(id)arg2 searchResultTypes:(unsigned long long)arg3 suggestionType:(unsigned long long)arg4 scopedSearchIdentifiers:(id)arg5 normalizedSearchText:(id)arg6 enableExactMatchPrioritization:(bool)arg7 includeAllQueryMatchedGroups:(bool)arg8 includeAllFruitfulMatchedGroups:(bool)arg9 suggestionLimit:(unsigned long long)arg10 query:(id)arg11 delegate:(id)arg12;
+ (struct _NSRange { unsigned long long x1; unsigned long long x2; })searchTextExtendedRangeForParse:(id)arg1;
+ (bool)tokenIsEligibleForDateParsing:(id)arg1;

- (void).cxx_destruct;
- (bool)_enumerateImplicitlyTokenizedParsesWithBaseParse:(id)arg1 usingBlock:(id /* block */)arg2;
- (struct __CFSet { }*)_idsOfGroupsMatchingString:(id)arg1 categories:(id)arg2 textIsSearchable:(bool)arg3 isFilterTypeToken:(bool)arg4;
- (struct __CFSet { }*)_idsOfGroupsMatchingToken:(id)arg1;
- (void)_postProcessPersonGroupsInGroupArrays:(id)arg1;
- (id)audioIdentifiers;
- (void)bootstrap;
- (void)cancel;
- (void)computeSuggestions;
- (id)dedupedGroupResults;
- (id)delegate;
- (id)description;
- (double)elapsedTimeQueryParsing;
- (double)elapsedTimeResultGenerationAndIntersections;
- (bool)enableExactMatchPrioritization;
- (void)enumerateParsesWithMode:(unsigned long long)arg1 usingBlock:(id /* block */)arg2;
- (id)humanActionIdentifiers;
- (bool)implicitTokenizationIncludeBaseParseResults;
- (id)implicitlyTokenizedParsesWithBaseParse:(id)arg1;
- (bool)includeAllFruitfulMatchedGroups;
- (bool)includeAllQueryMatchedGroups;
- (id)initWithQueryTokens:(id)arg1 searchText:(id)arg2 useWildcardText:(bool)arg3 delegate:(id)arg4 libraryScope:(unsigned long long)arg5;
- (id)initWithQueryTokensV2:(id)arg1 searchText:(id)arg2 scopedSearchIdentifiers:(id)arg3 searchResultTypes:(unsigned long long)arg4 searchSuggestionType:(unsigned long long)arg5 useWildcardText:(bool)arg6 enableExactMatchPrioritization:(bool)arg7 delegate:(id)arg8 libraryScope:(unsigned long long)arg9 suggestionLimit:(unsigned long long)arg10;
- (bool)isCanceled;
- (bool)legacyDisableTopAssetsAndTopCollections;
- (unsigned long long)libraryScope;
- (unsigned long long)mergeFilterTokenAssetIDsIntervalID;
- (id)nextKeywordSuggestions;
- (unsigned long long)numberOfNextKeywordSuggestionToProcess;
- (id)personIdentifiers;
- (void)processDates;
- (void)processImplicitTokenization;
- (id)processParse:(id)arg1 disableWildcardMatchesForUserControlledCategories:(bool)arg2;
- (id)processParseV2:(id)arg1;
- (void)processWordEmbeddings;
- (id)queryBeginParsingTime;
- (id)queryBeginResultGenerationAndIntersectionsTime;
- (id)queryTokens;
- (bool)recursiveAddToGroupResults:(id)arg1 aggregate:(id)arg2 atIndex:(unsigned long long)arg3 outOf:(unsigned long long)arg4 inGroupArrays:(id)arg5 dateFilter:(id)arg6 datedTokens:(id)arg7 disableWildcardMatchesForUserControlledCategories:(bool)arg8;
- (id)runLookupIdentifierQuery;
- (void)runUserQuery:(id)arg1 resultsHandlerV2:(id /* block */)arg2;
- (void)runWithResultsHandler:(id /* block */)arg1 disableWildcardMatchesForUserControlledCategories:(bool)arg2;
- (void)runWithResultsHandlerV2:(id /* block */)arg1;
- (id)sceneIdentifiers;
- (id)scopedSearchIdentifiers;
- (unsigned long long)searchResultTypes;
- (unsigned long long)searchSuggestionType;
- (id)searchText;
- (void)setAudioIdentifiers:(id)arg1;
- (void)setDedupedGroupResults:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setElapsedTimeQueryParsing:(double)arg1;
- (void)setElapsedTimeResultGenerationAndIntersections:(double)arg1;
- (void)setHumanActionIdentifiers:(id)arg1;
- (void)setIncludeAllFruitfulMatchedGroups:(bool)arg1;
- (void)setIncludeAllQueryMatchedGroups:(bool)arg1;
- (void)setLegacyDisableTopAssetsAndTopCollections:(bool)arg1;
- (void)setLibraryScope:(unsigned long long)arg1;
- (void)setMergeFilterTokenAssetIDsIntervalID:(unsigned long long)arg1;
- (void)setNextKeywordSuggestions:(id)arg1;
- (void)setNumberOfNextKeywordSuggestionToProcess:(unsigned long long)arg1;
- (void)setPersonIdentifiers:(id)arg1;
- (void)setQueryBeginParsingTime:(id)arg1;
- (void)setQueryBeginResultGenerationAndIntersectionsTime:(id)arg1;
- (void)setSceneIdentifiers:(id)arg1;
- (void)setSocialGroupExtendedAssetIds:(id)arg1;
- (void)setSocialGroupExtendedCollectionIds:(id)arg1;
- (void)setSubstitutions:(id)arg1;
- (void)setWordEmbeddingMode:(unsigned long long)arg1;
- (id)socialGroupExtendedAssetIds;
- (id)socialGroupExtendedCollectionIds;
- (id)substitutions;
- (unsigned long long)suggestionLimit;
- (id)suggestionWhitelistedScenes;
- (id)tokenizer;
- (bool)useWildcardText;
- (unsigned long long)wordEmbeddingMode;

@end
