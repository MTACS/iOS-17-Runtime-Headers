
@interface PLInternalResource : PLManagedObject <PLCloudDeletable, PLResource, PLResourceAvailabilityMarking, PLValidatesResourceModel> {
    PLInternalResourceSidecarRepresentation * _sidecarRepresentation;
}

@property (nonatomic, retain) PLManagedAsset *asset;
@property (nonatomic, readonly, copy) <PLAssetID> *assetID;
@property (nonatomic, retain) NSString *cloudDeleteAssetUUIDWithResourceType;
@property (nonatomic) short cloudDeleteState;
@property (readonly) long long cloudDeletionType;
@property (nonatomic, retain) NSDate *cloudLastOnDemandDownloadDate;
@property (nonatomic, retain) NSDate *cloudLastPrefetchDate;
@property (nonatomic) short cloudLocalState;
@property (nonatomic, retain) NSDate *cloudMasterDateCreated;
@property (nonatomic) short cloudPrefetchCount;
@property (nonatomic, retain) NSDate *cloudPrunedAt;
@property (nonatomic) int cloudSourceType;
@property (readonly, copy) NSString *cloudUUIDForDeletion;
@property (nonatomic, retain) NSString *codecFourCharCodeName;
@property (nonatomic, retain) NSString *compactUTI;
@property (nonatomic, readonly) unsigned long long cplType;
@property (nonatomic) long long dataLength;
@property (nonatomic, readonly) <PLResourceDataStore> *dataStore;
@property (nonatomic) short dataStoreClassID;
@property (nonatomic, readonly) <PLResourceDataStoreKey> *dataStoreKey;
@property (nonatomic, copy) NSData *dataStoreKeyData;
@property (nonatomic) long long dataStoreSubtype;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) long long estimatedDataLength;
@property (nonatomic) long long fileID;
@property (nonatomic, retain) PLFileSystemBookmark *fileSystemBookmark;
@property (nonatomic, retain) PLFileSystemVolume *fileSystemVolume;
@property (nonatomic, retain) NSString *fingerprint;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isDerivative;
@property (nonatomic, readonly) bool isOriginalResource;
@property (nonatomic) short localAvailability;
@property (nonatomic) short localAvailabilityTarget;
@property (nonatomic, readonly) unsigned int orientation;
@property (nonatomic, readonly) long long orientedHeight;
@property (nonatomic, readonly) long long orientedWidth;
@property (nonatomic) long long ptpTrashedState;
@property (nonatomic, readonly) int qualitySortValue;
@property (nonatomic) unsigned int recipeID;
@property (nonatomic) short remoteAvailability;
@property (nonatomic) short remoteAvailabilityTarget;
@property (nonatomic) unsigned int resourceType;
@property (nonatomic, readonly) float scale;
@property (nonatomic, retain) NSNumber *sidecarIndex;
@property (nonatomic, readonly) PLInternalResourceSidecarRepresentation *sidecarRepresentation;
@property (readonly) Class superclass;
@property (nonatomic, retain) PLCloudMaster *transientCloudMaster;
@property (nonatomic, retain) NSDate *trashedDate;
@property (nonatomic) short trashedState;
@property (nonatomic, retain) PLUniformTypeIdentifier *uniformTypeIdentifier;
@property (nonatomic) long long unorientedHeight;
@property (nonatomic) long long unorientedWidth;
@property (nonatomic) short utiConformanceHint;
@property (nonatomic) unsigned int version;

+ (id)_obsoleteResourceRecipesWithCPLOff;
+ (bool)batchResetFileIDInManagedObjectContext:(id)arg1 error:(id*)arg2;
+ (unsigned long long)bytesForAllResourcesInLibrary:(id)arg1;
+ (unsigned long long)bytesNeededToDownloadOriginalResourcesInLibrary:(id)arg1;
+ (long long)cloudDeletionTypeForTombstone:(id)arg1;
+ (id)cloudUUIDKeyForDeletion;
+ (unsigned long long)cplExpungedStateForTrashedState:(short)arg1;
+ (bool)deleteObsoleteResourcesInManagedObjectContext:(id)arg1 error:(id*)arg2;
+ (id)entityName;
+ (id)insertResourceForAssetObjectID:(id)arg1 resourceIdentity:(id)arg2 inManagedObjectContext:(id)arg3;
+ (id)insertResourceForMasterObjectID:(id)arg1 withExternalCPLResource:(id)arg2 inManagedObjectContext:(id)arg3;
+ (bool)isCPLJPEGThumbnailResource:(id)arg1;
+ (id)listOfSyncedProperties;
+ (id)nonOriginalCPLResourceTypes;
+ (id)originalCPLResourceTypes;
+ (id)originalCPLResourceTypesForAsset;
+ (id)originalCPLResourceTypesForMaster;
+ (short)plTrashedStateForCPLExpungedState:(unsigned long long)arg1;
+ (id)predicateForAllFullSizeResourcesLocallyAvailable;
+ (id)predicateForAllOriginalResourcesLocallyAvailable;
+ (id)predicateForAvailableResources;
+ (id)predicateForImageResourcePixelsLessOrEqual:(long long)arg1;
+ (id)predicateForMaxFilesize:(unsigned long long)arg1;
+ (id)predicateForOriginalsToDownload;
+ (id)predicateForPurgeableOriginalResources;
+ (id)predicateForResourceCreatedAfterDate:(id)arg1;
+ (id)predicateForResourceIsNotLocallyAvailableWithCPLResourceType:(unsigned long long)arg1 version:(unsigned int)arg2;
+ (id)predicateForSyndicationResourcesRequiringBackgroundDownload;
+ (id)predicateForSyndicationResourcesRequiringSanitization;
+ (id)prefetchResourcePredicateForCPLResourceType:(unsigned long long)arg1 isAssetResource:(bool)arg2 maxRetry:(unsigned long long)arg3 excludeDynamicResources:(bool)arg4 additionalResourcePredicates:(id)arg5;
+ (id)prunePredicateForCPLResourceTypes:(id)arg1;
+ (id)purgeablePushedPredicateForCPLResourceTypes:(id)arg1 urgency:(long long)arg2;
+ (void)resetCloudResourcesStateForCloudInManagedObjectContext:(id)arg1 hardReset:(bool)arg2;
+ (void)resetPrefetchStateForResourcesWithVersion:(unsigned int)arg1 cplType:(unsigned long long)arg2 assetUuids:(id)arg3 inLibrary:(id)arg4;
+ (id)resourceForManagedAsset:(id)arg1 sharedStreamsType:(unsigned int)arg2 managedObjectContext:(id)arg3 error:(id*)arg4;
+ (bool)supportsTrashedStateForResourceIdentity:(id)arg1;
+ (void)triggerBackgroundDownloadFailureForResources:(id)arg1 cloudPhotoLibraryManager:(id)arg2;

- (void).cxx_destruct;
- (id)_avAssetProxyIfTypeIsFullSizeOrOriginal;
- (bool)_colorSpaceIsNativeForDisplay;
- (id)_libraryID;
- (void)applyTrashedState:(short)arg1;
- (void)applyTrashedState:(short)arg1 trashedDate:(id)arg2;
- (id)assetID;
- (bool)canRepresentAsSidecar;
- (void)clearRequiresSanitizationFlag;
- (long long)cloudDeletionType;
- (id)cloudUUIDForDeletion;
- (bool)copyPurgeabilityFromFileURL:(id)arg1;
- (id)cplFileURL;
- (id)cplResourceForFileURL:(id)arg1 createDirectoryIfNeeded:(bool)arg2;
- (id)cplResourceForTimeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg1;
- (id)cplResourceIncludeFile:(bool)arg1;
- (id)cplResourceIncludeFile:(bool)arg1 createDirectoryIfNeeded:(bool)arg2;
- (unsigned long long)cplType;
- (id)dataStore;
- (id)dataStoreKey;
- (id)debugDescription;
- (void)deleteResource;
- (void)ensureInitialValuesForSyndication;
- (long long)estimatedDataLength;
- (id)expectedFileURL;
- (id)expungeableResourceStateRepresentation;
- (id)fileURL;
- (bool)hasInvalidFileID;
- (bool)isAdjustedFullSizeRenderResource;
- (bool)isAdjustedResource;
- (bool)isCPLAssetResource;
- (bool)isCPLJPEGThumbnail;
- (bool)isCPLMasterResource;
- (bool)isCPLOriginalResource;
- (bool)isCPLOriginalResourceAssetHasAdjustments:(bool)arg1;
- (bool)isCPLResource;
- (bool)isDefaultOrientation;
- (bool)isDerivative;
- (bool)isInCloud;
- (bool)isLocallyAvailable;
- (bool)isOriginalResource;
- (bool)isPlayableVideo;
- (bool)isRemotelyAvailable;
- (bool)isSyncableChange;
- (bool)isTrashedOrExpunged;
- (bool)isValidForJournalPersistence;
- (bool)isVirtual;
- (void)makeResourceLocallyAvailableWithCompletion:(id /* block */)arg1;
- (void)markAsLocallyAvailableWithFilePath:(id)arg1;
- (void)markAsNotLocallyAvailable;
- (void)markAsNotLocallyAvailableAfterPurge;
- (unsigned int)orientation;
- (long long)orientedHeight;
- (long long)orientedWidth;
- (id)payloadForChangedKeys:(id)arg1;
- (id)payloadID;
- (void)persistTrashedStateToFilesystem;
- (id)photosCTLDescription;
- (id)photosCTLJSONDict;
- (void)prepareForDeletion;
- (id)purgeIfPossibleReturningError:(id*)arg1;
- (int)qualitySortValue;
- (id)redactedDescription;
- (id)referenceMediaFileURL;
- (bool)repairResourceValidationErrors:(id)arg1 managedObjectContext:(id)arg2;
- (void)resetPrefetchState;
- (float)scale;
- (float)scaleGivenAssetHasAdjustments:(bool)arg1 currentWidth:(long long)arg2 currentHeight:(long long)arg3;
- (id)scopedIdentifier;
- (void)setCloudAttributesWithExternalResource:(id)arg1;
- (void)setCloudLocalState:(short)arg1;
- (void)setDataLength:(long long)arg1;
- (void)setFingerprint:(id)arg1;
- (void)setLocalAvailability:(short)arg1;
- (void)setResourceIdentity:(id)arg1 managedObjectContext:(id)arg2;
- (void)setSyndicationLocalAvailabilityWithAvailable:(bool)arg1;
- (void)setSyndicationLocalAvailabilityWithAvailable:(bool)arg1 additionalFlags:(unsigned short)arg2;
- (void)setUniformTypeIdentifier:(id)arg1;
- (bool)shouldPersistTrashedState;
- (id)sidecarRepresentation;
- (id)singleLineDescription;
- (bool)supportsCloudUpload;
- (bool)supportsTrashedState;
- (void)transitional_reconsiderLocalAvailabilityBasedOnExistingLocationOfCPLResourceAtFilePath:(id)arg1;
- (id)uniformTypeIdentifier;
- (void)updateResourceForMasterExternalCPLResource:(id)arg1 inManagedObjectContext:(id)arg2;
- (id)validateForAssetID:(id)arg1 resourceIdentity:(id)arg2;
- (id)validatedExternalResourceRepresentationUsingFileURL:(id)arg1;
- (void)willSave;

@end
