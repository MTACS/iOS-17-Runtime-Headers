
@interface PLDetectedFace : PLManagedObject <PLSyncableDetectedFace>

@property (nonatomic, copy) NSDate *adjustmentVersion;
@property (nonatomic, retain) NSDate *adjustmentVersion;
@property (nonatomic) unsigned short ageType;
@property (nonatomic, retain) PLManagedAsset *assetForFace;
@property (nonatomic, retain) PLManagedAsset *assetForTemporalDetectedFaces;
@property (nonatomic, readonly) PLManagedAsset *assetForTorso;
@property (nonatomic, readonly) bool assetVisible;
@property (nonatomic) double blurScore;
@property (nonatomic) double bodyCenterX;
@property (nonatomic) double bodyCenterY;
@property (nonatomic) double bodyHeight;
@property (nonatomic) double bodyWidth;
@property (nonatomic) double centerX;
@property (nonatomic) double centerY;
@property (nonatomic) short cloudLocalState;
@property (nonatomic) int cloudNameSource;
@property (nonatomic, retain) NSSet *clusterRejectedPersons;
@property (nonatomic) int clusterSequenceNumber;
@property (nonatomic) short confirmedFaceCropGenerationState;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSSet *detectionTraits;
@property (nonatomic) short detectionType;
@property (nonatomic) double duration;
@property (nonatomic) int effectiveNameSource;
@property (nonatomic) unsigned short ethnicityType;
@property (nonatomic) unsigned short eyeMakeupType;
@property (nonatomic) unsigned short eyesState;
@property (nonatomic) int faceAlgorithmVersion;
@property (nonatomic, retain) PLFaceCrop *faceCrop;
@property (nonatomic) unsigned short faceExpressionType;
@property (nonatomic, retain) PLDetectedFaceGroup *faceGroup;
@property (nonatomic, retain) PLDetectedFaceGroup *faceGroupBeingKeyFace;
@property (nonatomic, retain) PLDetectedFaceprint *faceprint;
@property (nonatomic) unsigned short facialHairType;
@property (nonatomic) float gazeAngle;
@property (nonatomic) double gazeCenterX;
@property (nonatomic) double gazeCenterY;
@property (nonatomic) float gazeConfidence;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } gazeRect;
@property (nonatomic, retain) NSString *gazeRectString;
@property (nonatomic) unsigned short gazeType;
@property (nonatomic) unsigned short genderType;
@property (nonatomic) unsigned short glassesType;
@property (nonatomic, retain) NSString *groupingIdentifier;
@property (nonatomic) unsigned short hairColorType;
@property (nonatomic) unsigned short hairType;
@property (nonatomic) bool hasFaceMask;
@property (nonatomic) bool hasSmile;
@property (readonly) unsigned long long hash;
@property (nonatomic) unsigned short headgearType;
@property (nonatomic) bool hidden;
@property (nonatomic) bool isInTrash;
@property (nonatomic) bool isLeftEyeClosed;
@property (nonatomic) bool isRightEyeClosed;
@property (nonatomic, readonly) bool isTrainingFace;
@property (nonatomic) unsigned short lipMakeupType;
@property (nonatomic, readonly, retain) id localID;
@property (nonatomic) bool manual;
@property (nonatomic, retain) NSString *masterIdentifier;
@property (nonatomic) int nameSource;
@property (nonatomic, retain) <PLSyncablePerson> *personBeingKeyFace;
@property (nonatomic, retain) PLPerson *personBeingKeyFace;
@property (nonatomic, retain) <PLSyncablePerson> *personForFace;
@property (nonatomic, retain) PLPerson *personForFace;
@property (nonatomic, retain) PLPerson *personForTemporalDetectedFaces;
@property (nonatomic, readonly) PLPerson *personForTorso;
@property (nonatomic) unsigned short poseType;
@property (nonatomic) double poseYaw;
@property (nonatomic) double quality;
@property (nonatomic) int qualityMeasure;
@property (nonatomic, retain) NSSet *rejectedPersons;
@property (nonatomic, retain) NSSet *rejectedPersonsNeedingFaceCrops;
@property (nonatomic) double roll;
@property (nonatomic) double size;
@property (nonatomic) unsigned short skintoneType;
@property (nonatomic) unsigned short smileType;
@property (nonatomic) long long sourceHeight;
@property (nonatomic) long long sourceWidth;
@property (nonatomic) double startTime;
@property (readonly) Class superclass;
@property (nonatomic) int trainingType;
@property (nonatomic, retain) NSString *uuid;
@property (nonatomic) short vipModelType;
@property (nonatomic) long long vuObservationID;

+ (id)_facesMatchingPredicate:(id)arg1 limit:(unsigned long long)arg2 inPhotoLibrary:(id)arg3;
+ (id)_syncableFacesToUploadInitiallyPredicate;
+ (id)assetIDsWithAllPersonsFromPersonIDs:(id)arg1 inContext:(id)arg2;
+ (void)batchFetchDetectedFacesByAssetUUIDWithAssetUUIDs:(id)arg1 predicate:(id)arg2 fetchType:(long long)arg3 library:(id)arg4 completion:(id /* block */)arg5;
+ (void)batchFetchKeyFaceByPersonObjectIDWithPersonObjectIDs:(id)arg1 library:(id)arg2 completion:(id /* block */)arg3;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })cgRectFromGazeRectString:(id)arg1;
+ (id)detectedFaceWithUUID:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)entityName;
+ (void)enumerateAssetUUIDsForSearchIndexingWithDetectedFaceUUIDs:(id)arg1 managedObjectContext:(id)arg2 assetUUIDHandler:(id /* block */)arg3;
+ (id)findExistingFaceMatchingDimension:(id)arg1 inFaces:(id)arg2 ignoreSourceAssetDimensions:(bool)arg3;
+ (id)predicateForArchival;
+ (id)predicateForFaceCountTrigger;
+ (id)predicateForFetchType:(long long)arg1;
+ (id)predicateForIncludedDetectionTypes:(id)arg1;
+ (id)predicateToExcludeBodyOnlyDetection;
+ (id)predicateToExcludeFaceDetection;
+ (id)predicatesForFacesNeedingFaceCropGeneration;
+ (id)predicatesToExcludeNonVisibleFaces;
+ (long long)resetAssetForAllSyncableFacesInManagedObjectContext:(id)arg1 error:(id*)arg2;
+ (void)resetCloudStateInPhotoLibrary:(id)arg1;
+ (id)stringFromGazeRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
+ (id)syncableFacesPredicate;
+ (id)syncableFacesToUploadInitiallyInLibrary:(id)arg1 limit:(unsigned long long)arg2;

- (void)_fixUpTemporalRelationships;
- (bool)_isFaceAndTorso;
- (bool)_isFaceOnly;
- (bool)_isNeitherFaceNorTorso;
- (bool)_isTemporalFace;
- (bool)_startTimeAndDurationAreValid;
- (void)_touchPersonForPersistenceIfNeeded;
- (void)_updateFaceGroupIfNeeded;
- (bool)_validateForOperation:(id)arg1 error:(id*)arg2;
- (void)_verifyAssetRelationship;
- (void)_verifyTorsoRelationships;
- (void)addClusterRejectedPerson:(id)arg1;
- (void)addRejectedPerson:(id)arg1;
- (void)addRejectedPersonNeedingFaceCrops:(id)arg1;
- (id)associatedAssetForFaceOrTorso:(bool)arg1 orTemporal:(bool)arg2;
- (id)associatedPersonForFaceOrTorso:(bool)arg1 orTemporal:(bool)arg2;
- (void)awakeFromInsert;
- (id)cplFullRecord;
- (id)debugLogDescription;
- (void)delete;
- (int)effectiveNameSource;
- (void)fixAssetRelationshipsForFaceTorsoOrTemporal;
- (void)fixPersonRelationshipsForFaceTorsoOrTemporal;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })gazeRect;
- (bool)isSyncableChange;
- (bool)isTorsoOnly;
- (bool)isTrainingFace;
- (bool)isValidForJournalPersistence;
- (id)localID;
- (void)migration_setAssetForTorso:(id)arg1;
- (void)migration_setPersonForTorso:(id)arg1;
- (id)namingDescription;
- (id)payloadForChangedKeys:(id)arg1;
- (id)payloadID;
- (id)payloadIDForTombstone:(id)arg1;
- (double)photosFaceRepresentationBlurScore;
- (double)photosFaceRepresentationBodyCenterX;
- (double)photosFaceRepresentationBodyCenterY;
- (double)photosFaceRepresentationBodyHeight;
- (double)photosFaceRepresentationBodyWidth;
- (double)photosFaceRepresentationCenterX;
- (double)photosFaceRepresentationCenterY;
- (long long)photosFaceRepresentationClusterSequenceNumber;
- (bool)photosFaceRepresentationHasSmile;
- (bool)photosFaceRepresentationIsLeftEyeClosed;
- (bool)photosFaceRepresentationIsRightEyeClosed;
- (id)photosFaceRepresentationLocalIdentifier;
- (double)photosFaceRepresentationQuality;
- (long long)photosFaceRepresentationQualityMeasure;
- (double)photosFaceRepresentationRoll;
- (double)photosFaceRepresentationSize;
- (long long)photosFaceRepresentationSourceHeight;
- (long long)photosFaceRepresentationSourceWidth;
- (void)removeAllPersonRelationships;
- (void)removeFaceprint;
- (void)setAssociatedAsset:(id)arg1;
- (void)setAssociatedPerson:(id)arg1;
- (void)setEffectiveNameSource:(int)arg1;
- (void)setGazeRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)supportsCloudUpload;
- (id)syncDescription;
- (bool)validForPersistenceChangedForChangedKeys:(id)arg1;
- (bool)validateForInsert:(id*)arg1;
- (bool)validateForUpdate:(id*)arg1;
- (void)willSave;

@end
