
@interface PLPerson : PLManagedObject <PLCloudDeletable, PLFileSystemMetadataPersistence, PLSyncablePerson, PLUserFeedbackSupporting> {
    short  _deleteReason;
}

@property (nonatomic) unsigned short ageType;
@property (nonatomic, readonly) NSSet *allDetectedFaces;
@property (nonatomic) short assetSortOrder;
@property (nonatomic, retain) PLDetectedFaceGroup *associatedFaceGroup;
@property (nonatomic) short cloudDeleteState;
@property (readonly) long long cloudDeletionType;
@property (nonatomic) short cloudLocalState;
@property (readonly, copy) NSString *cloudUUIDForDeletion;
@property (nonatomic) int cloudVerifiedType;
@property (nonatomic, retain) NSSet *clusterRejectedFaces;
@property (nonatomic, retain) NSDictionary *contactMatchingDictionary;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSSet *detectedFaces;
@property (nonatomic, readonly) NSSet *detectedTorsos;
@property (nonatomic) short detectionType;
@property (nonatomic, retain) NSString *displayName;
@property (nonatomic) int effectiveVerifiedType;
@property (nonatomic, readonly) int faceCount;
@property (nonatomic, retain) NSSet *faceCrops;
@property (nonatomic, retain) NSString *fullName;
@property (nonatomic) unsigned short genderType;
@property (nonatomic, readonly) bool graphVerified;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool inPersonNamingModel;
@property (nonatomic, retain) NSSet *invalidMergeCandidates;
@property (nonatomic, readonly) bool isHiddenGraphPerson;
@property (nonatomic, readonly) bool isTombstone;
@property (nonatomic, retain) PLDetectedFace *keyFace;
@property (nonatomic, readonly) bool keyFaceIsPicked;
@property (nonatomic) short keyFacePickSource;
@property (nonatomic, readonly, retain) id localID;
@property (nonatomic) unsigned int manualOrder;
@property (nonatomic, retain) NSString *mdID;
@property (nonatomic) double mergeCandidateConfidence;
@property (nonatomic, retain) NSSet *mergeCandidates;
@property (nonatomic, retain) NSSet *mergeCandidatesWithConfidence;
@property (nonatomic, retain) NSSet *mergeSourcePersons;
@property (nonatomic, retain) PLPerson *mergeTargetPerson;
@property (nonatomic, retain) NSSet *personReferences;
@property (nonatomic, retain) NSString *personUUID;
@property (nonatomic, retain) NSString *personUri;
@property (nonatomic) short questionType;
@property (nonatomic, retain) NSSet *rejectedFaces;
@property (nonatomic, retain) NSSet *rejectedFacesNeedingFaceCrops;
@property (nonatomic, retain) PLShareParticipant *shareParticipant;
@property (nonatomic, readonly) bool shouldIndexForSearch;
@property (nonatomic) unsigned short suggestedForClientType;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSSet *temporalDetectedFaces;
@property (nonatomic) int type;
@property (nonatomic, retain) NSSet *userFeedbacks;
@property (nonatomic, readonly) bool userVerified;
@property (nonatomic) int verifiedType;

+ (id)_batchFetchPersonUUIDsByAssetUUIDWithAssetUUIDs:(id)arg1 predicate:(id)arg2 inManagedObjectContext:(id)arg3 error:(id*)arg4;
+ (bool)_deleteObjectsWithFetchRequest:(id)arg1 reason:(short)arg2 moc:(id)arg3 progress:(id)arg4 error:(id*)arg5;
+ (bool)_detachFacesForPerson:(id)arg1 reason:(short)arg2 error:(id*)arg3;
+ (id)_predicateForSupportedDetectionTypesForUpload;
+ (id)_predicateForSupportedVerifiedTypesForUpload;
+ (id)_predicateToBlockHiddenGraphTypesForUpload;
+ (void)_resetMediaAnalysisAfterPersonResetInLibraryURL:(id)arg1 resetPersons:(bool)arg2 completion:(id /* block */)arg3;
+ (void)_setPersonResetInProgress:(bool)arg1 context:(id)arg2;
+ (id)_stringFromContact:(id)arg1 preferGivenName:(bool)arg2;
+ (id)allPersonsInManagedObjectContext:(id)arg1;
+ (void)batchFetchAssociatedPersonByFaceGroupUUIDWithFaceGroupUUIDs:(id)arg1 predicate:(id)arg2 library:(id)arg3 completion:(id /* block */)arg4;
+ (void)batchFetchPersonUUIDsByAssetUUIDWithAssetUUIDs:(id)arg1 predicate:(id)arg2 inManagedObjectContext:(id)arg3 completion:(id /* block */)arg4;
+ (void)batchFetchPersonsByAssetUUIDWithAssetUUIDs:(id)arg1 predicate:(id)arg2 library:(id)arg3 completion:(id /* block */)arg4;
+ (long long)cloudDeletionTypeForTombstone:(id)arg1;
+ (id)cloudUUIDKeyForDeletion;
+ (void)createAssociatedPersonForFaceGroup:(id)arg1;
+ (void)createAssociatedPersonForFaceGroup:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)createUnverifiedPersonInManagedObjectContext:(id)arg1;
+ (id)displayNameFromContact:(id)arg1;
+ (id)entityName;
+ (void)enumerateAssetUUIDsForSearchIndexingWithPersonUUID:(id)arg1 managedObjectContext:(id)arg2 assetUUIDHandler:(id /* block */)arg3;
+ (id)fetchDuplicatePersonUUIDsInManagedObjectContext:(id)arg1 error:(id*)arg2;
+ (id)fetchFinalMergeTargetPersonForPersonWithUUID:(id)arg1 context:(id)arg2 predicate:(id)arg3;
+ (id)fetchPersonCountByAssetUUIDForAssetUUIDs:(id)arg1 predicate:(id)arg2 library:(id)arg3 error:(id*)arg4;
+ (id)fullNameFromContact:(id)arg1;
+ (id)insertIntoManagedObjectContext:(id)arg1 withPersonUUID:(id)arg2 fullName:(id)arg3 verifiedType:(int)arg4;
+ (id)insertIntoPhotoLibrary:(id)arg1 withPersonUUID:(id)arg2 fullName:(id)arg3 verifiedType:(int)arg4;
+ (id)listOfSyncedProperties;
+ (bool)person:(id)arg1 isBetterMergeTargetThanPerson:(id)arg2;
+ (id)personWithUUID:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)personsMatchingPredicate:(id)arg1 fetchLimit:(unsigned long long)arg2 sortDescriptors:(id)arg3 relationshipKeyPathsForPrefetching:(id)arg4 inManagedObjectContext:(id)arg5;
+ (id)personsToPrefetchInManagedObjectContext:(id)arg1;
+ (id)personsToUploadInManagedObjectContext:(id)arg1 limit:(long long)arg2;
+ (id)personsWithPersonUri:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)personsWithPersonUris:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)personsWithUUIDs:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)predicateForIncludedDetectionTypes:(id)arg1;
+ (id)predicateForPersistence;
+ (id)predicateForPersonsNeedingFaceCropGenerationForFaceObjectID:(id)arg1;
+ (id)predicateForVisibleKeyFace;
+ (id)predicateToExcludeTorsoOnlyPerson;
+ (id)resetAllInLibrary:(id)arg1 completion:(id /* block */)arg2;
+ (bool)resetAllInLibrary:(id)arg1 error:(id*)arg2;
+ (void)resetCloudStateInPhotoLibrary:(id)arg1;

- (bool)_allowSyncOfChangeWithKey:(id)arg1;
- (void)_basicMergePersons:(id)arg1;
- (bool)_hideGraphPersonInsteadOfDelete;
- (void)_moveAllFacesToFinalMergeTarget;
- (id)_nameRelatedMetadataKeys;
- (bool)_personResetIsInProgress;
- (void)_removeSharedLibraryPeopleRulesForPerson;
- (void)_triggerPersonSyncUpdateWithLibraryServicesManager:(id)arg1;
- (void)_updateSharedLibraryPeopleRulesForTombstone;
- (id)allDetectedFaces;
- (void)applyCPLChangeForContactMatchingDictionary:(id)arg1;
- (void)basicMergePersons:(id)arg1;
- (long long)cloudDeletionType;
- (id)cloudUUIDForDeletion;
- (id)cplFullRecord;
- (id)cplPersonChange;
- (void)createUnverifiedPersonForRejectedFaceUUIDs:(id)arg1 inManagedObjectContext:(id)arg2;
- (id)debugLogDescription;
- (bool)dedupeGraphPersons:(id)arg1 error:(id*)arg2;
- (bool)deletePersonWithReason:(short)arg1;
- (void)disconnectFaceGroup;
- (int)effectiveVerifiedType;
- (id)faceGroupDescription;
- (id)finalMergeTargetPerson;
- (bool)graphVerified;
- (bool)isHiddenGraphPerson;
- (bool)isSyncableChange;
- (bool)isTombstone;
- (bool)isValidForPersistence;
- (bool)keyFaceIsPicked;
- (id)localID;
- (void)mergePersons:(id)arg1 withOptimalState:(id)arg2;
- (id)mutableFaceCrops;
- (id)mutableFaces;
- (id)mutableInvalidMergeCandidates;
- (id)mutableMergeCandidates;
- (id)mutableMergeCandidatesWithConfidence;
- (id)mutableRejectedFaces;
- (id)mutableRejectedFacesNeedingFaceCrops;
- (id)mutableTemporalFaces;
- (id)payloadForChangedKeys:(id)arg1;
- (id)payloadID;
- (id)payloadIDForTombstone:(id)arg1;
- (void)persistMetadataToFileSystemWithPathManager:(id)arg1;
- (id)pickKeyFaceOptimalStateForContactDedupeWithPersons:(id)arg1;
- (id)pickOptimalStateForUserInitiatedMergeWithPersons:(id)arg1 nominalTarget:(id)arg2;
- (void)prepareForDeletion;
- (void)prepareForUserInitiatedMergeWithPersons:(id)arg1;
- (void)rejectFaceIfPossible:(id)arg1 shouldCreateFaceCrop:(bool)arg2;
- (void)removePersistedFileSystemDataWithPathManager:(id)arg1;
- (void)resetAllFacesToDefault;
- (void)resetFacesProcessing;
- (id)reverseOrderedMergeTargetPersons;
- (void)setCPLSyncedMergeTarget:(id)arg1;
- (void)setEffectiveVerifiedType:(int)arg1;
- (void)setKeyFace:(id)arg1 pickSource:(short)arg2;
- (void)setKeyFaceToPicked;
- (bool)shouldIndexForSearch;
- (bool)supportsCloudUpload;
- (id)syncDescription;
- (bool)userVerified;
- (bool)validForPersistenceChangedForChangedKeys:(id)arg1;
- (bool)validateDetectionTypesForMergingWithPersons:(id)arg1 error:(id*)arg2;
- (void)willSave;

@end
