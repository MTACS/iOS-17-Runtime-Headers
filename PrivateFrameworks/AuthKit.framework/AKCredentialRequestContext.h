
@interface AKCredentialRequestContext : NSObject <NSCopying, NSSecureCoding> {
    double  _authSessionTimeoutInterval;
    AKAuthorizationRequest * _authorizationRequest;
    NSString * _callerBundleID;
    bool  _clientShouldAuthenticateExternally;
    NSString * _continuationRequestIdentifier;
    NSString * _externalAuthToken;
    NSData * _externalLocalAuthData;
    NSData * _iconData;
    NSString * _iconName;
    NSNumber * _iconScale;
    NSValue * _iconSize;
    NSString * _informativeText;
    bool  _isEligibleForUpgradeFromPassword;
    bool  _isFirstPartyLogin;
    bool  _isItunesLogin;
    bool  _isRapportLogin;
    bool  _isWebLogin;
    bool  _passcodeProtected;
    AKPasswordRequest * _passwordRequest;
    NSArray * _proxiedAssociatedDomains;
    NSString * _proxiedClientAppID;
    NSString * _proxiedClientAppName;
    NSString * _proxiedClientBundleID;
    NSString * _proxiedClientServiceID;
    NSString * _proxiedClientTeamID;
    NSString * _proxiedDeviceClass;
    NSString * _proxiedDeviceName;
    NSUUID * _requestIdentifier;
    unsigned long long  _requestOptions;
    bool  _requirePassword;
    NSString * _sessionID;
    bool  _shouldForcePrivateEmail;
    bool  _shouldForceUI;
    bool  _shouldSkipAuthorizationUI;
    bool  _shouldSkipBiometrics;
    bool  _shouldUseProxiedClientBundleIDForSRP;
    AKAuthorizationUpgradeContext * _upgradeContext;
}

@property (nonatomic) double _authSessionTimeoutInterval;
@property (nonatomic, retain) NSString *_callerBundleID;
@property (nonatomic) bool _clientShouldAuthenticateExternally;
@property (nonatomic, copy) NSString *_continuationRequestIdentifier;
@property (nonatomic, copy) NSString *_externalAuthToken;
@property (nonatomic, copy) NSData *_externalLocalAuthData;
@property (nonatomic, copy) NSData *_iconData;
@property (nonatomic, copy) NSString *_iconName;
@property (nonatomic, copy) NSNumber *_iconScale;
@property (nonatomic, copy) NSValue *_iconSize;
@property (nonatomic, copy) NSString *_informativeText;
@property (nonatomic, readonly) bool _isEligibleForUpgradeFromPassword;
@property (nonatomic) bool _isFirstPartyLogin;
@property (nonatomic) bool _isItunesLogin;
@property (nonatomic) bool _isRapportLogin;
@property (nonatomic, readonly) bool _isSubscriptionLogin;
@property (nonatomic) bool _isWebLogin;
@property (nonatomic, retain) NSArray *_proxiedAssociatedDomains;
@property (nonatomic, retain) NSString *_proxiedClientAppID;
@property (nonatomic, retain) NSString *_proxiedClientAppName;
@property (nonatomic, retain) NSString *_proxiedClientBundleID;
@property (nonatomic, retain) NSString *_proxiedClientServiceID;
@property (nonatomic, retain) NSString *_proxiedClientTeamID;
@property (nonatomic, retain) NSString *_proxiedDeviceClass;
@property (nonatomic, retain) NSString *_proxiedDeviceName;
@property (nonatomic) bool _requirePassword;
@property (nonatomic, copy) NSString *_sessionID;
@property (nonatomic) bool _shouldForcePrivateEmail;
@property (nonatomic) bool _shouldForceUI;
@property (nonatomic) bool _shouldSkipAuthorizationUI;
@property (nonatomic) bool _shouldSkipBiometrics;
@property (nonatomic) bool _shouldUseProxiedClientBundleIDForSRP;
@property (nonatomic, readonly) AKAuthorizationUpgradeContext *_upgradeContext;
@property (nonatomic, retain) AKAuthorizationRequest *authorizationRequest;
@property (nonatomic, retain) NSArray *credentialRequests;
@property (nonatomic, retain) AKPasswordRequest *passwordRequest;
@property (nonatomic, readonly, copy) NSUUID *requestIdentifier;
@property (nonatomic) unsigned long long requestOptions;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (double)_authSessionTimeoutInterval;
- (id)_callerBundleID;
- (bool)_clientShouldAuthenticateExternally;
- (id)_continuationRequestIdentifier;
- (id)_externalAuthToken;
- (id)_externalLocalAuthData;
- (id)_iconData;
- (id)_iconName;
- (id)_iconScale;
- (id)_iconSize;
- (id)_informativeText;
- (bool)_isEligibleForUpgradeFromPassword;
- (bool)_isFirstPartyLogin;
- (bool)_isItunesLogin;
- (bool)_isRapportLogin;
- (bool)_isSubscriptionLogin;
- (bool)_isWebLogin;
- (id)_proxiedAssociatedDomains;
- (id)_proxiedClientAppID;
- (id)_proxiedClientAppName;
- (id)_proxiedClientBundleID;
- (id)_proxiedClientServiceID;
- (id)_proxiedClientTeamID;
- (id)_proxiedDeviceClass;
- (id)_proxiedDeviceName;
- (bool)_requirePassword;
- (id)_sessionID;
- (bool)_shouldForcePrivateEmail;
- (bool)_shouldForceUI;
- (bool)_shouldSkipAuthorizationUI;
- (bool)_shouldSkipBiometrics;
- (bool)_shouldUseProxiedClientBundleIDForSRP;
- (id)_upgradeContext;
- (id)authorizationRequest;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)credentialRequests;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithProxiedClientContext:(id)arg1;
- (id)initWithUpgradeContext:(id)arg1;
- (id)passwordRequest;
- (id)requestIdentifier;
- (unsigned long long)requestOptions;
- (void)setAuthorizationRequest:(id)arg1;
- (void)setCredentialRequests:(id)arg1;
- (void)setPasswordRequest:(id)arg1;
- (void)setRequestOptions:(unsigned long long)arg1;
- (void)set_authSessionTimeoutInterval:(double)arg1;
- (void)set_callerBundleID:(id)arg1;
- (void)set_clientShouldAuthenticateExternally:(bool)arg1;
- (void)set_continuationRequestIdentifier:(id)arg1;
- (void)set_externalAuthToken:(id)arg1;
- (void)set_externalLocalAuthData:(id)arg1;
- (void)set_iconData:(id)arg1;
- (void)set_iconName:(id)arg1;
- (void)set_iconScale:(id)arg1;
- (void)set_iconSize:(id)arg1;
- (void)set_informativeText:(id)arg1;
- (void)set_isFirstPartyLogin:(bool)arg1;
- (void)set_isItunesLogin:(bool)arg1;
- (void)set_isRapportLogin:(bool)arg1;
- (void)set_isWebLogin:(bool)arg1;
- (void)set_proxiedAssociatedDomains:(id)arg1;
- (void)set_proxiedClientAppID:(id)arg1;
- (void)set_proxiedClientAppName:(id)arg1;
- (void)set_proxiedClientBundleID:(id)arg1;
- (void)set_proxiedClientServiceID:(id)arg1;
- (void)set_proxiedClientTeamID:(id)arg1;
- (void)set_proxiedDeviceClass:(id)arg1;
- (void)set_proxiedDeviceName:(id)arg1;
- (void)set_requirePassword:(bool)arg1;
- (void)set_sessionID:(id)arg1;
- (void)set_shouldForcePrivateEmail:(bool)arg1;
- (void)set_shouldForceUI:(bool)arg1;
- (void)set_shouldSkipAuthorizationUI:(bool)arg1;
- (void)set_shouldSkipBiometrics:(bool)arg1;
- (void)set_shouldUseProxiedClientBundleIDForSRP:(bool)arg1;

@end
