
@interface AKAccountManager : NSObject {
    NSObject<OS_dispatch_queue> * _accountQueue;
    ACAccountStore * _accountStore;
    NSMutableDictionary * _accountTypeCache;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _accountTypeCacheLock;
    ACAccountType * _appleIDAccountType;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _appleIDAccountTypeLock;
    ACAccountType * _authKitAccountType;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _authKitAccountTypeLock;
    ACAccountType * _iCloudAccountType;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _iCloudAccountTypeLock;
    ACAccountType * _iTunesAccountType;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _iTunesAccountTypeLock;
}

@property (nonatomic, readonly) ACAccountType *appleIDAccountType;
@property (nonatomic, readonly) ACAccountType *authKitAccountType;
@property (nonatomic, readonly) ACAccountType *iCloudAccountType;
@property (nonatomic, readonly) ACAccountType *iTunesAccountType;
@property (nonatomic, retain) ACAccountStore *store;

+ (bool)isAccountsFrameworkAvailable;
+ (void)performWithinPersonaForAccount:(id)arg1 withBlock:(id /* block */)arg2;
+ (id)personaIDIfCurrentPersonaIsDataSeparated;
+ (id)sharedInstance;
+ (id)stringRepresentationForService:(long long)arg1;

- (void).cxx_destruct;
- (id)DSIDForAccount:(id)arg1;
- (id)_accountTypeForServiceType:(long long)arg1;
- (id)_aliasesForiCloudAccount:(id)arg1;
- (id)_altDSIDForiCloudAccount:(id)arg1;
- (void)_clearRawPasswordForAccount:(id)arg1;
- (id)_defaultSecurityUpgradeServiceNames;
- (id)_iCloudAccountFromPersonaUniqueIdentifier:(id)arg1;
- (id)_iCloudAccountRequestingAuthorization;
- (id)_iCloudAccounts;
- (bool)_isAccountEligibleForSecurityUpgrade:(id)arg1 ofServiceType:(long long)arg2;
- (id)_isSilentEscrowRecordRepairEnabledForAccount:(id)arg1;
- (id)_matchingServiceAccountForAuthKitAccount:(id)arg1 service:(long long)arg2;
- (void)_removeAllRawPasswordCaches;
- (void)_removeTokenForKeys:(id)arg1 forAccount:(id)arg2;
- (void)_removeTokenKey:(id)arg1 forAccount:(id)arg2;
- (long long)_serviceTypeForServiceNameString:(id)arg1;
- (id)_serviceTypesForSecurityUpgrade;
- (bool)_setUsername:(id)arg1 forAccount:(id)arg2;
- (bool)_shouldBlockAuthorizationForPersona:(id)arg1;
- (id)_tokenWithName:(id)arg1 forAccount:(id)arg2 error:(id*)arg3;
- (void)_triggerSilentTTRFor:(unsigned long long)arg1;
- (id)accountAccessTelemetryOptInDateForAccount:(id)arg1;
- (bool)accountAccessTelemetryOptInForAccount:(id)arg1;
- (id)accountEligibleForUpdate;
- (bool)accountIsSignedIntoServices:(id)arg1;
- (id)accountTypeForTypeIdentifier:(id)arg1;
- (id)accountsUsingService:(long long)arg1;
- (id)activeServiceNamesForAccount:(id)arg1;
- (id)additionalInfoForAccount:(id)arg1;
- (id)ageOfMajorityForAccount:(id)arg1;
- (id)aliasesForAccount:(id)arg1;
- (id)allAuthKitAccounts;
- (id)allTokensForAccount:(id)arg1 error:(id*)arg2;
- (id)altDSIDForAccount:(id)arg1;
- (id)altDSIDForAuthKitAccountRequestingAuthorization;
- (id)altDSIDforPrimaryiCloudAccount;
- (id)appleIDAccountType;
- (id)appleIDAccountWithAltDSID:(id)arg1;
- (id)appleIDAccountWithAppleID:(id)arg1;
- (id)appleIDCountryCodeForAccount:(id)arg1;
- (id)authKitAccountRequestingAuthorization;
- (id)authKitAccountType;
- (id)authKitAccountWithAltDSID:(id)arg1;
- (id)authKitAccountWithAppleID:(id)arg1;
- (id)authKitAccountWithDSID:(id)arg1;
- (unsigned long long)authenticationModeForAccount:(id)arg1;
- (bool)authorizationUsedForAccount:(id)arg1;
- (id)beneficiaryLastModifiedForAccount:(id)arg1;
- (id)beneficiaryListVersionForAccount:(id)arg1;
- (id)birthYearForAccount:(id)arg1;
- (id)buildCredentialWithTokens:(id)arg1;
- (bool)canBeBeneficiaryForAccount:(id)arg1;
- (bool)canBeCustodianForAccount:(id)arg1;
- (bool)canHaveBeneficiaryForAccount:(id)arg1;
- (bool)canHaveCustodianForAccount:(id)arg1;
- (id)combinedAliasesAndReachableEmailsForAccount:(id)arg1;
- (id)configDataVersionForAccount:(id)arg1;
- (id)configValue:(id)arg1 forAccount:(id)arg2;
- (id)continuationTokenForAccount:(id)arg1;
- (id)continuationTokenForAccount:(id)arg1 error:(id*)arg2;
- (bool)custodianEnabledForAccount:(id)arg1;
- (id)custodianInfosForAccount:(id)arg1;
- (id)custodianLastModifiedForAccount:(id)arg1;
- (id)custodianListVersionForAccount:(id)arg1;
- (bool)demoAccountForAccount:(id)arg1;
- (id)deviceListVersionForAccount:(id)arg1;
- (bool)deviceTrustRevokedForAccount:(id)arg1;
- (id)familyNameForAccount:(id)arg1;
- (id)formattedUsernameForAccount:(id)arg1;
- (id)forwardingEmailForAccount:(id)arg1;
- (id)givenNameForAccount:(id)arg1;
- (id)groupKitEligibilityForAccount:(id)arg1;
- (bool)hasMDMForAccount:(id)arg1;
- (id)hasModernRecoveryKeyForAccount:(id)arg1;
- (bool)hasPersonaAvailableForAltDSID:(id)arg1;
- (bool)hasPrimaryiCloudAccountForAltDSID:(id)arg1;
- (bool)hasPrimaryiCloudAccountForAppleID:(id)arg1;
- (id)hasSOSActiveDeviceForAccount:(id)arg1;
- (id)hearbeatTokenForAccount:(id)arg1;
- (id)hearbeatTokenForAccount:(id)arg1 error:(id*)arg2;
- (id)iCloudAccountForAltDSID:(id)arg1;
- (id)iCloudAccountForAppleID:(id)arg1;
- (id)iCloudAccountType;
- (id)iTunesAccountType;
- (id)init;
- (bool)isAskToBuyForAccount:(id)arg1;
- (bool)isBeneficiaryForAccount:(id)arg1;
- (bool)isDataSeparatedAccountForAltDSID:(id)arg1;
- (bool)isFidoForAccount:(id)arg1;
- (bool)isFulliCloudAccount:(id)arg1;
- (bool)isManagedAppleIDForAccount:(id)arg1;
- (bool)isNotificationEmailAvailableForAccount:(id)arg1;
- (bool)isPasscodeAuthEnabledForAccount:(id)arg1;
- (bool)isPasscodeAuthForAccount:(id)arg1;
- (bool)isPrimaryiCloudAccount:(id)arg1;
- (bool)isPrimaryiCloudAccountEmailVerified:(id)arg1;
- (bool)isProximityAuthEligible:(id)arg1;
- (id)isSOSNeededForAccount:(id)arg1;
- (id)isSilentEscrowRecordRepairEnabledForAccount:(id)arg1;
- (id)loginHandlesForAccount:(id)arg1;
- (id)managedOrganizationNameForAccount:(id)arg1;
- (unsigned long long)managedOrganizationTypeForAccount:(id)arg1;
- (id)markedForSignOutForAccount:(id)arg1;
- (id)masterTokenForAccount:(id)arg1;
- (bool)mdmInformationRequiredForAccount:(id)arg1;
- (id)mostRecentlyUsedAuthKitAccount;
- (bool)needsRepairForAccount:(id)arg1;
- (id)notificationEmailForAccount:(id)arg1;
- (id)passkeyEligibleForAccount:(id)arg1;
- (id)passkeyPresentForAccount:(id)arg1;
- (id)passkeyRegistrationAttemptDateForAccount:(id)arg1;
- (id)passkeysDeletionAttemptDateForAccount:(id)arg1;
- (id)passkeysInKeychainCountForAccount:(id)arg1;
- (id)passwordResetTokenBackupForAccount:(id)arg1;
- (id)passwordResetTokenBackupForAccount:(id)arg1 error:(id*)arg2;
- (id)passwordResetTokenForAccount:(id)arg1;
- (id)passwordResetTokenForAccount:(id)arg1 error:(id*)arg2;
- (id)personaUniqueStringForAltDSID:(id)arg1;
- (bool)phoneAsAppleIDForAccount:(id)arg1;
- (id)preferredAccountUsingStoreService;
- (id)preferredAccountUsingStoreServiceFromAccounts:(id)arg1;
- (id)primaryAuthKitAccount;
- (id)primaryEmailAddressForAccount:(id)arg1;
- (id)primaryiCloudAccount;
- (bool)privateAttestationEnabledForAccount:(id)arg1;
- (id)reachableEmailAddressesForAccount:(id)arg1;
- (void)removeAllPasswordResetTokens;
- (void)removeContinuationTokenForAccount:(id)arg1;
- (void)removeMasterTokenForAccount:(id)arg1;
- (unsigned long long)repairStateForAccount:(id)arg1;
- (bool)saveAccount:(id)arg1 error:(id*)arg2;
- (id)securityKeysForAccount:(id)arg1;
- (unsigned long long)securityLevelForAccount:(id)arg1;
- (id)selectedAuthorizationEmailForAccount:(id)arg1;
- (bool)selectedPrivateEmailForAccount:(id)arg1;
- (id)serverExperimentalFeaturesForAccount:(id)arg1;
- (id)servicesUsingAccount:(id)arg1;
- (void)setAccount:(id)arg1 inUse:(bool)arg2 byService:(long long)arg3;
- (bool)setAccountAccessTelemetryOptIn:(bool)arg1 forAccount:(id)arg2 error:(id*)arg3;
- (void)setAdditionalInfo:(id)arg1 forAccount:(id)arg2;
- (void)setAgeOfMajority:(id)arg1 forAccount:(id)arg2;
- (void)setAliases:(id)arg1 forAccount:(id)arg2;
- (void)setAltDSID:(id)arg1 forAccount:(id)arg2;
- (void)setAppleIDCountryCode:(id)arg1 forAccount:(id)arg2;
- (void)setAskToBuy:(bool)arg1 forAccount:(id)arg2;
- (void)setAuthenticationMode:(unsigned long long)arg1 forAccount:(id)arg2;
- (void)setAuthorizationUsed:(bool)arg1 forAccount:(id)arg2;
- (void)setBeneficaryLastModified:(id)arg1 forAccount:(id)arg2;
- (void)setBeneficiary:(bool)arg1 forAccount:(id)arg2;
- (void)setBeneficiaryListVersion:(id)arg1 forAccount:(id)arg2;
- (void)setBirthYear:(id)arg1 forAccount:(id)arg2;
- (void)setCanBeBeneficiary:(bool)arg1 forAccount:(id)arg2;
- (void)setCanBeCustodian:(bool)arg1 forAccount:(id)arg2;
- (void)setCanHaveBeneficiary:(bool)arg1 forAccount:(id)arg2;
- (void)setCanHaveCustodian:(bool)arg1 forAccount:(id)arg2;
- (void)setConfigDataVersion:(id)arg1 forAccount:(id)arg2;
- (void)setConfigValue:(id)arg1 forKey:(id)arg2 forAccount:(id)arg3;
- (void)setCustodianEnabled:(bool)arg1 forAccount:(id)arg2;
- (void)setCustodianInfos:(id)arg1 forAccount:(id)arg2;
- (void)setCustodianLastModified:(id)arg1 forAccount:(id)arg2;
- (void)setCustodianListVersion:(id)arg1 forAccount:(id)arg2;
- (void)setDSID:(id)arg1 forAccount:(id)arg2;
- (void)setDemoAccount:(bool)arg1 forAccount:(id)arg2;
- (void)setDeviceListVersion:(id)arg1 forAccount:(id)arg2;
- (void)setDeviceTrustRevoked:(bool)arg1 forAccount:(id)arg2;
- (void)setFamilyName:(id)arg1 forAccount:(id)arg2;
- (void)setFido:(bool)arg1 forAccount:(id)arg2;
- (void)setForwardingEmail:(id)arg1 forAccount:(id)arg2;
- (void)setGivenName:(id)arg1 forAccount:(id)arg2;
- (void)setGroupKitEligibility:(id)arg1 forAccount:(id)arg2;
- (void)setHasMDM:(bool)arg1 forAccount:(id)arg2;
- (void)setHasModernRecoveryKey:(bool)arg1 forAccount:(id)arg2;
- (void)setHasSOSActiveDevice:(bool)arg1 forAccount:(id)arg2;
- (void)setIsNotificationEmailAvailable:(bool)arg1 forAccount:(id)arg2;
- (void)setIsProximityAuthEligible:(bool)arg1 forAccount:(id)arg2;
- (void)setLoginHandles:(id)arg1 forAccount:(id)arg2;
- (void)setMDMInformationRequired:(bool)arg1 forAccount:(id)arg2;
- (void)setManagedOrganizationName:(id)arg1 forAccount:(id)arg2;
- (void)setManagedOrganizationType:(unsigned long long)arg1 forAccount:(id)arg2;
- (void)setMarkedForSignOut:(bool)arg1 forAccount:(id)arg2;
- (void)setNotificationEmail:(id)arg1 forAccount:(id)arg2;
- (void)setPasscodeAuth:(bool)arg1 forAccount:(id)arg2;
- (void)setPasscodeAuthEnabled:(bool)arg1 forAccount:(id)arg2;
- (void)setPasskeyEligible:(bool)arg1 forAccount:(id)arg2;
- (void)setPasskeyPresent:(bool)arg1 forAccount:(id)arg2;
- (void)setPasskeyRegistrationAttemptDateForAccount:(id)arg1 forAccount:(id)arg2;
- (void)setPasskeysDeletionAttemptDate:(id)arg1 forAccount:(id)arg2;
- (void)setPasskeysInKeychainCount:(id)arg1 forAccount:(id)arg2;
- (void)setPhoneAsAppleID:(bool)arg1 forAccount:(id)arg2;
- (void)setPrimaryEmailAddress:(id)arg1 forAccount:(id)arg2;
- (void)setPrivateAttestationEnabled:(bool)arg1 forAccount:(id)arg2;
- (void)setReachableEmailAddresses:(id)arg1 forAccount:(id)arg2;
- (void)setRepairState:(unsigned long long)arg1 forAccount:(id)arg2;
- (void)setSOSNeeded:(bool)arg1 forAccount:(id)arg2;
- (void)setSecurityKeys:(id)arg1 forAccount:(id)arg2;
- (void)setSecurityLevel:(unsigned long long)arg1 forAccount:(id)arg2;
- (void)setSelectedAuthorizationEmail:(id)arg1 forAccount:(id)arg2;
- (void)setSelectedPrivateEmail:(bool)arg1 forAccount:(id)arg2;
- (void)setServerExperimentalFeatures:(id)arg1 forAccount:(id)arg2;
- (void)setSilentEscrowRecordRepairEnabled:(id)arg1 forAccount:(id)arg2;
- (void)setStore:(id)arg1;
- (void)setTelemetryDeviceSessionID:(id)arg1 forAccount:(id)arg2;
- (void)setTrustedPhoneNumbers:(id)arg1 forAccount:(id)arg2;
- (void)setUserIsSenior:(bool)arg1 forAccount:(id)arg2;
- (void)setUserUnderage:(bool)arg1 forAccount:(id)arg2;
- (void)setVerifiedPrimaryEmail:(bool)arg1 forAccount:(id)arg2;
- (void)setWebAccessEnabled:(bool)arg1 forAccount:(id)arg2;
- (id)settingsServiceTokenForAccount:(id)arg1;
- (bool)shouldPerformSatoriWarmupVerificationForAccount:(id)arg1;
- (bool)shouldUpdateAuthModeForAccount:(id)arg1;
- (unsigned long long)signInPartitionForLivenessWithAltDSID:(id)arg1;
- (id)store;
- (id)telemetryDeviceSessionIDForAccount:(id)arg1;
- (id)transportableAuthKitAccount:(id)arg1;
- (id)trustedPhoneNumbersForAccount:(id)arg1;
- (void)updateAccountAccessTelemetryOptInTimestampForAccount:(id)arg1 withOptIn:(bool)arg2;
- (void)updateAuthModeTimestampForAccount:(id)arg1;
- (void)updateSatoriWarmUpTimestampForAccount:(id)arg1;
- (void)updateUsername:(id)arg1 forAccountsWithAltDSID:(id)arg2;
- (void)updateVerifiedEmail:(bool)arg1 forAccountWithAltDSID:(id)arg2;
- (bool)userIsSeniorForAccount:(id)arg1;
- (bool)userUnderAgeForAccount:(id)arg1;
- (bool)verifiedPrimaryEmailForAccount:(id)arg1;
- (id)webAccessEnabledForAccount:(id)arg1;

@end
