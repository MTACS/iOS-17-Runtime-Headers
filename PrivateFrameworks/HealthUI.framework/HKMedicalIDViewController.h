
@interface HKMedicalIDViewController : UITableViewController <HKEmergencyCardContactUpdateDelegate, HKEmergencyCardDeletionDelegate, HKEmergencyCardPrimaryLanguageUpdateDelegate, HKEmergencyCardRowHeightChangeDelegate, HKEmergencyCardSelectionTableItemDelegate, HKMedicalIDViewControllerDelegate, UITableViewDataSource, UITableViewDelegate> {
    NSArray * _accumulatedNumberOfRowsForItems;
    bool  _allowsEditing;
    HKEmergencyCardContactsTableItem * _contactsItem;
    <HKMedicalIDViewControllerDelegate> * _delegate;
    NSArray * _footers;
    NSArray * _headers;
    HKHealthStore * _healthStore;
    bool  _inBridge;
    bool  _inBuddy;
    bool  _inEditMode;
    HKEmergencyCardGroupTableItem * _informationDataGroupItem;
    long long  _internalAccessType;
    bool  _isSecondaryProfileMedicalID;
    NSArray * _localeItems;
    _HKMedicalIDData * _medicalID;
    int  _medicalIDChangedToken;
    HKMedicalIDNavigationController * _medicalIDEditor;
    HKMedicalIDStore * _medicalIDStore;
    bool  _modernAppearance;
    HKEmergencyCardNameAndPictureTableItem * _nameAndPictureItem;
    NSArray * _organDonationItems;
    bool  _organDonationSignupAvailable;
    NSArray * _presentableTableItems;
    HKEmergencyCardPrimaryLanguageTableItem * _primaryLanguageItem;
    HKProfileStore * _profileStore;
    bool  _shouldShowHints;
    bool  _showsDeleteButton;
    bool  _showsDismissButton;
    bool  _showsEditMedicalIDRowInViewMode;
    bool  _showsEmergencyAccessState;
    bool  _showsShowWhenLockedState;
    NSArray * _tableItems;
    long long  _tableViewStyle;
}

@property (nonatomic) bool allowsEditing;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <HKMedicalIDViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) HKHealthStore *healthStore;
@property (nonatomic) bool inBridge;
@property (nonatomic) bool inEditMode;
@property (nonatomic) long long internalAccessType;
@property (nonatomic) bool isSecondaryProfileMedicalID;
@property (nonatomic, retain) _HKMedicalIDData *medicalID;
@property (nonatomic, retain) HKMedicalIDStore *medicalIDStore;
@property (nonatomic) bool modernAppearance;
@property (nonatomic) bool shouldShowHints;
@property (nonatomic) bool showsDeleteButton;
@property (nonatomic) bool showsDismissButton;
@property (nonatomic) bool showsEditMedicalIDRowInViewMode;
@property (nonatomic) bool showsEmergencyAccessState;
@property (nonatomic) bool showsShowWhenLockedState;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSArray *tableItems;

+ (bool)isSupportedOnThisDevice;

- (void).cxx_destruct;
- (void)_adjustTableViewContentOffsetForVisibleView:(id)arg1 visibleRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 animated:(bool)arg3;
- (void)_buildEditModeTableItems;
- (void)_buildPresentableTableItems;
- (void)_buildTableItems;
- (void)_buildViewModeTableItems;
- (bool)_canShowWhileLocked;
- (void)_cancelEditingTapped:(id)arg1;
- (void)_contactStoreDidChange:(id)arg1;
- (void)_contentSizeCategoryDidChange:(id)arg1;
- (void)_dismissMedicalIDEditor;
- (void)_doneEditingTapped:(id)arg1;
- (void)_doneTapped:(id)arg1;
- (bool)_editable;
- (void)_fetchDemographicInformation;
- (id)_fetchProfileFirstName;
- (void)_forceDisableBiometricIfDeviceLocked;
- (id)_formatMedicalIDAccessPoint:(long long)arg1;
- (id)_newViewForFooterInSection:(long long)arg1;
- (id)_newViewForHeaderInSection:(long long)arg1;
- (void)_nextButtonTapped:(id)arg1;
- (long long)_preferredOrganDonationOrganization;
- (bool)_refreshEmergencyContacts:(bool)arg1;
- (void)_refreshMedicalIDInViewMode;
- (void)_reloadTableWithMedicalIDData:(id)arg1;
- (long long)_rowIndexForTableItem:(id)arg1 atIndexPath:(id)arg2;
- (bool)_shouldShowOrganDonation;
- (void)_showMedicalIDPreviewAsNext;
- (void)_submitAccessAnalytic;
- (id)_tableItemForIndexPath:(id)arg1;
- (void)_updateMedicalID;
- (void)_updateMedicalIDNameWithDemographicsInformation:(id)arg1;
- (bool)allowsEditing;
- (void)dealloc;
- (id)delegate;
- (void)deletionTableItemDidTapDelete:(id)arg1;
- (void)editButtonTapped:(id)arg1;
- (void)editMedicalID:(id)arg1;
- (void)editOrganDonation:(id)arg1;
- (id)healthStore;
- (bool)inBridge;
- (bool)inEditMode;
- (id)initInEditMode:(bool)arg1;
- (id)initInEditMode:(bool)arg1 inBuddy:(bool)arg2 organDonationSignupAvailable:(bool)arg3;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithStyle:(long long)arg1;
- (long long)internalAccessType;
- (bool)isSecondaryProfileMedicalID;
- (void)localeDidChange:(id)arg1;
- (id)medicalID;
- (id)medicalIDStore;
- (void)medicalIDViewControllerDidCancel:(id)arg1;
- (void)medicalIDViewControllerDidDelete:(id)arg1;
- (void)medicalIDViewControllerDidSave:(id)arg1;
- (bool)modernAppearance;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (long long)preferredStatusBarStyle;
- (void)selectionTableItemDidTap:(id)arg1;
- (void)setAllowsEditing:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setHealthStore:(id)arg1;
- (void)setInBridge:(bool)arg1;
- (void)setInEditMode:(bool)arg1;
- (void)setInternalAccessType:(long long)arg1;
- (void)setIsSecondaryProfileMedicalID:(bool)arg1;
- (void)setMedicalID:(id)arg1;
- (void)setMedicalIDStore:(id)arg1;
- (void)setModernAppearance:(bool)arg1;
- (void)setShouldShowHints:(bool)arg1;
- (void)setShowsDeleteButton:(bool)arg1;
- (void)setShowsDismissButton:(bool)arg1;
- (void)setShowsEditMedicalIDRowInViewMode:(bool)arg1;
- (void)setShowsEmergencyAccessState:(bool)arg1;
- (void)setShowsShowWhenLockedState:(bool)arg1;
- (void)setTableItems:(id)arg1;
- (bool)shouldShowHints;
- (bool)showsDeleteButton;
- (bool)showsDismissButton;
- (bool)showsEditMedicalIDRowInViewMode;
- (bool)showsEmergencyAccessState;
- (bool)showsShowWhenLockedState;
- (unsigned long long)supportedInterfaceOrientations;
- (void)tableItem:(id)arg1 heightDidChangeForRowIndex:(long long)arg2 keepRectVisible:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 inView:(id)arg4;
- (void)tableItemDidBeginEditing:(id)arg1 keepRectVisible:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 inView:(id)arg3;
- (void)tableItemDidChangeSelection:(id)arg1 keepRectVisible:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 inView:(id)arg3;
- (id)tableItems;
- (bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (bool)tableView:(id)arg1 shouldDrawBottomSeparatorForSection:(long long)arg2;
- (bool)tableView:(id)arg1 shouldHighlightRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (void)timeZoneDidChange:(id)arg1;
- (void)updateEmergencyContactTableItem;
- (void)updateNavigationBar;
- (void)updatePrimaryLanguageTableItem;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;

@end
