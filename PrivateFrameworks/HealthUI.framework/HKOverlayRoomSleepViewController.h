
@interface HKOverlayRoomSleepViewController : HKOverlayRoomViewController <HKCurrentValueViewDataSourceDelegate, HKHealthChartFactoryViewControllerProviderClass, HKOverlayRoomTrendModelProviding, HKOverlaySleepRoomContextChangeDelegate> {
    HKOverlayContextLocation * _comparisonContextLocation;
    NSDictionary * _sleepChartCaches;
    HKInteractiveChartDataFormatter * _sleepChartFormatter;
    <HKSleepDataSourceProvider> * _sleepDataSourceProvider;
    HKDisplayType * _sleepDisplayType;
    HKOverlayContextLocation * _trendContextLocation;
    HKChartSummaryTrendModel * _trendModel;
    bool  baseDisplayIsSchedule;
    bool  comparisonContextSelected;
    bool  durationContextSelected;
    bool  scheduleContextSelected;
    bool  shouldHighlightBaseDisplayContext;
    bool  stageDurationContextSelected;
    bool  stagePercentageContextSelected;
    bool  stagePercentageContextWillBeSelected;
}

@property (nonatomic) bool baseDisplayIsSchedule;
@property (nonatomic, retain) HKOverlayContextLocation *comparisonContextLocation;
@property (nonatomic) bool comparisonContextSelected;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool durationContextSelected;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool scheduleContextSelected;
@property (nonatomic) bool shouldHighlightBaseDisplayContext;
@property (nonatomic, retain) NSDictionary *sleepChartCaches;
@property (nonatomic, retain) HKInteractiveChartDataFormatter *sleepChartFormatter;
@property (nonatomic) <HKSleepDataSourceProvider> *sleepDataSourceProvider;
@property (nonatomic, retain) HKDisplayType *sleepDisplayType;
@property (nonatomic) bool stageDurationContextSelected;
@property (nonatomic) bool stagePercentageContextSelected;
@property (nonatomic) bool stagePercentageContextWillBeSelected;
@property (readonly) Class superclass;
@property (nonatomic, retain) HKOverlayContextLocation *trendContextLocation;
@property (nonatomic, readonly) HKChartSummaryTrendModel *trendModel;

+ (id)createInteractiveChartViewControllerForTypeIdentifier:(id)arg1 chartFactory:(id)arg2 applicationItems:(id)arg3 displayDate:(id)arg4 preferredOverlay:(long long)arg5 restorationUserActivity:(id)arg6 trendModel:(id)arg7 additionalChartOptions:(unsigned long long)arg8;
+ (long long)indexForOverlaySleepRoomSegment:(long long)arg1;

- (void).cxx_destruct;
- (id)_buildConsistencyDisplayTypeWithApplicationItems:(id)arg1;
- (id)_buildDurationAverageDisplayTypeWithApplicationItems:(id)arg1 customSleepSeriesMapping:(id)arg2 customSleepChartFormatter:(id)arg3;
- (id)_buildDurationAverageFormatter;
- (id)_buildDurationAverageSeries;
- (id)_buildDurationDisplayTypeForStackedWithApplicationItems:(id)arg1;
- (id)_buildDurationDisplayTypeWithApplicationItems:(id)arg1;
- (id)_buildDurationGoalDisplayTypeWithApplicationItems:(id)arg1;
- (id)_buildScheduleDisplayTypeWithApplicationItems:(id)arg1;
- (id)_buildSleepDisplayTypeWithApplicationItems:(id)arg1 sleepSeriesType:(long long)arg2 customSleepSeriesMapping:(id)arg3 customSleepChartFormatter:(id)arg4 isStackedChart:(bool)arg5;
- (id)_buildSleepTrendContext:(id)arg1 overlayChartController:(id)arg2;
- (id)_buildStagesDisplayTypeWithApplicationItems:(id)arg1;
- (id)_buildStagesDurationDisplayTypeWithApplicationItems:(id)arg1;
- (id)_consistencyContextForApplicationItems:(id)arg1 overlayMode:(long long)arg2 isPrimaryContext:(bool)arg3;
- (id)_durationAmountContextForApplicationItems:(id)arg1 durationDisplayType:(id)arg2;
- (id)_durationAverageContextForApplicationItems:(id)arg1 durationDisplayType:(id)arg2 useInBedAverage:(bool)arg3;
- (id)_durationGoalContextForApplicationItems:(id)arg1 durationDisplayType:(id)arg2 overlayMode:(long long)arg3 isPrimaryContext:(bool)arg4;
- (id)_fullContextsForApplicationItems:(id)arg1 overlayChartController:(id)arg2;
- (bool)_initialTrendSelectedForMode:(long long)arg1 trendModel:(id)arg2;
- (void)_installUpdateObserversForGoalsAndSchedulesWithApplicationItems:(id)arg1;
- (id)_itemForSleepStageInfographicWithStage:(long long)arg1;
- (id)_itemForTitle:(id)arg1 titleAccessoryColor:(id)arg2 description:(id)arg3;
- (id)_primaryContextForApplicationItems:(id)arg1 overlayChartController:(id)arg2;
- (void)_setDefaultChartFormatterFonts;
- (id)_sleepColorForSelectedRangeData:(id)arg1;
- (id)_sleepStagePercentageContextForStage:(long long)arg1 applicationItems:(id)arg2 baseDisplayType:(id)arg3;
- (id)_stageDurationContextForApplicationItems:(id)arg1 baseDisplayType:(id)arg2 sleepCategoryValue:(long long)arg3;
- (void)_updateHighlightedSleepStage:(long long)arg1 onDisplayType:(id)arg2;
- (bool)baseDisplayIsSchedule;
- (id)comparisonContextLocation;
- (bool)comparisonContextSelected;
- (id)contextSectionContainersForMode:(long long)arg1 applicationItems:(id)arg2 overlayChartController:(id)arg3;
- (id)controllerTitleWithApplicationItems:(id)arg1;
- (id)createChartOverlayViewController;
- (id)createViewControllerForMode:(long long)arg1 displayDate:(id)arg2 applicationItems:(id)arg3;
- (id)dateRangeFromSelectionContext:(id)arg1 timeScope:(long long)arg2;
- (void)dealloc;
- (void)didChangeFromContextItem:(id)arg1 toContextItem:(id)arg2;
- (bool)durationContextSelected;
- (id)getChartSummaryTrendModelToModify;
- (bool)infographicSupportedForDisplayType:(id)arg1 healthStore:(id)arg2;
- (id)infographicViewControllerForDisplayType:(id)arg1 healthStore:(id)arg2;
- (id)initWithDisplayDate:(id)arg1 applicationItems:(id)arg2 sleepDataSourceProvider:(id)arg3 sleepChartFormatter:(id)arg4 mode:(long long)arg5 trendModel:(id)arg6;
- (long long)initialSelectedContainerIndexForMode:(long long)arg1;
- (id)initialSelectedContextForMode:(long long)arg1 containerIndex:(long long)arg2;
- (long long)initialSleepSeriesType;
- (id)primaryDisplayTypeWithApplicationItems:(id)arg1;
- (id)restorationStateDictionary;
- (void)restoreUserActivityState:(id)arg1;
- (void)saveRestorationState;
- (bool)scheduleContextSelected;
- (void)setBaseDisplayIsDuration;
- (void)setBaseDisplayIsSchedule;
- (void)setBaseDisplayIsSchedule:(bool)arg1;
- (void)setComparisonContextLocation:(id)arg1;
- (void)setComparisonContextSelected:(bool)arg1;
- (void)setDurationContextSelected:(bool)arg1;
- (void)setScheduleContextSelected:(bool)arg1;
- (void)setShouldHighlightBaseDisplayContext;
- (void)setShouldHighlightBaseDisplayContext:(bool)arg1;
- (void)setSleepChartCaches:(id)arg1;
- (void)setSleepChartFormatter:(id)arg1;
- (void)setSleepDataSourceProvider:(id)arg1;
- (void)setSleepDisplayType:(id)arg1;
- (void)setStageDurationContextSelected:(bool)arg1;
- (void)setStagePercentageContextSelected:(bool)arg1;
- (void)setStagePercentageContextWillBeSelected:(bool)arg1;
- (void)setTrendContextLocation:(id)arg1;
- (bool)shouldHighlightBaseDisplayContext;
- (id)sleepChartCaches;
- (id)sleepChartFormatter;
- (id)sleepDataSourceProvider;
- (id)sleepDisplayType;
- (bool)stageDurationContextSelected;
- (bool)stagePercentageContextSelected;
- (bool)stagePercentageContextWillBeSelected;
- (id)stringForValueRange:(id)arg1 timeScope:(long long)arg2;
- (bool)supportsShowAllFilters;
- (id)titleForSelectedRangeData:(id)arg1 displayType:(id)arg2;
- (id)trendContextLocation;
- (id)trendModel;
- (void)viewDidLoad;

@end
