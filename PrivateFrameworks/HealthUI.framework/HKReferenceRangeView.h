
@interface HKReferenceRangeView : UIView {
    HKReferenceRangeViewConfiguration * _configuration;
    UILabel * _currentValueLabel;
    HKReferenceRangeDotView * _currentValueView;
    double  _currentValueXPosition;
    HKReferenceRangeViewData * _data;
    UIFont * _dynamicTypeAnchorFont;
    UILabel * _highValueLabel;
    double  _highValueXPosition;
    double  _intrinsicHeight;
    UILabel * _lowValueLabel;
    double  _lowValueXPosition;
    NSString * _multiValueSeparator;
    UILabel * _outOfRangeLabel;
    UIFont * _overriddenValueFont;
    UIView * _referenceRangeContainerView;
    UIView * _referenceRangeView;
    bool  _showOutOfRangeIndicator;
    UIFont * _unitFont;
    long long  _valueDirection;
    UIFont * _valueFont;
}

@property (nonatomic, readonly) HKReferenceRangeViewConfiguration *configuration;
@property (nonatomic, retain) UILabel *currentValueLabel;
@property (nonatomic, retain) HKReferenceRangeDotView *currentValueView;
@property (nonatomic, copy) HKReferenceRangeViewData *data;
@property (nonatomic, retain) UIFont *dynamicTypeAnchorFont;
@property (nonatomic, retain) UILabel *highValueLabel;
@property (nonatomic, retain) UILabel *lowValueLabel;
@property (nonatomic, copy) NSString *multiValueSeparator;
@property (nonatomic, retain) UILabel *outOfRangeLabel;
@property (nonatomic, retain) UIFont *overriddenValueFont;
@property (nonatomic, retain) UIView *referenceRangeContainerView;
@property (nonatomic, retain) UIView *referenceRangeView;
@property (nonatomic, retain) UIFont *unitFont;
@property (nonatomic, retain) UIFont *valueFont;

- (void).cxx_destruct;
- (void)_applyNormalizedValuesToView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_assureLabelFrameWithinBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_configuredPreferredFontForTextStyle:(id)arg1 symbolicTraits:(unsigned int)arg2;
- (void)_dynamicUserInterfaceTraitDidChange;
- (id)_generateAttributedValueStringWithOverrideColor:(id)arg1;
- (id)_generateMultilineAttributedValueStringForOriginalString:(id)arg1;
- (bool)_hasReferenceRange;
- (void)_layoutCurrentValueOnly;
- (void)_layoutFullReferenceRange;
- (void)_normalizeValuesIfNeeded;
- (id)_outOfRangeColor;
- (void)_setupSubviews;
- (void)_updateContainerBorderColors;
- (id)configuration;
- (id)currentValueLabel;
- (id)currentValueView;
- (id)data;
- (id)dynamicTypeAnchorFont;
- (id)highValueLabel;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 configuration:(id)arg2;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (void)layoutSubviews;
- (id)lowValueLabel;
- (id)multiValueSeparator;
- (id)outOfRangeLabel;
- (id)overriddenValueFont;
- (id)referenceRangeContainerView;
- (id)referenceRangeView;
- (void)setCurrentValueLabel:(id)arg1;
- (void)setCurrentValueView:(id)arg1;
- (void)setData:(id)arg1;
- (void)setDynamicTypeAnchorFont:(id)arg1;
- (void)setHighValueLabel:(id)arg1;
- (void)setLowValueLabel:(id)arg1;
- (void)setMultiValueSeparator:(id)arg1;
- (void)setOutOfRangeLabel:(id)arg1;
- (void)setOverriddenValueFont:(id)arg1;
- (void)setReferenceRangeContainerView:(id)arg1;
- (void)setReferenceRangeView:(id)arg1;
- (void)setUnitFont:(id)arg1;
- (void)setValueFont:(id)arg1;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (id)unitFont;
- (id)unitLabelFont;
- (void)updateWithData:(id)arg1;
- (id)valueFont;
- (id)valueLabelFont;

@end
