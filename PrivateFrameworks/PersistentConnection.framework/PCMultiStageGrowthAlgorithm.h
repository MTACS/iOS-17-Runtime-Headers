
@interface PCMultiStageGrowthAlgorithm : NSObject <PCGrowthAlgorithm> {
    NSString * _algorithmName;
    unsigned long long  _countOfGrowthActions;
    int  _currentKeepAliveAlgorithmMode;
    double  _currentKeepAliveInterval;
    int  _growthStage;
    double  _highWatermark;
    double  _initialGrowthStageHighWatermark;
    double  _initialGrowthStageLastAttempt;
    bool  _isServerOriginatedKeepAlive;
    int  _lastKeepAliveAlgorithmMode;
    double  _lastKeepAliveInterval;
    double  _lastSuccessfulKeepAliveInterval;
    NSDate * _leaveMinimumIntervalFallbackStateDate;
    NSDate * _leaveSteadyStateDate;
    NSObject<OS_os_log> * _logObject;
    double  _maximumKeepAliveInterval;
    bool  _minimumIntervalFallbackEnabled;
    double  _minimumIntervalFallbackStateTimeout;
    double  _minimumKeepAliveInterval;
    int  _previousAction;
    double  _previousMaximumKeepAliveInterval;
    double  _serverStatsExpectedKeepAliveInterval;
    double  _serverStatsMaxKeepAliveInterval;
    double  _serverStatsMinKeepAliveInterval;
    struct _PCTimeRange { 
        double start; 
        double duration; 
    }  _signalAvoidanceRange;
    bool  _usingServerStatsAggressively;
}

@property (nonatomic, readonly, copy) NSDictionary *cacheInfo;
@property (nonatomic, readonly) unsigned long long countOfGrowthActions;
@property (nonatomic, readonly) double currentKeepAliveInterval;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) int growthStage;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isServerOriginatedKeepAlive;
@property (nonatomic) double lastSuccessfulKeepAliveInterval;
@property (nonatomic) double maximumKeepAliveInterval;
@property (nonatomic) bool minimumIntervalFallbackEnabled;
@property (nonatomic) double minimumIntervalFallbackStateTimeout;
@property (nonatomic) double minimumKeepAliveInterval;
@property (nonatomic) int previousAction;
@property (nonatomic) double serverStatsExpectedKeepAliveInterval;
@property (nonatomic) double serverStatsMaxKeepAliveInterval;
@property (nonatomic) double serverStatsMinKeepAliveInterval;
@property (nonatomic) struct _PCTimeRange { double x1; double x2; } signalAvoidanceRange;
@property (readonly) Class superclass;
@property (nonatomic) bool usingServerStatsAggressively;

+ (void)_loadDefaultValue:(double*)arg1 forKey:(struct __CFString { }*)arg2;
+ (void)_loadDefaults;

- (void).cxx_destruct;
- (void)_adjustGrowthAlgorithmMode;
- (void)_fallbackToLastSuccessfulKeepAliveInterval;
- (void)_processBackoffAction:(int)arg1;
- (void)_processInitialGrowthAction:(int)arg1;
- (void)_processInitialShrinkAction:(int)arg1;
- (void)_processMinimumIntervalFallbackStateAction:(int)arg1;
- (void)_processRefinedGrowthAction:(int)arg1;
- (void)_processRefinedShrinkAction:(int)arg1;
- (void)_processSteadyStateAction:(int)arg1;
- (void)_resetAlgorithmToInterval:(double)arg1;
- (void)_resetAlgorithmToInterval:(double)arg1 stage:(int)arg2;
- (void)_setCurrentKeepAliveInterval:(double)arg1 varianceMode:(unsigned int)arg2;
- (void)_setCurrentKeepAliveInterval:(double)arg1 varianceMode:(unsigned int)arg2 allowRoundUp:(bool)arg3;
- (double)_steadyStateTimeout;
- (id)_stringForAction:(int)arg1;
- (id)_stringForMode:(int)arg1;
- (id)_stringForStage:(int)arg1;
- (id)cacheInfo;
- (unsigned long long)countOfGrowthActions;
- (double)currentKeepAliveInterval;
- (id)description;
- (int)growthStage;
- (id)initWithCacheInfo:(id)arg1 loggingIdentifier:(id)arg2 algorithmName:(id)arg3;
- (bool)isServerOriginatedKeepAlive;
- (double)lastSuccessfulKeepAliveInterval;
- (double)maximumKeepAliveInterval;
- (bool)minimumIntervalFallbackEnabled;
- (double)minimumIntervalFallbackStateTimeout;
- (double)minimumKeepAliveInterval;
- (int)previousAction;
- (void)processNextAction:(int)arg1;
- (double)serverStatsExpectedKeepAliveInterval;
- (double)serverStatsMaxKeepAliveInterval;
- (double)serverStatsMinKeepAliveInterval;
- (void)setIsServerOriginatedKeepAlive:(bool)arg1;
- (void)setLastSuccessfulKeepAliveInterval:(double)arg1;
- (void)setMaximumKeepAliveInterval:(double)arg1;
- (void)setMinimumIntervalFallbackEnabled:(bool)arg1;
- (void)setMinimumIntervalFallbackStateTimeout:(double)arg1;
- (void)setMinimumKeepAliveInterval:(double)arg1;
- (void)setPreviousAction:(int)arg1;
- (void)setServerStatsExpectedKeepAliveInterval:(double)arg1;
- (void)setServerStatsMaxKeepAliveInterval:(double)arg1;
- (void)setServerStatsMinKeepAliveInterval:(double)arg1;
- (void)setSignalAvoidanceRange:(struct _PCTimeRange { double x1; double x2; })arg1;
- (void)setUsingServerStatsAggressively:(bool)arg1;
- (struct _PCTimeRange { double x1; double x2; })signalAvoidanceRange;
- (bool)useIntervalIfImprovement:(double)arg1;
- (bool)usingServerStatsAggressively;

@end
