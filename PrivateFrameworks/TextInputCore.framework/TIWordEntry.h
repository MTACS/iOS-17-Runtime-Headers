
@interface TIWordEntry : TIUserAction {
    TIKeyboardCandidate * _acceptedCandidate;
    NSString * _acceptedString;
    unsigned long long  _alignmentConflicts;
    NSMutableArray * _allEdits;
    NSMutableArray * _allKeyboardInputsM;
    NSMutableArray * _allTouchesM;
    bool  _cancelled;
    long long  _candidateIndex;
    NSMutableArray * _candidatesOfferedM;
    bool  _deleted;
    bool  _editActionExtendsPriorWord;
    int  _editActionType;
    bool  _extendsPriorWord;
    bool  _followsContinuousPath;
    bool  _includesCursorEdits;
    bool  _includesOrientationChange;
    NSString * _inputContext;
    NSString * _inputStem;
    TIKeyboardInput * _inputTriggeredTextAccepted;
    bool  _isContinuousPathCompletion;
    bool  _isFromStaticLexicon;
    bool  _isMultilingual;
    bool  _isOOV;
    bool  _isPunctuationEntryFollowingAWord;
    bool  _isRetrocorrection;
    long long  _layoutID;
    NSString * _orientation;
    int  _origin;
    NSString * _originalAcceptedString;
    TIKeyboardCandidate * _originalCandidate;
    bool  _originalWordInAlignment;
    unsigned long long  _sessionIndex;
    int  _touchAlignmentConf;
    NSMutableArray * _touchLayoutsM;
    int  _unfinishedWordEntryTreatment;
    int  _wordAlignmentConf;
    int  _wordEntryType;
}

@property (nonatomic, retain) TIKeyboardCandidate *acceptedCandidate;
@property (nonatomic, copy) NSString *acceptedString;
@property (nonatomic) unsigned long long alignmentConflicts;
@property (nonatomic, retain) NSMutableArray *allEdits;
@property (nonatomic, readonly) NSArray *allKeyboardInputs;
@property (nonatomic, retain) NSMutableArray *allKeyboardInputsM;
@property (nonatomic, readonly) NSArray *allTouches;
@property (nonatomic, retain) NSMutableArray *allTouchesM;
@property (nonatomic) bool cancelled;
@property long long candidateIndex;
@property (nonatomic, readonly) NSArray *candidatesOffered;
@property (nonatomic, retain) NSMutableArray *candidatesOfferedM;
@property (nonatomic) bool deleted;
@property (nonatomic) bool editActionExtendsPriorWord;
@property (nonatomic) int editActionType;
@property (nonatomic, readonly) TIWordEntry *editedEntry;
@property (nonatomic) bool extendsPriorWord;
@property (nonatomic) bool followsContinuousPath;
@property (nonatomic) bool includesCursorEdits;
@property (nonatomic) bool includesOrientationChange;
@property (nonatomic, copy) NSString *inputContext;
@property (nonatomic, copy) NSString *inputStem;
@property (nonatomic, retain) TIKeyboardInput *inputTriggeredTextAccepted;
@property (nonatomic) bool isContinuousPathCompletion;
@property (nonatomic) bool isFromStaticLexicon;
@property (nonatomic) bool isMultilingual;
@property (nonatomic) bool isOOV;
@property (nonatomic) bool isPunctuationEntryFollowingAWord;
@property (nonatomic) bool isRetrocorrection;
@property long long layoutID;
@property (nonatomic, copy) NSString *orientation;
@property (nonatomic) int origin;
@property (nonatomic, copy) NSString *originalAcceptedString;
@property (nonatomic, retain) TIKeyboardCandidate *originalCandidate;
@property (nonatomic) bool originalWordInAlignment;
@property (nonatomic) unsigned long long sessionIndex;
@property (nonatomic) int touchAlignmentConf;
@property (nonatomic, readonly) NSArray *touchLayouts;
@property (nonatomic, retain) NSMutableArray *touchLayoutsM;
@property (nonatomic) int unfinishedWordEntryTreatment;
@property (nonatomic) int wordAlignmentConf;
@property (nonatomic) int wordEntryType;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)acceptedCandidate;
- (id)acceptedString;
- (void)addCandidateOffered:(id)arg1;
- (void)addKeyInput:(id)arg1;
- (void)addTouchEvent:(id)arg1 withLayoutId:(unsigned long long)arg2;
- (void)addUserEdit:(id)arg1;
- (unsigned long long)alignmentConflicts;
- (id)allEdits;
- (id)allKeyboardInputs;
- (id)allKeyboardInputsM;
- (id)allTouches;
- (id)allTouchesM;
- (bool)cancelled;
- (bool)candidateContainsEmoji;
- (long long)candidateIndex;
- (id)candidatesOffered;
- (id)candidatesOfferedM;
- (void)clearCandidatesOffered;
- (void)clearKeyInputs;
- (void)clearTouches;
- (bool)deleted;
- (id)description;
- (id)descriptionWithContext;
- (id)documentContextBeforeInput;
- (bool)editActionExtendsPriorWord;
- (int)editActionType;
- (id)editedEntry;
- (void)encodeWithCoder:(id)arg1;
- (bool)endsWithNewLine;
- (bool)extendsPriorWord;
- (bool)followsContinuousPath;
- (bool)includesCursorEdits;
- (bool)includesOrientationChange;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)inputContext;
- (id)inputStem;
- (id)inputTriggeredTextAccepted;
- (bool)isContinuousPathCompletion;
- (bool)isFromStaticLexicon;
- (bool)isMultilingual;
- (bool)isOOV;
- (bool)isPeriodFromDoubleSpaceEntry;
- (bool)isPunctuationEntryFollowingAWord;
- (bool)isRetrocorrection;
- (long long)layoutID;
- (int)leadingBackspaceCountFromResolvedKeyboardInputs:(id)arg1;
- (id)orientation;
- (int)origin;
- (id)originalAcceptedString;
- (id)originalCandidate;
- (bool)originalWordInAlignment;
- (id)resolveBackspacesInKeyboardInputs;
- (unsigned long long)sessionIndex;
- (void)setAcceptedCandidate:(id)arg1;
- (void)setAcceptedString:(id)arg1;
- (void)setAlignmentConflicts:(unsigned long long)arg1;
- (void)setAllEdits:(id)arg1;
- (void)setAllKeyboardInputsM:(id)arg1;
- (void)setAllTouchesM:(id)arg1;
- (void)setCancelled:(bool)arg1;
- (void)setCandidateIndex:(long long)arg1;
- (void)setCandidatesOfferedM:(id)arg1;
- (void)setDeleted:(bool)arg1;
- (void)setEditActionExtendsPriorWord:(bool)arg1;
- (void)setEditActionType:(int)arg1;
- (void)setExtendsPriorWord:(bool)arg1;
- (void)setFollowsContinuousPath:(bool)arg1;
- (void)setIncludesCursorEdits:(bool)arg1;
- (void)setIncludesOrientationChange:(bool)arg1;
- (void)setInputContext:(id)arg1;
- (void)setInputStem:(id)arg1;
- (void)setInputTriggeredTextAccepted:(id)arg1;
- (void)setIsContinuousPathCompletion:(bool)arg1;
- (void)setIsFromStaticLexicon:(bool)arg1;
- (void)setIsMultilingual:(bool)arg1;
- (void)setIsOOV:(bool)arg1;
- (void)setIsPunctuationEntryFollowingAWord:(bool)arg1;
- (void)setIsRetrocorrection:(bool)arg1;
- (void)setLayoutID:(long long)arg1;
- (void)setOrientation:(id)arg1;
- (void)setOrigin:(int)arg1;
- (void)setOriginalAcceptedString:(id)arg1;
- (void)setOriginalCandidate:(id)arg1;
- (void)setOriginalWordInAlignment:(bool)arg1;
- (void)setSessionIndex:(unsigned long long)arg1;
- (void)setTouchAlignmentConf:(int)arg1;
- (void)setTouchLayoutsM:(id)arg1;
- (void)setUnfinishedWordEntryTreatment:(int)arg1;
- (void)setWordAlignmentConf:(int)arg1;
- (void)setWordEntryType:(int)arg1;
- (bool)startsWithNewLine;
- (id)textFromResolvedKeyboardInputs:(id)arg1;
- (int)touchAlignmentConf;
- (id)touchLayouts;
- (id)touchLayoutsM;
- (void)trimLeadingAndTrailingCharacters:(id)arg1 fromResolvedInputs:(id)arg2;
- (id)trimmedDocumentContextBeforeInput;
- (int)unfinishedWordEntryTreatment;
- (bool)wasRevised;
- (int)wordAlignmentConf;
- (int)wordEntryType;

@end
