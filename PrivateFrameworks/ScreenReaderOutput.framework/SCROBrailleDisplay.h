
@interface SCROBrailleDisplay : NSObject <BRLTBrailleStateManagerDelegate, SCROBrailleDisplayCommandDispatcherDelegate, SCROBrailleDriverDelegate> {
    double  _autoAdvanceDuration;
    bool  _autoAdvanceEnabled;
    NSTimer * _autoAdvanceTimer;
    bool  _automaticBrailleTranslationEnabled;
    struct __CFRunLoopTimer { } * _blinkerEventTimer;
    bool  _blinkingEnabled;
    <SCROBrailleDriverProtocol> * _brailleDriver;
    int  _brailleInputMode;
    double  _brailleKeyDebounceTimeout;
    SCROBrailleLine * _brailleLine;
    <SCROBrailleDisplayCommandDispatcherProtocol> * _commandDispatcher;
    NSLock * _contentLock;
    <SCROBrailleDisplayDelegate> * _delegate;
    bool  _delegateWantsDisplayCallback;
    NSString * _driverIdentifier;
    NSString * _driverModelIdentifier;
    SCROBrailleEventDispatcher * _eventDispatcher;
    id /* block */  _eventHandled;
    SCROBrailleDisplayInput * _input;
    bool  _inputAllowed;
    int  _inputContractionMode;
    bool  _inputEnabled;
    struct __CFRunLoopTimer { } * _inputEventTimer;
    bool  _inputPaused;
    double  _inputPausedTime;
    bool  _inputShowEightDot;
    <SCROIOElementProtocol> * _ioElement;
    bool  _isValid;
    bool  _kSCROBrailleLatinEscapeEnabled;
    NSMutableArray * _keyEventsQueue;
    bool  _latinEscapeEnabled;
    long long  _mainSize;
    bool  _needsPanUpdating;
    bool  _needsUpdating;
    int  _outputContractionMode;
    bool  _outputShowEightDot;
    bool  _panWithTextCursorEnabled;
    unsigned int  _persistentKeyModifiers;
    bool  _postsKeyboardEvents;
    struct __CFRunLoop { } * _runLoop;
    bool  _shouldBatchUpdates;
    SCROBrailleDisplayStatus * _status;
    long long  _statusSize;
    bool  _wordWrapEnabled;
}

@property (nonatomic) double autoAdvanceDuration;
@property (nonatomic) bool autoAdvanceEnabled;
@property (nonatomic, retain) NSTimer *autoAdvanceTimer;
@property (nonatomic) bool automaticBrailleTranslationEnabled;
@property (nonatomic) double brailleKeyDebounceTimeout;
@property (nonatomic, readonly) unsigned long long brailleLineGenerationID;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) bool delegateWantsDisplayCallback;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSAttributedString *editingString;
@property (nonatomic, copy) id /* block */ eventHandled;
@property (nonatomic, readonly) bool hasEdits;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSData *imageData;
@property (nonatomic) bool inputAllowed;
@property (nonatomic) int inputContractionMode;
@property (nonatomic) bool inputShowEightDot;
@property (nonatomic, readonly) long long lineOffset;
@property (nonatomic) int outputContractionMode;
@property (nonatomic) bool outputShowEightDot;
@property (nonatomic) bool panWithTextCursorEnabled;
@property (nonatomic) unsigned int persistentKeyModifiers;
@property (readonly) Class superclass;
@property (nonatomic, readonly) SCROBrailleLine *testingBrailleLine;
@property (nonatomic) bool wordWrapEnabled;

+ (bool)brailleDriverClassIsValid:(Class)arg1;
+ (id)displayWithIOElement:(id)arg1 driverIdentifier:(id)arg2 delegate:(id)arg3;

- (void).cxx_destruct;
- (void)_aggregatedStatusHandler:(id)arg1;
- (bool)_attemptLoad;
- (void)_autoAdvancePanHandler:(id)arg1;
- (void)_beginAutoAdvanceIfEnabled;
- (void)_blinkerEventHandler;
- (void)_bulkStatusAttributesHandler:(id)arg1;
- (void)_configurationChangeHandler;
- (void)_configurationChangeNotification:(id)arg1;
- (bool)_currentChordShouldExecuteEvenDuringTyping;
- (void)_delayedConfigurationChangeNotification;
- (void)_delayedDisplayLoad;
- (void)_delayedSleepNotification:(id)arg1;
- (void)_delayedUnloadNotification;
- (bool)_hasBrailleChord;
- (bool)_hasKeyChord;
- (bool)_hasPressedBrailleKeys;
- (id)_initWithDriver:(id)arg1 driverIdentifier:(id)arg2 ioElement:(id)arg3 delegate:(id)arg4;
- (void)_inputEventHandler;
- (bool)_inputPaused;
- (bool)_isMemorizingKeys;
- (id)_newBrailleKeyForCurrentBrailleChord;
- (id)_newBrailleKeyForCurrentKeyChord;
- (id)_newBrailleKeyboardKeyForText:(id)arg1 modifiers:(unsigned int)arg2;
- (void)_panHandler:(id)arg1;
- (void)_pauseInput;
- (void)_processKeyEvents:(id)arg1;
- (void)_replaceRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 withString:(id)arg2 cursor:(unsigned long long)arg3;
- (void)_runThread;
- (void)_setBatchUpdates:(id)arg1;
- (void)_setBrailleFormatter:(id)arg1;
- (void)_setBrailleFormatterHandler:(id)arg1;
- (void)_setBrailleKeyDebounceTimeoutHandler:(double)arg1;
- (void)_setDelegateWantsDisplayCallbackHandler:(id)arg1;
- (void)_setTactileGraphicsImageDataHandler:(id)arg1;
- (void)_simulateKeypressHandler:(id)arg1;
- (void)_singleLetterInputHandler:(id)arg1;
- (void)_sleepNotification:(id)arg1;
- (void)_startEditingText;
- (void)_statusDisplayHandler:(id)arg1;
- (id)_statusStringWithDictionary:(id)arg1;
- (void)_stopMemorization;
- (void)_textSearchModeHandler:(id)arg1;
- (void)_translateBrailleStringAndPostEvent;
- (void)_translateBrailleToClipboard;
- (void)_unloadHandler;
- (void)_unloadNotification:(id)arg1;
- (void)_unpauseInput;
- (void)_unpauseInputAndProcessKeyEvents;
- (void)_updateDisplay;
- (id)aggregatedStatus;
- (double)autoAdvanceDuration;
- (bool)autoAdvanceEnabled;
- (id)autoAdvanceTimer;
- (bool)automaticBrailleTranslationEnabled;
- (void)beginUpdates;
- (void)brailleDisplayDeletedCharacter:(id)arg1;
- (void)brailleDisplayInsertedCharacter:(id)arg1 modifiers:(id)arg2;
- (void)brailleDisplayStringDidChange:(id)arg1 brailleSelection:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 modifiers:(id)arg3;
- (void)brailleDriverDidReceiveInput;
- (id)brailleInputManager;
- (double)brailleKeyDebounceTimeout;
- (unsigned long long)brailleLineGenerationID;
- (id)canvasDescriptor;
- (id)configuration;
- (void)dealloc;
- (bool)delegateWantsDisplayCallback;
- (void)didInsertScriptString:(id)arg1;
- (id)driverIdentifier;
- (id)driverModelIdentifier;
- (id)editingString;
- (void)endUpdates;
- (id /* block */)eventHandled;
- (void)handleCommandDeleteKeyEvent:(id)arg1 forDispatcher:(id)arg2;
- (void)handleCommandEscapeKeyEvent:(id)arg1 forDispatcher:(id)arg2;
- (void)handleCommandForwardDeleteKeyEvent:(id)arg1 forDispatcher:(id)arg2;
- (void)handleCommandMoveLeftForDispatcher:(id)arg1;
- (void)handleCommandMoveRightForDispatcher:(id)arg1;
- (void)handleCommandPanLeftForDispatcher:(id)arg1;
- (void)handleCommandPanRightForDispatcher:(id)arg1;
- (void)handleCommandReturnBrailleEvent:(id)arg1 forDispatcher:(id)arg2;
- (void)handleCommandRouterKeyEvent:(id)arg1 forDispatcher:(id)arg2;
- (void)handleCommandToggleContractedBrailleEvent:(id)arg1 forDispatcher:(id)arg2;
- (void)handleCommandToggleEightDotBrailleEvent:(id)arg1 forDispatcher:(id)arg2;
- (void)handleCommandTranslateForDispatcher:(id)arg1;
- (void)handleCommandWordDescriptionEvent:(id)arg1 forDispatcher:(id)arg2;
- (void)handleEvent:(id)arg1;
- (void)handleUnsupportedKeyEvent:(id)arg1 forDispatcher:(id)arg2;
- (bool)hasEdits;
- (id)imageData;
- (bool)inputAllowed;
- (int)inputContractionMode;
- (bool)inputShowEightDot;
- (void)insertTypingString:(id)arg1;
- (void)invalidate;
- (id)ioElement;
- (bool)isLoaded;
- (bool)isValid;
- (id)keyArrayForBrailleStringWithCurrentModifiers:(id)arg1;
- (id)lineDescriptor;
- (long long)lineOffset;
- (long long)mainSize;
- (long long)masterStatusCellIndex;
- (int)outputContractionMode;
- (bool)outputShowEightDot;
- (void)panBeginning;
- (void)panEnd;
- (void)panLeft;
- (void)panRight;
- (bool)panWithTextCursorEnabled;
- (unsigned int)persistentKeyModifiers;
- (id)realStatus;
- (void)replaceScriptStringRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 withScriptString:(id)arg2 cursorLocation:(unsigned long long)arg3;
- (void)requestFlushLine;
- (void)requestSpeech:(id)arg1 language:(id)arg2;
- (void)scriptSelectionDidChange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setAggregatedStatus:(id)arg1;
- (void)setAutoAdvanceDuration:(double)arg1;
- (void)setAutoAdvanceEnabled:(bool)arg1;
- (void)setAutoAdvanceTimer:(id)arg1;
- (void)setAutomaticBrailleTranslationEnabled:(bool)arg1;
- (void)setBrailleFormatter:(id)arg1;
- (void)setBrailleKeyDebounceTimeout:(double)arg1;
- (void)setDelegateWantsDisplayCallback:(bool)arg1;
- (void)setEventHandled:(id /* block */)arg1;
- (void)setImageData:(id)arg1;
- (void)setInputAllowed:(bool)arg1;
- (void)setInputContractionMode:(int)arg1;
- (void)setInputShowEightDot:(bool)arg1;
- (void)setMasterStatusCellIndex:(long long)arg1;
- (void)setOutputContractionMode:(int)arg1;
- (void)setOutputShowEightDot:(bool)arg1;
- (void)setPanWithTextCursorEnabled:(bool)arg1;
- (void)setPersistentKeyModifiers:(unsigned int)arg1;
- (void)setPrepareToMemorizeNextKey:(bool)arg1 immediate:(bool)arg2;
- (void)setSingleLetterInputIsOn:(bool)arg1;
- (void)setStatusAttributesWithMasterCellIndex:(long long)arg1 virtualAlignment:(int)arg2;
- (void)setTextSearchModeOn:(bool)arg1;
- (void)setVirtualStatusAlignment:(int)arg1;
- (void)setWordWrapEnabled:(bool)arg1;
- (void)simulateKeypress:(id)arg1;
- (void)sleep;
- (long long)statusSize;
- (id)testingBrailleLine;
- (int)token;
- (long long)tokenForRouterIndex:(long long)arg1 location:(long long*)arg2 appToken:(id*)arg3;
- (void)translateBrailleToClipboard;
- (void)unpauseInputOnBrailleFormatterChange;
- (void)unsleep;
- (id)virtualStatus;
- (int)virtualStatusAlignment;
- (bool)wordWrapEnabled;

@end
