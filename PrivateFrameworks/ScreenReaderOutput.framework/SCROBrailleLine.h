
@interface SCROBrailleLine : NSObject <BRLTBrailleStateManagerDelegate, BRLTBrailleTranslationDelegateProtocol, BRLTJaBrailleStateManagerDelegate> {
    bool  _anyUnread;
    id  _appToken;
    bool  _blink;
    char * _blinkerBuffer;
    bool  _brailleChunksAreDirty;
    <SCROBrailleDriverProtocol> * _brailleDriver;
    SCROBrailleFormatter * _brailleFormatter;
    bool  _currentUnread;
    char * _displayBuffer;
    bool  _displayEnabled;
    char * _displayFilter;
    int  _displayMode;
    bool  _editableFieldInterruptedByAlert;
    long long  _firstToken;
    long long  _focusLocation;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _focusRange;
    unsigned long long  _generationID;
    long long  _iBeamLocation;
    long long  _insetSize;
    bool  _isPanning;
    bool  _isSingleLetterInputOn;
    bool  _isTextSearchModeOn;
    long long  _lastToken;
    long long  _leftInset;
    NSMutableAttributedString * _lineBuffer;
    int  _lineFocus;
    long long  _lineOffset;
    char * _mainCellsBuffer;
    long long  _masterStatusCellIndex;
    bool  _needsDisplayFlush;
    bool  _needsFocusFlush;
    bool  _needsStatusFlush;
    bool  _panWithTextCursorEnabled;
    NSMutableArray * _pendingBrailleStringDictionaries;
    long long  _previousFirstToken;
    long long  _previousLastToken;
    long long  _previousLineOffset;
    long long  _rightInset;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _selectionRange;
    bool  _showDotsSevenAndEight;
    long long  _size;
    BRLTBrailleStateManager * _stateManager;
    NSData * _statusData;
    char * _statusFilter;
    long long  _statusSize;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _suggestionRange;
    bool  _supportsCanvas;
    <BRLTBrailleStateManagerDelegate> * _translationDelegate;
    SCROBrailleLineVirtualStatus * _virtualStatus;
    bool  _wordWrapEnabled;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool displayEnabled;
@property (nonatomic) bool editableFieldInterruptedByAlert;
@property (nonatomic, readonly) NSAttributedString *editingString;
@property (nonatomic) unsigned long long generationID;
@property (nonatomic, readonly) bool hasEdits;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSData *imageData;
@property (nonatomic) bool isSingleLetterInputOn;
@property (nonatomic) bool isTextSearchModeOn;
@property (nonatomic) long long lineOffset;
@property (nonatomic, readonly) bool needsDisplayFlush;
@property (nonatomic) bool panWithTextCursorEnabled;
@property (nonatomic, retain) NSMutableArray *pendingBrailleStringDictionaries;
@property (nonatomic, readonly) BRLTBrailleStateManager *stateManager;
@property (readonly) Class superclass;
@property (nonatomic) <BRLTBrailleStateManagerDelegate> *translationDelegate;
@property (nonatomic, readonly) bool wantsEdits;
@property (nonatomic) bool wordWrapEnabled;

+ (void)initialize;

- (void).cxx_destruct;
- (bool)_allowInset;
- (id)_applySuggestionCellsToPrintBraille:(id)arg1;
- (bool)_blink:(bool)arg1;
- (bool)_deleteAtCursorSilently:(bool)arg1;
- (id)_dotDescriptionForBrailleString:(id)arg1;
- (void)_flush;
- (void)_flushRealStatus;
- (bool)_forwardDeleteAtCursorSilently:(bool)arg1;
- (long long)_indexOfWhitespaceAfterIBeam:(long long)arg1 inLine:(id)arg2;
- (long long)_indexOfWhitespaceBeforeIBeam:(long long)arg1 inLine:(id)arg2;
- (bool)_insertBrailleStringAtCursor:(id)arg1 modifiers:(id)arg2 silently:(bool)arg3;
- (id)_japaneseIndicatorNameForBrailleString:(id)arg1;
- (bool)_setMainCells:(const char *)arg1 length:(long long)arg2;
- (id)_spokenStringForBrailleString:(id)arg1 isDelete:(bool)arg2 speakLiterally:(out bool*)arg3 modifiers:(id)arg4;
- (id)_translatedTextForPrefixBraille:(id)arg1 printBraille:(id)arg2 translationMode:(unsigned long long)arg3;
- (id)_translatedTextInIsolationForBraille:(id)arg1 translationMode:(unsigned long long)arg2;
- (id)_trimCommonPrefixWithString:(id)arg1 fromString:(id)arg2;
- (void)_updateOffsets;
- (void)addAttributedPaddingToLineBuffer:(id)arg1;
- (void)addAttributedStringToLineBuffer:(id)arg1 brailleOffset:(unsigned long long)arg2;
- (bool)anyUnread;
- (id)appToken;
- (void)blinker;
- (void)brailleDisplayDeletedCharacter:(id)arg1;
- (void)brailleDisplayInsertedCharacter:(id)arg1 modifiers:(id)arg2;
- (void)brailleDisplayStringDidChange:(id)arg1 brailleSelection:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 modifiers:(id)arg3;
- (unsigned long long)bufferIndexForRouterIndex:(unsigned long long)arg1;
- (bool)canPanLeft;
- (bool)canPanRight;
- (bool)currentUnread;
- (void)dealloc;
- (bool)deleteAtCursor;
- (id)description;
- (void)didInsertScriptString:(id)arg1;
- (void)discardEdits;
- (bool)display;
- (bool)displayEnabled;
- (int)displayMode;
- (bool)editableFieldInterruptedByAlert;
- (id)editingString;
- (void)enumerateWordsBetweenCharacters:(id)arg1 text:(id)arg2 inRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3 usingBlock:(id /* block */)arg4;
- (long long)firstToken;
- (bool)forwardDeleteAtCursor;
- (unsigned long long)generationID;
- (bool)getStatusRouterIndex:(long long*)arg1 forRawIndex:(long long)arg2;
- (bool)hasEdits;
- (id)imageCanvas;
- (id)imageData;
- (id)initWithDriver:(id)arg1 mainSize:(long long)arg2 statusSize:(long long)arg3;
- (bool)insertBrailleStringAtCursor:(id)arg1 modifiers:(id)arg2;
- (bool)isSingleLetterInputOn;
- (bool)isTextSearchModeOn;
- (long long)lastToken;
- (int)lineFocus;
- (long long)lineOffset;
- (long long)masterStatusCellIndex;
- (bool)moveCursorLeft;
- (bool)moveCursorRight;
- (bool)moveCursorToRouterIndex:(unsigned long long)arg1 forwardToScreenReader:(out bool*)arg2 updateRouterLocation:(long long*)arg3;
- (bool)needsDisplayFlush;
- (id)newLineDescriptor;
- (id)newLineDescriptorWithoutPadding;
- (bool)panBeginning;
- (bool)panEnd;
- (bool)panLeft;
- (bool)panRight;
- (bool)panWithTextCursorEnabled;
- (id)pendingBrailleStringDictionaries;
- (id)printBrailleForText:(id)arg1 language:(id)arg2 mode:(unsigned long long)arg3 textPositionsRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg4 locations:(id*)arg5 textFormattingRanges:(id)arg6;
- (void)replaceScriptStringRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 withScriptString:(id)arg2 cursorLocation:(unsigned long long)arg3;
- (void)requestSpeech:(id)arg1 language:(id)arg2;
- (void)scriptSelectionDidChange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setAnyUnread:(bool)arg1;
- (void)setAppToken:(id)arg1;
- (void)setCurrentUnread:(bool)arg1;
- (void)setDisplayEnabled:(bool)arg1;
- (void)setDisplayMode:(int)arg1;
- (void)setEditableFieldInterruptedByAlert:(bool)arg1;
- (void)setFormatter:(id)arg1;
- (void)setGenerationID:(unsigned long long)arg1;
- (void)setImageData:(id)arg1;
- (void)setIsSingleLetterInputOn:(bool)arg1;
- (void)setIsTextSearchModeOn:(bool)arg1;
- (void)setLineFocus:(int)arg1;
- (void)setLineOffset:(long long)arg1;
- (void)setMainSize:(long long)arg1;
- (void)setMasterStatusCellIndex:(long long)arg1;
- (void)setPanWithTextCursorEnabled:(bool)arg1;
- (void)setPendingBrailleStringDictionaries:(id)arg1;
- (void)setRealStatus:(id)arg1;
- (void)setShowDotsSevenAndEight:(bool)arg1;
- (void)setStatusSize:(long long)arg1;
- (void)setTranslationDelegate:(id)arg1;
- (void)setVirtualStatus:(id)arg1 alignment:(int)arg2;
- (void)setWordWrapEnabled:(bool)arg1;
- (bool)showDotsSevenAndEight;
- (id)spokenStringForDeletedBrailleString:(id)arg1 speakLiterally:(out bool*)arg2;
- (id)spokenStringForInsertedBrailleString:(id)arg1 speakLiterally:(out bool*)arg2 modifiers:(id)arg3;
- (id)stateManager;
- (id)textForPrintBraille:(id)arg1 language:(id)arg2 mode:(unsigned long long)arg3 locations:(id*)arg4;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })textRangeForBrailleRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (long long)tokenForRouterIndex:(long long*)arg1 location:(long long*)arg2 appToken:(id*)arg3;
- (void)translate;
- (id)translatedBrailleForTableIdentifier:(id)arg1;
- (id)translationDelegate;
- (bool)wantsEdits;
- (bool)wordWrapEnabled;

@end
