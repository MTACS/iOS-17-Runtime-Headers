
@interface SBNestingViewController : UIViewController <SBNestingViewControllerDelegate, SBViewControllerTransitionContextDelegate> {
    id /* block */  _clientOperationCompletion;
    SBViewControllerTransitionContext * _currentTransition;
    long long  _currentTransitionOperation;
    <SBNestingViewControllerDelegate> * _delegate;
    SBNestingViewController * _nestedViewController;
    SBNestingViewController * _parentNestingViewController;
    NSHashTable * _transitionObservers;
}

@property (nonatomic, copy) id /* block */ clientOperationCompletion;
@property (nonatomic, retain) SBViewControllerTransitionContext *currentTransition;
@property (nonatomic) long long currentTransitionOperation;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) SBNestingViewController *deepestNestedDescendantViewController;
@property (nonatomic) <SBNestingViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isTransitioning;
@property (nonatomic, retain) SBNestingViewController *nestedViewController;
@property (nonatomic, readonly, copy) NSArray *nestedViewControllers;
@property (nonatomic) SBNestingViewController *parentNestingViewController;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSHashTable *transitionObservers;
@property (nonatomic, readonly) SBNestingViewController *viewControllerCurrentlyDrivingTransition;
@property (nonatomic, readonly) bool wantsModalPresentation;

- (void).cxx_destruct;
- (id)_descriptionForOperation:(long long)arg1;
- (void)_handleAddChildViewController:(id)arg1;
- (void)_handleRemoveChildViewController:(id)arg1;
- (void)_handleWillAddChildViewController:(id)arg1;
- (void)_handleWillRemoveChildViewController:(id)arg1;
- (void)_performOperation:(long long)arg1 onViewController:(id)arg2 animated:(bool)arg3 withCompletion:(id /* block */)arg4;
- (void)_setFinalStateForTransitioningViewController:(id)arg1;
- (bool)_shouldAddTransitioningViewControllerAfterCurrentTransitionCompletes;
- (void)_updateStateForTransitioningViewController:(id)arg1;
- (void)addNestedViewController:(id)arg1;
- (void)addTransitionObserver:(id)arg1;
- (void)addViewToHierarchyForNestedViewController:(id)arg1;
- (id /* block */)clientOperationCompletion;
- (id)currentTransition;
- (long long)currentTransitionOperation;
- (id)deepestNestedDescendantViewController;
- (id)delegate;
- (void)dismissViewControllerAnimated:(bool)arg1 completion:(id /* block */)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameForNestedViewController:(id)arg1 afterOperation:(long long)arg2 withParentContainerSize:(struct CGSize { double x1; double x2; })arg3;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (bool)isTransitioning;
- (id)nestedViewController;
- (id)nestedViewControllers;
- (id)nestingViewController:(id)arg1 animationControllerForOperation:(long long)arg2 onViewController:(id)arg3 animated:(bool)arg4;
- (id)nestingViewController:(id)arg1 interactionControllerForAnimationController:(id)arg2;
- (id)nestingViewController:(id)arg1 sourceViewForPresentingViewController:(id)arg2;
- (void)nestingViewController:(id)arg1 willPerformOperation:(long long)arg2 onViewController:(id)arg3 withTransitionCoordinator:(id)arg4;
- (void)nestingViewController:(id)arg1 willPresentViewController:(id)arg2;
- (id)parentNestingViewController;
- (void)popNestedViewControllerAnimated:(bool)arg1 withCompletion:(id /* block */)arg2;
- (void)pushNestedViewController:(id)arg1 animated:(bool)arg2 withCompletion:(id /* block */)arg3;
- (void)removeNestedViewController:(id)arg1;
- (void)removeTransitionObserver:(id)arg1;
- (void)removeViewFromHierarchyForNestedViewController:(id)arg1;
- (void)setClientOperationCompletion:(id /* block */)arg1;
- (void)setCurrentTransition:(id)arg1;
- (void)setCurrentTransitionOperation:(long long)arg1;
- (void)setDelegate:(id)arg1;
- (void)setNestedViewController:(id)arg1;
- (void)setNestedViewControllers:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)setParentNestingViewController:(id)arg1;
- (void)setTransitionObservers:(id)arg1;
- (bool)shouldAutomaticallyForwardAppearanceMethods;
- (struct CGSize { double x1; double x2; })sizeForChildContentContainer:(id)arg1 withParentContainerSize:(struct CGSize { double x1; double x2; })arg2;
- (id)transitionCoordinator;
- (void)transitionDidBegin:(id)arg1;
- (void)transitionDidFinish:(id)arg1;
- (void)transitionDidReverse:(id)arg1;
- (id)transitionObservers;
- (void)transitionWillBegin:(id)arg1;
- (void)transitionWillFinish:(id)arg1;
- (void)transitionWillReverse:(id)arg1;
- (void)traverseNestedViewControllersWithBlock:(id /* block */)arg1;
- (id)viewControllerCurrentlyDrivingTransition;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 forOperation:(long long)arg2 withTransitionCoordinator:(id)arg3;
- (bool)wantsModalPresentation;

@end
