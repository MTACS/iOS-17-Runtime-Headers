
@interface SBIcon : NSObject <BSDescriptionProviding, NSCopying, SBHIconCollationSupport, SBHUniquelyIdentifiable, SBIconIndexNode> {
    id  _badgeNumberOrString;
    <SBIconDelegate> * _delegate;
    unsigned long long  _gridSizeClass;
    NSString * _iconImageCacheIdentifier;
    NSHashTable * _observers;
    id  _overrideBadgeNumberOrString;
    bool  _uninstalled;
}

@property (nonatomic, readonly, copy) NSString *automationID;
@property (nonatomic, readonly) id badgeNumberOrString;
@property (nonatomic, readonly) long long badgeValue;
@property (nonatomic, readonly) bool canBeAddedToMultiItemDrag;
@property (nonatomic, readonly) bool canBeAddedToSubfolder;
@property (nonatomic, readonly) bool canBeReceivedByIcon;
@property (nonatomic, readonly) bool canGenerateIconsInBackground;
@property (nonatomic, readonly) bool canReceiveGrabbedIcon;
@property (nonatomic, readonly) bool canTightenLabel;
@property (nonatomic, readonly) bool canTruncateLabel;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <SBIconDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly, copy) NSString *displayName;
@property (nonatomic, readonly) NSUserActivity *draggingUserActivity;
@property (nonatomic, readonly, copy) NSString *folderFallbackTitle;
@property (nonatomic, readonly, copy) NSArray *folderTitleOptions;
@property (nonatomic) unsigned long long gridSizeClass;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSArray *iTunesCategoriesOrderedByRelevancy;
@property (nonatomic, copy) NSString *iconImageCacheIdentifier;
@property (nonatomic, readonly) long long labelAccessoryType;
@property (getter=isLaunchDisabledForObscuredReason, nonatomic, readonly) bool launchDisabledForObscuredReason;
@property (getter=isLaunchEnabled, nonatomic, readonly) bool launchEnabled;
@property (nonatomic, copy) id overrideBadgeNumberOrString;
@property (getter=isProgressPaused, nonatomic, readonly) bool progressPaused;
@property (nonatomic, readonly) double progressPercent;
@property (nonatomic, readonly) long long progressState;
@property (nonatomic, readonly) bool shouldAnimateProgress;
@property (nonatomic, readonly) bool shouldWarmUp;
@property (readonly) Class superclass;
@property (nonatomic, readonly) unsigned long long supportedGridSizeClasses;
@property (nonatomic, readonly) bool supportsRasterization;
@property (nonatomic, readonly) bool supportsStackConfiguration;
@property (nonatomic, readonly, copy) NSArray *tags;
@property (getter=isTimedOut, nonatomic, readonly) bool timedOut;
@property (nonatomic, readonly, copy) NSString *uninstallAlertBody;
@property (nonatomic, readonly, copy) NSString *uninstallAlertCancelTitle;
@property (nonatomic, readonly, copy) NSString *uninstallAlertConfirmTitle;
@property (nonatomic, readonly, copy) NSString *uninstallAlertTitle;
@property (getter=isUninstallSupported, nonatomic, readonly) bool uninstallSupported;
@property (getter=isUninstalled, nonatomic, readonly) bool uninstalled;
@property (nonatomic, readonly, copy) NSString *uniqueIdentifier;

+ (bool)canGenerateIconsInBackground;
+ (bool)forcesBackgroundIconGeneration;
+ (id)genericIconImageWithInfo:(struct SBIconImageInfo { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; })arg1;
+ (bool)hasIconImage;
+ (id)iconImageFromUnmaskedImage:(id)arg1 info:(struct SBIconImageInfo { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; })arg2;

- (void).cxx_destruct;
- (void)_notifyAccessoriesDidUpdate;
- (void)_notifyImageDidUpdate;
- (void)_notifyLaunchEnabledDidChange;
- (id)_sbhIconLibraryCollationString;
- (id)_sbhIconLibraryOverrideCollationSectionTitle;
- (void)_setPropertiesFromIcon:(id)arg1;
- (id)accessoryTextForLocation:(id)arg1;
- (long long)accessoryTypeForLocation:(id)arg1;
- (void)addNodeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (id)application;
- (id)applicationBundleID;
- (id)applicationPlaceholder;
- (void)archivableStateDidChange;
- (id)automationID;
- (id)badgeNumberOrString;
- (long long)badgeValue;
- (bool)canBeAddedToMultiItemDrag;
- (bool)canBeAddedToSubfolder;
- (bool)canBeReceivedByIcon;
- (bool)canGenerateIconsInBackground;
- (bool)canReceiveGrabbedIcon;
- (bool)canTightenLabel;
- (bool)canTruncateLabel;
- (void)completeUninstall;
- (id)containedNodeIdentifiers;
- (bool)containsNodeIdentifier:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)delegate;
- (id)description;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
- (id)displayName;
- (id)displayNameForLocation:(id)arg1;
- (id)displayNameForObscuredDisabledLaunchForLocation:(id)arg1;
- (id)draggingUserActivity;
- (void)enumerateObserversUsingBlock:(id /* block */)arg1;
- (id)folder;
- (id)folderFallbackTitle;
- (id)folderTitleOptions;
- (id)generateIconImageWithInfo:(struct SBIconImageInfo { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; })arg1;
- (id)genericIconImageWithInfo:(struct SBIconImageInfo { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; })arg1;
- (unsigned long long)gridSizeClass;
- (bool)hasApplication;
- (bool)hasApplicationPlaceholder;
- (bool)hasObserver:(id)arg1;
- (id)iTunesCategoriesOrderedByRelevancy;
- (id)iconImageCacheIdentifier;
- (Class)iconImageViewClassForLocation:(id)arg1;
- (id)iconImageWithInfo:(struct SBIconImageInfo { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; })arg1;
- (id)iconLibraryQueryingAlphaSortString;
- (id)iconLibraryQueryingFilterStrings;
- (id)indexPathsForContainedNodeIdentifier:(id)arg1 prefixPath:(id)arg2;
- (bool)isAdditionalItemsIndicatorIcon;
- (bool)isAppClipIcon;
- (bool)isApplicationIcon;
- (bool)isBookmarkIcon;
- (bool)isCategoryIcon;
- (bool)isClusteredIconPlaceholder;
- (bool)isDebugIcon;
- (bool)isFolderIcon;
- (bool)isGrabbedIconPlaceholder;
- (bool)isGridSizeClassAllowed:(unsigned long long)arg1;
- (bool)isLaunchDisabledForObscuredReason;
- (bool)isLaunchEnabled;
- (bool)isLeafIcon;
- (bool)isLibraryPodIcon;
- (bool)isPlaceholder;
- (bool)isProgressPaused;
- (bool)isTimedOut;
- (bool)isUninstallSupported;
- (bool)isUninstalled;
- (bool)isWidgetIcon;
- (bool)isWidgetStackIcon;
- (long long)labelAccessoryType;
- (void)launchFromLocation:(id)arg1 context:(id)arg2;
- (id)leafIdentifier;
- (void)localeChanged;
- (long long)localizedCompareDisplayNames:(id)arg1;
- (id)nodeDescriptionWithPrefix:(id)arg1;
- (id)nodeIdentifier;
- (id)nodesAlongIndexPath:(id)arg1 consumedIndexes:(unsigned long long)arg2;
- (void)noteBadgeDidChange;
- (id)overrideBadgeNumberOrString;
- (id)parentFolderIcon;
- (bool)performLaunchFromLocation:(id)arg1 context:(id)arg2;
- (void)possibleUserTapBeganWithAbsoluteTime:(unsigned long long)arg1 andContinuousTime:(unsigned long long)arg2;
- (void)possibleUserTapDidCancel;
- (double)progressPercent;
- (long long)progressState;
- (void)reloadIconImage;
- (void)removeNodeObserver:(id)arg1;
- (void)removeObserver:(id)arg1;
- (id)representedSceneIdentifier;
- (void)setBadge:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setGridSizeClass:(unsigned long long)arg1;
- (void)setIconImageCacheIdentifier:(id)arg1;
- (void)setOverrideBadgeNumberOrString:(id)arg1;
- (void)setUninstalled;
- (bool)shouldAnimateProgress;
- (bool)shouldWarmUp;
- (id)statusDescriptionForLocation:(id)arg1;
- (id)succinctDescription;
- (id)succinctDescriptionBuilder;
- (unsigned long long)supportedGridSizeClasses;
- (bool)supportsRasterization;
- (bool)supportsStackConfiguration;
- (id)tags;
- (id)uninstallAlertBody;
- (id)uninstallAlertCancelTitle;
- (id)uninstallAlertConfirmTitle;
- (id)uninstallAlertTitle;
- (id)uniqueIdentifier;
- (id)unmaskedIconImageWithInfo:(struct SBIconImageInfo { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; })arg1;

@end
