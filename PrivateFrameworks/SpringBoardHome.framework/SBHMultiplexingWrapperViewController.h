
@interface SBHMultiplexingWrapperViewController : UIViewController <SBHMultiplexingViewControllerObserver, SBIconViewCustomImageViewControlling> {
    APUIAppPredictionViewController * _appPredictionViewController;
    struct SBIconApproximateLayoutPosition { 
        unsigned long long horizontal; 
        unsigned long long vertical; 
    }  _approximateLayoutPosition;
    unsigned long long  _backgroundAnimationCount;
    UIView * _backgroundView;
    id /* block */  _backgroundViewConfigurator;
    id /* block */  _backgroundViewProvider;
    bool  _canAlignWithGrid;
    unsigned long long  _component;
    UIView * _containerView;
    <SBHMultiplexingWrapperViewControllerDelegate> * _delegate;
    bool  _editing;
    bool  _forcesEdgeAntialiasing;
    SBIcon * _icon;
    struct SBIconImageInfo { 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
        double scale; 
        double continuousCornerRadius; 
    }  _iconImageInfo;
    unsigned long long  _imageViewAlignment;
    _UILegibilitySettings * _legibilitySettings;
    NSString * _location;
    UIViewController * _multiplexingViewController;
    NSHashTable * _observers;
    bool  _overlapping;
    unsigned long long  _pauseReasons;
    bool  _showingContextMenu;
    bool  _showsSquareCorners;
    bool  _userInteractionEnabled;
    bool  _wantsEditingDisplayStyle;
}

@property (nonatomic, readonly) APUIAppPredictionViewController *appPredictionViewController;
@property (nonatomic, readonly, copy) NSArray *applicationShortcutItems;
@property (nonatomic) struct SBIconApproximateLayoutPosition { unsigned long long x1; unsigned long long x2; } approximateLayoutPosition;
@property (nonatomic) bool automaticallyUpdatesVisiblySettled;
@property (nonatomic) unsigned long long backgroundAnimationCount;
@property (nonatomic, retain) UIView *backgroundView;
@property (nonatomic, copy) id /* block */ backgroundViewConfigurator;
@property (nonatomic, copy) id /* block */ backgroundViewProvider;
@property (nonatomic) double brightness;
@property (nonatomic, readonly) bool canAlignWithGrid;
@property (nonatomic, readonly) unsigned long long component;
@property (nonatomic, retain) UIView *containerView;
@property (nonatomic, readonly) double continuousCornerRadius;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <SBHMultiplexingWrapperViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (getter=isDropping, nonatomic) bool dropping;
@property (getter=isEditing, nonatomic) bool editing;
@property (nonatomic) bool forcesEdgeAntialiasing;
@property (getter=isGridAligned, nonatomic, readonly) bool gridAligned;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) SBIcon *icon;
@property (nonatomic) struct SBIconImageInfo { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; } iconImageInfo;
@property (nonatomic) unsigned long long imageViewAlignment;
@property (nonatomic, retain) _UILegibilitySettings *legibilitySettings;
@property (nonatomic, copy) NSString *location;
@property (nonatomic, readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } minimumPreferredEdgeInsetsForContextMenu;
@property (nonatomic, readonly) UIViewController *multiplexingViewController;
@property (getter=isOverlapping, nonatomic) bool overlapping;
@property (nonatomic) unsigned long long pauseReasons;
@property (nonatomic) unsigned long long presentationMode;
@property (getter=isShowingContextMenu, nonatomic) bool showingContextMenu;
@property (nonatomic) bool showsSnapshotWhenDeactivated;
@property (nonatomic) bool showsSquareCorners;
@property (nonatomic, readonly) UIView *snapshotView;
@property (nonatomic, readonly) struct CGPoint { double x1; double x2; } snapshotViewCenter;
@property (nonatomic, readonly) double snapshotViewScaleFactor;
@property (nonatomic, readonly) UIView *springLoadingEffectTargetView;
@property (readonly) Class superclass;
@property (getter=isUserInteractionEnabled, nonatomic) bool userInteractionEnabled;
@property (nonatomic) unsigned long long userVisibilityStatus;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } visibleBounds;
@property (nonatomic, readonly) <SBLeafIconDataSource> *visiblyActiveDataSource;
@property (nonatomic, readonly) bool wantsCaptureOnlyBackgroundView;
@property (nonatomic) bool wantsEditingDisplayStyle;
@property (nonatomic, readonly) bool wantsLabelHidden;

- (void).cxx_destruct;
- (bool)_canShowWhileLocked;
- (void)_configureBackgroundViewIfNecessary;
- (void)_setBackgroundViewWeighting:(double)arg1;
- (void)_updateApproximateWidgetPosition;
- (void)_updateBackgroundViewWeighting;
- (void)_updateEdgeAntialiasing;
- (void)_updateMultiplexingViewControllerModeAnimated:(bool)arg1;
- (void)_updateWidgetViewHitTesting;
- (id)_widgetContextMenuController;
- (void)addCustomImageViewControllerObserver:(id)arg1;
- (id)appPredictionViewController;
- (id)applicationShortcutItems;
- (struct SBIconApproximateLayoutPosition { unsigned long long x1; unsigned long long x2; })approximateLayoutPosition;
- (unsigned long long)backgroundAnimationCount;
- (id)backgroundView;
- (id /* block */)backgroundViewConfigurator;
- (id /* block */)backgroundViewProvider;
- (bool)canAlignWithGrid;
- (unsigned long long)component;
- (id)containerView;
- (double)continuousCornerRadius;
- (id)delegate;
- (void)didSelectApplicationShortcutItem:(id)arg1;
- (unsigned long long)expectedAppPredictionViewControllerMode;
- (bool)forcesEdgeAntialiasing;
- (id)icon;
- (struct SBIconImageInfo { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; })iconImageInfo;
- (unsigned long long)imageViewAlignment;
- (id)initWithIcon:(id)arg1 location:(id)arg2 multiplexingViewController:(id)arg3 appPredictionViewController:(id)arg4 canAlignWithGrid:(bool)arg5;
- (id)initWithIcon:(id)arg1 location:(id)arg2 multiplexingViewController:(id)arg3 component:(unsigned long long)arg4;
- (bool)isEditing;
- (bool)isGridAligned;
- (bool)isOverlapping;
- (bool)isShowingContextMenu;
- (bool)isUserInteractionEnabled;
- (id)legibilitySettings;
- (void)loadView;
- (id)location;
- (id)multiplexingViewController;
- (void)multiplexingViewControllerDidActivate:(id)arg1;
- (unsigned long long)pauseReasons;
- (void)removeCustomImageViewControllerObserver:(id)arg1;
- (void)setApproximateLayoutPosition:(struct SBIconApproximateLayoutPosition { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setBackgroundAnimationCount:(unsigned long long)arg1;
- (void)setBackgroundView:(id)arg1;
- (void)setBackgroundViewConfigurator:(id /* block */)arg1;
- (void)setBackgroundViewProvider:(id /* block */)arg1;
- (void)setContainerView:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEditing:(bool)arg1;
- (void)setEditing:(bool)arg1 animated:(bool)arg2;
- (void)setForcesEdgeAntialiasing:(bool)arg1;
- (void)setIconImageInfo:(struct SBIconImageInfo { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; })arg1;
- (void)setImageViewAlignment:(unsigned long long)arg1;
- (void)setLegibilitySettings:(id)arg1;
- (void)setLocation:(id)arg1;
- (void)setOverlapping:(bool)arg1;
- (void)setPauseReasons:(unsigned long long)arg1;
- (void)setShowingContextMenu:(bool)arg1;
- (void)setShowsSquareCorners:(bool)arg1;
- (void)setUserInteractionEnabled:(bool)arg1;
- (void)setWantsEditingDisplayStyle:(bool)arg1;
- (void)setWantsEditingDisplayStyle:(bool)arg1 animated:(bool)arg2;
- (bool)showsSquareCorners;
- (id)sourceView;
- (void)traitCollectionDidChange:(id)arg1;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillLayoutSubviews;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })visibleBounds;
- (id)visiblyActiveDataSource;
- (bool)wantsCaptureOnlyBackgroundView;
- (bool)wantsEditingDisplayStyle;
- (bool)wantsLabelHidden;
- (void)willShowContextMenuAtLocation:(struct CGPoint { double x1; double x2; })arg1;

@end
