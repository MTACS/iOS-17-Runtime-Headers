
@interface SBRootFolderView : SBFolderView <SBDockViewDelegate, SBFRemoteBasebandLoggingObserver, _UISettingsKeyObserver> {
    bool  _allowsAutoscrollToLeadingCustomView;
    bool  _allowsFreeScrollingUntilScrollingEnds;
    double  _baseOffsetForDeterminingScrollToSearchThreshold;
    <BSInvalidatable> * _configuredForSnapshotPageDotsVisibilityAssertion;
    SBHMinusPageStepper * _customPageAnimationStepper;
    _SBRootFolderViewElementBorrowedAssertion * _dockBorrowedAssertion;
    unsigned long long  _dockEdge;
    bool  _dockExternal;
    SBDockIconListView * _dockListView;
    NSHashTable * _dockOffscreenProgressSettingClients;
    <BSInvalidatable> * _dockStateDumpHandle;
    SBDockView * _dockView;
    SBTitledHomeScreenButton * _doneButton;
    <BSInvalidatable> * _editingPageDotsVisibilityAssertion;
    <SBIconListViewIconLocationTransitioning> * _firstListViewIconLocationTransitionHandler;
    unsigned long long  _folderPageManagementAllowedOrientations;
    SBHRootFolderSettings * _folderSettings;
    long long  _iconListFrameOrientationOverride;
    UILabel * _idleTextView;
    unsigned long long  _ignoresOverscrollOnFirstPageOrientations;
    unsigned long long  _ignoresOverscrollOnLastPageOrientations;
    bool  _isLeadingCustomViewBouncing;
    bool  _lastEventWasAttemptingToOverscrollFirstPage;
    bool  _lastEventWasAttemptingToOverscrollLastPage;
    bool  _leadingCustomViewBouncing;
    UIViewController<SBHRootFolderCustomViewPresenting> * _leadingCustomViewController;
    bool  _leadingCustomViewPageHidden;
    double  _leadingCustomViewVisibilityProgress;
    bool  _occludedByOverlay;
    NSMutableArray * _pageDotsVisibilityAssertions;
    NSTimer * _pageDotsVisibilityTimer;
    double  _pageWidthWhenScrollToSearchBeganDragging;
    SBFParallaxSettings * _parallaxSettings;
    double  _pullDownSearchVisibilityProgress;
    double  _pullToSearchActivationThreshold;
    double  _pullToSearchFadeInThreshold;
    SBHHomePullToSearchSettings * _pullToSearchSettings;
    double  _pullToSearchTranslatesIcons;
    UIView * _scrollAccessoryAuxiliaryView;
    UIView * _scrollAccessoryBackgroundView;
    _SBRootFolderViewElementBorrowedAssertion * _scrollAccessoryBorrowedAssertion;
    SBFolderScrollAccessoryView * _scrollAccessoryView;
    double  _scrollOffsetWhenScrollingBegan;
    bool  _scrollToSearchIsDraggingOrAnimating;
    double  _scrollingAdjustment;
    <BSInvalidatable> * _scrollingPageDotsVisibilityAssertion;
    <BSInvalidatable> * _scrubbingPageDotsVisibilityAssertion;
    SBSearchBackdropView * _searchBackdropView;
    <BSInvalidatable> * _searchButtonDisabledPageDotsVisibilityAssertion;
    <BSInvalidatable> * _searchButtonUnsupportedHardwarePageDotsVisibilityAssertion;
    SBSearchGesture * _searchGesture;
    UIView * _searchPresentableView;
    <SBHSearchPresenting> * _searchPresenter;
    _SBRootFolderLayoutWrapperView * _searchPulldownWrapperView;
    _SBRootFolderLayoutWrapperView * _searchableLeadingCustomWrapperView;
    _SBRootFolderLayoutWrapperView * _searchableTrailingCustomWrapperView;
    bool  _shiftsPullDownSearchForVisibility;
    bool  _showsAddWidgetButton;
    bool  _showsDoneButton;
    <SBRootFolderViewLayoutManager> * _specialLayoutManager;
    double  _titledButtonsAlpha;
    SBFTouchPassThroughView * _titledButtonsContainerView;
    double  _todayViewVisibilityProgress;
    SBSearchBackdropView * _trailingCustomBackdropView;
    UIView * _trailingCustomSearchDimmingView;
    UIViewController<SBHRootFolderCustomViewPresenting> * _trailingCustomViewController;
    double  _trailingCustomViewVisibilityProgress;
    <SBRootFolderViewLayoutManager> * _transitioningNewSpecialLayoutManager;
    <SBRootFolderViewLayoutManager> * _transitioningOldSpecialLayoutManager;
    bool  _userAttemptedToOverscrollFirstPageDuringCurrentGesture;
    bool  _userAttemptedToOverscrollLastPageDuringCurrentGesture;
    bool  _wasScrolling;
    SBTitledHomeScreenButton * _widgetButton;
}

@property (nonatomic) bool allowsAutoscrollToLeadingCustomView;
@property (nonatomic) bool allowsFreeScrollingUntilScrollingEnds;
@property (nonatomic, retain) <BSInvalidatable> *configuredForSnapshotPageDotsVisibilityAssertion;
@property (nonatomic, readonly) double currentDockOffscreenFraction;
@property (nonatomic, readonly) SBHMinusPageStepper *customPageAnimationStepper;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <SBRootFolderViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) _SBRootFolderViewElementBorrowedAssertion *dockBorrowedAssertion;
@property (nonatomic) unsigned long long dockEdge;
@property (getter=isDockExternal, nonatomic, readonly) bool dockExternal;
@property (nonatomic, readonly) double dockHeight;
@property (nonatomic, readonly, copy) NSString *dockIconLocation;
@property (nonatomic, readonly) SBDockIconListView *dockListView;
@property (nonatomic, readonly) SBDockView *dockView;
@property (getter=isDockVisible, nonatomic, readonly) bool dockVisible;
@property (nonatomic, retain) SBTitledHomeScreenButton *doneButton;
@property (nonatomic, retain) <BSInvalidatable> *editingPageDotsVisibilityAssertion;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } enterEditingTouchRect;
@property (nonatomic, retain) <SBIconListViewIconLocationTransitioning> *firstListViewIconLocationTransitionHandler;
@property (nonatomic, retain) SBRootFolder *folder;
@property (nonatomic, readonly) unsigned long long folderPageManagementAllowedOrientations;
@property (nonatomic, retain) SBHRootFolderSettings *folderSettings;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool hidesOffscreenCustomPageViews;
@property (nonatomic, readonly) UILabel *idleTextView;
@property (nonatomic, readonly) unsigned long long ignoresOverscrollOnFirstPageOrientations;
@property (nonatomic, readonly) unsigned long long ignoresOverscrollOnLastPageOrientations;
@property (nonatomic, readonly) bool isPageManagementUITransitioningOutOfVisible;
@property (nonatomic, readonly) <SBRootFolderViewLayoutManager> *layoutManager;
@property (nonatomic, readonly) UIView *leadingCustomView;
@property (getter=isLeadingCustomViewBouncing, nonatomic) bool leadingCustomViewBouncing;
@property (nonatomic, readonly) UIViewController<SBHRootFolderCustomViewPresenting> *leadingCustomViewController;
@property (getter=isLeadingCustomViewPageHidden, nonatomic) bool leadingCustomViewPageHidden;
@property (nonatomic, readonly) long long leadingCustomViewPageIndex;
@property (nonatomic, readonly) double leadingCustomViewPageScrollOffset;
@property (nonatomic) double leadingCustomViewVisibilityProgress;
@property (nonatomic, readonly) UIView *leadingCustomViewWrapperView;
@property (nonatomic, readonly) double maxDockHeight;
@property (getter=isOccludedByOverlay, nonatomic) bool occludedByOverlay;
@property (getter=isOnLeadingCustomPage, nonatomic, readonly) bool onLeadingCustomPage;
@property (getter=isOnTrailingCustomPage, nonatomic, readonly) bool onTrailingCustomPage;
@property (nonatomic, retain) NSMutableArray *pageDotsVisibilityAssertions;
@property (nonatomic, retain) NSTimer *pageDotsVisibilityTimer;
@property (getter=isPageManagementUIVisible, nonatomic, readonly) bool pageManagementUIVisible;
@property (nonatomic, readonly) SBFParallaxSettings *parallaxSettings;
@property (nonatomic, readonly) UIView *pullDownSearchView;
@property (nonatomic) double pullDownSearchVisibilityProgress;
@property (nonatomic) double pullToSearchActivationThreshold;
@property (nonatomic) double pullToSearchFadeInThreshold;
@property (nonatomic, readonly) SBHHomePullToSearchSettings *pullToSearchSettings;
@property (nonatomic) double pullToSearchTranslatesIcons;
@property (nonatomic, readonly) SBHRootFolderVisualConfiguration *rootFolderVisualConfiguration;
@property (nonatomic, readonly) UIView *scrollAccessoryAuxiliaryView;
@property (nonatomic, readonly) UIView *scrollAccessoryBackgroundView;
@property (nonatomic) _SBRootFolderViewElementBorrowedAssertion *scrollAccessoryBorrowedAssertion;
@property (nonatomic, readonly) SBFolderScrollAccessoryView *scrollAccessoryView;
@property (nonatomic) double scrollingAdjustment;
@property (nonatomic, retain) <BSInvalidatable> *scrollingPageDotsVisibilityAssertion;
@property (nonatomic, retain) <BSInvalidatable> *scrubbingPageDotsVisibilityAssertion;
@property (nonatomic, readonly) SBSearchBackdropView *searchBackdropView;
@property (nonatomic, retain) <BSInvalidatable> *searchButtonDisabledPageDotsVisibilityAssertion;
@property (nonatomic, retain) <BSInvalidatable> *searchButtonUnsupportedHardwarePageDotsVisibilityAssertion;
@property (nonatomic, retain) SBSearchGesture *searchGesture;
@property (getter=isSearchHidden, nonatomic) bool searchHidden;
@property (nonatomic, readonly) UIView *searchPresentableView;
@property (nonatomic, readonly) <SBHSearchPresenting> *searchPresenter;
@property (nonatomic, readonly) _SBRootFolderLayoutWrapperView *searchPulldownWrapperView;
@property (nonatomic, readonly) _SBRootFolderLayoutWrapperView *searchableLeadingCustomWrapperView;
@property (nonatomic, readonly) _SBRootFolderLayoutWrapperView *searchableTrailingCustomWrapperView;
@property (nonatomic) bool shiftsPullDownSearchForVisibility;
@property (nonatomic, readonly) bool shouldFadeDockOutDuringTransitionToLeadingCustomView;
@property (nonatomic, readonly) bool shouldFadePageControlOutDuringTransitionToLeadingCustomView;
@property (nonatomic) bool showsAddWidgetButton;
@property (nonatomic) bool showsDoneButton;
@property (nonatomic, retain) <SBRootFolderViewLayoutManager> *specialLayoutManager;
@property (readonly) Class superclass;
@property (nonatomic) double titledButtonsAlpha;
@property (nonatomic, retain) SBFTouchPassThroughView *titledButtonsContainerView;
@property (nonatomic) double todayViewVisibilityProgress;
@property (nonatomic, readonly) SBSearchBackdropView *trailingCustomBackdropView;
@property (nonatomic, readonly) UIView *trailingCustomSearchDimmingView;
@property (nonatomic, readonly) UIView *trailingCustomView;
@property (nonatomic, readonly) UIViewController<SBHRootFolderCustomViewPresenting> *trailingCustomViewController;
@property (nonatomic, readonly) long long trailingCustomViewPageIndex;
@property (nonatomic, readonly) double trailingCustomViewPageScrollOffset;
@property (nonatomic) double trailingCustomViewVisibilityProgress;
@property (nonatomic, retain) <SBRootFolderViewLayoutManager> *transitioningNewSpecialLayoutManager;
@property (nonatomic, retain) <SBRootFolderViewLayoutManager> *transitioningOldSpecialLayoutManager;
@property (nonatomic) bool userAttemptedToOverscrollFirstPageDuringCurrentGesture;
@property (nonatomic) bool userAttemptedToOverscrollLastPageDuringCurrentGesture;
@property (nonatomic, retain) SBTitledHomeScreenButton *widgetButton;

+ (void)_editButtonLayoutFramesInBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 forVisualConfiguration:(id)arg2 withTranslationOffset:(double)arg3 inRTL:(bool)arg4 doneButton:(id)arg5 addWidgetButton:(id)arg6 doneButtonFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg7 addWidgetButtonFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg8;
+ (void)_getTopLeadingButtonFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1 topTrailingButtonFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg2 inBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 forListLayout:(id)arg4 withTranslationOffset:(double)arg5 inRTL:(bool)arg6;
+ (void)_getTopLeadingButtonFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1 topTrailingButtonFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg2 inBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 forVisualConfiguration:(id)arg4 includingContentEdgeInsets:(bool)arg5 withTranslationOffset:(double)arg6 inRTL:(bool)arg7;
+ (id)defaultIconLocation;
+ (id)dockIconLocation;

- (void).cxx_destruct;
- (void)_adjustLeadingCustomContentForEdgeBounce;
- (void)_animateViewsForPullingToSearch;
- (void)_animateViewsForPullingToSearchWithMetrics:(const struct SBRootFolderViewMetrics { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_5_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_5_1_2; } x5; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_6_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_7_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_7_1_2; } x7; double x8; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_9_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_9_1_2; } x9; }*)arg1;
- (void)_animateViewsForScrollingToLeadingOrTrailingCustomView;
- (void)_animateViewsForScrollingToLeadingOrTrailingCustomViewWithMetrics:(const struct SBRootFolderViewMetrics { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_5_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_5_1_2; } x5; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_6_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_7_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_7_1_2; } x7; double x8; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_9_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_9_1_2; } x9; }*)arg1;
- (void)_applyPageDotsVisibilityAssertions;
- (void)_captureInitialSearchScrollTrackingState;
- (void)_cleanUpAfterOverscrollScrollGestureEnded:(id)arg1;
- (void)_cleanUpAfterScrolling;
- (void)_cleanupAfterExtraScrollGesturesCompleted;
- (id)_createIconListViewForList:(id)arg1;
- (void)_currentPageIndexDidChangeFromPageIndex:(long long)arg1;
- (void)_doPageManagementEducation;
- (void)_flashPageDotsForReason:(id)arg1;
- (void)_forceLayoutPageControl;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_iconListFrameForPageRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 atIndex:(unsigned long long)arg2;
- (void)_layoutSubviews;
- (void)_layoutSubviewsForLeadingCustomViewWithMetrics:(const struct SBRootFolderViewMetrics { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_5_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_5_1_2; } x5; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_6_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_7_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_7_1_2; } x7; double x8; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_9_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_9_1_2; } x9; }*)arg1;
- (void)_layoutSubviewsForPulldownSearch;
- (void)_layoutSubviewsForTrailingCustomViewWithMetrics:(const struct SBRootFolderViewMetrics { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_5_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_5_1_2; } x5; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_6_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_7_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_7_1_2; } x7; double x8; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_9_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_9_1_2; } x9; }*)arg1;
- (unsigned long long)_leadingCustomPageCount;
- (bool)_leadingCustomViewShouldBeIndicatedInPageControl;
- (double)_minimumHomeScreenScale;
- (void)_overscrollScrollPanGestureRecognizerDidUpdate:(id)arg1;
- (long long)_pageCountForPageControl;
- (void)_reduceMotionStatusDidChange:(id)arg1;
- (void)_resetSearchScrollTrackingState;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_scaledBoundsForMinimumHomeScreenScale;
- (struct CGPoint { double x1; double x2; })_scrollOffsetForContentAtPageIndex:(long long)arg1;
- (struct CGPoint { double x1; double x2; })_scrollOffsetForPageAtIndex:(long long)arg1 pageWidth:(double)arg2;
- (struct CGPoint { double x1; double x2; })_scrollView:(id)arg1 adjustedOffsetForOffset:(struct CGPoint { double x1; double x2; })arg2 translation:(struct CGPoint { double x1; double x2; })arg3 startPoint:(struct CGPoint { double x1; double x2; })arg4 locationInView:(struct CGPoint { double x1; double x2; })arg5 horizontalVelocity:(inout double*)arg6 verticalVelocity:(inout double*)arg7;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_scrollViewFrameForDockEdge:(unsigned long long)arg1;
- (void)_setupIdleTextPrivacyDisclosures;
- (void)_setupSearchBackdropViewIfNecessary;
- (void)_setupStateDumper;
- (void)_setupTrailingCustomBackdropViewIfNecessary;
- (void)_setupTrailingCustomDimmingViewIfNecessary;
- (bool)_shouldIgnoreOverscrollOnFirstPageForCurrentOrientation;
- (bool)_shouldIgnoreOverscrollOnFirstPageForOrientation:(long long)arg1;
- (bool)_shouldIgnoreOverscrollOnLastPageForCurrentOrientation;
- (bool)_shouldIgnoreOverscrollOnLastPageForOrientation:(long long)arg1;
- (double)_spotlightFirstIconRowOffset;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_statusBarInsetsForDockEdge:(unsigned long long)arg1 dockOffscreenPercentage:(double)arg2;
- (unsigned long long)_trailingCustomPageCount;
- (bool)_trailingCustomViewShouldBeIndicatedInPageControl;
- (void)_updateDockBackgroundViewForOcclusionByOverlay;
- (void)_updateDockOffscreenFractionWithMetrics:(const struct SBRootFolderViewMetrics { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_5_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_5_1_2; } x5; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_6_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_7_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_7_1_2; } x7; double x8; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_9_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_9_1_2; } x9; }*)arg1;
- (void)_updateDockViewZOrdering;
- (void)_updateEditingStateAnimated:(bool)arg1;
- (void)_updateIconListIndexSearchableAndLeadingCustomViewsWithLayout:(bool)arg1;
- (void)_updateIconListLegibilitySettings;
- (void)_updatePageControlNumberOfPages;
- (void)_updatePageControlToIndex:(long long)arg1;
- (void)_updateParallaxSettings;
- (void)_updatePullToSearchSettings;
- (void)_updateScrollingState:(bool)arg1;
- (bool)_useParallaxOnPageControl;
- (void)_willScrollToPageIndex:(long long)arg1 animated:(bool)arg2;
- (id)accessibilityTintColorForDockView:(id)arg1;
- (id)additionalIconListViews;
- (double)additionalScrollWidthToKeepVisibleInOneDirection;
- (bool)allowsAutoscrollToLeadingCustomView;
- (bool)allowsFreeScrollingUntilScrollingEnds;
- (id)beginModifyingDockOffscreenFractionForReason:(id)arg1;
- (id)borrowDockViewForReason:(id)arg1;
- (id)borrowScrollAccessoryForReason:(id)arg1;
- (void)cleanUpAfterTransition;
- (void)clientDidChangeDockOffScreenFraction:(id)arg1;
- (id)configuredForSnapshotPageDotsVisibilityAssertion;
- (double)currentDockOffscreenFraction;
- (id)customPageAnimationStepper;
- (void)dealloc;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (void)didMoveToSuperview;
- (id)dockBorrowedAssertion;
- (unsigned long long)dockEdge;
- (double)dockHeight;
- (id)dockIconLocation;
- (id)dockListView;
- (id)dockView;
- (id)doneButton;
- (void)doneButtonTriggered:(id)arg1;
- (id)editingPageDotsVisibilityAssertion;
- (void)elementBorrowedAssertionDidInvalidate:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })enterEditingTouchRect;
- (void)enterPageManagementUIWithCompletionHandler:(id /* block */)arg1;
- (void)enumerateScrollViewPageViewsUsingBlock:(id /* block */)arg1;
- (void)exitPageManagementUIWithCompletionHandler:(id /* block */)arg1;
- (double)externalDockPageControlVerticalMargin;
- (void)fadeContentForMinificationFraction:(double)arg1;
- (id)firstListViewIconLocationTransitionHandler;
- (void)folderDidChange;
- (unsigned long long)folderPageManagementAllowedOrientations;
- (id)folderSettings;
- (void)getMetrics:(struct SBRootFolderViewMetrics { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_5_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_5_1_2; } x5; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_6_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_7_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_7_1_2; } x7; double x8; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_9_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_9_1_2; } x9; }*)arg1;
- (void)getMetrics:(struct SBRootFolderViewMetrics { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_5_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_5_1_2; } x5; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_6_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_7_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_7_1_2; } x7; double x8; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_9_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_9_1_2; } x9; }*)arg1 dockEdge:(unsigned long long)arg2;
- (bool)hidesOffscreenCustomPageViews;
- (id)highlightingViewForPageControl:(id)arg1;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (id)iconListView:(id)arg1 alternateIconLocationForListWithNonDefaultSizedIcons:(bool)arg2;
- (id)iconListViewAtIndex:(unsigned long long)arg1;
- (id)iconListViewAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)iconListViewForExtraIndex:(unsigned long long)arg1;
- (id)iconListViewForIconListModelIndex:(unsigned long long)arg1;
- (id)iconLocationForListsWithNonDefaultSizedIcons;
- (bool)iconScrollView:(id)arg1 shouldSetAutoscrollContentOffset:(struct CGPoint { double x1; double x2; })arg2;
- (bool)iconScrollView:(id)arg1 shouldSetContentOffset:(struct CGPoint { double x1; double x2; }*)arg2 animated:(bool)arg3;
- (void)iconScrollViewDidCancelTouchTracking:(id)arg1;
- (id)idleTextView;
- (unsigned long long)ignoresOverscrollOnFirstPageOrientations;
- (unsigned long long)ignoresOverscrollOnLastPageOrientations;
- (id)initWithConfiguration:(id)arg1;
- (double)internalDockPageControlVerticalMargin;
- (bool)isDockExternal;
- (bool)isDockViewBorrowed;
- (bool)isDockVisible;
- (bool)isLeadingCustomViewBouncing;
- (bool)isLeadingCustomViewPageHidden;
- (bool)isModifyingDockOffscreenFraction;
- (bool)isOccludedByOverlay;
- (bool)isOnLeadingCustomPage;
- (bool)isOnTrailingCustomPage;
- (bool)isPageControlHidden;
- (bool)isPageIndexCustomAndRightmost:(long long)arg1;
- (bool)isPageManagementUITransitioningOutOfVisible;
- (bool)isPageManagementUIVisible;
- (bool)isScrollAccessoryBorrowed;
- (bool)isSearchHidden;
- (void)layoutDockViewWithMetrics:(const struct SBRootFolderViewMetrics { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_5_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_5_1_2; } x5; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_6_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_7_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_7_1_2; } x7; double x8; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_9_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_9_1_2; } x9; }*)arg1;
- (void)layoutIconListsWithAnimationType:(long long)arg1 forceRelayout:(bool)arg2;
- (id)layoutManager;
- (void)layoutPageControlWithMetrics:(const struct SBRootFolderViewMetrics { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_5_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_5_1_2; } x5; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_6_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_7_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_7_1_2; } x7; double x8; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_9_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_9_1_2; } x9; }*)arg1;
- (void)layoutSearchableViews;
- (void)layoutSearchableViewsWithMetrics:(const struct SBRootFolderViewMetrics { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_5_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_5_1_2; } x5; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_6_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_6_1_2; } x6; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_7_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_7_1_2; } x7; double x8; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_9_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_9_1_2; } x9; }*)arg1;
- (id)leadingCustomView;
- (id)leadingCustomViewController;
- (long long)leadingCustomViewPageIndex;
- (double)leadingCustomViewPageScrollOffset;
- (double)leadingCustomViewPageScrollOffsetUsingPageWidth:(double)arg1;
- (double)leadingCustomViewVisibilityProgress;
- (id)leadingCustomViewWrapperView;
- (id)makeTitledButtonOfClass:(Class)arg1;
- (double)maxDockHeight;
- (void)minimumHomeScreenScaleDidChange;
- (double)minimumHomeScreenScaleForDockView:(id)arg1;
- (id)newDockBackgroundMaterialViewWithInitialWeighting:(double)arg1;
- (id)newDockBackgroundView;
- (id)newHomeScreenButtonBackgroundView;
- (double)pageControlAlpha;
- (void)pageControlDidBeginScrubbing:(id)arg1;
- (void)pageControlDidEndScrubbing:(id)arg1;
- (void)pageControlDidReceiveButtonTap:(id)arg1;
- (id)pageDotsVisibilityAssertions;
- (id)pageDotsVisibilityTimer;
- (id)parallaxSettings;
- (void)prepareForTransition;
- (id)pullDownSearchView;
- (double)pullDownSearchVisibilityProgress;
- (double)pullToSearchActivationThreshold;
- (double)pullToSearchFadeInThreshold;
- (id)pullToSearchSettings;
- (double)pullToSearchTranslatesIcons;
- (void)remoteBasebandLogCollectionStateDidChange:(bool)arg1;
- (void)removeDockOffscreenFractionClient:(id)arg1;
- (id)requirePageDotsVisibilityForReason:(id)arg1;
- (void)resetIconListViews;
- (void)returnScalingView;
- (id)rootFolderVisualConfiguration;
- (id)rootListLayout;
- (id)rootWithWidgetsListLayout;
- (id)scrollAccessoryAuxiliaryView;
- (id)scrollAccessoryBackgroundView;
- (id)scrollAccessoryBorrowedAssertion;
- (id)scrollAccessoryView;
- (void)scrollUsingDecelerationAnimationToPageIndex:(long long)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(bool)arg2;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (bool)scrollViewHeightIncludesPageControlAndDock;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint { double x1; double x2; })arg2 targetContentOffset:(inout struct CGPoint { double x1; double x2; }*)arg3;
- (double)scrollableWidthForVisibleColumnRange;
- (double)scrollingAdjustment;
- (id)scrollingPageDotsVisibilityAssertion;
- (id)scrubbingPageDotsVisibilityAssertion;
- (id)searchBackdropView;
- (id)searchButtonDisabledPageDotsVisibilityAssertion;
- (id)searchButtonUnsupportedHardwarePageDotsVisibilityAssertion;
- (id)searchGesture;
- (id)searchPresentableView;
- (id)searchPresenter;
- (id)searchPulldownWrapperView;
- (id)searchableLeadingCustomWrapperView;
- (id)searchableTrailingCustomWrapperView;
- (void)setAllowsAutoscrollToLeadingCustomView:(bool)arg1;
- (void)setAllowsFreeScrollingUntilScrollingEnds:(bool)arg1;
- (void)setConfiguredForSnapshotPageDotsVisibilityAssertion:(id)arg1;
- (void)setContentAlpha:(double)arg1;
- (void)setContentVisibility:(unsigned long long)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDockBorrowedAssertion:(id)arg1;
- (void)setDockEdge:(unsigned long long)arg1;
- (void)setDoneButton:(id)arg1;
- (void)setEditing:(bool)arg1 animated:(bool)arg2;
- (void)setEditingPageDotsVisibilityAssertion:(id)arg1;
- (void)setFirstListViewIconLocationTransitionHandler:(id)arg1;
- (void)setFolderSettings:(id)arg1;
- (void)setIdleText:(id)arg1;
- (void)setLeadingCustomViewBouncing:(bool)arg1;
- (void)setLeadingCustomViewPageHidden:(bool)arg1;
- (void)setLeadingCustomViewVisibilityProgress:(double)arg1;
- (void)setLegibilitySettings:(id)arg1;
- (void)setNeedsLayout;
- (void)setOccludedByOverlay:(bool)arg1;
- (void)setOrientation:(long long)arg1;
- (void)setPageControlAlpha:(double)arg1;
- (void)setPageControlHidden:(bool)arg1;
- (void)setPageDotsVisibilityAssertions:(id)arg1;
- (void)setPageDotsVisibilityTimer:(id)arg1;
- (void)setPullDownSearchVisibilityProgress:(double)arg1;
- (void)setPullToSearchActivationThreshold:(double)arg1;
- (void)setPullToSearchFadeInThreshold:(double)arg1;
- (void)setPullToSearchTranslatesIcons:(double)arg1;
- (void)setScrollAccessoryBorrowedAssertion:(id)arg1;
- (void)setScrollingAdjustment:(double)arg1;
- (void)setScrollingPageDotsVisibilityAssertion:(id)arg1;
- (void)setScrubbingPageDotsVisibilityAssertion:(id)arg1;
- (void)setSearchButtonDisabledPageDotsVisibilityAssertion:(id)arg1;
- (void)setSearchButtonUnsupportedHardwarePageDotsVisibilityAssertion:(id)arg1;
- (void)setSearchGesture:(id)arg1;
- (void)setSearchHidden:(bool)arg1;
- (void)setShiftsPullDownSearchForVisibility:(bool)arg1;
- (void)setShowsAddWidgetButton:(bool)arg1;
- (void)setShowsAddWidgetButton:(bool)arg1 animated:(bool)arg2;
- (void)setShowsDoneButton:(bool)arg1;
- (void)setShowsDoneButton:(bool)arg1 animated:(bool)arg2;
- (void)setSpecialLayoutManager:(id)arg1;
- (void)setSpecialLayoutManager:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)setSuppressesEditingStateForListViews:(bool)arg1;
- (void)setTitledButtonsAlpha:(double)arg1;
- (void)setTitledButtonsContainerView:(id)arg1;
- (void)setTodayViewVisibilityProgress:(double)arg1;
- (void)setTrailingCustomViewVisibilityProgress:(double)arg1;
- (void)setTransitioningNewSpecialLayoutManager:(id)arg1;
- (void)setTransitioningOldSpecialLayoutManager:(id)arg1;
- (void)setUserAttemptedToOverscrollFirstPageDuringCurrentGesture:(bool)arg1;
- (void)setUserAttemptedToOverscrollLastPageDuringCurrentGesture:(bool)arg1;
- (void)setWidgetButton:(id)arg1;
- (void)settings:(id)arg1 changedValueForKey:(id)arg2;
- (bool)shiftsPullDownSearchForVisibility;
- (bool)shouldFadeDockOutDuringTransitionToLeadingCustomView;
- (bool)shouldFadePageControlOutDuringTransitionToLeadingCustomView;
- (bool)shouldPinScrollingToFirstOrLastPageScrollOffsetForProposedScrollOffset:(struct CGPoint { double x1; double x2; }*)arg1;
- (bool)shouldScrollDockDuringTransitionToLeadingCustomView;
- (bool)shouldScrollPageControlDuringTransitionToLeadingCustomView;
- (bool)showsAddWidgetButton;
- (bool)showsDoneButton;
- (id)specialLayoutManager;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })statusBarInsetsForDockEdge:(unsigned long long)arg1;
- (void)tearDownListViews;
- (double)titledButtonsAlpha;
- (id)titledButtonsContainerView;
- (double)todayViewVisibilityProgress;
- (id)trailingCustomBackdropView;
- (id)trailingCustomSearchDimmingView;
- (id)trailingCustomView;
- (id)trailingCustomViewController;
- (long long)trailingCustomViewPageIndex;
- (double)trailingCustomViewPageScrollOffset;
- (double)trailingCustomViewPageScrollOffsetUsingPageWidth:(double)arg1;
- (double)trailingCustomViewVisibilityProgress;
- (void)transitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (id)transitioningNewSpecialLayoutManager;
- (id)transitioningOldSpecialLayoutManager;
- (void)updateAccessibilityTintColors;
- (void)updateDockViewOrientation;
- (void)updateIconListIndexAndVisibility:(bool)arg1;
- (void)updateIconListViews;
- (void)updatePageControlConfiguration;
- (bool)userAttemptedToOverscrollFirstPageDuringCurrentGesture;
- (bool)userAttemptedToOverscrollLastPageDuringCurrentGesture;
- (id)visibleIconListViews;
- (id)widgetButton;
- (void)widgetButtonTriggered:(id)arg1;
- (void)willMoveToWindow:(id)arg1;

@end
