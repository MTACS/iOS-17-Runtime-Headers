
@interface SBFloatingDockView : SBFTouchPassThroughView {
    SBIconView * _accessoryIconView;
    bool  _accessoryIconViewVisible;
    <SBFloatingDockViewDelegate> * _delegate;
    UIView * _dividerView;
    bool  _editing;
    double  _iconContentScale;
    SBFloatingDockPlatterView * _mainPlatterView;
    struct CGSize { 
        double width; 
        double height; 
    }  _maximumEditingIconSize;
    unsigned long long  _minimumUserIconSpaces;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _paddingEdgeInsets;
    double  _platterVerticalMargin;
    SBDockIconListView * _recentIconListView;
    UIView * _touchReceivingView;
    SBDockIconListView * _userIconListView;
}

@property (nonatomic, retain) SBIconView *accessoryIconView;
@property (getter=isAccessoryIconViewVisible, nonatomic) bool accessoryIconViewVisible;
@property (nonatomic, retain) UIView *backgroundView;
@property (nonatomic, readonly) double contentHeight;
@property (nonatomic, readonly) double currentDockContinuousCornerRadius;
@property (nonatomic) <SBFloatingDockViewDelegate> *delegate;
@property (nonatomic, retain) UIView *dividerView;
@property (getter=isEditing, nonatomic) bool editing;
@property (nonatomic) bool hasPlatterShadow;
@property (nonatomic) double iconContentScale;
@property (nonatomic, readonly) double interIconSpacing;
@property (nonatomic, retain) SBFloatingDockPlatterView *mainPlatterView;
@property (nonatomic, readonly) double maximumDockContinuousCornerRadius;
@property (nonatomic) struct CGSize { double x1; double x2; } maximumEditingIconSize;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } maximumIconSize;
@property (nonatomic, readonly) double maximumInterIconSpacing;
@property (nonatomic, readonly) double maximumPlatterHeight;
@property (nonatomic) unsigned long long minimumUserIconSpaces;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } paddingEdgeInsets;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } platterFrame;
@property (nonatomic, readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } platterShadowOutsets;
@property (nonatomic) double platterVerticalMargin;
@property (nonatomic, retain) SBDockIconListView *recentIconListView;
@property (nonatomic, retain) UIView *touchReceivingView;
@property (nonatomic, retain) SBDockIconListView *userIconListView;

+ (double)_referenceInterIconSpacingWithIconImageInfo:(struct SBIconImageInfo { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; })arg1;
+ (double)contentHeightForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 mainPlatterViewFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
+ (void)getMetrics:(struct { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct UIEdgeInsets { double x_2_1_1; double x_2_1_2; double x_2_1_3; double x_2_1_4; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_5_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_5_1_2; } x5; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_6_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_6_1_2; } x6; double x7; double x8; }*)arg1 forBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 layoutScale:(double)arg3 numberOfUserIcons:(unsigned long long)arg4 numberOfRecentIcons:(unsigned long long)arg5 displayAccessoryIconView:(bool)arg6 paddingEdgeInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg7 referenceIconSize:(struct CGSize { double x1; double x2; })arg8 maximumIconSize:(struct CGSize { double x1; double x2; })arg9 referenceInterIconSpacing:(double)arg10 maximumInterIconSpacing:(double)arg11 platterVerticalMargin:(double)arg12 editing:(bool)arg13;
+ (double)maximumDockContinuousCornerRadiusWithIconImageInfo:(struct SBIconImageInfo { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; })arg1;
+ (struct CGSize { double x1; double x2; })maximumIconSizeWithIconImageInfo:(struct SBIconImageInfo { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; })arg1;
+ (double)maximumInterIconSpacingWithIconImageInfo:(struct SBIconImageInfo { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; })arg1;
+ (double)maximumPlatterHeightWithIconImageInfo:(struct SBIconImageInfo { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; })arg1;
+ (double)minimumPlatterMargin;

- (void).cxx_destruct;
- (void)_dynamicUserInterfaceTraitDidChange;
- (struct SBIconImageInfo { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; })_iconImageInfo;
- (struct CGSize { double x1; double x2; })_referenceIconSize;
- (double)_referenceInterIconSpacing;
- (bool)_shouldDisplayAccessoryIconView;
- (id)accessoryIconView;
- (id)backgroundView;
- (void)bounce;
- (double)contentHeight;
- (double)contentHeightForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (double)currentDockContinuousCornerRadius;
- (id)delegate;
- (id)dividerView;
- (void)getMetrics:(struct { struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_1_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_1_1_2; } x1; struct UIEdgeInsets { double x_2_1_1; double x_2_1_2; double x_2_1_3; double x_2_1_4; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_5_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_5_1_2; } x5; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_6_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_6_1_2; } x6; double x7; double x8; }*)arg1 forBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (bool)hasPlatterShadow;
- (double)iconContentScale;
- (double)iconContentScaleForNumberOfUserIcons:(unsigned long long)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (double)interIconSpacing;
- (bool)isAccessoryIconViewVisible;
- (bool)isEditing;
- (void)layoutSubviews;
- (id)mainPlatterView;
- (double)maximumDockContinuousCornerRadius;
- (struct CGSize { double x1; double x2; })maximumEditingIconSize;
- (struct CGSize { double x1; double x2; })maximumIconSize;
- (double)maximumInterIconSpacing;
- (double)maximumPlatterHeight;
- (unsigned long long)minimumUserIconSpaces;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })paddingEdgeInsets;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })platterFrame;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })platterShadowOutsets;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })platterShadowOutsetsForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (double)platterVerticalMargin;
- (bool)pointInside:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (id)recentIconListView;
- (void)setAccessoryIconView:(id)arg1;
- (void)setAccessoryIconViewVisible:(bool)arg1;
- (void)setBackgroundView:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDividerView:(id)arg1;
- (void)setEditing:(bool)arg1;
- (void)setEditing:(bool)arg1 animated:(bool)arg2;
- (void)setHasPlatterShadow:(bool)arg1;
- (void)setIconContentScale:(double)arg1;
- (void)setMainPlatterView:(id)arg1;
- (void)setMaximumEditingIconSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setMinimumUserIconSpaces:(unsigned long long)arg1;
- (void)setPaddingEdgeInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setPlatterVerticalMargin:(double)arg1;
- (void)setRecentIconListView:(id)arg1;
- (void)setTouchReceivingView:(id)arg1;
- (void)setUserIconListView:(id)arg1;
- (id)touchReceivingView;
- (void)updateDividerVisualStyling;
- (id)userIconListView;

@end
