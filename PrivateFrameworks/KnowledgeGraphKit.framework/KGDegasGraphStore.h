
@interface KGDegasGraphStore : NSObject <KGGraphStore> {
    KGDatabase * _database;
    bool  _isReadOnly;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    long long  _transactionCounter;
    NSURL * _url;
}

@property (nonatomic, readonly) KGDatabase *database;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSUUID *graphIdentifier;
@property (nonatomic) unsigned long long graphVersion;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isReadOnly;
@property (nonatomic, readonly) struct os_unfair_lock_s { unsigned int x1; } lock;
@property (readonly) Class superclass;
@property (nonatomic) long long transactionCounter;
@property (nonatomic, retain) NSURL *url;

+ (bool)copyFromURL:(id)arg1 toURL:(id)arg2 error:(id*)arg3;
+ (bool)destroyAtURL:(id)arg1 error:(id*)arg2;
+ (bool)migrateFromURL:(id)arg1 toURL:(id)arg2 error:(id*)arg3;
+ (id)persistentStoreFileExtension;

- (void).cxx_destruct;
- (id)_lock_edgeIdentifiersMatchingFilter:(id)arg1 intersectingIdentifiers:(id)arg2 error:(id*)arg3;
- (id)_lock_edgeIdentifiersWithStartNodeIdentifiers:(id)arg1 edgeDirection:(unsigned long long)arg2 error:(id*)arg3;
- (id)_lock_edgeIdentifiersWithStartNodeIdentifiers:(id)arg1 intersectingEdgeIdentifiers:(id)arg2 edgeDirection:(unsigned long long)arg3 error:(id*)arg4;
- (bool)_lock_enumerateEdgesWithIdentifiers:(id)arg1 entityFactory:(id)arg2 error:(id*)arg3 block:(id /* block */)arg4;
- (void)_lock_enumerateNodesWithIdentifiers:(id)arg1 entityFactory:(id)arg2 block:(id /* block */)arg3;
- (bool)_lock_filterEdgesWithOptionalLabels:(id)arg1 includeTombstones:(bool)arg2 edgeIdentifiers:(inout id*)arg3 error:(id*)arg4;
- (bool)_lock_filterEdgesWithProperties:(id)arg1 includeTombstones:(bool)arg2 edgeIdentifiers:(inout id*)arg3 error:(id*)arg4;
- (bool)_lock_filterEdgesWithRequiredLabels:(id)arg1 includeTombstones:(bool)arg2 edgeIdentifiers:(inout id*)arg3 error:(id*)arg4;
- (bool)_lock_filterNodesWithOptionalLabels:(id)arg1 includeTombstones:(bool)arg2 nodeIdentifiers:(inout id*)arg3 error:(id*)arg4;
- (bool)_lock_filterNodesWithProperties:(id)arg1 includeTombstones:(bool)arg2 nodeIdentifiers:(inout id*)arg3 error:(id*)arg4;
- (bool)_lock_filterNodesWithRequiredLabels:(id)arg1 includeTombstones:(bool)arg2 nodeIdentifiers:(inout id*)arg3 error:(id*)arg4;
- (id)_lock_graphIdentifier;
- (id)_lock_neighborNodeIdentifiersWithStartNodeIdentifiers:(id)arg1 edgeDirection:(unsigned long long)arg2 edgeFilter:(id)arg3 error:(id*)arg4;
- (id)_lock_nodeForIdentifier:(unsigned long long)arg1 entityFactory:(id)arg2 error:(id*)arg3;
- (id)_lock_nodeIdentifiersMatchingFilter:(id)arg1 intersectingIdentifiers:(id)arg2 error:(id*)arg3;
- (id)_lock_nodeIdentifiersOfEdgesWithIdentifiers:(id)arg1 edgeDirection:(unsigned long long)arg2 error:(id*)arg3;
- (id)_lock_sourcesByTargetWithEdgeIdentifiers:(id)arg1 error:(id*)arg2;
- (id)_lock_targetsBySourceWithEdgeIdentifiers:(id)arg1 error:(id*)arg2;
- (id)_resolvedPropertyValue:(id)arg1 isScalar:(bool*)arg2;
- (bool)addEdges:(id)arg1 error:(id*)arg2;
- (bool)addNodes:(id)arg1 error:(id*)arg2;
- (id)arrayOfEdgesWithIdentifiers:(id)arg1 entityFactory:(id)arg2 error:(id*)arg3;
- (id)arrayOfNodesWithIdentifiers:(id)arg1 entityFactory:(id)arg2 error:(id*)arg3;
- (bool)beginTransactionWithError:(id*)arg1;
- (id)changesAfterToken:(id)arg1 transactionLimit:(long long)arg2 error:(id*)arg3;
- (void)close;
- (bool)commitTransactionWithError:(id*)arg1;
- (bool)copyToURL:(id)arg1 error:(id*)arg2;
- (id)database;
- (id)edgeChangesAfterToken:(id)arg1 transactionLimit:(long long)arg2 edgeFilter:(id)arg3 error:(id*)arg4;
- (id)edgeForIdentifier:(unsigned long long)arg1 entityFactory:(id)arg2 error:(id*)arg3;
- (id)edgeIdentifiers:(id)arg1 sortedByFloatPropertyForName:(id)arg2 ascending:(bool)arg3 limit:(long long)arg4 error:(id*)arg5;
- (id)edgeIdentifiers:(id)arg1 sortedByIntegerPropertyForName:(id)arg2 ascending:(bool)arg3 limit:(long long)arg4 error:(id*)arg5;
- (id)edgeIdentifiers:(id)arg1 sortedByStringPropertyForName:(id)arg2 ascending:(bool)arg3 limit:(long long)arg4 error:(id*)arg5;
- (id)edgeIdentifiersBetween:(id)arg1 endNodeIdentifiers:(id)arg2 edgeFilter:(id)arg3 edgeDirection:(unsigned long long)arg4 error:(id*)arg5;
- (id)edgeIdentifiersForNodeIdentifier:(unsigned long long)arg1 withLabels:(id)arg2 edgeDirection:(unsigned long long)arg3 error:(id*)arg4;
- (id)edgeIdentifiersMatchingFilter:(id)arg1 intersectingIdentifiers:(id)arg2 error:(id*)arg3;
- (id)edgeIdentifiersWithStartNodeIdentifiers:(id)arg1 edgeDirection:(unsigned long long)arg2 error:(id*)arg3;
- (id)edgeIdentifiersWithStartNodeIdentifiers:(id)arg1 intersectingEdgeIdentifiers:(id)arg2 edgeDirection:(unsigned long long)arg3 error:(id*)arg4;
- (id)edgeLabels;
- (id)graphIdentifier;
- (unsigned long long)graphVersion;
- (id)initWithURL:(id)arg1;
- (bool)isReadOnly;
- (id)labelsOfEdgesForIdentifiers:(id)arg1;
- (id)labelsOfNodesForIdentifiers:(id)arg1;
- (struct os_unfair_lock_s { unsigned int x1; })lock;
- (id)neighborNodeIdentifiersWithStartNodeIdentifiers:(id)arg1 edgeDirection:(unsigned long long)arg2 edgeFilter:(id)arg3 error:(id*)arg4;
- (bool)noFatalError;
- (id)nodeChangesAfterToken:(id)arg1 transactionLimit:(long long)arg2 nodeFilter:(id)arg3 error:(id*)arg4;
- (id)nodeForIdentifier:(unsigned long long)arg1 entityFactory:(id)arg2 error:(id*)arg3;
- (id)nodeIdentifiers:(id)arg1 sortedByFloatPropertyForName:(id)arg2 ascending:(bool)arg3 limit:(long long)arg4 error:(id*)arg5;
- (id)nodeIdentifiers:(id)arg1 sortedByIntegerPropertyForName:(id)arg2 ascending:(bool)arg3 limit:(long long)arg4 error:(id*)arg5;
- (id)nodeIdentifiers:(id)arg1 sortedByStringPropertyForName:(id)arg2 ascending:(bool)arg3 limit:(long long)arg4 error:(id*)arg5;
- (id)nodeIdentifiers:(id)arg1 sortedByUnsignedIntegerPropertyForName:(id)arg2 ascending:(bool)arg3 limit:(long long)arg4 error:(id*)arg5;
- (id)nodeIdentifiersMatchingFilter:(id)arg1 intersectingIdentifiers:(id)arg2 error:(id*)arg3;
- (id)nodeIdentifiersOfEdgesWithIdentifiers:(id)arg1 edgeDirection:(unsigned long long)arg2 error:(id*)arg3;
- (id)nodeLabels;
- (bool)openWithMode:(unsigned long long)arg1 error:(id*)arg2;
- (id)orderedArrayOfEdgesWithIdentifiers:(id)arg1 entityFactory:(id)arg2 error:(id*)arg3;
- (id)orderedArrayOfNodesWithIdentifiers:(id)arg1 entityFactory:(id)arg2 error:(id*)arg3;
- (id)propertiesForEdgesWithIdentifiers:(id)arg1 propertyName:(id)arg2 error:(id*)arg3;
- (id)propertiesForNodesWithIdentifiers:(id)arg1 propertyName:(id)arg2 error:(id*)arg3;
- (bool)removeEdgeForIdentifier:(unsigned long long)arg1 error:(id*)arg2;
- (bool)removeEdgesForIdentifiers:(id)arg1 error:(id*)arg2;
- (bool)removeNodeForIdentifier:(unsigned long long)arg1 error:(id*)arg2;
- (bool)removeNodesForIdentifiers:(id)arg1 error:(id*)arg2;
- (bool)rollbackTransactionWithError:(id*)arg1;
- (void)setGraphVersion:(unsigned long long)arg1;
- (void)setTransactionCounter:(long long)arg1;
- (void)setUrl:(id)arg1;
- (id)sourcesByTargetWithEdgeIdentifiers:(id)arg1 error:(id*)arg2;
- (id)targetsBySourceWithEdgeIdentifiers:(id)arg1 error:(id*)arg2;
- (long long)transactionCounter;
- (id)transitiveClosureNeighborNodeIdentifiersWithStartNodeIdentifiers:(id)arg1 edgeDirection:(unsigned long long)arg2 edgeFilter:(id)arg3 error:(id*)arg4;
- (bool)updateEdgeForIdentifier:(unsigned long long)arg1 withProperties:(id)arg2 error:(id*)arg3;
- (bool)updateNodeForIdentifier:(unsigned long long)arg1 withProperties:(id)arg2 error:(id*)arg3;
- (id)url;

@end
