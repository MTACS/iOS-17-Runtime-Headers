
@interface CLSPersonIdentity : CLSPrimitive <PGGraphIngestPerson, PGPersonResult> {
    NSString * _CNIdentifier;
    NSString * _GDIdentifier;
    unsigned long long  _ageCategory;
    NSDate * _anniversaryDate;
    NSDate * _birthdayDate;
    NSString * _companyName;
    NSSet * _emailAddresses;
    NSString * _firstName;
    NSString * _fullName;
    bool  _hasContactProfilePicture;
    bool  _hasPhoneNumber;
    NSMutableArray * _homeAddresses;
    NSString * _inferredLastName;
    bool  _isFavorite;
    bool  _isHidden;
    bool  _isUserCreated;
    NSString * _lastName;
    NSString * _localIdentifier;
    NSString * _localizedShortName;
    NSString * _middleName;
    NSString * _nickname;
    NSSet * _phoneNumbers;
    NSDate * _potentialBirthdayDate;
    unsigned long long  _relationship;
    unsigned long long  _sex;
    NSString * _shareParticipantLocalIdentifier;
    NSMutableDictionary * _socialProfiles;
    NSString * _sourceService;
    NSArray * _sourceURLs;
    NSMutableArray * _workAddresses;
}

@property (nonatomic, retain) NSString *CNIdentifier;
@property (nonatomic, retain) NSString *GDIdentifier;
@property (nonatomic, readonly) unsigned long long ageCategory;
@property (nonatomic) unsigned long long ageCategory;
@property (nonatomic, readonly) NSDate *anniversaryDate;
@property (nonatomic, retain) NSDate *anniversaryDate;
@property (nonatomic, readonly) NSDate *birthdayDate;
@property (nonatomic, retain) NSDate *birthdayDate;
@property (nonatomic, retain) NSString *companyName;
@property (nonatomic, readonly) NSString *contactID;
@property (nonatomic, readonly) NSString *contactIdentifier;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSSet *emailAddresses;
@property (nonatomic, retain) NSString *firstName;
@property (nonatomic, readonly) NSString *fullName;
@property (nonatomic, retain) NSString *fullName;
@property (nonatomic) bool hasContactProfilePicture;
@property (nonatomic) bool hasPhoneNumber;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSString *inferredLastName;
@property (nonatomic, readonly) bool isFavorite;
@property (nonatomic) bool isFavorite;
@property (nonatomic, readonly) bool isHidden;
@property (nonatomic) bool isHidden;
@property (nonatomic, readonly) bool isInferredChild;
@property (nonatomic, readonly) bool isMe;
@property (nonatomic, readonly) bool isUserCreated;
@property (nonatomic) bool isUserCreated;
@property (nonatomic, readonly) bool isVerified;
@property (nonatomic, readonly) NSString *keywordDescription;
@property (nonatomic, retain) NSString *lastName;
@property (nonatomic, readonly) NSString *localIdentifier;
@property (nonatomic, retain) NSString *localIdentifier;
@property (nonatomic, retain) NSString *localizedShortName;
@property (nonatomic, readonly) NSDictionary *locationsByAddressTypes;
@property (nonatomic, retain) NSString *middleName;
@property (nonatomic, retain) NSString *nickname;
@property (nonatomic, retain) NSSet *phoneNumbers;
@property (nonatomic, readonly) NSDate *potentialBirthdayDate;
@property (nonatomic, retain) NSDate *potentialBirthdayDate;
@property (nonatomic, readonly) unsigned long long relationship;
@property (nonatomic) unsigned long long relationship;
@property (nonatomic, readonly) unsigned long long sex;
@property (nonatomic) unsigned long long sex;
@property (nonatomic, readonly) NSString *shareParticipantLocalIdentifier;
@property (nonatomic, retain) NSString *shareParticipantLocalIdentifier;
@property (nonatomic, retain) NSMutableDictionary *socialProfiles;
@property (nonatomic, readonly) NSArray *sourceURLs;
@property (nonatomic, readonly) NSString *suggestedContactIdentifier;
@property (readonly) Class superclass;

// Image: /System/Library/PrivateFrameworks/MediaMiningKit.framework/MediaMiningKit

+ (id)_personRelationshipVocabularyByLocaleDictionary;
+ (id)descriptionForPersonRelationship:(unsigned long long)arg1;
+ (bool)isChildRelationship:(unsigned long long)arg1;
+ (bool)isFamilyRelationship:(unsigned long long)arg1;
+ (bool)isParentRelationship:(unsigned long long)arg1;
+ (bool)isSiblingRelationship:(unsigned long long)arg1;
+ (id)person;
+ (id)personWithCNIdentifier:(id)arg1;
+ (id)personWithGDIdentifier:(id)arg1;
+ (id)personWithLocalIdentifier:(id)arg1;
+ (id)personWithPHPerson:(id)arg1;
+ (id)presentationStringForPeople:(id)arg1;
+ (id)presentationStringForPeople:(id)arg1 withScores:(id)arg2;
+ (id)relationshipRegularExpressionForRelationship:(unsigned long long)arg1 locale:(id)arg2;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)CNIdentifier;
- (id)GDIdentifier;
- (id)_addressArrayFromAddressType:(unsigned long long)arg1;
- (void)_enumerateAddresses:(id)arg1 as:(id)arg2 withBlock:(id /* block */)arg3;
- (id)_motherAndFatherRelationships;
- (id)_relationshipAsString;
- (void)addAddresses:(id)arg1 ofType:(unsigned long long)arg2;
- (unsigned long long)ageCategory;
- (id)anniversaryDate;
- (id)birthdayDate;
- (id)companyName;
- (unsigned long long)countOfAddressesOfType:(unsigned long long)arg1;
- (id)description;
- (id)emailAddresses;
- (void)encodeWithCoder:(id)arg1;
- (void)enumerateAddressesOfType:(unsigned long long)arg1 asCLLocationsWithBlock:(id /* block */)arg2;
- (void)enumerateAddressesOfType:(unsigned long long)arg1 asPlacemarkWithBlock:(id /* block */)arg2;
- (id)firstName;
- (id)fullName;
- (bool)hasAddresses;
- (bool)hasContactProfilePicture;
- (bool)hasPhoneNumber;
- (bool)hasSameFamilyNameAsPerson:(id)arg1;
- (id)inferredLastName;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (bool)isEqual:(id)arg1;
- (bool)isEqualToPerson:(id)arg1;
- (bool)isFavorite;
- (bool)isHidden;
- (bool)isLocationCoordinate:(struct CLLocationCoordinate2D { double x1; double x2; })arg1 closeToAddressesOfType:(unsigned long long)arg2;
- (bool)isLocationCoordinate:(struct CLLocationCoordinate2D { double x1; double x2; })arg1 farAwayFromAddressesOfType:(unsigned long long)arg2;
- (bool)isMe;
- (bool)isOrganization;
- (bool)isSamePersonAs:(id)arg1;
- (bool)isUserCreated;
- (id)lastName;
- (id)localIdentifier;
- (id)localizedShortName;
- (void)mergeWithPerson:(id)arg1;
- (id)middleName;
- (id)nickname;
- (id)phoneNumbers;
- (id)pluralPresentationString;
- (id)potentialBirthdayDate;
- (void)prefetchPersonAddressesIfNeeded;
- (id)presentationString;
- (unsigned long long)relationship;
- (unsigned long long)relationshipHintFromNameUsingLocales:(id)arg1;
- (void)sanitize;
- (void)setAgeCategory:(unsigned long long)arg1;
- (void)setAnniversaryDate:(id)arg1;
- (void)setBirthdayDate:(id)arg1;
- (void)setCNIdentifier:(id)arg1;
- (void)setCompanyName:(id)arg1;
- (void)setEmailAddresses:(id)arg1;
- (void)setFirstName:(id)arg1;
- (void)setFullName:(id)arg1;
- (void)setGDIdentifier:(id)arg1;
- (void)setHasContactProfilePicture:(bool)arg1;
- (void)setHasPhoneNumber:(bool)arg1;
- (void)setInferredLastName:(id)arg1;
- (void)setIsFavorite:(bool)arg1;
- (void)setIsHidden:(bool)arg1;
- (void)setIsUserCreated:(bool)arg1;
- (void)setLastName:(id)arg1;
- (void)setLocalIdentifier:(id)arg1;
- (void)setLocalizedShortName:(id)arg1;
- (void)setMiddleName:(id)arg1;
- (void)setNickname:(id)arg1;
- (void)setPhoneNumbers:(id)arg1;
- (void)setPotentialBirthdayDate:(id)arg1;
- (void)setRelationship:(unsigned long long)arg1;
- (void)setSex:(unsigned long long)arg1;
- (void)setShareParticipantLocalIdentifier:(id)arg1;
- (void)setSocialProfiles:(id)arg1;
- (void)setSourceService:(id)arg1 andID:(id)arg2;
- (unsigned long long)sex;
- (id)shareParticipantLocalIdentifier;
- (id)socialProfiles;
- (id)sourceService;
- (id)sourceURLs;

// Image: /System/Library/PrivateFrameworks/PhotosGraph.framework/PhotosGraph

+ (unsigned long long)type;

- (long long)compareToPerson:(id)arg1;
- (id)contactID;
- (id)contactIdentifier;
- (bool)isInferredChild;
- (bool)isVerified;
- (id)keywordDescription;
- (id)locationsByAddressTypes;
- (id)suggestedContactIdentifier;

@end
