
@interface SFMagicHeadWheelView : UIView <SFMagicHeadDelegate> {
    UIImageView * _canChangeSelectionView;
    long long  _consecutiveRotationChangeRequests;
    UIView * _contentView;
    NSObject<SFMagicHeadWheelViewDelegate> * _delegate;
    NSMutableArray * _dots;
    UIColor * _dotsColor;
    UIVisualEffectView * _dotsContainer;
    double  _dotsRadius;
    bool  _enabled;
    long long  _guidanceState;
    NSMutableDictionary * _identifierToSelectionMarkerView;
    bool  _invalidated;
    bool  _magicHead;
    bool  _noUWBCapableDevices;
    NSUUID * _nodeIdentifier;
    unsigned long long  _numberOfDots;
    SFFloatSpringProperty * _pitchSpringProperty;
    SFMagicHeadPlaceholderView * _placeHolderView;
    double  _previousAngle;
    long long  _proposedRotationState;
    double  _radius;
    SFFloatSpringProperty * _rollSpringProperty;
    bool  _rotatedAfterSelectionWasMade;
    SFFloatSpringProperty * _rotationSpringProperty;
    long long  _rotationState;
    SFMagicHead * _selectedHead;
    UIControl * _selectedHeadControl;
    UIViewPropertyAnimator * _selectionAnimator;
    SFMagicHeadSettings * _settings;
    NSObject<OS_dispatch_source> * _suppressGuidanceHapticsTimer;
}

@property (retain) UIImageView *canChangeSelectionView;
@property long long consecutiveRotationChangeRequests;
@property (retain) UIView *contentView;
@property NSObject<SFMagicHeadWheelViewDelegate> *delegate;
@property (retain) NSMutableArray *dots;
@property (retain) UIColor *dotsColor;
@property (retain) UIVisualEffectView *dotsContainer;
@property double dotsRadius;
@property (getter=isEnabled, nonatomic) bool enabled;
@property long long guidanceState;
@property (retain) NSMutableDictionary *identifierToSelectionMarkerView;
@property bool invalidated;
@property (getter=isMagicHead, nonatomic, readonly) bool magicHead;
@property (nonatomic) bool noUWBCapableDevices;
@property (nonatomic, readonly) NSUUID *nodeIdentifier;
@property unsigned long long numberOfDots;
@property (retain) SFFloatSpringProperty *pitchSpringProperty;
@property (retain) SFMagicHeadPlaceholderView *placeHolderView;
@property double previousAngle;
@property long long proposedRotationState;
@property double radius;
@property (retain) SFFloatSpringProperty *rollSpringProperty;
@property bool rotatedAfterSelectionWasMade;
@property (retain) SFFloatSpringProperty *rotationSpringProperty;
@property long long rotationState;
@property (nonatomic, retain) SFMagicHead *selectedHead;
@property (retain) UIControl *selectedHeadControl;
@property (retain) UIViewPropertyAnimator *selectionAnimator;
@property (nonatomic, retain) SFMagicHeadSettings *settings;
@property (retain) NSObject<OS_dispatch_source> *suppressGuidanceHapticsTimer;

+ (double)clampedRotationDegrees:(double)arg1;
+ (Class)layerClass;
+ (double)rotationWithShortestDistanceFromDegrees:(double)arg1 toDegrees:(double)arg2;

- (void).cxx_destruct;
- (id)canChangeSelectionView;
- (bool)canChangeSelectionWhenInRotationState:(long long)arg1 guidanceState:(long long)arg2 description:(id*)arg3 ignoreDisabling:(bool)arg4;
- (bool)canChangeSelectionWithDescription:(id*)arg1;
- (bool)canChangeSelectionWithDescription:(id*)arg1 ignoreDisabling:(bool)arg2;
- (struct CGPoint { double x1; double x2; })centerOfContentBounds;
- (bool)configureSelectedHeadWithNode:(id)arg1 slotNode:(id)arg2 isSameAsSelected:(bool)arg3;
- (long long)consecutiveRotationChangeRequests;
- (id)contentView;
- (void)cozyUpAnimationForHead:(id)arg1;
- (void)createSprings;
- (void)dealloc;
- (id)delegate;
- (void)deviceRotatedToDegrees:(double)arg1 withPitch:(double)arg2 andRoll:(double)arg3;
- (id)dots;
- (id)dotsColor;
- (id)dotsContainer;
- (double)dotsRadius;
- (long long)guidanceState;
- (bool)guidanceStatesEnabled;
- (void)hapticsForHideDots:(bool)arg1;
- (void)hideDots:(bool)arg1 withAnimationDuration:(double)arg2;
- (void)hideSelection:(bool)arg1;
- (id)identifierToSelectionMarkerView;
- (bool)inGuidanceStates;
- (bool)inGuidanceStatesWhenInState:(long long)arg1;
- (id)initWithNumberOfDots:(unsigned long long)arg1 dotsRadius:(double)arg2 isMagicHead:(bool)arg3;
- (void)invalidate;
- (bool)invalidated;
- (bool)isEnabled;
- (bool)isMagicHead;
- (void)layoutSubviews;
- (void)loadSettings;
- (void)lostSelectedNode;
- (void)magicHead:(id)arg1 requestingSubtitleTextChangeForState:(long long)arg2;
- (void)magicHeadDidFinishTransferForHead:(id)arg1;
- (void)magicHeadDidStartTransferForHead:(id)arg1;
- (void)magicHeadDidTerminateTransferForHead:(id)arg1;
- (bool)noUWBCapableDevices;
- (id)nodeIdentifier;
- (unsigned long long)numberOfDots;
- (id)pitchSpringProperty;
- (id)placeHolderView;
- (double)previousAngle;
- (long long)proposedRotationState;
- (void)pulseSelectedHead;
- (double)radius;
- (id)rollSpringProperty;
- (bool)rotatedAfterSelectionWasMade;
- (id)rotationSpringProperty;
- (long long)rotationState;
- (void)scaleDots:(bool)arg1;
- (void)selectAnimationForHead:(id)arg1 withDismissHead:(id)arg2;
- (id)selectedHead;
- (id)selectedHeadControl;
- (void)selectedHeadHighlighted;
- (void)selectedHeadHightlightCancel;
- (void)selectedHeadTapped;
- (id)selectionAnimator;
- (void)setCanChangeSelectionView:(id)arg1;
- (void)setConsecutiveRotationChangeRequests:(long long)arg1;
- (void)setContentView:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDots:(id)arg1;
- (void)setDotsColor:(id)arg1;
- (void)setDotsContainer:(id)arg1;
- (void)setDotsRadius:(double)arg1;
- (void)setEnabled:(bool)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setGuidanceState:(long long)arg1;
- (void)setIdentifierToSelectionMarkerView:(id)arg1;
- (void)setInvalidated:(bool)arg1;
- (void)setMarkerViewForIdentifier:(id)arg1 atPositionDegree:(double)arg2;
- (void)setNoUWBCapableDevices:(bool)arg1;
- (void)setNumberOfDots:(unsigned long long)arg1;
- (void)setPitchSpringProperty:(id)arg1;
- (void)setPlaceHolderView:(id)arg1;
- (void)setPreviousAngle:(double)arg1;
- (void)setProposedRotationState:(long long)arg1;
- (void)setRadius:(double)arg1;
- (void)setRollSpringProperty:(id)arg1;
- (void)setRotatedAfterSelectionWasMade:(bool)arg1;
- (void)setRotationSpringProperty:(id)arg1;
- (void)setRotationState:(long long)arg1;
- (void)setSelectedHead:(id)arg1;
- (void)setSelectedHeadControl:(id)arg1;
- (void)setSelectionAnimator:(id)arg1;
- (void)setSettings:(id)arg1;
- (void)setSuppressGuidanceHapticsTimer:(id)arg1;
- (id)settings;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })squareBounds;
- (void)startSuppressGuidanceHapticsTimer;
- (void)stopSuppressGuidanceHapticsTimer;
- (id)suppressGuidanceHapticsTimer;
- (bool)transitionToGuidanceState:(long long)arg1;
- (void)transitionToRotationState:(long long)arg1 bypassSampling:(bool)arg2;
- (void)triggerContractDotsHaptic;
- (long long)triggerCountForCandidateRotationState:(long long)arg1;
- (void)triggerExpandDotsHaptic;
- (void)triggerReSelectedHaptic;
- (void)triggerSelectedHaptic;
- (void)updateCanChangeSelectionUI;
- (void)updatePlaceHolderView;
- (bool)updateSelectedHead:(id)arg1;
- (bool)updateSelectedNode:(id)arg1;
- (bool)updateSelectedSlotNode:(id)arg1;
- (void)updateSelectionControlState;
- (void)updateVelocityWithCurrentAngle:(double)arg1;
- (void)updateVisibilityOfComponents;

@end
