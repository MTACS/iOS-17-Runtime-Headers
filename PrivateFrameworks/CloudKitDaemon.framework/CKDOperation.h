
@interface CKDOperation : NSOperation <CKThrottlingCriteria> {
    CKDOperationMetrics * _MMCSMetrics;
    NSObject<OS_dispatch_queue> * _callbackQueue;
    NSMutableArray * _childOperations;
    NSObject<OS_dispatch_group> * _childOperationsGroup;
    <CKOperationCallbacks> * _clientOperationCallbackProxy;
    CKDOperationMetrics * _cloudKitMetrics;
    CKDContainer * _container;
    bool  _didAttemptDugongKeyRoll;
    NSError * _error;
    int  _executionState;
    NSMutableArray * _finishedChildOperationIDs;
    bool  _isLongLivedCallbackRelayOperation;
    NSDate * _metricExecuteStartDate;
    struct os_unfair_recursive_lock_s { 
        struct os_unfair_lock_s { 
            unsigned int _os_unfair_lock_opaque; 
        } ourl_lock; 
        unsigned int ourl_count; 
    }  _metricsLock;
    CKOperationInfo * _operationInfo;
    NSObject<OS_os_activity> * _osActivity;
    CKDOperation * _parentOperation;
    _Atomic int  _pcsWaitCount;
    CKDURLRequest * _request;
    id /* block */  _requestCompletedBlock;
    unsigned long long  _requestOriginator;
    NSMutableArray * _requestUUIDs;
    bool  _shouldPipelineFetchAllChangesRequests;
    CKSignpost * _signpost;
    NSDate * _startDate;
    unsigned long long  _state;
    NSObject<OS_dispatch_group> * _stateTransitionGroup;
    NSObject<OS_os_transaction> * _transaction;
    bool  _useClearAssetEncryption;
    bool  _useEncryption;
    UMUserSyncTask * _userSyncTask;
}

@property (nonatomic, readonly) CKOperationMMCSRequestOptions *MMCSRequestOptions;
@property (nonatomic, readonly) unsigned int QOSClass;
@property (nonatomic, readonly) bool allowsCellularAccess;
@property (nonatomic, readonly) bool allowsExpensiveNetworkAccess;
@property (nonatomic, readonly) bool allowsPowerNapScheduling;
@property (nonatomic, readonly) NSString *applicationBundleIdentifierForContainerAccess;
@property (nonatomic, readonly) NSString *applicationBundleIdentifierForNetworkAttribution;
@property (nonatomic, readonly) NSString *authPromptReason;
@property (nonatomic, readonly) bool automaticallyRetryNetworkFailures;
@property (nonatomic, readonly) NSNumber *cacheDeleteAvailableSpaceClass;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *callbackQueue;
@property (nonatomic, readonly) NSMutableArray *childOperations;
@property (nonatomic, retain) NSObject<OS_dispatch_group> *childOperationsGroup;
@property (nonatomic, retain) <CKOperationCallbacks> *clientOperationCallbackProxy;
@property (nonatomic, readonly) long long clientQueuePriority;
@property (readonly) CKDContainer *container;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) CKDLogicalDeviceContext *deviceContext;
@property (nonatomic) bool didAttemptDugongKeyRoll;
@property (nonatomic, readonly) unsigned long long discretionaryWhenBackgroundedState;
@property (nonatomic, readonly) unsigned long long duetPreClearedMode;
@property (retain) NSError *error;
@property (nonatomic, readonly) bool expectDelayBeforeRequestBegins;
@property (nonatomic, readonly) NSMutableArray *finishedChildOperationIDs;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isCloudKitSupportOperation;
@property (nonatomic, readonly) bool isLongLived;
@property (nonatomic, readonly) bool isLongLivedCallbackRelayOperation;
@property (nonatomic, retain) NSDate *metricExecuteStartDate;
@property (nonatomic, readonly) unsigned long long networkServiceType;
@property (nonatomic, readonly) NSString *operationGroupID;
@property (nonatomic, readonly) NSString *operationGroupName;
@property (nonatomic, readonly) NSNumber *operationGroupQuantityNumber;
@property (nonatomic, readonly) NSString *operationID;
@property (nonatomic, readonly) CKOperationInfo *operationInfo;
@property (nonatomic, readonly) CKOperationMetrics *operationMetrics;
@property (nonatomic, readonly) NSObject<OS_os_activity> *osActivity;
@property CKDOperation *parentOperation;
@property (nonatomic) _Atomic int pcsWaitCount;
@property (nonatomic, readonly) bool preferAnonymousRequests;
@property (nonatomic, retain) CKDURLRequest *request;
@property (nonatomic, copy) id /* block */ requestCompletedBlock;
@property (nonatomic) unsigned long long requestOriginator;
@property (nonatomic, readonly) NSMutableArray *requestUUIDs;
@property (nonatomic, readonly) bool resolvedAutomaticallyRetryNetworkFailures;
@property (nonatomic, readonly) unsigned long long resolvedDiscretionaryNetworkBehavior;
@property (nonatomic, readonly) bool shouldCheckAppVersion;
@property (nonatomic) bool shouldPipelineFetchAllChangesRequests;
@property (nonatomic, readonly) CKSignpost *signpost;
@property (nonatomic, readonly) NSString *sourceApplicationSecondaryIdentifier;
@property (nonatomic, retain) NSDate *startDate;
@property (nonatomic) unsigned long long state;
@property (nonatomic, retain) NSObject<OS_dispatch_group> *stateTransitionGroup;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsDeviceThrottling;
@property (nonatomic, readonly) unsigned long long systemScheduler;
@property (nonatomic, readonly) double timeoutIntervalForRequest;
@property (nonatomic, readonly) double timeoutIntervalForResource;
@property (nonatomic, readonly) CKDOperation *topmostParentOperation;
@property (nonatomic, readonly) NSObject<OS_os_transaction> *transaction;
@property (nonatomic, readonly) NSDictionary *unitTestOverrides;
@property (nonatomic) bool useClearAssetEncryption;
@property (nonatomic) bool useEncryption;
@property (nonatomic, retain) UMUserSyncTask *userSyncTask;
@property (nonatomic, readonly) bool usesBackgroundSession;

+ (id)_globalOperationCallbackQueueForQOS:(long long)arg1;
+ (long long)isPredominatelyDownload;
+ (id)nameForState:(unsigned long long)arg1;

- (void).cxx_destruct;
- (id)CKDescriptionPropertiesWithPublic:(bool)arg1 private:(bool)arg2 shouldExpand:(bool)arg3;
- (id)CKStatusReportLogGroups;
- (id)CKStatusReportProperties;
- (id)MMCSRequestOptions;
- (unsigned int)QOSClass;
- (bool)_checkAppVersion;
- (void)_continueOperationStart;
- (void)_determineNetworkServiceType;
- (void)_ensureOperationGroup;
- (void)_finishInternalOnCallbackQueueWithError:(id)arg1;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)_registerAttemptForOperation;
- (id)_startDateString;
- (id)_stateFlags;
- (id)activityCreate;
- (id)additionalRequestHTTPHeaders;
- (bool)allowsCellularAccess;
- (bool)allowsExpensiveNetworkAccess;
- (bool)allowsPowerNapScheduling;
- (id)analyticsPayload;
- (id)applicationBundleIdentifierForContainerAccess;
- (id)applicationBundleIdentifierForNetworkAttribution;
- (id)authPromptReason;
- (bool)automaticallyRetryNetworkFailures;
- (id)baseOperationAndErrorInfoCoreAnalyticsPayloadWithError:(id)arg1;
- (void)beginUserSyncTask;
- (id)cacheDeleteAvailableSpaceClass;
- (id)callbackQueue;
- (void)cancel;
- (bool)checkAndClearUnitTestOverrides:(id)arg1;
- (id)childOperations;
- (id)childOperationsGroup;
- (id)ckShortDescription;
- (id)clientOperationCallbackProxy;
- (long long)clientQueuePriority;
- (void)combineMetricsWithOperation:(id)arg1;
- (void)configureQualityOfServiceFromOperationInfo:(id)arg1;
- (void)configureRequest:(id)arg1;
- (id)container;
- (id)containerID;
- (id)createConcurrentQueue;
- (id)createInactiveConcurrentQueue;
- (id)createInactiveSerialQueue;
- (id)createSerialQueue;
- (void)dealloc;
- (id)description;
- (id)deviceContext;
- (bool)didAttemptDugongKeyRoll;
- (unsigned long long)discretionaryNetworkBehavior;
- (unsigned long long)discretionaryWhenBackgroundedState;
- (unsigned long long)duetPreClearedMode;
- (id)dugongKeyRollAnalyticsPayloadWithError:(id)arg1;
- (id)error;
- (bool)expectDelayBeforeRequestBegins;
- (bool)finishWithAssetDownloadStagingInfo:(id)arg1 fileURL:(id*)arg2 fileHandle:(id*)arg3 error:(id*)arg4;
- (void)finishWithError:(id)arg1;
- (id)finishedChildOperationIDs;
- (unsigned long long)hash;
- (id)initWithOperationInfo:(id)arg1 container:(id)arg2;
- (bool)isCloudKitSupportOperation;
- (bool)isConcurrent;
- (bool)isEqual:(id)arg1;
- (bool)isExecuting;
- (bool)isFinished;
- (bool)isLongLived;
- (bool)isLongLivedCallbackRelayOperation;
- (bool)isNetworkingBehaviorEquivalentForOperation:(id)arg1;
- (bool)isOperationType:(int)arg1;
- (bool)isTopLevelDaemonOperation;
- (bool)isWaitingOnPCS;
- (void)main;
- (bool)makeStateTransition;
- (void)makeStateTransition:(bool)arg1;
- (id)metricExecuteStartDate;
- (unsigned long long)networkServiceType;
- (void)noteOperationDidFinishWaitingOnPCS;
- (void)noteOperationWillWaitOnPCS;
- (id)openFileWithOpenInfo:(id)arg1 error:(id*)arg2;
- (id)operationGroupID;
- (id)operationGroupName;
- (id)operationGroupQuantityNumber;
- (id)operationID;
- (id)operationInfo;
- (id)operationMetrics;
- (int)operationType;
- (id)osActivity;
- (id)parentOperation;
- (int)pcsWaitCount;
- (bool)preferAnonymousRequests;
- (void)pushStatisticsTo:(id)arg1;
- (id)request;
- (void)request:(id)arg1 didFinishWithMetrics:(id)arg2 w3cNavigationTiming:(id)arg3;
- (id /* block */)requestCompletedBlock;
- (unsigned long long)requestOriginator;
- (id)requestUUIDs;
- (bool)resolvedAutomaticallyRetryNetworkFailures;
- (unsigned long long)resolvedDiscretionaryNetworkBehavior;
- (void)sendCoreAnalyticsEventOperationFinished;
- (void)setCallbackQueue:(id)arg1;
- (void)setChildOperationsGroup:(id)arg1;
- (void)setClientOperationCallbackProxy:(id)arg1;
- (void)setCompletionBlock:(id /* block */)arg1;
- (void)setDidAttemptDugongKeyRoll:(bool)arg1;
- (void)setError:(id)arg1;
- (void)setMetricExecuteStartDate:(id)arg1;
- (void)setParentOperation:(id)arg1;
- (void)setPcsWaitCount:(int)arg1;
- (void)setQualityOfService:(long long)arg1;
- (void)setRequest:(id)arg1;
- (void)setRequestCompletedBlock:(id /* block */)arg1;
- (void)setRequestOriginator:(unsigned long long)arg1;
- (void)setShouldPipelineFetchAllChangesRequests:(bool)arg1;
- (void)setStartDate:(id)arg1;
- (void)setState:(unsigned long long)arg1;
- (void)setStateTransitionGroup:(id)arg1;
- (void)setUseClearAssetEncryption:(bool)arg1;
- (void)setUseEncryption:(bool)arg1;
- (void)setUserSyncTask:(id)arg1;
- (bool)shouldCheckAppVersion;
- (bool)shouldKeepXPCConnectionAlive;
- (bool)shouldPipelineFetchAllChangesRequests;
- (id)signpost;
- (id)sourceApplicationSecondaryIdentifier;
- (void)spawnAndRunOperationOfClass:(Class)arg1 operationInfo:(id)arg2 operationConfigurationBlock:(id /* block */)arg3;
- (void)spawnAndRunOperationOfClass:(Class)arg1 operationInfo:(id)arg2 spawnQueue:(id)arg3 container:(id)arg4 operationConfigurationBlock:(id /* block */)arg5;
- (void)spawnAndRunOperationOfClass:(Class)arg1 operationInfo:(id)arg2 spawnQueue:(id)arg3 operationConfigurationBlock:(id /* block */)arg4;
- (void)start;
- (id)startDate;
- (unsigned long long)state;
- (id)stateTransitionGroup;
- (id)statusReportWithIndent:(unsigned long long)arg1;
- (bool)supportsDeviceThrottling;
- (unsigned long long)systemScheduler;
- (double)timeoutIntervalForRequest;
- (double)timeoutIntervalForResource;
- (id)topmostParentOperation;
- (id)transaction;
- (void)transitionToExecuting;
- (void)transitionToFinished;
- (id)unitTestOverrides;
- (void)updateCloudKitMetrics:(id /* block */)arg1;
- (void)updateMMCSMetrics:(id /* block */)arg1;
- (bool)useClearAssetEncryption;
- (bool)useEncryption;
- (id)userSyncTask;
- (bool)usesBackgroundSession;
- (bool)validateAgainstLiveContainer:(id)arg1 error:(id*)arg2;

@end
