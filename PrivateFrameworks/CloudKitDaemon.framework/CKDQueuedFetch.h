
@interface CKDQueuedFetch : NSObject {
    NSObject<OS_dispatch_queue> * _callbackQueue;
    id /* block */  _completionHandler;
    NSMutableDictionary * _completionHandlersByItemID;
    CKDContainer * _container;
    NSMutableSet * _dependentOperationIDs;
    NSMutableDictionary * _dependentOperationIDsByItemID;
    CKDQueuedFetch * _equivalentRunningFetch;
    long long  _highestQOS;
    CKDOperation * _initialOperation;
    bool  _isCancelled;
    bool  _isFinished;
    unsigned long long  _lastCompletionHandlerCount;
    NSDate * _lastRequestDate;
    NSOperationQueue * _operationQueue;
    NSObject<OS_os_activity> * _osActivity;
    NSDate * _queuedDate;
    NSString * _runningOperationID;
    long long  _scope;
    NSMutableDictionary * _unitTestOverrides;
}

@property (nonatomic, retain) NSObject<OS_dispatch_queue> *callbackQueue;
@property (nonatomic, copy) id /* block */ completionHandler;
@property (nonatomic, retain) NSMutableDictionary *completionHandlersByItemID;
@property (nonatomic) CKDContainer *container;
@property (nonatomic, retain) NSMutableSet *dependentOperationIDs;
@property (nonatomic, retain) NSMutableDictionary *dependentOperationIDsByItemID;
@property (nonatomic) CKDQueuedFetch *equivalentRunningFetch;
@property (nonatomic) long long highestQOS;
@property (nonatomic, retain) CKDOperation *initialOperation;
@property (nonatomic) bool isCancelled;
@property (nonatomic) bool isFinished;
@property (nonatomic) unsigned long long lastCompletionHandlerCount;
@property (nonatomic, retain) NSDate *lastRequestDate;
@property (nonatomic) NSOperationQueue *operationQueue;
@property (nonatomic, retain) NSObject<OS_os_activity> *osActivity;
@property (nonatomic, readonly) NSDate *queuedDate;
@property (nonatomic, retain) NSString *runningOperationID;
@property (nonatomic) long long scope;
@property (nonatomic, retain) NSMutableDictionary *unitTestOverrides;

- (void).cxx_destruct;
- (id)CKPropertiesDescription;
- (void)addCallbackForItemWithID:(id)arg1 operation:(id)arg2 callback:(id /* block */)arg3;
- (id)allItemIDs;
- (id)callbackQueue;
- (id)callbacksForItemWithID:(id)arg1;
- (bool)canBeUsedForOperation:(id)arg1;
- (bool)canBeUsedForPendingFetch:(id)arg1;
- (void)cancelFetchOperation;
- (id /* block */)completionHandler;
- (id)completionHandlersByItemID;
- (id)container;
- (void)createFetchOperationForItemIDs:(id)arg1 operationQueue:(id)arg2 operationConfigurationBlock:(id /* block */)arg3;
- (id)dependentOperationIDs;
- (id)dependentOperationIDsByItemID;
- (bool)dependentOperationListContainsOperationID:(id)arg1;
- (bool)dependentOperationListContainsRunningFetch:(id)arg1;
- (id)description;
- (id)equivalentRunningFetch;
- (void)finishFetchOperationWithError:(id)arg1;
- (long long)highestQOS;
- (id)init;
- (id)initWithOperation:(id)arg1 container:(id)arg2 operationQueue:(id)arg3;
- (id)initialOperation;
- (bool)isCancelled;
- (bool)isFinished;
- (unsigned long long)lastCompletionHandlerCount;
- (id)lastRequestDate;
- (int)numberOfCallbacks;
- (id)operationQueue;
- (id)osActivity;
- (void)performCallbacksForItemWithID:(id)arg1 withItem:(id)arg2 error:(id)arg3;
- (id)queuedDate;
- (void)removeCallbacksForItemWithID:(id)arg1;
- (id)runningOperationID;
- (long long)scope;
- (void)setCallbackQueue:(id)arg1;
- (void)setCompletionHandler:(id /* block */)arg1;
- (void)setCompletionHandlersByItemID:(id)arg1;
- (void)setContainer:(id)arg1;
- (void)setDependentOperationIDs:(id)arg1;
- (void)setDependentOperationIDsByItemID:(id)arg1;
- (void)setEquivalentRunningFetch:(id)arg1;
- (void)setHighestQOS:(long long)arg1;
- (void)setInitialOperation:(id)arg1;
- (void)setIsCancelled:(bool)arg1;
- (void)setIsFinished:(bool)arg1;
- (void)setLastCompletionHandlerCount:(unsigned long long)arg1;
- (void)setLastRequestDate:(id)arg1;
- (void)setOperationQueue:(id)arg1;
- (void)setOsActivity:(id)arg1;
- (void)setRunningOperationID:(id)arg1;
- (void)setScope:(long long)arg1;
- (void)setUnitTestOverrides:(id)arg1;
- (void)start;
- (id)unitTestOverrides;

@end
