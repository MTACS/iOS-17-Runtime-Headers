
@interface CKDContainer : NSObject <CKDContainerScopedUserIDProvider, CKXPCContainerScopedDaemonAPI> {
    CKDMMCS * _MMCS;
    <NSObject> * _TCCDatabaseChangedNotificationObserver;
    CKDAccount * _account;
    NSRecursiveLock * _accountLock;
    NSObject<OS_dispatch_workloop> * _accountStatusWorkloop;
    long long  _adopterProcessType;
    CKDAnonymousSharingManager * _anonymousSharingManager;
    NSRecursiveLock * _anonymousSharingManagerLock;
    CKDAppContainerTuple * _appContainerTuple;
    NSString * _applicationDisplayName;
    NSURL * _applicationIcon;
    NSString * _applicationVersion;
    NSOperationQueue * _backgroundOperationThrottleQueue;
    CKDPublicIdentityLookupService * _backgroundPublicIdentityLookupService;
    long long  _cachedEnvironment;
    NSArray * _cachedSandboxExtensions;
    NSObject<OS_dispatch_queue> * _cancellationQueue;
    NSOperationQueue * _cleanupOperationQueue;
    NSMutableSet * _clientContainers;
    unsigned int  _clientSDKVersion;
    NSOperationQueue * _cloudKitSupportOperationThrottleQueue;
    NSString * _containerScopedUserID;
    NSString * _containingBundleID;
    CKDLogicalDeviceContext * _deviceContext;
    NSRecursiveLock * _deviceContextLock;
    CKDDirectoryContext * _directoryContext;
    CKEntitlements * _entitlements;
    NSMutableDictionary * _fakeErrorsByClassName;
    NSMutableDictionary * _fakeResponseOperationLifetimeByClassName;
    NSMutableDictionary * _fakeResponseOperationResultByClassNameByItemID;
    CKDPCSFetchAggregator * _fetchAggregator;
    NSRecursiveLock * _fetchAggregatorLock;
    CKDPublicIdentityLookupService * _foregroundPublicIdentityLookupService;
    CKDZoneGatekeeper * _gatekeeper;
    NSString * _hardwareID;
    bool  _hasDataContainer;
    long long  _hasTCCAuthorizationTernary;
    long long  _hasValidatedEntitlementsTernary;
    bool  _isClientMainBundleAppleExecutable;
    bool  _isForClouddInternalUse;
    CKDLogicalDeviceScopedClientProxy * _logicalDeviceScopedClientProxy;
    NSRecursiveLock * _mmcsLock;
    NSOperationQueue * _operationQueue;
    NSMutableDictionary * _operationStatisticsByClassName;
    CKContainerOptions * _options;
    NSString * _orgAdminUserID;
    CKDPCSCache * _pcsCache;
    CKDPCSManager * _pcsManager;
    NSMutableSet * _pendingOperationIDs;
    CKDProcessScopedClientProxy * _processScopedClientProxy;
    NSURL * _publicCloudDBURL;
    NSURL * _publicCodeServiceURL;
    NSURL * _publicDeviceServiceURL;
    CKDIdentityCache * _publicIdentitiesDiskCache;
    NSRecursiveLock * _publicIdentityServiceLock;
    NSURL * _publicMetricsServiceURL;
    NSURL * _publicShareServiceURL;
    CKDRecordCache * _recordCache;
    NSString * _resolvedAPSEnvironmentString;
    NSRecursiveLock * _sandboxExtensionsLock;
    CKDServerConfiguration * _serverConfig;
    NSRecursiveLock * _serverConfigLock;
    NSObject<OS_dispatch_queue> * _statusQueue;
    NSOperationQueue * _tccAuthOpQueue;
    NSObject<OS_dispatch_queue> * _tccAuthQueue;
    <CKDTestServerProtocol> * _testServer;
    NSOperationQueue * _uncancellableOperationQueue;
}

@property (nonatomic, retain) CKDMMCS *MMCS;
@property (nonatomic, retain) <NSObject> *TCCDatabaseChangedNotificationObserver;
@property (nonatomic, readonly) CKDAccount *account;
@property (nonatomic, retain) NSRecursiveLock *accountLock;
@property (nonatomic, readonly) CKAccountOverrideInfo *accountOverrideInfo;
@property (nonatomic, readonly) NSObject<OS_dispatch_workloop> *accountStatusWorkloop;
@property (nonatomic, readonly) long long adopterProcessType;
@property (nonatomic, readonly) bool allowsCellularAccess;
@property (nonatomic, readonly) bool allowsExpensiveNetworkAccess;
@property (nonatomic, retain) CKDAnonymousSharingManager *anonymousSharingManager;
@property (nonatomic, retain) NSRecursiveLock *anonymousSharingManagerLock;
@property (nonatomic, readonly) CKDAppContainerAccountTuple *appContainerAccountTuple;
@property (readonly) CKDAppContainerTuple *appContainerTuple;
@property (readonly) NSString *applicationBundleID;
@property (readonly) NSString *applicationBundleIdentifierForContainerAccess;
@property (readonly) NSString *applicationBundleIdentifierForNetworkAttribution;
@property (nonatomic, readonly) NSString *applicationBundleIdentifierForPush;
@property (nonatomic, retain) NSString *applicationDisplayName;
@property (readonly) CKDApplicationID *applicationID;
@property (nonatomic, retain) NSURL *applicationIcon;
@property (nonatomic, readonly) NSString *applicationVersion;
@property (nonatomic, readonly) NSString *apsEnvironmentString;
@property (readonly) NSString *associatedApplicationBundleID;
@property (nonatomic, retain) NSOperationQueue *backgroundOperationThrottleQueue;
@property (nonatomic, retain) CKDPublicIdentityLookupService *backgroundPublicIdentityLookupService;
@property long long cachedEnvironment;
@property (nonatomic, retain) NSArray *cachedSandboxExtensions;
@property (nonatomic, readonly) bool canAccessAccount;
@property (nonatomic, readonly) bool canAuthWithCloudKit;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *cancellationQueue;
@property (nonatomic, retain) NSOperationQueue *cleanupOperationQueue;
@property (nonatomic, retain) NSMutableSet *clientContainers;
@property (nonatomic) unsigned int clientSDKVersion;
@property (nonatomic, retain) NSOperationQueue *cloudKitSupportOperationThrottleQueue;
@property (readonly) CKContainerID *containerID;
@property (copy) NSString *containerScopedUserID;
@property (nonatomic, retain) NSString *containingBundleID;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) CKDLogicalDeviceContext *deviceContext;
@property (nonatomic, readonly) NSRecursiveLock *deviceContextLock;
@property (readonly) NSString *deviceID;
@property (nonatomic, readonly) NSString *deviceName;
@property (nonatomic, retain) CKDDirectoryContext *directoryContext;
@property (nonatomic, readonly) NSString *encryptionServiceName;
@property (readonly) CKEntitlements *entitlements;
@property (nonatomic, retain) NSMutableDictionary *fakeErrorsByClassName;
@property (nonatomic, retain) NSMutableDictionary *fakeResponseOperationLifetimeByClassName;
@property (nonatomic, retain) NSMutableDictionary *fakeResponseOperationResultByClassNameByItemID;
@property (nonatomic, retain) CKDPCSFetchAggregator *fetchAggregator;
@property (nonatomic, retain) NSRecursiveLock *fetchAggregatorLock;
@property (nonatomic, retain) CKDPublicIdentityLookupService *foregroundPublicIdentityLookupService;
@property (nonatomic, retain) CKDZoneGatekeeper *gatekeeper;
@property (nonatomic, retain) NSString *hardwareID;
@property (nonatomic) bool hasDataContainer;
@property (nonatomic, readonly) bool hasTCCAuthorization;
@property (nonatomic) long long hasTCCAuthorizationTernary;
@property (nonatomic, readonly) bool hasValidatedEntitlements;
@property (nonatomic) long long hasValidatedEntitlementsTernary;
@property (readonly) unsigned long long hash;
@property bool isClientMainBundleAppleExecutable;
@property bool isForClouddInternalUse;
@property (nonatomic, readonly) NSString *languageCode;
@property (readonly) CKDLogicalDeviceScopedClientProxy *logicalDeviceScopedClientProxy;
@property (nonatomic, retain) NSRecursiveLock *mmcsLock;
@property (nonatomic, retain) NSOperationQueue *operationQueue;
@property (nonatomic, retain) NSMutableDictionary *operationStatisticsByClassName;
@property (readonly) CKContainerOptions *options;
@property (copy) NSString *orgAdminUserID;
@property (nonatomic, retain) CKDPCSCache *pcsCache;
@property (nonatomic, retain) CKDPCSManager *pcsManager;
@property (nonatomic, retain) NSMutableSet *pendingOperationIDs;
@property (readonly) NSString *personaID;
@property (nonatomic, readonly) bool preferAnonymousRequests;
@property (nonatomic, readonly) NSString *processName;
@property (readonly) CKDProcessScopedClientProxy *processScopedClientProxy;
@property (copy) NSURL *publicCloudDBURL;
@property (copy) NSURL *publicCodeServiceURL;
@property (copy) NSURL *publicDeviceServiceURL;
@property (nonatomic, retain) CKDIdentityCache *publicIdentitiesDiskCache;
@property (nonatomic, retain) NSRecursiveLock *publicIdentityServiceLock;
@property (copy) NSURL *publicMetricsServiceURL;
@property (copy) NSURL *publicShareServiceURL;
@property (nonatomic, readonly) CKDRecordCache *recordCache;
@property (nonatomic, readonly) NSString *regionCode;
@property (nonatomic, retain) NSString *resolvedAPSEnvironmentString;
@property (nonatomic, retain) NSRecursiveLock *sandboxExtensionsLock;
@property (nonatomic, retain) CKDServerConfiguration *serverConfig;
@property (nonatomic, retain) NSRecursiveLock *serverConfigLock;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *statusQueue;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSOperationQueue *tccAuthOpQueue;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *tccAuthQueue;
@property (nonatomic, readonly) <CKDTestServerProtocol> *testServer;
@property (nonatomic, retain) NSOperationQueue *uncancellableOperationQueue;

+ (id)applicationDataContainerDirectoryForBundleID:(id)arg1 outApplicationBinaryBundleURL:(id*)arg2 outAdopterProcessType:(long long*)arg3;
+ (id)containerWithAppContainerAccountTuple:(id)arg1 deviceContext:(id)arg2 sharedContainerTable:(id)arg3;
+ (id)containerWithAppContainerTuple:(id)arg1 processScopedClientProxy:(id)arg2 logicalDeviceScopedClientProxy:(id)arg3 containerEntitlements:(id)arg4 containerOptions:(id)arg5 sharedContainerTable:(id)arg6;
+ (void)initialize;
+ (id)operationStatusReport:(id)arg1;
+ (id)sharedClientThrottlingOperationQueue;
+ (id)sharedDetachedContainers;
+ (id)sharedInternalUseContainers;

- (void).cxx_destruct;
- (id)CKPropertiesDescription;
- (id)CKShortDescriptionRedact:(bool)arg1;
- (id)CKStatusReportArray;
- (id)CKStatusReportArrayIncludingSharedOperations:(bool)arg1;
- (id)MMCS;
- (id)TCCDatabaseChangedNotificationObserver;
- (long long)_accountStatus;
- (long long)_applicationPermissionStatusFromUserPrivacySetting:(long long)arg1;
- (void)_broadcastUpdateIfNeededForRecord:(id)arg1 recordXPCMetadata:(id)arg2 recordID:(id)arg3 isDeleted:(bool)arg4 error:(id)arg5;
- (void)_clearCaches;
- (bool)_cloudKitEnabledForCurrentClient;
- (void)_determineHardwareInfo;
- (void)_dumpStatusReportArrayToOsTrace:(id)arg1;
- (id)_eligibleConnectedContainersForOOPUIContainer;
- (void)_fetchContainerServerInfoForOperation:(id)arg1 requireUserIDs:(bool)arg2 completionHandler:(id /* block */)arg3;
- (void)_globalStatusForApplicationPermission:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (void)_handleCompletionForOperation:(id)arg1 initialMessageReplyBlock:(id /* block */)arg2;
- (void)_handleCompletionForOperation:(id)arg1 initialMessageReplyBlock:(id /* block */)arg2 customCompletionBlock:(id /* block */)arg3;
- (id)_initWithAppContainerTuple:(id)arg1 processScopedClientProxy:(id)arg2 logicalDeviceScopedClientProxy:(id)arg3 containerEntitlements:(id)arg4 containerOptions:(id)arg5;
- (bool)_isAdopterAppleInternal;
- (bool)_isContainerAuthorizedForOperation:(id)arg1 error:(id*)arg2;
- (void)_loadApplicationContainerPathAndType;
- (bool)_lockedHasTCCAuthorization;
- (void)_lockedSetHasTCCAuthorizationTernary:(long long)arg1;
- (void)_performCodeFunctionInvokeOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 block:(id /* block */)arg3;
- (void)_performFetchCurrentUserRecordOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)_reallyPerformFetchRecordsOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)_reloadAccount:(bool)arg1;
- (void)_setApplicationPermission:(unsigned long long)arg1 enabled:(bool)arg2 completionHandler:(id /* block */)arg3;
- (void)_setupOperationQueues;
- (id)_urlBySettingCustomBaseURL:(id)arg1 onURL:(id)arg2;
- (void)_writeAdopterMetadataToCache;
- (id)account;
- (void)accountInfoWithCompletionHandler:(id /* block */)arg1;
- (id)accountLock;
- (id)accountOrNil;
- (id)accountOverrideInfo;
- (id)accountStatusWorkloop;
- (void)addOperation:(id)arg1 clientProvidedCallbackProxy:(id)arg2;
- (void)addThrottle:(id)arg1;
- (long long)adopterProcessType;
- (bool)allowsCellularAccess;
- (bool)allowsExpensiveNetworkAccess;
- (id)anonymousSharingManager;
- (id)anonymousSharingManagerLock;
- (id)appContainerAccountTuple;
- (id)appContainerTuple;
- (id)applicationBundleID;
- (id)applicationBundleIdentifierForContainerAccess;
- (id)applicationBundleIdentifierForNetworkAttribution;
- (id)applicationBundleIdentifierForPush;
- (id)applicationDisplayName;
- (id)applicationID;
- (id)applicationIcon;
- (id)applicationVersion;
- (id)apsEnvironmentString;
- (id)associatedApplicationBundleID;
- (id)backgroundOperationThrottleQueue;
- (id)backgroundPublicIdentityLookupService;
- (id)baseURLForServerType:(long long)arg1 partitionType:(long long)arg2;
- (long long)cachedEnvironment;
- (id)cachedSandboxExtensions;
- (id)callbackProxyForOperation:(id)arg1 clientProvidedCallbackProxy:(id)arg2;
- (bool)canAccessAccount;
- (bool)canAuthWithCloudKit;
- (bool)canOpenFileAtURL:(id)arg1;
- (void)cancelAllOperations;
- (void)cancelOperationWithIdentifier:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)cancellationQueue;
- (id)ckShortDescription;
- (id)cleanupOperationQueue;
- (void)clearAssetCache;
- (void)clearRecordCache;
- (id)clientContainers;
- (unsigned int)clientSDKVersion;
- (id)cloudKitSupportOperationThrottleQueue;
- (id)containerForOperationInfo:(id)arg1;
- (id)containerID;
- (id)containerScopedUserID;
- (id)containingBundleID;
- (unsigned long long)countAssetCacheItems;
- (unsigned long long)countAssetCacheItemsWithDatabaseScope:(long long)arg1;
- (void)dealloc;
- (id)description;
- (id)deviceContext;
- (id)deviceContextLock;
- (id)deviceID;
- (id)deviceName;
- (id)directoryContext;
- (void)displayInfoOnAccountWithCompletionHandler:(id /* block */)arg1;
- (void)dropMMCS;
- (void)dumpDaemonStatusReportToFileHandle:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)encryptionServiceName;
- (void)enqueueOperation:(id)arg1 clientProvidedCallbackProxy:(id)arg2 initialMessageReplyBlock:(id /* block */)arg3;
- (id)entitlements;
- (void)enumerateClientContainers:(id /* block */)arg1;
- (id)fakeErrorsByClassName;
- (id)fakeResponseOperationLifetimeByClassName;
- (id)fakeResponseOperationResultByClassNameByItemID;
- (id)fetchAggregator;
- (id)fetchAggregatorLock;
- (void)fetchAllLongLivedOperationIDsWithCompletionHandler:(id /* block */)arg1;
- (void)fetchConfigurationForOperation:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)fetchImportantUserIDsForOperation:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)fetchLongLivedOperationsWithIDs:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)fetchPrivateURLForServerType:(long long)arg1 operation:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)fetchPublicURLForServerType:(long long)arg1 operation:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)fetchServerEnvironmentForOperation:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (id)foregroundPublicIdentityLookupService;
- (void)forwardInvocation:(id)arg1;
- (id)gatekeeper;
- (id)getFileMetadataWithFileHandle:(id)arg1 openInfo:(id)arg2 error:(id*)arg3;
- (void)handleSignificantIssueBehavior:(unsigned long long)arg1 reason:(id)arg2;
- (id)hardwareID;
- (bool)hasDataContainer;
- (bool)hasTCCAuthorization;
- (long long)hasTCCAuthorizationTernary;
- (bool)hasValidatedEntitlements;
- (long long)hasValidatedEntitlementsTernary;
- (void)importantUserIDsWithCompletionHandler:(id /* block */)arg1;
- (bool)isClientMainBundleAppleExecutable;
- (bool)isEligibleForBroadcastingToContainer:(id)arg1;
- (bool)isForClouddInternalUse;
- (id)languageCode;
- (void)linkWithClientContainer:(id)arg1;
- (id)logicalDeviceScopedClientProxy;
- (id)methodSignatureForSelector:(SEL)arg1;
- (id)mmcsLock;
- (void)networkTransferEndpointWithCompletionHandler:(id /* block */)arg1;
- (id)openFileWithOpenInfo:(id)arg1 error:(id*)arg2;
- (id)operationQueue;
- (id)operationStatisticsByClassName;
- (id)options;
- (id)orgAdminUserID;
- (id)pcsCache;
- (id)pcsManager;
- (id)pcsManagerIfExists;
- (id)pendingOperationIDs;
- (void)performAcceptSharesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performCodeFunctionInvokeOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performCodeOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performDeclineSharesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performDiscoverAllUserIdentitiesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performDiscoverUserIdentitiesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performFetchDatabaseChangesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performFetchNotificationChangesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performFetchRecordChangesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performFetchRecordZoneChangesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performFetchRecordZonesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performFetchRecordsOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performFetchShareMetadataOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performFetchShareParticipantsOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performFetchSubscriptionsOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performFetchWebAuthTokenOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performMapShareURLsToInstalledBundleIDsOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performMarkNotificationsReadOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performModifyBadgeOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performModifyRecordZonesOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performModifyRecordsOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performModifySubscriptionsOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performMovePhotosOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performQueryOperation:(id)arg1 clientOperationCallbackProxy:(id)arg2 withBlock:(id /* block */)arg3;
- (void)performRequest:(id)arg1;
- (id)personaID;
- (id)possiblyWrappedAuthTokenErrorGivenError:(id)arg1;
- (bool)preferAnonymousRequests;
- (id)processName;
- (id)processScopedClientProxy;
- (id)publicCloudDBURL;
- (id)publicCodeServiceURL;
- (id)publicDeviceServiceURL;
- (id)publicIdentitiesDiskCache;
- (double)publicIdentitiesExpirationTimeout;
- (id)publicIdentityServiceLock;
- (id)publicMetricsServiceURL;
- (id)publicShareServiceURL;
- (id)readBytesOfInMemoryAssetContentWithUUID:(id)arg1 offset:(unsigned long long)arg2 length:(unsigned long long)arg3 error:(id*)arg4;
- (id)recordCache;
- (id)regionCode;
- (void)reloadAccountWithCompletionHandler:(id /* block */)arg1;
- (void)requestApplicationPermission:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (void)resetThrottles;
- (id)resolvedAPSEnvironmentString;
- (id)sandboxExtensions;
- (id)sandboxExtensionsLock;
- (id)serverConfig;
- (id)serverConfigLock;
- (void)setAccountLock:(id)arg1;
- (void)setAnonymousSharingManager:(id)arg1;
- (void)setAnonymousSharingManagerLock:(id)arg1;
- (void)setApplicationDisplayName:(id)arg1;
- (void)setApplicationIcon:(id)arg1;
- (void)setBackgroundOperationThrottleQueue:(id)arg1;
- (void)setBackgroundPublicIdentityLookupService:(id)arg1;
- (void)setCachedEnvironment:(long long)arg1;
- (void)setCachedSandboxExtensions:(id)arg1;
- (void)setCancellationQueue:(id)arg1;
- (void)setCleanupOperationQueue:(id)arg1;
- (void)setClientContainers:(id)arg1;
- (void)setClientSDKVersion:(unsigned int)arg1;
- (void)setCloudKitSupportOperationThrottleQueue:(id)arg1;
- (void)setContainerAvailable:(bool)arg1;
- (void)setContainerScopedUserID:(id)arg1;
- (void)setContainingBundleID:(id)arg1;
- (void)setDirectoryContext:(id)arg1;
- (void)setFakeErrorsByClassName:(id)arg1;
- (void)setFakeResponseOperationLifetimeByClassName:(id)arg1;
- (void)setFakeResponseOperationResultByClassNameByItemID:(id)arg1;
- (void)setFetchAggregator:(id)arg1;
- (void)setFetchAggregatorLock:(id)arg1;
- (void)setForegroundPublicIdentityLookupService:(id)arg1;
- (void)setGatekeeper:(id)arg1;
- (void)setHardwareID:(id)arg1;
- (void)setHasDataContainer:(bool)arg1;
- (void)setHasTCCAuthorizationTernary:(long long)arg1;
- (void)setHasValidatedEntitlementsTernary:(long long)arg1;
- (void)setIsClientMainBundleAppleExecutable:(bool)arg1;
- (void)setIsForClouddInternalUse:(bool)arg1;
- (void)setMMCS:(id)arg1;
- (void)setMmcsLock:(id)arg1;
- (void)setOperationQueue:(id)arg1;
- (void)setOperationStatisticsByClassName:(id)arg1;
- (void)setOrgAdminUserID:(id)arg1;
- (void)setPcsCache:(id)arg1;
- (void)setPcsManager:(id)arg1;
- (void)setPendingOperationIDs:(id)arg1;
- (void)setPublicCloudDBURL:(id)arg1;
- (void)setPublicCodeServiceURL:(id)arg1;
- (void)setPublicDeviceServiceURL:(id)arg1;
- (void)setPublicIdentitiesDiskCache:(id)arg1;
- (void)setPublicIdentityServiceLock:(id)arg1;
- (void)setPublicMetricsServiceURL:(id)arg1;
- (void)setPublicShareServiceURL:(id)arg1;
- (void)setResolvedAPSEnvironmentString:(id)arg1;
- (void)setSandboxExtensionsLock:(id)arg1;
- (void)setServerConfig:(id)arg1;
- (void)setServerConfigLock:(id)arg1;
- (void)setStatusQueue:(id)arg1;
- (void)setTCCDatabaseChangedNotificationObserver:(id)arg1;
- (void)setTccAuthOpQueue:(id)arg1;
- (void)setTccAuthQueue:(id)arg1;
- (void)setUncancellableOperationQueue:(id)arg1;
- (bool)setupAssetTransfers:(id*)arg1;
- (bool)setupMMCSWrapper:(id*)arg1;
- (bool)shouldUsePCSEncryption;
- (void)showAssetCache;
- (void)statusForApplicationPermission:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (id)statusQueue;
- (void)submitClientEventMetric:(id)arg1 completeWhenQueued:(bool)arg2 completionHandler:(id /* block */)arg3;
- (void)suggestedMergeableDeltaSizeWithCompletionHandler:(id /* block */)arg1;
- (id)tccAuthOpQueue;
- (id)tccAuthQueue;
- (void)tearDown;
- (void)tearDownAssetTransfers;
- (id)testServer;
- (id)uncancellableOperationQueue;

@end
