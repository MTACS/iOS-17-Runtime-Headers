
@interface SMUTVStackedImageView : UIView {
    UILayoutGuide * _focusLayoutGuide;
    NSLayoutConstraint * _heightConstraint;
    _UIStackedImageConfiguration * _imageStackConfig;
    _UIStackedImageContainerLayer * _imageStackLayer;
    double  _layerSelectionDuration;
    double  _layerUnselectionDuration;
    UIMotionEffectGroup * _motionEffectGroup;
    bool  _overlayComposited;
    UIView * _overlayView;
    double  _repositionUnselectionDuration;
    NSShadow * _shadow;
    double  _shadowSelectionDuration;
    double  _shadowUnselectionDuration;
    long long  _state;
    UIImage * _staticImage;
    _SMUTVStackedImageNamedLayerStack * _uiLayerStack;
    UIView * _unmaskedOverlayView;
    NSLayoutConstraint * _widthConstraint;
}

@property (nonatomic) bool allowsNonOpaqueShadow;
@property (nonatomic, readonly) unsigned long long controlState;
@property (nonatomic) double cornerRadius;
@property (nonatomic) bool flatImageContainsCornerRadius;
@property (nonatomic) struct CGPoint { double x1; double x2; } focusDirection;
@property (nonatomic, readonly) UILayoutGuide *focusLayoutGuide;
@property (nonatomic) double focusSizeIncrease;
@property (nonatomic, retain) UIImage *image;
@property (getter=isOverlayComposited, nonatomic) bool overlayComposited;
@property (nonatomic, retain) UIView *overlayView;
@property (nonatomic, retain) UIImage *placeholderImage;
@property (getter=isPressed, nonatomic) bool pressed;
@property (nonatomic, readonly) unsigned long long primaryControlState;
@property (getter=isSelected, nonatomic) bool selected;
@property (nonatomic, copy) NSShadow *shadow;
@property (nonatomic, readonly) long long state;
@property (nonatomic, retain) UIView *unmaskedOverlayView;

- (void).cxx_destruct;
- (bool)_applyKeyPathsAndRelativeValues:(id)arg1 forMotionEffect:(id)arg2;
- (void)_attachMotionEffects;
- (void)_commitLayerStack:(id)arg1;
- (void)_detachMotionEffects;
- (void)_loadImage;
- (id)_preferredConfigurationForFocusAnimation:(long long)arg1 inContext:(id)arg2;
- (struct CGSize { double x1; double x2; })_scaledSize;
- (void)_updateFocusLayoutGuideForControlState:(unsigned long long)arg1;
- (void)_updateLayerStack:(id)arg1 withImage:(struct CGImage { }*)arg2 size:(struct CGSize { double x1; double x2; })arg3;
- (void)_updateMotionEffectsForState:(unsigned long long)arg1;
- (void)_updateStackedImageConfiguration;
- (bool)allowsNonOpaqueShadow;
- (unsigned long long)controlState;
- (double)cornerRadius;
- (void)dealloc;
- (bool)flatImageContainsCornerRadius;
- (struct CGPoint { double x1; double x2; })focusDirection;
- (id)focusLayoutGuide;
- (double)focusSizeIncrease;
- (id)image;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isOverlayComposited;
- (bool)isPressed;
- (bool)isSelected;
- (void)layoutSubviews;
- (id)overlayView;
- (id)placeholderImage;
- (unsigned long long)primaryControlState;
- (void)setAllowsNonOpaqueShadow:(bool)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setControlState:(unsigned long long)arg1 animated:(bool)arg2;
- (void)setControlState:(unsigned long long)arg1 withAnimationCoordinator:(id)arg2;
- (void)setCornerRadius:(double)arg1;
- (void)setFlatImageContainsCornerRadius:(bool)arg1;
- (void)setFocusDirection:(struct CGPoint { double x1; double x2; })arg1;
- (void)setFocusDirection:(struct CGPoint { double x1; double x2; })arg1 animated:(bool)arg2;
- (void)setFocusSizeIncrease:(double)arg1;
- (void)setImage:(id)arg1;
- (void)setOverlayComposited:(bool)arg1;
- (void)setOverlayView:(id)arg1;
- (void)setPlaceholderImage:(id)arg1;
- (void)setPressed:(bool)arg1;
- (void)setPressed:(bool)arg1 animated:(bool)arg2;
- (void)setSelected:(bool)arg1;
- (void)setSelected:(bool)arg1 animated:(bool)arg2;
- (void)setSelected:(bool)arg1 animated:(bool)arg2 focusAnimationCoordinator:(id)arg3;
- (void)setShadow:(id)arg1;
- (void)setUnmaskedOverlayView:(id)arg1;
- (id)shadow;
- (long long)state;
- (id)unmaskedOverlayView;
- (void)willMoveToWindow:(id)arg1;

@end
