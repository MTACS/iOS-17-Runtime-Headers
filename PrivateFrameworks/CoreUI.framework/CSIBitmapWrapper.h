
@interface CSIBitmapWrapper : NSObject {
    bool  _allowsCompactCompression;
    bool  _allowsDeepmap2ImageCompression;
    bool  _allowsDeepmapImageCompression;
    bool  _allowsHevcCompression;
    bool  _allowsMultiPassEncoding;
    bool  _allowsOptimalRowbytesPacking;
    bool  _allowsPaletteImageCompression;
    struct CGContext { } * _bitmapContext;
    unsigned long long  _colorSpaceID;
    double  _compressionQuality;
    long long  _compressionType;
    struct CGImage { } * _destImage;
    int  _exifOrientation;
    bool  _flipped;
    unsigned int  _height;
    unsigned int  _imageAlpha;
    NSString * _name;
    NSData * _pixelData;
    unsigned int  _pixelFormat;
    unsigned long long  _rowbytes;
    struct CGImage { } * _sourceImage;
    long long  _targetPlatform;
    long long  _textureInterpretation;
    long long  _texturePixelFormat;
    unsigned int  _width;
}

@property bool allowsCompactCompression;
@property bool allowsDeepmap2ImageCompression;
@property bool allowsDeepmapImageCompression;
@property bool allowsHevcCompression;
@property bool allowsMultiPassEncoding;
@property bool allowsOptimalRowbytesPacking;
@property bool allowsPaletteImageCompression;
@property (nonatomic) unsigned long long colorSpaceID;
@property (nonatomic) double compressionQuality;
@property long long compressionType;
@property (nonatomic) int exifOrientation;
@property (nonatomic) bool flipped;
@property (nonatomic) NSString *name;
@property (nonatomic) unsigned int pixelFormat;
@property (nonatomic) unsigned long long rowbytes;
@property long long targetPlatform;
@property (nonatomic) long long textureInterpretation;

- (bool)allowsCompactCompression;
- (bool)allowsDeepmap2ImageCompression;
- (bool)allowsDeepmapImageCompression;
- (bool)allowsHevcCompression;
- (bool)allowsMultiPassEncoding;
- (bool)allowsOptimalRowbytesPacking;
- (bool)allowsPaletteImageCompression;
- (struct CGContext { }*)bitmapContext;
- (unsigned long long)colorSpaceID;
- (id)compressedData:(bool)arg1 usedEncoding:(int*)arg2 andRowChunkSize:(unsigned int*)arg3;
- (double)compressionQuality;
- (long long)compressionType;
- (void)dealloc;
- (int)exifOrientation;
- (bool)flipped;
- (unsigned int)height;
- (id)initWithCGImage:(struct CGImage { }*)arg1 width:(unsigned int)arg2 height:(unsigned int)arg3 texturePixelFormat:(long long)arg4;
- (id)initWithPixelWidth:(unsigned int)arg1 pixelHeight:(unsigned int)arg2;
- (id)name;
- (id)pixelData;
- (unsigned int)pixelFormat;
- (unsigned long long)rowbytes;
- (void)setAllowsCompactCompression:(bool)arg1;
- (void)setAllowsDeepmap2ImageCompression:(bool)arg1;
- (void)setAllowsDeepmapImageCompression:(bool)arg1;
- (void)setAllowsHevcCompression:(bool)arg1;
- (void)setAllowsMultiPassEncoding:(bool)arg1;
- (void)setAllowsOptimalRowbytesPacking:(bool)arg1;
- (void)setAllowsPaletteImageCompression:(bool)arg1;
- (void)setColorSpaceID:(unsigned long long)arg1;
- (void)setCompressionQuality:(double)arg1;
- (void)setCompressionType:(long long)arg1;
- (void)setExifOrientation:(int)arg1;
- (void)setFlipped:(bool)arg1;
- (void)setName:(id)arg1;
- (void)setPixelData:(id)arg1;
- (void)setPixelFormat:(unsigned int)arg1;
- (void)setRowbytes:(unsigned long long)arg1;
- (void)setSourceAlphaInfo:(unsigned int)arg1;
- (void)setTargetPlatform:(long long)arg1;
- (void)setTextureInterpretation:(long long)arg1;
- (unsigned int)sourceAlphaInfo;
- (long long)targetPlatform;
- (long long)textureInterpretation;
- (unsigned int)width;

@end
