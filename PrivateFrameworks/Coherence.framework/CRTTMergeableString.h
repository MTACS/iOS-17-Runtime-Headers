
@interface CRTTMergeableString : NSObject {
    long long  _addedByLocalCounter;
    ObjCReplica * _addedByReplica;
    ObjCVersion * _addedByVersion;
    id  _attributedString;
    bool  _cacheInvalid;
    NSObject * _context;
    unsigned long long  _editCount;
    void * _endNode;
    long long  _localCounter;
    struct vector<TopoSubstring *, std::allocator<TopoSubstring *>> { 
        struct TopoSubstring {} **__begin_; 
        struct TopoSubstring {} **__end_; 
        struct __compressed_pair<TopoSubstring **, std::allocator<TopoSubstring *>> { 
            struct TopoSubstring {} **__value_; 
        } __end_cap_; 
    }  _orderedSubstrings;
    long long  _renameGeneration;
    CRTTMergeableString * _renamedString;
    struct TopoReplica { 
        unsigned char uuid[16]; 
        unsigned int index; 
    }  _replica;
    void * _startNode;
    NSUUID * _uuid;
    ObjCVersion * _version;
}

@property (nonatomic) long long addedByLocalCounter;
@property (nonatomic, readonly) ObjCReplica *addedByReplica;
@property (nonatomic, retain) ObjCVersion *addedByVersion;
@property (nonatomic, retain) id attributedString;
@property (nonatomic, retain) NSObject *context;
@property (nonatomic) void*endNode;
@property (nonatomic, readonly) bool isEmptyCRDT;
@property (nonatomic) long long localCounter;
@property (nonatomic) long long renameGeneration;
@property (nonatomic, readonly) struct TopoReplica { unsigned char x1[16]; unsigned int x2; } replica;
@property (nonatomic) void*startNode;
@property (nonatomic, readonly) NSUUID *uuid;
@property (nonatomic, retain) ObjCVersion *version;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_apply:(id)arg1;
- (unsigned long long)_characterIndexForIndex:(id)arg1;
- (void)_deltaTo:(id)arg1 added:(id /* block */)arg2 deleted:(id /* block */)arg3 same:(id /* block */)arg4;
- (void)_updateCache;
- (void)addNewAddedByFor:(void*)arg1;
- (long long)addedByLocalCounter;
- (id)addedByReplica;
- (id)addedByVersion;
- (void)apply:(id)arg1 skipRetain:(bool)arg2;
- (void)applyRenamesAndRetainOrRelease:(id)arg1 context:(id)arg2 alsoApplyAllRenames:(bool)arg3;
- (void)applyTimestampRenames:(id)arg1;
- (id)attributedString;
- (void)beginEditing;
- (bool)canDeltaMerge:(id)arg1;
- (bool)canMergeString:(id)arg1;
- (unsigned long long)characterIndexForIndex:(id)arg1;
- (id)characterRangesForIDRange:(struct TopoIDRange { struct TopoID { struct TopoReplica { unsigned char x_1_2_1[16]; unsigned int x_1_2_2; } x_1_1_1; unsigned int x_1_1_2; } x1; unsigned int x2; })arg1;
- (id)characterRangesForMergeableRange:(id)arg1;
- (id)characterRangesForSelection:(id)arg1;
- (id)characterRangesForSelection:(id)arg1 selectedSubstringsBlock:(id /* block */)arg2;
- (void)coalesce;
- (id)context;
- (id)copyRenamedIfAvailable:(bool)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (void)deleteAllSubstrings;
- (void)deleteSubstrings:(void*)arg1 withCharacterRanges:(void*)arg2;
- (bool)deltaMerge:(id)arg1;
- (void)deltaTo:(id)arg1 added:(id /* block */)arg2 deleted:(id /* block */)arg3 same:(id /* block */)arg4;
- (void)deltaTo:(id)arg1 edited:(id /* block */)arg2 unedited:(id /* block */)arg3;
- (id)description;
- (id)dotDescription:(unsigned long long)arg1;
- (void)endEditing;
- (void*)endNode;
- (void)enumerateIndexes:(id /* block */)arg1;
- (void)enumerateSubstrings:(id /* block */)arg1;
- (void)finalizeTimestamps:(id)arg1;
- (id)fullyRenamed:(id)arg1;
- (void)getCharacterRanges:(void*)arg1 forSubstrings:(void*)arg2;
- (void*)getSubstringBeforeTopoID:(struct TopoID { struct TopoReplica { unsigned char x_1_1_1[16]; unsigned int x_1_1_2; } x1; unsigned int x2; })arg1;
- (void)getSubstrings:(void*)arg1 forCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)getSubstrings:(void*)arg1 forTopoIDRange:(struct TopoIDRange { struct TopoID { struct TopoReplica { unsigned char x_1_2_1[16]; unsigned int x_1_2_2; } x_1_1_1; unsigned int x_1_1_2; } x1; unsigned int x2; })arg2;
- (void)getSubstrings:(void*)arg1 inOrderedSubstrings:(void*)arg2 forCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3;
- (bool)graphIsEqual:(id)arg1;
- (bool)hasAllIDsIn:(void*)arg1;
- (bool)hasDeltaTo:(id)arg1 compareElements:(id /* block */)arg2;
- (id)initWithDecoder:(id)arg1 error:(id*)arg2;
- (id)initWithStorage:(id)arg1 uuid:(id)arg2;
- (id)initWithStorage:(id)arg1 uuid:(id)arg2 createInitialNodes:(bool)arg3;
- (void)insertAtIndex:(long long)arg1 length:(long long)arg2 getStorage:(id /* block */)arg3;
- (void)insertStorageLength:(long long)arg1 after:(void*)arg2 before:(void*)arg3 getStorage:(id /* block */)arg4;
- (void)invalidateCache;
- (bool)isEmptyCRDT;
- (bool)isEqual:(id)arg1;
- (unsigned long long)length;
- (long long)localCounter;
- (unsigned long long)mergeWithString:(id)arg1 optimized:(bool)arg2;
- (id)mergeableIndexForCharacterIndex:(long long)arg1 affinity:(unsigned long long)arg2;
- (bool)needToFinalizeTimestamps;
- (id)objcReplica;
- (void*)orderedSubstrings;
- (void)removeAll;
- (void)removeObjectsInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (long long)renameGeneration;
- (id)renamed:(id)arg1;
- (id)renamedIfAvailable;
- (void)replaceStorageInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 withStorage:(id)arg2;
- (struct TopoReplica { unsigned char x1[16]; unsigned int x2; })replica;
- (id)replicaUUIDForCharacterAtIndex:(unsigned long long)arg1;
- (bool)saveSubstrings:(void*)arg1 encoder:(id)arg2 error:(id*)arg3;
- (bool)saveToEncoder:(id)arg1 error:(id*)arg2;
- (id)selectionForCharacterRanges:(id)arg1;
- (id)selectionForCharacterRanges:(id)arg1 selectionAffinity:(unsigned long long)arg2;
- (void)setAddedByLocalCounter:(long long)arg1;
- (void)setAddedByVersion:(id)arg1;
- (void)setAttributedString:(id)arg1;
- (void)setContext:(id)arg1;
- (void)setEndNode:(void*)arg1;
- (void)setLocalCounter:(long long)arg1;
- (void)setRenameGeneration:(long long)arg1;
- (void)setStartNode:(void*)arg1;
- (void)setVersion:(id)arg1;
- (void)sortSplitNodes;
- (void*)splitTopoSubstring:(void*)arg1 atIndex:(unsigned int)arg2;
- (void*)startNode;
- (void)stealReplicaFrom:(id)arg1;
- (long long)substringCount;
- (id)temporaryConcurrentNames;
- (id)temporaryNamesExcludingSelf:(bool)arg1;
- (void)traverseUnordered:(id /* block */)arg1;
- (void)undeleteSubstrings:(void*)arg1;
- (id)undoCommandToChangeTo:(id)arg1 unedited:(id /* block */)arg2;
- (void)updateAttributedStringAfterMerge;
- (void)updateSubstringIndexes;
- (void)useRenameIfAvailable;
- (id)uuid;
- (id)version;

@end
