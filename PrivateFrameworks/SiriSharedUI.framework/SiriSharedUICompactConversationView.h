
@interface SiriSharedUICompactConversationView : SiriSharedUIStandardView <SiriSharedUICompactConversationViewHosting, SiriSharedUICompactServerUtteranceViewDelegate, SiriSharedUICompactUserUtteranceViewDelegate, SiriSharedUIExpandablePlatterPanGestureRecognizerDelegate, UIScrollViewDelegate> {
    bool  _allowAutomaticConversationSnippetViewScaling;
    bool  _automaticallyCollapseWhenResultIsScrolled;
    UIView * _containerView;
    UIView * _conversationSnippetContainerView;
    NSDictionary * _conversationSnippetVibrancyViews;
    NSArray * _conversationSnippetViews;
    long long  _currentExpandablePlatterStyle;
    double  _currentExpandedGestureHeight;
    bool  _currentlyTrackingGesture;
    <SiriSharedUICompactConversationViewDelegate> * _delegate;
    bool  _didSetConversationSnippets;
    SiriSharedUIExpandablePlatterPanGestureRecognizer * _expandablePlatterGesture;
    SiriSharedUIAdaptiveGrabberView * _grabberView;
    bool  _hasHintConversationSnippets;
    UIView * _hintSnippetView;
    UIView * _hintVibrancyView;
    bool  _isInAmbient;
    bool  _isInAmbientInteractivity;
    PLPlatterView * _platterView;
    NSMutableArray * _prepareForUpdatesPendingCompletionBlocks;
    bool  _requestedAppearanceAnimation;
    bool  _runningAnimatedFadeOut;
    bool  _runningPrepareForUpdates;
    SiriSharedUIStandardScrollView * _scrollView;
    SiriSharedUICompactServerUtteranceView * _serverUtteranceView;
    NSArray * _serverUtterances;
    bool  _showingCollapsedUI;
    SRUIFSpeechRecognitionHypothesis * _speechRecognitionHypothesis;
    SiriSharedUICompactUserUtteranceView * _userUtteranceView;
    bool  _waitingForFinalSpeechHypothesis;
    SiriSharedUIAnimationContext * animationContextForFrameAndLayoutUpdate;
    long long  attachmentType;
    double  attachmentYOffset;
    NSArray * customAttachmentConstraints;
    SiriSharedUIViewStackConstraints * stackConstraints;
    <SiriSharedUIStackableContentDelegate> * stackContainerDelegate;
    bool  useLowerPriorityHeightConstraint;
}

@property (nonatomic) bool allowAutomaticConversationSnippetViewScaling;
@property (nonatomic, retain) SiriSharedUIAnimationContext *animationContextForFrameAndLayoutUpdate;
@property (nonatomic) long long attachmentType;
@property (nonatomic) double attachmentYOffset;
@property (getter=willAutomaticallyCollapseWhenResultIsScrolled, nonatomic, readonly) bool automaticallyCollapseWhenResultIsScrolled;
@property (nonatomic, retain) UIView *conversationSnippetContainerView;
@property (nonatomic, copy) NSArray *conversationSnippetViews;
@property (nonatomic) long long currentExpandablePlatterStyle;
@property (getter=isCurrentlyTrackingGesture, nonatomic, readonly) bool currentlyTrackingGesture;
@property (nonatomic, retain) NSArray *customAttachmentConstraints;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <SiriSharedUICompactConversationViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) SiriSharedUIExpandablePlatterPanGestureRecognizer *expandablePlatterGesture;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isInAmbient;
@property (nonatomic) bool isInAmbientInteractivity;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } portraitContentSize;
@property (nonatomic, retain) SiriSharedUIStandardScrollView *scrollView;
@property (getter=_serverUtteranceView, setter=_setServerUtteranceView:, nonatomic, retain) SiriSharedUICompactServerUtteranceView *serverUtteranceView;
@property (nonatomic, copy) NSArray *serverUtterances;
@property (nonatomic) bool showingCollapsedUI;
@property (nonatomic, copy) SRUIFSpeechRecognitionHypothesis *speechRecognitionHypothesis;
@property (nonatomic, retain) SiriSharedUIViewStackConstraints *stackConstraints;
@property (nonatomic) <SiriSharedUIStackableContentDelegate> *stackContainerDelegate;
@property (readonly) Class superclass;
@property (nonatomic) bool useLowerPriorityHeightConstraint;

- (void).cxx_destruct;
- (void)_adjustCornerRadiusForSnippetView:(id)arg1 vibrancyView:(id)arg2;
- (void)_adjustHintCornerRadiusForSnippetView:(id)arg1 vibrancyView:(id)arg2;
- (long long)_animatedPresentationType;
- (id)_conversationAppearAnimation;
- (id)_conversationDisappearAnimation;
- (struct CGSize { double x1; double x2; })_fittingSize;
- (bool)_isConversationSnippetHintType:(id)arg1;
- (id)_keyForSnippet:(id)arg1;
- (void)_prepareHintForAnimation;
- (void)_reloadConversationSnippetViewsIfHint;
- (void)_resetExpandablePlatterGestureState;
- (void)_resetExpansionStateForNewContent;
- (id)_serverUtteranceView;
- (void)_setServerUtteranceView:(id)arg1;
- (void)_setupSubviews;
- (bool)_shouldAddVibrancyForSnippet:(id)arg1;
- (struct CGSize { double x1; double x2; })_sizeOfSnippet:(id)arg1;
- (struct CGSize { double x1; double x2; })_sizeThatFits:(struct CGSize { double x1; double x2; })arg1 forSnippet:(id)arg2;
- (struct CGSize { double x1; double x2; })_sizeThatFitsAllSnippets:(struct CGSize { double x1; double x2; })arg1;
- (void)_updateAmbientSnippetScaling;
- (void)_updateExpandableDrawerUI;
- (void)_updateExpandedHeight;
- (void)_updateSubviewContentInsets;
- (bool)_useShadowForPlatter;
- (bool)allowAutomaticConversationSnippetViewScaling;
- (void)animateAppearanceIfNeeded;
- (void)animateFadeOutWithCompletion:(id /* block */)arg1;
- (id)animationContextForFrameAndLayoutUpdate;
- (long long)attachmentType;
- (double)attachmentYOffset;
- (bool)contentSupportsCollapsingForHeight:(double)arg1;
- (id)conversationSnippetContainerView;
- (id)conversationSnippetViews;
- (long long)currentExpandablePlatterStyle;
- (id)customAttachmentConstraints;
- (id)delegate;
- (void)didCompleteAnimatedFadeOut;
- (id)expandablePlatterGesture;
- (void)expandablePlatterGesture:(id)arg1 didCompleteTransitionToStyle:(long long)arg2 phaseHeight:(double)arg3;
- (void)expandablePlatterGesture:(id)arg1 trackingGestureDidUpdateHeight:(double)arg2;
- (void)expandablePlatterGestureDidBeginWithRecognizer:(id)arg1;
- (void)expandablePlatterGestureDidEndWithRecognizer:(id)arg1;
- (id)hostingView;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithStreamingTextView:(id)arg1 emojiMaskStreamingTextView:(id)arg2;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (bool)isCurrentlyTrackingGesture;
- (bool)isInAmbient;
- (bool)isInAmbientInteractivity;
- (bool)layerHasOpacity;
- (void)layoutSubviews;
- (id)parserSpeakableObjectProviderForServerUtterance:(id)arg1;
- (struct CGSize { double x1; double x2; })portraitContentSize;
- (id)prepareForUpdatesPendingCompletionBlocks;
- (void)prepareForUpdatesToServerUtterance:(bool)arg1 conversationSnippetViews:(bool)arg2 speechRecognitionHypothesis:(bool)arg3 updateBlock:(id /* block */)arg4;
- (void)relayout;
- (id)scrollView;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(bool)arg2;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })serverUtteranceContentInsets;
- (void)serverUtteranceView:(id)arg1 utteranceViewDidAppear:(id)arg2;
- (void)serverUtteranceView:(id)arg1 utteranceViewDidDisappear:(id)arg2;
- (id)serverUtterances;
- (void)setAllowAutomaticConversationSnippetViewScaling:(bool)arg1;
- (void)setAnimationContextForFrameAndLayoutUpdate:(id)arg1;
- (void)setAttachmentType:(long long)arg1;
- (void)setAttachmentYOffset:(double)arg1;
- (void)setConversationSnippetContainerView:(id)arg1;
- (void)setConversationSnippetViews:(id)arg1;
- (void)setCurrentExpandablePlatterStyle:(long long)arg1;
- (void)setCustomAttachmentConstraints:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setExpandablePlatterGesture:(id)arg1;
- (void)setIsInAmbient:(bool)arg1;
- (void)setIsInAmbientInteractivity:(bool)arg1;
- (void)setScrollView:(id)arg1;
- (void)setServerUtterances:(id)arg1;
- (void)setShowCollapsedUI:(bool)arg1;
- (void)setShowingCollapsedUI:(bool)arg1;
- (void)setSpeechRecognitionHypothesis:(id)arg1;
- (void)setStackConstraints:(id)arg1;
- (void)setStackContainerDelegate:(id)arg1;
- (void)setUseLowerPriorityHeightConstraint:(bool)arg1;
- (bool)showingCollapsedUI;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (void)snippetContentDidUpdate;
- (void)snippetContentDidUpdateForHint;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })snippetContentInsets;
- (id)speechRecognitionHypothesis;
- (id)stackConstraints;
- (id)stackContainerDelegate;
- (bool)transitionToExpandablePlatterStyle:(long long)arg1;
- (void)updateContentSizeWithAnimation:(bool)arg1;
- (bool)useLowerPriorityHeightConstraint;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })userUtteranceContentInsets;
- (void)userUtteranceView:(id)arg1 speechRecognitionHypothesisDidAppear:(id)arg2;
- (void)userUtteranceView:(id)arg1 speechRecognitionHypothesisDidDisappear:(id)arg2;
- (void)userUtteranceViewContentHeightDidUpdate:(id)arg1;
- (void)userUtteranceViewTapped:(id)arg1;
- (bool)willAutomaticallyCollapseWhenResultIsScrolled;

@end
