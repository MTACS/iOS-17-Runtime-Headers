
@interface CoreOC.ObjectCaptureSession : NSObject <ARInternalSessionObserver, ARReplaySensorDelegate> {
    void _autoCaptureEnabled;
    void _bypassAllAlgos;
    void _captureRateControlEnabled;
    void _coverageEnabled;
    void _debugAutoCaptureEnabled;
    void _debugCameraControl;
    void _debugCoverageGuideVoxels;
    void _debugDebugVoxels;
    void _debugExplicitFeedbackEnabled;
    void _debugMaskingVoxel;
    void _debugOCBundleWriteDisabled;
    void _debugPlaneDetection;
    void _debugSurfaceSampling;
    void _debugTapPosition;
    void _debugTsdfDepth;
    void _debugWriteAllFramesData;
    void _explicitFeedbackEnabled;
    void _mobileSfMEnabled;
    void _mobileSfMPointCloudBuffer;
    void _mobileSfMiPhoneOverride;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _recordVideoURL;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _replayVideoURL;
    void _scaleWorldToObjectTransform;
    void _skippedFramesTimeStamps;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  _state;
    void _voxelIntegrationEnabled;
    void arSession;
    void boundingBox;
    void boundingBoxAnchor;
    void boundingBoxFailCurCount;
    void boundingBoxFailMaxCount;
    void cameraControl;
    void captureManager;
    void centerOfObjectInFOV;
    void consecutiveObjectFlippabilityCount;
    void coverage;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  currentFrame;
    void estimatedReconstructionTime;
    void explicitFeedbackManager;
    void frameIndex;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  identifier;
    void imageScaler;
    void initialCameraTransform;
    void initialWorldToMobileSfMTransform;
    void internalMotionManager;
    void isClosed;
    void isHighQualityMacroModeSupported;
    void isOverCaptureEnabled;
    void isPgManagerTornDown;
    void isPoseCorrectionUsingMobileSfMEnabled;
    void isToFSensorTypePeridot;
    void maskingManager;
    void maskingVoxelCloud;
    void metadataMap;
    void minConsecutiveObjectFlippabilityCount;
    void minShotFlippableMapSize;
    void mobileSfMPoseUpdateRotationDiffThreshold;
    void mobileSfMPoseUpdateTranslationDiffThreshold;
    void mobileSfMUserDefaultValue;
    void motionManager;
    void needToStopMotionManager;
    void numInitialShotsBeforeFlippableDecision;
    void numPoseUpdatesToCheckForConsistency;
    void objectFlippable;
    void objectInFOVRatio;
    void objectTransform;
    void observingPublishers;
    void pauseTimeForPoseCorrection;
    void pgManager;
    void plane;
    void planeMap;
    void pointCloud;
    void poseCorrectionTimerWorkItem;
    void prevPlane;
    void proxySurface;
    void proxySurfaceDebugVoxelCloud;
    void proxySurfaceInputType;
    void proxySurfaceObjectOrigin;
    void referenceTimestamp;
    void sessionQueue;
    void shotFlippableMap;
    void shotIDToUUIDMap;
    void shotUUIDToIDMap;
    void shotsInCurrentSegment;
    void shouldWaitForNewPlane;
    void shouldWaitForPoseCorrectionUsingMobileSfM;
    union { in /* Warning: Unrecognized filer type: 'u' using 'void*' */ void*x1; long x2; long x3; }  snapshotURL;
    void spi;
    void stateAfterFinishing;
    void stateOnPause;
    void staticSegmentID;
    void tapPosition;
    void temporalDepthPointCloudCacheInterval;
    void temporalDepthPointCloudCircularBuffer;
    void temporalDepthPointCloudUpdateInterval;
    void traceDebugId;
    void uuidToShotAnchorsMap;
    void voxelIntegrationManager;
    void waitTimeThresholdForPoseCorrectionInSec;
    void worldToMobileSfMTransform;
    void worldToObjectTransformFromMobileSfM;
    void writingPublishers;
    void yDistanceThresholdBetweenPrevAndCurrPlanes;
}

- (void).cxx_destruct;
- (void)dealloc;
- (id)init;
- (void)logThermalStateChange;
- (void)session:(id)arg1 cameraDidChangeTrackingState:(id)arg2;
- (void)session:(id)arg1 didAddAnchors:(id)arg2;
- (void)session:(id)arg1 didChangeState:(unsigned long long)arg2;
- (void)session:(id)arg1 didFailWithError:(id)arg2;
- (void)session:(id)arg1 didRemoveAnchors:(id)arg2;
- (void)session:(id)arg1 didUpdateAnchors:(id)arg2;
- (void)session:(id)arg1 didUpdateFrame:(id)arg2;
- (void)sessionInterruptionEnded:(id)arg1;
- (bool)sessionShouldAttemptRelocalization:(id)arg1;
- (void)sessionWasInterrupted:(id)arg1;

@end
