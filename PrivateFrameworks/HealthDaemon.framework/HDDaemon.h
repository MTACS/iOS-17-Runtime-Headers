
@interface HDDaemon : NSObject <HDApplicationStateMonitorProvider, HDDiagnosticObject, HDHealthDaemon, HDTaskServerClassProvider, LSApplicationWorkspaceObserverProtocol> {
    HDOTAFeatureAvailabilityManager * _OTAFeatureAvailabilityManager;
    HDXPCAlarmScheduler * _alarmScheduler;
    <HDNanoAlertSuppressionService> * _alertSuppressionService;
    HDAnalyticsSubmissionCoordinator * _analyticsSubmissionCoordinator;
    HDAutoBugCaptureReporter * _autoBugCaptureReporter;
    HDBackgroundTaskScheduler * _backgroundTaskScheduler;
    _HKBehavior * _behavior;
    HDCacheDeleteCoordinator * _cacheDeleteCoordinator;
    HDCloudSyncCoordinator * _cloudSyncCoordinator;
    HDDaemonConnectionManager * _connectionManager;
    HDContentProtectionManager * _contentProtectionManager;
    NSMutableArray * _daemonActivatedBlocks;
    NSDictionary * _daemonExtensionsByIdentifier;
    bool  _daemonReady;
    NSMutableArray * _daemonReadyBlocks;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _daemonReadyLock;
    <HDDaemonTester> * _daemonTester;
    HDDatabasePruningCoordinator * _databasePruningCoordinator;
    struct MGNotificationTokenStruct { } * _deviceNameChangesToken;
    HDDevicePowerMonitor * _devicePowerMonitor;
    struct atomic_flag { 
        _Atomic bool _Value; 
    }  _didStart;
    HDBackgroundObservationServerExtensionManager * _extensionManager;
    HKFeatureAvailabilityRequirementSatisfactionOverridesDataSource * _featureAvailabilityRequirementSatisfactionOverridesDataSource;
    HDHealthAppNewDeviceNotificationService * _healthAppNewDeviceNotificationService;
    NSString * _healthDirectoryPath;
    unsigned long long  _healthdStateHandler;
    int  _languageChangeNotifyToken;
    HDMaintenanceWorkCoordinator * _maintenanceWorkCoordinator;
    NSString * _medicalIDDirectoryPath;
    <HDPairedDeviceCapabilityProviding> * _nanoRegistryDeviceCapabilityProvider;
    HDNotificationInstructionSyncService * _notificationInstructionSyncService;
    long long  _numberOfDaemonReadyObserversAfterReady;
    long long  _numberOfDaemonReadyObserversBeforeReady;
    <HDOntologyAssetProvider> * _ontologyAssetProvider;
    HDOntologyBackingStore * _ontologyBackingStore;
    HDOntologyConfigurationProvider * _ontologyConfigurationProvider;
    HDOntologyUpdateCoordinator * _ontologyUpdateCoordinator;
    HDPeriodicActivity * _periodicActivity;
    HDPluginManager * _pluginManager;
    HDPostInstallUpdateManager * _postInstallUpdateManager;
    HDPrimaryProfile * _primaryProfile;
    HDProcessStateManager * _processStateManager;
    HDProfileManager * _profileManager;
    NSHashTable * _protectedResourceStoreProviders;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _protectedResourceStoreProvidersLock;
    HDQueryManager * _queryManager;
    NSObject<OS_dispatch_queue> * _queue;
    bool  _shouldEnqueueMaintenanceWork;
    HDTaskServerRegistry * _taskServerRegistry;
    HDUserDomainConceptEntityRegistry * _userDomainConceptEntityRegistry;
    HKWatchLowPowerModeDataSource * _watchLowPowerModeDataSource;
    HKWristDetectionSettingManager * _wristDetectionSettingManager;
    HDXPCEventManager * _xpcEventManager;
}

@property (nonatomic, readonly) HDOTAFeatureAvailabilityManager *OTAFeatureAvailabilityManager;
@property (nonatomic, readonly) HDXPCAlarmScheduler *alarmScheduler;
@property (nonatomic, retain) <HDNanoAlertSuppressionService> *alertSuppressionService;
@property (nonatomic, readonly) HDAnalyticsSubmissionCoordinator *analyticsSubmissionCoordinator;
@property (nonatomic, readonly) HDAutoBugCaptureReporter *autoBugCaptureReporter;
@property (readonly) HDBackgroundTaskScheduler *backgroundTaskScheduler;
@property (readonly) _HKBehavior *behavior;
@property (nonatomic, readonly) HDCacheDeleteCoordinator *cacheDeleteCoordinator;
@property (nonatomic, readonly) HDCloudSyncCoordinator *cloudSyncCoordinator;
@property (nonatomic, readonly) HDDaemonConnectionManager *connectionManager;
@property (nonatomic, readonly) HDContentProtectionManager *contentProtectionManager;
@property (nonatomic) <HDDaemonTester> *daemonTester;
@property (nonatomic, readonly) HDDatabasePruningCoordinator *databasePruningCoordinator;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) HDDevicePowerMonitor *devicePowerMonitor;
@property (nonatomic, readonly) HDBackgroundObservationServerExtensionManager *extensionManager;
@property (nonatomic, readonly) HKFeatureAvailabilityRequirementSatisfactionOverridesDataSource *featureAvailabilityRequirementSatisfactionOverridesDataSource;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) HDHealthAppNewDeviceNotificationService *healthAppNewDeviceNotificationService;
@property (readonly, copy) NSString *healthDirectoryPath;
@property (readonly, copy) NSURL *healthDirectoryURL;
@property (nonatomic, readonly) HDHealthMedicationsDaemonExtension *healthMedicationsDaemonExtension;
@property (readonly, copy) NSURL *localContentURL;
@property (nonatomic, readonly) HDMaintenanceWorkCoordinator *maintenanceWorkCoordinator;
@property (readonly, copy) NSString *medicalIDDirectoryPath;
@property (nonatomic, readonly) <HDPairedDeviceCapabilityProviding> *nanoRegistryDeviceCapabilityProvider;
@property (nonatomic, readonly) HDNotificationInstructionSyncService *notificationInstructionSyncService;
@property (nonatomic, readonly) <HDOntologyAssetProvider> *ontologyAssetProvider;
@property (nonatomic, readonly) HDOntologyBackingStore *ontologyBackingStore;
@property (nonatomic, readonly) HDOntologyConfigurationProvider *ontologyConfigurationProvider;
@property (nonatomic, readonly) HDOntologyUpdateCoordinator *ontologyUpdateCoordinator;
@property (readonly) HDPluginManager *pluginManager;
@property (nonatomic, readonly) HDPostInstallUpdateManager *postInstallUpdateManager;
@property (nonatomic, readonly) HDPrimaryProfile *primaryProfile;
@property (nonatomic, readonly) HDProcessStateManager *processStateManager;
@property (nonatomic, readonly) HDProfileManager *profileManager;
@property (nonatomic, readonly) HDQueryManager *queryManager;
@property (nonatomic) bool shouldEnqueueMaintenanceWork;
@property (readonly) Class superclass;
@property (nonatomic, readonly) HDTaskServerRegistry *taskServerRegistry;
@property (nonatomic, readonly) HDUserDomainConceptEntityRegistry *userDomainConceptEntityRegistry;
@property (nonatomic, readonly) HKWatchLowPowerModeDataSource *watchLowPowerModeDataSource;
@property (nonatomic, readonly) HDWorkoutPluginDaemonExtension *workoutPluginExtension;
@property (nonatomic, readonly) HKWristDetectionSettingManager *wristDetectionSettingManager;
@property (nonatomic, readonly) HDXPCEventManager *xpcEventManager;

// Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon

- (void).cxx_destruct;
- (id)IDSServiceWithIdentifier:(id)arg1;
- (id)OTAFeatureAvailabilityManager;
- (void)_localeOrLanguageChanged:(id)arg1;
- (id)_newAnalyticsSubmissionCoordinator;
- (id)_newAutoBugCaptureReporter;
- (id)_newBackgroundTaskScheduler;
- (id)_newCacheDeleteCoordinator;
- (id)_newCloudSyncCoordinator;
- (id)_newConnectionManager;
- (id)_newContentProtectionManager;
- (id)_newDatabasePruningCoordinator;
- (id)_newDevicePowerMonitor;
- (id)_newHealthAppNewDeviceNotificationService;
- (id)_newMaintenanceWorkCoordinator;
- (id)_newNanoRegistryDeviceCapabilityProvider;
- (id)_newNotificationInstructionSyncService;
- (id)_newOTAFeatureAvailabilityManager;
- (id)_newPluginManager;
- (id)_newPrimaryProfile;
- (id)_newProcessStateManager;
- (id)_newProfileManager;
- (id)_newTaskServerRegistry;
- (void)_postDaemonLaunchDarwinNotification;
- (void)_resetPrivacySettings;
- (id)alarmScheduler;
- (id)alertSuppressionService;
- (id)analyticsSubmissionCoordinator;
- (void)applicationStateDidChange:(id)arg1;
- (id)autoBugCaptureReporter;
- (id)backgroundTaskScheduler;
- (id)behavior;
- (id)cacheDeleteCoordinator;
- (id)cloudSyncCoordinator;
- (id)connectionManager;
- (id)contentProtectionManager;
- (id)createApplicationStateMonitor;
- (id)createApplicationStateMonitorWithBundleIDs:(id)arg1 states:(unsigned int)arg2 elevatedPriority:(bool)arg3;
- (id)createRBSProcessStateProvider;
- (id)daemonExtensionWithIdentifier:(id)arg1;
- (id)daemonExtensionsConformingToProtocol:(id)arg1;
- (id)daemonTester;
- (id)databasePruningCoordinator;
- (void)dealloc;
- (id)devicePowerMonitor;
- (id)diagnosticDescription;
- (void)exitClean:(bool)arg1 reason:(id)arg2;
- (id)extensionManager;
- (id)featureAvailabilityRequirementSatisfactionOverridesDataSource;
- (id)healthAppNewDeviceNotificationService;
- (id)healthDirectoryPath;
- (id)healthDirectorySizeInBytes;
- (id)healthDirectoryURL;
- (id)healthDomainAccessorWithPairedDevice:(id)arg1;
- (id)healthLiteUserDefaultsDomain;
- (id)init;
- (id)initWithContainerDirectoryPath:(id)arg1;
- (id)initWithHealthDirectoryPath:(id)arg1 medicalIDDirectoryPath:(id)arg2;
- (void)invalidateAllServersForProfile:(id)arg1;
- (void)invalidateAndWaitWithReason:(id)arg1;
- (id)localContentURL;
- (id)maintenanceWorkCoordinator;
- (id)medicalIDDirectoryPath;
- (id)nanoPairedDeviceRegistry;
- (id)nanoRegistryDeviceCapabilityProvider;
- (id)notificationInstructionSyncService;
- (void)obliterateAndTerminateProfiles:(id)arg1 options:(unsigned long long)arg2 reason:(id)arg3 completion:(id /* block */)arg4;
- (void)obliterateAndTerminateWithOptions:(unsigned long long)arg1 reason:(id)arg2 completion:(id /* block */)arg3;
- (id)ontologyAssetProvider;
- (id)ontologyBackingStore;
- (id)ontologyConfigurationProvider;
- (id)ontologyUpdateCoordinator;
- (id)pairedSyncCoordinatorWithServiceName:(id)arg1;
- (void)performBlockWithPowerAssertionIdentifier:(id)arg1 transactionName:(id)arg2 powerAssertionInterval:(double)arg3 block:(id /* block */)arg4;
- (id)pluginManager;
- (id)postInstallUpdateManager;
- (id)primaryProfile;
- (id)processStateManager;
- (id)profileManager;
- (id)protectedResourceStoreProviders;
- (id)queryManager;
- (void)registerDaemonActivatedObserver:(id)arg1 queue:(id)arg2;
- (void)registerDaemonReadyObserver:(id)arg1 queue:(id)arg2;
- (void)registerForDaemonReady:(id)arg1;
- (void)registerForLaunchNotification:(const char *)arg1;
- (void)registerProtectedResourceStoreProvider:(id)arg1;
- (void)setAlertSuppressionService:(id)arg1;
- (void)setDaemonTester:(id)arg1;
- (void)setShouldEnqueueMaintenanceWork:(bool)arg1;
- (bool)shouldEnqueueMaintenanceWork;
- (void)start;
- (id)taskServerClasses;
- (id)taskServerRegistry;
- (void)terminateClean:(bool)arg1 reason:(id)arg2;
- (void)unitTest_didCreateProfile:(id)arg1;
- (void)unitTest_didReadyProfile:(id)arg1;
- (void)unitTest_queryServerDidInit:(id)arg1;
- (void)unitTest_taskServerDidInit:(id)arg1;
- (void)unregisterForLaunchNotification:(const char *)arg1;
- (void)unregisterProtectedResourceStoreProvider:(id)arg1;
- (id)userDomainConceptEntityRegistry;
- (id)watchLowPowerModeDataSource;
- (id)workoutPluginExtension;
- (id)wristDetectionSettingManager;
- (id)xpcEventManager;

// Image: /System/Library/PrivateFrameworks/HealthMedicationsDaemonPlugin.framework/HealthMedicationsDaemonPlugin

- (id)healthMedicationsDaemonExtension;

@end
