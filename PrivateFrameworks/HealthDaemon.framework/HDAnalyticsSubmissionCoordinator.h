
@interface HDAnalyticsSubmissionCoordinator : NSObject <HDPeriodicActivityDelegate, HDProfileReadyObserver> {
    HDDaemon * _daemon;
    id /* block */  _dailyAnalyticsCompletionHandler;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _dailyAnalyticsObserversLock;
    NSMutableDictionary * _dailyAnalyticsPayload;
    NSMutableSet * _dailyAnalyticsPendingObservers;
    NSDate * _dailyAnalyticsStartTime;
    HDAssertion * _dbAssertion;
    HKObserverSet<HDAnalyticsSubmissionCoordinatorDelegate> * _observers;
    HDPeriodicActivity * _periodicActivity;
    NSObject<OS_dispatch_queue> * _queue;
    NSObject<OS_dispatch_queue> * _timeoutQueue;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (nonatomic, readonly) HKObserverSet<HDAnalyticsSubmissionCoordinatorDelegate> *unitTest_dailyAnalyticsObservers;

- (void).cxx_destruct;
- (id)_createHealthStoreForProfileIdentifier:(id)arg1;
- (void)_logFaultForTimedOutObservers:(id)arg1 timeoutSeconds:(double)arg2;
- (void)addObserver:(id)arg1 queue:(id)arg2;
- (void)attachments_reportDailyAnalytics:(id)arg1;
- (void)attachments_reportDailyCloudAnalytics:(id)arg1;
- (void)authorization_reportAuthRequestPromptedForBundleIdentifer:(id)arg1 profileType:(long long)arg2;
- (void)authorization_reportAuthRequestsFromBundleIdentifier:(id)arg1 isExtension:(bool)arg2 isAppleWatch:(bool)arg3 shouldPrompt:(bool)arg4;
- (void)cloudCache_reportCacheDiscrepancyForOperation:(id)arg1 reason:(id)arg2 containerIdentifier:(id)arg3 databaseScope:(id)arg4 error:(id)arg5;
- (void)cloudCache_reportCacheFetchAndUpdateAnalyticsForPipeline:(id)arg1 changedZonesCount:(long long)arg2 deletedZonesCount:(long long)arg3 changedRecordsCount:(long long)arg4 deletedRecordsCount:(long long)arg5;
- (void)cloudCache_reportCacheSyncAnalyticsForPipeline:(id)arg1 operationCount:(long long)arg2;
- (void)cloudCache_reportDailyCacheAnalyticsWithPushTargets:(long long)arg1 pullTargets:(long long)arg2 sharedDBSummarySharingZones:(long long)arg3 privateDBSummarySharingZones:(long long)arg4 unifiedZoneInSharedDB:(bool)arg5 unifiedZoneInPrivateDB:(bool)arg6 deviceContexts:(unsigned long long)arg7 deviceKeys:(unsigned long long)arg8 nilSyncIdentities:(unsigned long long)arg9;
- (void)cloudCache_reportWeeklyAnalyticsWithCacheValidation:(id)arg1;
- (void)cloudSync_newChildAdded:(bool)arg1;
- (void)cloudSync_operationFailed:(id)arg1 error:(id)arg2;
- (void)cloudSync_operationFinished:(id)arg1;
- (void)cloudSync_operationStarted:(id)arg1;
- (void)cloudSync_reportDailyAnalyticForProfileType:(long long)arg1 syncEnabled:(bool)arg2 syncDisabledError:(id)arg3 primaryContainer:(id)arg4 restoreComplete:(bool)arg5 timeSinceRestoreStart:(id)arg6 journalSize:(id)arg7 timeSinceLastSuccessfulPull:(id)arg8 timeSinceLastSuccessfulPush:(id)arg9 timeSinceLastSuccessfulLitePush:(id)arg10 timeSinceLastPushForwardProgress:(id)arg11 storeCount:(long long)arg12 zoneCount:(long long)arg13 hasUnifiedZone:(bool)arg14 hasMasterZone:(bool)arg15 hasMedicalID:(bool)arg16 errorRequiringUserAction:(id)arg17 childSyncIdentityCount:(long long)arg18 canUpgradeToSyncIdentity:(bool)arg19 startedUpgradeToSyncIdentity:(bool)arg20 completedUpgradeToSyncIdentity:(bool)arg21 iPhoneCount:(id)arg22 iPadCount:(id)arg23 watchCount:(id)arg24;
- (void)cloudSync_reportMissingManateeIdentityDuringFetchInContainer:(id)arg1 zoneName:(id)arg2 databaseScope:(long long)arg3;
- (void)cloudSync_reportOwnershipChangeForMissingManateeIdentityDuringPush;
- (void)cloudSync_reportOwnershipChangeForProfile:(id)arg1 reason:(id)arg2;
- (void)cloudSync_reportPeriodicSyncFailureWithError:(id)arg1 duration:(double)arg2 type:(long long)arg3;
- (void)cloudSync_reportPeriodicSyncStartForType:(long long)arg1;
- (void)cloudSync_reportPeriodicSyncSuccessAfterDuration:(double)arg1 type:(long long)arg2;
- (void)cloudSync_reportPipelineFailed:(id)arg1 error:(id)arg2;
- (void)cloudSync_reportPipelineFinished:(id)arg1;
- (void)cloudSync_reportPipelineStarted:(id)arg1;
- (void)cloudSync_reportRebaseTriggeredByDeletionByUser:(bool)arg1;
- (void)cloudSync_reportRestoreForProfile:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 duration:(double)arg4 finishedJournalMerge:(bool)arg5;
- (void)contextSync_operationSucceeded:(id)arg1;
- (void)contextSync_triggerDuration:(double)arg1;
- (void)database_reportCachedQueryEvent:(id)arg1 cacheHits:(long long)arg2 cacheMisses:(long long)arg3 estimatedTotalBuckets:(unsigned long long)arg4;
- (void)database_reportDatabaseMigrationStatus:(long long)arg1 database:(id)arg2 schemaVersion:(long long)arg3 error:(id)arg4 profileType:(long long)arg5;
- (void)database_reportHFDCorruptionWithFailureType:(long long)arg1 code:(int)arg2 description:(id)arg3 profile:(id)arg4 initialRebuildStage:(int)arg5 newRebuildStage:(int)arg6;
- (void)database_reportHFDRebuildWithDuration:(double)arg1 didDecompressArchivedHFD:(bool)arg2 didOpenArchivedHFD:(bool)arg3 didOpenMovedAsideHFD:(bool)arg4 additionalAnalytics:(id)arg5;
- (void)database_reportJournalEntryInsertedForJournal:(long long)arg1 entryClass:(id)arg2 entrySize:(id)arg3;
- (void)database_reportSQLiteCorruptionWithExtendedErrorCode:(int)arg1 type:(long long)arg2 profile:(id)arg3 description:(id)arg4 sqlStatement:(id)arg5 failedObliterationAttempt:(bool)arg6;
- (void)database_reportUnprotectedDatabaseIdentifier:(id)arg1 doesNotMatchProtectedDatabaseIdentifier:(id)arg2;
- (void)healthService_reportCountForAllServices:(id)arg1 profileType:(long long)arg2;
- (void)healthService_reportServiceType:(id)arg1 duration:(double)arg2 profileType:(long long)arg3;
- (void)healthService_reportServiceTypeAdded:(id)arg1 profileType:(long long)arg2;
- (void)healthService_reportServiceTypeRemoved:(id)arg1 profileType:(long long)arg2;
- (void)heartDaily_reportHeartDailyAnalytics:(id)arg1;
- (void)heartRate_reportDailyRestingHeartRate:(double)arg1 sedentaryHeartRateCount:(int)arg2 filteredSedentaryHeartRateCount:(int)arg3 profileType:(long long)arg4;
- (id)initWithDaemon:(id)arg1;
- (bool)isEventUsed:(id)arg1;
- (bool)isImprovedHealthAndActivityEnabled;
- (void)medicalID_dailyReport:(id)arg1 sosContactStatus:(bool)arg2 profileType:(long long)arg3;
- (void)medicalID_reportHasBeenDeletedForProfileType:(long long)arg1;
- (void)medicalID_reportHasBeenSetForProfileType:(long long)arg1;
- (void)nanoSync_reportResponseStatusCode:(int)arg1 profileType:(long long)arg2;
- (void)nanoSync_reportSyncFailureWithReason:(id)arg1 options:(unsigned long long)arg2 duration:(double)arg3 profileType:(long long)arg4 error:(id)arg5;
- (void)nanoSync_reportSyncSuccessWithReason:(id)arg1 options:(unsigned long long)arg2 duration:(double)arg3 profileType:(long long)arg4;
- (void)performPeriodicActivity:(id)arg1 completion:(id /* block */)arg2;
- (void)periodicActivity:(id)arg1 configureXPCActivityCriteria:(id)arg2;
- (bool)periodicActivityRequiresProtectedData:(id)arg1;
- (void)profileDidBecomeReady:(id)arg1;
- (void)removeObserver:(id)arg1;
- (void)sendDailyAnalyticsWithTimeout:(double)arg1 completion:(id /* block */)arg2;
- (void)sendEvent:(id)arg1 block:(id /* block */)arg2;
- (void)stateSync_operationFailed:(id)arg1 error:(id)arg2;
- (void)stateSync_operationSucceeded:(id)arg1;
- (void)stateSync_recordSize:(unsigned long long)arg1;
- (void)stateSync_subscriptionTriggeredDomain:(id)arg1;
- (void)stateSync_triggerDuration:(double)arg1;
- (void)summarySharing_reportDailyAnalytics:(id)arg1 activeWatchProductType:(id)arg2 age:(long long)arg3 sex:(id)arg4;
- (void)summarySharing_reportSetupOperation:(id)arg1 success:(bool)arg2 error:(id)arg3;
- (void)tinker_pairingDidFailWithError:(id)arg1 configuration:(id)arg2 duration:(double)arg3 stage:(long long)arg4;
- (void)tinker_pairingDidFinishForConfiguration:(id)arg1 duration:(double)arg2;
- (void)tinker_syncFailedWithError:(id)arg1 configuration:(id)arg2;
- (void)tinker_syncFinishedWithLatency:(id)arg1 timeSinceLastSuccessfullPull:(id)arg2 configuration:(id)arg3;
- (id)unitTest_dailyAnalyticsObservers;
- (void)workout_reportGymKitWorkoutWithFitnessMachineType:(id)arg1 manufacturer:(id)arg2 timeToBeginExperience:(long long)arg3 workoutEndError:(long long)arg4;
- (void)workout_reportWorkoutCondenserEventWithReason:(long long)arg1 batchSize:(long long)arg2 hasWatchSource:(bool)arg3 duration:(double)arg4 success:(bool)arg5 error:(id)arg6 workoutsToCondense:(long long)arg7 workoutsToRecondense:(long long)arg8 condensedWorkouts:(long long)arg9 processedWorkouts:(long long)arg10 createdSeries:(long long)arg11 deletedSamples:(long long)arg12;

@end
