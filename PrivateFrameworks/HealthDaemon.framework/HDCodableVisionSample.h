
@interface HDCodableVisionSample : PBCodable <HDDecoding, NSCopying> {
    NSString * _brand;
    NSString * _glassesDescription;
    struct { 
        unsigned int leftAddPower : 1; 
        unsigned int leftAxis : 1; 
        unsigned int leftBaseCurve : 1; 
        unsigned int leftContactDiameter : 1; 
        unsigned int leftCylinder : 1; 
        unsigned int leftFarPupillaryDistance : 1; 
        unsigned int leftNearPupillaryDistance : 1; 
        unsigned int leftPrismAmount : 1; 
        unsigned int leftPrismAngle : 1; 
        unsigned int leftSphere : 1; 
        unsigned int leftVertexDistance : 1; 
        unsigned int prescriptionType : 1; 
        unsigned int rightAddPower : 1; 
        unsigned int rightAxis : 1; 
        unsigned int rightBaseCurve : 1; 
        unsigned int rightContactDiameter : 1; 
        unsigned int rightCylinder : 1; 
        unsigned int rightFarPupillaryDistance : 1; 
        unsigned int rightNearPupillaryDistance : 1; 
        unsigned int rightPrismAmount : 1; 
        unsigned int rightPrismAngle : 1; 
        unsigned int rightSphere : 1; 
        unsigned int rightVertexDistance : 1; 
    }  _has;
    double  _leftAddPower;
    double  _leftAxis;
    double  _leftBaseCurve;
    double  _leftContactDiameter;
    double  _leftCylinder;
    double  _leftFarPupillaryDistance;
    double  _leftNearPupillaryDistance;
    double  _leftPrismAmount;
    double  _leftPrismAngle;
    double  _leftSphere;
    double  _leftVertexDistance;
    long long  _prescriptionType;
    double  _rightAddPower;
    double  _rightAxis;
    double  _rightBaseCurve;
    double  _rightContactDiameter;
    double  _rightCylinder;
    double  _rightFarPupillaryDistance;
    double  _rightNearPupillaryDistance;
    double  _rightPrismAmount;
    double  _rightPrismAngle;
    double  _rightSphere;
    double  _rightVertexDistance;
    HDCodableSample * _sample;
    HDCodableVerifiableData * _verifiableData;
}

@property (nonatomic, retain) NSString *brand;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSString *glassesDescription;
@property (nonatomic, readonly) bool hasBrand;
@property (nonatomic, readonly) bool hasGlassesDescription;
@property (nonatomic) bool hasLeftAddPower;
@property (nonatomic) bool hasLeftAxis;
@property (nonatomic) bool hasLeftBaseCurve;
@property (nonatomic) bool hasLeftContactDiameter;
@property (nonatomic) bool hasLeftCylinder;
@property (nonatomic) bool hasLeftFarPupillaryDistance;
@property (nonatomic) bool hasLeftNearPupillaryDistance;
@property (nonatomic) bool hasLeftPrismAmount;
@property (nonatomic) bool hasLeftPrismAngle;
@property (nonatomic) bool hasLeftSphere;
@property (nonatomic) bool hasLeftVertexDistance;
@property (nonatomic) bool hasPrescriptionType;
@property (nonatomic) bool hasRightAddPower;
@property (nonatomic) bool hasRightAxis;
@property (nonatomic) bool hasRightBaseCurve;
@property (nonatomic) bool hasRightContactDiameter;
@property (nonatomic) bool hasRightCylinder;
@property (nonatomic) bool hasRightFarPupillaryDistance;
@property (nonatomic) bool hasRightNearPupillaryDistance;
@property (nonatomic) bool hasRightPrismAmount;
@property (nonatomic) bool hasRightPrismAngle;
@property (nonatomic) bool hasRightSphere;
@property (nonatomic) bool hasRightVertexDistance;
@property (nonatomic, readonly) bool hasSample;
@property (nonatomic, readonly) bool hasVerifiableData;
@property (readonly) unsigned long long hash;
@property (nonatomic) double leftAddPower;
@property (nonatomic) double leftAxis;
@property (nonatomic) double leftBaseCurve;
@property (nonatomic) double leftContactDiameter;
@property (nonatomic) double leftCylinder;
@property (nonatomic) double leftFarPupillaryDistance;
@property (nonatomic) double leftNearPupillaryDistance;
@property (nonatomic) double leftPrismAmount;
@property (nonatomic) double leftPrismAngle;
@property (nonatomic) double leftSphere;
@property (nonatomic) double leftVertexDistance;
@property (nonatomic) long long prescriptionType;
@property (nonatomic) double rightAddPower;
@property (nonatomic) double rightAxis;
@property (nonatomic) double rightBaseCurve;
@property (nonatomic) double rightContactDiameter;
@property (nonatomic) double rightCylinder;
@property (nonatomic) double rightFarPupillaryDistance;
@property (nonatomic) double rightNearPupillaryDistance;
@property (nonatomic) double rightPrismAmount;
@property (nonatomic) double rightPrismAngle;
@property (nonatomic) double rightSphere;
@property (nonatomic) double rightVertexDistance;
@property (nonatomic, retain) HDCodableSample *sample;
@property (readonly) Class superclass;
@property (nonatomic, retain) HDCodableVerifiableData *verifiableData;

- (void).cxx_destruct;
- (bool)applyToObject:(id)arg1;
- (id)brand;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (id)glassesDescription;
- (bool)hasBrand;
- (bool)hasGlassesDescription;
- (bool)hasLeftAddPower;
- (bool)hasLeftAxis;
- (bool)hasLeftBaseCurve;
- (bool)hasLeftContactDiameter;
- (bool)hasLeftCylinder;
- (bool)hasLeftFarPupillaryDistance;
- (bool)hasLeftNearPupillaryDistance;
- (bool)hasLeftPrismAmount;
- (bool)hasLeftPrismAngle;
- (bool)hasLeftSphere;
- (bool)hasLeftVertexDistance;
- (bool)hasPrescriptionType;
- (bool)hasRightAddPower;
- (bool)hasRightAxis;
- (bool)hasRightBaseCurve;
- (bool)hasRightContactDiameter;
- (bool)hasRightCylinder;
- (bool)hasRightFarPupillaryDistance;
- (bool)hasRightNearPupillaryDistance;
- (bool)hasRightPrismAmount;
- (bool)hasRightPrismAngle;
- (bool)hasRightSphere;
- (bool)hasRightVertexDistance;
- (bool)hasSample;
- (bool)hasVerifiableData;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (double)leftAddPower;
- (double)leftAxis;
- (double)leftBaseCurve;
- (double)leftContactDiameter;
- (double)leftCylinder;
- (double)leftFarPupillaryDistance;
- (double)leftNearPupillaryDistance;
- (double)leftPrismAmount;
- (double)leftPrismAngle;
- (double)leftSphere;
- (double)leftVertexDistance;
- (void)mergeFrom:(id)arg1;
- (long long)prescriptionType;
- (bool)readFrom:(id)arg1;
- (double)rightAddPower;
- (double)rightAxis;
- (double)rightBaseCurve;
- (double)rightContactDiameter;
- (double)rightCylinder;
- (double)rightFarPupillaryDistance;
- (double)rightNearPupillaryDistance;
- (double)rightPrismAmount;
- (double)rightPrismAngle;
- (double)rightSphere;
- (double)rightVertexDistance;
- (id)sample;
- (void)setBrand:(id)arg1;
- (void)setGlassesDescription:(id)arg1;
- (void)setHasLeftAddPower:(bool)arg1;
- (void)setHasLeftAxis:(bool)arg1;
- (void)setHasLeftBaseCurve:(bool)arg1;
- (void)setHasLeftContactDiameter:(bool)arg1;
- (void)setHasLeftCylinder:(bool)arg1;
- (void)setHasLeftFarPupillaryDistance:(bool)arg1;
- (void)setHasLeftNearPupillaryDistance:(bool)arg1;
- (void)setHasLeftPrismAmount:(bool)arg1;
- (void)setHasLeftPrismAngle:(bool)arg1;
- (void)setHasLeftSphere:(bool)arg1;
- (void)setHasLeftVertexDistance:(bool)arg1;
- (void)setHasPrescriptionType:(bool)arg1;
- (void)setHasRightAddPower:(bool)arg1;
- (void)setHasRightAxis:(bool)arg1;
- (void)setHasRightBaseCurve:(bool)arg1;
- (void)setHasRightContactDiameter:(bool)arg1;
- (void)setHasRightCylinder:(bool)arg1;
- (void)setHasRightFarPupillaryDistance:(bool)arg1;
- (void)setHasRightNearPupillaryDistance:(bool)arg1;
- (void)setHasRightPrismAmount:(bool)arg1;
- (void)setHasRightPrismAngle:(bool)arg1;
- (void)setHasRightSphere:(bool)arg1;
- (void)setHasRightVertexDistance:(bool)arg1;
- (void)setLeftAddPower:(double)arg1;
- (void)setLeftAxis:(double)arg1;
- (void)setLeftBaseCurve:(double)arg1;
- (void)setLeftContactDiameter:(double)arg1;
- (void)setLeftCylinder:(double)arg1;
- (void)setLeftFarPupillaryDistance:(double)arg1;
- (void)setLeftNearPupillaryDistance:(double)arg1;
- (void)setLeftPrismAmount:(double)arg1;
- (void)setLeftPrismAngle:(double)arg1;
- (void)setLeftSphere:(double)arg1;
- (void)setLeftVertexDistance:(double)arg1;
- (void)setPrescriptionType:(long long)arg1;
- (void)setRightAddPower:(double)arg1;
- (void)setRightAxis:(double)arg1;
- (void)setRightBaseCurve:(double)arg1;
- (void)setRightContactDiameter:(double)arg1;
- (void)setRightCylinder:(double)arg1;
- (void)setRightFarPupillaryDistance:(double)arg1;
- (void)setRightNearPupillaryDistance:(double)arg1;
- (void)setRightPrismAmount:(double)arg1;
- (void)setRightPrismAngle:(double)arg1;
- (void)setRightSphere:(double)arg1;
- (void)setRightVertexDistance:(double)arg1;
- (void)setSample:(id)arg1;
- (void)setVerifiableData:(id)arg1;
- (id)verifiableData;
- (void)writeTo:(id)arg1;

@end
