
@interface HDNanoSyncManager : NSObject <HDDataObserver, HDDatabaseProtectedDataObserver, HDDiagnosticObject, HDForegroundClientProcessObserver, HDIDSMessageCenterDelegate, HDNanoSyncStoreDelegate, HDProfileReadyObserver, HDSyncSessionDelegate> {
    HDNanoSyncStore * _activeSyncStore;
    HDNanoSyncStore * _activeTinkerSyncStore;
    <_CDLocalContext> * _context;
    bool  _enablePeriodicSyncTimer;
    _Atomic bool  _invalidated;
    bool  _isMaster;
    NSDate * _lastPeriodicSyncDate;
    HDIDSMessageCenter * _messageCenter;
    HDKeyValueDomain * _nanoSyncDomain;
    HKObserverSet * _observers;
    NSArray * _pairedDevices;
    HKNanoSyncPairedDevicesSnapshot * _pairedDevicesSnapshot;
    HDPairedSyncManager * _pairedSyncManager;
    NSObject<OS_dispatch_source> * _periodicSyncTimer;
    HDProfile * _profile;
    NSObject<OS_dispatch_queue> * _queue;
    double  _restoreTimeout;
    NSObject<OS_dispatch_queue> * _syncQueue;
    NSMutableDictionary * _syncStoresByDeviceIdentifier;
    int  _tinkerOptInAcceptedToken;
    int  _tinkerOptInDeclinedToken;
    NSMutableArray * _tinkerOptInResponseBlocks;
    bool  _waitingForFirstUnlock;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property bool enablePeriodicSyncTimer;
@property (readonly) unsigned long long hash;
@property (readonly) bool isMaster;
@property (readonly) HKNanoSyncPairedDevicesSnapshot *pairedDevicesSnapshot;
@property (nonatomic, readonly) HDPairedSyncManager *pairedSyncManager;
@property double restoreTimeout;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_deviceDidBecomeActive:(id)arg1;
- (void)_deviceDidPair:(id)arg1;
- (void)_deviceDidUnpair:(id)arg1;
- (void)_scheduleResetReceivedNanoSyncAnchorsForHFD;
- (void)_userCharacteristicsDidChange:(id)arg1;
- (void)_userPreferencesDidChange:(id)arg1;
- (void)_watchOffWristNotification:(id)arg1;
- (void)_workoutSamplesWereAssociated:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)database:(id)arg1 protectedDataDidBecomeAvailable:(bool)arg2;
- (void)dealloc;
- (id)diagnosticDescription;
- (bool)enablePeriodicSyncTimer;
- (void)foregroundClientProcessesDidChange:(id)arg1 previouslyForegroundBundleIdentifiers:(id)arg2;
- (id)initWithProfile:(id)arg1 isMaster:(bool)arg2;
- (void)initializeMessageCenterIfNeeded;
- (void)invalidateAndWait;
- (bool)isMaster;
- (void)messageCenter:(id)arg1 activeDeviceDidChange:(id)arg2 acknowledgementHandler:(id /* block */)arg3;
- (void)messageCenter:(id)arg1 didResolveIDSIdentifierForRequest:(id)arg2;
- (void)messageCenter:(id)arg1 didResolveIDSIdentifierForResponse:(id)arg2;
- (void)messageCenterChangesError:(id)arg1;
- (void)messageCenterDidReceiveAuthorizationCompleteRequest:(id)arg1;
- (void)messageCenterDidReceiveAuthorizationError:(id)arg1;
- (void)messageCenterDidReceiveAuthorizationRequest:(id)arg1;
- (void)messageCenterDidReceiveAuthorizationResponse:(id)arg1;
- (void)messageCenterDidReceiveChangesRequest:(id)arg1;
- (void)messageCenterDidReceiveChangesResponse:(id)arg1;
- (void)messageCenterDidReceiveCompanionUserNotificationError:(id)arg1;
- (void)messageCenterDidReceiveCompanionUserNotificationRequest:(id)arg1;
- (void)messageCenterDidReceiveCompanionUserNotificationResponse:(id)arg1;
- (void)messageCenterDidReceiveRestoreRequest:(id)arg1;
- (void)messageCenterDidReceiveRestoreResponse:(id)arg1;
- (void)messageCenterDidReceiveRoutineRequest:(id)arg1;
- (void)messageCenterDidReceiveStartWorkoutAppError:(id)arg1;
- (void)messageCenterDidReceiveStartWorkoutAppRequest:(id)arg1;
- (void)messageCenterDidReceiveStartWorkoutAppResponse:(id)arg1;
- (void)messageCenterDidReceiveTinkerEndToEndCloudSyncError:(id)arg1;
- (void)messageCenterDidReceiveTinkerEndToEndCloudSyncRequest:(id)arg1;
- (void)messageCenterDidReceiveTinkerEndToEndCloudSyncResponse:(id)arg1;
- (void)messageCenterDidReceiveTinkerOptInError:(id)arg1;
- (void)messageCenterDidReceiveTinkerOptInRequest:(id)arg1;
- (void)messageCenterDidReceiveTinkerOptInResponse:(id)arg1;
- (void)messageCenterDidReceiveTinkerPairingError:(id)arg1;
- (void)messageCenterDidReceiveTinkerPairingRequest:(id)arg1;
- (void)messageCenterDidReceiveTinkerPairingResponse:(id)arg1;
- (void)messageCenterRestoreError:(id)arg1;
- (void)nanoSyncStore:(id)arg1 deviceNameDidChange:(id)arg2;
- (void)nanoSyncStore:(id)arg1 remoteSystemBuildVersionDidChange:(id)arg2;
- (void)nanoSyncStore:(id)arg1 restoreStateDidChange:(long long)arg2;
- (void)obliterateWithOptions:(unsigned long long)arg1 reason:(id)arg2;
- (id)pairedDevicesSnapshot;
- (void)pairedSyncDidBeginForDevice:(id)arg1 messagesSentHandler:(id /* block */)arg2 completion:(id /* block */)arg3;
- (id)pairedSyncManager;
- (void)profileDidBecomeReady:(id)arg1;
- (void)removeObserver:(id)arg1;
- (void)requestAuthorizationForRequestRecord:(id)arg1 requestSentHandler:(id /* block */)arg2 completion:(id /* block */)arg3;
- (void)resetSyncWithCompletion:(id /* block */)arg1;
- (double)restoreTimeout;
- (void)samplesAdded:(id)arg1 anchor:(id)arg2;
- (void)sendCompanionUserNotificationRequest:(id)arg1 completion:(id /* block */)arg2;
- (void)sendStartWorkoutAppRequest:(id)arg1 completion:(id /* block */)arg2;
- (void)sendTinkerEndToEndCloudSyncRequestForNRDeviceUUID:(id)arg1 completion:(id /* block */)arg2;
- (void)sendTinkerSharingOptInRequest:(id)arg1 forNRDeviceUUID:(id)arg2 completion:(id /* block */)arg3;
- (void)sendTinkerWatchPairingRequest:(id)arg1 forNRDeviceUUID:(id)arg2 completion:(id /* block */)arg3;
- (void)setEnablePeriodicSyncTimer:(bool)arg1;
- (void)setRestoreTimeout:(double)arg1;
- (void)syncHealthDataWithOptions:(unsigned long long)arg1 completion:(id /* block */)arg2;
- (void)syncHealthDataWithOptions:(unsigned long long)arg1 reason:(id)arg2 accessibilityAssertion:(id)arg3 completion:(id /* block */)arg4;
- (void)syncHealthDataWithOptions:(unsigned long long)arg1 reason:(id)arg2 completion:(id /* block */)arg3;
- (void)syncSession:(id)arg1 didFinishSuccessfully:(bool)arg2 error:(id)arg3;
- (void)syncSession:(id)arg1 sendChanges:(id)arg2 completion:(id /* block */)arg3;
- (void)syncSessionWillBegin:(id)arg1;
- (void)unitTest_performWithActiveSyncStore:(id /* block */)arg1;
- (void)updatePairedDevicesWithCompletion:(id /* block */)arg1;
- (void)waitForLastChanceSyncWithDevicePairingID:(id)arg1 timeout:(double)arg2 completion:(id /* block */)arg3;

@end
