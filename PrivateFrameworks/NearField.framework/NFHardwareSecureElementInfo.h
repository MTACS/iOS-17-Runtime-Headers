
@interface NFHardwareSecureElementInfo : NSObject <NSSecureCoding> {
    unsigned long long  _OSMode;
    unsigned long long  _OSVersion;
    unsigned long long  _appletMap;
    NSString * _atrString;
    NSArray * _bootHistory;
    NSNumber * _compiledFWVersion;
    unsigned long long  _deviceType;
    NSString * _ecdsaCertificate;
    NSString * _eckaCertificate;
    NSString * _firmwareKeyID;
    unsigned long long  _firmwareVersion;
    unsigned long long  _fullOSVersion;
    unsigned long long  _hardwareVersion;
    NSString * _identifier;
    bool  _jcopTooOld;
    NSData * _manifestQuery;
    unsigned long long  _migrationContext;
    NSNumber * _migrationInstances;
    NSNumber * _migrationPackages;
    unsigned long long  _migrationState;
    NSString * _nonce;
    NSString * _osKeyID;
    bool  _osUpdateMode;
    unsigned long long  _osid;
    NSNumber * _otherOSValid;
    NSNumber * _persistentConfigID;
    bool  _personalisable;
    NSString * _platformIdentifier;
    NSNumber * _referenceCounter;
    bool  _restrictedMode;
    bool  _restrictedPerformanceMode;
    NSString * _rootKeyID;
    NSString * _rsaCertificate;
    unsigned long long  _seType;
    NSNumber * _sequenceCounter;
    NSString * _serialNumber;
    unsigned long long  _signingKeyType;
    unsigned long long  _supportedTechnologies;
    NSString * _systemOSSerialNumber;
}

@property (nonatomic, readonly) unsigned long long OSMode;
@property (nonatomic, readonly) unsigned long long OSVersion;
@property (nonatomic, readonly) unsigned long long appletMap;
@property (nonatomic, readonly, retain) NSString *atrString;
@property (nonatomic, readonly, retain) NSArray *bootHistory;
@property (nonatomic, readonly, retain) NSNumber *compiledFWVersion;
@property (nonatomic, readonly) unsigned long long deviceType;
@property (nonatomic, readonly, retain) NSString *ecdsaCertificate;
@property (nonatomic, readonly, retain) NSString *eckaCertificate;
@property (nonatomic, readonly) NSNumber *expectedSequenceCounter;
@property (nonatomic, readonly, retain) NSString *firmwareKeyID;
@property (nonatomic, readonly) unsigned long long firmwareVersion;
@property (nonatomic, readonly) unsigned long long fullOSVersion;
@property (nonatomic, readonly) unsigned long long hardwareVersion;
@property (nonatomic, readonly, retain) NSString *identifier;
@property (nonatomic, readonly) bool jcopTooOld;
@property (nonatomic, readonly, retain) NSData *manifestQuery;
@property (nonatomic, readonly) unsigned long long migrationContext;
@property (nonatomic, readonly, retain) NSNumber *migrationInstances;
@property (nonatomic, readonly, retain) NSNumber *migrationPackages;
@property (nonatomic, readonly) unsigned long long migrationState;
@property (nonatomic, readonly, retain) NSString *nonce;
@property (nonatomic, readonly, retain) NSString *osKeyID;
@property (nonatomic, readonly) bool osUpdateMode;
@property (nonatomic, readonly) unsigned long long osid;
@property (nonatomic, readonly, retain) NSNumber *otherOSValid;
@property (nonatomic, readonly, retain) NSNumber *persistentConfigID;
@property (nonatomic, readonly) bool personalisable;
@property (nonatomic, readonly, retain) NSString *platformIdentifier;
@property (nonatomic, readonly, retain) NSNumber *referenceCounter;
@property (nonatomic, readonly) bool restrictedMode;
@property (nonatomic, readonly) bool restrictedPerformanceMode;
@property (nonatomic, readonly, retain) NSString *rootKeyID;
@property (nonatomic, readonly, retain) NSString *rsaCertificate;
@property (nonatomic, readonly) unsigned long long seType;
@property (nonatomic, readonly, retain) NSNumber *sequenceCounter;
@property (nonatomic, readonly, retain) NSString *serialNumber;
@property (nonatomic, readonly) unsigned long long signingKeyType;
@property (nonatomic, readonly) unsigned long long supportedTechnologies;
@property (nonatomic, readonly, retain) NSString *systemOSSerialNumber;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (unsigned long long)OSMode;
- (unsigned long long)OSVersion;
- (void)_setIsInRestrictedMode:(bool)arg1;
- (void)_setIsInRestrictedPerformanceMode:(bool)arg1;
- (unsigned long long)appletMap;
- (id)asDictionary;
- (id)atrString;
- (id)bootHistory;
- (id)compiledFWVersion;
- (unsigned long long)deviceType;
- (id)ecdsaCertificate;
- (id)eckaCertificate;
- (void)encodeWithCoder:(id)arg1;
- (id)expectedSequenceCounter;
- (id)firmwareKeyID;
- (unsigned long long)firmwareVersion;
- (unsigned long long)fullOSVersion;
- (unsigned long long)hardwareVersion;
- (id)identifier;
- (id)initWithCoder:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (bool)jcopTooOld;
- (id)manifestQuery;
- (unsigned long long)migrationContext;
- (id)migrationInstances;
- (id)migrationPackages;
- (unsigned long long)migrationState;
- (id)nonce;
- (id)osKeyID;
- (bool)osUpdateMode;
- (unsigned long long)osid;
- (id)otherOSValid;
- (id)persistentConfigID;
- (bool)personalisable;
- (id)platformIdentifier;
- (id)referenceCounter;
- (bool)restrictedMode;
- (bool)restrictedPerformanceMode;
- (id)rootKeyID;
- (id)rsaCertificate;
- (unsigned long long)seType;
- (id)sequenceCounter;
- (id)serialNumber;
- (void)setBootHistory:(id)arg1;
- (unsigned long long)signingKeyType;
- (unsigned long long)supportedTechnologies;
- (id)systemOSSerialNumber;

@end
