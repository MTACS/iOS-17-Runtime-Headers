
@interface CONodeController : NSObject <CONodeDelegate, COTransportDelegate> {
    NSSet * _acceptableCommands;
    bool  _activated;
    <CONodeControllerDelegate> * _delegate;
    COExecutionContext * _executionContext;
    bool  _handlersRegistered;
    CODiscoveryRecord * _ipDiscoveryRecord;
    COConstituent * _leader;
    CONode * _node;
    <CODiscoveryRecordProtocol> * _originalRecord;
    <COTransportProtocol> * _preferredTransport;
    NSMutableArray * _records;
    NSMutableDictionary * _sentElements;
    bool  _stopped;
    NSMutableArray * _transports;
}

@property (nonatomic, copy) NSSet *acceptableCommands;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CONodeControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) COExecutionContext *executionContext;
@property (nonatomic) bool handlersRegistered;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) CODiscoveryRecord *ipDiscoveryRecord;
@property (nonatomic, retain) COConstituent *leader;
@property (nonatomic, readonly) CONode *node;
@property (nonatomic, retain) <CODiscoveryRecordProtocol> *originalRecord;
@property (nonatomic, retain) <COTransportProtocol> *preferredTransport;
@property (nonatomic, readonly, copy) NSMutableArray *records;
@property (nonatomic, retain) NSMutableDictionary *sentElements;
@property (nonatomic) bool stopped;
@property (readonly) Class superclass;
@property (nonatomic, readonly, copy) NSMutableArray *transports;

- (void).cxx_destruct;
- (id)_acceptResponseWithElectionInfo:(id)arg1;
- (void)_adjustNodeDiscoveryInformationUsingRecord:(id)arg1;
- (id)_ballotResponseWithElectionInfo:(id)arg1;
- (void)_createAndActivateTransportForRecord:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (id)_electionRequestWithElectionInfo:(id)arg1;
- (void)_handleAcceptResponse:(id)arg1 fromTransport:(id)arg2;
- (void)_handleBallotResponse:(id)arg1 fromTransport:(id)arg2;
- (void)_handleElectionRequest:(id)arg1 fromTransport:(id)arg2 callback:(id /* block */)arg3;
- (void)_handlePingError:(id)arg1 fromTransport:(id)arg2;
- (void)_handleResponseToCoreRequest:(id)arg1 response:(id)arg2 error:(id)arg3 usingTransport:(id)arg4;
- (void)_handleVoteRequest:(id)arg1 fromTransport:(id)arg2 callback:(id /* block */)arg3;
- (void)_handleWithdraw:(id)arg1 fromTransport:(id)arg2;
- (bool)_isActiveState:(long long)arg1;
- (long long)_nodeControllerStateFromNodeState;
- (void)_sendAcceptResponse:(id)arg1 usingTransport:(id)arg2 callback:(id /* block */)arg3;
- (void)_sendBallotResponse:(id)arg1 usingTransport:(id)arg2 callback:(id /* block */)arg3;
- (void)_sendElectionRequest:(id)arg1 usingTransport:(id)arg2;
- (void)_sendPingUsingTransport:(id)arg1;
- (void)_sendProbeRequest:(id)arg1 withState:(long long)arg2 usingTransport:(id)arg3;
- (void)_sendVoteRequest:(id)arg1 usingTransport:(id)arg2;
- (void)_updateDelegateWithBallotCommand:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)_updateNodeState:(long long)arg1 currentElectionInfo:(id)arg2 incomingElectionInfo:(id)arg3 reason:(long long)arg4;
- (id)_voteRequestWithElectionInfo:(id)arg1;
- (id)acceptableCommands;
- (void)activateWithCompletionHandler:(id /* block */)arg1;
- (void)addDiscoveryRecord:(id)arg1;
- (id)computePreferredTransport;
- (id)delegate;
- (id)description;
- (void)didFireBackoffTimer;
- (id)electionSummaryDetails;
- (id)executionContext;
- (bool)handlersRegistered;
- (id)initWithDiscoveryRecord:(id)arg1 executionContext:(id)arg2;
- (void)inquireForTransport:(id)arg1;
- (void)invalidateWithReason:(long long)arg1;
- (id)ipDiscoveryRecord;
- (bool)isLocalNodeController;
- (id)leader;
- (void)markInactive;
- (id)node;
- (id)nodeAfterReconciliation;
- (id)originalRecord;
- (id)preferredTransport;
- (id)rapportTransport;
- (void)reconcileNode;
- (id)records;
- (id)remote;
- (void)removeDiscoveryRecord:(id)arg1;
- (void)sendCommand:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)sendPing;
- (id)sentElements;
- (void)setAcceptableCommands:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setHandlersRegistered:(bool)arg1;
- (void)setIpDiscoveryRecord:(id)arg1;
- (void)setLeader:(id)arg1;
- (void)setOriginalRecord:(id)arg1;
- (void)setPreferredTransport:(id)arg1;
- (void)setSentElements:(id)arg1;
- (void)setStopped:(bool)arg1;
- (id)shortDescription;
- (long long)state;
- (void)stopWithCompletionHandler:(id /* block */)arg1;
- (bool)stopped;
- (bool)supportsLeaderElection;
- (void)transport:(id)arg1 didInvalidateWithError:(id)arg2;
- (void)transport:(id)arg1 didReceiveCommand:(id)arg2;
- (void)transport:(id)arg1 didReceiveError:(id)arg2 forCommand:(id)arg3;
- (void)transport:(id)arg1 didReceiveRequest:(id)arg2 callback:(id /* block */)arg3;
- (void)transport:(id)arg1 didReceiveUnhandledRequest:(id)arg2;
- (void)transport:(id)arg1 didUpdateRemoteConstituent:(id)arg2 to:(id)arg3;
- (void)transport:(id)arg1 shouldUpdateRemoteConstituent:(id)arg2 to:(id)arg3 forCommand:(id)arg4 completionHandler:(id /* block */)arg5;
- (void)transport:(id)arg1 willUpdateRemoteConstituent:(id)arg2 to:(id)arg3;
- (id)transports;
- (void)updateElectionInfo:(id)arg1;

@end
