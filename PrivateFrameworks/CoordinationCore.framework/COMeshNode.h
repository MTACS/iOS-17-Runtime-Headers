
@interface COMeshNode : NSObject <NSCopying> {
    NSString * _IDSIdentifier;
    NSObject<OS_nw_activity> * _activity;
    double  _averageRequestTime;
    <COCompanionLinkClientProtocol> * _client;
    unsigned long long  _connectionType;
    NSMutableDictionary * _counters;
    <COMeshNodeDelegate> * _delegate;
    CODiscoveryRecord * _discoveryRecord;
    unsigned long long  _discoveryType;
    NSString * _label;
    bool  _linkActivated;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    COClusterMemberRoleSnapshot * _memberSnapshot;
    NSString * _meshName;
    bool  _nodeActivated;
    COMeshLocalNode * _parent;
    id /* block */  _recorder;
    COConstituent * _remote;
    unsigned long long  _requestCount;
    COConstituent * _source;
    CONode * _underlyingNode;
}

@property (nonatomic, readonly) NSUUID *HomeKitIdentifier;
@property (nonatomic, readonly) NSString *IDSIdentifier;
@property (nonatomic, readonly) NSObject<OS_nw_activity> *activity;
@property (nonatomic) double averageRequestTime;
@property (nonatomic, readonly) <COCompanionLinkClientProtocol> *client;
@property (nonatomic) unsigned long long connectionType;
@property (nonatomic, readonly, copy) NSMutableDictionary *counters;
@property (nonatomic) <COMeshNodeDelegate> *delegate;
@property (nonatomic, retain) CODiscoveryRecord *discoveryRecord;
@property (nonatomic) unsigned long long discoveryType;
@property (nonatomic, copy) NSString *label;
@property (nonatomic) bool linkActivated;
@property (nonatomic, retain) COClusterMemberRoleSnapshot *memberSnapshot;
@property (nonatomic, copy) NSString *meshName;
@property (nonatomic) bool nodeActivated;
@property (nonatomic) COMeshLocalNode *parent;
@property (nonatomic, copy) id /* block */ recorder;
@property (nonatomic, retain) COConstituent *remote;
@property (nonatomic) unsigned long long requestCount;
@property (nonatomic, readonly) COConstituent *source;
@property (nonatomic, readonly) CONode *underlyingNode;

+ (void)_commandPayloadFromRapportRepresentation:(id)arg1 result:(id /* block */)arg2;

- (void).cxx_destruct;
- (id)HomeKitIdentifier;
- (id)IDSIdentifier;
- (id)_commandPayloadFromRapportRepresentation:(id)arg1;
- (id)_eventIDForClass:(Class)arg1;
- (void)_handleActivation:(id)arg1;
- (void)_handleDisconnect;
- (void)_handleErrorFlagsUpdate;
- (void)_handleRPIsUsingOnDemandConnection;
- (void)_handleRPStateUpdate;
- (void)_handleResponseToRequest:(id)arg1 rapportRepresentation:(id)arg2 options:(id)arg3 error:(id)arg4 responseCallback:(id /* block */)arg5 at:(unsigned long long)arg6;
- (id)_serializedDataForCommand:(id)arg1;
- (void)_setIDSIdentifier:(id)arg1;
- (void)_validateDiscoveryRecord;
- (bool)_validateSource:(id)arg1;
- (void)_withLock:(id /* block */)arg1;
- (void)activate;
- (id)activity;
- (double)averageRequestTime;
- (id)client;
- (unsigned long long)connectionType;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)counters;
- (id)delegate;
- (id)description;
- (id)discoveryRecord;
- (unsigned long long)discoveryType;
- (unsigned long long)hash;
- (id)initWithCompanionLinkClient:(id)arg1 source:(id)arg2;
- (id)initWithNode:(id)arg1;
- (void)invalidate;
- (bool)isEqual:(id)arg1;
- (id)label;
- (bool)linkActivated;
- (id)memberSnapshot;
- (id)meshName;
- (bool)nodeActivated;
- (id)parent;
- (id /* block */)recorder;
- (id)remote;
- (unsigned long long)requestCount;
- (void)sendMeshCommand:(id)arg1;
- (void)sendMeshRequest:(id)arg1;
- (void)sendMeshRequest:(id)arg1 responseCallback:(id /* block */)arg2;
- (void)setAverageRequestTime:(double)arg1;
- (void)setConnectionType:(unsigned long long)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDiscoveryRecord:(id)arg1;
- (void)setDiscoveryType:(unsigned long long)arg1;
- (void)setLabel:(id)arg1;
- (void)setLinkActivated:(bool)arg1;
- (void)setMemberSnapshot:(id)arg1;
- (void)setMeshName:(id)arg1;
- (void)setNodeActivated:(bool)arg1;
- (void)setParent:(id)arg1;
- (void)setRecorder:(id /* block */)arg1;
- (void)setRemote:(id)arg1;
- (void)setRequestCount:(unsigned long long)arg1;
- (id)source;
- (id)underlyingNode;

@end
