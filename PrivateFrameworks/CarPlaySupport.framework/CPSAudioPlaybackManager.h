
@interface CPSAudioPlaybackManager : NSObject <CARSessionObserving, CPUINowPlayingObserving, CPUINowPlayingViewControllerDataSource, CPUINowPlayingViewControllerDelegate> {
    bool  _actionStateHeld;
    MPArtworkCatalog * _artworkCatalog;
    CPSTemplateEnvironment * _environment;
    UIImage * _fullSizeArtwork;
    NSNumber * _lastSavedPlaybackRate;
    CPUINowPlayingSnapshot * _lastSnapshot;
    CPUINowPlayingManager * _nowPlayingManager;
    CPSNowPlayingViewController * _nowPlayingViewController;
    bool  _shouldShowAlbumArt;
    bool  _shouldShowPlayState;
    CPNowPlayingTemplate * _template;
    <CPNowPlayingClientTemplateDelegate> * _templateDelegate;
}

@property (nonatomic) bool actionStateHeld;
@property (nonatomic, retain) MPArtworkCatalog *artworkCatalog;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) CPSTemplateEnvironment *environment;
@property (nonatomic, retain) UIImage *fullSizeArtwork;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSNumber *lastSavedPlaybackRate;
@property (nonatomic, retain) CPUINowPlayingSnapshot *lastSnapshot;
@property (nonatomic, retain) CPUINowPlayingManager *nowPlayingManager;
@property (nonatomic) CPSNowPlayingViewController *nowPlayingViewController;
@property (nonatomic) bool shouldShowAlbumArt;
@property (nonatomic) bool shouldShowPlayState;
@property (readonly) Class superclass;
@property (nonatomic, readonly) CPNowPlayingTemplate *template;
@property (nonatomic, retain) <CPNowPlayingClientTemplateDelegate> *templateDelegate;

- (void).cxx_destruct;
- (void)_loadArtwork:(id)arg1;
- (void)_updateAlbumArtFromSessionConfiguration:(id)arg1;
- (bool)actionStateHeld;
- (id)albumTextForNowPlayingController:(id)arg1;
- (id)artistTextForNowPlayingController:(id)arg1;
- (id)artworkCatalog;
- (id)backgroundArtForNowPlayingController:(id)arg1;
- (id)customPlaybackControlButtonsForNowPlayingViewController:(id)arg1;
- (void)dealloc;
- (struct { double x1; double x2; double x3; double x4; double x5; float x6; float x7; bool x8; bool x9; })durationSnapshotForNowPlayingViewController:(id)arg1;
- (id)environment;
- (id)fullSizeArtwork;
- (id)initWithNowPlayingTemplate:(id)arg1 templateDelegate:(id)arg2 environment:(id)arg3;
- (id)lastSavedPlaybackRate;
- (id)lastSnapshot;
- (id)nowPlayingButtonWithClass:(Class)arg1;
- (id)nowPlayingButtonWithIdentifier:(id)arg1;
- (id)nowPlayingManager;
- (void)nowPlayingManager:(id)arg1 didThrottleUpdateForBundleIdentifier:(id)arg2;
- (void)nowPlayingManager:(id)arg1 didUpdateSnapshot:(id)arg2;
- (id)nowPlayingViewController;
- (bool)nowPlayingViewController:(id)arg1 buttonShouldBeActive:(long long)arg2;
- (void)nowPlayingViewController:(id)arg1 didSelectButton:(id)arg2;
- (void)nowPlayingViewController:(id)arg1 didSendAction:(long long)arg2 state:(long long)arg3;
- (bool)nowPlayingViewController:(id)arg1 shouldDisplayButton:(long long)arg2 withImage:(out id*)arg3 existingIdentifier:(id)arg4 tinted:(out bool*)arg5;
- (void)nowPlayingViewControllerAddToLibrary:(id)arg1;
- (void)nowPlayingViewControllerAlbumArtistButtonTapped:(id)arg1;
- (bool)nowPlayingViewControllerCanRepeat:(id)arg1;
- (bool)nowPlayingViewControllerCanShowAddToLibrary:(id)arg1;
- (bool)nowPlayingViewControllerCanShowAlbumArt:(id)arg1;
- (bool)nowPlayingViewControllerCanShowAlbumLink:(id)arg1;
- (bool)nowPlayingViewControllerCanShowChangePlaybackRate:(id)arg1;
- (bool)nowPlayingViewControllerCanShowMore:(id)arg1;
- (bool)nowPlayingViewControllerCanShowUpNext:(id)arg1;
- (bool)nowPlayingViewControllerCanShuffle:(id)arg1;
- (void)nowPlayingViewControllerChangePlaybackRate:(id)arg1;
- (id)nowPlayingViewControllerGetPlaybackRate:(id)arg1;
- (bool)nowPlayingViewControllerIsPlaying:(id)arg1;
- (bool)nowPlayingViewControllerIsRightHandDrive:(id)arg1;
- (bool)nowPlayingViewControllerIsShowingExplicitTrack:(id)arg1;
- (void)nowPlayingViewControllerMore:(id)arg1;
- (void)nowPlayingViewControllerToggleRepeat:(id)arg1;
- (void)nowPlayingViewControllerToggleShuffle:(id)arg1;
- (void)nowPlayingViewControllerUpNextButtonTapped:(id)arg1;
- (void)nowPlayingViewControllerWillAppear:(id)arg1;
- (long long)placeholderTypeForNowPlayingViewController:(id)arg1;
- (id)progressBarLocalizedDurationStringForNowPlayingViewController:(id)arg1;
- (long long)repeatTypeForNowPlayingViewController:(id)arg1;
- (void)session:(id)arg1 didUpdateConfiguration:(id)arg2;
- (void)setActionStateHeld:(bool)arg1;
- (void)setArtworkCatalog:(id)arg1;
- (void)setEnvironment:(id)arg1;
- (void)setFullSizeArtwork:(id)arg1;
- (void)setLastSavedPlaybackRate:(id)arg1;
- (void)setLastSnapshot:(id)arg1;
- (void)setNowPlayingManager:(id)arg1;
- (void)setNowPlayingViewController:(id)arg1;
- (void)setShouldShowAlbumArt:(bool)arg1;
- (void)setShouldShowPlayState:(bool)arg1;
- (void)setTemplateDelegate:(id)arg1;
- (bool)shouldShowAlbumArt;
- (bool)shouldShowPlayState;
- (long long)shuffleTypeForNowPlayingViewController:(id)arg1;
- (id)template;
- (id)templateDelegate;
- (id)titleForNowPlayingController:(id)arg1;
- (id)titleForUpNextInNowPlayingViewController:(id)arg1;
- (void)updateNowPlayingTemplate:(id)arg1 templateDelegate:(id)arg2;

@end
