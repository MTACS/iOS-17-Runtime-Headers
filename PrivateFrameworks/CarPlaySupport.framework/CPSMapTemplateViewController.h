
@interface CPSMapTemplateViewController : CPSBaseTemplateViewController <BKSHIDEventDeliveryPolicyObserving, CARNavigationOwnershipManagerDelegate, CARSessionObserving, CPMapTemplateProviding, CPNavigationSessionProviding, CPSApplicationStateObserving, CPSButtonDelegate, CPSEventObserving, CPSLayoutHelperViewDelegate, CPSLinearFocusProviding, CPSNavigationAlertQueueDelegate, CPSNavigationDisplaying, CPSPanEventDelegate, CPSTripInitiating, UIGestureRecognizerDelegate> {
    bool  _applicationIsFrontmost;
    CPSApplicationStateMonitor * _applicationStateMonitor;
    NSMutableSet * _autoHideDisabledReasons;
    NSTimer * _autoHideTimer;
    bool  _autoHidesNavigationBar;
    NSLayoutConstraint * _cardWidthConstraint;
    bool  _demoAutoHideTimerDisabled;
    bool  _etaViewHidden;
    NSMutableSet * _etaViewHiddenRequesters;
    BKSHIDEventDeliveryPolicyObserver * _eventDeliveryPolicyObserver;
    UIFocusGuide * _focusHolderLeftFocusGuide;
    UIFocusGuide * _focusHolderRightFocusGuide;
    _CPSFocusHoldingButton * _focusHoldingButton;
    UIColor * _guidanceBackgroundColor;
    bool  _hasSetTripEstimateStyle;
    UITapGestureRecognizer * _hideTapGestureRecognizer;
    bool  _hidesButtonsWithNavigationBar;
    <UIFocusItem> * _itemFocusedBeforeNavAlert;
    <UIFocusItem> * _lastFocusedItem;
    struct CGPoint { 
        double x; 
        double y; 
    }  _lastPanGesturePoint;
    NSMutableDictionary * _lastTravelEstimatesByTrip;
    NSMutableArray * _mapButtons;
    unsigned long long  _maximumMapButtonCount;
    UITapGestureRecognizer * _navBarHideTapGestureRecognizer;
    NSLayoutConstraint * _navigationAlertBottomConstraint;
    CPSNavigationAlertQueue * _navigationAlertQueue;
    CPSNavigationCardViewController * _navigationCardViewController;
    CPSLayoutHelperView * _navigationCardViewLayoutHelperView;
    NSLayoutConstraint * _navigationCardViewLayoutViewBottomConstraint;
    CPSNavigationETAView * _navigationETAView;
    NSLayoutConstraint * _navigationETAViewBottomConstraint;
    CPSNavigator * _navigator;
    <CPSNavigatorObserving> * _navigatorObserver;
    NSLayoutConstraint * _panContainerLeftConstraint;
    NSLayoutConstraint * _panContainerRightConstraint;
    UIView * _panContainerView;
    UIPanGestureRecognizer * _panGestureRecognizer;
    CPSPanViewController * _panViewController;
    bool  _previewOnlyRouteChoices;
    unsigned long long  _previewSelectedIndex;
    CPSTripPreviewsCardView * _previewsView;
    bool  _rightHandDrive;
    <CPSSafeAreaDelegate> * _safeAreaDelegate;
    bool  _shouldRestoreFocusToNavigationBar;
    UIStackView * _trailingBottomStackView;
    unsigned long long  _tripEstimateStyle;
    CPTripPreviewTextConfiguration * _tripPreviewTextConfiguration;
    NSArray * _tripPreviews;
}

@property (nonatomic) bool applicationIsFrontmost;
@property (nonatomic) CPSApplicationStateMonitor *applicationStateMonitor;
@property (nonatomic, retain) NSMutableSet *autoHideDisabledReasons;
@property (nonatomic, retain) NSTimer *autoHideTimer;
@property (nonatomic) bool autoHidesNavigationBar;
@property (nonatomic, retain) NSLayoutConstraint *cardWidthConstraint;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) bool demoAutoHideTimerDisabled;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool etaViewHidden;
@property (nonatomic, retain) NSMutableSet *etaViewHiddenRequesters;
@property (nonatomic, retain) BKSHIDEventDeliveryPolicyObserver *eventDeliveryPolicyObserver;
@property (nonatomic, retain) UIFocusGuide *focusHolderLeftFocusGuide;
@property (nonatomic, retain) UIFocusGuide *focusHolderRightFocusGuide;
@property (nonatomic, retain) _CPSFocusHoldingButton *focusHoldingButton;
@property (nonatomic, retain) UIColor *guidanceBackgroundColor;
@property (nonatomic) bool hasSetTripEstimateStyle;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) UITapGestureRecognizer *hideTapGestureRecognizer;
@property (nonatomic) bool hidesButtonsWithNavigationBar;
@property (nonatomic) <UIFocusItem> *itemFocusedBeforeNavAlert;
@property (nonatomic) <UIFocusItem> *lastFocusedItem;
@property (nonatomic) struct CGPoint { double x1; double x2; } lastPanGesturePoint;
@property (nonatomic, retain) NSMutableDictionary *lastTravelEstimatesByTrip;
@property (nonatomic, retain) NSMutableArray *mapButtons;
@property (nonatomic, readonly) CPMapTemplate *mapTemplate;
@property (nonatomic, readonly) <CPMapClientTemplateDelegate> *mapTemplateDelegate;
@property (nonatomic) unsigned long long maximumMapButtonCount;
@property (nonatomic, retain) UITapGestureRecognizer *navBarHideTapGestureRecognizer;
@property (nonatomic, retain) NSLayoutConstraint *navigationAlertBottomConstraint;
@property (nonatomic, retain) CPSNavigationAlertQueue *navigationAlertQueue;
@property (nonatomic, retain) CPSNavigationCardViewController *navigationCardViewController;
@property (nonatomic, retain) CPSLayoutHelperView *navigationCardViewLayoutHelperView;
@property (nonatomic, retain) NSLayoutConstraint *navigationCardViewLayoutViewBottomConstraint;
@property (nonatomic, retain) CPSNavigationETAView *navigationETAView;
@property (nonatomic, retain) NSLayoutConstraint *navigationETAViewBottomConstraint;
@property (nonatomic, retain) CPSNavigator *navigator;
@property (nonatomic) <CPSNavigatorObserving> *navigatorObserver;
@property (nonatomic, retain) NSLayoutConstraint *panContainerLeftConstraint;
@property (nonatomic, retain) NSLayoutConstraint *panContainerRightConstraint;
@property (nonatomic, retain) UIView *panContainerView;
@property (nonatomic, retain) UIPanGestureRecognizer *panGestureRecognizer;
@property (nonatomic, retain) CPSPanViewController *panViewController;
@property (nonatomic) bool previewOnlyRouteChoices;
@property (nonatomic) unsigned long long previewSelectedIndex;
@property (nonatomic, retain) CPSTripPreviewsCardView *previewsView;
@property (nonatomic) bool rightHandDrive;
@property (nonatomic) <CPSSafeAreaDelegate> *safeAreaDelegate;
@property (nonatomic) bool shouldRestoreFocusToNavigationBar;
@property (readonly) Class superclass;
@property (nonatomic, retain) UIStackView *trailingBottomStackView;
@property (nonatomic) unsigned long long tripEstimateStyle;
@property (nonatomic, retain) CPTripPreviewTextConfiguration *tripPreviewTextConfiguration;
@property (nonatomic, copy) NSArray *tripPreviews;
@property (nonatomic, readonly) bool useRightHandDriveFocusGuide;

- (void).cxx_destruct;
- (void)_addPanControllerAsChild;
- (id)_buttonForIdentifier:(id)arg1;
- (id)_buttons;
- (void)_calculateAndUpdateCardWidthConstraint;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_cardViewEdgeInsets;
- (void)_checkNavigationCardHelperViewForETAFit;
- (void)_createNavigationCardViewController;
- (void)_createNavigationCardViewLayoutHelperView;
- (void)_handleFocusHolderSelect;
- (void)_handlePanGesture:(id)arg1;
- (void)_handleTapGesture:(id)arg1;
- (void)_hideBar:(id)arg1;
- (bool)_isAutoHideEnabled;
- (id)_linearFocusItems;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_mapButtonsEdgeInsets;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_navBarInsets;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_navigationAlertInsets;
- (void)_nightModeChanged:(id)arg1;
- (void)_performAlertSizingForAlert:(id)arg1 animated:(bool)arg2;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_previewEdgeInsets;
- (void)_reloadPreviewsView;
- (void)_removePanController;
- (void)_resetAutoHideTimerAndShowBarAnimated:(bool)arg1 allowFocusDeferral:(bool)arg2;
- (void)_setAutoHideDisabled:(bool)arg1 forRequester:(id)arg2;
- (void)_setButtonsHidden:(bool)arg1 animated:(bool)arg2;
- (void)_setETAViewHidden:(bool)arg1 forRequester:(id)arg2 animated:(bool)arg3;
- (void)_setFocusHoldersEnabled:(bool)arg1;
- (void)_setMaximumVisibleMapButtons:(unsigned long long)arg1;
- (void)_setNavigationAlertView:(id)arg1 visible:(bool)arg2 animated:(bool)arg3 completion:(id /* block */)arg4;
- (void)_setPanInterfaceVisible:(bool)arg1 animated:(bool)arg2;
- (void)_showBarAnimated:(bool)arg1 allowFocusDeferral:(bool)arg2;
- (id)_tripDidBegin:(id)arg1 withEstimates:(id)arg2 forIdentifier:(id)arg3;
- (void)_updateETAViewHidden;
- (void)_updateInterestingArea;
- (void)_updateMapButtonVisibility;
- (void)_updateMapButtonsWithButtons:(id)arg1;
- (void)_updatePanGestureForHiFiTouch;
- (void)_updateSafeArea;
- (void)_viewDidLoad;
- (double)_widthForNavigationAlert;
- (bool)applicationIsFrontmost;
- (id)applicationStateMonitor;
- (void)applicationStateMonitor:(id)arg1 didBecomeActive:(bool)arg2;
- (id)autoHideDisabledReasons;
- (id)autoHideTimer;
- (bool)autoHidesNavigationBar;
- (bool)canAnimateNavigationAlert;
- (id)cardWidthConstraint;
- (void)dealloc;
- (bool)demoAutoHideTimerDisabled;
- (void)didChangeLayout:(id)arg1;
- (void)didSelectButton:(id)arg1;
- (void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (void)dismissNavigationAlertAnimated:(bool)arg1 completion:(id /* block */)arg2;
- (bool)etaViewHidden;
- (id)etaViewHiddenRequesters;
- (id)eventDeliveryPolicyObserver;
- (id)focusHolderLeftFocusGuide;
- (id)focusHolderRightFocusGuide;
- (id)focusHoldingButton;
- (bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (id)guidanceBackgroundColor;
- (bool)hasSetTripEstimateStyle;
- (id)hideTapGestureRecognizer;
- (bool)hidesButtonsWithNavigationBar;
- (void)hostPanInterfaceVisible:(id /* block */)arg1;
- (void)hostSetMapButton:(id)arg1 imageSet:(id)arg2;
- (void)hostSetMapButtons:(id)arg1;
- (void)hostSetPanInterfaceVisible:(bool)arg1 animated:(bool)arg2;
- (void)hostStartNavigationSessionForTrip:(id)arg1 reply:(id /* block */)arg2;
- (void)hostUpdateTravelEstimates:(id)arg1 forTripIdentifier:(id)arg2;
- (id)initWithMapTemplate:(id)arg1 templateDelegate:(id)arg2 safeAreaDelegate:(id)arg3 applicationStateMonitor:(id)arg4 templateEnvironment:(id)arg5;
- (void)invalidate;
- (id)itemFocusedBeforeNavAlert;
- (id)lastFocusedItem;
- (struct CGPoint { double x1; double x2; })lastPanGesturePoint;
- (id)lastTravelEstimatesByTrip;
- (id)mapButtons;
- (id)mapTemplate;
- (id)mapTemplateDelegate;
- (unsigned long long)maximumMapButtonCount;
- (id)navBarHideTapGestureRecognizer;
- (id)navigationAlertBottomConstraint;
- (id)navigationAlertQueue;
- (void)navigationAlertQueue:(id)arg1 shouldDisplayAlertView:(id)arg2 animated:(bool)arg3;
- (void)navigationAlertQueue:(id)arg1 shouldRemoveAlertView:(id)arg2 animated:(bool)arg3 dismissalContext:(unsigned long long)arg4 completion:(id /* block */)arg5;
- (id)navigationCardViewController;
- (id)navigationCardViewLayoutHelperView;
- (id)navigationCardViewLayoutViewBottomConstraint;
- (id)navigationETAView;
- (id)navigationETAViewBottomConstraint;
- (void)navigationOwnershipChangedToOwner:(unsigned long long)arg1;
- (id)navigator;
- (void)navigator:(id)arg1 didEndTrip:(bool)arg2;
- (void)navigator:(id)arg1 pausedTripForReason:(unsigned long long)arg2 description:(id)arg3 usingColor:(id)arg4;
- (id)navigatorObserver;
- (void)observerDeliveryPolicyDidChange:(id)arg1;
- (void)panBeganWithDirection:(long long)arg1;
- (id)panContainerLeftConstraint;
- (id)panContainerRightConstraint;
- (id)panContainerView;
- (void)panEndedWithDirection:(long long)arg1;
- (id)panGestureRecognizer;
- (id)panViewController;
- (void)panWithDirection:(long long)arg1;
- (id)preferredFocusEnvironments;
- (bool)previewOnlyRouteChoices;
- (unsigned long long)previewSelectedIndex;
- (id)previewsView;
- (bool)rightHandDrive;
- (id)safeAreaDelegate;
- (void)sessionDidConnect:(id)arg1;
- (void)setApplicationIsFrontmost:(bool)arg1;
- (void)setApplicationStateMonitor:(id)arg1;
- (void)setAutoHideDisabledReasons:(id)arg1;
- (void)setAutoHideTimer:(id)arg1;
- (void)setAutoHidesNavigationBar:(bool)arg1;
- (void)setCardWidthConstraint:(id)arg1;
- (void)setControl:(id)arg1 enabled:(bool)arg2;
- (void)setDemoAutoHideTimerDisabled:(bool)arg1;
- (void)setEtaViewHidden:(bool)arg1;
- (void)setEtaViewHiddenRequesters:(id)arg1;
- (void)setEventDeliveryPolicyObserver:(id)arg1;
- (void)setFocusHolderLeftFocusGuide:(id)arg1;
- (void)setFocusHolderRightFocusGuide:(id)arg1;
- (void)setFocusHoldingButton:(id)arg1;
- (void)setGuidanceBackgroundColor:(id)arg1;
- (void)setHasSetTripEstimateStyle:(bool)arg1;
- (void)setHideTapGestureRecognizer:(id)arg1;
- (void)setHidesButtonsWithNavigationBar:(bool)arg1;
- (void)setHostAutoHidesNavigationBar:(bool)arg1;
- (void)setHostGuidanceBackgroundColor:(id)arg1;
- (void)setHostHidesButtonsWithNavigationBar:(bool)arg1;
- (void)setHostTripEstimateStyle:(unsigned long long)arg1;
- (void)setHostTripPreviews:(id)arg1 textConfiguration:(id)arg2 previewOnlyRouteChoices:(bool)arg3 selectedIndex:(unsigned long long)arg4;
- (void)setItemFocusedBeforeNavAlert:(id)arg1;
- (void)setLastFocusedItem:(id)arg1;
- (void)setLastPanGesturePoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)setLastTravelEstimatesByTrip:(id)arg1;
- (void)setMapButton:(id)arg1 focusedImage:(id)arg2;
- (void)setMapButton:(id)arg1 hidden:(bool)arg2;
- (void)setMapButtons:(id)arg1;
- (void)setMaximumMapButtonCount:(unsigned long long)arg1;
- (void)setNavBarHideTapGestureRecognizer:(id)arg1;
- (void)setNavigationAlertBottomConstraint:(id)arg1;
- (void)setNavigationAlertQueue:(id)arg1;
- (void)setNavigationCardViewController:(id)arg1;
- (void)setNavigationCardViewLayoutHelperView:(id)arg1;
- (void)setNavigationCardViewLayoutViewBottomConstraint:(id)arg1;
- (void)setNavigationETAView:(id)arg1;
- (void)setNavigationETAViewBottomConstraint:(id)arg1;
- (void)setNavigator:(id)arg1;
- (void)setNavigatorObserver:(id)arg1;
- (void)setPanContainerLeftConstraint:(id)arg1;
- (void)setPanContainerRightConstraint:(id)arg1;
- (void)setPanContainerView:(id)arg1;
- (void)setPanGestureRecognizer:(id)arg1;
- (void)setPanViewController:(id)arg1;
- (void)setPreviewOnlyRouteChoices:(bool)arg1;
- (void)setPreviewSelectedIndex:(unsigned long long)arg1;
- (void)setPreviewsView:(id)arg1;
- (void)setRightHandDrive:(bool)arg1;
- (void)setSafeAreaDelegate:(id)arg1;
- (void)setShouldRestoreFocusToNavigationBar:(bool)arg1;
- (void)setTrailingBottomStackView:(id)arg1;
- (void)setTripEstimateStyle:(unsigned long long)arg1;
- (void)setTripPreviewTextConfiguration:(id)arg1;
- (void)setTripPreviews:(id)arg1;
- (bool)shouldForwardEventForWindow:(id)arg1 eventType:(long long)arg2;
- (bool)shouldRestoreFocusToNavigationBar;
- (bool)shouldUpdateFocusInContext:(id)arg1;
- (void)showManeuvers:(id)arg1 usingDisplayStyles:(id)arg2;
- (void)showNavigationAlert:(id)arg1 animated:(bool)arg2;
- (id)trailingBottomStackView;
- (void)traitCollectionDidChange:(id)arg1;
- (unsigned long long)tripEstimateStyle;
- (id)tripPreviewTextConfiguration;
- (id)tripPreviews;
- (void)tripView:(id)arg1 selectedTrip:(id)arg2 routeChoice:(id)arg3;
- (void)tripView:(id)arg1 startedTrip:(id)arg2 routeChoice:(id)arg3;
- (void)updateEstimates:(id)arg1 forManeuver:(id)arg2;
- (void)updateNavigationAlert:(id)arg1;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewSafeAreaInsetsDidChange;
- (void)viewWillDisappear:(bool)arg1;

@end
