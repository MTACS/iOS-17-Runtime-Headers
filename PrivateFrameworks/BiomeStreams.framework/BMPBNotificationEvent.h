
@interface BMPBNotificationEvent : PBCodable <NSCopying> {
    double  _absoluteTimestamp;
    unsigned long long  _badge;
    NSString * _body;
    NSString * _bundleID;
    NSString * _categoryID;
    NSMutableArray * _contactIDs;
    NSString * _deviceID;
    struct { 
        unsigned int absoluteTimestamp : 1; 
        unsigned int badge : 1; 
        unsigned int usageType : 1; 
        unsigned int isGroupMessage : 1; 
    }  _has;
    bool  _isGroupMessage;
    NSString * _notificationID;
    NSString * _sectionID;
    NSString * _subtitle;
    NSString * _threadID;
    NSString * _title;
    NSString * _uniqueID;
    int  _usageType;
}

@property (nonatomic) double absoluteTimestamp;
@property (nonatomic) unsigned long long badge;
@property (nonatomic, retain) NSString *body;
@property (nonatomic, retain) NSString *bundleID;
@property (nonatomic, retain) NSString *categoryID;
@property (nonatomic, retain) NSMutableArray *contactIDs;
@property (nonatomic, retain) NSString *deviceID;
@property (nonatomic) bool hasAbsoluteTimestamp;
@property (nonatomic) bool hasBadge;
@property (nonatomic, readonly) bool hasBody;
@property (nonatomic, readonly) bool hasBundleID;
@property (nonatomic, readonly) bool hasCategoryID;
@property (nonatomic, readonly) bool hasDeviceID;
@property (nonatomic) bool hasIsGroupMessage;
@property (nonatomic, readonly) bool hasNotificationID;
@property (nonatomic, readonly) bool hasSectionID;
@property (nonatomic, readonly) bool hasSubtitle;
@property (nonatomic, readonly) bool hasThreadID;
@property (nonatomic, readonly) bool hasTitle;
@property (nonatomic, readonly) bool hasUniqueID;
@property (nonatomic) bool hasUsageType;
@property (nonatomic) bool isGroupMessage;
@property (nonatomic, retain) NSString *notificationID;
@property (nonatomic, retain) NSString *sectionID;
@property (nonatomic, retain) NSString *subtitle;
@property (nonatomic, retain) NSString *threadID;
@property (nonatomic, retain) NSString *title;
@property (nonatomic, retain) NSString *uniqueID;
@property (nonatomic) int usageType;

+ (Class)contactIDsType;

- (void).cxx_destruct;
- (int)StringAsUsageType:(id)arg1;
- (double)absoluteTimestamp;
- (void)addContactIDs:(id)arg1;
- (unsigned long long)badge;
- (id)body;
- (id)bundleID;
- (id)categoryID;
- (void)clearContactIDs;
- (id)contactIDs;
- (id)contactIDsAtIndex:(unsigned long long)arg1;
- (unsigned long long)contactIDsCount;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)deviceID;
- (id)dictionaryRepresentation;
- (bool)hasAbsoluteTimestamp;
- (bool)hasBadge;
- (bool)hasBody;
- (bool)hasBundleID;
- (bool)hasCategoryID;
- (bool)hasDeviceID;
- (bool)hasIsGroupMessage;
- (bool)hasNotificationID;
- (bool)hasSectionID;
- (bool)hasSubtitle;
- (bool)hasThreadID;
- (bool)hasTitle;
- (bool)hasUniqueID;
- (bool)hasUsageType;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (bool)isGroupMessage;
- (void)mergeFrom:(id)arg1;
- (id)notificationID;
- (bool)readFrom:(id)arg1;
- (id)sectionID;
- (void)setAbsoluteTimestamp:(double)arg1;
- (void)setBadge:(unsigned long long)arg1;
- (void)setBody:(id)arg1;
- (void)setBundleID:(id)arg1;
- (void)setCategoryID:(id)arg1;
- (void)setContactIDs:(id)arg1;
- (void)setDeviceID:(id)arg1;
- (void)setHasAbsoluteTimestamp:(bool)arg1;
- (void)setHasBadge:(bool)arg1;
- (void)setHasIsGroupMessage:(bool)arg1;
- (void)setHasUsageType:(bool)arg1;
- (void)setIsGroupMessage:(bool)arg1;
- (void)setNotificationID:(id)arg1;
- (void)setSectionID:(id)arg1;
- (void)setSubtitle:(id)arg1;
- (void)setThreadID:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setUniqueID:(id)arg1;
- (void)setUsageType:(int)arg1;
- (id)subtitle;
- (id)threadID;
- (id)title;
- (id)uniqueID;
- (int)usageType;
- (id)usageTypeAsString:(int)arg1;
- (void)writeTo:(id)arg1;

@end
