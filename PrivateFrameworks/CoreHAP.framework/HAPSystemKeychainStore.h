
@interface HAPSystemKeychainStore : HMFObject <HAPKeyStore, HAPSystemKeyCountProvider, HAPSystemKeychainStore, HMFDumpState, HMFLogging> {
    NSString * _activeControllerIdentifier;
    int  _keychainStoreUpdatedNotificationToken;
    NSObject<OS_dispatch_queue> * _queue;
    bool  _unitTest_enable_hh2;
}

@property (nonatomic, retain) NSString *activeControllerIdentifier;
@property (nonatomic, readonly) NSString *activeControllerPairingIdentifier;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property int keychainStoreUpdatedNotificationToken;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (readonly) Class superclass;
@property (nonatomic) bool unitTest_enable_hh2;

+ (id)getDictionaryFromGenericData:(id)arg1;
+ (id)logCategory;
+ (id)serializeDictionary:(id)arg1;
+ (id)systemStore;
+ (id)updateAccessoryPairingGenericData:(id)arg1 updatedControllerKeyIdentifier:(id)arg2;
+ (id)viewHintForType:(id)arg1;

- (void).cxx_destruct;
- (int)_addKeychainItem:(id)arg1 logDuplicateItemError:(bool)arg2;
- (id)_allAccessoryPairingKeysIncludingHH2Key:(bool)arg1;
- (id)_auditKeychainItems:(id)arg1 managedAccessories:(id)arg2;
- (id)_chooseHH2KeyFromMultipleHH2Keys:(id)arg1;
- (int)_createControllerPublicKey:(id*)arg1 secretKey:(id*)arg2 keyPair:(id*)arg3 username:(id*)arg4;
- (int)_deleteAllPeripheralIdentifiers;
- (int)_deletePeripheralIdentifierForAccessoryIdentifier:(id)arg1;
- (int)_getAllAvailableControllerPublicKeys:(id*)arg1 secretKeys:(id*)arg2 userNames:(id*)arg3;
- (id)_getControllerKeychainItemError:(int*)arg1;
- (id)_getControllerKeychainItemForKeyType:(id)arg1 error:(int*)arg2;
- (int)_getControllerPublicKey:(id*)arg1 secretKey:(id*)arg2 keyPair:(id*)arg3 username:(id*)arg4;
- (bool)_getControllerPublicKey:(id*)arg1 secretKey:(id*)arg2 keyPair:(id*)arg3 username:(id*)arg4 allowCreation:(bool)arg5 forAccessory:(id)arg6 error:(id*)arg7;
- (bool)_getFirstAvailableControllerKeyChainItemForAccount:(id)arg1 publicKey:(id*)arg2 secretKey:(id*)arg3 userName:(id*)arg4 keyPair:(id*)arg5 error:(id*)arg6;
- (id)_getKeychainItemsForAccessGroup:(id)arg1 type:(id)arg2 account:(id)arg3 shouldReturnData:(bool)arg4 error:(int*)arg5;
- (id)_getLocalPairingIdentityAllowingCreation:(bool)arg1 error:(id*)arg2;
- (int)_getPeripheralIdentifier:(id*)arg1 forAccessoryIdentifier:(id)arg2 protocolVersion:(unsigned long long*)arg3 resumeSessionID:(unsigned long long*)arg4;
- (int)_getPublicKey:(id*)arg1 registeredWithHomeKit:(bool*)arg2 forAccessoryName:(id)arg3;
- (id)_lookupPairingIdentityFromBackUpTableWithIdentifier:(id)arg1;
- (int)_removeAccessoryKeyForName:(id)arg1;
- (int)_removeControllerKeyPairForIdentifier:(id)arg1 leaveTombstone:(bool)arg2;
- (int)_removeControllerKeyPairForKeyType:(id)arg1 identifier:(id)arg2 leaveTombstone:(bool)arg3;
- (int)_removeKeychainItem:(id)arg1 leaveTombstone:(bool)arg2;
- (int)_saveKeyPair:(id)arg1 username:(id)arg2 syncable:(bool)arg3 keyType:(id)arg4;
- (bool)_savePairingIdentityToBackUpTableWithIdentifier:(id)arg1 serializedKeyPair:(id)arg2;
- (int)_savePeripheralIdentifier:(id)arg1 forAccessoryIdentifier:(id)arg2 protocolVersion:(unsigned long long)arg3 resumeSessionID:(unsigned long long)arg4;
- (int)_savePublicKey:(id)arg1 forAccessoryName:(id)arg2;
- (int)_updateCurrentiCloudIdentifier:(id)arg1 controllerPairingIdentifier:(id)arg2;
- (void)_updateKeychainItemToInvisible:(id)arg1;
- (bool)_updateKeychainItemWithPlatformIdentifier:(void*)arg1 keychainItem:(id)arg2 error:(id*)arg3;
- (id)activeControllerIdentifier;
- (id)activeControllerPairingIdentifier;
- (id)allAccessoryPairingKeys;
- (id)allHH2PairingKeys;
- (id)allKeychainItemsForType:(id)arg1 identifier:(id)arg2 syncable:(id)arg3 error:(id*)arg4;
- (id)allKeysForType:(id)arg1 error:(id*)arg2;
- (id)allLegacyAccessoryPairingKeys;
- (id)auditKeysOfManagedAccessories:(id)arg1;
- (void)configure;
- (id)countAccessoryPairingKeysForMetrics;
- (bool)createAccessoryPairingKey:(id)arg1 error:(id*)arg2;
- (int)createHH2ControllerKey:(id*)arg1 secretKey:(id*)arg2 keyPair:(id*)arg3 username:(id*)arg4;
- (int)createHH2ControllerKeyWithUsername:(id)arg1 publicKey:(id*)arg2 secretKey:(id*)arg3 keyPair:(id*)arg4 username:(id*)arg5;
- (void)dealloc;
- (bool)deleteAllPeripheralIdentifiers:(id*)arg1;
- (bool)deleteKeychainItem:(id)arg1 error:(id*)arg2;
- (bool)deletePairingKeysForAccessory:(id)arg1 error:(id*)arg2;
- (bool)deletePeripheralIdentifierForAccessoryIdentifier:(id)arg1 error:(id*)arg2;
- (bool)deserializeKeyPair:(id)arg1 publicKey:(id*)arg2 secretKey:(id*)arg3 error:(id*)arg4;
- (id)dumpState;
- (void)ensureControllerKeyExistsForAllViews;
- (bool)establishRelationshipBetweenAccessoryAndControllerKey:(id)arg1 error:(id*)arg2;
- (bool)getAllAvailableControllerPublicKeys:(id*)arg1 secretKeys:(id*)arg2 userNames:(id*)arg3 error:(id*)arg4;
- (id)getAssociatedControllerKeyForAccessory:(id)arg1;
- (bool)getControllerPublicKey:(id*)arg1 secretKey:(id*)arg2 keyPair:(id*)arg3 username:(id*)arg4 allowCreation:(bool)arg5 error:(id*)arg6;
- (bool)getControllerPublicKey:(id*)arg1 secretKey:(id*)arg2 keyPair:(id*)arg3 username:(id*)arg4 allowCreation:(bool)arg5 forAccessory:(id)arg6 error:(id*)arg7;
- (bool)getControllerPublicKey:(id*)arg1 secretKey:(id*)arg2 username:(id*)arg3 allowCreation:(bool)arg4 error:(id*)arg5;
- (bool)getControllerPublicKey:(id*)arg1 secretKey:(id*)arg2 username:(id*)arg3 allowCreation:(bool)arg4 forAccessory:(id)arg5 error:(id*)arg6;
- (bool)getCurrentiCloudIdentifier:(id*)arg1 controllerPairingIdentifier:(id*)arg2 error:(id*)arg3;
- (id)getHH2ControllerKeyWithIdentifier:(id)arg1;
- (id)getLocalPairingIdentity:(id*)arg1;
- (bool)getOrCreateHH2ControllerKey:(id*)arg1 secretKey:(id*)arg2 keyPair:(id*)arg3 username:(id*)arg4;
- (id)getOrCreateLocalPairingIdentity:(id*)arg1;
- (id)getPeripheralIdentifiersAndAccessoryNames;
- (id)getPreferredHH2ControllerKey;
- (id)init;
- (bool)isAccessoryAssociatedWithControllerKey:(id)arg1 controllerID:(id*)arg2;
- (bool)isHH2Enabled;
- (bool)isHH2KeyType:(id)arg1;
- (int)keychainStoreUpdatedNotificationToken;
- (id)pairingIdentityForAppleMediaAccessorySensorWithUUID:(id)arg1;
- (id)pairingIdentityForAppleMediaAccessoryWithUUID:(id)arg1;
- (id)pairingIdentityFromKeychainItem:(id)arg1;
- (id)queue;
- (id)readAccessoryPairingKeyForAccessory:(id)arg1 error:(id*)arg2;
- (id)readControllerPairingKeyForAccessory:(id)arg1 error:(id*)arg2;
- (id)readPeripheralIdentifierForAccessoryIdentifier:(id)arg1 protocolVersion:(unsigned long long*)arg2 resumeSessionID:(unsigned long long*)arg3 error:(id*)arg4;
- (id)readPublicKeyForAccessoryName:(id)arg1 registeredWithHomeKit:(bool*)arg2 error:(id*)arg3;
- (bool)registerAccessoryWithHomeKit:(id)arg1 error:(id*)arg2;
- (bool)removeAccessoryKeyForName:(id)arg1 error:(id*)arg2;
- (bool)removeAllAccessoryKeys:(id*)arg1;
- (bool)removeControllerKeyPairForIdentifier:(id)arg1 leaveTombstone:(bool)arg2 error:(id*)arg3;
- (bool)removeControllerKeyPairLeaveTombstone:(bool)arg1 error:(id*)arg2;
- (bool)removeControllerKeyPairWithError:(id*)arg1;
- (bool)saveAppleMediaAccessoryPairingIdentity:(id)arg1;
- (bool)saveAppleMediaAccessorySensorPairingIdentity:(id)arg1;
- (bool)saveHH2PairingIdentity:(id)arg1 syncable:(bool)arg2;
- (bool)saveKeyPair:(id)arg1 username:(id)arg2 syncable:(bool)arg3 error:(id*)arg4;
- (bool)saveLocalPairingIdentity:(id)arg1 syncable:(bool)arg2 error:(id*)arg3;
- (bool)savePairingIdentityToBackUpTable:(id)arg1;
- (bool)savePeripheralIdentifier:(id)arg1 forAccessoryIdentifier:(id)arg2 protocolVersion:(unsigned long long)arg3 resumeSessionID:(unsigned long long)arg4 error:(id*)arg5;
- (bool)savePublicKey:(id)arg1 forAccessoryName:(id)arg2 error:(id*)arg3;
- (void)setActiveControllerIdentifier:(id)arg1;
- (void)setKeychainStoreUpdatedNotificationToken:(int)arg1;
- (void)setQueue:(id)arg1;
- (void)setUnitTest_enable_hh2:(bool)arg1;
- (bool)triggerPreferredHH2ControllerKeyRoll;
- (bool)unitTest_enable_hh2;
- (bool)updateAccessoryPairingKey:(id)arg1 error:(id*)arg2;
- (bool)updateActiveControllerPairingIdentifier:(id)arg1;
- (bool)updateCurrentiCloudIdentifier:(id)arg1 controllerPairingIdentifier:(id)arg2 error:(id*)arg3;
- (bool)updateKeychainItem:(id)arg1 createIfNeeded:(bool)arg2 error:(id*)arg3;
- (bool)updatePeripheralIdentifier:(id)arg1 forAccessoryIdentifier:(id)arg2 protocolVersion:(unsigned long long)arg3 previousVersion:(unsigned long long*)arg4 resumeSessionID:(unsigned long long)arg5 error:(id*)arg6;

@end
