
@interface CADXPCImplementation : NSObject <CADAccessInterface, CADAlarmEngineInterface, CADBackupRestoreInterface, CADCalendarInterface, CADCalendarItemInterface, CADCalendarToolInterface, CADDatabaseInterface, CADDatabaseStorageManagementInterface, CADDiagnosticInterface, CADErrorInterface, CADEventInterface, CADInternalInterface, CADMigrationInterface, CADNotificationCountInterface, CADNotificationMonitorInterface, CADObjectInterface, CADSourceInterface, CADSyncInterface, CADTestingInterface> {
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _accessLock;
    unsigned long long  _allowedAccess;
    unsigned long long  _checkedAccess;
    ClientConnection * _conn;
}

@property (nonatomic, readonly) ClientConnection *conn;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

+ (void)monitorLocationAuthorizationStatusChanges:(unsigned long long)arg1;

- (void).cxx_destruct;
- (void)CADAnalyticsSendEvent:(id)arg1 appendingClientBundleIDToPayload:(id)arg2;
- (void)CADBackupDatabaseToFileNamed:(id)arg1 inDirectory:(id)arg2 includeAttachments:(bool)arg3 reply:(id /* block */)arg4;
- (void)CADBackupToICBU:(id)arg1 reply:(id /* block */)arg2;
- (void)CADCalendar:(id)arg1 hasEvents:(id /* block */)arg2;
- (void)CADCalendar:(id)arg1 hasEventsWithRoomAsAttendee:(id /* block */)arg2;
- (void)CADCalendarSetClearedFromNotificationCenter:(id)arg1 error:(id /* block */)arg2;
- (void)CADCountCalendarItemsOfType:(int)arg1 inSource:(id)arg2 reply:(id /* block */)arg3;
- (void)CADDatabaseCanModifyCalendarDatabase:(id /* block */)arg1;
- (void)CADDatabaseCanModifySuggestedEventCalendar:(id /* block */)arg1;
- (void)CADDatabaseCancelFetchRequestWithIdentifier:(unsigned int)arg1;
- (void)CADDatabaseCommitDeletes:(id)arg1 updatesAndInserts:(id)arg2 options:(long long)arg3 andFetchChangesSinceTimestamp:(id)arg4 withReply:(id /* block */)arg5;
- (void)CADDatabaseConsumeAllChangesUpToToken:(id)arg1 except:(id)arg2 reply:(id /* block */)arg3;
- (void)CADDatabaseExportICSDataForCalendar:(id)arg1 options:(unsigned long long)arg2 reply:(id /* block */)arg3;
- (void)CADDatabaseExportICSDataForCalendarItems:(id)arg1 options:(unsigned long long)arg2 reply:(id /* block */)arg3;
- (void)CADDatabaseExportICSForCalendarItemWithID:(id)arg1 occurrenceDate:(id)arg2 options:(unsigned long long)arg3 reply:(id /* block */)arg4;
- (void)CADDatabaseFetchCalendarItemsWithPredicate:(id)arg1 entityType:(int)arg2 fetchIdentifier:(int)arg3 synchronous:(bool)arg4 reply:(id /* block */)arg5;
- (void)CADDatabaseFetchChangedObjectIDs:(id /* block */)arg1;
- (void)CADDatabaseFetchObjectChangesForEntityTypes:(id)arg1 insideObject:(id)arg2 reply:(id /* block */)arg3;
- (void)CADDatabaseGetAccess:(id /* block */)arg1;
- (void)CADDatabaseGetAlarmOccurrencesInRangeFromStart:(id)arg1 toEnd:(id)arg2 inCalendars:(id)arg3 reply:(id /* block */)arg4;
- (void)CADDatabaseGetAlarmWithExternalID:(id)arg1 reply:(id /* block */)arg2;
- (void)CADDatabaseGetAlarmWithUUID:(id)arg1 reply:(id /* block */)arg2;
- (void)CADDatabaseGetAllEventsWithUniqueID:(id)arg1 reply:(id /* block */)arg2;
- (void)CADDatabaseGetAttachmentWithUUID:(id)arg1 reply:(id /* block */)arg2;
- (void)CADDatabaseGetBirthdayCalendarEnabledWithReply:(id /* block */)arg1;
- (void)CADDatabaseGetBirthdayCalendarVersionWithReply:(id /* block */)arg1;
- (void)CADDatabaseGetCalendarItemWithUUID:(id)arg1 reply:(id /* block */)arg2;
- (void)CADDatabaseGetCalendarItemsWithUUIDs:(id)arg1 inCalendars:(id)arg2 propertiesToLoad:(id)arg3 reply:(id /* block */)arg4;
- (void)CADDatabaseGetCalendarItemsWithUniqueIdentifier:(id)arg1 inCalendar:(id)arg2 reply:(id /* block */)arg3;
- (void)CADDatabaseGetCalendarsWithFaultedProperties:(id)arg1 reply:(id /* block */)arg2;
- (void)CADDatabaseGetChangedEntityIDsSinceTimestamp:(id)arg1 reply:(id /* block */)arg2;
- (void)CADDatabaseGetChangesSinceSequenceToken:(id)arg1 reply:(id /* block */)arg2;
- (void)CADDatabaseGetCreatorTeamIdentifierForEventWithObjectID:(id)arg1 reply:(id /* block */)arg2;
- (void)CADDatabaseGetDefaultAlarmOffsetForAllDay:(bool)arg1 reply:(id /* block */)arg2;
- (void)CADDatabaseGetDefaultCalendarForNewEventsInDelegateSource:(id)arg1 withReply:(id /* block */)arg2;
- (void)CADDatabaseGetDefaultLocalCalendarWithReply:(id /* block */)arg1;
- (void)CADDatabaseGetDeletableCalendars:(id /* block */)arg1;
- (void)CADDatabaseGetDeletableSources:(id /* block */)arg1;
- (void)CADDatabaseGetErrorCount:(id /* block */)arg1;
- (void)CADDatabaseGetEventNotificationItemsAfterDate:(id)arg1 excludingUncheckedCalendars:(bool)arg2 filteredByShowsNotificationsFlag:(bool)arg3 reply:(id /* block */)arg4;
- (void)CADDatabaseGetEventWithEventIdentifier:(id)arg1 reply:(id /* block */)arg2;
- (void)CADDatabaseGetEventWithUniqueID:(id)arg1 reply:(id /* block */)arg2;
- (void)CADDatabaseGetEventsWithErrorsPerSource:(id /* block */)arg1;
- (void)CADDatabaseGetInboxRepliedSectionItems:(id /* block */)arg1;
- (void)CADDatabaseGetInviteReplyNotifications:(id /* block */)arg1;
- (void)CADDatabaseGetLocalBirthdaySource:(id /* block */)arg1;
- (void)CADDatabaseGetLocalSourceWithEnableIfNeeded:(bool)arg1 reply:(id /* block */)arg2;
- (void)CADDatabaseGetNaturalLanguageSuggestedEventCalendarWithReply:(id /* block */)arg1;
- (void)CADDatabaseGetNotificationCountExcludingUncheckedCalendars:(bool)arg1 expanded:(bool)arg2 reply:(id /* block */)arg3;
- (void)CADDatabaseGetNotificationCountForSourceWithExternalIdentifier:(id)arg1 excludingDelegateSources:(bool)arg2 filteredByShowsNotificationsFlag:(bool)arg3 expanded:(bool)arg4 reply:(id /* block */)arg5;
- (void)CADDatabaseGetOrCreateBirthdayCalendar:(id /* block */)arg1;
- (void)CADDatabaseGetOrCreateSubscribedCalendarsSource:(id /* block */)arg1;
- (void)CADDatabaseGetResourceChanges:(id /* block */)arg1;
- (void)CADDatabaseGetSequenceToken:(id /* block */)arg1;
- (void)CADDatabaseGetSharedCalendarInvitationsWithReply:(id /* block */)arg1;
- (void)CADDatabaseGetSourceIdentifierForEventWithObjectID:(id)arg1 reply:(id /* block */)arg2;
- (void)CADDatabaseGetSourcesWithFaultedProperties:(id)arg1 reply:(id /* block */)arg2;
- (void)CADDatabaseGetStorageUsage:(id /* block */)arg1;
- (void)CADDatabaseGetSuggestedEventCalendarWithReply:(id /* block */)arg1;
- (void)CADDatabaseGetTTLLocationAuthorizationStatus:(id /* block */)arg1;
- (void)CADDatabaseGetUUID:(id /* block */)arg1;
- (void)CADDatabaseImportEvents:(id)arg1 fromICSData:(id)arg2 intoCalendarsWithIDs:(id)arg3 optionsMask:(unsigned long long)arg4 batchSize:(int)arg5 reply:(id /* block */)arg6;
- (void)CADDatabaseInsertSuggestedEventCalendarWithReply:(id /* block */)arg1;
- (void)CADDatabaseIsCurrentProcessCreatorOfEventWithObjectID:(id)arg1 reply:(id /* block */)arg2;
- (void)CADDatabaseLastConfirmedSplashScreenVersion:(id /* block */)arg1;
- (void)CADDatabaseMarkChangedObjectIDsConsumedUpToSequenceToken:(id)arg1 reply:(id /* block */)arg2;
- (void)CADDatabaseMarkIndividualChangesConsumed:(id)arg1 reply:(id /* block */)arg2;
- (void)CADDatabaseMigrateSubscribedCalendar:(id)arg1 toSource:(id)arg2 reply:(id /* block */)arg3;
- (void)CADDatabaseRebuildOccurrenceCacheWithReply:(id /* block */)arg1;
- (void)CADDatabaseRegisterForDetailedChangeTrackingInSource:(id)arg1 reply:(id /* block */)arg2;
- (void)CADDatabaseRemoveSuggestedEventCalendarWithReply:(id /* block */)arg1;
- (void)CADDatabaseRequestAccessForEntityType:(unsigned long long)arg1 desiredFullAccess:(bool)arg2 isBlockingUIThread:(bool)arg3 reason:(long long)arg4 reply:(id /* block */)arg5;
- (void)CADDatabaseResetWithReply:(id /* block */)arg1;
- (void)CADDatabaseSetBirthdayCalendarEnabled:(bool)arg1 withReply:(id /* block */)arg2;
- (void)CADDatabaseSetBirthdayCalendarVersion:(int)arg1 withReply:(id /* block */)arg2;
- (void)CADDatabaseSetDefaultCalendarForNewEvents:(id)arg1 delegateSource:(id)arg2 reply:(id /* block */)arg3;
- (void)CADDatabaseSetInitializationOptions:(id)arg1 reply:(id /* block */)arg2;
- (void)CADDatabaseSetShowsDeclinedEvents:(bool)arg1 reply:(id /* block */)arg2;
- (void)CADDatabaseShouldPermitOrganizerEmailFromJunkChecks:(id)arg1 reply:(id /* block */)arg2;
- (void)CADDatabaseShouldPermitOrganizerPhoneNumberFromJunkChecks:(id)arg1 reply:(id /* block */)arg2;
- (void)CADDatabaseStatsBySource:(id /* block */)arg1;
- (void)CADDatabaseUnregisterForDetailedChangeTracking:(id /* block */)arg1;
- (void)CADDiagnosticsCancelCollectionWithToken:(unsigned int)arg1 reply:(id /* block */)arg2;
- (void)CADDiagnosticsCollectWithToken:(unsigned int)arg1 options:(long long)arg2 reply:(id /* block */)arg3;
- (void)CADEventSetInvitationStatus:(int)arg1 forEvents:(id)arg2 error:(id /* block */)arg3;
- (void)CADInternalForceStatCollection:(id /* block */)arg1;
- (void)CADInternalRemoveConferenceLinkRenewalDate:(id /* block */)arg1;
- (void)CADInternalSetNextConferenceLinkRenewalToNow:(id /* block */)arg1;
- (void)CADMigrateDatabaseIfNeeded:(id /* block */)arg1;
- (void)CADObject:(id)arg1 getDataPropertyWithName:(id)arg2 reply:(id /* block */)arg3;
- (void)CADObject:(id)arg1 getDatePropertyWithName:(id)arg2 reply:(id /* block */)arg3;
- (void)CADObject:(id)arg1 getNumberPropertyWithName:(id)arg2 reply:(id /* block */)arg3;
- (void)CADObject:(id)arg1 getPropertiesWithNames:(id)arg2 reply:(id /* block */)arg3;
- (void)CADObject:(id)arg1 getPropertyWithName:(id)arg2 reply:(id /* block */)arg3;
- (void)CADObject:(id)arg1 getRelatedObjectWithRelationName:(id)arg2 reply:(id /* block */)arg3;
- (void)CADObject:(id)arg1 getRelatedObjectsWithRelationName:(id)arg2 reply:(id /* block */)arg3;
- (void)CADObject:(id)arg1 getSecurityScopedURLWrapperPropertyWithName:(id)arg2 reply:(id /* block */)arg3;
- (void)CADObject:(id)arg1 getStringPropertyWithName:(id)arg2 reply:(id /* block */)arg3;
- (void)CADObjectExists:(id)arg1 reply:(id /* block */)arg2;
- (void)CADObjectGetConstraints:(id)arg1 reply:(id /* block */)arg2;
- (void)CADObjectIsManaged:(id)arg1 reply:(id /* block */)arg2;
- (void)CADObjects:(id)arg1 getPropertiesWithNames:(id)arg2 reply:(id /* block */)arg3;
- (void)CADObjectsExist:(id)arg1 reply:(id /* block */)arg2;
- (void)CADOccurrenceCacheCancelSearchWithReplyID:(int)arg1;
- (void)CADOccurrenceCacheDoEvents:(id)arg1 haveOccurrencesAfterDate:(id)arg2 reply:(id /* block */)arg3;
- (void)CADOccurrenceCacheGetOccurrenceCountWithStartDate:(id)arg1 endDate:(id)arg2 reply:(id /* block */)arg3;
- (void)CADOccurrenceCacheGetOccurrenceCountsForCalendars:(id)arg1 reply:(id /* block */)arg2;
- (void)CADOccurrenceCacheGetOccurrenceDateOfEventWithObjectID:(id)arg1 nearestDate:(id)arg2 prefersForwardSearch:(bool)arg3 reply:(id /* block */)arg4;
- (void)CADOccurrenceCacheGetOccurrencesForCalendars:(id)arg1 onDay:(id)arg2 reply:(id /* block */)arg3;
- (void)CADOccurrenceCacheSearchLocationsWithTerm:(id)arg1 inCalendars:(id)arg2 responseToken:(int)arg3 reply:(id /* block */)arg4;
- (void)CADOccurrenceCacheSearchWithTerm:(id)arg1 inCalendars:(id)arg2 responseToken:(int)arg3 reply:(id /* block */)arg4;
- (void)CADOccurrencesExistInRangeForEvent:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 mustStartInInterval:(bool)arg4 timezone:(id)arg5 reply:(id /* block */)arg6;
- (void)CADPostSyntheticRouteHypothesis:(id)arg1 forEventWithExternalURL:(id)arg2 reply:(id /* block */)arg3;
- (void)CADPurgeChangeTrackingReply:(id /* block */)arg1;
- (void)CADRemoveCalendarItemsOlderThanDate:(id)arg1 ofType:(int)arg2 inSource:(id)arg3 reply:(id /* block */)arg4;
- (void)CADResourceChange:(id)arg1 setAlertedWithError:(id /* block */)arg2;
- (void)CADRestoreFromDatabaseBackupFileNamed:(id)arg1 inDirectory:(id)arg2 includeAttachments:(bool)arg3 reply:(id /* block */)arg4;
- (void)CADRestoreFromICBU:(id)arg1 reply:(id /* block */)arg2;
- (void)CADSourceAddExchangeDelegateWithName:(id)arg1 emailAddress:(id)arg2 toSourceWithID:(id)arg3 reply:(id /* block */)arg4;
- (void)CADSourceGetGrantedDelegatesList:(id)arg1 reply:(id /* block */)arg2;
- (void)CADSourceGetNotificationCollection:(id)arg1 reply:(id /* block */)arg2;
- (void)CADSourceRefresh:(id)arg1 isUserRequested:(bool)arg2 reply:(id /* block */)arg3;
- (void)CADSourceRemoveExchangeDelegateWithID:(id)arg1 reply:(id /* block */)arg2;
- (void)CADSourceUpdateGrantedDelegate:(id)arg1 action:(long long)arg2 sourceID:(id)arg3 reply:(id /* block */)arg4;
- (void)CADTestingCloseDatabase:(id /* block */)arg1;
- (void)CADTestingSimulateDaemonCrash;
- (bool)_CADDatabaseCanModifyCalendarDatabase;
- (bool)_CADDatabaseCanModifySuggestedEventCalendar;
- (id)_TCCPromptReasonStringForReason:(long long)arg1;
- (id)_accountStoreForBackupRestore;
- (bool)_checkAccess:(unsigned long long)arg1;
- (struct __CFArray { }*)_copyToIntCFArrayRef:(id)arg1;
- (struct __CFSet { }*)_copyToIntCFSetRef:(id)arg1;
- (int)_deleteObjects:(id)arg1 database:(struct CalDatabase { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; int x2; struct CPRecordStore {} *x3; struct CalEventOccurrenceCache {} *x4; struct CalScheduledTaskCache {} *x5; void *x6; void *x7; struct __CFDictionary {} *x8; struct __CFDictionary {} *x9; struct os_unfair_lock_s { unsigned int x_10_1_1; } x10; unsigned int x11; unsigned int x12; struct __CFArray {} *x13; struct __CFString {} *x14; struct __CFArray {} *x15; int x16; int x17; struct __CFString {} *x18; struct __CFURL {} *x19; struct __CFString {} *x20; struct __CFString {} *x21; unsigned long long x22; int x23; int x24; int x25; id /* block */ x26; struct _opaque_pthread_mutex_t { long long x_27_1_1; BOOL x_27_1_2[56]; } x27; bool x28; struct __CFArray {} *x29; bool x30; struct __CFSet {} *x31; id x32; id x33; id x34; int x35; id x36; id x37; id x38; char *x39; unsigned int x40; unsigned int x41; int x42; bool x43; bool x44; bool x45; bool x46; bool x47; bool x48; bool x49; }*)arg2;
- (id)_getAlarmOccurrencesInRangeFromStart:(id)arg1 toEnd:(id)arg2 inCalendars:(id)arg3 forDatabase:(struct CalDatabase { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; int x2; struct CPRecordStore {} *x3; struct CalEventOccurrenceCache {} *x4; struct CalScheduledTaskCache {} *x5; void *x6; void *x7; struct __CFDictionary {} *x8; struct __CFDictionary {} *x9; struct os_unfair_lock_s { unsigned int x_10_1_1; } x10; unsigned int x11; unsigned int x12; struct __CFArray {} *x13; struct __CFString {} *x14; struct __CFArray {} *x15; int x16; int x17; struct __CFString {} *x18; struct __CFURL {} *x19; struct __CFString {} *x20; struct __CFString {} *x21; unsigned long long x22; int x23; int x24; int x25; id /* block */ x26; struct _opaque_pthread_mutex_t { long long x_27_1_1; BOOL x_27_1_2[56]; } x27; bool x28; struct __CFArray {} *x29; bool x30; struct __CFSet {} *x31; id x32; id x33; id x34; int x35; id x36; id x37; id x38; char *x39; unsigned int x40; unsigned int x41; int x42; bool x43; bool x44; bool x45; bool x46; bool x47; bool x48; bool x49; }*)arg4 databaseID:(int)arg5 calendarIDsForThisDatabase:(id)arg6 accessLogger:(id /* block */)arg7;
- (void*)_handleiTIPMesssageAndCopyEventFromDocument:(id)arg1 data:(id)arg2 database:(struct CalDatabase { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; int x2; struct CPRecordStore {} *x3; struct CalEventOccurrenceCache {} *x4; struct CalScheduledTaskCache {} *x5; void *x6; void *x7; struct __CFDictionary {} *x8; struct __CFDictionary {} *x9; struct os_unfair_lock_s { unsigned int x_10_1_1; } x10; unsigned int x11; unsigned int x12; struct __CFArray {} *x13; struct __CFString {} *x14; struct __CFArray {} *x15; int x16; int x17; struct __CFString {} *x18; struct __CFURL {} *x19; struct __CFString {} *x20; struct __CFString {} *x21; unsigned long long x22; int x23; int x24; int x25; id /* block */ x26; struct _opaque_pthread_mutex_t { long long x_27_1_1; BOOL x_27_1_2[56]; } x27; bool x28; struct __CFArray {} *x29; bool x30; struct __CFSet {} *x31; id x32; id x33; id x34; int x35; id x36; id x37; id x38; char *x39; unsigned int x40; unsigned int x41; int x42; bool x43; bool x44; bool x45; bool x46; bool x47; bool x48; bool x49; }*)arg3 store:(void*)arg4 accountInfo:(id)arg5 options:(unsigned long long)arg6;
- (id)_hangAssertionForBlockingTCCCall;
- (bool)_hasAccess:(unsigned long long)arg1;
- (id)_importEvents:(id)arg1 data:(id)arg2 intoCalendarWithID:(id)arg3 inDatabase:(struct CalDatabase { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; int x2; struct CPRecordStore {} *x3; struct CalEventOccurrenceCache {} *x4; struct CalScheduledTaskCache {} *x5; void *x6; void *x7; struct __CFDictionary {} *x8; struct __CFDictionary {} *x9; struct os_unfair_lock_s { unsigned int x_10_1_1; } x10; unsigned int x11; unsigned int x12; struct __CFArray {} *x13; struct __CFString {} *x14; struct __CFArray {} *x15; int x16; int x17; struct __CFString {} *x18; struct __CFURL {} *x19; struct __CFString {} *x20; struct __CFString {} *x21; unsigned long long x22; int x23; int x24; int x25; id /* block */ x26; struct _opaque_pthread_mutex_t { long long x_27_1_1; BOOL x_27_1_2[56]; } x27; bool x28; struct __CFArray {} *x29; bool x30; struct __CFSet {} *x31; id x32; id x33; id x34; int x35; id x36; id x37; id x38; char *x39; unsigned int x40; unsigned int x41; int x42; bool x43; bool x44; bool x45; bool x46; bool x47; bool x48; bool x49; }*)arg4 optionsMask:(unsigned long long)arg5 batchSize:(int)arg6 outCalendarObjectID:(id*)arg7 outError:(int*)arg8;
- (id)_insert:(id)arg1 delete:(id)arg2 update:(id)arg3 database:(struct CalDatabase { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; int x2; struct CPRecordStore {} *x3; struct CalEventOccurrenceCache {} *x4; struct CalScheduledTaskCache {} *x5; void *x6; void *x7; struct __CFDictionary {} *x8; struct __CFDictionary {} *x9; struct os_unfair_lock_s { unsigned int x_10_1_1; } x10; unsigned int x11; unsigned int x12; struct __CFArray {} *x13; struct __CFString {} *x14; struct __CFArray {} *x15; int x16; int x17; struct __CFString {} *x18; struct __CFURL {} *x19; struct __CFString {} *x20; struct __CFString {} *x21; unsigned long long x22; int x23; int x24; int x25; id /* block */ x26; struct _opaque_pthread_mutex_t { long long x_27_1_1; BOOL x_27_1_2[56]; } x27; bool x28; struct __CFArray {} *x29; bool x30; struct __CFSet {} *x31; id x32; id x33; id x34; int x35; id x36; id x37; id x38; char *x39; unsigned int x40; unsigned int x41; int x42; bool x43; bool x44; bool x45; bool x46; bool x47; bool x48; bool x49; }*)arg4 error:(int*)arg5;
- (id)_insertObjectsWithTemporaryObjectIDs:(id)arg1 updates:(id)arg2 database:(struct CalDatabase { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; int x2; struct CPRecordStore {} *x3; struct CalEventOccurrenceCache {} *x4; struct CalScheduledTaskCache {} *x5; void *x6; void *x7; struct __CFDictionary {} *x8; struct __CFDictionary {} *x9; struct os_unfair_lock_s { unsigned int x_10_1_1; } x10; unsigned int x11; unsigned int x12; struct __CFArray {} *x13; struct __CFString {} *x14; struct __CFArray {} *x15; int x16; int x17; struct __CFString {} *x18; struct __CFURL {} *x19; struct __CFString {} *x20; struct __CFString {} *x21; unsigned long long x22; int x23; int x24; int x25; id /* block */ x26; struct _opaque_pthread_mutex_t { long long x_27_1_1; BOOL x_27_1_2[56]; } x27; bool x28; struct __CFArray {} *x29; bool x30; struct __CFSet {} *x31; id x32; id x33; id x34; int x35; id x36; id x37; id x38; char *x39; unsigned int x40; unsigned int x41; int x42; bool x43; bool x44; bool x45; bool x46; bool x47; bool x48; bool x49; }*)arg3 error:(int*)arg4;
- (id)_mergeDaysAndOccurrenceCounts:(id)arg1 withCounts:(id)arg2;
- (bool)_performRestoreOperation:(id /* block */)arg1;
- (bool)_requiresSpecialEntitlementToReadSecurityScopedURLWrapperForProperty:(id)arg1;
- (int)_tryPerformBlockWithCalendarID:(id)arg1 forAction:(unsigned long long)arg2 withBlock:(id /* block */)arg3;
- (int)_tryPerformBlockWithSourceID:(id)arg1 forAction:(unsigned long long)arg2 entityType:(int)arg3 withBlock:(id /* block */)arg4;
- (int)_tryPerformBlockWithSourceID:(id)arg1 forAction:(unsigned long long)arg2 withBlock:(id /* block */)arg3;
- (int)_updatePropertiesAndRelations:(id)arg1 database:(struct CalDatabase { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; int x2; struct CPRecordStore {} *x3; struct CalEventOccurrenceCache {} *x4; struct CalScheduledTaskCache {} *x5; void *x6; void *x7; struct __CFDictionary {} *x8; struct __CFDictionary {} *x9; struct os_unfair_lock_s { unsigned int x_10_1_1; } x10; unsigned int x11; unsigned int x12; struct __CFArray {} *x13; struct __CFString {} *x14; struct __CFArray {} *x15; int x16; int x17; struct __CFString {} *x18; struct __CFURL {} *x19; struct __CFString {} *x20; struct __CFString {} *x21; unsigned long long x22; int x23; int x24; int x25; id /* block */ x26; struct _opaque_pthread_mutex_t { long long x_27_1_1; BOOL x_27_1_2[56]; } x27; bool x28; struct __CFArray {} *x29; bool x30; struct __CFSet {} *x31; id x32; id x33; id x34; int x35; id x36; id x37; id x38; char *x39; unsigned int x40; unsigned int x41; int x42; bool x43; bool x44; bool x45; bool x46; bool x47; bool x48; bool x49; }*)arg2 insertedObjectMap:(id)arg3;
- (bool)_verifyClientAllowedToWriteValue:(id)arg1 forKey:(id)arg2;
- (bool)accessGrantedToPerformSelector:(SEL)arg1;
- (void)clearCachedAuthorizationStatus;
- (id)conn;
- (id)constraintsData:(id)arg1 error:(int*)arg2;
- (int)findDatabaseForObject:(id)arg1 withUpdates:(id)arg2 personas:(id*)arg3 accounts:(id*)arg4 nextTempDBID:(int*)arg5;
- (bool)hasAccess:(unsigned long long)arg1;
- (id)initWithClientConnection:(id)arg1;
- (int)insert:(id)arg1 deletes:(id)arg2 updates:(id)arg3 insertedObjectIDMap:(id)arg4 inDatabase:(struct CalDatabase { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; int x2; struct CPRecordStore {} *x3; struct CalEventOccurrenceCache {} *x4; struct CalScheduledTaskCache {} *x5; void *x6; void *x7; struct __CFDictionary {} *x8; struct __CFDictionary {} *x9; struct os_unfair_lock_s { unsigned int x_10_1_1; } x10; unsigned int x11; unsigned int x12; struct __CFArray {} *x13; struct __CFString {} *x14; struct __CFArray {} *x15; int x16; int x17; struct __CFString {} *x18; struct __CFURL {} *x19; struct __CFString {} *x20; struct __CFString {} *x21; unsigned long long x22; int x23; int x24; int x25; id /* block */ x26; struct _opaque_pthread_mutex_t { long long x_27_1_1; BOOL x_27_1_2[56]; } x27; bool x28; struct __CFArray {} *x29; bool x30; struct __CFSet {} *x31; id x32; id x33; id x34; int x35; id x36; id x37; id x38; char *x39; unsigned int x40; unsigned int x41; int x42; bool x43; bool x44; bool x45; bool x46; bool x47; bool x48; bool x49; }*)arg5;
- (bool)isDuplicateEvent:(id)arg1 updates:(id)arg2;
- (bool)location:(void*)arg1 matchesProperties:(id)arg2;
- (bool)object:(void*)arg1 matchesProperties:(id)arg2 forKeys:(id)arg3;
- (id)owningEventForObject:(id)arg1 withUpdates:(id)arg2;
- (id)owningObjectForObject:(id)arg1 withProperties:(id)arg2;
- (int)preflightAccessForDeletes:(id)arg1 updates:(id)arg2 inDatabase:(struct CalDatabase { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; int x2; struct CPRecordStore {} *x3; struct CalEventOccurrenceCache {} *x4; struct CalScheduledTaskCache {} *x5; void *x6; void *x7; struct __CFDictionary {} *x8; struct __CFDictionary {} *x9; struct os_unfair_lock_s { unsigned int x_10_1_1; } x10; unsigned int x11; unsigned int x12; struct __CFArray {} *x13; struct __CFString {} *x14; struct __CFArray {} *x15; int x16; int x17; struct __CFString {} *x18; struct __CFURL {} *x19; struct __CFString {} *x20; struct __CFString {} *x21; unsigned long long x22; int x23; int x24; int x25; id /* block */ x26; struct _opaque_pthread_mutex_t { long long x_27_1_1; BOOL x_27_1_2[56]; } x27; bool x28; struct __CFArray {} *x29; bool x30; struct __CFSet {} *x31; id x32; id x33; id x34; int x35; id x36; id x37; id x38; char *x39; unsigned int x40; unsigned int x41; int x42; bool x43; bool x44; bool x45; bool x46; bool x47; bool x48; bool x49; }*)arg3;
- (int)preflightObjectID:(id)arg1 inDatabase:(struct CalDatabase { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; int x2; struct CPRecordStore {} *x3; struct CalEventOccurrenceCache {} *x4; struct CalScheduledTaskCache {} *x5; void *x6; void *x7; struct __CFDictionary {} *x8; struct __CFDictionary {} *x9; struct os_unfair_lock_s { unsigned int x_10_1_1; } x10; unsigned int x11; unsigned int x12; struct __CFArray {} *x13; struct __CFString {} *x14; struct __CFArray {} *x15; int x16; int x17; struct __CFString {} *x18; struct __CFURL {} *x19; struct __CFString {} *x20; struct __CFString {} *x21; unsigned long long x22; int x23; int x24; int x25; id /* block */ x26; struct _opaque_pthread_mutex_t { long long x_27_1_1; BOOL x_27_1_2[56]; } x27; bool x28; struct __CFArray {} *x29; bool x30; struct __CFSet {} *x31; id x32; id x33; id x34; int x35; id x36; id x37; id x38; char *x39; unsigned int x40; unsigned int x41; int x42; bool x43; bool x44; bool x45; bool x46; bool x47; bool x48; bool x49; }*)arg2;
- (bool)recurrenceRule:(void*)arg1 matchesProperties:(id)arg2;
- (id)removeDuplicateEvents:(id)arg1;
- (bool)shouldBlockSaveOfEvent:(id)arg1 updates:(id)arg2 becauseOfExistingEvent:(void*)arg3;
- (unsigned long long)sizeAttachmentsForDatabase:(struct CalDatabase { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; int x2; struct CPRecordStore {} *x3; struct CalEventOccurrenceCache {} *x4; struct CalScheduledTaskCache {} *x5; void *x6; void *x7; struct __CFDictionary {} *x8; struct __CFDictionary {} *x9; struct os_unfair_lock_s { unsigned int x_10_1_1; } x10; unsigned int x11; unsigned int x12; struct __CFArray {} *x13; struct __CFString {} *x14; struct __CFArray {} *x15; int x16; int x17; struct __CFString {} *x18; struct __CFURL {} *x19; struct __CFString {} *x20; struct __CFString {} *x21; unsigned long long x22; int x23; int x24; int x25; id /* block */ x26; struct _opaque_pthread_mutex_t { long long x_27_1_1; BOOL x_27_1_2[56]; } x27; bool x28; struct __CFArray {} *x29; bool x30; struct __CFSet {} *x31; id x32; id x33; id x34; int x35; id x36; id x37; id x38; char *x39; unsigned int x40; unsigned int x41; int x42; bool x43; bool x44; bool x45; bool x46; bool x47; bool x48; bool x49; }*)arg1;
- (unsigned long long)sizeCalendarDirectoryForDatabase:(struct CalDatabase { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; int x2; struct CPRecordStore {} *x3; struct CalEventOccurrenceCache {} *x4; struct CalScheduledTaskCache {} *x5; void *x6; void *x7; struct __CFDictionary {} *x8; struct __CFDictionary {} *x9; struct os_unfair_lock_s { unsigned int x_10_1_1; } x10; unsigned int x11; unsigned int x12; struct __CFArray {} *x13; struct __CFString {} *x14; struct __CFArray {} *x15; int x16; int x17; struct __CFString {} *x18; struct __CFURL {} *x19; struct __CFString {} *x20; struct __CFString {} *x21; unsigned long long x22; int x23; int x24; int x25; id /* block */ x26; struct _opaque_pthread_mutex_t { long long x_27_1_1; BOOL x_27_1_2[56]; } x27; bool x28; struct __CFArray {} *x29; bool x30; struct __CFSet {} *x31; id x32; id x33; id x34; int x35; id x36; id x37; id x38; char *x39; unsigned int x40; unsigned int x41; int x42; bool x43; bool x44; bool x45; bool x46; bool x47; bool x48; bool x49; }*)arg1;
- (unsigned long long)sizeDirectoryAtPath:(id)arg1 excludingDirectory:(id)arg2;
- (id)updatedOrInsertedObjectIDs:(id)arg1 relatedToEvent:(id)arg2;

@end
