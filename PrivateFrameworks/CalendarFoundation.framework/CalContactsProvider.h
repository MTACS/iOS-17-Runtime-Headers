
@interface CalContactsProvider : NSObject <CalContactsProviderProtocol> {
    NSObject<OS_dispatch_queue> * _contactStoreWorkQueue;
    NSMutableSet * _delegates;
    NSArray * _loadedMyEmailAddresses;
    CNContact * _meContact;
    CNReputationStore * _reputationStore;
    CNContactStore * _store;
    NSObject<OS_dispatch_queue> * _syncQueue;
    NSString * _testMeContactIdentifer;
    NSArray * _unitTestEmails;
}

@property (retain) NSObject<OS_dispatch_queue> *contactStoreWorkQueue;
@property (retain) NSMutableSet *delegates;
@property (retain) NSArray *loadedMyEmailAddresses;
@property (retain) CNContact *meContact;
@property (retain) CNReputationStore *reputationStore;
@property (retain) CNContactStore *store;
@property (retain) NSObject<OS_dispatch_queue> *syncQueue;
@property (retain) NSString *testMeContactIdentifer;
@property (retain) NSArray *unitTestEmails;

+ (bool)birthdayIsYearless:(id)arg1;
+ (id)birthdayStringForContactName:(id)arg1 eventDate:(id)arg2 birthDate:(id)arg3 lunarCalendar:(id)arg4;
+ (id)defaultProvider;
+ (bool)isCalendarIslamic:(id)arg1;
+ (id)reputationForHandle:(id)arg1 inStore:(id)arg2;
+ (bool)shouldPermitOrganizerEmailFromJunkChecks:(id)arg1 inReputationStore:(id)arg2;
+ (bool)shouldPermitOrganizerPhoneNumberFromJunkChecks:(id)arg1 inReputationStore:(id)arg2;

- (void).cxx_destruct;
- (id)_fetchedUnifiedMeContact;
- (id)_fullNameForFirstContactMatchingPredicate:(id)arg1;
- (id)_lastHistoryToken;
- (id)_meWithKeys:(id)arg1;
- (void)_setLastHistoryToken:(id)arg1;
- (void)_syncContacts;
- (id)cachedEmailAddress;
- (id)cachedEmailAddressArray;
- (id)cachedEmailAddresses;
- (bool)contactAccessResolved;
- (bool)contactIdentifierIsMe:(id)arg1;
- (id)contactStore;
- (id)contactStoreWorkQueue;
- (void)contactsChanged:(id)arg1;
- (id)contactsFromContactIdentifiers:(id)arg1 withKeys:(id)arg2;
- (id)delegates;
- (void)deregisterForContactChangeNotifications:(id)arg1;
- (void)donateEncodedLikenessString:(id)arg1 forEmailAddress:(id)arg2;
- (id)fullNameForFirstContactMatchingEmailAddress:(id)arg1;
- (id)fullNameForFirstContactMatchingPhoneNumber:(id)arg1;
- (id)init;
- (id)initWithStore:(id)arg1;
- (id)loadedMyEmailAddresses;
- (bool)matchesOneOfMyEmails:(id)arg1;
- (bool)matchesOneOfMyPhoneNumbers:(id)arg1;
- (void)meCardChanged:(id)arg1;
- (id)meContact;
- (id)myAddressForLabel:(id)arg1;
- (id)myAvatarEncodedString;
- (id)myEmailAddress;
- (id)myEmailAddresses;
- (id)myFullName;
- (id)myHomeAddress;
- (id)myNameWithStyle:(long long)arg1;
- (id)myPhoneNumbers;
- (id)myShortDisplayName;
- (id)myWorkAddress;
- (id)nullableContactStore;
- (void)registerForContactChangeNotifications:(id)arg1;
- (id)reputationStore;
- (void)setContactStoreWorkQueue:(id)arg1;
- (void)setDelegates:(id)arg1;
- (void)setLoadedMyEmailAddresses:(id)arg1;
- (void)setMeCardEmailsForUnitTesting:(id)arg1;
- (void)setMeContact:(id)arg1;
- (void)setReputationStore:(id)arg1;
- (void)setStore:(id)arg1;
- (void)setSyncQueue:(id)arg1;
- (void)setTestMeContactIdentifer:(id)arg1;
- (void)setTestMeContactIdentifier:(id)arg1;
- (void)setUnitTestEmails:(id)arg1;
- (bool)shouldPermitOrganizerEmailFromJunkChecks:(id)arg1;
- (bool)shouldPermitOrganizerPhoneNumberFromJunkChecks:(id)arg1;
- (id)store;
- (id)syncQueue;
- (id)testMeContactIdentifer;
- (id)unifiedContactMatchingName:(id)arg1 email:(id)arg2 url:(id)arg3 keysToFetch:(id)arg4;
- (id)unifiedContactMatchingString:(id)arg1 keysToFetch:(id)arg2 matchType:(long long*)arg3;
- (id)unifiedContactWithEmailAddress:(id)arg1;
- (id)unifiedContactWithIdentifier:(id)arg1;
- (id)unifiedContactWithIdentifier:(id)arg1 keysToFetch:(id)arg2;
- (id)unifiedContactWithName:(id)arg1;
- (id)unifiedContactWithPhoneNumber:(id)arg1;
- (id)unifiedContactsDictionaryForHandleStrings:(id)arg1 keysToFetch:(id)arg2;
- (id)unifiedContactsForHandleStrings:(id)arg1 keysToFetch:(id)arg2;
- (id)unifiedContactsMatchingPredicate:(id)arg1 keysToFetch:(id)arg2;
- (id)unifiedMeContact;
- (id)unitTestEmails;
- (bool)urlMatchesOneOfMyEmails:(id)arg1;

@end
