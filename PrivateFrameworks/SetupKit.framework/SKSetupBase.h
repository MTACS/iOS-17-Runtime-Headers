
@interface SKSetupBase : NSObject <CULabelable, CUMessaging> {
    bool  _activateCalled;
    NSData * _authTagOverride;
    unsigned int  _bluetoothUseCase;
    unsigned int  _controlFlags;
    NSObject<OS_dispatch_queue> * _dispatchQueue;
    id /* block */  _eventHandler;
    bool  _invalidateCalled;
    bool  _invalidateDone;
    NSString * _label;
    CUMessageSessionServer * _messageSessionServer;
    CUMessageSession * _messageSessionTemplate;
    NSString * _password;
    int  _passwordType;
    id /* block */  _passwordTypeChangedHandler;
    SKDevice * _peerDevice;
    bool  _persistentPairing;
    NSData * _pskData;
    NSMutableDictionary * _registeredEvents;
    NSMutableDictionary * _registeredRequests;
    bool  _reversePairing;
    int  _runState;
    id /* block */  _sendDataHandler;
    int  _setupType;
    SKConnection * _skCnx;
    NSMutableArray * _stepArray;
    NSObject<SKStepable> * _stepCurrent;
    struct LogCategory { int x1; int x2; char *x3; unsigned int x4; char *x5; char *x6; int x7; struct LogCategory {} *x8; struct LogOutput {} *x9; struct LogOutput {} *x10; unsigned long long x11; unsigned long long x12; unsigned int x13; unsigned int x14; char *x15; struct LogCategoryPrivate {} *x16; } * _ucat;
    struct LogCategory { int x1; int x2; char *x3; unsigned int x4; char *x5; char *x6; int x7; struct LogCategory {} *x8; struct LogOutput {} *x9; struct LogOutput {} *x10; unsigned long long x11; unsigned long long x12; unsigned int x13; unsigned int x14; char *x15; struct LogCategoryPrivate {} *x16; } * _ucatBase;
}

@property (nonatomic, copy) NSData *authTagOverride;
@property (nonatomic) unsigned int bluetoothUseCase;
@property (nonatomic) unsigned int controlFlags;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (nonatomic, copy) id /* block */ eventHandler;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSString *label;
@property (nonatomic, readonly) CUMessageSession *messageSessionTemplate;
@property (nonatomic, copy) NSString *password;
@property (nonatomic) int passwordType;
@property (nonatomic, copy) id /* block */ passwordTypeChangedHandler;
@property (nonatomic, retain) SKDevice *peerDevice;
@property (nonatomic) bool persistentPairing;
@property (nonatomic, copy) NSData *pskData;
@property (nonatomic) bool reversePairing;
@property (nonatomic, copy) id /* block */ sendDataHandler;
@property (nonatomic) int setupType;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_activate;
- (void)_addStep:(id)arg1;
- (void)_completeWithError:(id)arg1;
- (void)_completedStep:(id)arg1 error:(id)arg2;
- (void)_connectionEnded:(id)arg1;
- (void)_connectionStartWithSKConnection:(id)arg1 clientMode:(bool)arg2 completeOnFailure:(bool)arg3 completion:(id /* block */)arg4;
- (void)_invalidate;
- (void)_invalidateSteps;
- (void)_invalidated;
- (void)_pairSetupConfig:(id)arg1;
- (void)_postEvent:(id)arg1;
- (void)_prepareSteps;
- (void)_receivedEventID:(id)arg1 event:(id)arg2 options:(id)arg3;
- (void)_receivedRequestID:(id)arg1 request:(id)arg2 options:(id)arg3 responseHandler:(id /* block */)arg4;
- (void)_reportEvent:(id)arg1;
- (void)_reportEventType:(int)arg1;
- (void)_run;
- (bool)_runSteps;
- (void)_setupMessageSession;
- (void)_tearDownMessageSession;
- (void)activate;
- (void)addStep:(id)arg1;
- (id)authTagOverride;
- (unsigned int)bluetoothUseCase;
- (unsigned int)controlFlags;
- (void)dealloc;
- (void)deregisterEventID:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)deregisterRequestID:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)description;
- (id)descriptionWithLevel:(int)arg1;
- (id)dispatchQueue;
- (id /* block */)eventHandler;
- (id)initWithLogCategory:(struct LogCategory { int x1; int x2; char *x3; unsigned int x4; char *x5; char *x6; int x7; struct LogCategory {} *x8; struct LogOutput {} *x9; struct LogOutput {} *x10; unsigned long long x11; unsigned long long x12; unsigned int x13; unsigned int x14; char *x15; struct LogCategoryPrivate {} *x16; }*)arg1;
- (void)invalidate;
- (id)label;
- (id)messageSessionTemplate;
- (id)password;
- (int)passwordType;
- (id /* block */)passwordTypeChangedHandler;
- (id)peerDevice;
- (bool)persistentPairing;
- (void)postEvent:(id)arg1;
- (void)postEventType:(int)arg1;
- (id)pskData;
- (void)receivedData:(id)arg1;
- (void)registerEventID:(id)arg1 options:(id)arg2 eventHandler:(id /* block */)arg3 completionHandler:(id /* block */)arg4;
- (void)registerRequestID:(id)arg1 options:(id)arg2 requestHandler:(id /* block */)arg3 completionHandler:(id /* block */)arg4;
- (void)reportEvent:(id)arg1;
- (void)reportEventType:(int)arg1;
- (bool)reversePairing;
- (id /* block */)sendDataHandler;
- (void)sendEventID:(id)arg1 eventMessage:(id)arg2 options:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)sendRequestID:(id)arg1 requestMessage:(id)arg2 options:(id)arg3 responseHandler:(id /* block */)arg4;
- (void)setAuthTagOverride:(id)arg1;
- (void)setBluetoothUseCase:(unsigned int)arg1;
- (void)setControlFlags:(unsigned int)arg1;
- (void)setDispatchQueue:(id)arg1;
- (void)setEventHandler:(id /* block */)arg1;
- (void)setLabel:(id)arg1;
- (void)setPassword:(id)arg1;
- (void)setPasswordType:(int)arg1;
- (void)setPasswordTypeChangedHandler:(id /* block */)arg1;
- (void)setPeerDevice:(id)arg1;
- (void)setPersistentPairing:(bool)arg1;
- (void)setPskData:(id)arg1;
- (void)setReversePairing:(bool)arg1;
- (void)setSendDataHandler:(id /* block */)arg1;
- (void)setSetupType:(int)arg1;
- (int)setupType;

@end
