
@interface IMAAppPresenter : NSObject <CKAppCardPresentationOverseerDelegate, CKBrowserDragControllerTranscriptDelegate, CKBrowserSwitcherViewControllerDelegate, CKBrowserTransitionCoordinatorDelegate, CKBrowserViewControllerSendDelegate, CKExpandedAppViewControllerDelegate> {
    bool  _alwaysPresentAppsExpanded;
    CKAppCardPresentationOverseer * _appCardPresentationOverseer;
    double  _compactHeight;
    IMBalloonPlugin * _currentBalloonPlugin;
    <IMAAppPresenterDelegate> * _delegate;
    CKExpandedAppViewController * _expandedAppViewController;
    bool  _hidesCompactAppForStickerDrag;
    bool  _isTransitioningPresentationStyles;
    IMAStickerPickerPresentationContext * _savedStickerPresentationContext;
    CKBrowserSwitcherViewController * _switcherViewController;
    CKBrowserTransitionCoordinator * _transitionCoordinator;
}

@property (nonatomic) bool alwaysPresentAppsExpanded;
@property (nonatomic, retain) CKAppCardPresentationOverseer *appCardPresentationOverseer;
@property (nonatomic) double compactHeight;
@property (nonatomic, readonly) UIViewController *currentAppViewController;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <IMAAppPresenterDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool hidesCompactAppForStickerDrag;
@property (nonatomic, retain) IMAStickerPickerPresentationContext *savedStickerPresentationContext;
@property (readonly) Class superclass;
@property (nonatomic, retain) CKBrowserSwitcherViewController *switcherViewController;

+ (void)disableAutomaticAppDiscovery;
+ (void)loadAppWithIdentifierIfNeeded:(id)arg1;
+ (id)logHandle;

- (void).cxx_destruct;
- (void)_hideAppCardAnimated:(bool)arg1 completion:(id /* block */)arg2;
- (void)_hideCompactBrowserAnimated:(bool)arg1 completion:(id /* block */)arg2;
- (void)_presentAppCardWithBundleIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (void)_presentAppCardWithBundleIdentifier:(id)arg1 style:(unsigned long long)arg2 completion:(id /* block */)arg3;
- (void)_presentAppWithBundleIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (id)activeSendMenuPresentationForAppCardOverseer;
- (bool)addSwitcher;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })alwaysExpandedAppViewControllerFrame;
- (bool)alwaysPresentAppsExpanded;
- (void)animateSwitcherOffscreen:(bool)arg1 completion:(id /* block */)arg2;
- (void)appCardDidMoveToWindow:(id)arg1;
- (void)appCardOverseerCardDidChangeHeight:(double)arg1 isBelowKeyboardDetent:(bool)arg2 isDragging:(bool)arg3 isGeneratingEndOfDragAnimations:(bool)arg4;
- (double)appCardOverseerCompactHeightExcludingSafeArea;
- (void)appCardOverseerDidDismissAppCard;
- (void)appCardOverseerDidPresentAppCard;
- (void)appCardOverseerDidRecognizeTouchTracker;
- (void)appCardOverseerDidRequestPresentationSendMenuWithCompletion:(id /* block */)arg1;
- (void)appCardOverseerViewStateDidChange:(bool)arg1;
- (void)appCardOverseerWillDismissAppCard;
- (void)appCardOverseerWillPresentAppCard;
- (id)appCardPresentationOverseer;
- (void)appPresenterDidSelectAppWithIdentifier:(id)arg1;
- (void)appPresenterDidSelectAppWithIdentifier:(id)arg1 type:(id)arg2;
- (id)appViewControllerPresenter;
- (struct CGSize { double x1; double x2; })browserTransitionCoordinator:(id)arg1 preferredSizeForBrowser:(id)arg2;
- (double)browserTransitionCoordinatorCollapsedContentHeight:(id)arg1;
- (void)browserTransitionCoordinatorDidCollapseOrDismiss:(id)arg1 withReason:(long long)arg2;
- (void)browserTransitionCoordinatorDidTransitionOrPresentToFullscreen:(id)arg1 withReason:(long long)arg2;
- (bool)browserTransitionCoordinatorShouldDismissOnDragSuccess:(id)arg1;
- (void)browserTransitionCoordinatorWillCollapseOrDismiss:(id)arg1 withReason:(long long)arg2;
- (void)browserTransitionCoordinatorWillTransitionOrPresentToFullscreen:(id)arg1 withReason:(long long)arg2;
- (void)canShowBrowserForPluginIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (void)commitPayload:(id)arg1;
- (void)commitSticker:(id)arg1 stickerFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)commitSticker:(id)arg1 withDragTarget:(id)arg2 draggedSticker:(id)arg3;
- (double)compactHeight;
- (void)convertIMSticker:(id)arg1 bakeInEffect:(bool)arg2 completion:(id /* block */)arg3;
- (id)convertStickerToIMASticker:(id)arg1;
- (id)currentAppViewController;
- (id)currentStickerViewController;
- (void)dealloc;
- (id)delegate;
- (void)dismiss;
- (void)dismissAndReloadInputViews:(bool)arg1;
- (void)dismissAndReloadInputViews:(bool)arg1 forPlugin:(id)arg2;
- (void)dismissToKeyboard:(bool)arg1;
- (id)dragControllerTranscriptDelegate;
- (void)dragManager:(id)arg1 draggedItemWithTarget:(id)arg2;
- (int)dragManager:(id)arg1 dropAreaForDragTarget:(id)arg2;
- (void)dragManager:(id)arg1 overrideDropPointForTarget:(id)arg2 completion:(id /* block */)arg3;
- (void)dragManagerDidBeginDragging:(id)arg1;
- (void)dragManagerDidEndDragging:(id)arg1;
- (void)hideAppViewControllerAnimated:(bool)arg1 completion:(id /* block */)arg2;
- (bool)hidesCompactAppForStickerDrag;
- (id)init;
- (bool)isAppCardsEnabled;
- (bool)isAppCompact;
- (bool)isSwitcherOffscreen;
- (id)logHandle;
- (void)notifyDelegateOfSelectedPlugin:(id)arg1;
- (void)notifyDelegateOfSelectedPlugin:(id)arg1 type:(id)arg2;
- (void)openURL:(id)arg1 applicationIdentifier:(id)arg2 pluginID:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)openURL:(id)arg1 pluginID:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)positionSwitcherOffscreen:(bool)arg1;
- (void)presentAlertWithTitle:(id)arg1 message:(id)arg2 buttonTitle:(id)arg3 completion:(id /* block */)arg4;
- (void)presentAppWithBundleIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (void)presentFullScreenModalAppWithBundleIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (void)presentPopoverAppWithBundleIdentifier:(id)arg1 sourceRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 inView:(id)arg3 completion:(id /* block */)arg4;
- (bool)presentsStickerPickerInPopover;
- (void)requestPresentationStyleExpanded:(bool)arg1;
- (void)requestPresentationStyleFullScreenModalForPlugin:(id)arg1 preferredContentSize:(struct CGSize { double x1; double x2; })arg2;
- (id)savedStickerPresentationContext;
- (void)setAlwaysPresentAppsExpanded:(bool)arg1;
- (void)setAppCardPresentationOverseer:(id)arg1;
- (void)setCompactHeight:(double)arg1;
- (void)setDelegate:(id)arg1;
- (void)setHidesCompactAppForStickerDrag:(bool)arg1;
- (void)setLocalUserIsTyping:(bool)arg1;
- (void)setSavedStickerPresentationContext:(id)arg1;
- (void)setSwitcherViewController:(id)arg1;
- (bool)shouldAlwaysShowAppTitle;
- (bool)shouldPresentAppCardInSendMenuWithTraitCollection:(id)arg1;
- (void)showBrowserForPluginIdentifier:(id)arg1 style:(unsigned long long)arg2 completion:(id /* block */)arg3;
- (void)startEditingPayload:(id)arg1;
- (void)startEditingPayload:(id)arg1 dismiss:(bool)arg2;
- (void)stickerDruidDragEndedWithIMSticker:(id)arg1;
- (void)stickerDruidDragStarted;
- (double)switcherHeight;
- (id)switcherViewController;
- (void)switcherViewControllerDidCollapse:(id)arg1;
- (void)switcherViewControllerDidFinishSwitching:(id)arg1 toViewController:(id)arg2;
- (bool)switcherViewControllerShouldShowIconAndTitleWhenCompact:(id)arg1;
- (id)transitionsPresentationViewController;
- (void)updateAppFrameForRotation;
- (void)updatePopoverWindowLocation:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inView:(id)arg2 completion:(id /* block */)arg3;
- (void)updateSwitcherViewFrame;

@end
