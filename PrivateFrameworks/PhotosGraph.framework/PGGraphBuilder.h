
@interface PGGraphBuilder : NSObject {
    CLSCurationContext * _curationContext;
    PGCurationManager * _curationManager;
    NSMutableDictionary * _curationScoreByAsset;
    PGEventLabelingFeaturesFileCache * _eventLabelingFeaturesCache;
    PGAssetCollectionFeatureProvider * _featureProvider;
    CLSFocusPeopleCache * _focusPeopleIngestCache;
    PGMutableGraph * _graph;
    NSMutableDictionary * _interactionScoreByAsset;
    bool  _isSharedLibraryEnabled;
    bool  _keepsExistingAssetCurationScores;
    NSObject<OS_os_log> * _loggingConnection;
    PGGraphMomentNodeCollection * _momentNodesWhereMeIsPresent;
    unsigned long long  _numberOfBetterAssets;
    unsigned long long  _numberOfDefaultAssets;
    unsigned long long  _numberOfImprovedAssets;
    unsigned long long  _numberOfUtilityAssets;
    PGGraphPeopleDomainBuildingHelper * _peopleDomainBuildingHelper;
    NSDictionary * _personActivityMeaningCriteriaDictionaryByMeaningLabel;
    PHPhotoLibrary * _photoLibrary;
    NSMutableDictionary * _sceneNodeBySceneName;
    CLSSceneTaxonomyHierarchy * _sceneTaxonomy;
    NSSet * _sharedLibraryParticipants;
    PGGraphTimeDomainBuildingHelper * _timeDomainBuildingHelper;
    double  _topTierAestheticScore;
}

@property (readonly) CLSCurationContext *curationContext;
@property (readonly) PGCurationManager *curationManager;
@property (readonly) PGEventLabelingFeaturesFileCache *eventLabelingFeaturesCache;
@property (nonatomic, retain) CLSFocusPeopleCache *focusPeopleIngestCache;
@property (readonly) PGMutableGraph *graph;
@property (readonly) bool isSharedLibraryEnabled;
@property (nonatomic) bool keepsExistingAssetCurationScores;
@property (readonly) NSObject<OS_os_log> *loggingConnection;
@property (nonatomic, readonly) NSDictionary *personActivityMeaningCriteriaDictionaryByMeaningLabel;
@property (readonly) PHPhotoLibrary *photoLibrary;
@property (readonly) CLSSceneTaxonomyHierarchy *sceneTaxonomy;
@property (readonly) NSSet *sharedLibraryParticipants;

+ (unsigned short)edgeDomainForMeaningNodeLabel:(id)arg1 isV1Algorithm:(bool)arg2;
+ (bool)isSharedLibraryEnabledForLibrary:(id)arg1;
+ (unsigned long long)memoryCategoryForLabel:(id)arg1;
+ (id)memoryLabelForCategory:(unsigned long long)arg1;
+ (void)prepareGraphForRebuild:(id)arg1;
+ (void)setLastIncrementalUpdateInvocationDate:(id)arg1 inGraph:(id)arg2;
+ (id)sharedLibraryParticipantsForLibrary:(id)arg1;
+ (double)topTierAestheticScoreForRatio:(double)arg1 inPhotoLibrary:(id)arg2;

- (void).cxx_destruct;
- (id)_anniversaryEventEdgeFromMomentNode:(id)arg1 toPersonNode:(id)arg2 confidence:(double)arg3 insertIfNeededToChangeRequest:(id)arg4;
- (id)_birthdayEventEdgeFromMomentNode:(id)arg1 toPersonNode:(id)arg2 confidence:(double)arg3 insertIfNeededToChangeRequest:(id)arg4;
- (void)_buildSceneNodeCache;
- (void)_cleanGraphBuildCachesAfterUpdate;
- (id)_cleanUpMoments:(id)arg1;
- (void)_connectPersonActivityMeaningNode:(id)arg1 toMomentNode:(id)arg2 withChangeRequest:(id)arg3 representativeAssetUUIDsByPersonLocalIdentifier:(id)arg4;
- (void)_deleteMomentsWithGraphUpdate:(id)arg1;
- (id)_findAlternativeMeaningEdgeToMeaningfulEventNode:(id)arg1 withMeaningNode:(id)arg2;
- (id)_findMeaningEdgeToMeaningfulEventNode:(id)arg1 withMeaningNode:(id)arg2;
- (void)_insertMomentFeaturesForMomentNode:(id)arg1 momentEnvelope:(id)arg2 assets:(id)arg3 photoLibrary:(id)arg4 featureProvider:(id)arg5 atMomentIngest:(bool)arg6 curationContext:(id)arg7;
- (id)_insertMomentNodeForClueCollection:(id)arg1 feeder:(id)arg2 insertedAndUpdatedPersonNodes:(id*)arg3 graphUpdate:(id)arg4 progressBlock:(id /* block */)arg5;
- (id)_momentNodesFromPersonNodes:(id)arg1;
- (void)_persistCurationScores:(id)arg1;
- (void)_persistInteractionScores:(id)arg1;
- (id)_propertiesFromIngestHighlight:(id)arg1;
- (void)_registerInsertedMomentNodes:(id)arg1 inGraphUpdate:(id)arg2;
- (id)_removeInvalidPeopleEventEdgesFromMomentNode:(id)arg1 edgesToUpsert:(id)arg2;
- (unsigned long long)_roiTypeForPlaceInterestType:(id)arg1;
- (bool)_shouldUpdateCurationScore:(double)arg1 withNewCurationScore:(double)arg2;
- (void)_updatePersonActivitiesOfMomentNode:(id)arg1 assets:(id)arg2 graph:(id)arg3 withPositiveSceneCriteriaByValidPersonActivityMeaningLabel:(id)arg4 andActionCriteriaByValidPersonActivityMeaningLabel:(id)arg5 validPersonActivityMeaningLabelByActionValue:(id)arg6 changeRequest:(id)arg7;
- (id)_upsertPeopleEventEdgesFromMomentNode:(id)arg1 matchingResults:(id)arg2 changeRequest:(id)arg3;
- (id)_uuidForPlacemark:(id)arg1 forNodeLabel:(id)arg2;
- (void)addCurationScore:(double)arg1 forAsset:(id)arg2;
- (void)addInteractionScore:(float)arg1 forAsset:(id)arg2;
- (void)addMeaningToMeaningfulEventNode:(id)arg1 meaningLabel:(id)arg2 meaningConfidence:(double)arg3 meaningIsHighPrecision:(bool)arg4 isV1Algorithm:(bool)arg5;
- (void)addMeaningToMeaningfulEventNode:(id)arg1 meaningLabel:(id)arg2 meaningIsReliable:(bool)arg3;
- (void)addParentMeaningHierarchyForMeaningNode:(id)arg1;
- (void)addRelationshipEdgesBetweenPersonNode:(id)arg1 andPersonNode:(id)arg2 forRelationship:(unsigned long long)arg3 confidence:(double)arg4 properties:(id)arg5;
- (void)checkAndInsertPersonIsAroundEdgeFromMeNode:(id)arg1 toMomentNode:(id)arg2 withClueCollection:(id)arg3;
- (void)clearPersonActivityMeaningCriteriaDictionaryByMeaningLabel;
- (void)computeAndPersistAssetStatistics;
- (void)computeAndPersistTopTierAestheticScores;
- (id)connectPublicEventNode:(id)arg1 withBusinessNode:(id)arg2;
- (id)criteriaEvaluatorsByValidPersonActivityMeaningLabelFromAssets:(id)arg1 withPersonActivityMeaningCriteriaDictionaryByMeaningLabel:(id)arg2;
- (id)criteriaEvaluatorsByValidPersonActivityMeaningLabelFromMomentNode:(id)arg1 sceneEdges:(id)arg2 withPersonActivityMeaningCriteriaDictionaryByMeaningLabel:(id)arg3;
- (id)curationContext;
- (id)curationManager;
- (void)deleteAllMeaningNodesAndEdges;
- (void)deleteAllMemoryNodesAndEdges;
- (void)deleteAllMemoryNodesAndEdgesForMemoryCategories:(id)arg1;
- (void)deleteAllMemoryNodesAndEdgesForMemoryCategory:(unsigned long long)arg1;
- (void)deleteHighlightsWithGraphUpdate:(id)arg1;
- (void)deletePersonsWithGraphUpdate:(id)arg1 progressBlock:(id /* block */)arg2;
- (void)enumerateDateComponentsBetweenLocalStartDate:(id)arg1 andLocalEndDate:(id)arg2 usingBlock:(id /* block */)arg3;
- (id)eventLabelingFeaturesCache;
- (id)featureProviderWithProgressBlock:(id /* block */)arg1;
- (id)feederForInsertingAssetCollection:(id)arg1;
- (id)focusPeopleIngestCache;
- (id)graph;
- (void)inferPersonNodeForMeNode:(id)arg1;
- (id)initWithGraph:(id)arg1;
- (id)initWithGraph:(id)arg1 manager:(id)arg2;
- (id)insertAddressNodeWithPlacemark:(id)arg1 location:(id)arg2 relevance:(double)arg3 numberOfAssets:(unsigned long long)arg4 duringDateInterval:(id)arg5 fromMomentNode:(id)arg6;
- (id)insertAddressNodeWithProjectedPlacemark:(id)arg1 atEventLocation:(id)arg2 usingImprovedPlacemark:(bool)arg3;
- (id)insertAddressNodeWithProjectedPlacemark:(id)arg1 atEventLocation:(id)arg2 usingImprovedPlacemark:(bool)arg3 changeRequest:(id)arg4;
- (void)insertAreasOfInterestForProjectedPlacemark:(id)arg1 fromAddressNode:(id)arg2 changeRequest:(id)arg3;
- (void)insertAssetCurationScoreInLibraryForFeeder:(id)arg1 progressBlock:(id /* block */)arg2;
- (id)insertBusiness:(id)arg1 fromMomentNode:(id)arg2;
- (id)insertContactSuggestion:(id)arg1 forPersonNode:(id)arg2 confidence:(double)arg3 edgeProperties:(id)arg4;
- (id)insertDateNodeHierarchyWithDateComponents:(id)arg1;
- (id)insertDateNodesFromEventNode:(id)arg1;
- (id)insertDateNodesFromLocalStartDate:(id)arg1 toLocalEndDate:(id)arg2 fromEventNode:(id)arg3;
- (id)insertDateNodesWithClueCollection:(id)arg1 fromMomentNode:(id)arg2;
- (void)insertHighlightDayGroupsWithGraphUpdate:(id)arg1 progressBlock:(id /* block */)arg2;
- (void)insertHighlightDaysWithGraphUpdate:(id)arg1 progressBlock:(id /* block */)arg2;
- (id)insertHighlightGroupNodeWithHighlight:(id)arg1;
- (id)insertHighlightNodeWithHighlight:(id)arg1;
- (void)insertHighlightsWithGraphUpdate:(id)arg1 progressBlock:(id /* block */)arg2;
- (id)insertHomeWorkNodeForPerson:(id)arg1 personNode:(id)arg2 fromAddressNodes:(id)arg3;
- (void)insertInferredEdgeFromMeNode:(id)arg1 toInferredPersonNode:(id)arg2;
- (id)insertLocationHierarchyWithClueCollection:(id)arg1 fromMomentNode:(id)arg2;
- (void)insertLocationHierarchyWithProjectedPlacemark:(id)arg1 fromAddressNode:(id)arg2 changeRequest:(id)arg3;
- (id)insertLocationMobilityNodeWithClueCollection:(id)arg1 fromMomentNode:(id)arg2;
- (id)insertLocationMobilityNodeWithMobility:(id)arg1 fromMomentNode:(id)arg2 confidence:(double)arg3;
- (void)insertMeAsAuthor:(id)arg1 forMomentNode:(id)arg2;
- (id)insertMePersonNodeForPerson:(id)arg1;
- (id)insertMemoryNodeFromMemory:(id)arg1;
- (id)insertMemoryNodeFromMemory:(id)arg1 changeRequest:(id)arg2;
- (void)insertMomentFeaturesForMomentNode:(id)arg1 momentEnvelope:(id)arg2 assets:(id)arg3 featureProvider:(id)arg4 atMomentIngest:(bool)arg5 curationContext:(id)arg6;
- (void)insertMomentFeaturesForMomentNode:(id)arg1 momentEnvelope:(id)arg2 photoLibrary:(id)arg3 featureProvider:(id)arg4 atMomentIngest:(bool)arg5 curationContext:(id)arg6;
- (id)insertMomentNodeForClueCollection:(id)arg1 feeder:(id)arg2 progressBlock:(id /* block */)arg3;
- (id)insertMomentNodeForMoment:(id)arg1;
- (void)insertMomentsWithGraphUpdate:(id)arg1 progressBlock:(id /* block */)arg2;
- (id)insertMonthDayNodeForMonth:(long long)arg1 day:(long long)arg2;
- (id)insertMusicAlbumNodeWithAlbumTitle:(id)arg1;
- (id)insertMusicGenreNodeWithGenreName:(id)arg1;
- (id)insertMusicSessionNodeWithLocalStartDate:(id)arg1 localEndDate:(id)arg2;
- (id)insertMusicTrackWithTrackTitle:(id)arg1 durationInSeconds:(double)arg2;
- (id)insertOrUpdateMePersonNodeIfNeeded;
- (id)insertOverTheYearsNode;
- (void)insertOwner:(id)arg1 forPets:(id)arg2;
- (id)insertPOINodeWithPlace:(id)arg1 fromMomentNode:(id)arg2 hasInsertedSpecialPOIAmusementParkNode:(bool)arg3;
- (id)insertPOIWithFeeder:(id)arg1 fromMomentNode:(id)arg2 isNearHomeOrWork:(bool)arg3;
- (id)insertPartOfDayNodeWithPartOfDayName:(id)arg1 fromMomentNode:(id)arg2 ratio:(double)arg3;
- (id)insertPartOfDayNodesWithClueCollection:(id)arg1 fromMomentNode:(id)arg2;
- (id)insertPeopleWithClueCollection:(id)arg1 fromMomentNode:(id)arg2 addressNodes:(id)arg3 isNearPeopleAddress:(bool*)arg4;
- (id)insertPersonNodeForPerson:(id)arg1;
- (id)insertPersonNodeForPerson:(id)arg1 fromEventNode:(id)arg2 numberOfAssetsWithPerson:(unsigned long long)arg3 edgeWeight:(float)arg4;
- (id)insertPersonNodeForPerson:(id)arg1 fromMomentNode:(id)arg2 numberOfAssetsWithPerson:(unsigned long long)arg3 importanceInMoment:(double)arg4 includeMergeCandidates:(bool)arg5;
- (void)insertPersonNodeForShareParticipant:(id)arg1;
- (void)insertPersonNodesForShareParticipants:(id)arg1;
- (id)insertPet:(id)arg1;
- (id)insertPresentEdgeFromPersonNode:(id)arg1 toEventNode:(id)arg2 numberOfAssetsWithPerson:(unsigned long long)arg3 edgeWeight:(float)arg4;
- (id)insertPresentEdgeFromPersonNode:(id)arg1 toMomentNode:(id)arg2 numberOfAssetsWithPerson:(unsigned long long)arg3 importance:(double)arg4 includeMergeCandidates:(bool)arg5;
- (id)insertProximityEdgeFromPersonNode:(id)arg1 toMomentNode:(id)arg2;
- (id)insertPublicEvent:(id)arg1 fromEventNode:(id)arg2;
- (id)insertROINodeWithPlace:(id)arg1 fromMomentNode:(id)arg2;
- (id)insertROINodeWithType:(unsigned long long)arg1;
- (id)insertROINodeWithType:(unsigned long long)arg1 fromMomentNode:(id)arg2 confidence:(double)arg3;
- (id)insertROIWithClueCollection:(id)arg1 fromMomentNode:(id)arg2;
- (id)insertScene:(id)arg1 fromMomentNode:(id)arg2;
- (id)insertScene:(id)arg1 fromMomentNode:(id)arg2 changeRequest:(id)arg3;
- (id)insertScenesWithClueCollection:(id)arg1 fromMomentNode:(id)arg2;
- (void)insertShareParticipantsAsAuthors:(id)arg1 forMomentNode:(id)arg2;
- (id)insertSpecialPOIAmusementParkNodeFromMomentNode:(id)arg1;
- (id)insertTimeNodesWithDateComponents:(id)arg1 fromEventNode:(id)arg2;
- (bool)isSharedLibraryEnabled;
- (bool)keepsExistingAssetCurationScores;
- (id)loggingConnection;
- (id)momentForMomentNode:(id)arg1;
- (id)momentNodesWhereMeIsPresent;
- (id)nodesForHighlightsInHighlightDayGroup:(id)arg1;
- (id)nodesForMomentsInHighlight:(id)arg1;
- (void)performBatchUpdatesWithGraphUpdate:(id)arg1 withRecipe:(id)arg2 progressBlock:(id /* block */)arg3;
- (void)performChangeForGraphUpdate:(id)arg1 progressBlock:(id /* block */)arg2;
- (void)performPostprocessingWithGraphUpdate:(id)arg1 withRecipe:(id)arg2 progressBlock:(id /* block */)arg3;
- (void)performPreprocessingWithGraphUpdate:(id)arg1 withRecipe:(id)arg2 progressBlock:(id /* block */)arg3;
- (void)performProcessingSteps:(id)arg1 withGraphUpdate:(id)arg2 progressBlock:(id /* block */)arg3;
- (void)persistPendingScores;
- (void)persistPersonalHighAestheticsThreshold:(double)arg1 personalGoodAestheticsThreshold:(double)arg2;
- (id)personActivityMeaningCriteriaDictionaryByMeaningLabel;
- (id)photoLibrary;
- (void)prepareGraphForRebuild;
- (id)sceneTaxonomy;
- (void)setAgeCategory:(unsigned long long)arg1 onPersonNodeForIdentifier:(unsigned long long)arg2;
- (void)setBiologicalSex:(unsigned long long)arg1 onPersonNodeForIdentifier:(unsigned long long)arg2;
- (void)setCanUseLocationDomain:(bool)arg1;
- (void)setContactsAccessStatus:(bool)arg1;
- (void)setCurationAlgorithmsVersion:(unsigned long long)arg1;
- (void)setFocusPeopleIngestCache:(id)arg1;
- (void)setGeoServiceProviderID:(id)arg1;
- (void)setIsBlocked:(bool)arg1 onAreaNodeForIdentifier:(unsigned long long)arg2;
- (void)setKeepsExistingAssetCurationScores:(bool)arg1;
- (void)setLanguageIdentifiers:(id)arg1;
- (void)setLocaleIdentifier:(id)arg1;
- (void)setPOIIsImproved:(bool)arg1 onPOIEdgeForIdentifier:(unsigned long long)arg2;
- (void)setPopularityScore:(double)arg1 onAreaNodeForIdentifier:(unsigned long long)arg2;
- (id)sharedLibraryParticipants;
- (bool)shouldUpdatePersonRepresentativeAssetUUIDsWithPositiveSceneCriteria:(id)arg1 actionValueString:(id)arg2 assetIsPassingSceneCriteria:(bool)arg3 personLocalIdentifierIsDoingActionInAsset:(bool)arg4;
- (void)updateHighlightNode:(id)arg1 withHighlight:(id)arg2;
- (void)updateHighlightsForHighlightDayGroupNode:(id)arg1 nodesForHighlightsInHighlightDayGroup:(id)arg2;
- (void)updateMomentsForHighlightNode:(id)arg1 nodesForMomentsInHighlight:(id)arg2;
- (void)updatePersonNodeForIdentifier:(unsigned long long)arg1 withPerson:(id)arg2 forPropertyNames:(id)arg3;
- (void)upsertPeopleEventEdgesOfMomentNode:(id)arg1 matchingResults:(id)arg2;

@end
