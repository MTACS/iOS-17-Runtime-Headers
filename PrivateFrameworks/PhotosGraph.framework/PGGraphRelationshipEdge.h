
@interface PGGraphRelationshipEdge : PGGraphOptimizedEdge {
    double  _calendarAttendanceRatio;
    double  _confidence;
    double  _familyHolidayAttendanceRate;
    double  _friendNightOutAttendanceRate;
    double  _friendsAndFamilyTripAttendanceRate;
    unsigned int  _hasAnniversaryDate;
    unsigned int  _hasParentContactName;
    unsigned int  _hasSameFamilyNameAsMePerson;
    unsigned int  _isPersonAgeDifferentThanMeNode;
    unsigned int  _isPersonOldEnoughToBeParentOrGrandparent;
    bool  _isPersonYoungEnoughToBeMeNodeChild;
    unsigned int  _isTopPerson;
    unsigned int  _isTopTwoPersonsSocialGroup;
    double  _momentsAtWorkAppearanceRate;
    unsigned int  _numberOfLoveEmojisExchanged;
    unsigned int  _numberOfMomentsAtHome;
    double  _partnerTripAttendanceRate;
    NSString * _relationship;
    unsigned long long  _status;
    double  _weekendAppearanceRatio;
}

@property (readonly) double calendarAttendanceRatio;
@property (readonly) double confidence;
@property (readonly) double familyHolidayAttendanceRate;
@property (readonly) double friendNightOutAttendanceRate;
@property (readonly) double friendsAndFamilyTripAttendanceRate;
@property (readonly) bool hasAnniversaryDate;
@property (readonly) bool hasParentContactName;
@property (readonly) bool hasSameFamilyNameAsMePerson;
@property (readonly) bool isPersonAgeDifferentThanMeNode;
@property (readonly) bool isPersonOldEnoughToBeParentOrGrandparent;
@property (readonly) bool isPersonYoungEnoughToBeMeNodeChild;
@property (readonly) bool isTopPerson;
@property (readonly) bool isTopTwoPersonsSocialGroup;
@property (readonly) double momentsAtWorkAppearanceRate;
@property (readonly) unsigned long long numberOfLoveEmojisExchanged;
@property (readonly) unsigned long long numberOfMomentsAtHome;
@property (readonly) double partnerTripAttendanceRate;
@property (readonly) NSString *relationship;
@property (readonly) unsigned long long status;
@property (readonly) double weekendAppearanceRatio;

+ (id)acquaintanceFilter;
+ (id)brotherFilter;
+ (id)childFilter;
+ (id)confirmedRelationshipFilter;
+ (id)coworkerFilter;
+ (id)coworkerSocialGroupFilter;
+ (id)daughterFilter;
+ (id)familyFilter;
+ (id)familyRelationshipLabels;
+ (id)familySocialGroupFilter;
+ (id)fatherFilter;
+ (id)filter;
+ (id)filterWithConfirmedRelationship:(id)arg1;
+ (id)filterWithInferredRelationship:(id)arg1;
+ (id)filterWithRelationship:(id)arg1;
+ (id)filterWithRelationship:(id)arg1 status:(unsigned long long)arg2;
+ (id)friendFilter;
+ (id)inferredAcquaintanceFilter;
+ (id)inferredBrotherFilter;
+ (id)inferredChildFilter;
+ (id)inferredCoworkerFilter;
+ (id)inferredCoworkerSocialGroupFilter;
+ (id)inferredDaughterFilter;
+ (id)inferredFamilyFilter;
+ (id)inferredFamilySocialGroupFilter;
+ (id)inferredFatherFilter;
+ (id)inferredFriendFilter;
+ (id)inferredMotherFilter;
+ (id)inferredParentFilter;
+ (id)inferredPartnerFilter;
+ (id)inferredRelationshipFilter;
+ (id)inferredSisterFilter;
+ (id)inferredSonFilter;
+ (id)inferredVipFilter;
+ (id)motherFilter;
+ (id)parentFilter;
+ (id)partnerFilter;
+ (id)sisterFilter;
+ (id)sonFilter;
+ (id)supportedRelationshipLabels;
+ (id)vipFilter;

- (void).cxx_destruct;
- (id)_readableStringForProperty:(id)arg1;
- (double)calendarAttendanceRatio;
- (double)confidence;
- (unsigned short)domain;
- (id)edgeDescription;
- (double)familyHolidayAttendanceRate;
- (double)friendNightOutAttendanceRate;
- (double)friendsAndFamilyTripAttendanceRate;
- (bool)hasAnniversaryDate;
- (bool)hasParentContactName;
- (bool)hasProperties:(id)arg1;
- (bool)hasSameFamilyNameAsMePerson;
- (id)initWithLabel:(id)arg1 sourceNode:(id)arg2 targetNode:(id)arg3 domain:(unsigned short)arg4 properties:(id)arg5;
- (id)initWithLabel:(id)arg1 sourceNode:(id)arg2 targetNode:(id)arg3 domain:(unsigned short)arg4 weight:(float)arg5 properties:(id)arg6;
- (id)initWithRelationship:(id)arg1 fromPersonNode:(id)arg2 toPersonNode:(id)arg3 confidence:(double)arg4 status:(unsigned long long)arg5 familyHolidayAttendanceRate:(double)arg6 hasParentContactName:(bool)arg7 hasSameFamilyNameAsMePerson:(bool)arg8 numberOfMomentsAtHome:(unsigned long long)arg9 hasAnniversaryDate:(bool)arg10 isTopTwoPersonsSocialGroup:(bool)arg11 numberOfLoveEmojisExchanged:(unsigned long long)arg12 isTopPerson:(bool)arg13 friendNightOutAttendanceRate:(double)arg14 partnerTripAttendanceRate:(double)arg15 friendsAndFamilyTripAttendanceRate:(double)arg16 weekendAppearanceRatio:(double)arg17 momentsAtWorkAppearanceRate:(double)arg18 calendarAttendanceRatio:(double)arg19 isPersonAgeDifferentThanMeNode:(bool)arg20 isPersonOldEnoughToBeParentOrGrandparent:(bool)arg21 isPersonYoungEnoughToBeMeNodeChild:(bool)arg22;
- (bool)isPersonAgeDifferentThanMeNode;
- (bool)isPersonOldEnoughToBeParentOrGrandparent;
- (bool)isPersonYoungEnoughToBeMeNodeChild;
- (bool)isTopPerson;
- (bool)isTopTwoPersonsSocialGroup;
- (id)label;
- (double)momentsAtWorkAppearanceRate;
- (unsigned long long)numberOfLoveEmojisExchanged;
- (unsigned long long)numberOfMomentsAtHome;
- (double)partnerTripAttendanceRate;
- (id)propertyDictionary;
- (id)relationship;
- (unsigned long long)status;
- (double)weekendAppearanceRatio;

@end
