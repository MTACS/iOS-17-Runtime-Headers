
@interface PGPhotosChallengeMetricEvent : PGAbstractMetricEvent {
    unsigned long long  _algorithmVersion;
    CLSCurationContext * _curationContext;
    CLSCurationSession * _curationSession;
    PGPrecisionRecallEvaluation * _evaluation;
    PGEventLabelingConfiguration * _eventLabelingConfiguration;
    unsigned long long  _graphSchemaVersion;
    PGPhotosChallengeMetricEventFetchHelper * _metricsCache;
    NSDictionary * _payload;
    NSString * _photoLibrarySize;
    unsigned long long  _photosModelVersion;
    unsigned short  _questionMetricType;
    NSString * _questionTypeString;
    unsigned long long  _questionVersion;
    PGPhotosChallengeMetricEvent * _subMetricEvent;
    PGManagerWorkingContext * _workingContext;
}

@property (nonatomic) unsigned long long algorithmVersion;
@property (nonatomic, retain) CLSCurationContext *curationContext;
@property (nonatomic, retain) CLSCurationSession *curationSession;
@property (nonatomic, retain) PGPrecisionRecallEvaluation *evaluation;
@property (nonatomic) unsigned long long graphSchemaVersion;
@property (nonatomic, retain) PGPhotosChallengeMetricEventFetchHelper *metricsCache;
@property (nonatomic, readonly) NSString *photoLibrarySize;
@property (nonatomic) unsigned long long photosModelVersion;
@property (nonatomic) unsigned short questionMetricType;
@property (nonatomic, retain) NSString *questionTypeString;
@property (nonatomic) unsigned long long questionVersion;

+ (bool)_isHighPrecisionCityscapeAsset:(id)arg1;
+ (bool)_isHighPrecisionLandscapeAsset:(id)arg1;
+ (id)_isVIPStringForResult:(bool)arg1;
+ (id)_passedFilteringStringForResult:(bool)arg1;
+ (id)_passedHighPrecisionStringForResult:(bool)arg1;
+ (unsigned long long)algorithmVersionFromQuestionMetricType:(unsigned short)arg1 withEventLabelingConfiguration:(id)arg2;
+ (id)allMetricEventsWithGraphManager:(id)arg1;
+ (unsigned long long)meaningInferenceAlgorithmForQuestionMetricType:(unsigned short)arg1 withEventLabelingConfiguration:(id)arg2;
+ (id)meaningLabelFromMeaningQuestionMetricType:(unsigned short)arg1;
+ (id)personActivityMeaningLabelFromMeaningQuestionMetricType:(unsigned short)arg1;
+ (id)questionEntityTypesFromQuestionMetricType:(unsigned short)arg1;
+ (unsigned short)questionTypeFromQuestionMetricType:(unsigned short)arg1;
+ (id)relationshipLabelFromRelationshipQuestionMetricType:(unsigned short)arg1;
+ (id)stringFromQuestionMetricType:(unsigned short)arg1;
+ (unsigned short)wallpaperSuggestionSubtypeForQuestionMetricType:(unsigned short)arg1;

- (void).cxx_destruct;
- (id)_ageCategoryInferenceResultsForAgeCategoryByPersonUUIDs:(id)arg1;
- (id)_businessInferenceResultsForBusinessIdByAssetIds:(id)arg1;
- (id)_currentPetInferenceResultsForPetUUIDs:(id)arg1;
- (void)_deleteOutdatedPetQuestionsWithValidPetUUIDs:(id)arg1;
- (id)_featuredPhotoInferenceResultsForAnswerDateByAssetIds:(id)arg1 questionMetricType:(unsigned short)arg2;
- (id)_fetchPersonFromAsset:(id)arg1 detectionType:(short)arg2;
- (id)_frequentLocationInferenceResultsForLocationByAssetIds:(id)arg1 locationType:(id)arg2;
- (void)_gatherDeferredSuggestionInferencesForQuestions:(id)arg1 momentUUIDS:(id)arg2 inferenceResults:(id)arg3 reasonResultByAssetIdentifier:(id)arg4 progressBlock:(id /* block */)arg5;
- (void)_gatherMetricsForAgeCategoryQuestions:(id)arg1 progressBlock:(id /* block */)arg2;
- (void)_gatherMetricsForBusinessQuestions:(id)arg1 progressBlock:(id /* block */)arg2;
- (void)_gatherMetricsForCameraLibrarySwitchQuestions:(id)arg1 progressBlock:(id /* block */)arg2;
- (void)_gatherMetricsForExhaustiveMomentLabelingQuestions:(id)arg1 questionMetricType:(unsigned short)arg2 isEventLabelingMetricEvent:(bool)arg3 progressBlock:(id /* block */)arg4;
- (void)_gatherMetricsForExternalAssetRelevanceQuestions:(id)arg1 questionMetricType:(unsigned short)arg2 progressBlock:(id /* block */)arg3;
- (void)_gatherMetricsForFeaturedPhotoQuestions:(id)arg1 questionMetricType:(unsigned short)arg2 progressBlock:(id /* block */)arg3;
- (void)_gatherMetricsForFrequentLocationQuestions:(id)arg1 questionMetricType:(unsigned short)arg2 progressBlock:(id /* block */)arg3;
- (void)_gatherMetricsForHighlightTitlingQuestions:(id)arg1 progressBlock:(id /* block */)arg2;
- (void)_gatherMetricsForHolidayQuestions:(id)arg1 progressBlock:(id /* block */)arg2;
- (void)_gatherMetricsForLocationRepresentativeAssetQuestions:(id)arg1 questionMetricType:(unsigned short)arg2 progressBlock:(id /* block */)arg3;
- (void)_gatherMetricsForMeaningQuestions:(id)arg1 questionMetricType:(unsigned short)arg2 progressBlock:(id /* block */)arg3;
- (void)_gatherMetricsForMemoryQuestions:(id)arg1 questionMetricType:(unsigned short)arg2 progressBlock:(id /* block */)arg3;
- (void)_gatherMetricsForNamingQuestions:(id)arg1 progressBlock:(id /* block */)arg2;
- (void)_gatherMetricsForPersonActivityMeaningQuestions:(id)arg1 questionMetricType:(unsigned short)arg2 progressBlock:(id /* block */)arg3;
- (void)_gatherMetricsForPetKnowledgeQuestions:(id)arg1 progressBlock:(id /* block */)arg2;
- (void)_gatherMetricsForPetQuestions:(id)arg1 progressBlock:(id /* block */)arg2;
- (void)_gatherMetricsForPublicEventQuestions:(id)arg1 progressBlock:(id /* block */)arg2;
- (void)_gatherMetricsForRelationshipQuestions:(id)arg1 questionMetricType:(unsigned short)arg2 progressBlock:(id /* block */)arg3;
- (void)_gatherMetricsForSharedLibraryAssetsQuestions:(id)arg1 progressBlock:(id /* block */)arg2;
- (void)_gatherMetricsForSharedLibraryStartQuestions:(id)arg1 progressBlock:(id /* block */)arg2;
- (void)_gatherMetricsForSyndicatedAssetsQuestions:(id)arg1 progressBlock:(id /* block */)arg2;
- (void)_gatherMetricsForTripKeyQuestions:(id)arg1 progressBlock:(id /* block */)arg2;
- (void)_gatherMetricsForTripTitlingQuestions:(id)arg1 progressBlock:(id /* block */)arg2;
- (void)_gatherMetricsForWallpaperQuestions:(id)arg1 questionMetricType:(unsigned short)arg2 progressBlock:(id /* block */)arg3;
- (void)_gatherNearLiveSuggestionInferencesForQuestions:(id)arg1 inferenceResults:(id)arg2 reasonResultByAssetIdentifier:(id)arg3 progressBlock:(id /* block */)arg4;
- (id)_getInferredReasonFromMatchedConditions:(id)arg1 withFallbackReason:(id)arg2;
- (id)_groundTruthByAssetIdentifiersFromQuestions:(id)arg1;
- (id)_groundTruthByPersonUUIDFromQuestions:(id)arg1;
- (id)_groundTruthForAgeCategoryFromQuestions:(id)arg1;
- (id)_groundTruthForBusinessFromQuestions:(id)arg1;
- (id)_groundTruthForCurrentPetInferenceFromQuestions:(id)arg1;
- (id)_groundTruthForFeaturedPhotoFromQuestions:(id)arg1;
- (id)_groundTruthForFrequentLocationFromQuestions:(id)arg1;
- (id)_groundTruthForHolidayFromQuestions:(id)arg1;
- (id)_groundTruthForNamingFromQuestions:(id)arg1;
- (id)_groundTruthForPublicEventFromQuestions:(id)arg1;
- (id)_groundTruthForTitlingQuestions:(id)arg1 questionType:(unsigned short)arg2;
- (id)_groundTruthForTripTitlingQuestions:(id)arg1;
- (id)_holidayInferenceResultsForHolidayNameByAssetIds:(id)arg1;
- (bool)_inferenceResultForPersonNode:(id)arg1 questionMetricType:(unsigned short)arg2;
- (id)_inferredReasonForLocationRepresentativeAssets:(id)arg1;
- (id)_inferredResultsForLocationRepresentativeAssets:(id)arg1;
- (id)_inferredResultsForTitlingQuestionsEntityIdentifiers:(id)arg1;
- (id)_locationRepresentativeAssetFromQuestion:(id)arg1;
- (id)_locationRepresentativeAssetsGroundTruthByAssetIdentifiersFromQuestions:(id)arg1;
- (id)_meaningInferenceResultsForMeaningLabel:(id)arg1 assetIds:(id)arg2;
- (id)_meaningInferenceResultsForMeaningLabel:(id)arg1 momentUUIDs:(id)arg2 isEventLabelingMetricEvent:(bool)arg3;
- (id)_meaningLabelsOfMomentNode:(id)arg1 forMeaningLabel:(id)arg2 isEventLabelingMetricEvent:(bool)arg3;
- (id)_namingInferenceResultsForContactIdentifierByPersonUUIDs:(id)arg1;
- (id)_personActivityMeaningInferenceResultsForPersonActivityMeaningLabel:(id)arg1 assetIds:(id)arg2;
- (id)_publicEventInferenceResultsForPublicEventIdByAssetIds:(id)arg1;
- (id)_reasonResultByAssetEntityIdentifierForTitlingQuestions:(id)arg1 questionType:(unsigned short)arg2;
- (id)_reasonResultByAssetSyndicationIdentifierForQuestions:(id)arg1;
- (id)_reasonResultsForQuestions:(id)arg1 inferenceResults:(id)arg2 inferenceReasons:(id)arg3;
- (id)_relationshipInferenceResultsForQuestionMetricType:(unsigned short)arg1 personUUIDs:(id)arg2;
- (id)_syndicatedAssetFromQuestion:(id)arg1;
- (id)_syndicatedAssetsGroundTruthByAssetIdentifiersFromQuestions:(id)arg1;
- (id)_syndicatedAssetsInferenceResultsForAssetSyndicationIdentifiers:(id)arg1;
- (id)_tripTitlingReasonResultByAssetEntityIdentifierForQuestions:(id)arg1;
- (id)_vipPersonIdentifiersWithCurationContext:(id)arg1;
- (id)_vipPetIdentifiersWithCurationContext:(id)arg1;
- (unsigned long long)algorithmVersion;
- (id)curationContext;
- (id)curationSession;
- (id)evaluation;
- (void)gatherMetricsWithProgressBlock:(id /* block */)arg1;
- (unsigned long long)graphSchemaVersion;
- (id)groundTruthByMomentUUIDFromExhaustiveMomentLabelingQuestions:(id)arg1 meaningLabel:(id)arg2 withMetricsCache:(id)arg3;
- (id)identifier;
- (id)initWithWorkingContext:(id)arg1 questionMetricType:(unsigned short)arg2 metricEventFetchHelper:(id)arg3;
- (id)memoryCategorySubCategoryByQuestionMetricType;
- (id)metricsCache;
- (id)payload;
- (id)payloadForVerification;
- (id)photoLibrarySize;
- (unsigned long long)photosModelVersion;
- (unsigned short)questionMetricType;
- (id)questionTypeString;
- (unsigned long long)questionVersion;
- (void)setAlgorithmVersion:(unsigned long long)arg1;
- (void)setCurationContext:(id)arg1;
- (void)setCurationSession:(id)arg1;
- (void)setEvaluation:(id)arg1;
- (void)setGraphSchemaVersion:(unsigned long long)arg1;
- (void)setMetricsCache:(id)arg1;
- (void)setPhotosModelVersion:(unsigned long long)arg1;
- (void)setQuestionMetricType:(unsigned short)arg1;
- (void)setQuestionTypeString:(id)arg1;
- (void)setQuestionVersion:(unsigned long long)arg1;
- (void)setSubMetricEvent:(id)arg1;

@end
