
@interface NTKComplicationViewController : UIViewController <NTKComplicationDisplayWrapperViewBackgroundObserver, NTKWidgetDescriptorProviderObserver> {
    NTKComplication * _complication;
    NTKComplicationController * _controller;
    <NTKComplicationViewControllerDelegate> * _delegate;
    CLKDevice * _device;
    bool  _forceLivePresentationState;
    NSString * _launchLocation;
    NTKMonochromeModel * _monochromeModel;
    unsigned long long  _presentationState;
    bool  _showSnapshot;
    bool  _showsInLowLuminance;
    bool  _showsWhenLocked;
    NTKComplicationStyle * _style;
    bool  _supportsTinting;
    bool  _tapEnabled;
    NTKComplicationVariant * _variant;
    unsigned long long  _visibility;
    NSString * _widgetConfigurationIdentifier;
    CHSWidgetDescriptor * _widgetDescriptor;
    NTKComplicationDisplayWrapperView * _wrapperView;
}

@property (nonatomic, readonly) CLKComplicationBackgroundDescriptor *backgroundDescriptor;
@property (nonatomic, copy) NTKComplication *complication;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <NTKComplicationViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) CLKDevice *device;
@property (nonatomic) bool forceLivePresentationState;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSString *launchLocation;
@property (nonatomic, readonly) unsigned long long presentationState;
@property (nonatomic) bool showSnapshot;
@property (nonatomic) bool showsInLowLuminance;
@property (nonatomic) bool showsWhenLocked;
@property (nonatomic, copy) NTKComplicationStyle *style;
@property (readonly) Class superclass;
@property (nonatomic) bool supportsTinting;
@property (nonatomic) bool tapEnabled;
@property (nonatomic, readonly, copy) NTKComplicationVariant *variant;
@property (nonatomic) unsigned long long visibility;
@property (nonatomic, copy) NSString *widgetConfigurationIdentifier;

- (void).cxx_destruct;
- (void)_applyPresentationState;
- (void)_applyStyleIfPossible;
- (void)_applyStyleToDisplay:(id)arg1;
- (void)_applyVisibility;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })_contentTransform;
- (id)_effectiveMetrics;
- (void)_recreateDisplayIfNecessary;
- (void)_updateController;
- (void)_updateControllerDataMode;
- (void)_updatePresentationState;
- (void)_updateWidgetDescriptorForComplication:(id)arg1 withProvider:(id)arg2;
- (id)backgroundDescriptor;
- (id)complication;
- (void)dealloc;
- (id)delegate;
- (void)descriptorsDidChangeForDescriptorProvider:(id)arg1;
- (id)device;
- (void)displayWrapperTemplateBackgroundChanged;
- (bool)forceLivePresentationState;
- (id)initWithVariant:(id)arg1 device:(id)arg2 complication:(id)arg3;
- (id)initWithVariant:(id)arg1 device:(id)arg2 widgetComplication:(id)arg3 widgetConfigurationIdentifier:(id)arg4;
- (id)launchLocation;
- (void)loadView;
- (void)performTapAction;
- (unsigned long long)presentationState;
- (void)setComplication:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setForceLivePresentationState:(bool)arg1;
- (void)setLaunchLocation:(id)arg1;
- (void)setShowSnapshot:(bool)arg1;
- (void)setShowsInLowLuminance:(bool)arg1;
- (void)setShowsWhenLocked:(bool)arg1;
- (void)setStyle:(id)arg1;
- (void)setSupportsTinting:(bool)arg1;
- (void)setTapEnabled:(bool)arg1;
- (void)setVisibility:(unsigned long long)arg1;
- (void)setWidgetConfigurationIdentifier:(id)arg1;
- (bool)showSnapshot;
- (bool)showsInLowLuminance;
- (bool)showsWhenLocked;
- (id)style;
- (bool)supportsTinting;
- (bool)tapEnabled;
- (id)variant;
- (void)viewDidLayoutSubviews;
- (unsigned long long)visibility;
- (id)widgetConfigurationIdentifier;

@end
