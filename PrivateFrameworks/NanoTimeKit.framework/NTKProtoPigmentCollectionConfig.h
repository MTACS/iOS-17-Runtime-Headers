
@interface NTKProtoPigmentCollectionConfig : PBCodable <NSCopying> {
    NSString * _collectionOverride;
    NSString * _defaultColorOptionName;
    NSString * _defaultConfigAttributeName;
    NSMutableArray * _defaultGalleryColorNames;
    bool  _excludesDuotone;
    NSMutableArray * _exclusions;
    NSString * _fallbackDefaultColorOptionName;
    NSString * _featureFlag;
    struct { 
        unsigned int excludesDuotone : 1; 
        unsigned int isAddable : 1; 
        unsigned int sensitivity : 1; 
        unsigned int sortedByHue : 1; 
        unsigned int supportsSlider : 1; 
    }  _has;
    bool  _isAddable;
    NSMutableArray * _migrations;
    bool  _sensitivity;
    bool  _sortedByHue;
    bool  _supportsSlider;
}

@property (nonatomic, retain) NSString *collectionOverride;
@property (nonatomic, retain) NSString *defaultColorOptionName;
@property (nonatomic, retain) NSString *defaultConfigAttributeName;
@property (nonatomic, retain) NSMutableArray *defaultGalleryColorNames;
@property (nonatomic) bool excludesDuotone;
@property (nonatomic, retain) NSMutableArray *exclusions;
@property (nonatomic, retain) NSString *fallbackDefaultColorOptionName;
@property (nonatomic, retain) NSString *featureFlag;
@property (nonatomic, readonly) bool hasCollectionOverride;
@property (nonatomic, readonly) bool hasDefaultColorOptionName;
@property (nonatomic, readonly) bool hasDefaultConfigAttributeName;
@property (nonatomic) bool hasExcludesDuotone;
@property (nonatomic, readonly) bool hasFallbackDefaultColorOptionName;
@property (nonatomic, readonly) bool hasFeatureFlag;
@property (nonatomic) bool hasIsAddable;
@property (nonatomic) bool hasSensitivity;
@property (nonatomic) bool hasSortedByHue;
@property (nonatomic) bool hasSupportsSlider;
@property (nonatomic) bool isAddable;
@property (nonatomic, retain) NSMutableArray *migrations;
@property (nonatomic) bool sensitivity;
@property (nonatomic) bool sortedByHue;
@property (nonatomic) bool supportsSlider;

+ (Class)defaultGalleryColorNamesType;
+ (Class)exclusionsType;
+ (Class)migrationType;

- (void).cxx_destruct;
- (void)addDefaultGalleryColorNames:(id)arg1;
- (void)addExclusions:(id)arg1;
- (void)addMigration:(id)arg1;
- (void)clearDefaultGalleryColorNames;
- (void)clearExclusions;
- (void)clearMigrations;
- (id)collectionOverride;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)defaultColorOptionName;
- (id)defaultConfigAttributeName;
- (id)defaultGalleryColorNames;
- (id)defaultGalleryColorNamesAtIndex:(unsigned long long)arg1;
- (unsigned long long)defaultGalleryColorNamesCount;
- (id)description;
- (id)dictionaryRepresentation;
- (bool)excludesDuotone;
- (id)exclusions;
- (id)exclusionsAtIndex:(unsigned long long)arg1;
- (unsigned long long)exclusionsCount;
- (id)fallbackDefaultColorOptionName;
- (id)featureFlag;
- (bool)hasCollectionOverride;
- (bool)hasDefaultColorOptionName;
- (bool)hasDefaultConfigAttributeName;
- (bool)hasExcludesDuotone;
- (bool)hasFallbackDefaultColorOptionName;
- (bool)hasFeatureFlag;
- (bool)hasIsAddable;
- (bool)hasSensitivity;
- (bool)hasSortedByHue;
- (bool)hasSupportsSlider;
- (unsigned long long)hash;
- (bool)isAddable;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (id)migrationAtIndex:(unsigned long long)arg1;
- (id)migrations;
- (unsigned long long)migrationsCount;
- (bool)readFrom:(id)arg1;
- (bool)sensitivity;
- (void)setCollectionOverride:(id)arg1;
- (void)setDefaultColorOptionName:(id)arg1;
- (void)setDefaultConfigAttributeName:(id)arg1;
- (void)setDefaultGalleryColorNames:(id)arg1;
- (void)setExcludesDuotone:(bool)arg1;
- (void)setExclusions:(id)arg1;
- (void)setFallbackDefaultColorOptionName:(id)arg1;
- (void)setFeatureFlag:(id)arg1;
- (void)setHasExcludesDuotone:(bool)arg1;
- (void)setHasIsAddable:(bool)arg1;
- (void)setHasSensitivity:(bool)arg1;
- (void)setHasSortedByHue:(bool)arg1;
- (void)setHasSupportsSlider:(bool)arg1;
- (void)setIsAddable:(bool)arg1;
- (void)setMigrations:(id)arg1;
- (void)setSensitivity:(bool)arg1;
- (void)setSortedByHue:(bool)arg1;
- (void)setSupportsSlider:(bool)arg1;
- (bool)sortedByHue;
- (bool)supportsSlider;
- (void)writeTo:(id)arg1;

@end
