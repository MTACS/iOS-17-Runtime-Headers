
@interface NTKDialView : UIView {
    double  _angleOffset;
    id /* block */  _angleProvider;
    double  _contentDiameter;
    double  _contentInset;
    CLKDevice * _device;
    double  _diameter;
    bool  _disableLayout;
    NSNumber * _hidingMaskEndAngle;
    NSNumber * _hidingMaskStartAngle;
    id /* block */  _markerRotationProvider;
    NSMutableArray * _markers;
    id /* block */  _markersFactory;
    NSIndexSet * _markersToRotateIndexSet;
    bool  _needsLayoutMarkers;
    unsigned long long  _numberOfMarkers;
    bool  _shouldPixelAlignCenterPoints;
    bool  _shouldRotateMarkers;
}

@property (nonatomic) double angleOffset;
@property (nonatomic, copy) id /* block */ angleProvider;
@property (nonatomic) double contentDiameter;
@property (nonatomic) double contentInset;
@property (nonatomic, retain) CLKDevice *device;
@property (nonatomic) double diameter;
@property (nonatomic) bool disableLayout;
@property (nonatomic, retain) NSNumber *hidingMaskEndAngle;
@property (nonatomic, retain) NSNumber *hidingMaskStartAngle;
@property (nonatomic, copy) id /* block */ markerRotationProvider;
@property (nonatomic, retain) NSMutableArray *markers;
@property (nonatomic, copy) id /* block */ markersFactory;
@property (nonatomic, retain) NSIndexSet *markersToRotateIndexSet;
@property (nonatomic) bool needsLayoutMarkers;
@property (nonatomic) unsigned long long numberOfMarkers;
@property (nonatomic) bool shouldPixelAlignCenterPoints;
@property (nonatomic) bool shouldRotateMarkers;

- (void).cxx_destruct;
- (void)_layoutCurvedLabel:(id)arg1 rotationAngle:(double)arg2;
- (double)angleForIndex:(double)arg1;
- (double)angleOffset;
- (id /* block */)angleProvider;
- (struct CGPoint { double x1; double x2; })centerPointForAngle:(double)arg1 radius:(long long)arg2;
- (double)contentDiameter;
- (double)contentInset;
- (id)device;
- (double)diameter;
- (bool)disableLayout;
- (void)enumerateMarkers:(id /* block */)arg1;
- (id)hidingMaskEndAngle;
- (id)hidingMaskStartAngle;
- (id)initWithNumberOfMarkers:(unsigned long long)arg1 markersFactory:(id /* block */)arg2;
- (id)initWithNumberOfMarkers:(unsigned long long)arg1 markersFactory:(id /* block */)arg2 angleProvider:(id /* block */)arg3;
- (void)layoutMarkers;
- (void)layoutSubviews;
- (id)markerAtIndex:(unsigned long long)arg1;
- (id /* block */)markerRotationProvider;
- (id)markers;
- (id /* block */)markersFactory;
- (id)markersToRotateIndexSet;
- (bool)needsLayoutMarkers;
- (unsigned long long)numberOfMarkers;
- (struct CGPoint { double x1; double x2; })positionForMarkerAtIndex:(unsigned long long)arg1;
- (void)reloadMarkers;
- (void)replaceMarker:(id)arg1 atIndex:(long long)arg2;
- (unsigned long long)searchForClosestIndexAtAngle:(double)arg1;
- (double)searchForClosestMarkerAngleAtAngle:(double)arg1;
- (void)setAngleOffset:(double)arg1;
- (void)setAngleProvider:(id /* block */)arg1;
- (void)setContentDiameter:(double)arg1;
- (void)setContentInset:(double)arg1;
- (void)setDevice:(id)arg1;
- (void)setDiameter:(double)arg1;
- (void)setDisableLayout:(bool)arg1;
- (void)setHidingMaskEndAngle:(id)arg1;
- (void)setHidingMaskStartAngle:(id)arg1;
- (void)setMarkerRotationProvider:(id /* block */)arg1;
- (void)setMarkers:(id)arg1;
- (void)setMarkersFactory:(id /* block */)arg1;
- (void)setMarkersToRotateIndexSet:(id)arg1;
- (void)setNeedsLayoutMarkers:(bool)arg1;
- (void)setNumberOfMarkers:(unsigned long long)arg1;
- (void)setShouldPixelAlignCenterPoints:(bool)arg1;
- (void)setShouldRotateMarkers:(bool)arg1;
- (bool)shouldHideMarkerAtIndex:(long long)arg1;
- (bool)shouldPixelAlignCenterPoints;
- (bool)shouldRotateMarkers;
- (double)totalDiameter;
- (void)updateMarkersVisibility;

@end
