
@interface NTKOlympusTimeContentView : UIView <CLKTimeFormatterObserver, NTKTimeView> {
    double  _analogStyleFraction;
    double  _analogStyleSwooshPositionFraction;
    UIView * _circularDigitsContainerView;
    UIButton * _circularLogoButton;
    UIImage * _circularLogoImage;
    NTKVictoryLabel * _circularLowerTimeLabel;
    NTKVictoryLabel * _circularUpperTimeLabel;
    NTKOlympusColorPalette * _colorPalette;
    UIView * _contentView;
    UIColor * _currentBackgroundColor;
    UIColor * _currentForegroundColor;
    UIColor * _currentLogoColor;
    <NTKOlympusContentViewDelegate> * _delegate;
    CLKDevice * _device;
    unsigned long long  _dial;
    double  _dialFraction;
    double  _digitalStyleFraction;
    NTKVictoryLabel * _fullscreenDigitalLowerTimeLabel;
    NTKVictoryLabel * _fullscreenDigitalUpperTimeLabel;
    UIView * _fullscreenDigitsContainerView;
    NTKVictoryLabel * _fullscreenHybridLowerTimeLabel;
    NTKVictoryTimeLabel * _fullscreenHybridUpperTimeLabel;
    UIButton * _fullscreenLogoButton;
    bool  _invertedColors;
    struct CGSize { 
        double width; 
        double height; 
    }  _logoImageSizeForCircularDial;
    double  _olympusAnalogStyleFraction;
    double  _olympusDigitalLabelsPositionFraction;
    double  _olympusDigitalStyleFraction;
    <NTKOlympusColorPalette> * _palette;
    unsigned long long  _style;
    CLKTimeFormatter * _timeFormatter;
    bool  _useSmallFont;
    bool  frozen;
}

@property (nonatomic) double analogStyleFraction;
@property (nonatomic) double analogStyleSwooshPositionFraction;
@property (nonatomic, retain) UIView *circularDigitsContainerView;
@property (nonatomic, retain) UIButton *circularLogoButton;
@property (nonatomic, retain) UIImage *circularLogoImage;
@property (nonatomic, retain) NTKVictoryLabel *circularLowerTimeLabel;
@property (nonatomic, retain) NTKVictoryLabel *circularUpperTimeLabel;
@property (nonatomic, retain) NTKOlympusColorPalette *colorPalette;
@property (nonatomic, retain) UIView *contentView;
@property (nonatomic, retain) UIColor *currentBackgroundColor;
@property (nonatomic, retain) UIColor *currentForegroundColor;
@property (nonatomic, retain) UIColor *currentLogoColor;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <NTKOlympusContentViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) CLKDevice *device;
@property (nonatomic) unsigned long long dial;
@property (nonatomic) double dialFraction;
@property (nonatomic) double digitalStyleFraction;
@property (getter=isFrozen, nonatomic) bool frozen;
@property (nonatomic, retain) NTKVictoryLabel *fullscreenDigitalLowerTimeLabel;
@property (nonatomic, retain) NTKVictoryLabel *fullscreenDigitalUpperTimeLabel;
@property (nonatomic, retain) UIView *fullscreenDigitsContainerView;
@property (nonatomic, retain) NTKVictoryLabel *fullscreenHybridLowerTimeLabel;
@property (nonatomic, retain) NTKVictoryTimeLabel *fullscreenHybridUpperTimeLabel;
@property (nonatomic, retain) UIButton *fullscreenLogoButton;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool invertedColors;
@property (nonatomic) struct CGSize { double x1; double x2; } logoImageSizeForCircularDial;
@property (nonatomic) double olympusAnalogStyleFraction;
@property (nonatomic) double olympusDigitalLabelsPositionFraction;
@property (nonatomic) double olympusDigitalStyleFraction;
@property (nonatomic, retain) <NTKOlympusColorPalette> *palette;
@property (nonatomic) unsigned long long style;
@property (readonly) Class superclass;
@property (nonatomic, retain) CLKTimeFormatter *timeFormatter;
@property (nonatomic) bool useSmallFont;

+ (double)scaleForViewDuringColorChangeTransitionWithFraction:(double)arg1;

- (void).cxx_destruct;
- (void)_applyAnimationPopTransitionWithFraction:(double)arg1;
- (void)_applyTransitionFraction:(double)arg1 fromColor:(id)arg2 toColor:(id)arg3 fromBackgroundColor:(id)arg4 toBackgroundColor:(id)arg5 fromLogoColor:(id)arg6 toLogoColor:(id)arg7;
- (void)_applyTransitionFraction:(double)arg1 fromTextColor:(id)arg2 toTextColor:(id)arg3;
- (double)analogStyleFraction;
- (double)analogStyleSwooshPositionFraction;
- (void)applyTransitionFraction:(double)arg1 fromColorPalette:(id)arg2 toColorPalette:(id)arg3 animateElements:(bool)arg4;
- (void)applyTransitionFraction:(double)arg1 fromDial:(unsigned long long)arg2 toDial:(unsigned long long)arg3;
- (void)applyTransitionFraction:(double)arg1 fromStyle:(unsigned long long)arg2 toStyle:(unsigned long long)arg3;
- (id)circularDigitsContainerView;
- (id)circularLogoButton;
- (id)circularLogoImage;
- (id)circularLowerTimeLabel;
- (id)circularUpperTimeLabel;
- (void)cleanupAfterEditing;
- (id)colorPalette;
- (void)configureViewsForEditing;
- (bool)containsSubview:(id)arg1;
- (id)contentView;
- (void)createAndRemoveViewsForCurrentStateIfNeeded;
- (void)createCircularViewsIfNeeded;
- (void)createFullscreenDigitalViewsIfNeeded;
- (void)createFullscreenHybridViewsIfNeeded;
- (void)createFullscreenLogoIfNeeded;
- (id)createLogoButtonWithBackgroundImage:(id)arg1;
- (id)createTimeLabelWithFont:(id)arg1 option:(unsigned long long)arg2;
- (id)currentBackgroundColor;
- (id)currentForegroundColor;
- (id)currentLogoColor;
- (void)dealloc;
- (id)delegate;
- (id)device;
- (unsigned long long)dial;
- (double)dialFraction;
- (double)digitalStyleFraction;
- (void)ensureVisibleIfNeeded:(id)arg1;
- (id)fontForCircularDial;
- (id)fontForDigitalFullscreen;
- (id)fontForHybridFullscreen;
- (id)fullscreenDigitalLowerTimeLabel;
- (id)fullscreenDigitalUpperTimeLabel;
- (id)fullscreenDigitsContainerView;
- (id)fullscreenHybridLowerTimeLabel;
- (id)fullscreenHybridUpperTimeLabel;
- (id)fullscreenLogoButton;
- (void)handleLogoButtonHighlighted:(id)arg1;
- (void)handleLogoButtonResetHighlight:(id)arg1;
- (void)handleLogoButtonTouchUpInside:(id)arg1;
- (id)initWithDevice:(id)arg1 dial:(unsigned long long)arg2 style:(unsigned long long)arg3 colorPalette:(id)arg4;
- (id)initWithDevice:(id)arg1 dial:(unsigned long long)arg2 style:(unsigned long long)arg3 colorPalette:(id)arg4 useSmallFont:(bool)arg5 circularLogoImage:(id)arg6;
- (bool)invertedColors;
- (bool)isFrozen;
- (void)layoutSubviews;
- (struct CGSize { double x1; double x2; })logoImageSizeForCircularDial;
- (id)monospacedFontForCircularDial;
- (double)olympusAnalogStyleFraction;
- (double)olympusDigitalLabelsPositionFraction;
- (double)olympusDigitalStyleFraction;
- (id)palette;
- (bool)pointInside:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (void)prepareForEditing;
- (void)removeCircularViews;
- (void)removeFullscreenViews;
- (void)setAnalogStyleFraction:(double)arg1;
- (void)setAnalogStyleSwooshPositionFraction:(double)arg1;
- (void)setCircularDigitsContainerView:(id)arg1;
- (void)setCircularLogoButton:(id)arg1;
- (void)setCircularLogoImage:(id)arg1;
- (void)setCircularLowerTimeLabel:(id)arg1;
- (void)setCircularUpperTimeLabel:(id)arg1;
- (void)setColorPalette:(id)arg1;
- (void)setContentView:(id)arg1;
- (void)setCurrentBackgroundColor:(id)arg1;
- (void)setCurrentForegroundColor:(id)arg1;
- (void)setCurrentLogoColor:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDevice:(id)arg1;
- (void)setDial:(unsigned long long)arg1;
- (void)setDialFraction:(double)arg1;
- (void)setDigitalStyleFraction:(double)arg1;
- (void)setFrozen:(bool)arg1;
- (void)setFullscreenDigitalLowerTimeLabel:(id)arg1;
- (void)setFullscreenDigitalUpperTimeLabel:(id)arg1;
- (void)setFullscreenDigitsContainerView:(id)arg1;
- (void)setFullscreenHybridLowerTimeLabel:(id)arg1;
- (void)setFullscreenHybridUpperTimeLabel:(id)arg1;
- (void)setFullscreenLogoButton:(id)arg1;
- (void)setInvertedColors:(bool)arg1;
- (void)setLabelOutlineAlpha:(double)arg1;
- (void)setLabelOutlineColor:(id)arg1;
- (void)setLogoButtonHighlighted:(bool)arg1;
- (void)setLogoImageSizeForCircularDial:(struct CGSize { double x1; double x2; })arg1;
- (void)setOlympusAnalogStyleFraction:(double)arg1;
- (void)setOlympusDigitalLabelsPositionFraction:(double)arg1;
- (void)setOlympusDigitalStyleFraction:(double)arg1;
- (void)setOverrideDate:(id)arg1 duration:(double)arg2;
- (void)setPalette:(id)arg1;
- (void)setStyle:(unsigned long long)arg1;
- (void)setTimeFormatter:(id)arg1;
- (void)setTimeOffset:(double)arg1;
- (void)setUseSmallFont:(bool)arg1;
- (void)setViewsVisibilityForDial:(unsigned long long)arg1 style:(unsigned long long)arg2;
- (void)setViewsVisibleForDialTransition;
- (void)setViewsVisibleForStyleTransition;
- (unsigned long long)style;
- (id)styleWithFont:(id)arg1;
- (id)timeFormatter;
- (void)timeFormatterTextDidChange:(id)arg1;
- (void)updateColors;
- (void)updateLogosFrame;
- (void)updateStylesFraction:(double)arg1 fromStyle:(unsigned long long)arg2 toStyle:(unsigned long long)arg3;
- (void)updateTimeLabelsFrame;
- (bool)useSmallFont;
- (id)victoryFontWithSize:(double)arg1;

@end
