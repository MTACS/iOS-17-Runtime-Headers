
@interface NTKDateComplicationLabel : UIControl <NTKControl, NTKDateComplicationDisplay> {
    UIColor * _accentColor;
    long long  _accentType;
    NSMutableDictionary * _cachedFittingSizes;
    UIColor * _computedTextColor;
    NSString * _currentDateText;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _dayTextRange;
    CLKDevice * _device;
    CLKFont * _font;
    bool  _frozen;
    UIView * _highlightView;
    UILabel * _internalLabel;
    bool  _legibilityHidden;
    unsigned long long  _overrideDateStyle;
    long long  _sizeStyle;
    UIColor * _textColor;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _touchEdgeInsets;
    bool  _usesLegibility;
    bool  canUseCurvedText;
    <CDComplicationDisplayObserver> * displayObserver;
}

@property (setter=_setFirstLineBaselineFrameOriginY:, nonatomic) double _firstLineBaselineFrameOriginY;
@property (nonatomic, readonly) double _lastLineBaseline;
@property (setter=_setLastLineBaselineFrameOriginY:, nonatomic) double _lastLineBaselineFrameOriginY;
@property (nonatomic, retain) UIColor *accentColor;
@property (nonatomic, readonly) long long accentType;
@property (nonatomic) bool canUseCurvedText;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) CLKDevice *device;
@property (nonatomic) <CDComplicationDisplayObserver> *displayObserver;
@property (nonatomic, retain) CLKFont *font;
@property (readonly) unsigned long long hash;
@property (getter=isHighlighted, nonatomic) bool highlighted;
@property (nonatomic) bool legibilityHidden;
@property (nonatomic) long long numberOfLines;
@property (nonatomic) unsigned long long overrideDateStyle;
@property (nonatomic) bool shouldUseTemplateColors;
@property (nonatomic, readonly) long long sizeStyle;
@property (readonly) Class superclass;
@property (nonatomic) long long textAlignment;
@property (nonatomic, retain) UIColor *textColor;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } touchEdgeInsets;
@property (nonatomic) bool usesLegibility;

- (void).cxx_destruct;
- (void)_applyAccentColorAttributes;
- (id)_attributedStringAccentingNumbersInString:(id)arg1;
- (void)_computeTextColor;
- (double)_cornerRadius;
- (double)_firstLineBaselineFrameOriginY;
- (double)_firstLineBaselineOffsetFromBoundsTop;
- (struct CGSize { double x1; double x2; })_highlightInset;
- (void)_invalidateInternalLabelSize;
- (double)_lastLineBaseline;
- (double)_lastLineBaselineFrameOriginY;
- (double)_legibtilityShadowRadius;
- (void)_setFirstLineBaselineFrameOriginY:(double)arg1;
- (void)_setFont:(id)arg1;
- (void)_setLastLineBaselineFrameOriginY:(double)arg1;
- (void)_setText:(id)arg1;
- (void)_updateTextColor;
- (id)accentColor;
- (long long)accentType;
- (bool)canUseCurvedText;
- (id)device;
- (id)displayObserver;
- (id)font;
- (id)initWithSizeStyle:(long long)arg1 accentType:(long long)arg2 forDevice:(id)arg3;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (void)layoutSubviews;
- (bool)legibilityHidden;
- (long long)numberOfLines;
- (unsigned long long)overrideDateStyle;
- (bool)pointInside:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (void)setAccentColor:(id)arg1;
- (void)setCanUseCurvedText:(bool)arg1;
- (void)setDateComplicationText:(id)arg1 withDayRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 forDateStyle:(unsigned long long)arg3;
- (void)setDisplayObserver:(id)arg1;
- (void)setFont:(id)arg1;
- (void)setHighlighted:(bool)arg1;
- (void)setLegibilityHidden:(bool)arg1;
- (void)setNumberOfLines:(long long)arg1;
- (void)setOverrideDateStyle:(unsigned long long)arg1;
- (void)setShadowColor:(id)arg1;
- (void)setTextAlignment:(long long)arg1;
- (void)setTextColor:(id)arg1;
- (void)setTouchEdgeInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setUsesLegibility:(bool)arg1;
- (bool)shouldCancelTouchesInScrollview;
- (long long)sizeStyle;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })systemLayoutSizeFittingSize:(struct CGSize { double x1; double x2; })arg1;
- (long long)textAlignment;
- (id)textColor;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })touchEdgeInsets;
- (void)traitCollectionDidChange:(id)arg1;
- (bool)usesLegibility;

@end
