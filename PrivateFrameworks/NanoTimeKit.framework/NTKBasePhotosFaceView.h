
@interface NTKBasePhotosFaceView : NTKBackgroundImageFaceView <NTKPhotoImageViewDelegate> {
    UIView * _blackView;
    NTKUtilityComplicationFactory * _complicationFactory;
    UIView * _cornerView;
    UIView * _currentGradientView;
    unsigned long long  _dateAlignment;
    UIColor * _foregroundColor;
    unsigned int  _isContentLoaded;
    unsigned int  _isInteractive;
    bool  _isStartingPlaybackOnSingleTap;
    unsigned int  _isUsingLegibility;
    UIColor * _legibilityGradientColor;
    NSValue * _monochromeColorMatrix;
    NTKAlbumEmptyView * _noPhotosView;
    bool  _noPhotosViewVisible;
    bool  _paused;
    UIImage * _photosColorRamp;
    UIImage * _photosMonoColorRamp;
    NSTimer * _playOnWakeTimeout;
    NTKPhotoImageView * _posterImageView;
    bool  _preLoadingPhotoOnSleep;
    bool  _preloadedPhotoOnSleep;
    long long  _previousDataMode;
    UIColor * _shadowColor;
    bool  _shouldPlayIntro;
    bool  _shouldPlayOnWake;
    NTKTaskScheduler * _taskScheduler;
    bool  _updateWhenUnpausing;
}

@property (nonatomic, readonly) UIView *cornerView;
@property (nonatomic, readonly) unsigned long long dateAlignment;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isInteractive;
@property (nonatomic, retain) NSValue *monochromeColorMatrix;
@property (nonatomic, readonly) NTKAlbumEmptyView *noPhotosView;
@property (getter=isNoPhotosViewVisible, nonatomic) bool noPhotosViewVisible;
@property (nonatomic, readonly) UIImage *photosColorRamp;
@property (nonatomic, readonly) UIImage *photosMonoColorRamp;
@property (nonatomic, readonly) NTKPhotoImageView *posterImageView;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_animateIn;
- (void)_applyAlignment;
- (void)_applyComplicationContentSpecificAttributesAnimated:(bool)arg1;
- (void)_applyDataMode;
- (void)_applyForegroundAlphaForTransitionFraction:(double)arg1 fromEditMode:(long long)arg2 toEditMode:(long long)arg3;
- (void)_applyFrozen;
- (void)_applyOption:(id)arg1 forCustomEditMode:(long long)arg2 slot:(id)arg3;
- (void)_applyPhotosColor;
- (void)_applyPhotosColorFrom:(id)arg1 to:(id)arg2 fraction:(double)arg3;
- (void)_applyRubberBandingFraction:(double)arg1 forCustomEditMode:(long long)arg2 slot:(id)arg3;
- (void)_applyScrubbingForegroundColor:(id)arg1 shadowColor:(id)arg2;
- (void)_applySlow;
- (void)_applyTransitionFraction:(double)arg1 fromOption:(id)arg2 toOption:(id)arg3 forCustomEditMode:(long long)arg4 slot:(id)arg5;
- (double)_backgroundImageAlphaForEditMode:(long long)arg1;
- (void)_cleanupAfterEditing;
- (void)_cleanupAfterOrb:(bool)arg1;
- (long long)_complicationPickerStyleForSlot:(id)arg1;
- (void)_configureComplicationFactory;
- (void)_configureComplicationView:(id)arg1 forSlot:(id)arg2;
- (void)_configureForEditMode:(long long)arg1;
- (void)_configureForTransitionFraction:(double)arg1 fromEditMode:(long long)arg2 toEditMode:(long long)arg3;
- (bool)_curtainViewVisible;
- (void)_didStartPlayingIrisOnSingleTap;
- (id)_digitalTimeLabelStyleFromViewMode:(long long)arg1 faceBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (double)_editSpeedForCustomEditMode:(long long)arg1 slot:(id)arg2;
- (void)_endScrubbingAnimationFromUIViewAnimateWithDuration;
- (bool)_fadesComplicationSlot:(id)arg1 inEditMode:(long long)arg2;
- (double)_foregroundAlphaForEditMode:(long long)arg1;
- (double)_foregroundAlphaForTransitionFraction:(double)arg1 fromEditMode:(long long)arg2 toEditMode:(long long)arg3;
- (void)_handleOrdinaryScreenWake;
- (void)_handleScreenWake;
- (void)_handleWristRaiseScreenWake;
- (void)_hideCurtainView;
- (void)_invalidatePreloadedPhoto;
- (double)_keylineCornerRadiusForComplicationSlot:(id)arg1;
- (bool)_keylineLabelShouldShowIndividualOptionNamesForCustomEditMode:(long long)arg1;
- (void)_layoutForegroundContainerView;
- (void)_loadLayoutRules;
- (void)_loadSnapshotContentViews;
- (id)_newGradientViewWithColor:(id)arg1;
- (id)_newLegacyViewForComplication:(id)arg1 family:(long long)arg2 slot:(id)arg3;
- (void)_playIrisOnSingleTap;
- (void)_playPhoto;
- (void)_playStill;
- (void)_playVideo;
- (void)_playVideoForScreenWake:(id)arg1;
- (bool)_preloadNextPhoto;
- (void)_prepareForEditing;
- (void)_prepareForOrb;
- (void)_scheduleSleepPreloadTask;
- (bool)_screenOn;
- (id)_selectedContentView;
- (void)_setComplicationsHidden:(bool)arg1;
- (void)_setDateAttributes:(id)arg1 animated:(bool)arg2;
- (void)_showCurtainView;
- (void)_startScrubbingAnimationFromUIViewAnimateWithDuration;
- (double)_timeLabelAlphaForEditMode:(long long)arg1;
- (bool)_timeLabelUsesLegibility;
- (double)_timeTravelYAdjustment;
- (void)_unloadSnapshotContentViews;
- (void)_unpauseFromSwitcher;
- (void)_updatePaused;
- (long long)_utilitySlotForSlot:(id)arg1;
- (void)applyPhotosColorRamp:(id)arg1 photosMonoColorRamp:(id)arg2 monochromeColorMatrix:(id)arg3 toPhotosImageView:(id)arg4;
- (id)cornerView;
- (id)createFaceColorPalette;
- (unsigned long long)dateAlignment;
- (void)dealloc;
- (void)imageViewDidBeginPlaying:(id)arg1;
- (void)imageViewDidEndPlaying:(id)arg1;
- (id)initWithFaceStyle:(long long)arg1 forDevice:(id)arg2 clientIdentifier:(id)arg3;
- (bool)isInteractive;
- (bool)isNoPhotosViewVisible;
- (void)layoutSubviews;
- (id)monochromeColorMatrix;
- (id)noPhotosView;
- (id)palette;
- (id)photosColorRamp;
- (Class)photosFaceClass;
- (id)photosMonoColorRamp;
- (id)posterImageView;
- (bool)screenWillGoDark;
- (void)setMonochromeColorMatrix:(id)arg1;
- (void)setNoPhotosViewVisible:(bool)arg1;
- (void)updateWithColorPalette:(id)arg1;

@end
