
@interface MediaControlsEndpointController : NSObject <MPRequestResponseControllerDelegate, _MCStateDumpPropertyListTransformable> {
    bool  _allowsAutomaticResponseLoading;
    bool  _attemptingConnection;
    bool  _automaticResponseLoading;
    MPMediaControlsConfiguration * _configuration;
    <MediaControlsEndpointControllerConnectionDelegate> * _connectionDelegate;
    <MediaControlsEndpointControllerDelegate> * _delegate;
    bool  _deviceUnlocked;
    bool  _hasAvailableRoutes;
    bool  _hasEverReceivedResponse;
    bool  _onScreen;
    NSString * _predictedDeviceUID;
    <MediaControlsEndpointObserverDelegate> * _proxyDelegate;
    MPRequestResponseController * _requestController;
    NSArray * _routeNames;
    NSString * _specifiedClient;
    NSString * _specifiedPlayer;
    long long  _state;
}

@property (getter=isAirPlaying, nonatomic, readonly) bool airplaying;
@property (nonatomic) bool allowsAutomaticResponseLoading;
@property (getter=isAttemptingConnection, nonatomic) bool attemptingConnection;
@property (getter=isAutomaticResponseLoading, nonatomic) bool automaticResponseLoading;
@property (nonatomic, readonly, copy) NSString *bundleID;
@property (nonatomic, retain) MPMediaControlsConfiguration *configuration;
@property (nonatomic) <MediaControlsEndpointControllerConnectionDelegate> *connectionDelegate;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <MediaControlsEndpointControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool deviceUnlocked;
@property (nonatomic, readonly) bool hasAvailableRoutes;
@property (nonatomic) bool hasEverReceivedResponse;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isDeviceSystemRoute;
@property (nonatomic, copy) NSString *label;
@property (nonatomic) bool onScreen;
@property (nonatomic, readonly) MPCPlayerPath *playerPath;
@property (nonatomic, readonly, copy) NSString *predictedDeviceUID;
@property (nonatomic) <MediaControlsEndpointObserverDelegate> *proxyDelegate;
@property (nonatomic, readonly, copy) NSString *representedBundleID;
@property (nonatomic, readonly) MPRequestResponseController *requestController;
@property (nonatomic, readonly) MPCPlayerResponse *response;
@property (nonatomic, retain) MPAVEndpointRoute *route;
@property (nonatomic, readonly, copy) NSArray *routeNames;
@property (getter=isRoutingToWireless, nonatomic, readonly) bool routingToWireless;
@property (nonatomic, readonly) NSString *specifiedClient;
@property (nonatomic, readonly) NSString *specifiedPlayer;
@property (nonatomic) long long state;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_connectIfNeeded;
- (void)_connectionDidAttemptConnection:(id)arg1;
- (void)_connectionDidConnect:(id)arg1;
- (void)_connectionDidInvalidate:(id)arg1;
- (void)_connectionHasBecomeInvalid;
- (void)_createRequestController;
- (void)_getConnected:(bool*)arg1 connecting:(bool*)arg2 invalid:(bool*)arg3;
- (void)_getConnected:(bool*)arg1 invalid:(bool*)arg2;
- (void)_maybeReloadPlayerPathWithRoute:(id)arg1;
- (void)_reloadPlayerPathWithRoute:(id)arg1;
- (void)_routeDidChange:(id)arg1;
- (id)_stateDumpObject;
- (void)_updateState;
- (bool)allowsAutomaticResponseLoading;
- (id)bundleID;
- (id)configuration;
- (void)connectAllowingAuthenticationWithCompletion:(id /* block */)arg1;
- (id)connectionDelegate;
- (void)controller:(id)arg1 defersResponseReplacement:(id /* block */)arg2;
- (bool)controller:(id)arg1 shouldRetryFailedRequestWithError:(id)arg2;
- (id)delegate;
- (id)description;
- (bool)deviceUnlocked;
- (bool)hasAvailableRoutes;
- (bool)hasEverReceivedResponse;
- (id)initWithEndpoint:(id)arg1;
- (id)initWithEndpoint:(id)arg1 client:(id)arg2 player:(id)arg3;
- (bool)isAirPlaying;
- (bool)isAttemptingConnection;
- (bool)isAutomaticResponseLoading;
- (bool)isDeviceSystemRoute;
- (bool)isRoutingToWireless;
- (id)label;
- (void)launchNowPlayingApp;
- (bool)onScreen;
- (id)playerPath;
- (id)predictedDeviceUID;
- (id)proxyDelegate;
- (id)representedBundleID;
- (void)representsLongFormVideoContentWithCompletion:(id /* block */)arg1;
- (id)requestController;
- (id)response;
- (id)route;
- (id)routeNames;
- (void)setAllowsAutomaticResponseLoading:(bool)arg1;
- (void)setAttemptingConnection:(bool)arg1;
- (void)setAutomaticResponseLoading:(bool)arg1;
- (void)setConfiguration:(id)arg1;
- (void)setConnectionDelegate:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDeviceUnlocked:(bool)arg1;
- (void)setHasEverReceivedResponse:(bool)arg1;
- (void)setLabel:(id)arg1;
- (void)setOnScreen:(bool)arg1;
- (void)setProxyDelegate:(id)arg1;
- (void)setRoute:(id)arg1;
- (void)setState:(long long)arg1;
- (id)specifiedClient;
- (id)specifiedPlayer;
- (long long)state;
- (void)updateRoutePropertiesIfNeeded;

@end
