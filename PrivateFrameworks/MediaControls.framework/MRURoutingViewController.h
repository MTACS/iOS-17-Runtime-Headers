
@interface MRURoutingViewController : UIViewController <CARSessionObserving, MPAVRoutingControllerDelegate, MRGroupSessionDelegate, MRGroupSessionDiscoveryDelegate, MRUNowPlayingControllerObserver, MRUOutputDeviceRoutingDataSourceObserver, MRURoutingTableViewCellDelegate, MRUVendorSpecificDeviceManagerDelegate, MRUVirtualHearingAidRouteObserver, UIGestureRecognizerDelegate, UITableViewDataSource, UITableViewDelegate, UITableViewDelegatePrivate> {
    <MRGroupSession> * _activeGroupSession;
    int  _airPlayPasswordAlertDidAppearToken;
    bool  _airPlayPasswordAlertDidAppearTokenIsValid;
    int  _airPlayPasswordAlertDidCancelToken;
    bool  _allRoutesAreUnknown;
    NSArray * _cachedActivatedVendorSpecificDeviceIDs;
    NSArray * _cachedAirPlayRoutes;
    NSArray * _cachedAvailableVendorSpecificDeviceIDs;
    NSArray * _cachedDisplayAsPickedRoutes;
    NSArray * _cachedDisplayableAvailableRoutes;
    NSArray * _cachedNativeRoutes;
    NSArray * _cachedNativeRoutesInVendorSpecificGroup;
    NSArray * _cachedPendingPickedRoutes;
    NSArray * _cachedPendingVendorSpecificDeviceIDs;
    NSArray * _cachedPickedRoutes;
    NSDictionary * _cachedRouteGrouping;
    NSArray * _cachedVolumeCapableRoutes;
    CARSessionStatus * _carPlaySessionStatus;
    NSTimer * _collapseTimer;
    NSMutableSet * _collapsedVendorSpecificGroupUIDs;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _contentEdgeInsets;
    NSMutableArray * _customRows;
    <MRURoutingViewControllerDelegate> * _delegate;
    bool  _didExpandVendorSpecificSpeakerGroup;
    bool  _didLastPickNativeRoute;
    bool  _didSelectShowMore;
    long long  _discoveryMode;
    MPAVRoute * _displayedEndpointRoute;
    MPAVEndpointRoute * _endpointRoute;
    NSMutableSet * _expandedGroupUIDs;
    NSMutableSet * _expandedItemUIDs;
    NSMutableSet * _expandedRouteUIDs;
    NSMutableSet * _expandedVendorSpecificGroupUIDs;
    MRGroupSessionDiscovery * _groupSessionDiscovery;
    bool  _hasUserSelections;
    NSDictionary * _indexedNowPlayingControllers;
    bool  _isAnimatingUpdate;
    AVSystemController * _mediaServerController;
    NSString * _mostRecentlyInteractedVendorSpecificGroupRouteID;
    bool  _needsDisplayedRoutesUpdate;
    NSString * _nowPlayingAppBundleID;
    NSArray * _nowPlayingControllers;
    bool  _onScreen;
    MRURoutingViewControllerUpdate * _optimisticUpdate;
    NSDictionary * _outputDeviceVolumeControllers;
    MRURoutingViewControllerUpdate * _pendingUpdate;
    NSNumberFormatter * _percentageFormatter;
    NSString * _presentingAppBundleID;
    bool  _presentingAppHasActiveAVSession;
    int  _presentingAppProcessIdentifier;
    MPAVRoutingController * _routingController;
    MPSectionedCollection * _routingViewItems;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _scrollIndicatorInsets;
    bool  _showMetadataForEndpointRoute;
    bool  _someRoutesAreUnknown;
    bool  _sortByIsVideoRoute;
    unsigned long long  _stateHandle;
    NSMutableArray * _staticCustomRowItems;
    MRUVisualStylingProvider * _stylingProvider;
    MPWeakTimer * _subtitleUpdateTimer;
    MPWeakTimer * _updateTimer;
    unsigned long long  _updatesSincePresentation;
    NSMutableDictionary * _vendorSpecificGroupDisplayedSubroutes;
    NSIndexPath * _vendorSpecificGroupThatWasJustExpanded;
    MRUVendorSpecificDeviceManager * _vendorSpecificManager;
    NSArray * _visibleMediaApps;
    MRUVolumeGroupCoordinator * _volumeGroupCoordinator;
}

@property (nonatomic, retain) <MRGroupSession> *activeGroupSession;
@property (nonatomic, readonly) bool canUseUncoalescedResults;
@property (nonatomic, retain) CARSessionStatus *carPlaySessionStatus;
@property (nonatomic, retain) NSTimer *collapseTimer;
@property (nonatomic, retain) NSMutableSet *collapsedVendorSpecificGroupUIDs;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } contentEdgeInsets;
@property (nonatomic, copy) NSMutableArray *customRows;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <MRURoutingViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool didExpandVendorSpecificSpeakerGroup;
@property (nonatomic) bool didLastPickNativeRoute;
@property (nonatomic) long long discoveryMode;
@property (nonatomic, retain) MPAVEndpointRoute *endpointRoute;
@property (nonatomic, retain) NSMutableSet *expandedGroupUIDs;
@property (nonatomic, retain) NSMutableSet *expandedItemUIDs;
@property (nonatomic, retain) NSMutableSet *expandedRouteUIDs;
@property (nonatomic, retain) NSMutableSet *expandedVendorSpecificGroupUIDs;
@property (nonatomic, retain) MRGroupSessionDiscovery *groupSessionDiscovery;
@property (readonly) unsigned long long hash;
@property (getter=isInCarPlay, nonatomic, readonly) bool inCarPlay;
@property (nonatomic, retain) NSDictionary *indexedNowPlayingControllers;
@property (nonatomic, retain) AVSystemController *mediaServerController;
@property (nonatomic, retain) NSString *mostRecentlyInteractedVendorSpecificGroupRouteID;
@property (nonatomic) bool needsDisplayedRoutesUpdate;
@property (nonatomic, copy) NSString *nowPlayingAppBundleID;
@property (nonatomic, retain) NSArray *nowPlayingControllers;
@property (nonatomic) bool onScreen;
@property (nonatomic, retain) NSDictionary *outputDeviceVolumeControllers;
@property (nonatomic, retain) NSNumberFormatter *percentageFormatter;
@property (nonatomic, retain) NSString *presentingAppBundleID;
@property (nonatomic) bool presentingAppHasActiveAVSession;
@property (nonatomic) int presentingAppProcessIdentifier;
@property (nonatomic, readonly) MPAVRoutingController *routingController;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } scrollIndicatorInsets;
@property (nonatomic, readonly) bool shouldSuppressNativeRoutesStatusDisplay;
@property (nonatomic) bool showMetadataForEndpointRoute;
@property (nonatomic) bool sortByIsVideoRoute;
@property (nonatomic) unsigned long long stateHandle;
@property (nonatomic, retain) NSMutableArray *staticCustomRowItems;
@property (nonatomic, retain) MRUVisualStylingProvider *stylingProvider;
@property (nonatomic, retain) MPWeakTimer *subtitleUpdateTimer;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSMutableDictionary *vendorSpecificGroupDisplayedSubroutes;
@property (nonatomic, retain) NSIndexPath *vendorSpecificGroupThatWasJustExpanded;
@property (nonatomic, retain) MRUVendorSpecificDeviceManager *vendorSpecificManager;
@property (nonatomic, retain) MRURoutingView *view;
@property (nonatomic, retain) MRURoutingView *viewIfLoaded;
@property (nonatomic, copy) NSArray *visibleMediaApps;
@property (nonatomic, retain) MRUVolumeGroupCoordinator *volumeGroupCoordinator;

- (void).cxx_destruct;
- (id)_airPlayRoutesInRoutes:(id)arg1;
- (void)_applyUpdate:(id)arg1;
- (bool)_canShowWhileLocked;
- (void)_collapseAllGroups;
- (void)_collapseAllGroupsAfterDelay;
- (void)_configureVolumeForUpdate:(id)arg1 volumeCapableRoutes:(id*)arg2 volumeController:(id*)arg3;
- (id)_createRoutingViewItemsForUpdate:(id)arg1;
- (id)_createSectionedCollection:(id)arg1 withPickedRoutes:(id)arg2;
- (void)_createUpdateWithRefreshOnly:(bool)arg1 completion:(id /* block */)arg2;
- (id)_displayAsPickedRoutesInRoutes:(id)arg1;
- (void)_displayEndGroupSessionWithCompletion:(id /* block */)arg1;
- (void)_displayGroupSessionAlertWithTitle:(id)arg1 body:(id)arg2 confirmTitle:(id)arg3 cancelTitle:(id)arg4 completion:(id /* block */)arg5;
- (void)_displayShareAudioDisabledAlertForReason:(id)arg1;
- (id)_displayableRoutesInRoutes:(id)arg1;
- (void)_enqueueUpdate:(id)arg1;
- (id)_fullStateDumpObject;
- (id)_mergeRoutes:(id)arg1 withCoalescedResult:(id)arg2;
- (bool)_operationRequiresOptimisticState:(long long)arg1 routes:(id)arg2;
- (id)_recommendedRoutesFromRoutes:(id)arg1;
- (void)_refreshDisplayedRoutes;
- (void)_reloadDisplayedRoutes;
- (void)_setNeedsDisplayedRoutesUpdate;
- (void)_setNeedsRouteDiscoveryModeUpdate;
- (void)_setupUpdateTimerIfNecessary;
- (bool)_shouldShowShowMoreButton;
- (id)_stateDumpObject;
- (void)_updateDisplayedRoutes;
- (void)_updateGroupSessionDiscovery;
- (bool)_wouldShareAudioForPickedRoute:(id)arg1 operation:(long long)arg2 pickedRoutes:(id)arg3;
- (id)activeGroupSession;
- (void)applyVendorSpecificGroupExpandedRecord:(id)arg1;
- (bool)canUseUncoalescedResults;
- (id)carPlaySessionStatus;
- (void)clearVendorSpecificGroupExpandedRecordFor:(id)arg1;
- (id)collapseTimer;
- (id)collapsedVendorSpecificGroupUIDs;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })contentEdgeInsets;
- (id)customRows;
- (void)dealloc;
- (id)delegate;
- (bool)didExpandVendorSpecificSpeakerGroup;
- (bool)didLastPickNativeRoute;
- (void)didReceiveInteraction:(id)arg1;
- (long long)discoveryMode;
- (id)endpointGroupUID;
- (id)endpointRoute;
- (void)ensureVendorSpecificGroupTreeIsVisible:(id)arg1;
- (id)expandedGroupUIDs;
- (id)expandedItemUIDs;
- (id)expandedRouteUIDs;
- (id)expandedVendorSpecificGroupUIDs;
- (void)fetchAvailableRoutesWithCompletionHandler:(id /* block */)arg1;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)groupSession:(id)arg1 didInvalidateWithError:(id)arg2;
- (void)groupSessionDidConnect:(id)arg1;
- (id)groupSessionDiscovery;
- (void)groupSessionDiscovery:(id)arg1 activeSessionDidChange:(id)arg2;
- (void)groupSessionDiscovery:(id)arg1 discoveredSessionsDidChange:(id)arg2;
- (id)groupUIDForRoute:(id)arg1;
- (void)handleGroupSessionJoinWithPickedRoute:(id)arg1;
- (bool)handleSelectedRoutingViewItem:(id)arg1 operation:(long long)arg2;
- (bool)hasCarKitRoute;
- (void)hearingAidConnectionDidChange;
- (void)hearingAidReachabilityDidChange;
- (id)indexedNowPlayingControllers;
- (id)init;
- (id)initWithRoutingController:(id)arg1;
- (bool)isInCarPlay;
- (bool)isInVehicle;
- (bool)isVendorSpecificGroupStatusRecorded:(id)arg1;
- (void)loadView;
- (id)mediaServerController;
- (id)mostRecentlyInteractedVendorSpecificGroupRouteID;
- (bool)needsDisplayedRoutesUpdate;
- (id)nowPlayingAppBundleID;
- (void)nowPlayingController:(id)arg1 metadataController:(id)arg2 didChangeNowPlayingInfo:(id)arg3;
- (bool)nowPlayingControllerShouldAutomaticallyUpdateResponse:(id)arg1;
- (id)nowPlayingControllers;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (bool)onScreen;
- (id)outputDeviceVolumeControllers;
- (id)percentageFormatter;
- (void)playingSessionsDidChangeNotification:(id)arg1;
- (id)presentingAppBundleID;
- (bool)presentingAppHasActiveAVSession;
- (int)presentingAppProcessIdentifier;
- (void)resetDisplayedRoutes;
- (void)routeRecommenderDidUpdateRecommendations:(id)arg1;
- (bool)routesContainAirPlayGroupableRoute:(id)arg1;
- (bool)routesContainMultipleBuiltIn:(id)arg1;
- (bool)routesContainSplitterCapableRoute:(id)arg1;
- (void)routingCellDidTapToExpand:(id)arg1;
- (id)routingController;
- (void)routingController:(id)arg1 didFailToPickRouteWithError:(id)arg2;
- (void)routingController:(id)arg1 pickedRoutesDidChange:(id)arg2;
- (void)routingController:(id)arg1 shouldHijackRoute:(id)arg2 alertStyle:(long long)arg3 busyRouteName:(id)arg4 presentingAppName:(id)arg5 completion:(id /* block */)arg6;
- (void)routingControllerAvailableRoutesDidChange:(id)arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })scrollIndicatorInsets;
- (void)selectRoutes:(id)arg1 operation:(long long)arg2 routingViewItem:(id)arg3;
- (void)sessionDidConnect:(id)arg1;
- (void)sessionDidDisconnect:(id)arg1;
- (void)setActiveGroupSession:(id)arg1;
- (void)setCarPlaySessionStatus:(id)arg1;
- (void)setCollapseTimer:(id)arg1;
- (void)setCollapsedVendorSpecificGroupUIDs:(id)arg1;
- (void)setContentEdgeInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setCustomRows:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDidExpandVendorSpecificSpeakerGroup:(bool)arg1;
- (void)setDidLastPickNativeRoute:(bool)arg1;
- (void)setDiscoveryMode:(long long)arg1;
- (void)setEndpointRoute:(id)arg1;
- (void)setExpandedGroupUIDs:(id)arg1;
- (void)setExpandedItemUIDs:(id)arg1;
- (void)setExpandedRouteUIDs:(id)arg1;
- (void)setExpandedVendorSpecificGroupUIDs:(id)arg1;
- (void)setGroupSessionDiscovery:(id)arg1;
- (void)setIndexedNowPlayingControllers:(id)arg1;
- (void)setMediaServerController:(id)arg1;
- (void)setMostRecentlyInteractedVendorSpecificGroupRouteID:(id)arg1;
- (void)setNeedsDisplayedRoutesUpdate:(bool)arg1;
- (void)setNowPlayingAppBundleID:(id)arg1;
- (void)setNowPlayingControllers:(id)arg1;
- (void)setOnScreen:(bool)arg1;
- (void)setOptimisticUpdate:(id)arg1;
- (void)setOutputDeviceVolumeControllers:(id)arg1;
- (void)setPercentageFormatter:(id)arg1;
- (void)setPresentingAppBundleID:(id)arg1;
- (void)setPresentingAppHasActiveAVSession:(bool)arg1;
- (void)setPresentingAppProcessIdentifier:(int)arg1;
- (void)setScrollIndicatorInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setShowMetadataForEndpointRoute:(bool)arg1;
- (void)setSortByIsVideoRoute:(bool)arg1;
- (void)setStateHandle:(unsigned long long)arg1;
- (void)setStaticCustomRowItems:(id)arg1;
- (void)setStylingProvider:(id)arg1;
- (void)setSubtitleUpdateTimer:(id)arg1;
- (void)setVendorSpecificGroupDisplayedSubroutes:(id)arg1;
- (void)setVendorSpecificGroupThatWasJustExpanded:(id)arg1;
- (void)setVendorSpecificManager:(id)arg1;
- (void)setVisibleMediaApps:(id)arg1;
- (void)setVolumeGroupCoordinator:(id)arg1;
- (bool)shouldSuppressNativeRoutesStatusDisplay;
- (bool)showMetadataForEndpointRoute;
- (void)showMoreAction;
- (bool)sortByIsVideoRoute;
- (unsigned long long)stateHandle;
- (id)staticCustomRowItems;
- (id)stylingProvider;
- (long long)subtitleAccessoryForItem:(id)arg1 nowPlayingInfo:(id)arg2;
- (id)subtitleUpdateTimer;
- (id)symbolNameForVendorSpecificRoute:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (bool)tableView:(id)arg1 shouldHaveFullLengthBottomSeparatorForSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (void)updateCell:(id)arg1 forIndexPath:(id)arg2;
- (void)updateExpandedGroups;
- (void)updateHeaderView:(id)arg1 forSection:(long long)arg2;
- (void)updateMetadata;
- (void)updateMetadataForNowPlayingController:(id)arg1;
- (void)updateNowPlayingControllersForRoutes:(id)arg1;
- (void)updateSubtitle;
- (void)updateVendorSpecificCell:(id)arg1 forIndexPath:(id)arg2;
- (void)updateVendorSpecificCustomRowCell:(id)arg1 forIndexPath:(id)arg2;
- (void)updateVendorSpecificGroupExpandedRecordFor:(id)arg1;
- (void)updateVendorSpecificSpeakerGroupCell:(id)arg1 forIndexPath:(id)arg2;
- (void)updateVendorSpecificSubRouteCell:(id)arg1 forIndexPath:(id)arg2;
- (void)vendorSpecificCellDidTapToExpand:(id)arg1;
- (id)vendorSpecificGroupDisplayedSubroutes;
- (id)vendorSpecificGroupThatWasJustExpanded;
- (id)vendorSpecificManager;
- (void)vendorSpecificManager:(id)arg1 deviceNowPlayingInfoDidChange:(id)arg2;
- (void)vendorSpecificManager:(id)arg1 deviceStateDidChange:(id)arg2;
- (void)vendorSpecificManagerDeviceListDidChange:(id)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewDidMoveToWindow:(id)arg1 shouldAppearOrDisappear:(bool)arg2;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (id)visibleMediaApps;
- (id)volumeGroupCoordinator;
- (bool)wasVendorSpecificGroupDisplayedAsExpanded:(id)arg1;

@end
