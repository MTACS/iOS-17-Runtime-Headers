
@interface MRUFlippingArtworkView : UIView <MRUArtworkControllerDelegate, MRUArtworkViewObservable, MRUVisualStylingProviderObserver> {
    MRUArtwork * _artwork;
    UIImage * _artworkImage;
    MRUFlippingArtworkLayer * _artworkLayer;
    MRUShadowView * _artworkShadowView;
    MRUArtworkController * _controller;
    bool  _currentItemHasChangedSinceArtworkLastSet;
    NSString * _itemIdentifier;
    NSHashTable * _observers;
    bool  _onScreen;
    long long  _pendingTransitionDirection;
    UIImageView * _placeholderImageView;
    MSVTimer * _setArtworkThrottleTimer;
    long long  _style;
    MRUVisualStylingProvider * _stylingProvider;
}

@property (nonatomic, retain) MRUArtwork *artwork;
@property (nonatomic, retain) UIImage *artworkImage;
@property (nonatomic, retain) MRUFlippingArtworkLayer *artworkLayer;
@property (nonatomic, retain) MRUShadowView *artworkShadowView;
@property (nonatomic, retain) MRUArtworkController *controller;
@property (nonatomic) bool currentItemHasChangedSinceArtworkLastSet;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSString *itemIdentifier;
@property (nonatomic, retain) NSHashTable *observers;
@property (getter=isOnScreen, nonatomic) bool onScreen;
@property (nonatomic) long long pendingTransitionDirection;
@property (nonatomic, retain) UIImageView *placeholderImageView;
@property (getter=isPlaying, nonatomic) bool playing;
@property (nonatomic, retain) MSVTimer *setArtworkThrottleTimer;
@property (nonatomic) long long style;
@property (nonatomic, retain) MRUVisualStylingProvider *stylingProvider;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)addObserver:(id)arg1;
- (id)artwork;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })artworkFrame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })artworkFrameForSize:(struct CGSize { double x1; double x2; })arg1 availableBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (id)artworkImage;
- (id)artworkLayer;
- (void)artworkLoadingDidTimeoutInController:(id)arg1;
- (id)artworkShadowView;
- (id)controller;
- (void)controller:(id)arg1 didLoadArtworkImage:(id)arg2;
- (void)controller:(id)arg1 didStartLoadingImageForCatalog:(id)arg2;
- (bool)currentItemHasChangedSinceArtworkLastSet;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isOnScreen;
- (bool)isPlaying;
- (bool)isSquare:(struct CGSize { double x1; double x2; })arg1;
- (bool)isSquareArtwork;
- (id)itemIdentifier;
- (void)layoutSubviews;
- (id)observers;
- (long long)pendingTransitionDirection;
- (id)placeholderImageView;
- (void)removeObserver:(id)arg1;
- (void)setArtwork:(id)arg1;
- (void)setArtwork:(id)arg1 transitionDirection:(long long)arg2;
- (void)setArtworkImage:(id)arg1;
- (void)setArtworkImageWithThrottle:(id)arg1 updatePlaceholder:(bool)arg2;
- (void)setArtworkLayer:(id)arg1;
- (void)setArtworkShadowView:(id)arg1;
- (id)setArtworkThrottleTimer;
- (void)setController:(id)arg1;
- (void)setCurrentItemHasChangedSinceArtworkLastSet:(bool)arg1;
- (void)setItemIdentifier:(id)arg1;
- (void)setObservers:(id)arg1;
- (void)setOnScreen:(bool)arg1;
- (void)setPendingTransitionDirection:(long long)arg1;
- (void)setPlaceholderImageView:(id)arg1;
- (void)setPlaying:(bool)arg1;
- (void)setSetArtworkThrottleTimer:(id)arg1;
- (void)setStyle:(long long)arg1;
- (void)setStylingProvider:(id)arg1;
- (bool)shouldTransitionFromImage:(id)arg1 toImage:(id)arg2;
- (long long)style;
- (id)stylingProvider;
- (void)updateOpacity;
- (void)updatePlaceholder;
- (void)updateStyle;
- (void)updateVisualStyling;
- (void)visualStylingProviderDidChange:(id)arg1;

@end
