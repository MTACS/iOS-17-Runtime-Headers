
@interface MRURoutingTableViewCell : UITableViewCell <MRURoutingSubtitleControllerDelegate, MRUVisualStylingProviderObserver, MRUVolumeControllerDelegate, UIGestureRecognizerDelegate, UIPointerInteractionDelegate> {
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _contentEdgeInsets;
    <MRURoutingTableViewCellDelegate> * _delegate;
    UITapGestureRecognizer * _expandGestureRecognizer;
    UIImage * _iconImage;
    UIImageView * _iconImageView;
    bool  _isVendorSpecific;
    UIImageView * _outlineImageView;
    UIImage * _protocolIcon;
    NSString * _protocolName;
    MRURoutingAccessoryView * _routingAccessoryView;
    UIView * _separatorView;
    bool  _showChevron;
    bool  _showChevronExpanded;
    MRUVisualStylingProvider * _stylingProvider;
    MRURoutingSubtitleController * _subtitleStateController;
    MRURoutingSubtitleView * _subtitleView;
    NSString * _title;
    UILabel * _titleLabel;
    MRUVolumeController * _volumeController;
    MRUSlider * _volumeSlider;
}

@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } contentEdgeInsets;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <MRURoutingTableViewCellDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) UITapGestureRecognizer *expandGestureRecognizer;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) UIImage *iconImage;
@property (nonatomic, retain) UIImageView *iconImageView;
@property (nonatomic) bool isVendorSpecific;
@property (nonatomic, retain) UIImageView *outlineImageView;
@property (nonatomic, retain) UIImage *protocolIcon;
@property (nonatomic, copy) NSString *protocolName;
@property (nonatomic, readonly) MRURoutingAccessoryView *routingAccessoryView;
@property (nonatomic, retain) UIView *separatorView;
@property (nonatomic) bool showChevron;
@property (nonatomic) bool showChevronExpanded;
@property (nonatomic, retain) MRUVisualStylingProvider *stylingProvider;
@property (nonatomic, readonly) MRURoutingSubtitleController *subtitleStateController;
@property (nonatomic, retain) MRURoutingSubtitleView *subtitleView;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSString *title;
@property (nonatomic, retain) UILabel *titleLabel;
@property (nonatomic) MRUVolumeController *volumeController;
@property (nonatomic, retain) MRUSlider *volumeSlider;

- (void).cxx_destruct;
- (void)_setShouldHaveFullLengthBottomSeparator:(bool)arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })contentEdgeInsets;
- (id)delegate;
- (void)didTapToExpand;
- (id)expandGestureRecognizer;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })expandRect;
- (bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (id)iconImage;
- (id)iconImageView;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (bool)isVendorSpecific;
- (void)layoutSubviews;
- (id)outlineImageView;
- (id)pointerInteraction:(id)arg1 regionForRequest:(id)arg2 defaultRegion:(id)arg3;
- (id)pointerInteraction:(id)arg1 styleForRegion:(id)arg2;
- (void)prepareForReuse;
- (id)protocolIcon;
- (id)protocolName;
- (id)routingAccessoryView;
- (void)routingSubtitleStateController:(id)arg1 didUpdateText:(id)arg2 icon:(id)arg3 accessory:(long long)arg4;
- (id)separatorView;
- (void)setContentEdgeInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setDelegate:(id)arg1;
- (void)setExpandGestureRecognizer:(id)arg1;
- (void)setIcon:(id)arg1;
- (void)setIconImage:(id)arg1;
- (void)setIconImageView:(id)arg1;
- (void)setIsVendorSpecific:(bool)arg1;
- (void)setOutlineImageView:(id)arg1;
- (void)setProtocolIcon:(id)arg1;
- (void)setProtocolName:(id)arg1;
- (void)setSeparatorView:(id)arg1;
- (void)setShowChevron:(bool)arg1;
- (void)setShowChevronExpanded:(bool)arg1;
- (void)setStylingProvider:(id)arg1;
- (void)setSubtitle:(id)arg1;
- (void)setSubtitleAccessory:(long long)arg1;
- (void)setSubtitleView:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setTitleLabel:(id)arg1;
- (void)setVolumeController:(id)arg1;
- (void)setVolumeSlider:(id)arg1;
- (bool)showChevron;
- (bool)showChevronExpanded;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (void)sliderValueChanged:(id)arg1;
- (id)stylingProvider;
- (id)subtitleStateController;
- (id)subtitleView;
- (id)title;
- (id)titleLabel;
- (void)transitionToNextVisibleStateWithDuration:(double)arg1;
- (void)updateContentSizeCategory;
- (void)updateVisibility;
- (void)updateVisualStyling;
- (void)visualStylingProviderDidChange:(id)arg1;
- (id)volumeController;
- (void)volumeController:(id)arg1 volumeControlAvailableDidChange:(bool)arg2;
- (void)volumeController:(id)arg1 volumeValueDidChange:(float)arg2;
- (void)volumeControllerDidFinishEqualization:(id)arg1;
- (void)volumeControllerWillBeginEqualization:(id)arg1;
- (id)volumeSlider;

@end
