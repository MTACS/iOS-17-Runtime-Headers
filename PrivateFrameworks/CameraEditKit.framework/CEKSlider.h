
@interface CEKSlider : UIControl <CEKAbstractSlider, CEKSliderTickMarksDelegate, UIScrollViewDelegate> {
    bool  __active;
    bool  __animating;
    UIScrollView * __contentScrollView;
    bool  __dimmed;
    CEKSliderDotView * __dotView;
    CEKEdgeGradientView * __edgeGradientView;
    CEKSelectionFeedbackGenerator * __feedbackGenerator;
    UIView * __levelIndicatorBackgroundView;
    UIView * __levelIndicatorView;
    bool  __overscrolling;
    bool  __reAdjustingOffsets;
    unsigned long long  __tickMarkIndex;
    CEKSliderTickMarksView * __tickMarksView;
    UILabel * __titleLabel;
    UILabel * __valueLabel;
    double  _animationDuration;
    double  _defaultValue;
    <CEKSliderDelegate> * _delegate;
    struct { 
        bool respondsToWillBeginScrolling; 
        bool respondsToDidScroll; 
        bool respondsToWillEndScrolling; 
        bool respondsToDidEndScrolling; 
        bool respondsToWillUpdateValue; 
    }  _delegateFlags;
    unsigned long long  _fontStyle;
    struct { 
        double startInset; 
        double endInset; 
    }  _gradientInsets;
    bool  _interactiveWhenHidden;
    double  _labelVerticalPadding;
    double  _levelIndicatorHeight;
    double  _markedValue;
    double  _maximumValue;
    double  _minimumValue;
    long long  _sliderVerticalAlignment;
    double  _sliderVerticalOffset;
    long long  _textOrientation;
    long long  _tickMarkCount;
    struct CGSize { 
        double width; 
        double height; 
    }  _tickMarkSize;
    double  _value;
    long long  _valueLabelVisibility;
}

@property (getter=_isActive, setter=_setActive:, nonatomic) bool _active;
@property (getter=_isAnimating, setter=_setAnimating:, nonatomic) bool _animating;
@property (nonatomic, readonly) UIScrollView *_contentScrollView;
@property (getter=_isDimmed, setter=_setDimmed:, nonatomic) bool _dimmed;
@property (nonatomic, readonly) CEKSliderDotView *_dotView;
@property (setter=_setEdgeGradientView:, nonatomic, retain) CEKEdgeGradientView *_edgeGradientView;
@property (nonatomic, readonly) CEKSelectionFeedbackGenerator *_feedbackGenerator;
@property (nonatomic, retain) UIView *_levelIndicatorBackgroundView;
@property (nonatomic, readonly) UIView *_levelIndicatorView;
@property (getter=_isOverscrolling, setter=_setOverscrolling:, nonatomic) bool _overscrolling;
@property (getter=_isreAdjustingOffsets, nonatomic) bool _reAdjustingOffsets;
@property (setter=_setTickMarkIndex:, nonatomic) unsigned long long _tickMarkIndex;
@property (nonatomic, readonly) CEKSliderTickMarksView *_tickMarksView;
@property (nonatomic, retain) UILabel *_titleLabel;
@property (nonatomic, retain) UILabel *_valueLabel;
@property (nonatomic) double animationDuration;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) double defaultValue;
@property (nonatomic) <CEKSliderDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) unsigned long long fontStyle;
@property (nonatomic) struct { double x1; double x2; } gradientInsets;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool interactiveWhenHidden;
@property (nonatomic) double labelVerticalPadding;
@property (nonatomic) double levelIndicatorHeight;
@property (nonatomic) long long mainTickMarkInterval;
@property (nonatomic) double markedValue;
@property (nonatomic) double maximumValue;
@property (nonatomic) double minimumValue;
@property (nonatomic) long long sliderVerticalAlignment;
@property (nonatomic) double sliderVerticalOffset;
@property (readonly) Class superclass;
@property (nonatomic) long long textOrientation;
@property (nonatomic) long long tickMarkCount;
@property (nonatomic) struct CGSize { double x1; double x2; } tickMarkSize;
@property (nonatomic) double tickMarkSpacing;
@property (nonatomic, readonly) <CEKTickMarksConfiguration> *tickMarksConfiguration;
@property (nonatomic, retain) NSString *title;
@property (nonatomic) long long titleAlignment;
@property (nonatomic) bool useTickMarkLegibilityShadows;
@property (nonatomic) double value;
@property (nonatomic) long long valueLabelVisibility;

+ (id)_integerFormatter;

- (void).cxx_destruct;
- (void)_clampValuesAndUpdateScrollPosition:(bool)arg1;
- (id)_contentScrollView;
- (void)_createGradientIfNeeded;
- (id)_dotView;
- (id)_edgeGradientView;
- (id)_feedbackGenerator;
- (bool)_isActive;
- (bool)_isAnimating;
- (bool)_isDimmed;
- (bool)_isOverscrolling;
- (bool)_isreAdjustingOffsets;
- (id)_levelIndicatorBackgroundView;
- (id)_levelIndicatorView;
- (bool)_markedValueWithinRange;
- (void)_setActive:(bool)arg1;
- (void)_setActive:(bool)arg1 animated:(bool)arg2;
- (void)_setAnimating:(bool)arg1;
- (void)_setDimmed:(bool)arg1;
- (void)_setDimmed:(bool)arg1 animated:(bool)arg2;
- (void)_setEdgeGradientView:(id)arg1;
- (void)_setNormalizedValue:(double)arg1;
- (void)_setOverscrolling:(bool)arg1;
- (void)_setShowValueLabel:(bool)arg1 animated:(bool)arg2;
- (void)_setTickMarkIndex:(unsigned long long)arg1;
- (void)_setValue:(double)arg1 shouldSendActions:(bool)arg2 shouldUpdateScrollPosition:(bool)arg3;
- (void)_sliderDidEndScrolling;
- (unsigned long long)_tickMarkIndex;
- (id)_tickMarksView;
- (id)_titleLabel;
- (void)_updateColorsAnimated:(bool)arg1;
- (void)_updateEnableAppearanceStateAnimated:(bool)arg1;
- (void)_updateFonts;
- (void)_updateLegibilityBackground;
- (void)_updateMarkedViewAnimated:(bool)arg1;
- (void)_updateScrollViewPosition;
- (void)_updateValueLabel;
- (id)_valueLabel;
- (double)_xOffsetForMarkedValue;
- (double)animationDuration;
- (double)defaultValue;
- (id)delegate;
- (unsigned long long)fontStyle;
- (id)formattedIntegerStringFromNumber:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameForLevelIndicator;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameForTicksView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameForTitleLabel;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameForValueLabel;
- (struct { double x1; double x2; })gradientInsets;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithTitle:(id)arg1;
- (bool)interactiveWhenHidden;
- (double)labelVerticalPadding;
- (void)layoutSubviews;
- (double)levelIndicatorHeight;
- (long long)mainTickMarkInterval;
- (double)markedValue;
- (double)maximumValue;
- (double)minimumValue;
- (void)removeGradients;
- (void)resetToDefault;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(bool)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint { double x1; double x2; })arg2 targetContentOffset:(inout struct CGPoint { double x1; double x2; }*)arg3;
- (void)setAnimationDuration:(double)arg1;
- (void)setDefaultValue:(double)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEnabled:(bool)arg1 animated:(bool)arg2;
- (void)setEnabled:(bool)arg1 dimmed:(bool)arg2 animated:(bool)arg3;
- (void)setFontStyle:(unsigned long long)arg1;
- (void)setGradientInsets:(struct { double x1; double x2; })arg1;
- (void)setInteractiveWhenHidden:(bool)arg1;
- (void)setLabelVerticalPadding:(double)arg1;
- (void)setLevelIndicatorHeight:(double)arg1;
- (void)setMainTickMarkInterval:(long long)arg1;
- (void)setMarkedValue:(double)arg1;
- (void)setMarkedValue:(double)arg1 animated:(bool)arg2;
- (void)setMaximumValue:(double)arg1;
- (void)setMinimumValue:(double)arg1;
- (void)setOpaqueGradientsWithColor:(id)arg1;
- (void)setSliderVerticalAlignment:(long long)arg1;
- (void)setSliderVerticalOffset:(double)arg1;
- (void)setTextOrientation:(long long)arg1;
- (void)setTextOrientation:(long long)arg1 animated:(bool)arg2;
- (void)setTickMarkCount:(long long)arg1;
- (void)setTickMarkSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setTickMarkSpacing:(double)arg1;
- (void)setTitle:(id)arg1;
- (void)setTitleAlignment:(long long)arg1;
- (void)setTransparentGradients;
- (void)setUseTickMarkLegibilityShadows:(bool)arg1;
- (void)setValue:(double)arg1;
- (void)setValueLabelVisibility:(long long)arg1;
- (void)set_levelIndicatorBackgroundView:(id)arg1;
- (void)set_reAdjustingOffsets:(bool)arg1;
- (void)set_titleLabel:(id)arg1;
- (void)set_valueLabel:(id)arg1;
- (long long)sliderVerticalAlignment;
- (double)sliderVerticalOffset;
- (long long)textOrientation;
- (long long)tickMarkCount;
- (struct CGSize { double x1; double x2; })tickMarkSize;
- (double)tickMarkSpacing;
- (id)tickMarksConfiguration;
- (void)tickMarksViewDidChangeWidthForTickMarkCount:(id)arg1;
- (void)tintColorDidChange;
- (id)title;
- (long long)titleAlignment;
- (bool)useTickMarkLegibilityShadows;
- (double)value;
- (long long)valueLabelVisibility;
- (double)xOffsetForValue:(double)arg1;

@end
