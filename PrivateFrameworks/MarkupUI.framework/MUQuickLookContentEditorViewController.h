
@interface MUQuickLookContentEditorViewController : MarkupViewController <MUImageAnalysisManagerDelegate, QuickLookContentEditor, UIDocumentPickerDelegate, UIScrollViewDelegate, VNDocumentCameraViewControllerDelegate> {
    NSMutableSet * _actionsNotEnablingMarkup;
    bool  _delegateRespondsToDetectedFormInContent;
    bool  _didAppearOnce;
    bool  _formDetectedInDocument;
    MUImageAnalysisManager * _imageAnalysisManager;
    id /* block */  _importHandler;
    UIImage * _latestImageForAnalysis;
    MUDelegateProxy<PDFViewDelegatePrivate> * _pdfViewDelegateProxy;
    unsigned long long  _presentationMode;
    id /* block */  _scanImageToPDFConversionHandler;
    id /* block */  _scanPDFHandler;
}

@property (nonatomic, retain) NSMutableSet *actionsNotEnablingMarkup;
@property (readonly) struct CGSize { double x1; double x2; } adjustedSourceImageSize;
@property (nonatomic, retain) NSUndoManager *akUndoManager;
@property (nonatomic) bool allEditingDisabled;
@property (nonatomic) bool allowsThumbnailViewPageReordering;
@property (nonatomic, readonly) AKController *annotationController;
@property (nonatomic) bool annotationEditingEnabled;
@property (nonatomic, readonly) bool canEncryptDocument;
@property (nonatomic) bool centersIgnoringContentInsets;
@property (nonatomic, readonly) NSDictionary *clientPreviewOptions;
@property (readonly) UIViewController<MUContentViewControllerProtocol> *contentViewController;
@property (nonatomic, readonly) UIScrollView *contentViewScrollView;
@property (nonatomic) unsigned long long currentPDFPageIndex;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <QuickLookContentEditorDelegate> *delegate;
@property bool delegateRespondsToDetectedFormInContent;
@property (readonly, copy) NSString *description;
@property bool didAppearOnce;
@property (nonatomic, readonly) bool documentIsLocked;
@property bool encryptPrivateMetadata;
@property (nonatomic, readonly) NSString *filledInfoButtonGlyphName;
@property (nonatomic, readonly) UIFindInteraction *findInteraction;
@property (nonatomic) bool fixedThumbnailView;
@property (nonatomic) bool forcesPDFViewTopAlignment;
@property bool formDetectedInDocument;
@property (nonatomic) bool formFillingEnabled;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSString *hostProcessBundleIdentifier;
@property (nonatomic, retain) MUImageAnalysisManager *imageAnalysisManager;
@property (nonatomic, readonly) UIView *imageAnalysisView;
@property (nonatomic, readonly) UIImage *imageForAnalysis;
@property (nonatomic, readonly) UIView *imageViewCombinedContentView;
@property (nonatomic, copy) id /* block */ importHandler;
@property (nonatomic, readonly) NSString *infoButtonGlyphName;
@property unsigned long long inkStyle;
@property (nonatomic, retain) UIImage *latestImageForAnalysis;
@property (nonatomic, retain) UINavigationBar *navBar;
@property (getter=isNavigationModeHorizontal, nonatomic) bool navigationModeHorizontal;
@property (nonatomic, readonly) UTType *outputContentType;
@property (nonatomic, readonly) NSString *outputType;
@property (readonly) UIView *pageLabelView;
@property (readonly) PDFDocument *pdfDocument;
@property (readonly) PDFView *pdfView;
@property (nonatomic, retain) MUDelegateProxy<PDFViewDelegatePrivate> *pdfViewDelegateProxy;
@property (nonatomic) bool pencilAlwaysDraws;
@property (nonatomic) unsigned long long presentationMode;
@property (nonatomic, copy) id /* block */ scanImageToPDFConversionHandler;
@property (nonatomic, copy) id /* block */ scanPDFHandler;
@property (getter=isShapeDetectionEnabled, nonatomic) bool shapeDetectionEnabled;
@property (nonatomic) bool shouldEnterVisualSearchAfterNextAnalysis;
@property (nonatomic) bool shouldHighlightTextAndDDAfterNextAnalysis;
@property (nonatomic) bool shouldUpliftSubjectAfterNextAnalysis;
@property (nonatomic) bool showShareButtonInToolbar;
@property (nonatomic) bool showThumbnailViewForMultipage;
@property (readonly) Class superclass;
@property (getter=isThumbnailViewHidden, nonatomic) bool thumbnailViewHidden;
@property (nonatomic) long long thumbnailViewStyle;
@property (nonatomic, readonly) UIView *toolbar;
@property (getter=isToolbarHidden, nonatomic) bool toolbarHidden;
@property (nonatomic) long long toolbarPosition;
@property (nonatomic, readonly) UIView *transitioningView;

+ (struct CGSize { double x1; double x2; })_suggestedContentSizeForImageSource:(struct CGImageSource { }*)arg1;
+ (struct CGSize { double x1; double x2; })_suggestedContentSizeForPDF:(id)arg1;
+ (struct CGSize { double x1; double x2; })suggestedContentSizeForData:(id)arg1;
+ (struct CGSize { double x1; double x2; })suggestedContentSizeForURL:(id)arg1;

- (void).cxx_destruct;
- (void)PDFView:(id)arg1 allowsFormFillingMode:(bool)arg2 forPage:(id)arg3;
- (void)_adjustImageInteractionForScrollEvent:(id)arg1;
- (bool)_canShowWhileLocked;
- (void)_convertToPDFAndWrite:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)_deletePage:(id)arg1;
- (void)_deletePages:(id)arg1 inDocument:(id)arg2;
- (void)_detectedEditEnablingMarkup:(bool)arg1;
- (id)_editedImageAnalysisQueue;
- (void)_flattenImageForAnalysis;
- (void)_handleLoadingWithCompletion:(id /* block */)arg1;
- (bool)_hasImageContent;
- (bool)_hasPDFContent;
- (bool)_imageAnalysisOverlayAcceptSingleTouch:(id)arg1;
- (void)_insertBlankPage:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)_insertBlankPageAfterPage:(id)arg1;
- (void)_insertDeletedPage:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)_insertFileAtURL:(id)arg1 type:(id)arg2 afterPage:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)_insertImageWithURL:(id)arg1 afterPage:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)_insertPDFDocumentWithURL:(id)arg1 afterPage:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)_insertPage:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)_insertPageFromFileAfterPage:(id)arg1;
- (void)_insertPagesFromFileURLs:(id)arg1 afterPage:(id)arg2;
- (unsigned long long)_insertPagesFromProvidedPDFDocument:(id)arg1 toPDFDocument:(id)arg2 atPageIndex:(unsigned long long)arg3;
- (void)_insertPagesFromScannerAfterPage:(id)arg1;
- (void)_loadSourceContentWithCompletion:(id /* block */)arg1;
- (void)_presentDocumentPicker:(id /* block */)arg1;
- (void)_presentDocumentScannerAfterPage:(id)arg1;
- (bool)_presentationModeAllowsEditing;
- (bool)_presentationModeAllowsMarkupOverlays;
- (void)_registerActionNotEnablingMarkup:(id)arg1;
- (void)_resetOriginalDelegate;
- (void)_rotatePage:(id)arg1 clockwise:(bool)arg2;
- (void)_setAsPDFViewDelegatePrivateIfNecessary;
- (void)_setPresentationModeForImageContent:(unsigned long long)arg1;
- (void)_setPresentationModeForPDFContent:(unsigned long long)arg1;
- (void)_setupAndStartImageAnalysisIfNeeded;
- (bool)_shouldShowMarkupOverlays;
- (void)_updateAnalysisButtonsContainerConstraints;
- (void)_updatePeekSize;
- (void)_updateThumbnailViewWithTraitCollection:(id)arg1;
- (bool)acceptSingleTouch:(id)arg1;
- (id)actionsNotEnablingMarkup;
- (bool)allowsEditing;
- (void)annotationController:(id)arg1 detectedEditOfType:(unsigned long long)arg2;
- (bool)canEditContent;
- (bool)canEditPDF;
- (bool)canEncryptDocument;
- (bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (bool)canShowPageViewLabel;
- (id)clientPreviewOptions;
- (void)contentControllerDidUnlockDocument:(id)arg1;
- (void)convertToPDFAndWrite:(id)arg1 completionHandler:(id /* block */)arg2;
- (bool)delegateRespondsToDetectedFormInContent;
- (bool)didAppearOnce;
- (void)documentCameraViewController:(id)arg1 didFailWithError:(id)arg2;
- (void)documentCameraViewController:(id)arg1 didFinishWithScan:(id)arg2;
- (void)documentCameraViewControllerDidCancel:(id)arg1;
- (bool)documentIsLocked;
- (void)documentPicker:(id)arg1 didPickDocumentsAtURLs:(id)arg2;
- (void)documentPickerWasCancelled:(id)arg1;
- (void)editDetectedForAnnotationController:(id)arg1;
- (id)filledInfoButtonGlyphName;
- (void)find:(id)arg1;
- (id)findInteraction;
- (void)findNext:(id)arg1;
- (void)findPrevious:(id)arg1;
- (void)flattenImageForAnalysis;
- (bool)formDetectedInDocument;
- (id)getMenuElementsForPage:(id)arg1;
- (bool)hasResultsForVisualSearch;
- (void)imageAnalysisInteractionDidDismissVisualSearchController;
- (void)imageAnalysisInteractionWillPresentVisualSearchController;
- (id)imageAnalysisManager;
- (id)imageAnalysisView;
- (void)imageAnalyzerWantsUpdateInfoButtonWithAnimation:(bool)arg1;
- (void)imageAnalyzerWantsUpdateOverlayViews;
- (id)imageForAnalysis;
- (id /* block */)importHandler;
- (id)infoButtonGlyphName;
- (void)infoButtonTapped;
- (id)init;
- (void)insertPages:(id)arg1 atIndexes:(id)arg2 inDocument:(id)arg3;
- (bool)isInteractionActive;
- (bool)isVisualSearchEnabled;
- (id)latestImageForAnalysis;
- (void)loadWithData:(id)arg1 archivedModelData:(id)arg2 placeholderImage:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)loadWithURL:(id)arg1 archivedModelData:(id)arg2 placeholderImage:(id)arg3 completionHandler:(id /* block */)arg4;
- (id)pdfPageOptionsForImageRef:(struct CGImage { }*)arg1 withPreviousPage:(id)arg2;
- (id)pdfViewDelegateProxy;
- (unsigned long long)presentationMode;
- (id)presentingViewControllerForImageAnalysisInteraction:(id)arg1;
- (id /* block */)scanImageToPDFConversionHandler;
- (id /* block */)scanPDFHandler;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewDidZoom:(id)arg1;
- (void)setActionsNotEnablingMarkup:(id)arg1;
- (void)setAnnotationEditingEnabled:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDelegateRespondsToDetectedFormInContent:(bool)arg1;
- (void)setDidAppearOnce:(bool)arg1;
- (void)setFormDetectedInDocument:(bool)arg1;
- (void)setImageAnalysisManager:(id)arg1;
- (void)setImportHandler:(id /* block */)arg1;
- (void)setLatestImageForAnalysis:(id)arg1;
- (void)setPdfViewDelegateProxy:(id)arg1;
- (void)setPresentationMode:(unsigned long long)arg1;
- (void)setScanImageToPDFConversionHandler:(id /* block */)arg1;
- (void)setScanPDFHandler:(id /* block */)arg1;
- (void)setShouldEnterVisualSearchAfterNextAnalysis:(bool)arg1;
- (void)setShouldHighlightTextAndDDAfterNextAnalysis:(bool)arg1;
- (void)setShouldUpliftSubjectAfterNextAnalysis:(bool)arg1;
- (void)setupAndStartImageAnalysisIfNeeded;
- (id)sharedSerialPagesEditionQueue;
- (bool)shouldEnterVisualSearchAfterNextAnalysis;
- (void)shouldHideMarkupOverlays:(bool)arg1 animated:(bool)arg2;
- (bool)shouldHighlightTextAndDDAfterNextAnalysis;
- (bool)shouldUpliftSubjectAfterNextAnalysis;
- (void)stopImageAnalysis;
- (id)supportedUTTypes;
- (void)traitCollectionDidChange:(id)arg1;
- (id)transitioningView;
- (void)updateForFullScreen:(bool)arg1 animated:(bool)arg2;
- (void)updateThumbnailView;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(bool)arg1;
- (void)willTransitionToTraitCollection:(id)arg1 withTransitionCoordinator:(id)arg2;

@end
