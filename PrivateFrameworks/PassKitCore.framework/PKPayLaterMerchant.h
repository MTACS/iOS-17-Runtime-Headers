
@interface PKPayLaterMerchant : NSObject <NSCopying, NSSecureCoding> {
    long long  _adamIdentifier;
    NSString * _authNetworkData;
    NSString * _city;
    long long  _cleanConfidence;
    NSString * _clearingNetworkData;
    NSString * _country;
    long long  _fallbackCategory;
    NSString * _industryCategory;
    long long  _industryCode;
    NSDate * _lastMerchantReprocessingDate;
    PKMapsBrand * _mapsBrand;
    PKMapsMerchant * _mapsMerchant;
    long long  _merchantCategory;
    long long  _merchantCategoryCode;
    NSString * _merchantIdentifier;
    NSString * _name;
    NSURL * _originURL;
    NSString * _rawCANL;
    NSString * _rawCity;
    NSString * _rawCountry;
    NSString * _rawName;
    NSString * _rawState;
    bool  _requiresMerchantReprocessing;
    NSString * _state;
    NSString * _webMerchantIdentifier;
    NSString * _webMerchantName;
    NSString * _zipcode;
}

@property (nonatomic) long long adamIdentifier;
@property (nonatomic, copy) NSString *authNetworkData;
@property (nonatomic, copy) NSString *city;
@property (nonatomic) long long cleanConfidence;
@property (nonatomic, copy) NSString *clearingNetworkData;
@property (nonatomic, copy) NSString *country;
@property (nonatomic) long long fallbackCategory;
@property (nonatomic, copy) NSString *industryCategory;
@property (nonatomic) long long industryCode;
@property (nonatomic, copy) NSDate *lastMerchantReprocessingDate;
@property (nonatomic, retain) PKMapsBrand *mapsBrand;
@property (nonatomic, retain) PKMapsMerchant *mapsMerchant;
@property (nonatomic) long long merchantCategory;
@property (nonatomic) long long merchantCategoryCode;
@property (nonatomic, copy) NSString *merchantIdentifier;
@property (nonatomic, copy) NSString *name;
@property (nonatomic, copy) NSURL *originURL;
@property (nonatomic, copy) NSString *rawCANL;
@property (nonatomic, copy) NSString *rawCity;
@property (nonatomic, copy) NSString *rawCountry;
@property (nonatomic, copy) NSString *rawName;
@property (nonatomic, copy) NSString *rawState;
@property (nonatomic) bool requiresMerchantReprocessing;
@property (nonatomic, copy) NSString *state;
@property (nonatomic, copy) NSString *webMerchantIdentifier;
@property (nonatomic, copy) NSString *webMerchantName;
@property (nonatomic, copy) NSString *zipcode;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (long long)adamIdentifier;
- (id)authNetworkData;
- (id)city;
- (long long)cleanConfidence;
- (id)clearingNetworkData;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)country;
- (id)description;
- (id)dictionaryRepresentation;
- (id)displayName;
- (bool)displayNameIsFallbackString;
- (id)displayNamePurchase;
- (void)encodeWithCoder:(id)arg1;
- (long long)fallbackCategory;
- (unsigned long long)hash;
- (id)industryCategory;
- (long long)industryCode;
- (id)initWithCoder:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (bool)isEqual:(id)arg1;
- (bool)isEqualToPayLaterMerchant:(id)arg1;
- (id)lastMerchantReprocessingDate;
- (id)mapsBrand;
- (id)mapsMerchant;
- (long long)merchantCategory;
- (long long)merchantCategoryCode;
- (id)merchantIdentifier;
- (id)name;
- (id)originURL;
- (bool)payLaterMerchantDictionaryIsEqual:(id)arg1;
- (id)rawCANL;
- (id)rawCity;
- (id)rawCountry;
- (id)rawName;
- (id)rawState;
- (bool)requiresMerchantReprocessing;
- (void)setAdamIdentifier:(long long)arg1;
- (void)setAuthNetworkData:(id)arg1;
- (void)setCity:(id)arg1;
- (void)setCleanConfidence:(long long)arg1;
- (void)setClearingNetworkData:(id)arg1;
- (void)setCountry:(id)arg1;
- (void)setFallbackCategory:(long long)arg1;
- (void)setIndustryCategory:(id)arg1;
- (void)setIndustryCode:(long long)arg1;
- (void)setLastMerchantReprocessingDate:(id)arg1;
- (void)setMapsBrand:(id)arg1;
- (void)setMapsMerchant:(id)arg1;
- (void)setMerchantCategory:(long long)arg1;
- (void)setMerchantCategoryCode:(long long)arg1;
- (void)setMerchantIdentifier:(id)arg1;
- (void)setName:(id)arg1;
- (void)setOriginURL:(id)arg1;
- (void)setRawCANL:(id)arg1;
- (void)setRawCity:(id)arg1;
- (void)setRawCountry:(id)arg1;
- (void)setRawName:(id)arg1;
- (void)setRawState:(id)arg1;
- (void)setRequiresMerchantReprocessing:(bool)arg1;
- (void)setState:(id)arg1;
- (void)setWebMerchantIdentifier:(id)arg1;
- (void)setWebMerchantName:(id)arg1;
- (void)setZipcode:(id)arg1;
- (id)state;
- (id)uniqueIdentifier;
- (id)webMerchantIdentifier;
- (id)webMerchantName;
- (id)zipcode;

@end
