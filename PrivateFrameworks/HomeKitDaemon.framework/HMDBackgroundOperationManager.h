
@interface HMDBackgroundOperationManager : HMFObject <HMFLogging, HMFTimerDelegate> {
    NSString * _backgroundOperationsDataStorePath;
    <HMDBackgroundOperationManagerCurrentDeviceStateDataSource> * _currentDeviceStateDataSource;
    HMFTimer * _dataSourceCoalescingTimer;
    NSMutableArray * _dataSourceList;
    HMFTimer * _deferralTimer;
    HMFTimer * _expirationTimer;
    HAPPairingIdentity * _hh1Key;
    HAPPairingIdentity * _hh2Key;
    HMDHomeManager * _homeManager;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    HMDBackgroundOperationGraph * _opGraph;
    NSMutableArray * _operationList;
    NSOperationQueue * _queue;
}

@property (nonatomic, retain) NSString *backgroundOperationsDataStorePath;
@property (nonatomic, readonly) <HMDBackgroundOperationManagerCurrentDeviceStateDataSource> *currentDeviceStateDataSource;
@property (nonatomic, readonly) HMFTimer *dataSourceCoalescingTimer;
@property (nonatomic, retain) NSMutableArray *dataSourceList;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) HMFTimer *deferralTimer;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) HMFTimer *expirationTimer;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) HAPPairingIdentity *hh1Key;
@property (nonatomic, retain) HAPPairingIdentity *hh2Key;
@property (nonatomic) HMDHomeManager *homeManager;
@property (nonatomic, readonly) HMDBackgroundOperationGraph *opGraph;
@property (nonatomic, retain) NSMutableArray *operationList;
@property (nonatomic, retain) NSOperationQueue *queue;
@property (readonly) Class superclass;

+ (id)allowedClasses;
+ (id)findAccessoryUsing:(id)arg1 fromHome:(id)arg2;
+ (id)findAccessoryUsing:(id)arg1 homeManager:(id)arg2;
+ (id)findHomeUsingIdentifier:(id)arg1 homeManager:(id)arg2;
+ (id)findHomeWhereThisDeviceIsConfirmedPrimaryResident:(id)arg1;
+ (id)getAllPairedAccessoriesOfAllHomes:(id)arg1;
+ (id)getAllReachableAccessories:(id)arg1;
+ (id)logCategory;
+ (id)sharedManager;

- (void).cxx_destruct;
- (void)__archiveToDiskForUnitTesting:(id)arg1;
- (void)__clearLocalStoreForUnitTesting;
- (id)__getReadyToExecuteOperations;
- (id)__initForUnitTesting:(id)arg1;
- (void)__removeAllDataSourcesForUnitTesting;
- (void)__removeAllOperationsForUnitTesting;
- (void)__resetAndRebuildOperationGraphForUnitTesting;
- (id)__unarchiveFromDiskForUnitTesting;
- (void)_dataSourceHasUpdate:(id)arg1;
- (void)_runOperation:(id)arg1 withParameters:(id)arg2;
- (void)_runOperationsAfterEvaluatingPredicate:(id)arg1;
- (void)_scheduleHH2AirPlayKeyRollIfNecessary:(id)arg1;
- (void)_scheduleHH2KeyRollIfNecessary:(id)arg1;
- (bool)_scheduleKeyRollForAccessory:(id)arg1;
- (void)addDataSource:(id)arg1;
- (void)addDefaultDataSources;
- (void)addOperation:(id)arg1;
- (bool)addOperationDependency:(id)arg1 dependsOn:(id)arg2;
- (void)auditKeyChainEntriesAndScheduleKeyRollOperationsIfNecessaryForHome:(id)arg1 isRunningOnResident:(bool)arg2;
- (void)auditKeyChainEntryForAccessory:(id)arg1 isRunningOnResident:(bool)arg2;
- (void)auditOwnerPairingForAirPlayAccessory:(id)arg1 isRunningOnResident:(bool)arg2;
- (id)backgroundOperationsDataStorePath;
- (void)checkAndRemoveExpiredOperations;
- (void)completeProcessingForOperation:(id)arg1;
- (id)currentDeviceStateDataSource;
- (id)dataSourceCoalescingTimer;
- (void)dataSourceHasUpdate:(id)arg1;
- (id)dataSourceList;
- (id)deferralTimer;
- (id)dumpState;
- (void)evaluateOperations;
- (id)expirationTimer;
- (id)getHH1ControllerKey;
- (id)getHH2ControllerKey;
- (id)hh1Key;
- (id)hh2Key;
- (id)homeManager;
- (id)initWithLocalStorePath:(id)arg1 currentDeviceStateDataSource:(id)arg2;
- (void)makeSureToLoadPairingIdentities;
- (id)opGraph;
- (id)operationList;
- (id)queue;
- (void)registerForNotifications;
- (void)removeAllOperationForAccessoryIdentifier:(id)arg1;
- (void)removeAllOperationsBeforeStartingHH2Migration;
- (void)removeOperation:(id)arg1;
- (void)removeOperationsForAccessoryIdentifier:(id)arg1 operationKind:(id)arg2;
- (void)scheduleHH2KeyRollForAccessory:(id)arg1;
- (bool)scheduleHH2KeyRollForAccessory:(id)arg1 previousIdentity:(id)arg2 newIdentity:(id)arg3;
- (void)scheduleHH2KeyRollForAirPlayAccessory:(id)arg1;
- (bool)scheduleHH2KeyRollForAirPlayAccessory:(id)arg1 previousIdentity:(id)arg2 newIdentity:(id)arg3;
- (void)scheduleHH2KeyRollIfNecessary;
- (void)scheduleHH2KeyRollIfNecessaryDueToNotification:(id)arg1;
- (void)scheduleHH2KeyRollOperationForHome:(id)arg1 isRunningOnResident:(bool)arg2;
- (void)scheduleTimerToCheckAndRemoveExpiredOperation;
- (void)scheduleTimerToRetryDeferredOperations;
- (void)setBackgroundOperationsDataStorePath:(id)arg1;
- (void)setDataSourceList:(id)arg1;
- (void)setHh1Key:(id)arg1;
- (void)setHh2Key:(id)arg1;
- (void)setHomeManager:(id)arg1;
- (void)setOperationList:(id)arg1;
- (void)setQueue:(id)arg1;
- (bool)shouldWeScheduleKeyRollOperationsOnThisDevice;
- (void)startSchedulingKeyRollOperations:(bool)arg1 forAccessory:(id)arg2;
- (void)timerDidFire:(id)arg1;
- (id)unarchiveFromDisk;

@end
