
@interface GKDashboardMultiplayerPickerDataSource : GKCollectionDataSource <GKDashboardPickerPlayerGroupCellDelegate, GameCenterUI.GKExpandedGroupViewControllerDelegate, GameCenterUI.GKSuggestionsPlayerSelectionProxy> {
    bool  _browsingForNearbyPlayers;
    NSMutableArray * _contactPlayers;
    GKContactDataSource * _contactSource;
    NSObject<GKDashboardMultiplayerPickerDatasourceDelegate> * _delegate;
    bool  _didLoad;
    NSArray * _friendPlayers;
    long long  _friendSortFilterScope;
    bool  _isShowingNearbyExpanded;
    long long  _maxSelectable;
    <GKDashboardNearbyBrowserDelegate> * _nearbyDelegate;
    bool  _nearbyOnly;
    NSMutableArray * _nearbyPlayers;
    id /* block */  _nearbyPlayersChangedHandler;
    int  _numberOfFriendsToShowInitially;
    NSMutableDictionary * _playerStates;
    NSMutableSet * _previouslyInvitedPlayers;
    NSArray * _searchPlayersAndGroups;
    NSMutableSet * _selectedMessageGroups;
    bool  _selectionShouldSkipDelegateResponse;
    bool  _showingExpandedSearch;
    bool  _showsAllFriends;
    NSMutableArray * _suggestedPlayerGroups;
    NSArray * _suggestedPlayers;
    _TtC12GameCenterUI26GKSuggestionsContainerCell * _suggestionContainerCell;
    bool  _supportsNearby;
}

@property (nonatomic) bool browsingForNearbyPlayers;
@property (nonatomic, retain) NSMutableArray *contactPlayers;
@property (nonatomic, retain) GKContactDataSource *contactSource;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) NSObject<GKDashboardMultiplayerPickerDatasourceDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool didLoad;
@property (nonatomic, retain) NSArray *friendPlayers;
@property (nonatomic) long long friendSortFilterScope;
@property (nonatomic, readonly) bool hasFriends;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isShowingNearbyExpanded;
@property (nonatomic) long long maxSelectable;
@property (nonatomic) <GKDashboardNearbyBrowserDelegate> *nearbyDelegate;
@property (nonatomic) bool nearbyOnly;
@property (nonatomic, retain) NSMutableArray *nearbyPlayers;
@property (nonatomic, copy) id /* block */ nearbyPlayersChangedHandler;
@property (nonatomic) int numberOfFriendsToShowInitially;
@property (nonatomic, retain) NSMutableDictionary *playerStates;
@property (nonatomic, retain) NSMutableSet *previouslyInvitedPlayers;
@property (nonatomic, retain) NSArray *searchPlayersAndGroups;
@property (nonatomic, retain) NSMutableSet *selectedMessageGroups;
@property (nonatomic, readonly) NSArray *selectedPlayers;
@property (nonatomic) bool selectionShouldSkipDelegateResponse;
@property (nonatomic) bool showingExpandedSearch;
@property (nonatomic) bool showsAllFriends;
@property (nonatomic, retain) NSMutableArray *suggestedPlayerGroups;
@property (nonatomic, retain) NSArray *suggestedPlayers;
@property (nonatomic) _TtC12GameCenterUI26GKSuggestionsContainerCell *suggestionContainerCell;
@property (readonly) Class superclass;
@property (nonatomic) bool supportsNearby;
@property (nonatomic, readonly) long long unmodifiedItemCount;

- (void).cxx_destruct;
- (bool)_canShowMoreFriends;
- (id)alternateSearchKeyForSection:(long long)arg1;
- (id)attributedFriendFilterTitle;
- (struct CGSize { double x1; double x2; })boundingSizeForItemsInCollectionView:(id)arg1;
- (bool)browsingForNearbyPlayers;
- (bool)canSelectPlayerGroup:(id)arg1 atIndexPath:(id)arg2 inCollectionView:(id)arg3;
- (id)candidateIndexPaths;
- (void)clearSelection;
- (id)collectionView;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didDeselectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (struct CGSize { double x1; double x2; })collectionView:(id)arg1 layout:(id)arg2 referenceSizeForFooterInSection:(long long)arg3;
- (struct CGSize { double x1; double x2; })collectionView:(id)arg1 layout:(id)arg2 referenceSizeForHeaderInSection:(long long)arg3;
- (struct CGSize { double x1; double x2; })collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (bool)collectionView:(id)arg1 shouldSelectItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (id)contactPlayers;
- (id)contactSource;
- (unsigned long long)cornerMaskForItemAtIndexPath:(id)arg1;
- (unsigned long long)cornerMaskForSectionHeader;
- (id)delegate;
- (void)deselectItemAtIndexPath:(id)arg1 animated:(bool)arg2;
- (void)didAddRecipientPlayers:(id)arg1;
- (void)didAttemptSelectingAlreadySelectedPlayers:(id)arg1 inGroup:(id)arg2;
- (void)didDeselectPlayerGroup:(id)arg1 indexPath:(id)arg2 dataSourceIdentifier:(id)arg3 completion:(id /* block */)arg4;
- (void)didDeselectPlayers:(id)arg1 indexPath:(id)arg2 dataSourceIdentifier:(id)arg3 completion:(id /* block */)arg4;
- (void)didExceedAvailablePlayers;
- (bool)didLoad;
- (void)didPickContact:(id)arg1;
- (void)didRemoveRecipientPlayers:(id)arg1;
- (void)didSelectPlayerGroup:(id)arg1 indexPath:(id)arg2 dataSourceIdentifier:(id)arg3 completion:(id /* block */)arg4;
- (void)didSelectPlayers:(id)arg1 indexPath:(id)arg2 dataSourceIdentifier:(id)arg3 completion:(id /* block */)arg4;
- (void)donateGroupToPeopleSuggester:(id)arg1;
- (void)expandPlayerGroup:(id)arg1 atIndexPath:(id)arg2 inCollectionView:(id)arg3;
- (void)expandedGroupViewControllerWillDismiss;
- (id)firstIndexPathForPlayer:(id)arg1;
- (id)friendPlayers;
- (long long)friendSortFilterScope;
- (id)fullContactWithIdentifier:(id)arg1;
- (long long)getMaxPlayerCount;
- (long long)getSelectedPlayerCount;
- (id)getSuggestedPlayerGroups;
- (void)handleLongPressGesture:(id)arg1;
- (bool)hasFriends;
- (id)headerTextForSection:(long long)arg1;
- (id)indexPathForFirstPlayer;
- (id)indexPathForPlayer:(id)arg1 inSection:(unsigned long long)arg2;
- (id)indexPathsForPlayer:(id)arg1;
- (id)initWithMaxSelectable:(long long)arg1 previouslyInvitedPlayers:(id)arg2 nearbyOnly:(bool)arg3;
- (bool)isPlayerAtIndexPathCoreRecent:(id)arg1;
- (bool)isShowingAddFriendsFooter;
- (bool)isShowingNearbyExpanded;
- (long long)itemCount;
- (void)loadDataWithCompletionHandler:(id /* block */)arg1;
- (long long)maxSelectable;
- (id)nearbyDelegate;
- (bool)nearbyOnly;
- (id)nearbyPlayers;
- (id /* block */)nearbyPlayersChangedHandler;
- (int)numberOfFriendsToShowInitially;
- (long long)numberOfItemsInSection:(long long)arg1;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (void)pickerWillSendInvites;
- (id)playerCellForItemAtIndexPath:(id)arg1 inCollectionView:(id)arg2;
- (double)playerCellHeightInCollectionView:(id)arg1;
- (id)playerForIndexPath:(id)arg1;
- (id)playerForPlayerID:(id)arg1;
- (id)playerGroupCellForItemAtIndexPath:(id)arg1 inCollectionView:(id)arg2;
- (bool)playerIsSelectable:(id)arg1;
- (bool)playerIsSelected:(id)arg1;
- (id)playerStates;
- (id)playersForSection:(long long)arg1 ignoreSearch:(bool)arg2;
- (double)preferredCollectionHeight;
- (id)previouslyInvitedPlayers;
- (id)searchKeyForSection:(long long)arg1;
- (id)searchPlayersAndGroups;
- (void)searchTextHasChanged;
- (void)selectItemAtIndexPath:(id)arg1 animated:(bool)arg2 scrollPosition:(unsigned long long)arg3;
- (id)selectedMessageGroups;
- (id)selectedPlayers;
- (bool)selectionShouldSkipDelegateResponse;
- (void)setBrowsingForNearbyPlayers:(bool)arg1;
- (void)setContactPlayers:(id)arg1;
- (void)setContactSource:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDidLoad:(bool)arg1;
- (void)setFriendPlayers:(id)arg1;
- (void)setFriendSortFilterScope:(long long)arg1;
- (void)setIsShowingNearbyExpanded:(bool)arg1;
- (void)setMaxSelectable:(long long)arg1;
- (void)setNearbyDelegate:(id)arg1;
- (void)setNearbyOnly:(bool)arg1;
- (void)setNearbyPlayer:(id)arg1 reachable:(bool)arg2;
- (void)setNearbyPlayerID:(id)arg1 reachable:(bool)arg2;
- (void)setNearbyPlayers:(id)arg1;
- (void)setNearbyPlayersChangedHandler:(id /* block */)arg1;
- (void)setNumberOfFriendsToShowInitially:(int)arg1;
- (void)setPlayerStates:(id)arg1;
- (void)setPreviouslyInvitedPlayers:(id)arg1;
- (void)setSearchPlayersAndGroups:(id)arg1;
- (void)setSelectedMessageGroups:(id)arg1;
- (void)setSelectionShouldSkipDelegateResponse:(bool)arg1;
- (void)setShowingExpandedSearch:(bool)arg1;
- (void)setShowsAllFriends:(bool)arg1;
- (void)setSuggestedPlayerGroups:(id)arg1;
- (void)setSuggestedPlayers:(id)arg1;
- (void)setSuggestionContainerCell:(id)arg1;
- (void)setSupportsNearby:(bool)arg1;
- (void)setupCollectionView:(id)arg1;
- (bool)shouldSelectPlayerGroup:(id)arg1;
- (void)showSelectionLimitAlert;
- (bool)showingExpandedSearch;
- (bool)showsAllFriends;
- (void)sortPlayersByNickname:(id)arg1;
- (void)sortPlayersByRecentlyPlayed:(id)arg1;
- (id)suggestedPlayerGroups;
- (id)suggestedPlayers;
- (id)suggestionContainerCell;
- (id)suggestionsCellForItemAtIndexPath:(id)arg1 inCollectionView:(id)arg2;
- (bool)supportsNearby;
- (long long)unmodifiedItemCount;
- (void)updateMessageGroupsPlayerSelection;
- (void)updatePlayerGroups:(id)arg1 forPlayers:(id)arg2 excludedIndexPath:(id)arg3;
- (void)updateSelectionStateForCollectionView:(id)arg1 indexPaths:(id)arg2;
- (void)updateStateForUnreachableNearbyPlayer:(id)arg1;
- (void)updateVisibleItemsWithPlayers:(id)arg1 indexPath:(id)arg2 dataSourceIdentifier:(id)arg3 completion:(id /* block */)arg4;

@end
