
@interface WDDisplayTypeDataSourcesTableViewController : HKTableViewController <HKAdaptiveModalPresented, HKSourceListDataSourceObserver, HKSwitchTableViewCellDelegate> {
    NSMutableDictionary * _authorizationRecordsBySource;
    HKAuthorizationStore * _authorizationStore;
    NSMutableSet * _dataSources;
    HKDisplayCategory * _displayCategory;
    HKDisplayType * _displayType;
    HKTitledIconHeaderView * _headerView;
    HKHealthStore * _healthStore;
    bool  _isLoaded;
    UIBarButtonItem * _leftBarButtonItemReference;
    NSSet * _loadedAllDataSources;
    NSDictionary * _loadedAuthorizationRecordsBySource;
    NSArray * _loadedOrderedDataSources;
    NSMutableArray * _orderedDataSources;
    NSArray * _preEditSourcesOrdered;
    WDProfile * _profile;
    HKProfileStore * _profileStore;
    NSArray * _readerAppSources;
    NSArray * _readerResearchStudySources;
    NSArray * _sectionIdentifiers;
    bool  _shouldInsetSectionContentForDataSourceDataList;
    HKSourceListDataSource * _sourceListDataSource;
    WDSourceOrderController * _sourceOrderController;
    NSMutableSet * _sourcesPendingToggleOff;
    NSMutableSet * _sourcesPendingToggleOn;
}

@property (nonatomic, retain) UIBarButtonItem *leftBarButtonItemReference;
@property (nonatomic, copy) NSSet *loadedAllDataSources;
@property (nonatomic, copy) NSDictionary *loadedAuthorizationRecordsBySource;
@property (nonatomic, copy) NSArray *loadedOrderedDataSources;
@property (nonatomic, retain) NSMutableArray *orderedDataSources;
@property (nonatomic) bool shouldInsetSectionContentForDataSourceDataList;
@property (nonatomic, retain) HKSourceListDataSource *sourceListDataSource;

- (void).cxx_destruct;
- (void)_addDataSources:(id)arg1;
- (bool)_canEditDataSources;
- (id)_createIndexPathsWithSection:(long long)arg1 startingRow:(long long)arg2 numIndices:(long long)arg3;
- (id)_dataSourceCellForTableView:(id)arg1 row:(unsigned long long)arg2;
- (void)_fetchAuthorizationRecordsBySourceForType:(id)arg1 completion:(id /* block */)arg2;
- (void)_fetchDataSourcesForSampleType:(id)arg1 completion:(id /* block */)arg2;
- (void)_fetchOrderedSourcesForType:(id)arg1 completion:(id /* block */)arg2;
- (void)_gatherDataFromDataSource:(id)arg1;
- (void)_handleReturnedImage:(id)arg1 forSource:(id)arg2 cell:(id)arg3 tableView:(id)arg4 fetchError:(id)arg5;
- (bool)_isPrimaryProfile;
- (void)_loadDataSource;
- (id)_makeDataListViewControllerForSource:(id)arg1;
- (id)_noneTableViewCell;
- (bool)_objectTypeRequiresPerObjectAuthorization;
- (id)_readerSourceCellForTableView:(id)arg1 sourceArray:(id)arg2 row:(unsigned long long)arg3 group:(long long)arg4;
- (void)_refreshUI;
- (void)_sortDataSources;
- (bool)_sourceIsEnabled:(id)arg1;
- (void)_sourceIsEnabledDidChange:(id)arg1;
- (void)_updateOrderedSources;
- (void)_willDisableSource:(id)arg1;
- (void)_willEnableSource:(id)arg1;
- (id)createSectionIdentifiers;
- (id)initWithCoder:(id)arg1;
- (id)initWithDisplayType:(id)arg1 displayCategory:(id)arg2 sourceOrderController:(id)arg3 profile:(id)arg4;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithStyle:(long long)arg1;
- (id)leftBarButtonItemReference;
- (id)loadedAllDataSources;
- (id)loadedAuthorizationRecordsBySource;
- (id)loadedOrderedDataSources;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)orderedDataSources;
- (long long)sectionForSectionIdentifier:(long long)arg1;
- (long long)sectionIdentifierForSection:(long long)arg1;
- (void)setEditing:(bool)arg1 animated:(bool)arg2;
- (void)setLeftBarButtonItemReference:(id)arg1;
- (void)setLoadedAllDataSources:(id)arg1;
- (void)setLoadedAuthorizationRecordsBySource:(id)arg1;
- (void)setLoadedOrderedDataSources:(id)arg1;
- (void)setOrderedDataSources:(id)arg1;
- (void)setShouldInsetSectionContentForDataSourceDataList:(bool)arg1;
- (void)setSourceListDataSource:(id)arg1;
- (bool)shouldInsetSectionContentForDataSourceDataList;
- (bool)showDataSourcesSectionOnly;
- (id)sourceListDataSource;
- (void)sourceListDataSourceDidUpdate:(id)arg1;
- (void)switchCellValueChanged:(id)arg1 value:(bool)arg2;
- (bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (bool)tableView:(id)arg1 canMoveRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 moveRowAtIndexPath:(id)arg2 toIndexPath:(id)arg3;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (bool)tableView:(id)arg1 shouldHighlightRowAtIndexPath:(id)arg2;
- (bool)tableView:(id)arg1 shouldIndentWhileEditingRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 targetIndexPathForMoveFromRowAtIndexPath:(id)arg2 toProposedIndexPath:(id)arg3;
- (id)tableView:(id)arg1 titleForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (void)updateHeaderView;
- (void)viewControllerDidLeaveAdaptiveModal;
- (void)viewControllerWillEnterAdaptiveModal;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;

@end
