
@interface QLServerThread : NSObject {
    _QLCacheThread * _cacheThread;
    NSObject<OS_dispatch_queue> * _completionBlocksQueue;
    NSMutableDictionary * _domainsToCaches;
    NSObject<OS_dispatch_queue> * _downloadResponseProcessingQueue;
    NSOperationQueue * _downloadsOperationQueue;
    NSOperationQueue * _downscaledThumbnailGenerationQueue;
    bool  _drainScheduled;
    NSMutableDictionary * _externalThumbnailCacheAvailablePendingBlocks;
    NSMutableDictionary * _externalThumbnailCacheInboxURLs;
    NSObject<OS_dispatch_queue> * _externalThumbnailCacheQueue;
    NSMutableDictionary * _externalThumbnailCacheThumbnailURLs;
    NSMutableDictionary * _externalThumbnailCaches;
    NSMutableDictionary * _fsidsToCaches;
    NSMutableSet * _knownDomainsWithoutExternalThumbnailCaches;
    NSURL * _overrideBasePersonaVolumesURLForTesting;
    NSObject<OS_dispatch_queue> * _pendingDownloadsQueue;
    NSMutableDictionary * _pendingRequests;
    NSObject<OS_dispatch_queue> * _previewThumbnailGeneratorQueue;
    NSObject<OS_dispatch_queue> * _queue;
    NSMutableDictionary * _queuedDownloadRequests;
    _Atomic int  _thumbnailDownloadsInFlight;
    NSOperationQueue * _uncachedThumbnailRetrievalQueue;
    NSMutableDictionary * _volumesToCaches;
    NSObject<OS_dispatch_source> * _watchdogTimer;
}

@property (retain) _QLCacheThread *cacheThread;
@property (retain) NSObject<OS_dispatch_queue> *completionBlocksQueue;
@property (retain) NSMutableDictionary *domainsToCaches;
@property (retain) NSMutableDictionary *externalThumbnailCacheAvailablePendingBlocks;
@property (retain) NSMutableDictionary *externalThumbnailCacheInboxURLs;
@property (retain) NSObject<OS_dispatch_queue> *externalThumbnailCacheQueue;
@property (retain) NSMutableDictionary *externalThumbnailCacheThumbnailURLs;
@property (retain) NSMutableDictionary *externalThumbnailCaches;
@property (retain) NSMutableDictionary *fsidsToCaches;
@property (retain) NSMutableSet *knownDomainsWithoutExternalThumbnailCaches;
@property (copy) NSURL *overrideBasePersonaVolumesURLForTesting;
@property (retain) NSMutableDictionary *pendingRequests;
@property (retain) NSObject<OS_dispatch_queue> *queue;
@property (retain) NSMutableDictionary *queuedDownloadRequests;
@property (retain) NSMutableDictionary *volumesToCaches;

+ (id)sharedInstance;
+ (void)updateThumbnailRequestThumbnailVersionWithThirdPartyGeneratorInformationIfNeeded:(id)arg1;

- (void).cxx_destruct;
- (void)_addAllThumbnailsSizesToCacheForRequest:(id)arg1 withImageSource:(struct CGImageSource { }*)arg2 imageSize:(struct CGSize { double x1; double x2; })arg3 alreadyCachedSize:(struct CGSize { double x1; double x2; })arg4 completionHandler:(id /* block */)arg5;
- (void)_addThumbnailRequestBatchToQueue:(id)arg1 generationHandler:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)_callCompletionHandler:(id /* block */)arg1 ofThumbnailRequestBatch:(id)arg2;
- (bool)_canUseAdditionToProvideThumbnail:(id)arg1 forThumbnailRequest:(id)arg2 taggedLogicalURL:(id)arg3;
- (void)_completeHandledThumbnailRequest:(id)arg1;
- (struct CGImage { }*)_createUndecoratedAppIconForData:(id)arg1 ofSize:(struct CGSize { double x1; double x2; })arg2 scale:(double)arg3;
- (void)_downloadThumbnailForRequest:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)_installRequestsFinishedWatchdog;
- (void)_notifyGenerationHandlerOfThumbnailGenerationForRequest:(id)arg1 bitmapData:(id)arg2 format:(id)arg3 metadata:(id)arg4 contentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg5 iconFlavor:(int)arg6 thumbnailRepresentation:(long long)arg7 clientShouldTakeOwnership:(bool)arg8 error:(id)arg9;
- (void)_removeRequestFromPendingRequests:(id)arg1;
- (void)_saveLargeThumbnailForDocumentAtURL:(id)arg1 toGenstoreWithImage:(struct CGImage { }*)arg2 automaticallyGenerated:(bool)arg3;
- (void)_saveLargeThumbnailToGenstoreWithData:(id)arg1 url:(id)arg2;
- (bool)_saveResultForThumbnailRequest:(id)arg1 withBitmapData:(id)arg2 format:(id)arg3 error:(id*)arg4;
- (void)_updateInformationForProviderAndCallPendingBlocksForProviderDomainID:(id)arg1 withConnection:(id)arg2 inboxURL:(id)arg3 thumbnailsURL:(id)arg4;
- (void)addImageData:(id)arg1 toCacheForRequest:(id)arg2 withBitmapFormat:(id)arg3 contentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg4 flavor:(int)arg5 metadata:(id)arg6;
- (void)addImageData:(id)arg1 withBitmapFormat:(id)arg2 contentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 hasIconModeApplied:(bool)arg4 flavor:(int)arg5 extensionBadge:(id)arg6 metadata:(id)arg7 toCacheAndCompleteRequest:(id)arg8;
- (id)allKnownDataSeparatedVolumes;
- (id)cacheThread;
- (id)cacheThreadForFileIdentifier:(id)arg1 atURL:(id)arg2;
- (id)cacheThreadForProviderDomainID:(id)arg1;
- (id)cacheThreadForRequest:(id)arg1;
- (id)cacheThreadForVolume:(id)arg1;
- (void)cancelThumbnailRequests:(id)arg1;
- (void)completeThumbnailRequest:(id)arg1 bitmapData:(id)arg2 metadata:(id)arg3 contentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg4 thumbnailRepresentation:(long long)arg5 iconFlavor:(int)arg6 format:(id)arg7 clientShouldTakeOwnership:(bool)arg8;
- (void)completeThumbnailRequest:(id)arg1 thumbnailData:(id)arg2 updatedMetadata:(id)arg3;
- (id)completionBlocksQueue;
- (void)didNotFindLowQualityEntryInCachedForThumbnailRequest:(id)arg1 error:(id)arg2;
- (id)domainsToCaches;
- (void)downloadThumbnailForRequest:(id)arg1 completionHandler:(id /* block */)arg2;
- (bool)downloadThumbnails:(id)arg1 forProvider:(id)arg2;
- (void)drainDownloadsQueueIfNeeded;
- (id)externalThumbnailCacheAvailablePendingBlocks;
- (id)externalThumbnailCacheInboxURLs;
- (id)externalThumbnailCacheQueue;
- (id)externalThumbnailCacheThumbnailURLs;
- (id)externalThumbnailCaches;
- (id)failedDownloadErrorForRequest:(id)arg1 underlyingError:(id)arg2;
- (void)failedToCompleteThumbnailRequest:(id)arg1 error:(id)arg2;
- (void)findThumbnailInAddition:(id)arg1 request:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)findUncachedThumbnailInExternalThumbnailCacheForRequest:(id)arg1 item:(id)arg2 URL:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)findUncachedThumbnailInGenStoreForRequest:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)findUncachedThumbnailInGenStoreOrDownload:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)forEachCacheThread:(id /* block */)arg1;
- (id)fsidsToCaches;
- (id)genStoreThumbnailForRequest:(id)arg1 error:(id*)arg2;
- (void)generateSuccessiveThumbnailRepresentationsForRequests:(id)arg1 generationHandler:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)generateThumbnailForThumbnailRequest:(id)arg1 shouldUpdateGenstore:(bool)arg2 completionHandler:(id /* block */)arg3;
- (void)getExternalThumbnailCacheConnectionForItem:(id)arg1 atURL:(id)arg2 completionHandler:(id /* block */)arg3;
- (id)imageDataForImage:(struct CGImage { }*)arg1;
- (id)init;
- (id)initWithCacheSize:(long long)arg1 location:(id)arg2;
- (id)knownDomainsWithoutExternalThumbnailCaches;
- (id)makeCacheThreadForPersonaString:(id)arg1 containerURL:(id*)arg2;
- (id)overrideBasePersonaVolumesURLForTesting;
- (id)pendingRequests;
- (void)perform:(id /* block */)arg1;
- (void)perform:(id /* block */)arg1 afterDelay:(long long)arg2;
- (void)processLargeThumbnailData:(id)arg1 withContentType:(id)arg2 precacheThumbnails:(bool)arg3 forRequest:(id)arg4 completionHandler:(id /* block */)arg5;
- (id)processedPNGAppIconDataForData:(id)arg1 ofType:(id)arg2 size:(struct CGSize { double x1; double x2; })arg3 scale:(double)arg4;
- (id)queue;
- (void)queueThumbnailRequest:(id)arg1 tryCache:(bool)arg2 tryAdditionsFirst:(bool)arg3;
- (id)queuedDownloadRequests;
- (void)receivedExternalCacheConnection:(id)arg1 error:(id)arg2 forProviderDomainID:(id)arg3;
- (void)removeCachedThumbnailsFromUninstalledFileProvidersWithIdentifiers:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)removeCachedThumbnailsFromUninstalledFileProvidersWithRemainingFileProviderIdentifiers:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)reset;
- (void)sendResultForThumbnailRequest:(id)arg1 bitmapData:(id)arg2 format:(id)arg3 metadata:(id)arg4 contentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg5 iconFlavor:(int)arg6 thumbnailRepresentation:(long long)arg7 clientShouldTakeOwnership:(bool)arg8 reenqueueRequest:(bool)arg9 error:(id)arg10;
- (void)setCacheThread:(id)arg1;
- (void)setCompletionBlocksQueue:(id)arg1;
- (void)setDomainsToCaches:(id)arg1;
- (void)setExternalThumbnailCacheAvailablePendingBlocks:(id)arg1;
- (void)setExternalThumbnailCacheInboxURLs:(id)arg1;
- (void)setExternalThumbnailCacheQueue:(id)arg1;
- (void)setExternalThumbnailCacheThumbnailURLs:(id)arg1;
- (void)setExternalThumbnailCaches:(id)arg1;
- (void)setFsidsToCaches:(id)arg1;
- (void)setKnownDomainsWithoutExternalThumbnailCaches:(id)arg1;
- (void)setLastHitDateOfAllCachedThumbnailsToDate:(id)arg1;
- (void)setOverrideBasePersonaVolumesURLForTesting:(id)arg1;
- (void)setPendingRequests:(id)arg1;
- (void)setQueue:(id)arg1;
- (void)setQueuedDownloadRequests:(id)arg1;
- (void)setVolumesToCaches:(id)arg1;
- (void)storeImage:(struct CGImage { }*)arg1 inExternalThumbnailCacheForItem:(id)arg2 atURL:(id)arg3;
- (void)thumbnailRequestWasCancelled:(id)arg1;
- (id)uncachedCacheThreadForFileAtURL:(id)arg1;
- (id)uncachedCacheThreadForItem:(id)arg1;
- (id)uncachedCacheThreadForProviderDomainID:(id)arg1;
- (id)volumesToCaches;

@end
