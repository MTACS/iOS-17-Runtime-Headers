
@interface MTEpisode : NSManagedObject <IMMetricsDataSource>

@property (nonatomic, retain) NSString *artworkBackgroundColor;
@property (nonatomic) double artworkHeight;
@property (nonatomic, retain) NSString *artworkTemplateURL;
@property (nonatomic, retain) NSString *artworkTextPrimaryColor;
@property (nonatomic, retain) NSString *artworkTextQuaternaryColor;
@property (nonatomic, retain) NSString *artworkTextSecondaryColor;
@property (nonatomic, retain) NSString *artworkTextTertiaryColor;
@property (nonatomic) double artworkWidth;
@property (nonatomic, retain) NSString *assetURL;
@property (nonatomic, retain) NSAttributedString *attributedDescriptionFromHTML;
@property (nonatomic) bool audio;
@property (nonatomic, retain) NSString *author;
@property (nonatomic) bool backCatalog;
@property (nonatomic, readonly) long long bookmarksSyncType;
@property (nonatomic, retain) NSUUID *bootstrapGeneration;
@property (nonatomic) long long byteSize;
@property (nonatomic, retain) NSString *category;
@property (nonatomic, retain) NSString *cleanedTitle;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) long long downloadBehavior;
@property (nonatomic) double downloadDate;
@property (nonatomic, retain) NSString *downloadPath;
@property (nonatomic, retain) NSString *drmKeyUri;
@property (nonatomic) double duration;
@property (nonatomic, retain) NSString *enclosureURL;
@property (nonatomic) double entitledDuration;
@property (nonatomic, retain) NSString *entitledEnclosureURL;
@property (nonatomic, retain) NSString *entitledPriceType;
@property (nonatomic) long long entitlementState;
@property (nonatomic) long long episodeLevel;
@property (nonatomic) long long episodeNumber;
@property (nonatomic) long long episodeShowTypeSpecificLevel;
@property (nonatomic, retain) NSString *episodeType;
@property (nonatomic) bool explicit;
@property (nonatomic) bool externalType;
@property (nonatomic) bool feedDeleted;
@property (nonatomic) double firstTimeAvailable;
@property (nonatomic) double firstTimeAvailableAsFree;
@property (nonatomic) double firstTimeAvailableAsPaid;
@property (nonatomic) long long flags;
@property (nonatomic) double freeDuration;
@property (nonatomic, retain) NSString *freeEnclosureURL;
@property (nonatomic, retain) NSString *freePriceType;
@property (nonatomic, retain) NSString *guid;
@property (nonatomic) bool hasBeenPlayed;
@property (nonatomic, readonly) bool hasFreeVersion;
@property (readonly) unsigned long long hash;
@property (nonatomic) double importDate;
@property (nonatomic) int importSource;
@property (nonatomic) bool isBookmarked;
@property (nonatomic) bool isBookmarksMigrationRecoveredEpisode;
@property (nonatomic) bool isFromITunesSync;
@property (nonatomic) bool isHidden;
@property (nonatomic) bool isNew;
@property (nonatomic, retain) NSString *itemDescription;
@property (nonatomic) bool itemDescriptionHasHTML;
@property (nonatomic, retain) NSData *itemDescriptionWithHTMLData;
@property (nonatomic, retain) NSString *itemDescriptionWithoutHTML;
@property (nonatomic, retain) NSString *itunesSubtitle;
@property (nonatomic, retain) NSString *itunesTitle;
@property (nonatomic) double lastBookmarkedDate;
@property (nonatomic) double lastDatePlayed;
@property (nonatomic) double lastUserMarkedAsPlayedDate;
@property (nonatomic) bool listenNowEpisode;
@property (nonatomic) bool manuallyAdded;
@property (nonatomic) bool metadataFirstSyncEligible;
@property (nonatomic, retain) NSString *metadataIdentifier;
@property (nonatomic) double metadataTimestamp;
@property (nonatomic) double modifiedDateScore;
@property (nonatomic) long long persistentID;
@property (nonatomic) long long playCount;
@property (nonatomic, readonly) long long playState;
@property (nonatomic) double playStateLastModifiedDate;
@property (nonatomic, readonly) bool playStateManuallySet;
@property (nonatomic, readonly) long long playStateSource;
@property (nonatomic) float playhead;
@property (nonatomic, retain) NSSet *playlists;
@property (nonatomic, retain) MTPodcast *podcast;
@property (nonatomic, retain) NSString *podcastUuid;
@property (nonatomic, retain) NSString *priceType;
@property (nonatomic) double priceTypeChangedDate;
@property (nonatomic) double pubDate;
@property (nonatomic) bool saved;
@property (nonatomic) long long seasonNumber;
@property (nonatomic, retain) NSData *securityScopedAssetData;
@property (nonatomic) bool sentNotification;
@property (nonatomic, retain) NSSet *settings;
@property (nonatomic) long long storeTrackId;
@property (readonly) Class superclass;
@property (nonatomic) bool suppressAutoDownload;
@property (nonatomic, retain) MTSyncInfo *syncInfo;
@property (nonatomic, retain) NSString *title;
@property (nonatomic) long long trackNum;
@property (nonatomic) bool unplayedTab;
@property (nonatomic) double upNextScore;
@property (nonatomic) bool userDeleted;
@property (nonatomic) bool userEpisode;
@property (nonatomic, retain) NSString *uti;
@property (nonatomic, retain) NSString *uuid;
@property (nonatomic) bool video;
@property (nonatomic) bool visible;
@property (nonatomic, retain) NSString *webpageURL;

// Image: /System/Library/PrivateFrameworks/PodcastsFoundation.framework/PodcastsFoundation

+ (id)_dateWithOffset:(id)arg1 fromDate:(id)arg2;
+ (id)_predicateForNotEntitlementState:(long long)arg1;
+ (id)_predicateForPriceType:(long long)arg1 excluding:(bool)arg2;
+ (id)assetURLIsPackagedMedia;
+ (double)endOfTrackForDuration:(double)arg1;
+ (id)episodicSortDescriptors:(long long)arg1;
+ (bool)exists:(id)arg1;
+ (id)friendlyPubDateStringForEpisode:(id)arg1;
+ (id)friendlyPubDateStringForEpisode:(id)arg1 abbreviated:(bool)arg2;
+ (bool)isExternalMedia:(id)arg1;
+ (id)isHLSEpisode;
+ (bool)isPlayhead:(double)arg1 resumableForDuration:(double)arg2;
+ (id)legacyPredicateForAutomaticDeletionOnShow:(id)arg1 deletePlayedEpisodes:(bool)arg2 episodeLimit:(long long)arg3;
+ (id)legacyPredicateForAutomaticDownloadsOnShow:(id)arg1 deletePlayedEpisodes:(bool)arg2 episodeLimit:(long long)arg3 serialNextEpisodesSort:(bool)arg4 includePlayableWithoutAccount:(bool)arg5;
+ (id)optimizedPredicateForAutomaticDeletionOnShow:(id)arg1 deletePlayedEpisodes:(bool)arg2 episodeLimit:(long long)arg3;
+ (id)optimizedPredicateForAutomaticDownloadsOnShow:(id)arg1 deletePlayedEpisodes:(bool)arg2 episodeLimit:(long long)arg3 serialNextEpisodesSort:(bool)arg4 includePlayableWithoutAccount:(bool)arg5;
+ (id)optimizedPredicateForPlayedEpisodePreservation:(bool)arg1;
+ (id)optimizedPredicatePlaystateForPreservation:(bool)arg1;
+ (id)optimizedRemovalPredicateForRecentlyPlayed:(bool)arg1;
+ (id)predicateForAllBookmarkedEpisodes;
+ (id)predicateForAllBookmarksMigrationRecoveredEpisodes;
+ (id)predicateForAllEpisodes;
+ (id)predicateForAllEpisodesIncludingHiddenOnPodcastUuid:(id)arg1;
+ (id)predicateForAllEpisodesOnPodcast:(id)arg1;
+ (id)predicateForAllEpisodesOnPodcast:(id)arg1 includeNonAudioEpisodes:(bool)arg2;
+ (id)predicateForAllEpisodesOnPodcastUuid:(id)arg1;
+ (id)predicateForAllEpisodesOnPodcastUuid:(id)arg1 includeNonAudioEpisodes:(bool)arg2;
+ (id)predicateForAllEpisodesOnPodcastUuids:(id)arg1;
+ (id)predicateForAllEpisodesOnPodcastUuids:(id)arg1 includeNonAudioEpisodes:(bool)arg2;
+ (id)predicateForAllUnbookmarkedEpisodes;
+ (id)predicateForAtLeastPartiallyPlayedInInterval:(double)arg1;
+ (id)predicateForAudio:(bool)arg1;
+ (id)predicateForAutomaticDeletionOnShow:(id)arg1 deletePlayedEpisodes:(bool)arg2 episodeLimit:(long long)arg3;
+ (id)predicateForAutomaticDeletionOnShow:(id)arg1 deletePlayedEpisodes:(bool)arg2 episodeLimit:(long long)arg3 useOptimizedPredicate:(bool)arg4;
+ (id)predicateForAutomaticDownloadsOnShow:(id)arg1 deletePlayedEpisodes:(bool)arg2 episodeLimit:(long long)arg3 serialNextEpisodesSort:(bool)arg4 includePlayableWithoutAccount:(bool)arg5;
+ (id)predicateForAutomaticallyDownloadedEpisodesExcludedByGlobalLimitSettings:(long long)arg1 excludeHidden:(bool)arg2;
+ (id)predicateForAutomaticallyDownloadedEpisodesExcludedByShowLimitSettings:(long long)arg1 excludeHidden:(bool)arg2;
+ (id)predicateForBacklog:(bool)arg1;
+ (id)predicateForBookmarkedEpisodes;
+ (id)predicateForBookmarkedEpisodesExcludingUUIDs:(id)arg1;
+ (id)predicateForBookmarkedEpisodesOnPodcastUuid:(id)arg1;
+ (id)predicateForBookmarksMigrationRecoveredEpisodesOnPodcastUuid:(id)arg1;
+ (id)predicateForDRMKeyRequired;
+ (id)predicateForDerivedEntitlementStateEntitled;
+ (id)predicateForDerivedEntitlementStateFree;
+ (id)predicateForDerivedEntitlementStateUnentitled;
+ (id)predicateForDownloadBehavior:(long long)arg1;
+ (id)predicateForDownloadLimitForEpisodeLimit:(long long)arg1;
+ (id)predicateForDownloaded:(bool)arg1;
+ (id)predicateForDownloaded:(bool)arg1 excludeHidden:(bool)arg2;
+ (id)predicateForDownloadedEpisodesOnPodcastUuid:(id)arg1;
+ (id)predicateForDownloadedFairPlayEpisodes;
+ (id)predicateForEntitledEpisodes;
+ (id)predicateForEpisodeGuid:(id)arg1;
+ (id)predicateForEpisodeGuid:(id)arg1 onFeedURL:(id)arg2;
+ (id)predicateForEpisodeGuid:(id)arg1 onPodcastUuid:(id)arg2;
+ (id)predicateForEpisodeGuids:(id)arg1;
+ (id)predicateForEpisodeStoreTrackId:(long long)arg1;
+ (id)predicateForEpisodeStoreTrackIds:(id)arg1;
+ (id)predicateForEpisodeTitle:(id)arg1;
+ (id)predicateForEpisodeTitle:(id)arg1 onPodcastUuid:(id)arg2;
+ (id)predicateForEpisodeType:(long long)arg1;
+ (id)predicateForEpisodeTypeFilter:(long long)arg1;
+ (id)predicateForEpisodeUuid:(id)arg1;
+ (id)predicateForEpisodeUuids:(id)arg1;
+ (id)predicateForEpisodesDeterminedByLimitSettings:(long long)arg1;
+ (id)predicateForEpisodesFromiTunesSyncOnPodcastUuid:(id)arg1;
+ (id)predicateForEpisodesImportedAfterDate:(id)arg1;
+ (id)predicateForEpisodesInFeedForPodcastUuid:(id)arg1;
+ (id)predicateForEpisodesInSearchResults;
+ (id)predicateForEpisodesInStationShow:(id)arg1;
+ (id)predicateForEpisodesIsFromiTunesSyncOnPodcastUuid:(id)arg1;
+ (id)predicateForEpisodesOnPodcastUuid:(id)arg1 deletePlayedEpisodes:(bool)arg2;
+ (id)predicateForEpisodesOnUnplayedTab;
+ (id)predicateForEpisodesOnUnplayedTabOnPodcastUuid:(id)arg1 ctx:(id)arg2;
+ (id)predicateForEpisodesOnUnplayedTabOnPodcastUuid:(id)arg1 deletePlayedEpisodes:(bool)arg2;
+ (id)predicateForEpisodesOnUnplayedTabOnPodcastUuid:(id)arg1 episodeLimit:(long long)arg2 deletePlayedEpisodes:(bool)arg3;
+ (id)predicateForEpisodesOnUnplayedTabOnPodcastUuid:(id)arg1 episodeLimit:(long long)arg2 deletePlayedEpisodes:(bool)arg3 limitToDownloadBehaviorAutomatic:(bool)arg4;
+ (id)predicateForEpisodesPlayableWithoutAccount;
+ (id)predicateForEpisodesPriceChangedAfterOffset:(id)arg1 fromDate:(id)arg2;
+ (id)predicateForEpisodesPriceTypeChangedThisWeek;
+ (id)predicateForEpisodesPublishedAfterDate:(id)arg1;
+ (id)predicateForEpisodesPublishedAfterOffset:(id)arg1 fromDate:(id)arg2;
+ (id)predicateForEpisodesPublishedBeforeDate:(id)arg1;
+ (id)predicateForEpisodesPublishedLastTwoWeeks;
+ (id)predicateForEpisodesPublishedLastTwoWeeksWithTodayDate:(id)arg1;
+ (id)predicateForEpisodesPublishedOnDate:(id)arg1;
+ (id)predicateForEpisodesPublishedThisMonth;
+ (id)predicateForEpisodesPublishedThisMonthWithTodayDate:(id)arg1;
+ (id)predicateForEpisodesPublishedThisWeek;
+ (id)predicateForEpisodesPublishedThisWeekWithTodayDate:(id)arg1;
+ (id)predicateForEpisodesPublishedToday;
+ (id)predicateForEpisodesRequiringAccount;
+ (id)predicateForEpisodesThatShouldBeAutodownloadedForShow:(id)arg1 deletePlayedEpisodes:(bool)arg2 episodeLimit:(long long)arg3 serialNextEpisodesSort:(bool)arg4 includePlayableWithoutAccount:(bool)arg5;
+ (id)predicateForEpisodesToPreserveForUser:(bool)arg1 episodeLimit:(long long)arg2;
+ (id)predicateForEpisodesWhichNeedEntitlementStateUpdate;
+ (id)predicateForEpisodesWhichNeedEntitlementStateUpdateForShowUUID:(id)arg1 subscriptionState:(bool)arg2;
+ (id)predicateForEpisodesWithEpisodeNumbersGreaterThan:(long long)arg1;
+ (id)predicateForEpisodesWithGlobalLimitSetting;
+ (id)predicateForEpisodesWithSeasonAndEpisodeNumbersGreaterThanOrEqualTo:(long long)arg1 seasonNumber:(long long)arg2;
+ (id)predicateForEpisodesWithSeasonNumbersOnPodcastUuid:(id)arg1;
+ (id)predicateForEpisodesWithUnsatisfiedAvailabilityDate;
+ (id)predicateForEpisodesWithinLevel:(unsigned long long)arg1;
+ (id)predicateForExplicit:(bool)arg1;
+ (id)predicateForExternalType:(bool)arg1;
+ (id)predicateForFeedDeleted:(bool)arg1;
+ (id)predicateForFeedURL:(id)arg1;
+ (id)predicateForFeedURLs:(id)arg1;
+ (id)predicateForHLS;
+ (id)predicateForHLSDownloadedExcludeHidden:(bool)arg1;
+ (id)predicateForHasAnyVisualPlayState;
+ (id)predicateForHasBeenPlayed;
+ (id)predicateForHasEpisodeNumber;
+ (id)predicateForHasNonEmptyEnclosureURL;
+ (id)predicateForHasSeasonNumber;
+ (id)predicateForHasSomeSeasonNumberWithNoEpisodeNumber;
+ (id)predicateForHasValidPersistentId:(bool)arg1;
+ (id)predicateForHidingFuturePlayedTimestamps;
+ (id)predicateForIsBackCatalogItem;
+ (id)predicateForIsFromiTunesSync:(bool)arg1;
+ (id)predicateForIsNew:(bool)arg1;
+ (id)predicateForIsNotTopLevel;
+ (id)predicateForIsTopLevel;
+ (id)predicateForLibraryEpisodesOnPodcastUuid:(id)arg1;
+ (id)predicateForLimittedEpisodesOnPodcastUuid:(id)arg1 determinedByLimit:(long long)arg2 deletePlayedEpisodes:(bool)arg3;
+ (id)predicateForListenNow;
+ (id)predicateForListenNowForPodcastUuid:(id)arg1;
+ (id)predicateForListenNowLatestEpisodes;
+ (id)predicateForListenedAfterMarkedAsPlayed;
+ (id)predicateForMetadataFirstSyncEligible:(bool)arg1;
+ (id)predicateForNilLastDatePlayed;
+ (id)predicateForNilLastUserMarkedAsPlayedDate;
+ (id)predicateForNonHLS;
+ (id)predicateForNonHLSDownloadedExcludeHidden:(bool)arg1;
+ (id)predicateForNonNilLastDatePlayed;
+ (id)predicateForNonNilLastUserMarkedAsPlayedDate;
+ (id)predicateForNotManuallyMarkedAsPlayed;
+ (id)predicateForNotPriceType:(long long)arg1;
+ (id)predicateForNotUnplayed;
+ (id)predicateForOtherEpisodesOnPodcastUuid:(id)arg1 baseEpisodesPredicate:(id)arg2 deletePlayedEpisodes:(bool)arg3;
+ (id)predicateForPartiallyPlayedInLastTwoMonths;
+ (id)predicateForPersistentId:(id)arg1;
+ (id)predicateForPersistentIds:(id)arg1;
+ (id)predicateForPlayStateManuallySet:(bool)arg1;
+ (id)predicateForPlayableEpisode:(bool)arg1;
+ (id)predicateForPlayed:(bool)arg1;
+ (id)predicateForPlayedDateSetByListening;
+ (id)predicateForPlayedInInterval:(double)arg1;
+ (id)predicateForPlaylistEpisodes;
+ (id)predicateForPodcastIsNotHidden;
+ (id)predicateForPodcastIsNotHiddenNotImplicitlyFollowed;
+ (id)predicateForPodcastIsSerial:(bool)arg1;
+ (id)predicateForPodcastIsSubscribed:(bool)arg1;
+ (id)predicateForPodcastPaidSubscriptionActive:(bool)arg1;
+ (id)predicateForPreviouslyPlayed;
+ (id)predicateForPreviouslyPlayedHidingFutureTimestamps;
+ (id)predicateForPriceType:(long long)arg1;
+ (id)predicateForPubDateLimit:(long long)arg1;
+ (id)predicateForRSSEpisodes;
+ (id)predicateForRecentlyPlayed;
+ (id)predicateForRecentlyPlayedEpisodesToBeDeletedOnPodcastUuid:(id)arg1 deletePlayedEpisodes:(bool)arg2;
+ (id)predicateForSaved:(bool)arg1;
+ (id)predicateForSeasonNumber:(long long)arg1;
+ (id)predicateForSeasonNumberWithNoEpisodeNumber:(long long)arg1;
+ (id)predicateForSentNotification:(bool)arg1;
+ (id)predicateForStationEligibleEpisodes;
+ (id)predicateForStoreIdentifier:(id)arg1;
+ (id)predicateForSuppressAutoDownload:(bool)arg1;
+ (id)predicateForUnbookmarkedEpisodes;
+ (id)predicateForUnplayedTabFlag:(bool)arg1;
+ (id)predicateForUserEpisode:(bool)arg1;
+ (id)predicateForUserEpisodes;
+ (id)predicateForUserEpisodesOnPodcastUuid:(id)arg1 ctx:(id)arg2;
+ (id)predicateForUserEpisodesOnPodcastUuid:(id)arg1 episodeLimit:(long long)arg2 deletePlayedEpisodes:(bool)arg3 limitToDownloadBehaviorAutomatic:(bool)arg4;
+ (id)predicateForUserPreservedDownload:(bool)arg1;
+ (id)predicateForUserSetTopLevelEpisodes;
+ (id)predicateForVideo:(bool)arg1;
+ (id)predicateForVisuallyPlayed:(bool)arg1;
+ (id)predicateForWatchBaseEpisodesIncludingOnlyAudio:(bool)arg1;
+ (id)predicateForWatchRecentlyPlayed;
+ (id)propertiesToFetchAssetURL;
+ (id)propertiesToFetchBestTitle;
+ (id)propertiesToFetchIsBackCatalogItem;
+ (id)propertiesToFetchIsExplicit;
+ (id)propertiesToFetchIsPartiallyPlayed;
+ (id)propertiesToFetchIsPartiallyPlayedBackCatalogItem;
+ (id)propertiesToFetchIsPlayed;
+ (id)propertiesToFetchIsPlayheadPartiallyPlayed;
+ (id)propertiesToFetchIsVisuallyPlayed;
+ (id)propertiesToFetchPlaybackProgress;
+ (id)propertiesToFetchTimeRemaining;
+ (id)propertiesToObserveForDownloadableEpisodes;
+ (id)propertyPathForPodcastProperty:(id)arg1;
+ (id)relationshipKeyPathsForPrefetchingIsExplicit;
+ (id)seasonSortDescriptors:(long long)arg1;
+ (id)sortDescriptorsForCalculatingEpisodeLevel;
+ (id)sortDescriptorsForDownloadedDateAscending:(bool)arg1;
+ (id)sortDescriptorsForEpisodeNumberAscending:(bool)arg1;
+ (id)sortDescriptorsForFirstAvailableAscending:(bool)arg1;
+ (id)sortDescriptorsForLastBookmarkedDateAscending:(bool)arg1;
+ (id)sortDescriptorsForLastDatePlayedAscending:(bool)arg1;
+ (id)sortDescriptorsForListenNow;
+ (id)sortDescriptorsForListenNowLatestEpisodes;
+ (id)sortDescriptorsForModifiedDateUpNextScore;
+ (id)sortDescriptorsForPubDateAscending:(bool)arg1;
+ (id)sortDescriptorsForRecentlyPlayed;
+ (id)sortDescriptorsForSeasonAndEpisodeNumberAscending:(bool)arg1;
+ (id)sortDescriptorsForSeasonsWithOldestEpisodesFirst:(bool)arg1;
+ (id)sortDescriptorsForTitle;
+ (id)sortDescriptorsForUpNextScore;
+ (id)timeRemainingStringForEpisode:(id)arg1;
+ (id)timeRemainingStringForEpisode:(id)arg1 abbreviated:(bool)arg2;
+ (id)userDefaultPropertiesAffectingPredicates;

- (long long)_resolvedEntitlementState;
- (void)_setAssetUrl:(id)arg1;
- (id)assetURL;
- (id)attributedDescriptionFromHTML;
- (id)bestSummary;
- (id)bestTitle;
- (id)bestUrl;
- (long long)bookmarksSyncType;
- (id)displayURL;
- (double)endOfTrack;
- (long long)episodeTypeResolvedValue;
- (bool)hasFreeVersion;
- (bool)hasNonZeroSeasonNumber;
- (void)incremementPlayCount;
- (bool)isAudio;
- (bool)isBackCatalogItem;
- (bool)isBonus;
- (bool)isDownloaded;
- (bool)isEntitled;
- (bool)isExplicit;
- (bool)isExternalType;
- (bool)isInPodcastDetailsUnplayedTab;
- (bool)isInUserEpisodes;
- (bool)isMedia;
- (bool)isPartiallyPlayed;
- (bool)isPartiallyPlayedBackCatalogItem;
- (bool)isPlayed;
- (bool)isPlayheadPartiallyPlayed;
- (bool)isPlayheadResumable;
- (bool)isRestricted;
- (bool)isShareable;
- (bool)isTopLevel;
- (bool)isTrailer;
- (bool)isUnplayed;
- (bool)isVideo;
- (bool)isVisuallyPlayed;
- (void)markAsBookmarked;
- (void)markAsBookmarkedOnTimestamp:(double)arg1;
- (void)markAsUnbookmarked;
- (id)metricsContentIdentifier;
- (long long)mt_syncID;
- (id)numberedTitle;
- (long long)parsePriceType;
- (id)playURL;
- (double)playbackProgress;
- (double)playbackProgressSanitized;
- (id)playedText;
- (id)playedTextForCarplay;
- (void)resolveAvailabilityDate;
- (void)setAssetURL:(id)arg1;
- (void)setAssetURL:(id)arg1;
- (void)setAttributedDescriptionFromHTML:(id)arg1;
- (void)setByteSize:(long long)arg1;
- (void)setCleanedTitle:(id)arg1;
- (void)setDuration:(double)arg1;
- (void)setEnclosureURL:(id)arg1;
- (void)setEntitledDuration:(double)arg1;
- (void)setEpisodeLevel:(long long)arg1;
- (void)setEpisodeNumber:(long long)arg1;
- (void)setEpisodeType:(id)arg1;
- (void)setExplicit:(bool)arg1;
- (void)setFeedDeleted:(bool)arg1;
- (void)setFreeDuration:(double)arg1;
- (void)setImportDate:(double)arg1;
- (void)setIsNew:(bool)arg1;
- (void)setIsTopLevel:(bool)arg1;
- (void)setItemDescription:(id)arg1;
- (void)setItunesSubtitle:(id)arg1;
- (void)setItunesTitle:(id)arg1;
- (void)setLastDatePlayed:(double)arg1;
- (void)setListenNowEpisode:(bool)arg1;
- (void)setMetadataFirstSyncEligible:(bool)arg1;
- (void)setMetadataIdentifier:(id)arg1;
- (void)setPersistentID:(long long)arg1;
- (void)setPodcast:(id)arg1;
- (void)setPodcastUuid:(id)arg1;
- (void)setPubDate:(double)arg1;
- (void)setSeasonNumber:(long long)arg1;
- (void)setTrackNum:(long long)arg1;
- (void)setUti:(id)arg1;
- (void)setWebpageURL:(id)arg1;
- (void)suppressAutomaticDownloadsIfNeeded;
- (double)timeRemaining;
- (void)unsuppressAutomaticDownloadsIfNeeded;
- (void)updateEntitlementState;
- (void)updateListenNowSortingDate;

// Image: /System/Library/PrivateFrameworks/NanoMusicSync.framework/NanoMusicSync

+ (id)_sizeEstimation;
+ (id)propertiesToFetchDownloadInfo;
+ (id)relationshipKeyPathsForPrefetchingDownloadInfo;

- (id)downloadInfo;

// Image: /System/Library/PrivateFrameworks/PodcastsKit.framework/PodcastsKit

+ (id)dateLabelDescriptionForEpisode:(id)arg1 download:(id)arg2;
+ (long long)downloadSizeLimitForEpisode:(id)arg1;
+ (long long)downloadSizeLimitForVideo:(bool)arg1;
+ (id)insertNewEpisodeInManagedObjectContext:(id)arg1;
+ (id)insertNewEpisodeInManagedObjectContext:(id)arg1 title:(id)arg2 podcast:(id)arg3 pubDate:(id)arg4 byteSize:(long long)arg5 guid:(id)arg6 uti:(id)arg7 contentId:(long long)arg8 enclosureUrl:(id)arg9 playStateSource:(int)arg10 importSource:(int)arg11;
+ (void)prepareForPlatform:(id)arg1;

- (void)didChangePersistentID;
- (bool)isPlayable;
- (unsigned long long)reasonForNotPlayable;
- (void)setAuthor:(id)arg1;
- (void)setGuid:(id)arg1;
- (void)setPlayCount:(long long)arg1;
- (void)setPlayState:(long long)arg1 manually:(bool)arg2 source:(int)arg3;
- (void)setPlayed:(bool)arg1 manually:(bool)arg2 source:(int)arg3;
- (void)setPlayhead:(float)arg1;
- (void)setTitle:(id)arg1;
- (void)updateUPPIdentifierIfNeeded;
- (void)updateUPPTimestamp;

// Image: /System/Library/PrivateFrameworks/PodcastsUI.framework/PodcastsUI

+ (id)artworkForEpisodeUuid:(id)arg1 size:(struct CGSize { double x1; double x2; })arg2 triggerDownload:(bool)arg3;
+ (void)asyncDiskArtworkForEpisodeUuid:(id)arg1 size:(struct CGSize { double x1; double x2; })arg2 completion:(id /* block */)arg3;
+ (void)downloadArtworkIfNeededForEpisodeUuid:(id)arg1 successCallback:(id /* block */)arg2;
+ (bool)isImageCachedForEpisodeUuid:(id)arg1;

- (id)artworkWithSize:(struct CGSize { double x1; double x2; })arg1;
- (id)lazyAttributedDescription;
- (id)playStatusImage;
- (id)playStatusImageForDarkBackground:(bool)arg1;
- (id)playStatusImageForTheme:(id)arg1;

@end
