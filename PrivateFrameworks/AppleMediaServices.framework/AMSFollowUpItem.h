
@interface AMSFollowUpItem : NSObject {
    ACAccount * _account;
    NSArray * _actions;
    NSString * _bundleIconName;
    bool  _disableGrouping;
    long long  _displayStyle;
    NSDate * _expirationDate;
    NSString * _footer;
    bool  _hardwareOffer;
    NSString * _identifier;
    NSString * _informativeText;
    NSObject<OS_dispatch_queue> * _internalQueue;
    bool  _keepNotificationOnLockscreen;
    AMSMetricsEvent * _metricsEvent;
    NSObject<OS_dispatch_queue> * _metricsQueue;
    AMSFollowUpNotification * _notification;
    bool  _shouldPostNotification;
    NSString * _title;
    NSMutableDictionary * _userInfo;
}

@property (nonatomic, retain) ACAccount *account;
@property (nonatomic, retain) NSArray *actions;
@property (nonatomic, readonly) bool active;
@property (nonatomic, readonly) NSString *backingIdentifier;
@property (nonatomic, retain) NSString *bundleIconName;
@property (nonatomic) bool disableGrouping;
@property (nonatomic) long long displayStyle;
@property (nonatomic, retain) NSDate *expirationDate;
@property (nonatomic, retain) NSString *footer;
@property (nonatomic, readonly) NSString *groupIdentifier;
@property (getter=isHardwareOffer, nonatomic) bool hardwareOffer;
@property (nonatomic, retain) NSString *identifier;
@property (nonatomic, retain) NSString *informativeText;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *internalQueue;
@property (nonatomic) bool keepNotificationOnLockscreen;
@property (nonatomic, retain) NSString *logKey;
@property (nonatomic, copy) AMSMetricsEvent *metricsEvent;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *metricsQueue;
@property (nonatomic, retain) AMSFollowUpNotification *notification;
@property (nonatomic) long long priority;
@property (nonatomic) bool shouldPostNotification;
@property (nonatomic, retain) NSString *title;
@property (nonatomic, retain) NSMutableDictionary *userInfo;

+ (id)backingIdentifierForIdentifier:(id)arg1 account:(id)arg2;
+ (id)componentsFromBackingIdentifier:(id)arg1;
+ (id)sharedISO8601DateFormatter;

- (void).cxx_destruct;
- (id)account;
- (id)actions;
- (bool)active;
- (id)backingIdentifier;
- (id)bundleIconName;
- (bool)disableGrouping;
- (long long)displayStyle;
- (id)expirationDate;
- (id)footer;
- (id)generateItem;
- (id)groupIdentifier;
- (id)identifier;
- (id)informativeText;
- (id)initWithFollowUpItem:(id)arg1;
- (id)initWithIdentifier:(id)arg1 account:(id)arg2 priority:(long long)arg3;
- (id)initWithIdentifier:(id)arg1 jsonDictionary:(id)arg2 account:(id)arg3 priority:(long long)arg4 logKey:(id)arg5;
- (id)internalQueue;
- (bool)isHardwareOffer;
- (bool)keepNotificationOnLockscreen;
- (id)logKey;
- (id)metricsEvent;
- (id)metricsQueue;
- (id)notification;
- (id)postMetricsWithBag:(id)arg1;
- (id)postMetricsWithBagContract:(id)arg1;
- (long long)priority;
- (void)setAccount:(id)arg1;
- (void)setActions:(id)arg1;
- (void)setBundleIconName:(id)arg1;
- (void)setDisableGrouping:(bool)arg1;
- (void)setDisplayStyle:(long long)arg1;
- (void)setExpirationDate:(id)arg1;
- (void)setFooter:(id)arg1;
- (void)setHardwareOffer:(bool)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setInformativeText:(id)arg1;
- (void)setInternalQueue:(id)arg1;
- (void)setKeepNotificationOnLockscreen:(bool)arg1;
- (void)setLogKey:(id)arg1;
- (void)setMetricsEvent:(id)arg1;
- (void)setMetricsQueue:(id)arg1;
- (void)setNotification:(id)arg1;
- (void)setPriority:(long long)arg1;
- (void)setShouldPostNotification:(bool)arg1;
- (void)setTitle:(id)arg1;
- (void)setUserInfo:(id)arg1;
- (bool)shouldOverwriteItem:(id)arg1;
- (bool)shouldPostNotification;
- (id)title;
- (id)userInfo;

@end
