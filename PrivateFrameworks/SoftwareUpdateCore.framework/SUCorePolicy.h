
@interface SUCorePolicy : NSObject <NSCopying, NSSecureCoding> {
    bool  _allowSameVersion;
    bool  _allowsCellular;
    NSString * _alternateAssetAudienceUUID;
    SUCorePolicyApply * _applyPolicy;
    NSString * _assetAudienceUUID;
    bool  _background;
    NSString * _bridgeOSDownloadDirectory;
    bool  _bridgeOSIgnoreMinimumVersionCheck;
    int  _cacheDeleteUrgency;
    bool  _checkAvailableSpace;
    NSDictionary * _defaultDescriptorValues;
    NSString * _deviceClass;
    bool  _disableAlternateUpdate;
    NSString * _documentationAssetType;
    SUCorePolicyDocumentationDownload * _documentationDownloadPolicy;
    SUCorePolicyDocumentationScan * _documentationScanPolicy;
    NSString * _downloadAuthorizationHeader;
    SUCorePolicyPreflightDownloadSU * _downloadPreflightPolicy;
    bool  _enableBridgeOSInstall;
    bool  _enableEmbeddedOSInstall;
    bool  _enableOSPersonalization;
    SUCorePolicyPreflightFDRRecovery * _fdrRecoveryPreflightPolicy;
    NSString * _hwModelStr;
    NSString * _installedSFRVersion;
    bool  _isInternal;
    SUCorePolicyLoadBrain * _loadBrainPolicy;
    NSData * _localAuthenticationContext;
    NSNumber * _localAuthenticationUserID;
    NSString * _mdmBootstrapToken;
    bool  _performPreflightEncryptedCheck;
    bool  _performPreflightSnapshotCheck;
    NSString * _personalizationServerURL;
    SUCorePolicyPreflightPersonalize * _personalizePreflightPolicy;
    NSString * _personalizedManifestRootsPath;
    NSArray * _policyExtensions;
    SUCorePolicyPrepare * _preparePolicy;
    NSString * _prerequisiteBuildVersion;
    SUCorePolicyPreflightPrerequisiteCheck * _prerequisiteCheckPreflightPolicy;
    NSString * _prerequisiteProductVersion;
    NSString * _prerequisiteRestoreVersion;
    NSString * _productType;
    NSString * _proxyHostName;
    NSNumber * _proxyPortNumber;
    int  _qualityOfService;
    NSString * _releaseType;
    bool  _restrictToFull;
    SUCorePolicyResume * _resumePolicy;
    SUCorePolicyRollback * _rollbackPolicy;
    bool  _skipVolumeSealing;
    NSString * _softwareUpdateAssetType;
    SUCorePolicySoftwareUpdateDownload * _softwareUpdateDownloadPolicy;
    SUCorePolicySoftwareUpdateScan * _softwareUpdateScanPolicy;
    long long  _specifiedUsedPolicies;
    NSData * _ssoToken;
    SUCorePolicySuspend * _suspendPolicy;
    NSString * _targetRestoreVersion;
    NSString * _targetVolumeUUID;
    NSString * _updateBrainLocationOverride;
    NSString * _updateMetricContext;
    NSDictionary * _updateMetricEventFields;
    NSString * _updateVolumePath;
    NSString * _userAgentString;
    bool  _userInitiated;
    SUCorePolicyPreflightWakeup * _wakeupPreflightPolicy;
}

@property (nonatomic) bool allowSameVersion;
@property (nonatomic) bool allowsCellular;
@property (nonatomic, retain) NSString *alternateAssetAudienceUUID;
@property (nonatomic, retain) SUCorePolicyApply *applyPolicy;
@property (nonatomic, retain) NSString *assetAudienceUUID;
@property (nonatomic) bool background;
@property (nonatomic, retain) NSString *bridgeOSDownloadDirectory;
@property (nonatomic) bool bridgeOSIgnoreMinimumVersionCheck;
@property (nonatomic) int cacheDeleteUrgency;
@property (nonatomic) bool checkAvailableSpace;
@property (nonatomic, retain) NSDictionary *defaultDescriptorValues;
@property (nonatomic, retain) NSString *deviceClass;
@property (nonatomic) bool disableAlternateUpdate;
@property (nonatomic, retain) NSString *documentationAssetType;
@property (nonatomic, retain) SUCorePolicyDocumentationDownload *documentationDownloadPolicy;
@property (nonatomic, retain) SUCorePolicyDocumentationScan *documentationScanPolicy;
@property (nonatomic, retain) NSString *downloadAuthorizationHeader;
@property (nonatomic, retain) SUCorePolicyPreflightDownloadSU *downloadPreflightPolicy;
@property (nonatomic) bool enableBridgeOSInstall;
@property (nonatomic) bool enableEmbeddedOSInstall;
@property (nonatomic) bool enableOSPersonalization;
@property (nonatomic, retain) SUCorePolicyPreflightFDRRecovery *fdrRecoveryPreflightPolicy;
@property (nonatomic, retain) NSString *hwModelStr;
@property (nonatomic, retain) NSString *installedSFRVersion;
@property (nonatomic) bool isInternal;
@property (nonatomic, retain) SUCorePolicyLoadBrain *loadBrainPolicy;
@property (nonatomic, retain) NSData *localAuthenticationContext;
@property (nonatomic, retain) NSNumber *localAuthenticationUserID;
@property (nonatomic, retain) NSString *mdmBootstrapToken;
@property (nonatomic) bool performPreflightEncryptedCheck;
@property (nonatomic) bool performPreflightSnapshotCheck;
@property (nonatomic, retain) NSString *personalizationServerURL;
@property (nonatomic, retain) SUCorePolicyPreflightPersonalize *personalizePreflightPolicy;
@property (nonatomic, retain) NSString *personalizedManifestRootsPath;
@property (nonatomic, retain) NSArray *policyExtensions;
@property (nonatomic, retain) SUCorePolicyPrepare *preparePolicy;
@property (nonatomic, retain) NSString *prerequisiteBuildVersion;
@property (nonatomic, retain) SUCorePolicyPreflightPrerequisiteCheck *prerequisiteCheckPreflightPolicy;
@property (nonatomic, retain) NSString *prerequisiteProductVersion;
@property (nonatomic, retain) NSString *prerequisiteRestoreVersion;
@property (nonatomic, retain) NSString *productType;
@property (nonatomic, retain) NSString *proxyHostName;
@property (nonatomic, retain) NSNumber *proxyPortNumber;
@property (nonatomic) int qualityOfService;
@property (nonatomic, retain) NSString *releaseType;
@property (nonatomic) bool restrictToFull;
@property (nonatomic, retain) SUCorePolicyResume *resumePolicy;
@property (nonatomic, retain) SUCorePolicyRollback *rollbackPolicy;
@property (nonatomic) bool skipVolumeSealing;
@property (nonatomic, retain) NSString *softwareUpdateAssetType;
@property (nonatomic, retain) SUCorePolicySoftwareUpdateDownload *softwareUpdateDownloadPolicy;
@property (nonatomic, retain) SUCorePolicySoftwareUpdateScan *softwareUpdateScanPolicy;
@property long long specifiedUsedPolicies;
@property (nonatomic, retain) NSData *ssoToken;
@property (nonatomic, retain) SUCorePolicySuspend *suspendPolicy;
@property (nonatomic, retain) NSString *targetRestoreVersion;
@property (nonatomic, retain) NSString *targetVolumeUUID;
@property (nonatomic, retain) NSString *updateBrainLocationOverride;
@property (nonatomic, retain) NSString *updateMetricContext;
@property (nonatomic, retain) NSDictionary *updateMetricEventFields;
@property (nonatomic, retain) NSString *updateVolumePath;
@property (nonatomic, retain) NSString *userAgentString;
@property (nonatomic) bool userInitiated;
@property (nonatomic, retain) SUCorePolicyPreflightWakeup *wakeupPreflightPolicy;

+ (id)_cleanProductVersion:(id)arg1;
+ (bool)getAllowSameProductVersionPredicateResultWithAssetOSVersion:(id)arg1 assetBuildVersion:(id)arg2 prerequisiteProductVersion:(id)arg3 prerequisiteBuildVersion:(id)arg4;
+ (bool)getNoAllowSameProductVersionPredicateResultWithAssetOSVersion:(id)arg1 assetBuildVersion:(id)arg2 prerequisiteProductVersion:(id)arg3 prerequisiteBuildVersion:(id)arg4;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)_copyGestaltValueForKey:(struct __CFString { }*)arg1;
- (bool)allowSameVersion;
- (bool)allowsCellular;
- (id)alternateAssetAudienceUUID;
- (id)applyPolicy;
- (id)assetAudienceUUID;
- (id)assetTypeSummary;
- (bool)background;
- (id)bridgeOSDownloadDirectory;
- (bool)bridgeOSIgnoreMinimumVersionCheck;
- (int)cacheDeleteUrgency;
- (bool)checkAvailableSpace;
- (id)constructDocumentationMAAssetQueryWithDocID:(id)arg1 purpose:(id)arg2;
- (id)constructMADocumentationAssetDownloadOptionsWithUUID:(id)arg1;
- (id)constructMADocumentationCatalogDownloadOptionsWithUUID:(id)arg1 usingDescriptor:(id)arg2;
- (id)constructMASoftwareUpdateAssetDownloadOptionsWithUUID:(id)arg1;
- (id)constructMASoftwareUpdateCatalogDownloadOptionsWithUUID:(id)arg1 assetAudience:(id)arg2;
- (id)constructSoftwareUpdateMAAssetQuery;
- (id)constructSoftwareUpdateMAAssetQueryWithPurpose:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)defaultDescriptorValues;
- (long long)delayPeriodDays;
- (id)description;
- (id)deviceClass;
- (bool)disableAlternateUpdate;
- (id)documentationAssetType;
- (id)documentationDownloadPolicy;
- (id)documentationScanPolicy;
- (id)downloadAuthorizationHeader;
- (id)downloadPreflightPolicy;
- (bool)enableBridgeOSInstall;
- (bool)enableEmbeddedOSInstall;
- (bool)enableOSPersonalization;
- (void)encodeWithCoder:(id)arg1;
- (id)fdrRecoveryPreflightPolicy;
- (id)hwModelStr;
- (id)initWithCoder:(id)arg1;
- (id)initWithSoftwareUpdateAssetType:(id)arg1 documentationAssetType:(id)arg2 updateBrainAssetType:(id)arg3 usingExtensions:(id)arg4;
- (id)initWithSoftwareUpdateAssetType:(id)arg1 documentationAssetType:(id)arg2 usingExtensions:(id)arg3;
- (id)initWithSoftwareUpdateAssetType:(id)arg1 documentationAssetType:(id)arg2 usingPolicies:(long long)arg3 usingExtensions:(id)arg4;
- (id)installedSFRVersion;
- (bool)isEqual:(id)arg1;
- (bool)isInternal;
- (bool)isRequestedPMVSupervisedPolicy;
- (bool)isSplatPolicy;
- (bool)isSupervisedPolicy;
- (id)loadBrainPolicy;
- (id)localAuthenticationContext;
- (id)localAuthenticationUserID;
- (id)mdmBootstrapToken;
- (id)mdmPathName;
- (bool)performPreflightEncryptedCheck;
- (bool)performPreflightSnapshotCheck;
- (id)personalizationServerURL;
- (id)personalizePreflightPolicy;
- (id)personalizedManifestRootsPath;
- (id)policyExtensions;
- (id)preparePolicy;
- (id)prerequisiteBuildVersion;
- (id)prerequisiteCheckPreflightPolicy;
- (id)prerequisiteProductVersion;
- (id)prerequisiteRestoreVersion;
- (id)productType;
- (id)proxyHostName;
- (id)proxyPortNumber;
- (int)qualityOfService;
- (id)releaseType;
- (id)requestedProductMarketingVersion;
- (bool)restrictToFull;
- (id)resumePolicy;
- (id)rollbackPolicy;
- (void)selectDocumentationAsset:(id*)arg1 fromAssetQuery:(id)arg2;
- (void)selectSoftwareUpdateMajorPrimaryAsset:(id*)arg1 majorSecondaryAsset:(id*)arg2 minorPrimaryAsset:(id*)arg3 minorSecondaryAsset:(id*)arg4 fromAssetQuery:(id)arg5;
- (void)selectSoftwareUpdatePrimaryAsset:(id*)arg1 secondaryAsset:(id*)arg2 fromAssetQuery:(id)arg3;
- (void)setAllowSameVersion:(bool)arg1;
- (void)setAllowsCellular:(bool)arg1;
- (void)setAlternateAssetAudienceUUID:(id)arg1;
- (void)setApplyPolicy:(id)arg1;
- (void)setAssetAudienceUUID:(id)arg1;
- (void)setBackground:(bool)arg1;
- (void)setBridgeOSDownloadDirectory:(id)arg1;
- (void)setBridgeOSIgnoreMinimumVersionCheck:(bool)arg1;
- (void)setCacheDeleteUrgency:(int)arg1;
- (void)setCheckAvailableSpace:(bool)arg1;
- (void)setDefaultDescriptorValues:(id)arg1;
- (void)setDeviceClass:(id)arg1;
- (void)setDisableAlternateUpdate:(bool)arg1;
- (void)setDocumentationAssetType:(id)arg1;
- (void)setDocumentationDownloadPolicy:(id)arg1;
- (void)setDocumentationScanPolicy:(id)arg1;
- (void)setDownloadAuthorizationHeader:(id)arg1;
- (void)setDownloadPreflightPolicy:(id)arg1;
- (void)setEnableBridgeOSInstall:(bool)arg1;
- (void)setEnableEmbeddedOSInstall:(bool)arg1;
- (void)setEnableOSPersonalization:(bool)arg1;
- (void)setFdrRecoveryPreflightPolicy:(id)arg1;
- (void)setHwModelStr:(id)arg1;
- (void)setInstalledSFRVersion:(id)arg1;
- (void)setIsInternal:(bool)arg1;
- (void)setLoadBrainPolicy:(id)arg1;
- (void)setLocalAuthenticationContext:(id)arg1;
- (void)setLocalAuthenticationUserID:(id)arg1;
- (void)setMdmBootstrapToken:(id)arg1;
- (void)setPerformPreflightEncryptedCheck:(bool)arg1;
- (void)setPerformPreflightSnapshotCheck:(bool)arg1;
- (void)setPersonalizationServerURL:(id)arg1;
- (void)setPersonalizePreflightPolicy:(id)arg1;
- (void)setPersonalizedManifestRootsPath:(id)arg1;
- (void)setPolicyExtensions:(id)arg1;
- (void)setPreparePolicy:(id)arg1;
- (void)setPrerequisiteBuildVersion:(id)arg1;
- (void)setPrerequisiteCheckPreflightPolicy:(id)arg1;
- (void)setPrerequisiteProductVersion:(id)arg1;
- (void)setPrerequisiteRestoreVersion:(id)arg1;
- (void)setProductType:(id)arg1;
- (void)setProxyHostName:(id)arg1;
- (void)setProxyPortNumber:(id)arg1;
- (void)setQualityOfService:(int)arg1;
- (void)setReleaseType:(id)arg1;
- (void)setRestrictToFull:(bool)arg1;
- (void)setResumePolicy:(id)arg1;
- (void)setRollbackPolicy:(id)arg1;
- (void)setSkipVolumeSealing:(bool)arg1;
- (void)setSoftwareUpdateAssetType:(id)arg1;
- (void)setSoftwareUpdateDownloadPolicy:(id)arg1;
- (void)setSoftwareUpdateScanPolicy:(id)arg1;
- (void)setSpecifiedUsedPolicies:(long long)arg1;
- (void)setSsoToken:(id)arg1;
- (void)setSuspendPolicy:(id)arg1;
- (void)setTargetRestoreVersion:(id)arg1;
- (void)setTargetVolumeUUID:(id)arg1;
- (void)setUpdateBrainLocationOverride:(id)arg1;
- (void)setUpdateMetricContext:(id)arg1;
- (void)setUpdateMetricEventFields:(id)arg1;
- (id)setUpdateMetricEventFieldsFromDictionary:(id)arg1;
- (void)setUpdateVolumePath:(id)arg1;
- (void)setUserAgentString:(id)arg1;
- (void)setUserInitiated:(bool)arg1;
- (void)setWakeupPreflightPolicy:(id)arg1;
- (bool)skipVolumeSealing;
- (id)softwareUpdateAssetType;
- (id)softwareUpdateDownloadPolicy;
- (id)softwareUpdateScanPolicy;
- (long long)specifiedUsedPolicies;
- (id)ssoToken;
- (id)stringForQoS:(int)arg1;
- (id)summary;
- (id)suspendPolicy;
- (id)targetRestoreVersion;
- (id)targetVolumeUUID;
- (void)updateApplyOptionsWithExtensions:(id)arg1;
- (id)updateBrainLocationOverride;
- (id)updateMetricContext;
- (id)updateMetricEventFields;
- (void)updateRollbackOptionsWithExtensions:(id)arg1;
- (id)updateVolumePath;
- (id)userAgentString;
- (bool)userInitiated;
- (id)wakeupPreflightPolicy;

@end
