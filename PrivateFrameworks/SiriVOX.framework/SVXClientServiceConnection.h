
@interface SVXClientServiceConnection : NSObject <SVXClientService, SVXClientServiceDelegate, SVXClientServiceProviding> {
    SVXClientActivationService * _activationService;
    SVXClientAudioSystemService * _audioSystemService;
    NSXPCConnection * _connection;
    <SVXClientServiceConnectionDelegate> * _delegate;
    SVXClientDeviceService * _deviceService;
    SVXClientAudioPowerService * _inputAudioPowerService;
    AFInstanceContext * _instanceContext;
    bool  _isInvalid;
    SVXClientKeepAliveService * _keepAliveService;
    SVXClientAudioPowerService * _outputAudioPowerService;
    SVXQueuePerformer * _queuePerformer;
    SVXClientSessionService * _sessionService;
    SVXClientSpeechSynthesisService * _speechSynthesisService;
}

@property (nonatomic, readonly) <SVXClientActivationServicing> *activationService;
@property (nonatomic, readonly) <SVXClientAudioSystemServicing> *audioSystemService;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) <SVXClientDeviceServicing> *deviceService;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) <SVXClientAudioPowerServicing> *inputAudioPowerService;
@property (nonatomic, readonly) AFInstanceContext *instanceContext;
@property (nonatomic, readonly) <SVXClientKeepAliveServicing> *keepAliveService;
@property (nonatomic, readonly) <SVXClientAudioPowerServicing> *outputAudioPowerService;
@property (nonatomic, readonly) <SVXPerforming> *performer;
@property (nonatomic, readonly) <SVXClientSessionServicing> *sessionService;
@property (nonatomic, readonly) <SVXClientSpeechSynthesisServicing> *speechSynthesisService;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_cleanUpComponents;
- (void)_cleanUpConnection;
- (void)_clientServiceDidChange:(bool)arg1;
- (id)_clientServiceWithErrorHandler:(id /* block */)arg1;
- (id)_connection;
- (void)_invalidate;
- (oneway void)activateWithContext:(id)arg1 completion:(id /* block */)arg2;
- (id)activationService;
- (id)audioSystemService;
- (oneway void)cancelPendingSpeechSynthesisRequest:(id)arg1;
- (void)connectionInterrupted;
- (void)connectionInvalidated;
- (oneway void)deactivateWithContext:(id)arg1 completion:(id /* block */)arg2;
- (void)dealloc;
- (id)deviceService;
- (oneway void)enqueueSpeechSynthesisRequest:(id)arg1 completion:(id /* block */)arg2;
- (oneway void)fetchAlarmAndTimerFiringContextWithCompletion:(id /* block */)arg1;
- (oneway void)fetchAudioPowerWithType:(long long)arg1 completion:(id /* block */)arg2;
- (oneway void)fetchSessionActivityStateWithCompletion:(id /* block */)arg1;
- (oneway void)fetchSessionStateWithCompletion:(id /* block */)arg1;
- (void)getClientServiceUsingBlock:(id /* block */)arg1 errorHandler:(id /* block */)arg2;
- (oneway void)getInstanceInfoWithCompletion:(id /* block */)arg1;
- (oneway void)handleSpeechSynthesisSynthesizedBufferForHandlerUUID:(id)arg1 audioChunkData:(id)arg2 audioChunkIndex:(unsigned long long)arg3 reply:(id /* block */)arg4;
- (id)initWithComponents:(unsigned long long)arg1 delegate:(id)arg2;
- (id)initWithComponents:(unsigned long long)arg1 instanceContext:(id)arg2 delegate:(id)arg3;
- (id)initWithQueuePerformer:(id)arg1 activationService:(id)arg2 audioSystemService:(id)arg3 deviceService:(id)arg4 inputAudioPowerService:(id)arg5 outputAudioPowerService:(id)arg6 sessionService:(id)arg7 speechSynthesisService:(id)arg8 keepAliveService:(id)arg9 instanceContext:(id)arg10 delegate:(id)arg11;
- (id)inputAudioPowerService;
- (id)instanceContext;
- (void)invalidate;
- (id)keepAliveService;
- (oneway void)notifyAudioSessionDidBecomeActive:(bool)arg1 activationContext:(id)arg2 deactivationContext:(id)arg3;
- (oneway void)notifyAudioSessionWillBecomeActive:(bool)arg1 activationContext:(id)arg2 deactivationContext:(id)arg3;
- (oneway void)notifyDidActivateWithContext:(id)arg1;
- (oneway void)notifyDidChangeSessionStateFrom:(long long)arg1 to:(long long)arg2;
- (oneway void)notifyDidDeactivateWithContext:(id)arg1;
- (oneway void)notifyDidEndUpdateAudioPowerWithType:(long long)arg1;
- (oneway void)notifyDidNotActivateWithContext:(id)arg1 error:(id)arg2;
- (oneway void)notifySessionDidBecomeActiveWithActivationContext:(id)arg1 turnID:(id)arg2;
- (oneway void)notifySessionDidResignActiveWithDeactivationContext:(id)arg1;
- (oneway void)notifySessionDidStartSoundWithID:(long long)arg1;
- (oneway void)notifySessionDidStopSoundWithID:(long long)arg1 error:(id)arg2;
- (oneway void)notifySessionWillBecomeActiveWithActivationContext:(id)arg1 turnID:(id)arg2;
- (oneway void)notifySessionWillPresentFeedbackWithDialogIdentifier:(id)arg1;
- (oneway void)notifySessionWillResignActiveWithOptions:(unsigned long long)arg1 duration:(double)arg2;
- (oneway void)notifySessionWillStartSoundWithID:(long long)arg1;
- (oneway void)notifyWillActivateWithContext:(id)arg1;
- (oneway void)notifyWillBeginUpdateAudioPowerWithType:(long long)arg1 wrapper:(id)arg2;
- (oneway void)notifyWillChangeSessionStateFrom:(long long)arg1 to:(long long)arg2;
- (oneway void)notifyWillDeactivateWithContext:(id)arg1;
- (id)outputAudioPowerService;
- (oneway void)performManualEndpointing;
- (id)performer;
- (oneway void)pingWithReply:(id /* block */)arg1;
- (oneway void)preheatWithActivationSource:(long long)arg1;
- (oneway void)prepareForDeviceSetupWithContext:(id)arg1 completion:(id /* block */)arg2;
- (oneway void)prewarmRequest:(id)arg1;
- (oneway void)prewarmWithContext:(id)arg1 completion:(id /* block */)arg2;
- (oneway void)requestPermissionToActivateWithContext:(id)arg1 completion:(id /* block */)arg2;
- (id)sessionService;
- (oneway void)setDeviceSetupContext:(id)arg1;
- (id)speechSynthesisService;
- (oneway void)stopSpeechSynthesisRequest:(id)arg1;
- (oneway void)synthesizeRequest:(id)arg1 handlerUUID:(id)arg2 completion:(id /* block */)arg3;
- (oneway void)transitToAutomaticEndpointingWithTimestamp:(unsigned long long)arg1;

@end
