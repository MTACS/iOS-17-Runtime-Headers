
@interface SVXSessionManager : NSObject <AFNotifyObserverDelegate, AFQueueDelegate, SVXActivationHandling, SVXDeactivationHandling, SVXDeviceContextListening, SVXDeviceSetupListening, SVXModuleInstance, SVXMyriadEventHandling, SVXMyriadRequestHandling, SVXMyriadResponseDelegate, SVXPrewarmHandling, SVXSessionDelegate, SVXSpeechSynthesisListening> {
    SVXSessionActivationAnnouncer * _activationAnnouncer;
    SVXSessionActivityAnnouncer * _activityAnnouncer;
    SVXAudioPowerUpdateAnnouncer * _audioPowerUpdateAnnouncer;
    NSObject<OS_dispatch_queue> * _biomeQueue;
    NSObject<OS_dispatch_queue> * _coreDuetQueue;
    <SVXTaskTracking> * _currentMyriadCoordinatedRequestAssertion;
    SVXSession * _currentSession;
    AFNotifyObserver * _deviceProblemsNotifyObserver;
    SVXDeviceProblemsState * _deviceProblemsState;
    SVXDeviceSetupContext * _deviceSetupContext;
    double  _lastSessionResignActiveTimestamp;
    NSDate * _lastStereoPartnerMyriadWin;
    AFDeviceContext * _localDeviceContext;
    SVXModule * _module;
    SVXMyriadDeviceManager * _myriadDeviceManager;
    bool  _myriadDuckingAllowed;
    id  _myriadToken;
    bool  _needsClearContext;
    AFQueue * _queuedOperations;
    SVXServiceCommandHandler * _serviceCommandHandler;
    AFSpeechSynthesisRecord * _speechSynthesisRecord;
    long long  _speechSynthesisState;
    SVXSpeechSynthesizer * _speechSynthesizer;
    AFSiriTether * _tether;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_activateWithContext:(id)arg1 activityState:(long long)arg2 completion:(id /* block */)arg3;
- (void)_attachToTether;
- (id)_currentSession:(bool)arg1;
- (void)_deactivateWithContext:(id)arg1 completion:(id /* block */)arg2;
- (void)_fetchCurrentActivityStateWithCompletion:(id /* block */)arg1;
- (void)_fetchCurrentAudioPowerWithType:(long long)arg1 completion:(id /* block */)arg2;
- (void)_fetchCurrentStateWithCompletion:(id /* block */)arg1;
- (void)_fetchStereoPairStateWithCompletion:(id /* block */)arg1;
- (void)_fetchStereoPartnerLastMyriadWinDate;
- (void)_handleDeviceProblemsStateChanged:(id)arg1;
- (void)_handleDeviceSetupContextChanged:(id)arg1;
- (void)_handleDidFailAppLaunchWithBundleIdentifier:(id)arg1;
- (void)_handleFetchedStereoPartnerLastMyriadWinDate:(id)arg1;
- (void)_handleLocalDeviceContextChanged:(id)arg1;
- (void)_handleMyriadForActivationContext:(id)arg1;
- (void)_handleSession:(id)arg1 audioSessionDidBecomeActive:(bool)arg2 activationContext:(id)arg3 deactivationContext:(id)arg4;
- (void)_handleSession:(id)arg1 audioSessionWillBecomeActive:(bool)arg2 activationContext:(id)arg3 deactivationContext:(id)arg4;
- (void)_handleSession:(id)arg1 didActivateWithContext:(id)arg2;
- (void)_handleSession:(id)arg1 didBecomeActiveWithActivationContext:(id)arg2 activityUUID:(id)arg3 turnID:(id)arg4;
- (void)_handleSession:(id)arg1 didChangeFromState:(long long)arg2 toState:(long long)arg3;
- (void)_handleSession:(id)arg1 didDeactivateWithContext:(id)arg2;
- (void)_handleSession:(id)arg1 didEndUpdateAudioPowerWithType:(long long)arg2;
- (void)_handleSession:(id)arg1 didNotActivateWithContext:(id)arg2 error:(id)arg3;
- (void)_handleSession:(id)arg1 didResignActiveWithDeactivationContext:(id)arg2 activityUUID:(id)arg3;
- (void)_handleSession:(id)arg1 didStartSoundWithID:(long long)arg2;
- (void)_handleSession:(id)arg1 didStopSoundWithID:(long long)arg2 error:(id)arg3;
- (void)_handleSession:(id)arg1 willActivateWithContext:(id)arg2;
- (void)_handleSession:(id)arg1 willBecomeActiveWithActivationContext:(id)arg2 activityUUID:(id)arg3 turnID:(id)arg4;
- (void)_handleSession:(id)arg1 willBeginUpdateAudioPowerWithType:(long long)arg2 wrapper:(id)arg3;
- (void)_handleSession:(id)arg1 willChangeFromState:(long long)arg2 toState:(long long)arg3;
- (void)_handleSession:(id)arg1 willDeactivateWithContext:(id)arg2;
- (void)_handleSession:(id)arg1 willResignActiveWithOptions:(unsigned long long)arg2 duration:(double)arg3 activityUUID:(id)arg4;
- (void)_handleSession:(id)arg1 willStartSoundWithID:(long long)arg2;
- (void)_handleSessionDidInvalidate:(id)arg1;
- (void)_handleSpeechSynthesizerDidCancelRequest:(id)arg1 taskTracker:(id)arg2;
- (void)_handleSpeechSynthesizerDidFailRequest:(id)arg1 taskTracker:(id)arg2 error:(id)arg3;
- (void)_handleSpeechSynthesizerDidFinishRequest:(id)arg1 utteranceInfo:(id)arg2 record:(id)arg3 taskTracker:(id)arg4;
- (void)_handleSpeechSynthesizerDidInterruptRequest:(id)arg1 taskTracker:(id)arg2;
- (void)_handleSpeechSynthesizerDidStartRequest:(id)arg1 record:(id)arg2 taskTracker:(id)arg3;
- (void)_handleSpeechSynthesizerWillStartRequest:(id)arg1 taskTracker:(id)arg2;
- (void)_handleWillProcessAppLaunchWithBundleIdentifier:(id)arg1;
- (void)_invalidateCurrentSession;
- (void)_myriadStereoPartnerDataChanged;
- (void)_preheatWithActivationSource:(long long)arg1;
- (void)_prewarmWithContext:(id)arg1 completion:(id /* block */)arg2;
- (void)_processNextOperations;
- (void)activateWithContext:(id)arg1 completion:(id /* block */)arg2;
- (void)addActivationListener:(id)arg1;
- (void)addActivityListener:(id)arg1;
- (void)addAudioPowerUpdateListener:(id)arg1;
- (void)attachToTether;
- (void)continuousVoiceTriggerDetectedWithCompletion:(id /* block */)arg1;
- (void)deactivateWithContext:(id)arg1 completion:(id /* block */)arg2;
- (void)deviceLostMyriadElection;
- (void)deviceSetupManager:(id)arg1 didUpdateContext:(id)arg2;
- (void)deviceWonMyriadElection;
- (void)fetchCurrentActivityStateWithCompletion:(id /* block */)arg1;
- (void)fetchCurrentAlarmAndTimerFiringContextWithCompletion:(id /* block */)arg1;
- (void)fetchCurrentAudioPowerWithType:(long long)arg1 completion:(id /* block */)arg2;
- (void)fetchCurrentStateWithCompletion:(id /* block */)arg1;
- (void)getAudioSessionProviderWithCompletion:(id /* block */)arg1;
- (void)getCurrentSessionUsingBlock:(id /* block */)arg1;
- (id)initWithModule:(id)arg1;
- (void)initiateEmergency:(id /* block */)arg1;
- (void)localDeviceContextDidUpdate:(id)arg1;
- (void)notifyObserver:(id)arg1 didChangeStateFrom:(unsigned long long)arg2 to:(unsigned long long)arg3;
- (void)preheatWithActivationSource:(long long)arg1;
- (void)prewarmWithContext:(id)arg1 completion:(id /* block */)arg2;
- (void)queue:(id)arg1 didEnqueueObjects:(id)arg2;
- (void)removeActivationListener:(id)arg1;
- (void)removeActivityListener:(id)arg1;
- (void)removeAudioPowerUpdateListener:(id)arg1;
- (void)session:(id)arg1 audioSessionDidBecomeActive:(bool)arg2 activationContext:(id)arg3 deactivationContext:(id)arg4;
- (void)session:(id)arg1 audioSessionWillBecomeActive:(bool)arg2 activationContext:(id)arg3 deactivationContext:(id)arg4;
- (void)session:(id)arg1 didActivateWithContext:(id)arg2;
- (void)session:(id)arg1 didBecomeActiveWithActivationContext:(id)arg2 activityUUID:(id)arg3 turnID:(id)arg4;
- (void)session:(id)arg1 didChangeFromState:(long long)arg2 toState:(long long)arg3;
- (void)session:(id)arg1 didDeactivateWithContext:(id)arg2;
- (void)session:(id)arg1 didEndUpdateAudioPowerWithType:(long long)arg2;
- (void)session:(id)arg1 didFailAppLaunchWithBundleIdentifier:(id)arg2;
- (void)session:(id)arg1 didNotActivateWithContext:(id)arg2 error:(id)arg3;
- (void)session:(id)arg1 didResignActiveWithDeactivationContext:(id)arg2 activityUUID:(id)arg3;
- (void)session:(id)arg1 didStartSoundWithID:(long long)arg2;
- (void)session:(id)arg1 didStopSoundWithID:(long long)arg2 error:(id)arg3;
- (void)session:(id)arg1 willActivateWithContext:(id)arg2;
- (void)session:(id)arg1 willBecomeActiveWithActivationContext:(id)arg2 activityUUID:(id)arg3 turnID:(id)arg4;
- (void)session:(id)arg1 willBeginUpdateAudioPowerWithType:(long long)arg2 wrapper:(id)arg3;
- (void)session:(id)arg1 willChangeFromState:(long long)arg2 toState:(long long)arg3;
- (void)session:(id)arg1 willDeactivateWithContext:(id)arg2;
- (void)session:(id)arg1 willProcessAppLaunchWithBundleIdentifier:(id)arg2;
- (void)session:(id)arg1 willResignActiveWithOptions:(unsigned long long)arg2 duration:(double)arg3 activityUUID:(id)arg4;
- (void)session:(id)arg1 willStartSoundWithID:(long long)arg2;
- (void)sessionDidInvalidate:(id)arg1;
- (void)speechSynthesizerDidBecomeBusy;
- (void)speechSynthesizerDidBecomeIdle;
- (void)speechSynthesizerDidCancelRequest:(id)arg1 taskTracker:(id)arg2;
- (void)speechSynthesizerDidFailRequest:(id)arg1 taskTracker:(id)arg2 error:(id)arg3;
- (void)speechSynthesizerDidFinishRequest:(id)arg1 utteranceInfo:(id)arg2 record:(id)arg3 taskTracker:(id)arg4;
- (void)speechSynthesizerDidInterruptRequest:(id)arg1 taskTracker:(id)arg2;
- (void)speechSynthesizerDidStartRequest:(id)arg1 record:(id)arg2 taskTracker:(id)arg3;
- (void)speechSynthesizerWillEnqueueRequest:(id)arg1 taskTracker:(id)arg2;
- (void)speechSynthesizerWillStartRequest:(id)arg1 taskTracker:(id)arg2;
- (void)startWithModuleInstanceProvider:(id)arg1 platformDependencies:(id)arg2;
- (void)stopSpeech;
- (void)stopWithModuleInstanceProvider:(id)arg1;
- (void)transitionToAutomaticEndpointingWithTimestamp:(unsigned long long)arg1;
- (void)unduckDevice;

@end
