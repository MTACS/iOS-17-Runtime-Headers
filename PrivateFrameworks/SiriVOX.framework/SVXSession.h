
@interface SVXSession : NSObject <AFAssistantUIService, AFSpeechDelegate, SRUIFStateFeedbackManagerDelegate, SVXAudioSessionProviding, SVXSpeechSynthesisListening, SVXTaskTrackingCenterDelegate> {
    long long  _activityState;
    NSUUID * _activityUUID;
    AFAnalytics * _analytics;
    <AFRelinquishableAssertion> * _audioDuckingCoordinationAssertion;
    NSMutableSet * _audioSessionAssertions;
    unsigned int  _audioSessionID;
    SRSTClient * _client;
    AFConnection * _connection;
    AFHomeAccessoryInfo * _currentAccessoryInfo;
    SVXActivationContext * _currentActivationContext;
    SVXDeactivationContext * _currentDeactivationContext;
    int  _currentInstrumentationUIState;
    bool  _currentRequestDidPresentUUFR;
    AFAnalyticsTurnBasedInstrumentationContext * _currentRequestInstrumentationContext;
    NSUUID * _currentRequestUUID;
    bool  _currentRequestWillPresentUUFR;
    id /* block */  _currentSpeechRequestDidStartBlock;
    AFSpeechRequestOptions * _currentSpeechRequestOptions;
    NSMutableArray * _currentSpeechRequestPendingBlocks;
    long long  _currentState;
    <SVXSessionDelegate> * _delegate;
    SVXDeviceProblemsState * _deviceProblemsState;
    SVXDeviceSetupContext * _deviceSetupContext;
    AFXPCWrapper * _inputAudioPowerWrapper;
    AFInstanceContext * _instanceContext;
    bool  _isMostRecentRequestStartingMediaPlaybackLocally;
    bool  _isMostRecentRequestSuppressedError;
    bool  _isStateFeedbackEnabled;
    AFDeviceContext * _localDeviceContext;
    AFModesConfiguration * _modesConfiguration;
    long long  _myriadState;
    id  _myriadToken;
    AFXPCWrapper * _outputAudioPowerWrapper;
    NSMutableArray * _pendingMyriadDecisionHandlers;
    NSMutableArray * _pendingRequestBarriers;
    <SVXPerforming> * _performer;
    NSMutableDictionary * _playbackRequestInfo;
    id /* block */  _postResignActiveBlock;
    AFPreferences * _preferences;
    AFAnalyticsTurnBasedInstrumentationContext * _previousRequestInstrumentationContext;
    SVXServiceCommandHandler * _serviceCommandHandler;
    NSMutableSet * _sessionIdleAssertions;
    NSUUID * _sessionUUID;
    SASetApplicationContext * _setApplicationContext;
    SVXSpeechSynthesizer * _speechSynthesizer;
    SRUIFStateFeedbackManager * _stateFeedbackManager;
    SVXActivationInstrumentation * _svxActivationInstrumentation;
    SVXTapToRadarManager * _tapToRadarManager;
    SVXTaskTrackingCenter * _taskTrackingCenter;
    NSUserActivity * _userActivity;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSUUID *sessionUUID;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_activateWithContext:(id)arg1 options:(unsigned long long)arg2 deviceSetupContext:(id)arg3 deviceProblemsState:(id)arg4 localDeviceContext:(id)arg5 speechSynthesisRecord:(id)arg6 speechSynthesisState:(long long)arg7 speechRecordingAlertPolicy:(id)arg8 taskTracker:(id)arg9 completion:(id /* block */)arg10;
- (void)_addRequestBarrier:(id /* block */)arg1;
- (void)_beginThinking;
- (void)_beginWaitingForMyriadDecisionWithToken:(id)arg1;
- (void)_cancelRequestWithOptions:(unsigned long long)arg1 keepTaskTracker:(id)arg2;
- (void)_checkIsActiveWithCompletion:(id /* block */)arg1;
- (void)_clearContext;
- (id)_connection:(bool)arg1;
- (void)_continuePendingSpeechRequest:(bool)arg1;
- (id)_currentAccessoryInfo;
- (void)_deactivateWithContext:(id)arg1 completion:(id /* block */)arg2;
- (void)_didChangeFromState:(long long)arg1 toState:(long long)arg2;
- (void)_discardPendingRequestBarriers;
- (void)_dismiss;
- (void)_endThinking;
- (void)_endWaitingForMyriadDecisionWithToken:(id)arg1 state:(long long)arg2;
- (void)_forceAudioSessionActiveWithOptions:(unsigned long long)arg1 reason:(long long)arg2 completion:(id /* block */)arg3;
- (void)_forceAudioSessionInactiveWithReason:(id)arg1 completion:(id /* block */)arg2;
- (void)_getAlarmAndTimerFiringContextWithCompletion:(id /* block */)arg1;
- (long long)_getSRUIFSiriSessionStateFor:(long long)arg1;
- (void)_handleAudioSessionDidBecomeActive:(bool)arg1;
- (void)_handleAudioSessionDidBeginInterruption;
- (void)_handleAudioSessionDidEndInterruption:(bool)arg1;
- (void)_handleAudioSessionWillBecomeActive:(bool)arg1;
- (void)_handleCommand:(id)arg1 taskTracker:(id)arg2 completion:(id /* block */)arg3;
- (void)_handleDidChangeAudioSessionID:(unsigned int)arg1;
- (void)_handleDidFailStartPlaybackWithDestination:(long long)arg1;
- (void)_handleDidHandleQuickStopWithActions:(unsigned long long)arg1;
- (void)_handleDidStartAudioPlaybackRequest:(id)arg1;
- (void)_handleDidStopAudioPlaybackRequest:(id)arg1 error:(id)arg2;
- (void)_handleDismissAssistant;
- (void)_handleReceivedCommand:(id)arg1 completion:(id /* block */)arg2;
- (void)_handleRequestFailedWithError:(id)arg1;
- (void)_handleRequestFinished;
- (void)_handleRequestWillStart;
- (void)_handleSessionIdleTimerFireEventWithAssertion:(id)arg1 timerInterval:(double)arg2;
- (void)_handleShouldSpeak:(bool)arg1;
- (void)_handleSpeechRecognitionDidFailWithError:(id)arg1;
- (void)_handleSpeechRecognized:(id)arg1;
- (void)_handleSpeechRecognizedPartialResult:(id)arg1;
- (void)_handleSpeechRecordingDidBeginOnAVRecordRoute:(id)arg1;
- (void)_handleSpeechRecordingDidCancel;
- (void)_handleSpeechRecordingDidChangeAVRecordRoute:(id)arg1;
- (void)_handleSpeechRecordingDidDetectStartpoint;
- (void)_handleSpeechRecordingDidEnd;
- (void)_handleSpeechRecordingDidFailWithError:(id)arg1;
- (void)_handleSpeechRecordingPerformTwoShotPromptWithType:(long long)arg1 completion:(id /* block */)arg2;
- (void)_handleSpeechRecordingWillBeginWithInputAudioPowerXPCWrapper:(id)arg1;
- (void)_handleSpeechSynthesizerDidBecomeIdle;
- (void)_handleSpeechSynthesizerDidCancelRequest:(id)arg1 taskTracker:(id)arg2;
- (void)_handleSpeechSynthesizerDidFailRequest:(id)arg1 taskTracker:(id)arg2 error:(id)arg3;
- (void)_handleSpeechSynthesizerDidFinishRequest:(id)arg1 record:(id)arg2 taskTracker:(id)arg3;
- (void)_handleSpeechSynthesizerDidInterruptRequest:(id)arg1 taskTracker:(id)arg2;
- (void)_handleSpeechSynthesizerDidStartRequest:(id)arg1 record:(id)arg2 taskTracker:(id)arg3;
- (void)_handleSpeechSynthesizerWillBecomeBusy;
- (void)_handleSpeechSynthesizerWillStartRequest:(id)arg1 taskTracker:(id)arg2;
- (void)_handleWillProcessStartPlaybackWithDestination:(long long)arg1 intent:(id)arg2 completion:(id /* block */)arg3;
- (void)_handleWillStartAudioPlaybackRequest:(id)arg1;
- (void)_invalidate;
- (void)_invalidateConnection;
- (bool)_isTapToRadarEnabled;
- (void)_performBlockAfterContinueBlock:(id /* block */)arg1;
- (void)_performBlockAfterResignActive:(id /* block */)arg1;
- (void)_performNextPendingRequestBarrier;
- (void)_preheatWithStyle:(long long)arg1;
- (void)_presentError:(id)arg1 taskTracker:(id)arg2 completion:(id /* block */)arg3;
- (void)_promptRadarWithReason:(id)arg1 requestID:(id)arg2 displayReason:(id)arg3 issueTitleName:(id)arg4 issueDescName:(id)arg5;
- (void)_requestDidEndWithOptions:(unsigned long long)arg1 error:(id)arg2;
- (void)_requestWillBeginWithTaskTracker:(id)arg1;
- (void)_resetMyriadDecision;
- (void)_resignActiveForReason:(id)arg1;
- (void)_sessionIdleFiredWithAssertion:(id)arg1;
- (void)_setApplicationContext:(id)arg1;
- (void)_setAudioSessionID:(unsigned int)arg1;
- (void)_setCurrentState:(long long)arg1;
- (void)_setInputAudioPowerWrapper:(id)arg1;
- (void)_setOutputAudioPowerWrapper:(id)arg1;
- (void)_startActiveAudioSessionRequestForType:(long long)arg1 taskTracker:(id)arg2 completion:(id /* block */)arg3;
- (void)_startRequestWithInfo:(id)arg1 clearsContext:(bool)arg2 deviceSetupContext:(id)arg3 taskTracker:(id)arg4 completion:(id /* block */)arg5;
- (void)_startSessionIdleTimerWithTimeInterval:(double)arg1;
- (void)_startSpeechRequestWithOptions:(id)arg1 clearsContext:(bool)arg2 deviceSetupContext:(id)arg3 deviceProblemsState:(id)arg4 localDeviceContext:(id)arg5 taskTracker:(id)arg6 completion:(id /* block */)arg7;
- (void)_startSpeechSynthesisRequest:(id)arg1 languageCode:(id)arg2 voiceName:(id)arg3 gender:(long long)arg4 audioSessionID:(unsigned int)arg5 introductionSoundID:(long long)arg6 conclusionSoundID:(long long)arg7 taskTracker:(id)arg8 postActivationHandler:(id /* block */)arg9 completion:(id /* block */)arg10;
- (id)_stateFeedbackManager;
- (void)_stopSessionIdleTimer;
- (void)_stopSpeech;
- (void)_stopSpeechWithCurrentSpeechRequestOptions;
- (id)_tapToRadarManager;
- (void)_transitSpeechToAutomaticEndpointingWithTimestamp:(unsigned long long)arg1;
- (void)_transitSpeechToManualEndpointing;
- (void)_updateSpeechEndpointerOperationMode:(long long)arg1;
- (void)_waitForMyriadDecisionUsingHandler:(id /* block */)arg1;
- (void)_willChangeFromState:(long long)arg1 toState:(long long)arg2;
- (void)acquireAudioSessionForReason:(id)arg1 completion:(id /* block */)arg2;
- (id)activateWithContext:(id)arg1 completion:(id /* block */)arg2;
- (id)activateWithContext:(id)arg1 options:(unsigned long long)arg2 deviceSetupContext:(id)arg3 deviceProblemsState:(id)arg4 localDeviceContext:(id)arg5 speechSynthesisRecord:(id)arg6 speechSynthesisState:(long long)arg7 speechRecordingAlertPolicy:(id)arg8 completion:(id /* block */)arg9;
- (void)activateWithSpeechRequestOptions:(id)arg1 options:(unsigned long long)arg2 deviceSetupContext:(id)arg3 deviceProblemsState:(id)arg4 localDeviceContext:(id)arg5 completion:(id /* block */)arg6;
- (void)addRequestBarrier:(id /* block */)arg1;
- (void)assistantConnection:(id)arg1 appLaunchFailedWithBundleIdentifier:(id)arg2;
- (void)assistantConnection:(id)arg1 audioSessionDidBecomeActive:(bool)arg2;
- (void)assistantConnection:(id)arg1 audioSessionWillBecomeActive:(bool)arg2;
- (void)assistantConnection:(id)arg1 didChangeAudioSessionID:(unsigned int)arg2;
- (void)assistantConnection:(id)arg1 didHandleQuickStopWithAction:(unsigned long long)arg2;
- (void)assistantConnection:(id)arg1 didStartAudioPlaybackRequest:(id)arg2;
- (void)assistantConnection:(id)arg1 didStopAudioPlaybackRequest:(id)arg2 error:(id)arg3;
- (void)assistantConnection:(id)arg1 receivedCommand:(id)arg2 completion:(id /* block */)arg3;
- (void)assistantConnection:(id)arg1 recognitionUpdateWithPhrases:(id)arg2 utterances:(id)arg3 refId:(id)arg4;
- (void)assistantConnection:(id)arg1 recognizedAdditionalSpeechInterpretation:(id)arg2 refId:(id)arg3;
- (void)assistantConnection:(id)arg1 requestFailedWithError:(id)arg2 requestClass:(id)arg3;
- (void)assistantConnection:(id)arg1 setUserActivtiyInfoAndMakeCurrent:(id)arg2 webpageURL:(id)arg3;
- (void)assistantConnection:(id)arg1 shouldSpeak:(bool)arg2;
- (void)assistantConnection:(id)arg1 speechRecognitionDidFail:(id)arg2;
- (void)assistantConnection:(id)arg1 speechRecognized:(id)arg2;
- (void)assistantConnection:(id)arg1 speechRecognizedPartialResult:(id)arg2;
- (void)assistantConnection:(id)arg1 speechRecordingDidBeginOnAVRecordRoute:(id)arg2 audioSessionID:(unsigned int)arg3;
- (void)assistantConnection:(id)arg1 speechRecordingDidChangeAVRecordRoute:(id)arg2;
- (void)assistantConnection:(id)arg1 speechRecordingDidFail:(id)arg2;
- (void)assistantConnection:(id)arg1 speechRecordingPerformTwoShotPromptWithType:(long long)arg2 completion:(id /* block */)arg3;
- (void)assistantConnection:(id)arg1 speechRecordingWillBeginWithInputAudioPowerXPCWrapper:(id)arg2;
- (void)assistantConnection:(id)arg1 startPlaybackDidFail:(long long)arg2;
- (void)assistantConnection:(id)arg1 startUIRequestWithInfo:(id)arg2 completion:(id /* block */)arg3;
- (void)assistantConnection:(id)arg1 startUIRequestWithText:(id)arg2 completion:(id /* block */)arg3;
- (void)assistantConnection:(id)arg1 willProcessAppLaunchWithBundleIdentifier:(id)arg2;
- (void)assistantConnection:(id)arg1 willProcessStartPlayback:(long long)arg2 intent:(id)arg3 completion:(id /* block */)arg4;
- (void)assistantConnection:(id)arg1 willStartAudioPlaybackRequest:(id)arg2;
- (void)assistantConnectionAudioSessionDidBeginInterruption:(id)arg1;
- (void)assistantConnectionAudioSessionDidEndInterruption:(id)arg1 shouldResume:(bool)arg2;
- (void)assistantConnectionDismissAssistant:(id)arg1;
- (void)assistantConnectionRequestFinished:(id)arg1;
- (void)assistantConnectionRequestWillStart:(id)arg1;
- (void)assistantConnectionSpeechRecordingDidCancel:(id)arg1;
- (void)assistantConnectionSpeechRecordingDidDetectStartpoint:(id)arg1;
- (void)assistantConnectionSpeechRecordingDidEnd:(id)arg1;
- (void)assistantConnectionSpeechRecordingWillBegin:(id)arg1;
- (void)assistantConnectionUpdatedSpeechEndEstimate:(id)arg1 speechEndEstimate:(unsigned long long)arg2;
- (id)beginWaitingForMyriadDecision;
- (void)cancelRequest;
- (id)currentRequestUUID;
- (void)deactivateWithContext:(id)arg1 completion:(id /* block */)arg2;
- (void)dealloc;
- (id)description;
- (void)dismiss;
- (void)endWaitingForMyriadDecisionWithToken:(id)arg1 result:(bool)arg2;
- (void)getActivityStateWithCompletion:(id /* block */)arg1;
- (void)getAlarmAndTimerFiringContextWithCompletion:(id /* block */)arg1;
- (void)getAudioPowerWithType:(long long)arg1 completion:(id /* block */)arg2;
- (void)getStateWithCompletion:(id /* block */)arg1;
- (id)getTaskTrackingCenter;
- (void)handleCommand:(id)arg1 taskTracker:(id)arg2;
- (id)initWithPerformer:(id)arg1 serviceCommandHandler:(id)arg2 speechSynthesizer:(id)arg3 instanceContext:(id)arg4 preferences:(id)arg5 analytics:(id)arg6 delegate:(id)arg7;
- (void)invalidate;
- (void)performBlock:(id /* block */)arg1;
- (void)preheatWithStyle:(long long)arg1;
- (void)prewarmWithContext:(id)arg1 completion:(id /* block */)arg2;
- (id)sessionUUID;
- (void)speechSynthesizerDidBecomeBusy;
- (void)speechSynthesizerDidBecomeIdle;
- (void)speechSynthesizerDidCancelRequest:(id)arg1 taskTracker:(id)arg2;
- (void)speechSynthesizerDidFailRequest:(id)arg1 taskTracker:(id)arg2 error:(id)arg3;
- (void)speechSynthesizerDidFinishRequest:(id)arg1 utteranceInfo:(id)arg2 record:(id)arg3 taskTracker:(id)arg4;
- (void)speechSynthesizerDidInterruptRequest:(id)arg1 taskTracker:(id)arg2;
- (void)speechSynthesizerDidStartRequest:(id)arg1 record:(id)arg2 taskTracker:(id)arg3;
- (void)speechSynthesizerWillEnqueueRequest:(id)arg1 taskTracker:(id)arg2;
- (void)speechSynthesizerWillStartRequest:(id)arg1 taskTracker:(id)arg2;
- (void)startAudioPlaybackRequest:(id)arg1 options:(unsigned long long)arg2 completion:(id /* block */)arg3;
- (void)stateFeedbackManagerDidStartPlaybackForStateFeedbackType:(long long)arg1;
- (void)stopAudioPlaybackRequest:(id)arg1 immediately:(bool)arg2;
- (void)stopSpeech;
- (void)taskTrackingCenter:(id)arg1 didBeginTrackingTaskWithContext:(id)arg2;
- (void)taskTrackingCenter:(id)arg1 didEndTrackingTaskWithContext:(id)arg2;
- (void)taskTrackingCenterDidBecomeIdle:(id)arg1;
- (void)taskTrackingCenterWillBecomeBusy:(id)arg1;
- (void)transitSpeechToAutomaticEndpointingWithTimestamp:(unsigned long long)arg1;
- (void)transitSpeechToManualEndpointing;
- (void)updateDeviceProblemsState:(id)arg1;
- (void)updateDeviceSetupContext:(id)arg1;
- (void)updateLocalDeviceContext:(id)arg1;

@end
