
@interface WSWebSheetView : UIView <SFFormAutoFillControllerDelegate, UINavigationBarDelegate, WKNavigationDelegate, WKUIDelegate, _WKInputDelegate, _WSWebSheetDownloadDelegate> {
    UILabel * _addressLabel;
    UIView * _addressView;
    NSMutableArray * _alerts;
    _SFFormAutoFillController * _autoFillController;
    UIBarButtonItem * _backButtonItem;
    UIBarButtonItem * _backForwardButton;
    UIBarButtonItem * _cancelDoneBarButtonItem;
    NSTimer * _captiveProbeDispatchTimer;
    long long  _currentRedirectURLType;
    bool  _currentRedirectURLTypeSet;
    NSURL * _currentURL;
    <WSWebSheetViewDelegate> * _delegate;
    WSWebSheetDownloadManager * _downloadManager;
    bool  _enableTVMode;
    bool  _everReceivedUntrustedCertificate;
    bool  _firstNavigation;
    UIBarButtonItem * _forwardButtonItem;
    bool  _hasEVCert;
    bool  _inDoneState;
    bool  _isCertTrustDone;
    bool  _lastResultWasTimeoutError;
    UIImageView * _lockIconView;
    NSString * _loginURL;
    UINavigationBar * _navigationBar;
    UINavigationItem * _navigationItem;
    NSURL * _navigationURLAtStart;
    NSString * _postMessage;
    NSURL * _probeURL;
    NSDictionary * _proxyConfiguration;
    NSObject<OS_dispatch_queue> * _queue;
    NSMutableArray * _redirectTypeQueue;
    NSMutableDictionary * _resultOptions;
    WBUSheetController * _sheetController;
    bool  _shouldShowStayConnectedOptions;
    NSString * _ssid;
    UILabel * _ssidLabel;
    UIAlertController * _stayConnectedAlertController;
    WSWebSheetViewController * _webSheetViewController;
    WKWebView * _webView;
}

@property (nonatomic, retain) NSURL *currentURL;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <WSWebSheetViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool enableTVMode;
@property (nonatomic) bool hasEVCert;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isCertTrustDone;
@property (nonatomic, copy) NSURL *probeURL;
@property (nonatomic, copy) NSDictionary *proxyConfiguration;
@property (nonatomic, retain) NSMutableDictionary *resultOptions;
@property (nonatomic) bool shouldShowStayConnectedOptions;
@property (readonly) Class superclass;
@property (nonatomic, retain) WSWebSheetViewController *webSheetViewController;
@property (nonatomic, retain) WKWebView *webView;

- (void).cxx_destruct;
- (void)_addAndRemoveAddressViewsAsNeeded;
- (void)_backButtonPressed;
- (void)_captiveProbeDispatchTimerDidFire:(id)arg1;
- (id)_evCertColor;
- (void)_forwardButtonPressed;
- (bool)_handleCertificateError:(struct __SecTrust { }*)arg1 newhost:(id)arg2;
- (bool)_isSecureAddress;
- (id)_lockIconImage;
- (void)_precheckTrustForServerCertificate:(struct __SecTrust { }*)arg1 host:(id)arg2;
- (id)_presentingViewControllerForWebView:(id)arg1;
- (id)_promptLabelFont;
- (double)_promptLabelFontLineHeight;
- (id)_sheetController;
- (bool)_shouldShowPromptLabels;
- (void)_showGenericDownloadAlert;
- (void)_showProfileDownloadAlert;
- (void)_showProfileInstallAlert;
- (id)_specializedMessageForError:(id)arg1;
- (void)_startCaptiveProbeDispatchTimer;
- (void)_stopCaptiveProbeDispatchTimer;
- (id)_titleForError:(id)arg1;
- (void)_updateAddress;
- (void)_updateBackForwardButtons;
- (void)_updateTitle;
- (void)_webView:(id)arg1 accessoryViewCustomButtonTappedInFormInputSession:(id)arg2;
- (void)_webView:(id)arg1 didStartInputSession:(id)arg2;
- (void)_webView:(id)arg1 insertTextSuggestion:(id)arg2 inInputSession:(id)arg3;
- (void)_webView:(id)arg1 navigationDidFinishDocumentLoad:(id)arg2;
- (void)_webView:(id)arg1 renderingProgressDidChange:(unsigned long long)arg2;
- (void)_webView:(id)arg1 willSubmitFormValues:(id)arg2 userObject:(id)arg3 submissionHandler:(id /* block */)arg4;
- (void)addAlert:(id)arg1;
- (id)appNametoOpenURL:(id)arg1;
- (void)cancelTapped;
- (id)currentURL;
- (void)dealloc;
- (id)delegate;
- (void)dequeueRedirectTypeQueue;
- (void)dismissWebSheetWithCaptiveWebSheetResult:(long long)arg1;
- (void)dispatchCaptiveProbe;
- (void)doneTapped;
- (void)downloadDidFail:(id)arg1;
- (void)downloadDidFinish:(id)arg1;
- (bool)enableTVMode;
- (bool)formAutoFillControllerCanPrefillForm:(id)arg1;
- (bool)formAutoFillControllerShouldDisableStreamlinedLogin:(id)arg1;
- (id)formAutoFillControllerURLForFormAutoFill:(id)arg1;
- (double)getAddressViewHeight;
- (double)getHeaderFrameHeight;
- (double)getTopSafeAreaInsetTop;
- (void)handleProbeResult:(long long)arg1;
- (bool)hasEVCert;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isCertTrustDone;
- (bool)isChinaRegion;
- (bool)isUserAprroved:(id)arg1;
- (void)layoutSubviews;
- (id)probeURL;
- (id)proxyConfiguration;
- (void)pushBackToRedirectTypeQueue;
- (id)resultOptions;
- (void)safeAreaInsetsDidChange;
- (void)setCurrentURL:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEnableTVMode:(bool)arg1;
- (void)setHasEVCert:(bool)arg1;
- (void)setIsCertTrustDone:(bool)arg1;
- (void)setProbeURL:(id)arg1;
- (void)setProxyConfiguration:(id)arg1;
- (void)setResultOptions:(id)arg1;
- (void)setSSID:(id)arg1;
- (void)setShouldShowStayConnectedOptions:(bool)arg1;
- (void)setWebSheetViewController:(id)arg1;
- (void)setWebView:(id)arg1;
- (void)setWebViewWithInterfaceName:(id)arg1;
- (bool)shouldShowStayConnectedOptions;
- (void)updateRedirectURLTypeSetting;
- (void)updateResultOptions;
- (void)updateToDoneButton;
- (id)webSheetViewController;
- (id)webView;
- (id)webView:(id)arg1 createWebViewWithConfiguration:(id)arg2 forNavigationAction:(id)arg3 windowFeatures:(id)arg4;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(id /* block */)arg3;
- (void)webView:(id)arg1 decidePolicyForNavigationResponse:(id)arg2 decisionHandler:(id /* block */)arg3;
- (void)webView:(id)arg1 didCommitLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didCommitNavigation:(id)arg2;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webView:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2;

@end
