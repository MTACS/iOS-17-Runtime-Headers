
@interface MTSessionsCoordinator : NSObject <ClockAngelClient, MTAlarmObserver, MTSource, MTTimerObserver> {
    MTAlarmStorage * _alarmStorage;
    BSServiceConnection<BSServiceConnectionClient> * _connection;
    NSObject<OS_dispatch_queue> * _connectionQueue;
    id /* block */  _currentDateProvider;
    <NAScheduler> * _serializer;
    NSObject<OS_dispatch_queue> * _serializerQueue;
    MTSessionsManager * _sessionsManager;
    bool  _systemReady;
    MTTimerStorage * _timerStorage;
}

@property (nonatomic, readonly) MTAlarmStorage *alarmStorage;
@property (nonatomic, retain) BSServiceConnection<BSServiceConnectionClient> *connection;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *connectionQueue;
@property (nonatomic, copy) id /* block */ currentDateProvider;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) <NAScheduler> *serializer;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *serializerQueue;
@property (nonatomic, retain) MTSessionsManager *sessionsManager;
@property (readonly) Class superclass;
@property (nonatomic) bool systemReady;
@property (nonatomic, readonly) MTTimerStorage *timerStorage;

+ (bool)supportsSessions;

- (void).cxx_destruct;
- (void)_endAlertWithId:(id)arg1 activityId:(id)arg2;
- (bool)_isSystemReady;
- (id)alarmStorage;
- (void)buildConnection;
- (id)connection;
- (id)connectionQueue;
- (id /* block */)currentDateProvider;
- (id)currentTimer;
- (void)dealloc;
- (void)didEndAlertWithId:(id)arg1 activityId:(id)arg2;
- (void)didRestoreAlarmSessions:(id)arg1;
- (void)didRestoreTimerSessions:(id)arg1;
- (void)dismissAlarmWithId:(id)arg1;
- (void)dismissTimerAndEndSessionWithId:(id)arg1 completion:(id /* block */)arg2;
- (void)dismissTimerWithIdentifier:(id)arg1;
- (void)endAlertingSession;
- (void)endSessionForTimerId:(id)arg1;
- (id)getMTSessionsManager;
- (void)handleSystemReady;
- (bool)hasActiveSession;
- (id)initWithStorage:(id)arg1 alarmStorage:(id)arg2;
- (void)initializeSessionWithTimer:(id)arg1;
- (void)nextTimerDidChange:(id)arg1;
- (id)normalizedTimeString:(double)arg1 state:(unsigned long long)arg2;
- (void)pauseTimerWithId:(id)arg1;
- (void)processAlarmUpdate:(id)arg1 fromAlarm:(id)arg2;
- (void)processTimerStateUpdate:(id)arg1 fromTimer:(id)arg2;
- (void)processTimerUpdate:(id)arg1 fromTimer:(id)arg2 changeSet:(id)arg3;
- (void)removeSessionForAlarm:(id)arg1;
- (void)removeSessionForAlarm:(id)arg1 removeFromServer:(bool)arg2;
- (void)repeatTimerWithIdentifier:(id)arg1;
- (void)resendAlarmDataEntryWithId:(id)arg1;
- (void)resendTimerDataEntryWithId:(id)arg1;
- (void)restoreSessions;
- (void)resumeTimerWithId:(id)arg1;
- (id)serializer;
- (id)serializerQueue;
- (id)server;
- (id)sessionsManager;
- (void)setConnection:(id)arg1;
- (void)setConnectionQueue:(id)arg1;
- (void)setCurrentDateProvider:(id /* block */)arg1;
- (void)setSerializer:(id)arg1;
- (void)setSerializerQueue:(id)arg1;
- (void)setSessionsManager:(id)arg1;
- (void)setSystemReady:(bool)arg1;
- (id)setupInterface;
- (void)snoozeAlarmWithId:(id)arg1;
- (void)source:(id)arg1 didAddAlarms:(id)arg2;
- (void)source:(id)arg1 didAddTimers:(id)arg2;
- (void)source:(id)arg1 didChangeNextAlarm:(id)arg2;
- (void)source:(id)arg1 didDismissAlarm:(id)arg2 dismissAction:(unsigned long long)arg3;
- (void)source:(id)arg1 didDismissTimer:(id)arg2;
- (void)source:(id)arg1 didFireAlarm:(id)arg2 triggerType:(unsigned long long)arg3;
- (void)source:(id)arg1 didFireTimer:(id)arg2;
- (void)source:(id)arg1 didRemoveAlarms:(id)arg2;
- (void)source:(id)arg1 didRemoveTimers:(id)arg2;
- (void)source:(id)arg1 didSnoozeAlarm:(id)arg2 snoozeAction:(unsigned long long)arg3;
- (void)source:(id)arg1 didUpdateAlarms:(id)arg2;
- (void)source:(id)arg1 didUpdateAlarms:(id)arg2 previousAlarms:(id)arg3;
- (void)source:(id)arg1 didUpdateTimers:(id)arg2;
- (void)source:(id)arg1 didUpdateTimers:(id)arg2 fromTimers:(id)arg3;
- (id)sourceIdentifier;
- (void)stopSnoozeAlarmWithId:(id)arg1;
- (void)stopTimerWithId:(id)arg1;
- (bool)systemReady;
- (id)timerStorage;
- (id)timerWithIdentifier:(id)arg1;
- (void)updateTimerWithId:(id)arg1 state:(unsigned long long)arg2;

@end
