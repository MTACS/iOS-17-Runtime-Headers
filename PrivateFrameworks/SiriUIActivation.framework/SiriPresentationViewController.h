
@interface SiriPresentationViewController : UIViewController <AFUISiriLanguageDelegate, AFUISiriSetupViewControllerDelegate, AFUISiriViewControllerDataSource, AFUISiriViewControllerDelegate, SASStateChangeListener, SASUIDeviceScreenEngagementControllerDelegate, SiriPresentation, SiriPresentationStateProviderDelegate> {
    bool  _activationHandled;
    UIScreen * _activeScreen;
    AFWatchdogTimer * _animationDismissalTimer;
    SUICApplicationStateHelper * _applicationStateHelper;
    bool  _buttonDownEventDidOccur;
    double  _buttonDownTimestamp;
    id /* block */  _buttonTrigger;
    NSTimer * _carSiriButtonHoldToTalkTimer;
    double  _carSiriButtonTimeInterval;
    NSTimer * _clearSiriViewControllerTimer;
    AFRequestCompletionOptions * _completionOptions;
    BSServiceConnection * _connection;
    NSArray * _contextAppInfosForSiriViewController;
    NSArray * _currentCarPlaySupportedOEMAppIdList;
    unsigned long long  _currentLockState;
    long long  _currentViewMode;
    NSMutableDictionary * _deviceEngagementTimeStamps;
    SASUIDeviceScreenEngagementController * _deviceScreenEngagementController;
    id /* block */  _dismissalCompletion;
    FBSDisplayConfiguration * _displayConfiguration;
    SASHeadphonesAuthenticationManager * _headphonesAuthenticationManager;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _hostedPresentationFrame;
    long long  _identifier;
    struct InstrumentationDismissalState { 
        bool fluidDismissalSet; 
        bool punchedOut; 
        bool incomingPhoneCallDetected; 
        bool outgoingPhoneCallDetected; 
        NSString *attemptedAppLaunchIdentifier; 
    }  _instrumentationDismissalState;
    <SiriPresentationIntentUsageDelegate> * _intentUsageDelegate;
    bool  _isIdleAndQuiet;
    bool  _isVoiceActivationMaskShown;
    AFUISiriLanguage * _language;
    NSDate * _lastAppUpdateTimestamp;
    NSDate * _lastGuideCheck;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    NSTimer * _pongTimer;
    bool  _predictedRecordRouteIsZLL;
    long long  _presentationState;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _presentationStateProcessingLock;
    SiriPresentationStateProvider * _presentationStateProvider;
    bool  _receivedIncomingPhoneCall;
    bool  _shouldDeferWake;
    UINavigationController * _siriSetupNavigationController;
    AFUISiriSetupViewController * _siriSetupViewController;
    AFUISiriViewController * _siriViewController;
    bool  _springBoardIdleTimerDisabled;
    NSArray * _starkAppBundleIdentifierContext;
    bool  _startGuidedAccessOnDismissal;
    AFQueue * _testInputQueue;
    AFConnection * _unownedConnection;
    bool  _waitingForTelephonyToStart;
    bool  _wasScreenOffDuringActivation;
    NSObject<OS_dispatch_queue> * _watchdogQueue;
    long long  identifier;
    <SiriPresentationControllerDelegate> * siriPresentationControllerDelegate;
}

@property (nonatomic, retain) AFWatchdogTimer *animationDismissalTimer;
@property (nonatomic, retain) SUICApplicationStateHelper *applicationStateHelper;
@property (getter=_buttonDownEventDidOccur, setter=_setButtonDownEventDidOccur:, nonatomic) bool buttonDownEventDidOccur;
@property (getter=_buttonDownTimestamp, setter=_setButtonDownTimestamp:, nonatomic) double buttonDownTimestamp;
@property (getter=_carSiriButtonHoldToTalkTimer, setter=_setCarSiriButtonHoldToTalkTimer:, nonatomic, retain) NSTimer *carSiriButtonHoldToTalkTimer;
@property (getter=_carSiriButtonTimeInterval, setter=_setCarSiriButtonTimeInterval:, nonatomic) double carSiriButtonTimeInterval;
@property (nonatomic, retain) NSTimer *clearSiriViewControllerTimer;
@property (nonatomic, retain) BSServiceConnection *connection;
@property (nonatomic, retain) NSArray *contextAppInfosForSiriViewController;
@property (nonatomic, retain) NSArray *currentCarPlaySupportedOEMAppIdList;
@property (nonatomic) unsigned long long currentLockState;
@property (nonatomic) long long currentViewMode;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSMutableDictionary *deviceEngagementTimeStamps;
@property (getter=_deviceScreenEngagementController, setter=_setDeviceScreenEngagementController:, nonatomic, retain) SASUIDeviceScreenEngagementController *deviceScreenEngagementController;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) SASHeadphonesAuthenticationManager *headphonesAuthenticationManager;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } hostedPresentationFrame;
@property (nonatomic, readonly) long long identifier;
@property (nonatomic, retain) <SiriPresentationIntentUsageDelegate> *intentUsageDelegate;
@property (getter=_isVoiceActivationMaskShown, setter=_setVoiceActivationMaskShown:, nonatomic) bool isVoiceActivationMaskShown;
@property (getter=_language, nonatomic, readonly) AFUISiriLanguage *language;
@property (getter=_lastAppUpdateTimestamp, setter=_setLastAppUpdateTimestamp:, nonatomic, retain) NSDate *lastAppUpdateTimestamp;
@property (nonatomic) struct os_unfair_lock_s { unsigned int x1; } lock;
@property (nonatomic, retain) NSTimer *pongTimer;
@property (nonatomic) bool predictedRecordRouteIsZLL;
@property (nonatomic) long long presentationState;
@property (nonatomic, retain) SiriPresentationStateProvider *presentationStateProvider;
@property (getter=_shouldDeferWake, setter=_setShouldDeferWake:) bool shouldDeferWake;
@property (nonatomic) <SiriPresentationControllerDelegate> *siriPresentationControllerDelegate;
@property (nonatomic, retain) UINavigationController *siriSetupNavigationController;
@property (nonatomic, retain) AFUISiriSetupViewController *siriSetupViewController;
@property (nonatomic, retain) AFUISiriViewController *siriViewController;
@property (getter=_isSpringBoardIdleTimerDisabled, setter=_setSpringBoardIdleTimerDisabled:, nonatomic) bool springBoardIdleTimerDisabled;
@property (nonatomic, retain) NSArray *starkAppBundleIdentifierContext;
@property (getter=_startGuidedAccessOnDismissal, setter=_setStartGuidedAccessOnDismissal:, nonatomic) bool startGuidedAccessOnDismissal;
@property (readonly) Class superclass;
@property (getter=_testInputQueue, nonatomic, copy) AFQueue *testInputQueue;
@property (nonatomic, retain) AFConnection *unownedConnection;
@property (getter=_isWaitingForTelephonyToStart, setter=_setWaitingForTelephonyToStart:, nonatomic) bool waitingForTelephonyToStart;
@property (getter=_wasScreenOffDuringActivation, setter=_setScreenOffDuringActivation:, nonatomic) bool wasScreenOffDuringActivation;

+ (id)_applicationStateHelper;
+ (void)_failTestWithName:(id)arg1 andFailure:(id)arg2;
+ (id)extractTestingInputsFromContext:(id)arg1;

- (void).cxx_destruct;
- (bool)_AFPreferencesAlwaysEyesFreeEnabled;
- (id)_analytics;
- (void)_applicationsDidChange;
- (bool)_buttonDownEventDidOccur;
- (double)_buttonDownTimestamp;
- (bool)_buttonIdentifierIsHoldToTalkTrigger:(long long)arg1;
- (void)_callIsActiveDidChangeNotification:(id)arg1;
- (bool)_canShowWhileLocked;
- (void)_cancelPendingActivationWithReason:(unsigned long long)arg1;
- (bool)_cancelPendingPhoneCall;
- (void)_carSiriButtonHoldToTalkIntervalFiredWithButtonIdentifier:(long long)arg1;
- (id)_carSiriButtonHoldToTalkTimer;
- (double)_carSiriButtonTimeInterval;
- (void)_checkForGuideUpdatesIfNecessary;
- (void)_cleanupUnownedConnection;
- (void)_clearAllTestingInputs;
- (void)_clearSiriViewControllerWithCompletion:(id /* block */)arg1;
- (id)_createPresentationPropertiesWithRequestOptions:(id)arg1;
- (id)_createSiriViewControllerWithRequestOptions:(id)arg1;
- (id)_dequeueTestingInput;
- (id)_deviceScreenEngagementController;
- (void)_dismissDueToUnexpectedError:(id)arg1;
- (void)_dismissSiriSetup;
- (long long)_dismissalReasonForDismissalWithOptions:(id)arg1;
- (void)_emitInstrumentationDismissalStateWithReason:(long long)arg1;
- (void)_enableAudioInjection:(bool)arg1 audioFiles:(id)arg2;
- (void)_enableSpringBoardIdleTimer;
- (void)_enqueueTestInput:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_fallbackFrameForScreen:(id)arg1 withIdentifier:(long long)arg2;
- (id)_fallbackScreenForIdentifier:(long long)arg1;
- (void)_finishClearingSiriViewController:(id)arg1;
- (id)_foregroundAppInfosForUIPresentationIdentifier:(id)arg1;
- (void)_handleButtonDownWhileListeningFromButtonIdentifier:(id)arg1 timestamp:(id)arg2 context:(id)arg3;
- (void)_handleContextClearForRequestOptions:(id)arg1;
- (bool)_handleTapButtonBehavior:(long long)arg1;
- (bool)_handleTapDismissal:(long long)arg1;
- (bool)_hasTestingInput;
- (long long)_impliedDismissalReasonFromState;
- (void)_instrumentSuccessfulAppLaunchIfNecessary;
- (void)_invalidateCarSiriButtonHoldToTalkTimer;
- (bool)_isDelayingSessionEnd;
- (bool)_isDeviceButton:(long long)arg1;
- (bool)_isSpringBoardIdleTimerDisabled;
- (bool)_isVoiceActivationMaskShown;
- (bool)_isWaitingForTelephonyToStart;
- (id)_language;
- (id)_lastAppUpdateTimestamp;
- (void)_logDismissalRequestedForViewMode:(long long)arg1 withDismissalReason:(long long)arg2;
- (void)_logDismissalToPowerLogWithReason:(long long)arg1;
- (void)_logSignatureWithType:(id)arg1 subType:(id)arg2 context:(id)arg3;
- (void)_prepareSiriViewControllerWithRequestOptions:(id)arg1;
- (void)_presentSiriViewControllerWithPresentationOptions:(id)arg1 requestOptions:(id)arg2;
- (void)_presentationDismissalRequestedWithOptions:(id)arg1 withCompletion:(id /* block */)arg2;
- (long long)_presentationIdentifierFromUIPresentationIdentifier:(id)arg1;
- (void)_presentationRequestedHandlerWithRequestOptions:(id)arg1;
- (void)_presentationRequestedWithPresentationOptions:(id)arg1 requestOptions:(id)arg2;
- (void)_processConnectionHouseKeeping;
- (void)_processIncomingRequestOptionsForTestingPayload:(id)arg1;
- (void)_punchout:(id)arg1 completion:(id /* block */)arg2;
- (bool)_releaseExistingTrigger;
- (void)_removePreviousConversationIfNeededWithTestName:(id)arg1 testOptions:(id)arg2;
- (void)_removePreviousInjectAudioSettings;
- (void)_removeSetupViewControllerIfNecessary;
- (void)_requestDismissal;
- (void)_requestDismissalWithOptions:(id)arg1;
- (void)_requestHomeAffordanceSuppression:(long long)arg1;
- (void)_requestPresentationWithOptions:(id)arg1 completion:(id /* block */)arg2;
- (void)_resetStateForInstrumentation;
- (void)_runSyntheticButtonActivationTest;
- (void)_scheduleConnectionHouseKeepingAfterDelay:(double)arg1;
- (void)_sendTelephonyHasStartedAfterDelay:(double)arg1;
- (void)_setButtonDownEventDidOccur:(bool)arg1;
- (void)_setButtonDownTimestamp:(double)arg1;
- (void)_setCarSiriButtonHoldToTalkTimer:(id)arg1;
- (void)_setCarSiriButtonTimeInterval:(double)arg1;
- (void)_setDeviceScreenEngagementController:(id)arg1;
- (void)_setEngagementStatus:(id)arg1 forType:(long long)arg2;
- (void)_setLastAppUpdateTimestamp:(id)arg1;
- (void)_setScreenOffDuringActivation:(bool)arg1;
- (void)_setShouldDeferWake:(bool)arg1;
- (void)_setSpringBoardIdleTimerDisabled:(bool)arg1;
- (void)_setStartGuidedAccessOnDismissal:(bool)arg1;
- (void)_setUpUnownedConnectionIfNecessary;
- (void)_setVoiceActivationMaskShown:(bool)arg1;
- (void)_setWaitingForTelephonyToStart:(bool)arg1;
- (void)_setupPongTimer;
- (void)_setupSiriViewControllerPresentedSuccessHandler;
- (bool)_shouldAllowResizingBetweenModesForViewMode:(long long)arg1;
- (bool)_shouldDeferWake;
- (bool)_shouldHandleNewRequestWithOptions:(id)arg1 currentRequest:(id)arg2;
- (bool)_shouldKeepPonging;
- (bool)_shouldProceedPresentingSiriViewController;
- (bool)_shouldRequestPresentationForState:(long long)arg1 forNewRequest:(id)arg2 currentRequest:(id)arg3;
- (bool)_shouldShowSetupViewController;
- (void)_showPresentationAndActivateWithRequestOptions:(id)arg1;
- (void)_showSetupViewControllerIfNecessary;
- (void)_siriDidOpenURL:(id)arg1;
- (void)_startDeviceScreenEngagementController;
- (bool)_startGuidedAccessOnDismissal;
- (void)_startRequestWithOptions:(id)arg1;
- (void)_startUIRequestWithText:(id)arg1 testName:(id)arg2;
- (void)_stopDeviceScreenEngagement;
- (void)_teardownPongTimer;
- (void)_telephonyHasStarted;
- (id)_testInputQueue;
- (id)_uiPresentationIdentifier;
- (void)_updateAnnouncementRequestsPermittedWhilePresentationActive:(bool)arg1;
- (id)_updateDismissalOptionsIfNecessary:(id)arg1;
- (void)_updateHostedPresentationFrame;
- (void)_updateLanguageCode;
- (id)_updateRequestOptionsWithTestingInput:(id)arg1;
- (long long)_viewModeForRequestOptions:(id)arg1;
- (void)_waitForPing;
- (void)_wasDismissedWithCompletion:(id /* block */)arg1;
- (bool)_wasScreenOffDuringActivation;
- (void)_watchdogQueue_startAnimationDismissalWatchdogTimerWithTimeoutHandler:(id /* block */)arg1 shouldTurnScreenOff:(bool)arg2;
- (void)_watchdogQueue_stopAnimationDismissalWatchdogTimerIfNeededThen:(id /* block */)arg1 onQueue:(id)arg2;
- (void)activateWithRequestOptions:(id)arg1;
- (void)activateWithSource:(long long)arg1 requestOptions:(id)arg2 timestamp:(id)arg3;
- (void)activateWithSource:(long long)arg1 timestamp:(id)arg2;
- (oneway void)activationDeterminedShouldDeferWake:(id)arg1;
- (void)aggregateLockStateDidChange;
- (void)animatedAppearanceWithFactory:(id)arg1 completion:(id /* block */)arg2;
- (void)animatedDisappearanceWithFactory:(id)arg1 completion:(id /* block */)arg2;
- (id)animationDismissalTimer;
- (id)applicationStateHelper;
- (void)bulletinManagerDidChangeBulletins;
- (id)bulletinsForSiriViewController:(id)arg1;
- (void)callStateChangedToIsActive:(bool)arg1 isOutgoing:(bool)arg2;
- (oneway void)cancelPendingActivationEventWithReason:(id)arg1;
- (oneway void)cancelPreheat;
- (id)clearSiriViewControllerTimer;
- (id)connection;
- (id)contextAppInfosForSiriViewController;
- (id)contextAppInfosForSiriViewController:(id)arg1;
- (id)currentCarPlaySupportedOEMAppIdList;
- (id)currentCarPlaySupportedOEMAppsForSiriViewController:(id)arg1;
- (unsigned long long)currentLockState;
- (long long)currentViewMode;
- (void)dealloc;
- (id)deviceEngagementTimeStamps;
- (void)deviceScreenEngagementController:(id)arg1 didGainAttentionWithEvent:(long long)arg2;
- (void)deviceScreenEngagementController:(id)arg1 didLoseAttentionWithEvent:(long long)arg2;
- (oneway void)deviceWonMyriadElection;
- (void)disableSiriActivationRequestedBySiriSetupViewController:(id)arg1;
- (void)dismiss;
- (void)dismissSiriSetupViewController:(id)arg1;
- (void)dismissSiriViewController:(id)arg1 withReason:(long long)arg2;
- (void)dismissWithOptions:(id)arg1;
- (id)getDeviceEngagementEvents:(id)arg1 forDeviceEngagementTimeWindow:(double)arg2;
- (oneway void)handleButtonDownFromButtonIdentifier:(id)arg1 timestamp:(id)arg2 context:(id)arg3;
- (oneway void)handleButtonLongPressFromButtonIdentifier:(id)arg1 deviceIdentifier:(id)arg2 timestamp:(id)arg3 context:(id)arg4;
- (oneway void)handleButtonTapFromButtonIdentifier:(id)arg1 timestamp:(id)arg2 context:(id)arg3;
- (oneway void)handleButtonUpFromButtonIdentifier:(id)arg1 deviceIdentifier:(id)arg2 timestamp:(id)arg3 context:(id)arg4;
- (oneway void)handleRequestWithOptions:(id)arg1;
- (void)hasContentAtPoint:(struct CGPoint { double x1; double x2; })arg1 completion:(id /* block */)arg2;
- (bool)headphonesAuthenticated;
- (id)headphonesAuthenticationManager;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })hostedPresentationFrame;
- (long long)identifier;
- (id)initWithIdentifier:(long long)arg1;
- (id)initWithIdentifier:(long long)arg1 hostedPresentationFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (id)initWithIdentifier:(long long)arg1 hostedPresentationFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 displayConfiguration:(id)arg3;
- (id)intentUsageDelegate;
- (void)invalidate;
- (void)invalidateSystemApertureAssertion;
- (bool)isAmbientPresented;
- (bool)isEnabled;
- (struct os_unfair_lock_s { unsigned int x1; })lock;
- (unsigned long long)lockStateForSiriViewController:(id)arg1;
- (void)openSiriRequestedBySiriSetupViewController:(id)arg1;
- (void)openURL:(id)arg1 bundleId:(id)arg2 inPlace:(bool)arg3 completion:(id /* block */)arg4;
- (oneway void)ping;
- (id)pongTimer;
- (bool)predictedRecordRouteIsZLL;
- (long long)preferredFlamesViewFidelity;
- (oneway void)preheat;
- (oneway void)presentationDismissalRequestedWithOptions:(id)arg1;
- (bool)presentationHostedInSpringBoard;
- (oneway void)presentationRequestedWithPresentationOptions:(id)arg1 requestOptions:(id)arg2;
- (long long)presentationState;
- (id)presentationStateProvider;
- (void)presentationStateProvider:(id)arg1 presentationStateDidChange:(id)arg2;
- (oneway void)presentationWithIdentifier:(id)arg1 didUpdatePresentationState:(id)arg2;
- (bool)presentationisIdleAndQuiet;
- (void)prewarmOrbViewShaders;
- (void)requestSystemApertureCollapse;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })safeAreaInsetsForSceneCreationInSiriViewController:(id)arg1;
- (void)setAnimationDismissalTimer:(id)arg1;
- (void)setApplicationStateHelper:(id)arg1;
- (void)setClearSiriViewControllerTimer:(id)arg1;
- (void)setConnection:(id)arg1;
- (void)setContextAppInfosForSiriViewController:(id)arg1;
- (void)setCurrentCarPlaySupportedOEMAppIdList:(id)arg1;
- (void)setCurrentLockState:(unsigned long long)arg1;
- (void)setCurrentViewMode:(long long)arg1;
- (void)setDeviceEngagementTimeStamps:(id)arg1;
- (void)setHeadphonesAuthenticationManager:(id)arg1;
- (void)setHostedPresentationFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setIntentUsageDelegate:(id)arg1;
- (void)setLock:(struct os_unfair_lock_s { unsigned int x1; })arg1;
- (void)setPongTimer:(id)arg1;
- (void)setPredictedRecordRouteIsZLL:(bool)arg1;
- (void)setPresentationState:(long long)arg1;
- (void)setPresentationStateProvider:(id)arg1;
- (void)setSiriPresentationControllerDelegate:(id)arg1;
- (void)setSiriSetupNavigationController:(id)arg1;
- (void)setSiriSetupViewController:(id)arg1;
- (void)setSiriViewController:(id)arg1;
- (void)setStarkAppBundleIdentifierContext:(id)arg1;
- (void)setTestInputQueue:(id)arg1;
- (void)setUnownedConnection:(id)arg1;
- (void)siriLanguageSpokenLanguageCodeDidChange:(id)arg1;
- (id)siriPresentationControllerDelegate;
- (void)siriSessionShouldEndExtendAudioSessionForImminentPhoneCall;
- (void)siriSessionShouldExtendAudioSessionForImminentPhoneCall;
- (id)siriSetupNavigationController;
- (id)siriSetupViewController;
- (bool)siriSetupViewController:(id)arg1 openURL:(id)arg2;
- (id)siriViewController;
- (bool)siriViewController:(id)arg1 attemptUnlockWithPassword:(id)arg2;
- (id)siriViewController:(id)arg1 bulletinWithIdentifier:(id)arg2;
- (void)siriViewController:(id)arg1 didChangePresentationPeekMode:(unsigned long long)arg2;
- (void)siriViewController:(id)arg1 didChangePresentationVisualState:(unsigned long long)arg2;
- (void)siriViewController:(id)arg1 didCompleteRequestWithError:(id)arg2;
- (void)siriViewController:(id)arg1 didEncounterUnexpectedError:(id)arg2;
- (void)siriViewController:(id)arg1 didHideStatusView:(bool)arg2;
- (id)siriViewController:(id)arg1 didStopRequestWithOptions:(id)arg2;
- (void)siriViewController:(id)arg1 didUpdateAudioCategoriesDisablingVolumeHUD:(id)arg2;
- (void)siriViewController:(id)arg1 failedToLaunchAppWithBundleIdentifier:(id)arg2;
- (void)siriViewController:(id)arg1 onboardingScreenContinueButtonTappedWithRequestOptions:(id)arg2;
- (void)siriViewController:(id)arg1 presentedIntentWithBundleId:(id)arg2;
- (void)siriViewController:(id)arg1 requestsDismissalWithReason:(long long)arg2 withCompletion:(id /* block */)arg3;
- (void)siriViewController:(id)arg1 requestsPresentation:(id /* block */)arg2;
- (void)siriViewController:(id)arg1 siriIdleAndQuietStatusDidChange:(bool)arg2;
- (void)siriViewController:(id)arg1 updateHomeAffordanceForBlurVisibilty:(bool)arg2;
- (void)siriViewController:(id)arg1 voiceActivationMaskViewIsVisible:(bool)arg2;
- (void)siriViewController:(id)arg1 willProcessAppLaunchWithBundleIdentifier:(id)arg2;
- (id)siriViewController:(id)arg1 willStartRequestWithOptions:(id)arg2;
- (bool)siriViewControllerConfigured;
- (void)siriViewControllerDidChangeVisibility:(id)arg1;
- (void)siriViewControllerDidFinishDismissing:(id)arg1;
- (void)siriViewControllerSessionDidResetContext:(id)arg1;
- (bool)siriViewControllerShouldEndSession:(id)arg1;
- (bool)siriViewControllerShouldSupportTextInput:(id)arg1;
- (void)siriViewControllerSpeechRequestCancelledFromSiriOrb;
- (void)siriViewControllerSpeechRequestStartedFromSiriOrb;
- (id)starkAppBundleIdentifierContext;
- (id)starkAppBundleIdentifierContextForSiriViewController:(id)arg1;
- (void)startAnimationDismissalWatchdogTimerWithTimeoutHandler:(id /* block */)arg1 shouldTurnScreenOff:(bool)arg2;
- (void)startGuidedAccessForSiriViewController:(id)arg1;
- (void)stopAnimationDismissalWatchdogTimerIfNeededThen:(id /* block */)arg1 onQueue:(id)arg2;
- (unsigned long long)supportedInterfaceOrientations;
- (id)unownedConnection;
- (oneway void)updateCurrentLockState:(id)arg1;
- (void)userRelevantEventDidOccurInSiriViewController:(id)arg1;
- (void)viewWillLayoutSubviews;
- (oneway void)wakeScreenAfterActivationWithReason:(id)arg1;

@end
