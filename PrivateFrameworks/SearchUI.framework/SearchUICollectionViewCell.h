
@interface SearchUICollectionViewCell : UICollectionViewListCell <SearchUIBackgroundColorViewProtocol, SearchUIHighlightTarget> {
    SearchUIBackgroundColorView * _backgroundPlatterView;
    <SearchUIFeedbackDelegateInternal> * _delegate;
    SearchUIDragSource * _dragSource;
    UIView * _dummyBackgroundView;
    UIViewController * _embeddedViewController;
    UIView * _leadingTextView;
    UIView * _leadingView;
    CALayer * _linkLayer;
    unsigned long long  _maskedCorners;
    long long  _resolvedFocusStyle;
    SearchUIRowModel * _rowModel;
    long long  _sectionBackgroundStyle;
    UIView * _selectedOverlayView;
    UIViewPropertyAnimator * _selectionAnimator;
    int  _sfSeparatorStyle;
    UIView * _sizingView;
    bool  _useSystemSizing;
    UIView * _viewForForcedFocus;
}

@property (nonatomic, retain) SearchUIBackgroundColorView *backgroundPlatterView;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <SearchUIFeedbackDelegateInternal> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) SearchUIDragSource *dragSource;
@property (nonatomic, retain) UIView *dummyBackgroundView;
@property (readonly) UIViewController *embeddedViewController;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } highlightFrame;
@property (nonatomic, readonly) bool highlightFrameMatchesHighlightView;
@property (nonatomic, readonly) UIView *highlightReferenceView;
@property (nonatomic, readonly) UIView *leadingTextView;
@property (nonatomic, readonly) UIView *leadingView;
@property (nonatomic) CALayer *linkLayer;
@property (nonatomic) unsigned long long maskedCorners;
@property (nonatomic) long long resolvedFocusStyle;
@property (nonatomic, retain) SearchUIRowModel *rowModel;
@property (nonatomic) long long searchui_focusStyle;
@property (nonatomic) long long sectionBackgroundStyle;
@property (retain) TLKProminenceView *selectedBackgroundView;
@property (nonatomic, retain) UIView *selectedOverlayView;
@property (nonatomic, retain) UIViewPropertyAnimator *selectionAnimator;
@property (nonatomic) int sfSeparatorStyle;
@property (nonatomic, readonly) UIView *sizingView;
@property (readonly) Class superclass;
@property (nonatomic) bool useSystemSizing;
@property (readonly) UIView *viewForForcedFocus;
@property (readonly) NSArray *visibleResults;

- (void).cxx_destruct;
- (bool)_appliesLayoutAttributesMaskingToReusableView;
- (bool)_disableRasterizeInAnimations;
- (long long)_focusItemDeferralMode;
- (struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })_preferredSeparatorInsetsForProposedInsets:(struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)addLinkLayer:(id)arg1;
- (void)animateFocusScaleDownEffectIsHighlighted:(bool)arg1 isSelected:(bool)arg2 appearance:(id)arg3;
- (id)backgroundPlatterView;
- (id)delegate;
- (void)didMoveToWindow;
- (void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (id)dragSource;
- (id)dummyBackgroundView;
- (id)embeddedViewController;
- (id)focusEffect;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })highlightFrame;
- (bool)highlightFrameMatchesHighlightView;
- (id)highlightReferenceView;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isExpandable;
- (void)layoutSubviews;
- (id)leadingTextView;
- (id)leadingView;
- (id)linkLayer;
- (unsigned long long)maskedCorners;
- (bool)needsInternalFocus;
- (id)preferredLayoutAttributesFittingAttributes:(id)arg1;
- (void)prepareForReuse;
- (void)removeManualFocus;
- (long long)resolvedFocusStyle;
- (void)returnKeyPressed;
- (id)rowModel;
- (long long)searchui_focusStyle;
- (long long)sectionBackgroundStyle;
- (id)selectedOverlayView;
- (id)selectionAnimator;
- (void)setBackgroundPlatterView:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDragSource:(id)arg1;
- (void)setDummyBackgroundView:(id)arg1;
- (void)setHighlighted:(bool)arg1;
- (void)setLinkLayer:(id)arg1;
- (void)setMaskedCorners:(unsigned long long)arg1;
- (void)setResolvedFocusStyle:(long long)arg1;
- (void)setRowModel:(id)arg1;
- (void)setSearchui_focusStyle:(long long)arg1;
- (void)setSectionBackgroundStyle:(long long)arg1;
- (void)setSelected:(bool)arg1;
- (void)setSelectedOverlayView:(id)arg1;
- (void)setSelectionAnimator:(id)arg1;
- (void)setSfSeparatorStyle:(int)arg1;
- (void)setUseSystemSizing:(bool)arg1;
- (bool)setupManualFocus;
- (int)sfSeparatorStyle;
- (bool)shouldUpdateFocusInContext:(id)arg1;
- (id)sizingView;
- (struct CGSize { double x1; double x2; })systemLayoutSizeFittingSize:(struct CGSize { double x1; double x2; })arg1 withHorizontalFittingPriority:(float)arg2 verticalFittingPriority:(float)arg3;
- (void)tlk_updateForAppearance:(id)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (void)updateChevronVisible:(bool)arg1 leaveSpaceForChevron:(bool)arg2;
- (void)updateCornerMasks;
- (void)updateCornerRadius:(double)arg1;
- (void)updateExpanded:(bool)arg1 animated:(bool)arg2;
- (void)updateFocusStyleWithAppearance:(id)arg1;
- (void)updateWithRowModel:(id)arg1;
- (bool)useSystemSizing;
- (id)viewContainingContent;
- (id)viewForForcedFocus;
- (id)visibleResults;

@end
