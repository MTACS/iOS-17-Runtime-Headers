
@interface BWQuickTimeMovieFileSinkNode : BWFileSinkNode {
    NSMutableDictionary * _APSModeByPortType;
    long long  _accumulatedSystemPressureLevel;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _adjustedMaxFileDuration;
    bool  _afDriverShortOccurred;
    BWMovieFileOutputAnalyticsPayload * _analyticsPayload;
    bool  _atLeastOneFragmentIsWritten;
    struct OpaqueCMByteStream { } * _byteStream;
    NSMutableDictionary * _cameraSwitchStatistics;
    BWMovingWindowStats * _capturePipelineLatencyStats;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _checkDiskSpaceAtThisDuration;
    bool  _cinematicVideoEnabled;
    struct BWCoreAnalyticsMovieRecordingCinematicVideoStatistics { 
        unsigned int countOfSoftFocusRequests; 
        unsigned int countOfHardFocusRequests; 
        unsigned int countOfFixedPlaneFocusRequests; 
        unsigned int countOfTapToTrackFailures; 
        unsigned int countOfFixedTaxonomyFocusDecisions; 
        unsigned int countOfNonTaxonomyFocusDecisions; 
        unsigned int countOfCustomFocusDecisions; 
        unsigned int countOfAutoFocusDecisions; 
    }  _cinematicVideoMovieRecordingStats;
    NSString * _clientApplicationID;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _currFileDuration;
    unsigned long long  _currFileSize;
    int  _currentSystemPressureLevel;
    struct AudioBufferList { unsigned int x1; struct AudioBuffer { unsigned int x_2_1_1; unsigned int x_2_1_2; void *x_2_1_3; } x2[1]; } * _debugABL;
    struct AudioStreamBasicDescription { 
        double mSampleRate; 
        unsigned int mFormatID; 
        unsigned int mFormatFlags; 
        unsigned int mBytesPerPacket; 
        unsigned int mFramesPerPacket; 
        unsigned int mBytesPerFrame; 
        unsigned int mChannelsPerFrame; 
        unsigned int mBitsPerChannel; 
        unsigned int mReserved; 
    }  _debugASBD;
    bool  _debugAudio;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _debugDurationForFailOfDiskSpaceTest;
    bool  _didBeginSession;
    bool  _didBeginWriting;
    long long  _estimatedMovieSizeOverhead;
    bool * _expectingToSeeSamplesForInput;
    unsigned int  _factorsContributingToMaxSystemPressureLevel;
    unsigned long long  _fileSizeAtPreviousCheck;
    bool * _finalDurationNeedsToBeWrittenForTrack;
    BWIrisMovieInfo * _firstIrisMovieInfo;
    NSMutableArray * _flushingIrisMovieGenerators;
    struct OpaqueFigFormatWriter { } * _formatWriter;
    int  _formatWriterErrorCode;
    NSString * _gmLoggingPreamble;
    bool  _haveDebugASBD;
    bool * _haveSeenSamplesForTrack;
    bool  _ignoreFileSizeLimit;
    BWInferenceResultRingBuffers * _irisMotionAnalysisRingBuffer;
    NSObject<OS_dispatch_queue> * _irisMovieGenerationQueue;
    BWIrisMovieGenerator * _irisMovieGenerator;
    bool  _irisMovieProcessingSuspended;
    bool  _irisSampleReferenceMoviesEnabled;
    BWObjectRingBuffer * _irisStabilizedTrajectoryHomographyRingBuffer;
    BWIrisStillImageMovieMetadataCache * _irisStillImageMovieMetadataCache;
    int  _irisStillImageTimeTrackID;
    int  _irisStillImageTimeTrackTimeScale;
    BWStats * _irisVideoLatencyStats;
    struct { long long x1; int x2; unsigned int x3; long long x4; } * _largestWrittenPTSs;
    struct { long long x1; int x2; unsigned int x3; long long x4; } * _largestWrittenVideoDTSs;
    struct { long long x1; int x2; unsigned int x3; long long x4; } * _lastWrittenAudioVideoDurations;
    BWLimitedGMErrorLogger * _limitedGMErrorLogger;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _logStatsAtThisDuration;
    unsigned long long  _masterInputIndex;
    int  _masterInputTimeScale;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _maxFileDuration;
    unsigned long long  _maxFileSize;
    int  _maxSystemPressureLevel;
    double  _maxTotalZoomFactor;
    float  _maxVideoFrameRate;
    long long  _maximumAllowedInFlightCompressedBytes;
    unsigned long long  _minFreeDiskSpaceLimit;
    NSArray * _movieLevelMetadata;
    bool  _needToDeMoof;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _nextTimeToReturnFileSize;
    unsigned long long  _numAudioTracks;
    unsigned long long  _numInputs;
    long long  _numVideoFramesPortTypeBack;
    long long  _numVideoFramesPortTypeFront;
    long long  _numVideoFramesPortTypeFrontSuperWide;
    long long  _numVideoFramesPortTypeSuperWide;
    long long  _numVideoFramesPortTypeTelephoto;
    unsigned long long  _numVideoTracks;
    unsigned long long  _numberOfFramesDroppedDueToFormatWriterQueueFull;
    BWObjectRingBufferThreadSafe * _overCaptureQualityMetadataRingBuffer;
    BWVideoQualityMetrics * _overCaptureQualityMetrics;
    char * _parentPath;
    NSMutableArray * _pendingIrisRefMovieRequests;
    unsigned long long  _pipelineIndex;
    int  _pipelineTraceID;
    double  _pointlessOverCaptureMaxZoomThreshold;
    int  _prevReason;
    NSMutableDictionary * _previousMetadataPTSValuesByInputIndex;
    struct OpaqueFigSimpleMutex { } * _propertyMutex;
    BWMovingWindowStats * _recentIrisVideoLatencyStats;
    bool  _recordingIsForExternalCamera;
    bool  _recordingIsForFrontCamera;
    long long  _recordingStartTime;
    int  _recordingState;
    bool  _reportErrorForFrameDrops;
    struct { long long x1; int x2; unsigned int x3; long long x4; } * _secondLargestWrittenAudioVideoPTSs;
    FigCaptureMovieFileRecordingSettings * _settings;
    struct { long long x1; int x2; unsigned int x3; long long x4; } * _smallestWrittenPTSs;
    struct BWCoreAnalyticsMovieRecordingSphereAFStatistics { 
        float accelStandardDeviation; 
        float gyroStandardDeviation; 
        float sphereMaxTrackErrorWide; 
        float sphereMaxTrackErrorTele; 
        float sphereStdTrackErrorSumXXWide; 
        float sphereStdTrackErrorSumXXTele; 
        float afMaxTrackErrorWide; 
        float afMaxTrackErrorTele; 
        float afMaxTrackErrorSuperWide; 
        float afStdTrackErrorSumXXWide; 
        float afStdTrackErrorSumXXTele; 
        float afStdTrackErrorSumXXSuperWide; 
        float sphereMinDistanceFromEndStopWide; 
        float sphereMinDistanceFromEndStopTele; 
        float spherePowerWide; 
        float spherePowerTele; 
        float sphereMaxPeakCurrentWide; 
        float sphereMaxPeakCurrentTele; 
        float sphereMaxPeakCurrentAllChannels; 
        float afPowerWide; 
        float afPowerTele; 
        float afPowerSuperWide; 
        float afMaxPeakCurrentWide; 
        float afMaxPeakCurrentTele; 
        float afMaxPeakCurrentSuperWide; 
        float afMaxPeakCurrentAllChannels; 
        float afAndSphereMaxPeakCurrentWide; 
        float afAndSphereMaxPeakCurrentTele; 
        float afAndSphereMaxPeakCurrentAllChannels; 
        unsigned int numberOfSamples; 
        unsigned int numberOfSamplesWide; 
        unsigned int numberOfSamplesTele; 
        unsigned int numberOfSamplesSuperWide; 
        bool sphereTravelRangeHistogramExtended; 
        unsigned int range_0_90umBinWide; 
        unsigned int range_90_110umBinWide; 
        unsigned int range_110_130umBinWide; 
        unsigned int range_130_150umBinWide; 
        unsigned int range_150_175umBinWide; 
        unsigned int range_175_infinityBinWide; 
        unsigned int range_175_220umBinWide; 
        unsigned int range_220_infinityBinWide; 
        unsigned int range_0_90umBinTele; 
        unsigned int range_90_110umBinTele; 
        unsigned int range_110_130umBinTele; 
        unsigned int range_130_150umBinTele; 
        unsigned int range_150_175umBinTele; 
        unsigned int range_175_infinityBinTele; 
        unsigned int range_175_220umBinTele; 
        unsigned int range_220_infinityBinTele; 
    }  _sphereAFStatistics;
    NSMutableDictionary * _sphereModeByPortType;
    NSArray * _stagingQueues;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _startingPTS;
    int  _streamForcedOffErrorCode;
    NSArray * _structuralDependentTrackReferenceListForMetadataInputs;
    NSArray * _taggedMediaCharacteristicsForInputs;
    NSDictionary * _temporalScalabilityProperties;
    NSObject<OS_dispatch_queue> * _thumbnailGenerationDispatchQueue;
    struct __IOSurface { } * _thumbnailSurface;
    long long  _timeOfLastSystemPressureChange;
    long long  _timeToCriticalSystemPressureInMS;
    unsigned long long  _totalNANDReadBytesBeforeRecording;
    unsigned long long  _totalNANDWriteBytesBeforeRecording;
    unsigned long long  _totalNumberOfFramesDropped;
    int * _trackIDs;
    NSArray * _trackReferenceListForAudioInputs;
    NSArray * _trackReferenceListForMetadataInputs;
    NSArray * _trackReferenceListForVideoInputs;
    NSMutableDictionary * _vfrFrameRateChangeReasonCount;
    NSMutableDictionary * _vfrStatistics;
    struct { 
        int width; 
        int height; 
    }  _videoDimensions;
    BWStats * _videoLatencyStats;
    BWVideoOrientationTimeMachine * _videoOrientationTimeMachine;
    int  _videoSTFAppliedFrameCount;
    int  _videoSTFCancelReason;
    struct BWCoreAnalyticsMovieRecordingVideoSTFStatistics { 
        bool videoSTFEnabled; 
        NSString *cancelReason; 
        float videoSTFAppliedFrameCountPercentage; 
        float largestMaxCorrectionLevel; 
        int version; 
        unsigned int lowMeanCorrectionLevelFrameCount; 
        unsigned int moderateMeanCorrectionLevelFrameCount; 
        unsigned int highMeanCorrectionLevelFrameCount; 
        unsigned int veryHighMeanCorrectionLevelFrameCount; 
        unsigned int extremeMeanCorrectionLevelFrameCount; 
    }  _videoSTFStats;
    int  _videoSTFTotalFrameCount;
    bool  _videoStabilizationAnalyticsExtracted;
    BWVideoStabilizationAnalyticsPayload * _videoStabilizationAnalyticsPayLoad;
    struct OpaqueFigVirtualCaptureCard { } * _virtualCaptureCard;
    bool  _vitalInputStreamHasBeenForcedOff;
}

@property (nonatomic) bool cinematicVideoEnabled;
@property (nonatomic) bool irisMovieProcessingSuspended;
@property (nonatomic, copy) NSArray *movieLevelMetadata;
@property (nonatomic, copy) NSArray *structuralDependentTrackReferenceListForMetadataInputs;
@property (nonatomic, copy) NSArray *taggedMediaCharacteristicsForInputs;
@property (nonatomic, copy) NSArray *trackReferenceListForAudioInputs;
@property (nonatomic, copy) NSArray *trackReferenceListForMetadataInputs;
@property (nonatomic, copy) NSArray *trackReferenceListForVideoInputs;

+ (void)initialize;

- (bool)cinematicVideoEnabled;
- (id)clientApplicationID;
- (void)configurationWithID:(long long)arg1 updatedFormat:(id)arg2 didBecomeLiveForInput:(id)arg3;
- (void)dealloc;
- (void)didReachEndOfDataForInput:(id)arg1;
- (void)handleDroppedSample:(id)arg1 forInput:(id)arg2;
- (id)initWithNumberOfVideoInputs:(unsigned long long)arg1 numberOfAuxiliaryPictureInputs:(unsigned long long)arg2 numberOfAudioInputs:(unsigned long long)arg3 numberOfMetadataInputs:(unsigned long long)arg4 cameraInfoByPortType:(id)arg5 pipelineIndex:(unsigned long long)arg6 sinkID:(id)arg7;
- (id)initWithSinkID:(id)arg1;
- (id)irisMotionAnalysisRingBuffer;
- (bool)irisMovieProcessingSuspended;
- (bool)irisSampleReferenceMoviesEnabled;
- (id)irisStillImageMovieMetadataCache;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })lastFileDuration;
- (unsigned long long)lastFileSize;
- (long long)maximumAllowedInFlightCompressedBytes;
- (id)movieLevelMetadata;
- (id)nodeSubType;
- (int)pipelineTraceID;
- (void)prepareForCurrentConfigurationToBecomeLive;
- (void)renderSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1 forInput:(id)arg2;
- (void)setCinematicVideoEnabled:(bool)arg1;
- (void)setClientApplicationID:(id)arg1;
- (void)setIrisMotionAnalysisRingBuffer:(id)arg1;
- (void)setIrisMovieProcessingSuspended:(bool)arg1;
- (void)setIrisSampleReferenceMoviesEnabled:(bool)arg1;
- (void)setIrisStillImageMovieMetadataCache:(id)arg1;
- (void)setMaximumAllowedInFlightCompressedBytes:(long long)arg1;
- (void)setMovieLevelMetadata:(id)arg1;
- (void)setPipelineTraceID:(int)arg1;
- (void)setStructuralDependentTrackReferenceListForMetadataInputs:(id)arg1;
- (void)setTaggedMediaCharacteristicsForInputs:(id)arg1;
- (void)setTrackReferenceListForAudioInputs:(id)arg1;
- (void)setTrackReferenceListForMetadataInputs:(id)arg1;
- (void)setTrackReferenceListForVideoInputs:(id)arg1;
- (void)setVideoOrientationTimeMachine:(id)arg1;
- (void)setupOverCaptureQualityMetricsForLivePhotoHistory:(int)arg1;
- (void)setupRingBufferForStabilizedTrajectoryHomographies:(int)arg1;
- (id)structuralDependentTrackReferenceListForMetadataInputs;
- (id)taggedMediaCharacteristicsForInputs;
- (id)trackReferenceListForAudioInputs;
- (id)trackReferenceListForMetadataInputs;
- (id)trackReferenceListForVideoInputs;
- (id)videoOrientationTimeMachine;

@end
