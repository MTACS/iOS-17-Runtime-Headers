
@interface BWFigVideoCaptureStream : NSObject <BWFigCaptureStreamStartStopDelegate, BWPortraitEffectPropertiesDelegate> {
    int  _activeFormatIndex;
    int  _activeNondisruptiveSwitchingCommandID;
    int  _activeNondisruptiveSwitchingFormatIndex;
    BWStillImageCaptureSettings * _activeResolvedStillImageCaptureSettings;
    BWStillImageCaptureStreamSettings * _activeResolvedStillImageCaptureStreamSettings;
    float  _aeMaxGain;
    bool  _aeStatisticsEnabled;
    NSData * _ambientViewingEnvironment;
    NSString * _applicationID;
    int  _autoFocusPositionSensorMode;
    float  _averageFrameRate;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _averageFrameRateCalculationLock;
    bool  _backgroundBlurEnabled;
    int  _band0StrengthModulation;
    float  _baseZoomFactor;
    float  _baseZoomFactorAfterGDC;
    NSDictionary * _cachedVideoOutputConfigurations;
    NSDictionary * _cachedVideoOutputsEnabled;
    NSNumber * _calibrationValidRadiusForFullFieldOfView;
    NSNumber * _calibrationValidRadiusForNarrowerFieldOfView;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _cameraAccessLock;
    NSData * _cameraPoseMatrix;
    NSData * _cameraViewMatrix;
    NSData * _cameraViewMatrixCalibratedForNarrowerFieldOfView;
    int  _centerStageFramingMode;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _centerStageRectOfInterest;
    bool  _cinematicFramingEnabled;
    bool  _cinematicVideoEnabled;
    struct { 
        unsigned int val[8]; 
    }  _clientAuditToken;
    int  _clientPID;
    bool  _clientProcessHasAccessToCamera;
    bool  _colorSpaceIsAppleLog;
    int  _continuityCameraClientDeviceClass;
    bool  _continuityCameraIsWired;
    <BWFigVideoCaptureStreamDelegate> * _delegate;
    bool  _deskCamActive;
    NSSet * _detectedObjectTypes;
    int  _deviceType;
    bool  _digitalFlashEnabled;
    int  _expectedImagesOrErrorsForCaptureStillImageNow;
    bool  _eyeDetectionRequired;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _faceAndObjectDetectionLock;
    NSDictionary * _faceDetectionConfiguration;
    bool  _faceDetectionEnabled;
    <BWFaceDetector> * _faceDetector;
    bool  _firmwareTimeMachineEnabledWhenConfiguredAsSlave;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _firstValidPTS;
    float  _focalLength;
    bool  _focusBlurMapEnabled;
    NSDictionary * _geometricDistortionCoefficients;
    NSDictionary * _geometricDistortionCoefficientsCalibratedForNarrowerFieldOfView;
    bool  _gesturesEnabled;
    bool  _grabNextFrame;
    float  _gravityFactor;
    bool  _hasFocus;
    bool  _hasOpticalCenterOffsetCalibratedForNarrowerFieldOfView;
    bool  _highlightRecoveryEnabled;
    bool  _highlightRecoveryEnabledWhenConfiguredAsMasterOrSingleStream;
    bool  _highlightRecoveryEnabledWhenConfiguredAsSlave;
    bool  _highlightRecoverySuspended;
    bool  _isSlave;
    bool  _isStationary;
    bool  _isSynchronizationMaster;
    NSMutableDictionary * _keypointDetectionConfiguration;
    bool  _keypointDetectionConfigured;
    bool  _keypointDetectionEnabled;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _largestStillImagePTS;
    struct CGPoint { 
        double x; 
        double y; 
    }  _lastDigitalFlashSphereOffsetOpticalCenter;
    NSDictionary * _lastFaceDetectionConfiguration;
    NSNumber * _lastFaceDetectionEnabled;
    NSDictionary * _lastObjectDetectionConfiguration;
    int  _lastStillImageCaptureType;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _lastStillImagePTS;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _lastValidPTS;
    float  _lensFNumber;
    bool  _lowLightVideoEnabled;
    bool  _lumaHistogramMetadataEnabled;
    int  _mainFormatSIFRBinningFactor;
    int  _mainToSIFRFrameRateRatio;
    int  _masterToSlaveFrameRateRatio;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _maxExposureDurationClientOverride;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _maxExposureDurationFrameworkOverride;
    bool  _maxExposureDurationHasBeenSet;
    float  _maximumFrameRate;
    float  _maximumSupportedFrameRate;
    float  _minimumFrameRate;
    float  _minimumSupportedFrameRate;
    NSDictionary * _moduleInfo;
    float  _momentCaptureVideoRecordingAEMaxGain;
    int  _motionDataDeliveryEnabled;
    bool  _motionDataInvalid;
    int  _multiBandNoiseReductionMode;
    bool  _nonDisruptiveSwitchOverPreventingStillImageCaptureEnabled;
    NSString * _nonLocalizedName;
    BWNondisruptiveSwitchingFormatSelector * _nondisruptiveSwitchingFormatSelector;
    NSArray * _nondisruptiveSwitchingZoomFactors;
    unsigned int  _numberOfBuffersEmitted;
    bool  _objectDetectionStartupDeferred;
    <BWObjectDetector> * _objectDetector;
    struct CGPoint { 
        double x; 
        double y; 
    }  _opticalCenterOffset;
    struct CGPoint { 
        double x; 
        double y; 
    }  _opticalCenterOffsetCalibratedForNarrowerFieldOfView;
    struct CGPoint { 
        double x; 
        double y; 
    }  _opticalCenterOffsetCalibratedForNarrowerFieldOfViewInPhysicalSensorDimensions;
    struct CGPoint { 
        double x; 
        double y; 
    }  _opticalCenterOffsetInPhysicalSensorDimensions;
    BWFigCaptureDevice * _parentDevice;
    struct { 
        int width; 
        int height; 
    }  _physicalSensorDimensions;
    bool  _pixelFormatIsTenBit;
    float  _pixelSize;
    float  _pixelsPerMicron;
    NSString * _portType;
    struct CGPoint { 
        double x; 
        double y; 
    }  _previewShift;
    bool  _rawBufferCompandingEnabled;
    bool  _rawFocusScoresEnabled;
    bool  _reactionEffectsEnabled;
    int  _receivedImagesOrErrorsForCaptureStillImageNow;
    struct { 
        int width; 
        int height; 
    }  _sensorDimensions;
    NSDictionary * _sensorIDDictionary;
    unsigned int  _sensorInterfaceRawPixelFormat;
    NSMutableDictionary * _sifrRAWThumbnailsByTimeMachineIndex;
    int  _skippedFramesCountForAF;
    bool  _sphereEnabled;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _sphereLock;
    BWSphereModeSelector * _sphereModeSelector;
    bool  _started;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _stillCaptureReferenceFramePTS;
    NSMutableArray * _stillFusionBracketFramesMetadata;
    id /* block */  _stillImageBufferTimeMachineHandler;
    <BWFigVideoCaptureStreamStillImageCaptureDelegate> * _stillImageCaptureDelegate;
    NSObject<OS_dispatch_group> * _stillImageCaptureDelegateDispatchGroup;
    bool  _stillImageCaptureEnabled;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _stillImageCaptureStateLock;
    bool  _stillImageKeypointDetectionEnabled;
    BWNoiseReductionAndSharpeningParameters * _stillImageNoiseAndSharpeningParameters;
    BWFigCaptureStream * _stream;
    bool  _streamHasBeenSuspended;
    NSObject<OS_dispatch_queue> * _streamNotificationDispatchQueue;
    float  _streamingFrameRateForZoomPIPOverlay;
    bool  _streamingRequiredWhenConfiguredAsSlave;
    bool  _studioLightingEnabled;
    NSArray * _supportedFormats;
    NSArray * _supportedOutputs;
    NSDictionary * _supportedProperties;
    bool  _suspended;
    bool  _synchronizedStreamsEnabled;
    BWFigCaptureSynchronizedStreamsGroup * _synchronizedStreamsGroup;
    NSObject<OS_tcc_identity> * _tccIdentity;
    bool  _timeLapseEnabled;
    BWStillImageTimeMachine * _timeMachine;
    int  _timeMachineCapacity;
    bool  _timeMachineEnabled;
    bool  _unifiedBracketingEnabled;
    NSString * _uniqueID;
    bool  _usePinholeCameraFocalLengthInIntrinsicMatrixCalculation;
    bool  _usesStillFusionReferenceFramePTSForDidCaptureCallback;
    bool  _variableFrameRateVideoEnabled;
    struct { 
        int width; 
        int height; 
    }  _videoCaptureDimensions;
    bool  _videoHDRFusionEnabled;
    bool  _videoHDRImageStatisticsEnabled;
    int  _videoStabilizationStrength;
    bool  _zeroShutterLagEnabled;
    NSDictionary * _zoomFactorToNondisruptiveSwitchingFormatIndexSIFRBinned;
    NSDictionary * _zoomFactorToNondisruptiveSwitchingFormatIndexSIFRNonBinned;
}

@property (nonatomic, readonly) int activeQuadraBinningFactor;
@property (nonatomic, readonly) int activeStillImageCaptureType;
@property (nonatomic, readonly) float activeStillImageScaleFactor;
@property (nonatomic) float aeMaxGain;
@property (nonatomic) bool aeStatisticsEnabled;
@property (nonatomic, readonly) int autoFocusPositionSensorMode;
@property (nonatomic, readonly) float averageFrameRate;
@property (nonatomic) bool avoidsSphereRecentering;
@property (nonatomic) bool backgroundBlurEnabled;
@property float baseZoomFactor;
@property float baseZoomFactorAfterGDC;
@property (readonly) NSNumber *calibrationValidRadiusForFullFieldOfView;
@property (readonly) NSNumber *calibrationValidRadiusForNarrowerFieldOfView;
@property (readonly) NSData *cameraPoseMatrix;
@property (readonly) NSData *cameraViewMatrix;
@property (readonly) NSData *cameraViewMatrixCalibratedForNarrowerFieldOfView;
@property (nonatomic) int centerStageFramingMode;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } centerStageRectOfInterest;
@property (nonatomic) bool cinematicFramingEnabled;
@property (nonatomic) bool cinematicVideoEnabled;
@property (nonatomic, readonly) struct { unsigned int x1[8]; } clientAuditToken;
@property (nonatomic, readonly) bool clientProcessHasAccessToCamera;
@property (nonatomic) float cmioZoomFactor;
@property (getter=isCMIOZoomFactorSupported, nonatomic, readonly) bool cmioZoomFactorSupported;
@property (nonatomic) bool colorSpaceIsAppleLog;
@property (nonatomic) int continuityCameraClientDeviceClass;
@property (nonatomic) bool continuityCameraIsWired;
@property (nonatomic, readonly) struct __CFString { }*currentNonLowPowerSphereMode;
@property (nonatomic, readonly) struct __CFString { }*currentSphereMode;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <BWFigVideoCaptureStreamDelegate> *delegate;
@property (nonatomic) bool depthDataDeliveryEnabled;
@property (readonly, copy) NSString *description;
@property (getter=isDeskCamActive, nonatomic) bool deskCamActive;
@property (nonatomic, copy) NSSet *detectedObjectTypes;
@property (readonly) int deviceType;
@property (nonatomic) bool digitalFlashEnabled;
@property (nonatomic) bool enablesSphereWhenAvailable;
@property (nonatomic) bool eyeDetectionRequired;
@property (copy) NSDictionary *faceDetectionConfiguration;
@property (nonatomic) bool faceDetectionEnabled;
@property (nonatomic, retain) <BWFaceDetector> *faceDetector;
@property (nonatomic) bool firmwareTimeMachineEnabledWhenConfiguredAsSlave;
@property (readonly) NSData *flashCalibrationData;
@property (readonly) float focalLength;
@property (nonatomic) bool focusBlurMapEnabled;
@property (readonly) NSDictionary *geometricDistortionCoefficients;
@property (readonly) NSDictionary *geometricDistortionCoefficientsCalibratedForNarrowerFieldOfView;
@property (nonatomic) bool gesturesEnabled;
@property (readonly) float gravityFactor;
@property (readonly) bool hasFocus;
@property (readonly) bool hasOpticalCenterOffsetCalibratedForNarrowerFieldOfView;
@property (readonly) bool hasSphere;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool highlightRecoveryEnabled;
@property (nonatomic) bool highlightRecoveryEnabledWhenConfiguredAsMasterOrSingleStream;
@property (nonatomic) bool highlightRecoveryEnabledWhenConfiguredAsSlave;
@property (nonatomic) bool highlightRecoverySuspended;
@property (nonatomic) bool isStationary;
@property (nonatomic) bool keypointDetectionEnabled;
@property (nonatomic, readonly) int lastStillImageCaptureType;
@property (nonatomic, readonly) struct { long long x1; int x2; unsigned int x3; long long x4; } lastStillImagePTS;
@property (readonly) float lensFNumber;
@property (nonatomic) bool lowLightVideoEnabled;
@property (nonatomic) int mainToSIFRFrameRateRatio;
@property (nonatomic) int masterToSlaveFrameRateRatio;
@property (nonatomic, readonly) float maxEIT;
@property (nonatomic, readonly) struct { long long x1; int x2; unsigned int x3; long long x4; } maxExposureDuration;
@property (nonatomic) struct { long long x1; int x2; unsigned int x3; long long x4; } maxExposureDurationClientOverride;
@property (nonatomic) struct { long long x1; int x2; unsigned int x3; long long x4; } maxExposureDurationFrameworkOverride;
@property (nonatomic) float maximumFrameRate;
@property (nonatomic) float maximumSupportedFrameRate;
@property (nonatomic) float minimumFrameRate;
@property (nonatomic) float minimumSupportedFrameRate;
@property (readonly) NSDictionary *moduleInfo;
@property (nonatomic) float momentCaptureVideoRecordingAEMaxGain;
@property (nonatomic) bool motionDataDeliveryEnabled;
@property (readonly) bool motionDataInvalid;
@property (nonatomic) int multiBandNoiseReductionMode;
@property (readonly) NSString *nonLocalizedName;
@property (nonatomic, readonly) NSArray *nondisruptiveSwitchingZoomFactors;
@property (nonatomic) bool objectDetectionStartupDeferred;
@property (nonatomic, retain) <BWObjectDetector> *objectDetector;
@property (readonly) struct CGPoint { double x1; double x2; } opticalCenterOffset;
@property (readonly) struct CGPoint { double x1; double x2; } opticalCenterOffsetCalibratedForNarrowerFieldOfView;
@property (readonly) struct CGPoint { double x1; double x2; } opticalCenterOffsetCalibratedForNarrowerFieldOfViewInPhysicalSensorDimensions;
@property (readonly) struct CGPoint { double x1; double x2; } opticalCenterOffsetInPhysicalSensorDimensions;
@property (nonatomic) bool overCaptureEnabled;
@property (nonatomic) struct { int x1; int x2; } physicalSensorDimensions;
@property (nonatomic) bool pixelFormatIsTenBit;
@property (readonly) float pixelSize;
@property (readonly) float pixelsPerMicron;
@property (readonly) NSString *portType;
@property (nonatomic) struct CGPoint { double x1; double x2; } previewShift;
@property (nonatomic, readonly) bool providesPreBracketedEV0;
@property (nonatomic, readonly) bool rawBufferCompandingEnabled;
@property (nonatomic) bool rawFocusScoresEnabled;
@property (nonatomic) bool reactionEffectsEnabled;
@property (readonly) NSDictionary *sensorColorCalibrationData;
@property (nonatomic) struct { int x1; int x2; } sensorDimensions;
@property (readonly) NSDictionary *sensorIDDictionary;
@property (readonly) NSString *sensorIDString;
@property (nonatomic, readonly) unsigned int sensorInterfaceRawPixelFormat;
@property (readonly) bool sphereEnabled;
@property (nonatomic) int sphereThermalLevel;
@property (nonatomic) bool sphereVideoEnabled;
@property (readonly) bool sphereVideoSupported;
@property (nonatomic, readonly) bool started;
@property (nonatomic, copy) id /* block */ stillImageBufferTimeMachineHandler;
@property (nonatomic) <BWFigVideoCaptureStreamStillImageCaptureDelegate> *stillImageCaptureDelegate;
@property (nonatomic) bool stillImageCaptureEnabled;
@property (nonatomic) bool stillImageKeypointDetectionEnabled;
@property (readonly) BWFigCaptureStream *stream;
@property (nonatomic) float streamingFrameRateForZoomPIPOverlay;
@property (nonatomic) bool streamingRequiredWhenConfiguredAsSlave;
@property (nonatomic) bool studioLightingEnabled;
@property (readonly) Class superclass;
@property (readonly) NSArray *supportedFormats;
@property (readonly) NSArray *supportedOutputs;
@property (nonatomic, readonly) bool suspended;
@property (nonatomic, readonly) bool suspendingSupported;
@property (getter=isSynchronizationMaster, nonatomic, readonly) bool synchronizationMaster;
@property (readonly) bool synchronizedStreamsEnabled;
@property (nonatomic, readonly, retain) NSObject<OS_tcc_identity> *tccIdentity;
@property (nonatomic) bool timeLapseEnabled;
@property (readonly) int timeMachineCapacity;
@property (nonatomic) bool timeMachineEnabled;
@property (nonatomic) bool unifiedBracketingEnabled;
@property (nonatomic, readonly) NSString *uniqueID;
@property (readonly) bool usePinholeCameraFocalLengthInIntrinsicMatrixCalculation;
@property (nonatomic) bool usesStillFusionReferenceFramePTSForDidCaptureCallback;
@property (nonatomic) bool variableFrameRateVideoEnabled;
@property (nonatomic) struct { int x1; int x2; } videoCaptureDimensions;
@property (nonatomic) bool videoHDRFusionEnabled;
@property (nonatomic) bool videoHDRImageStatisticsEnabled;
@property (nonatomic) int videoStabilizationStrength;
@property (nonatomic) bool zeroShutterLagEnabled;
@property (nonatomic, readonly) NSDictionary *zoomFactorToNondisruptiveSwitchingFormatIndexSIFRBinned;
@property (nonatomic, readonly) NSDictionary *zoomFactorToNondisruptiveSwitchingFormatIndexSIFRNonBinned;

+ (void)initialize;

- (int)activeFormatIndex;
- (int)activeNondisruptiveSwitchingCommandID;
- (int)activeNondisruptiveSwitchingFormatIndex;
- (int)activeQuadraBinningFactor;
- (int)activeStillImageCaptureType;
- (float)activeStillImageScaleFactor;
- (float)aeMaxGain;
- (bool)aeStatisticsEnabled;
- (int)autoFocusPositionSensorMode;
- (float)averageFrameRate;
- (bool)avoidsSphereRecentering;
- (bool)backgroundBlurEnabled;
- (float)baseZoomFactor;
- (float)baseZoomFactorAfterGDC;
- (id)calibrationValidRadiusForFullFieldOfView;
- (id)calibrationValidRadiusForNarrowerFieldOfView;
- (id)cameraPoseMatrix;
- (id)cameraViewMatrix;
- (id)cameraViewMatrixCalibratedForNarrowerFieldOfView;
- (void)captureStillImageFromTimeMachineWithStillImageSettings:(id)arg1;
- (void)captureStreamDidStart;
- (void)captureStreamDidStop;
- (int)centerStageFramingMode;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })centerStageRectOfInterest;
- (bool)cinematicFramingEnabled;
- (bool)cinematicVideoEnabled;
- (struct { unsigned int x1[8]; })clientAuditToken;
- (bool)clientProcessHasAccessToCamera;
- (float)cmioZoomFactor;
- (bool)colorSpaceIsAppleLog;
- (int)continuityCameraClientDeviceClass;
- (bool)continuityCameraIsWired;
- (struct __CFString { }*)currentNonLowPowerSphereMode;
- (struct __CFString { }*)currentSphereMode;
- (void)dealloc;
- (id)delegate;
- (bool)depthDataDeliveryEnabled;
- (id)description;
- (id)detectedObjectTypes;
- (int)deviceType;
- (void)didBecomeMasterStream;
- (void)didBecomeSlaveStream;
- (void)didChangeBackgroundBlurAperture:(float)arg1;
- (void)didChangeGesturesEnabled:(bool)arg1;
- (void)didChangePortraitEffectStudioLightQuality:(long long)arg1;
- (void)didChangeStudioLightingIntensity:(float)arg1;
- (bool)digitalFlashEnabled;
- (bool)enablesSphereWhenAvailable;
- (bool)eyeDetectionRequired;
- (id)faceDetectionConfiguration;
- (bool)faceDetectionEnabled;
- (id)faceDetector;
- (void)failedToCaptureStillImageFromFirmwareWithError:(int)arg1;
- (bool)firmwareTimeMachineEnabledWhenConfiguredAsSlave;
- (id)flashCalibrationData;
- (float)focalLength;
- (bool)focusBlurMapEnabled;
- (id)geometricDistortionCoefficients;
- (id)geometricDistortionCoefficientsCalibratedForNarrowerFieldOfView;
- (bool)gesturesEnabled;
- (float)gravityFactor;
- (bool)hasFocus;
- (bool)hasOpticalCenterOffsetCalibratedForNarrowerFieldOfView;
- (bool)hasSphere;
- (bool)highlightRecoveryEnabled;
- (bool)highlightRecoveryEnabledWhenConfiguredAsMasterOrSingleStream;
- (bool)highlightRecoveryEnabledWhenConfiguredAsSlave;
- (bool)highlightRecoverySuspended;
- (id)initWithCaptureStream:(id)arg1 parentDevice:(id)arg2 attributes:(id)arg3 sensorIDDictionary:(id)arg4 synchronizedStreamsGroup:(id)arg5 applicationID:(id)arg6 clientAuditToken:(struct { unsigned int x1[8]; })arg7 tccIdentity:(id)arg8 error:(int*)arg9;
- (bool)isCMIOZoomFactorSupported;
- (bool)isDeskCamActive;
- (bool)isStationary;
- (bool)isSynchronizationMaster;
- (bool)keypointDetectionEnabled;
- (int)lastStillImageCaptureType;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })lastStillImagePTS;
- (float)lensFNumber;
- (bool)lowLightVideoEnabled;
- (int)mainToSIFRFrameRateRatio;
- (int)masterToSlaveFrameRateRatio;
- (float)maxEIT;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })maxExposureDuration;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })maxExposureDurationClientOverride;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })maxExposureDurationFrameworkOverride;
- (float)maximumFrameRate;
- (float)maximumSupportedFrameRate;
- (float)minimumFrameRate;
- (float)minimumSupportedFrameRate;
- (id)moduleInfo;
- (float)momentCaptureVideoRecordingAEMaxGain;
- (bool)motionDataDeliveryEnabled;
- (bool)motionDataInvalid;
- (int)multiBandNoiseReductionMode;
- (id)noiseReductionAndSharpeningConfigurationForType:(int)arg1 gain:(float)arg2;
- (id)nonLocalizedName;
- (id)nondisruptiveSwitchingZoomFactors;
- (bool)objectDetectionStartupDeferred;
- (id)objectDetector;
- (struct CGPoint { double x1; double x2; })opticalCenterOffset;
- (struct CGPoint { double x1; double x2; })opticalCenterOffsetCalibratedForNarrowerFieldOfView;
- (struct CGPoint { double x1; double x2; })opticalCenterOffsetCalibratedForNarrowerFieldOfViewInPhysicalSensorDimensions;
- (struct CGPoint { double x1; double x2; })opticalCenterOffsetInPhysicalSensorDimensions;
- (bool)overCaptureEnabled;
- (void)performReactionEffect:(id)arg1;
- (struct { int x1; int x2; })physicalSensorDimensions;
- (bool)pixelFormatIsTenBit;
- (float)pixelSize;
- (float)pixelsPerMicron;
- (id)portType;
- (void)prepareForStillImageCaptureFromFirmwareWithStillImageSettings:(id)arg1;
- (struct CGPoint { double x1; double x2; })previewShift;
- (bool)providesPreBracketedEV0;
- (bool)rawBufferCompandingEnabled;
- (bool)rawFocusScoresEnabled;
- (bool)reactionEffectsEnabled;
- (id)sensorColorCalibrationData;
- (struct { int x1; int x2; })sensorDimensions;
- (id)sensorIDDictionary;
- (id)sensorIDString;
- (unsigned int)sensorInterfaceRawPixelFormat;
- (void)serviceNondisruptiveSwitchingFormatForZoomFactor:(float)arg1 frameStatistics:(id)arg2 stillImageDigitalFlashMode:(int)arg3 isStationary:(bool)arg4 binnedSIFROnSlaveAllowed:(bool)arg5;
- (int)setActiveFormatIndex:(int)arg1;
- (int)setActiveNondisruptiveSwitchingFormatIndex:(int)arg1;
- (void)setAeMaxGain:(float)arg1;
- (void)setAeStatisticsEnabled:(bool)arg1;
- (void)setAvoidsSphereRecentering:(bool)arg1;
- (void)setBackgroundBlurEnabled:(bool)arg1;
- (void)setBaseZoomFactor:(float)arg1;
- (void)setBaseZoomFactorAfterGDC:(float)arg1;
- (void)setCenterStageFramingMode:(int)arg1;
- (void)setCenterStageRectOfInterest:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setCinematicFramingEnabled:(bool)arg1;
- (void)setCinematicVideoEnabled:(bool)arg1;
- (void)setCmioZoomFactor:(float)arg1;
- (void)setColorSpaceIsAppleLog:(bool)arg1;
- (void)setContinuityCameraClientDeviceClass:(int)arg1;
- (void)setContinuityCameraIsWired:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDepthDataDeliveryEnabled:(bool)arg1;
- (void)setDeskCamActive:(bool)arg1;
- (void)setDetectedObjectTypes:(id)arg1;
- (void)setDigitalFlashEnabled:(bool)arg1;
- (void)setEnablesSphereWhenAvailable:(bool)arg1;
- (void)setEyeDetectionRequired:(bool)arg1;
- (void)setFaceDetectionConfiguration:(id)arg1;
- (void)setFaceDetectionEnabled:(bool)arg1;
- (void)setFaceDetector:(id)arg1;
- (void)setFirmwareTimeMachineEnabledWhenConfiguredAsSlave:(bool)arg1;
- (void)setFocusBlurMapEnabled:(bool)arg1;
- (void)setGesturesEnabled:(bool)arg1;
- (void)setHighlightRecoveryEnabledWhenConfiguredAsMasterOrSingleStream:(bool)arg1;
- (void)setHighlightRecoveryEnabledWhenConfiguredAsSlave:(bool)arg1;
- (void)setHighlightRecoverySuspended:(bool)arg1;
- (void)setIsStationary:(bool)arg1;
- (void)setKeypointDetectionEnabled:(bool)arg1;
- (void)setLowLightVideoEnabled:(bool)arg1;
- (void)setMainToSIFRFrameRateRatio:(int)arg1;
- (void)setMasterToSlaveFrameRateRatio:(int)arg1;
- (void)setMaxExposureDurationClientOverride:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setMaxExposureDurationFrameworkOverride:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setMaximumFrameRate:(float)arg1;
- (void)setMaximumSupportedFrameRate:(float)arg1;
- (void)setMinimumFrameRate:(float)arg1;
- (void)setMinimumSupportedFrameRate:(float)arg1;
- (void)setMomentCaptureVideoRecordingAEMaxGain:(float)arg1;
- (void)setMotionDataDeliveryEnabled:(bool)arg1;
- (void)setMultiBandNoiseReductionMode:(int)arg1;
- (void)setObjectDetectionStartupDeferred:(bool)arg1;
- (void)setObjectDetector:(id)arg1;
- (void)setOverCaptureEnabled:(bool)arg1;
- (void)setPhysicalSensorDimensions:(struct { int x1; int x2; })arg1;
- (void)setPixelFormatIsTenBit:(bool)arg1;
- (void)setPreviewShift:(struct CGPoint { double x1; double x2; })arg1;
- (void)setRawFocusScoresEnabled:(bool)arg1;
- (void)setReactionEffectsEnabled:(bool)arg1;
- (void)setReactionsInProgressChangedHandler:(id /* block */)arg1;
- (void)setRuntimeUpdates:(id)arg1;
- (void)setSensorDimensions:(struct { int x1; int x2; })arg1;
- (void)setSphereThermalLevel:(int)arg1;
- (void)setSphereVideoEnabled:(bool)arg1;
- (void)setStillImageBufferTimeMachineHandler:(id /* block */)arg1;
- (void)setStillImageCaptureDelegate:(id)arg1;
- (void)setStillImageCaptureEnabled:(bool)arg1;
- (void)setStillImageKeypointDetectionEnabled:(bool)arg1;
- (void)setStreamingFrameRateForZoomPIPOverlay:(float)arg1;
- (void)setStreamingRequiredWhenConfiguredAsSlave:(bool)arg1;
- (void)setStudioLightingEnabled:(bool)arg1;
- (int)setSuspended:(bool)arg1;
- (void)setTemporalNoiseReductionConfigurationBand0Enabled:(bool)arg1 rawEnabled:(bool)arg2 modulation:(int)arg3;
- (void)setTimeLapseEnabled:(bool)arg1;
- (void)setTimeMachineEnabled:(bool)arg1;
- (void)setUnifiedBracketingEnabled:(bool)arg1;
- (void)setUsesStillFusionReferenceFramePTSForDidCaptureCallback:(bool)arg1;
- (void)setVariableFrameRateVideoEnabled:(bool)arg1;
- (void)setVideoCaptureDimensions:(struct { int x1; int x2; })arg1;
- (void)setVideoHDRFusionEnabled:(bool)arg1;
- (void)setVideoHDRImageStatisticsEnabled:(bool)arg1;
- (void)setVideoStabilizationStrength:(int)arg1;
- (void)setVisionDataKeypointDetectionThreshold:(float)arg1;
- (void)setVisionDataSuspended:(bool)arg1;
- (void)setZeroShutterLagEnabled:(bool)arg1;
- (void)setZoomFactorToNondisruptiveSwitchingFormatIndexSIFRBinned:(id)arg1 zoomFactorToNondisruptiveSwitchingFormatIndexSIFRNonBinned:(id)arg2 mainFormatSIFRBinningFactor:(int)arg3;
- (void)sourceNodeDidDropFrameWithPTS:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)sourceNodeDidStartStreaming;
- (void)sourceNodeDidStopStreaming;
- (void)sourceNodeFailedToStartStreaming;
- (bool)sourceNodeShouldDiscardStillImageSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1 sensorRawOutput:(bool)arg2;
- (void)sourceNodeWillDiscardVideoSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1;
- (int)sourceNodeWillEmitDepthSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1;
- (void)sourceNodeWillEmitDetectedFacesSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1;
- (int)sourceNodeWillEmitPointCloudSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1;
- (void)sourceNodeWillEmitStillImageQuadraBufferProcessingError:(int)arg1;
- (int)sourceNodeWillEmitStillImageSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1;
- (int)sourceNodeWillEmitVideoSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1 drivesCameraControls:(bool)arg2 deliversStills:(bool)arg3;
- (void)sourceNodeWillStartStreaming;
- (void)sourceNodeWillStopStreaming;
- (bool)sphereEnabled;
- (int)sphereThermalLevel;
- (bool)sphereVideoEnabled;
- (bool)sphereVideoSupported;
- (int)start;
- (bool)started;
- (id /* block */)stillImageBufferTimeMachineHandler;
- (id)stillImageCaptureDelegate;
- (bool)stillImageCaptureEnabled;
- (bool)stillImageKeypointDetectionEnabled;
- (int)stop;
- (id)stream;
- (float)streamingFrameRateForZoomPIPOverlay;
- (bool)streamingRequiredWhenConfiguredAsSlave;
- (bool)studioLightingEnabled;
- (id)supportedFormats;
- (id)supportedOutputs;
- (bool)suspended;
- (bool)suspendingSupported;
- (bool)synchronizedStreamsEnabled;
- (int)synchronizedStreamsGroupDidUpdateActiveNondisruptiveSwitchingFormatIndex:(int)arg1 activeNondisruptiveSwitchingCommandID:(int)arg2;
- (id)tccIdentity;
- (bool)timeLapseEnabled;
- (int)timeMachineCapacity;
- (bool)timeMachineEnabled;
- (void)triggerVisionDataBurst;
- (bool)unifiedBracketingEnabled;
- (id)uniqueID;
- (void)updateAETables;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })updateMaxExposureDuration;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })updateMaxExposureDurationClientOverride:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (bool)usePinholeCameraFocalLengthInIntrinsicMatrixCalculation;
- (bool)usesStillFusionReferenceFramePTSForDidCaptureCallback;
- (bool)variableFrameRateVideoEnabled;
- (struct { int x1; int x2; })videoCaptureDimensions;
- (bool)videoHDRFusionEnabled;
- (bool)videoHDRImageStatisticsEnabled;
- (int)videoStabilizationStrength;
- (void)willBecomeMasterStream;
- (void)willBecomeSlaveStream;
- (void)willCaptureStillImageFromFirmware;
- (bool)zeroShutterLagEnabled;
- (id)zoomFactorToNondisruptiveSwitchingFormatIndexSIFRBinned;
- (id)zoomFactorToNondisruptiveSwitchingFormatIndexSIFRNonBinned;

@end
