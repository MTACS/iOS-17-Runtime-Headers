
@interface SPInternalSimpleBeacon : NSObject <NSCopying, NSSecureCoding> {
    SPDiscoveredAccessoryProductInformation * _accessoryProductInfo;
    long long  _batteryLevel;
    bool  _canBeLeashedByHost;
    long long  _connectableDeviceCount;
    bool  _connected;
    bool  _connectionAllowed;
    NSString * _discoveryId;
    NSUUID * _groupIdentifier;
    NSUUID * _identifier;
    long long  _internalShareType;
    bool  _isAppleAudioAccessory;
    bool  _isZeus;
    SPKeySyncRecord * _keySyncRecord;
    SPLostModeInfo * _lostModeInfo;
    NSString * _manufacturerName;
    NSString * _modelName;
    NSString * _name;
    SPHandle * _owner;
    NSUUID * _ownerBeaconIdentifier;
    long long  _partIdentifier;
    long long  _productId;
    NSUUID * _productUUID;
    SPBeaconRole * _role;
    NSSet * _safeLocations;
    NSString * _serialNumber;
    NSString * _systemVersion;
    NSDictionary * _taskInformation;
    double  _txPower;
    NSString * _type;
    long long  _vendorId;
}

@property (nonatomic, copy) SPDiscoveredAccessoryProductInformation *accessoryProductInfo;
@property (nonatomic) long long batteryLevel;
@property (nonatomic) bool canBeLeashedByHost;
@property (nonatomic) long long connectableDeviceCount;
@property (nonatomic) bool connected;
@property (nonatomic) bool connectionAllowed;
@property (nonatomic, copy) NSString *discoveryId;
@property (nonatomic, copy) NSUUID *groupIdentifier;
@property (nonatomic, copy) NSUUID *identifier;
@property (nonatomic) long long internalShareType;
@property (nonatomic) bool isAppleAudioAccessory;
@property (nonatomic) bool isZeus;
@property (nonatomic, copy) SPKeySyncRecord *keySyncRecord;
@property (nonatomic, copy) SPLostModeInfo *lostModeInfo;
@property (nonatomic, copy) NSString *manufacturerName;
@property (nonatomic, copy) NSString *modelName;
@property (nonatomic, copy) NSString *name;
@property (nonatomic, copy) SPHandle *owner;
@property (nonatomic, copy) NSUUID *ownerBeaconIdentifier;
@property (nonatomic) long long partIdentifier;
@property (nonatomic) long long productId;
@property (nonatomic, copy) NSUUID *productUUID;
@property (nonatomic, copy) SPBeaconRole *role;
@property (nonatomic, copy) NSSet *safeLocations;
@property (nonatomic, copy) NSString *serialNumber;
@property (nonatomic, copy) NSString *systemVersion;
@property (nonatomic, copy) NSDictionary *taskInformation;
@property (nonatomic) double txPower;
@property (nonatomic, copy) NSString *type;
@property (nonatomic) long long vendorId;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)accessoryProductInfo;
- (long long)batteryLevel;
- (bool)canBeLeashedByHost;
- (long long)connectableDeviceCount;
- (bool)connected;
- (bool)connectionAllowed;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)debugDescription;
- (id)discoveryId;
- (void)encodeWithCoder:(id)arg1;
- (id)groupIdentifier;
- (unsigned long long)hash;
- (id)identifier;
- (id)initWithCoder:(id)arg1;
- (long long)internalShareType;
- (bool)isAppleAudioAccessory;
- (bool)isEqual:(id)arg1;
- (bool)isZeus;
- (id)keySyncRecord;
- (id)lostModeInfo;
- (id)manufacturerName;
- (id)modelName;
- (id)name;
- (id)owner;
- (id)ownerBeaconIdentifier;
- (long long)partIdentifier;
- (long long)productId;
- (id)productUUID;
- (id)role;
- (id)safeLocations;
- (id)serialNumber;
- (void)setAccessoryProductInfo:(id)arg1;
- (void)setBatteryLevel:(long long)arg1;
- (void)setCanBeLeashedByHost:(bool)arg1;
- (void)setConnectableDeviceCount:(long long)arg1;
- (void)setConnected:(bool)arg1;
- (void)setConnectionAllowed:(bool)arg1;
- (void)setDiscoveryId:(id)arg1;
- (void)setGroupIdentifier:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setInternalShareType:(long long)arg1;
- (void)setIsAppleAudioAccessory:(bool)arg1;
- (void)setIsZeus:(bool)arg1;
- (void)setKeySyncRecord:(id)arg1;
- (void)setLostModeInfo:(id)arg1;
- (void)setManufacturerName:(id)arg1;
- (void)setModelName:(id)arg1;
- (void)setName:(id)arg1;
- (void)setOwner:(id)arg1;
- (void)setOwnerBeaconIdentifier:(id)arg1;
- (void)setPartIdentifier:(long long)arg1;
- (void)setProductId:(long long)arg1;
- (void)setProductUUID:(id)arg1;
- (void)setRole:(id)arg1;
- (void)setSafeLocations:(id)arg1;
- (void)setSerialNumber:(id)arg1;
- (void)setSystemVersion:(id)arg1;
- (void)setTaskInformation:(id)arg1;
- (void)setTxPower:(double)arg1;
- (void)setType:(id)arg1;
- (void)setVendorId:(long long)arg1;
- (id)systemVersion;
- (id)taskInformation;
- (double)txPower;
- (id)type;
- (long long)vendorId;

@end
