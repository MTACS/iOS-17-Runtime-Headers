
@interface SPLocalBeaconManager : NSObject <SPBLEStateMonitorDelegate, SPMonitorsWrapperDelegate> {
    bool  _alreadyPoisonedLocalBeacon;
    bool  _beaconFromNVRAM;
    id /* block */  _beaconingKeyChangedBlockWithCompletion;
    SPBLEStateMonitor * _bleMonitor;
    long long  _cachedLocalBeaconManagerState;
    bool  _currentBeaconingState;
    unsigned char  _currentStatus;
    <SPLocalBeaconManagerXPCProtocol> * _findMyBeaconDaemonProxy;
    FMXPCSession * _findMyBeaconDaemonSession;
    FMXPCServiceDescription * _findMyBeaconingDaemonServiceDescription;
    bool  _forceBeaconingOff;
    bool  _initialStateChangeSent;
    bool  _isOfflineFindingEnabled;
    SPMonitorsWrapper * _monitorWrapper;
    NSObject<OS_dispatch_source> * _periodicActionDispatchTimer;
    FMXPCActivity * _periodicActionXpcActivity;
    double  _periodicActionXpcActivityInterval;
    NSObject<OS_dispatch_queue> * _queue;
    bool  _schedulePeriodicActionXpcActivity;
    <SPLocalBeaconManagerXPCProtocol> * _searchPartyDaemonProxy;
    NSDictionary * _selfBeaconingConfigurations;
    NSData * _selfBeaconingDerivedSharedSecretKey;
    unsigned long long  _selfBeaconingIndex;
    NSDate * _selfBeaconingPairDate;
    NSData * _selfBeaconingPublicKey;
    NSUUID * _selfBeaconingUUID;
    FMXPCServiceDescription * _spdServiceDescription;
    FMXPCSession * _spdSession;
    id /* block */  _stateChangedBlockWithCompletion;
    id /* block */  _statusChangedBlockWithCompletion;
    <SPLocalBeaconManagerXPCProtocol> * _userAgentProxy;
}

@property (nonatomic) bool alreadyPoisonedLocalBeacon;
@property (nonatomic) bool beaconFromNVRAM;
@property (nonatomic, copy) id /* block */ beaconingKeyChangedBlockWithCompletion;
@property (nonatomic, retain) SPBLEStateMonitor *bleMonitor;
@property (nonatomic) long long cachedLocalBeaconManagerState;
@property (nonatomic) bool currentBeaconingState;
@property (nonatomic) unsigned char currentStatus;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) <SPLocalBeaconManagerXPCProtocol> *findMyBeaconDaemonProxy;
@property (nonatomic, retain) FMXPCSession *findMyBeaconDaemonSession;
@property (nonatomic, retain) FMXPCServiceDescription *findMyBeaconingDaemonServiceDescription;
@property (nonatomic) bool forceBeaconingOff;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool initialStateChangeSent;
@property (nonatomic) bool isOfflineFindingEnabled;
@property (nonatomic, retain) SPMonitorsWrapper *monitorWrapper;
@property (nonatomic, retain) NSObject<OS_dispatch_source> *periodicActionDispatchTimer;
@property (nonatomic, retain) FMXPCActivity *periodicActionXpcActivity;
@property (nonatomic) double periodicActionXpcActivityInterval;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic) bool schedulePeriodicActionXpcActivity;
@property (nonatomic, retain) <SPLocalBeaconManagerXPCProtocol> *searchPartyDaemonProxy;
@property (nonatomic, copy) NSDictionary *selfBeaconingConfigurations;
@property (nonatomic, copy) NSData *selfBeaconingDerivedSharedSecretKey;
@property (nonatomic) unsigned long long selfBeaconingIndex;
@property (nonatomic, copy) NSDate *selfBeaconingPairDate;
@property (nonatomic, copy) NSData *selfBeaconingPublicKey;
@property (nonatomic, copy) NSUUID *selfBeaconingUUID;
@property (nonatomic, retain) FMXPCServiceDescription *spdServiceDescription;
@property (nonatomic, retain) FMXPCSession *spdSession;
@property (nonatomic, copy) id /* block */ stateChangedBlockWithCompletion;
@property (nonatomic, copy) id /* block */ statusChangedBlockWithCompletion;
@property (readonly) Class superclass;
@property (nonatomic, retain) <SPLocalBeaconManagerXPCProtocol> *userAgentProxy;

+ (id)scheduleDateInterval:(id)arg1;

- (void).cxx_destruct;
- (void)_invalidate;
- (bool)alreadyPoisonedLocalBeacon;
- (bool)beaconFromNVRAM;
- (id /* block */)beaconingKeyChangedBlockWithCompletion;
- (void)beaconingStateChanged:(long long)arg1;
- (void)beaconingStateChangedNotification:(id)arg1;
- (void)beaconsChanged:(id)arg1;
- (id)bleMonitor;
- (void)bleMonitor:(id)arg1 didChangeState:(unsigned long long)arg2;
- (unsigned long long)bucketWithBaseTime:(id)arg1 date:(id)arg2;
- (long long)cachedLocalBeaconManagerState;
- (bool)currentBeaconingState;
- (unsigned char)currentStatus;
- (id)dateIntervalForIndex:(unsigned long long)arg1 baseDate:(id)arg2;
- (void)dealloc;
- (id)findMyBeaconDaemonProxy;
- (id)findMyBeaconDaemonSession;
- (id)findMyBeaconingDaemonServiceDescription;
- (bool)forceBeaconingOff;
- (void)generateBeaconingKeysOfType:(long long)arg1 now:(id)arg2 withCompletion:(id /* block */)arg3;
- (id)generateOfflineAdvertisingKeysForReason:(long long)arg1 now:(id)arg2;
- (void)handlerForActivity:(id)arg1 state:(long long)arg2;
- (id)init;
- (bool)initialStateChangeSent;
- (void)invalidate;
- (bool)isBeaconing;
- (bool)isOfflineFindingEnabled;
- (void)localActivationLockInfoChanged;
- (id)monitorWrapper;
- (void)notifyBeaconingKeysChangedBlockWithCompletion:(id /* block */)arg1;
- (void)notifyNearbyTokensChangedBlockWithCompletion:(id /* block */)arg1;
- (void)notifyStateChange:(bool)arg1;
- (void)notifyStatusChange:(unsigned char)arg1;
- (id)periodicActionDispatchTimer;
- (void)periodicActionWithCompletion:(id /* block */)arg1;
- (id)periodicActionXpcActivity;
- (double)periodicActionXpcActivityInterval;
- (id)queue;
- (id)rawNVRAMData;
- (void)refreshBeaconingState;
- (id)remoteInterface;
- (bool)schedulePeriodicActionXpcActivity;
- (id)searchPartyDaemonProxy;
- (id)searchPartyUserAgentProxy;
- (id)selfBeaconingConfigurations;
- (id)selfBeaconingDerivedSharedSecretKey;
- (unsigned long long)selfBeaconingIndex;
- (id)selfBeaconingPairDate;
- (id)selfBeaconingPublicKey;
- (id)selfBeaconingUUID;
- (void)setAlreadyPoisonedLocalBeacon:(bool)arg1;
- (void)setBeaconFromNVRAM:(bool)arg1;
- (void)setBeaconingKeyChangedBlockWithCompletion:(id /* block */)arg1;
- (void)setBleMonitor:(id)arg1;
- (void)setCachedLocalBeaconManagerState:(long long)arg1;
- (void)setCurrentBeaconingState:(bool)arg1;
- (void)setCurrentStatus:(unsigned char)arg1;
- (void)setFindMyBeaconDaemonProxy:(id)arg1;
- (void)setFindMyBeaconDaemonSession:(id)arg1;
- (void)setFindMyBeaconingDaemonServiceDescription:(id)arg1;
- (void)setForceBeaconingOff:(bool)arg1;
- (void)setInitialStateChangeSent:(bool)arg1;
- (void)setIsOfflineFindingEnabled:(bool)arg1;
- (void)setMonitorWrapper:(id)arg1;
- (void)setPeriodicActionDispatchTimer:(id)arg1;
- (void)setPeriodicActionDispatchTimerWithInterval:(double)arg1;
- (void)setPeriodicActionXpcActivity:(id)arg1;
- (void)setPeriodicActionXpcActivityInterval:(double)arg1;
- (void)setQueue:(id)arg1;
- (void)setSchedulePeriodicActionXpcActivity:(bool)arg1;
- (void)setSearchPartyDaemonProxy:(id)arg1;
- (void)setSelfBeaconingConfigurations:(id)arg1;
- (void)setSelfBeaconingDerivedSharedSecretKey:(id)arg1;
- (void)setSelfBeaconingIndex:(unsigned long long)arg1;
- (void)setSelfBeaconingPairDate:(id)arg1;
- (void)setSelfBeaconingPublicKey:(id)arg1;
- (void)setSelfBeaconingUUID:(id)arg1;
- (void)setSpdServiceDescription:(id)arg1;
- (void)setSpdSession:(id)arg1;
- (void)setStateChangedBlockWithCompletion:(id /* block */)arg1;
- (void)setStatusChangedBlockWithCompletion:(id /* block */)arg1;
- (void)setUserAgentProxy:(id)arg1;
- (id)spdServiceDescription;
- (id)spdSession;
- (void)start;
- (id /* block */)stateChangedBlockWithCompletion;
- (void)stateDidChange:(bool)arg1 powerState:(unsigned long long)arg2;
- (id /* block */)statusChangedBlockWithCompletion;
- (double)timeIntervalToNextFireDateFromDate:(id)arg1;
- (void)timerFired;
- (void)updateStateFromNVRAM;
- (id)userAgentProxy;
- (id)xpcActivityCriteria:(id)arg1;

@end
