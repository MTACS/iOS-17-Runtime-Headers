
@interface _MPCMusicPlayerControllerServer : NSObject <MPMusicPlayerControllerApplicationServer, MPMusicPlayerControllerSystemServer, NSXPCListenerDelegate, _MPCPlaybackEngineEventObserving> {
    NSMutableArray * _activeConnections;
    NSXPCListener * _listener;
    MPCPlaybackEngine * _playbackEngine;
    id /* block */  _prepareCompletionHandler;
    MPMusicPlayerQueueDescriptor * _preparingDescriptor;
    MPMusicPlayerQueueDescriptor * _queueDescriptor;
    bool  _resumed;
    NSUUID * _settingMultiplePlaybackContextsUUID;
    bool  _skipWaitingForLikelyToKeepUp;
    MPMusicPlayerControllerSystemCache * _systemCache;
    bool  _waitingForAdditionalPlaybackContexts;
}

@property (nonatomic, readonly) NSMutableArray *activeConnections;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSXPCListenerEndpoint *endpoint;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSXPCListener *listener;
@property (nonatomic, readonly) MPCPlaybackEngine *playbackEngine;
@property (getter=isRunning, nonatomic, readonly) bool running;
@property (readonly) Class superclass;
@property (nonatomic, readonly) MPMusicPlayerControllerSystemCache *systemCache;

- (void).cxx_destruct;
- (void)_addContentItemIDsToUpdateRecord:(id)arg1;
- (void)_appendPlaybackContexts:(id)arg1 completion:(id /* block */)arg2;
- (void)_applyServerStateUpdateRecord:(id)arg1;
- (void)_handleCommandHandlersRegistered:(id)arg1;
- (id)_nowPlayingWithItem:(id)arg1;
- (void)_onQueue_setNowPlayingItem:(id)arg1 itemIdentifier:(id)arg2 completion:(id /* block */)arg3;
- (void)_prependPlaybackContexts:(id)arg1 completion:(id /* block */)arg2;
- (void)_registerForCommandHandlersRegisteredNotification;
- (id)_timeSnapshotWithElapsedTime:(double)arg1 rate:(float)arg2;
- (id)activeConnections;
- (void)appendDescriptor:(id)arg1 completion:(id /* block */)arg2;
- (void)beginPlaybackAtHostTime:(id)arg1;
- (void)beginSeekWithDirection:(long long)arg1;
- (void)endSeek;
- (id)endpoint;
- (void)engine:(id)arg1 didAchieveLikelyToKeepUpWithItem:(id)arg2;
- (void)engine:(id)arg1 didChangeCurrentItemVariantID:(id)arg2;
- (void)engine:(id)arg1 didChangeItemElapsedTime:(double)arg2 rate:(float)arg3;
- (void)engine:(id)arg1 didChangeQueueWithReason:(id)arg2;
- (void)engine:(id)arg1 didChangeRepeatType:(long long)arg2;
- (void)engine:(id)arg1 didChangeShuffleType:(long long)arg2;
- (void)engine:(id)arg1 didChangeToItem:(id)arg2;
- (void)engine:(id)arg1 didChangeToState:(unsigned long long)arg2;
- (void)engine:(id)arg1 didEndPlaybackOfItem:(id)arg2;
- (void)engine:(id)arg1 didReachEndOfQueueWithReason:(id)arg2;
- (void)engine:(id)arg1 didResetQueueWithPlaybackContext:(id)arg2 error:(id)arg3;
- (void)getDescriptorWithReply:(id /* block */)arg1;
- (void)getImageForArtworkIdentifier:(id)arg1 itemIdentifier:(id)arg2 atSize:(struct CGSize { double x1; double x2; })arg3 reply:(id /* block */)arg4;
- (void)getNowPlayingAtIndex:(long long)arg1 reply:(id /* block */)arg2;
- (void)getNowPlayingWithReply:(id /* block */)arg1;
- (void)getNowPlayingsForContentItemIDs:(id)arg1 reply:(id /* block */)arg2;
- (void)getRepeatModeWithReply:(id /* block */)arg1;
- (void)getShuffleModeWithReply:(id /* block */)arg1;
- (void)getTimeSnapshotWithReply:(id /* block */)arg1;
- (id)initWithPlaybackEngine:(id)arg1;
- (bool)isRunning;
- (id)listener;
- (bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (void)pauseWithFadeDuration:(long long)arg1;
- (void)performQueueModifications:(id)arg1 completion:(id /* block */)arg2;
- (void)play;
- (id)playbackEngine;
- (void)prependDescriptor:(id)arg1 completion:(id /* block */)arg2;
- (void)prerollWithCompletion:(id /* block */)arg1;
- (void)reshuffle;
- (void)resumeIfNeeded;
- (void)setDescriptor:(id)arg1 completion:(id /* block */)arg2;
- (void)setDisableAutoPlay:(bool)arg1;
- (void)setDisableAutomaticCanBeNowPlaying:(bool)arg1;
- (void)setDisableRepeat:(bool)arg1;
- (void)setDisableShuffle:(bool)arg1;
- (void)setElapsedTime:(double)arg1 completion:(id /* block */)arg2;
- (void)setNowPlayingItem:(id)arg1 itemIdentifier:(id)arg2 completion:(id /* block */)arg3;
- (void)setNowPlayingUID:(unsigned long long)arg1 completion:(id /* block */)arg2;
- (void)setPlaybackRate:(float)arg1 completion:(id /* block */)arg2;
- (void)setRelativeVolume:(float)arg1;
- (void)setRepeatMode:(long long)arg1;
- (void)setShuffleMode:(long long)arg1;
- (void)skipWithBehavior:(long long)arg1;
- (void)startServer;
- (void)stop;
- (void)stopServer;
- (id)systemCache;

@end
