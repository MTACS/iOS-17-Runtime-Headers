
@interface PFMetadataCore : NSObject <NSCopying, PFMetadata> {
    NSNumber * _altitude;
    PFTimeZoneLookup * _cachedTimeZoneLookup;
    UTType * _contentType;
    NSDate * _creationDate;
    long long  _creationDateSource;
    NSString * _creationDateString;
    unsigned char  _detail;
    NSDictionary * _fileSystemProperties;
    NSURL * _fileURL;
    NSDate * _gpsDateTime;
    CLLocation * _gpsLocation;
    NSNumber * _isSpatialMediaValue;
    bool  _isSpatialVideoRecommendedForImmersiveMode;
    NSNumber * _latitude;
    NSNumber * _longitude;
    long long  _orientation;
    NSNumber * _pixelHeight;
    NSNumber * _pixelWidth;
    long long  _sourceType;
    NSNumber * _speed;
    NSTimeZone * _timeZone;
    PFMetadataTypeVerifier * _typeVerifier;
    NSDate * _utcCreationDate;
}

@property (nonatomic, readonly) NSNumber *GIFDelayTime;
@property (nonatomic, readonly) NSNumber *HEICSDelayTime;
@property (nonatomic, retain) NSNumber *altitude;
@property (nonatomic, readonly) NSNumber *apacAudioTrackBedChannelCount;
@property (nonatomic, readonly) NSNumber *apacAudioTrackChannelCount;
@property (nonatomic, readonly) NSString *apacAudioTrackCodecProfileLevelDescription;
@property (nonatomic, readonly) NSNumber *apacAudioTrackHoaChannelCount;
@property (nonatomic, readonly) NSString *artworkContentDescription;
@property (nonatomic, readonly) NSNumber *audioDataRate;
@property (nonatomic, readonly) NSNumber *audioSampleRate;
@property (nonatomic, readonly) NSNumber *audioTrackFormat;
@property (nonatomic, readonly) NSNumber *audioTrackFormatFlags;
@property (nonatomic, readonly) NSString *author;
@property (nonatomic, readonly) NSNumber *brightness;
@property (nonatomic, readonly) NSString *burstUuid;
@property (nonatomic, readonly) NSString *cameraMake;
@property (nonatomic, readonly) NSString *cameraModel;
@property (nonatomic, readonly) NSString *cameraSerialNumber;
@property (nonatomic, readonly) NSString *captionAbstract;
@property (nonatomic, readonly) NSString *captureMode;
@property (nonatomic, readonly) struct CGColorSpace { }*cgColorSpace;
@property (nonatomic, readonly) struct CGImageMetadata { }*cgImageMetadata;
@property (nonatomic, readonly) NSDictionary *cgImageProperties;
@property (nonatomic, readonly) NSString *colorPrimaries;
@property (nonatomic, retain) UTType *contentType;
@property (nonatomic, readonly) UTType *contentTypeFromFastModernizeVideoMedia;
@property (nonatomic, retain) NSDate *creationDate;
@property (nonatomic) long long creationDateSource;
@property (nonatomic, retain) NSString *creationDateString;
@property (nonatomic, readonly) long long customRendered;
@property (nonatomic, readonly) NSString *defaultProfileName;
@property (nonatomic, readonly) NSString *deferredPhotoProcessingIdentifier;
@property (nonatomic) unsigned char detail;
@property (nonatomic, readonly) NSNumber *digitalZoomRatio;
@property (nonatomic, readonly) struct { long long x1; int x2; unsigned int x3; long long x4; } duration;
@property (nonatomic, readonly) NSNumber *durationTimeInterval;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } exifPixelSize;
@property (nonatomic, readonly) NSNumber *exposureBias;
@property (nonatomic, readonly) NSNumber *exposureTime;
@property (nonatomic, readonly) NSNumber *fNumber;
@property (nonatomic, readonly) NSDate *fileCreationDate;
@property (nonatomic, readonly) NSDate *fileModificationDate;
@property (nonatomic, readonly) unsigned long long fileSize;
@property (nonatomic, retain) NSDictionary *fileSystemProperties;
@property (nonatomic, retain) NSURL *fileURL;
@property (nonatomic, readonly) NSString *firmware;
@property (nonatomic, readonly) unsigned int firstVideoTrackCodec;
@property (nonatomic, readonly) NSString *firstVideoTrackCodecString;
@property (nonatomic, readonly) NSString *firstVideoTrackFormatDebugDescription;
@property (nonatomic, readonly) NSNumber *flashCompensation;
@property (nonatomic, readonly) bool flashFired;
@property (nonatomic, readonly) NSNumber *flashValue;
@property (nonatomic, readonly) NSNumber *focalLength;
@property (nonatomic, readonly) NSNumber *focalLengthIn35mm;
@property (nonatomic, readonly) NSNumber *focusDistance;
@property (nonatomic, readonly) NSNumber *focusMode;
@property (nonatomic, readonly) NSArray *focusPoints;
@property (nonatomic, retain) NSDate *gpsDateTime;
@property (nonatomic, readonly) NSNumber *gpsHPositioningError;
@property (nonatomic, retain) CLLocation *gpsLocation;
@property (nonatomic, readonly) NSString *groupingUuid;
@property (nonatomic, readonly) bool hasCustomRendered;
@property (nonatomic, readonly) bool hasDepthDataAndIsNotRenderedSDOF;
@property (nonatomic, readonly) bool hasHDRGainMap;
@property (nonatomic, readonly) bool hasVitality;
@property (nonatomic, readonly) NSNumber *hdrGain;
@property (nonatomic, readonly) NSDictionary *hdrGainMap;
@property (nonatomic, readonly) NSNumber *hdrGainMapPercentageValue;
@property (nonatomic, readonly) PFHEVCProfileInformation *hevcProfileInfo;
@property (nonatomic, readonly) NSString *imageCaptureRequestIdentifier;
@property (nonatomic, readonly) NSData *imageData;
@property (nonatomic, readonly) NSNumber *imageDirection;
@property (nonatomic, readonly) NSString *imageDirectionRef;
@property (nonatomic, readonly) struct CGImageSource { }*imageSource;
@property (nonatomic, readonly) bool isActionCam;
@property (nonatomic, readonly) bool isAutoLivePhoto;
@property (nonatomic, readonly) bool isAutoloop;
@property (nonatomic, readonly) bool isCinematicVideo;
@property (nonatomic, readonly) bool isDecodable;
@property (nonatomic, readonly) bool isDeferredPhotoProxy;
@property (nonatomic, readonly) bool isDeferredPhotoProxyExpectingDepth;
@property (nonatomic, readonly) bool isFrontFacingCamera;
@property (nonatomic, readonly) bool isHDR;
@property (nonatomic, readonly) bool isHDR_ExtendedRange;
@property (nonatomic, readonly) bool isHDR_TS22028_5;
@property (nonatomic, readonly) bool isImage;
@property (nonatomic, readonly) bool isLongExposure;
@property (nonatomic, readonly) bool isLoopingVideo;
@property (nonatomic, readonly) bool isMirror;
@property (nonatomic, readonly) bool isMovie;
@property (nonatomic, readonly) bool isPhotoBooth;
@property (nonatomic, readonly) bool isPlayable;
@property (nonatomic, readonly) bool isPortrait;
@property (nonatomic, readonly) bool isProRAW;
@property (nonatomic, readonly) bool isProRes;
@property (nonatomic, readonly) bool isSDOF;
@property (nonatomic, readonly) bool isScreenshot;
@property (nonatomic, readonly) bool isSloMo;
@property (nonatomic, readonly) bool isSpatialMedia;
@property (nonatomic, retain) NSNumber *isSpatialMediaValue;
@property (nonatomic, readonly) bool isSpatialOverCapture;
@property (nonatomic) bool isSpatialVideoRecommendedForImmersiveMode;
@property (nonatomic, readonly) bool isSyndicationOriginated;
@property (nonatomic, readonly) bool isTimelapse;
@property (nonatomic, readonly) NSNumber *iso;
@property (nonatomic, readonly) NSArray *keywords;
@property (nonatomic, retain) NSNumber *latitude;
@property (nonatomic, readonly) NSString *lensMake;
@property (nonatomic, readonly) NSNumber *lensMaximumMM;
@property (nonatomic, readonly) NSNumber *lensMinimumMM;
@property (nonatomic, readonly) NSString *lensModel;
@property (nonatomic, readonly) NSNumber *lightSource;
@property (nonatomic, readonly) NSNumber *livePhotoMinimumClientVersion;
@property (nonatomic, readonly) NSString *livePhotoPairingIdentifier;
@property (nonatomic, readonly) bool livePhotoVitalityLimitingAllowed;
@property (nonatomic, readonly) NSNumber *livePhotoVitalityScore;
@property (nonatomic, readonly) NSNumber *livePhotoVitalityTransitionScore;
@property (nonatomic, retain) NSNumber *longitude;
@property (nonatomic, readonly) NSNumber *meteringMode;
@property (nonatomic, readonly) NSString *montageString;
@property (nonatomic, readonly) NSNumber *nominalFrameRate;
@property (nonatomic, readonly) NSNumber *nrfSrlStatus;
@property (nonatomic) long long orientation;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } orientedPixelSize;
@property (nonatomic, readonly) NSString *originalFileName;
@property (nonatomic, readonly) NSString *originatingAssetIdentifier;
@property (nonatomic, readonly) NSString *outOfBandHintsBase64String;
@property (nonatomic, readonly) NSString *ownerName;
@property (nonatomic, readonly) unsigned long long photoProcessingFlags;
@property (nonatomic, readonly) NSString *photoProcessingIdentifier;
@property (nonatomic, readonly) unsigned long long photosAppFeatureFlags;
@property (nonatomic, readonly) NSNumber *playbackVariation;
@property (nonatomic, readonly) NSString *portraitInLandscapeCamera;
@property (nonatomic, readonly) NSString *profileName;
@property (nonatomic, readonly) NSString *renderOriginatingAssetIdentifier;
@property (nonatomic, readonly) NSNumber *semanticStylePreset;
@property (nonatomic, readonly) NSNumber *semanticStyleRenderingVersion;
@property (nonatomic, readonly) NSNumber *semanticStyleToneBias;
@property (nonatomic, readonly) NSNumber *semanticStyleWarmthBias;
@property (nonatomic) long long sourceType;
@property (nonatomic, readonly) NSString *spatialOverCaptureIdentifier;
@property (nonatomic, retain) NSNumber *speed;
@property (nonatomic, readonly) NSString *speedRef;
@property (nonatomic, readonly) NSNumber *srlCompensationValue;
@property (nonatomic, readonly) struct { long long x1; int x2; unsigned int x3; long long x4; } stillImageDisplayTime;
@property (nonatomic, readonly) NSDictionary *syndicationProperties;
@property (nonatomic, retain) NSTimeZone *timeZone;
@property (nonatomic, retain) PFTimeZoneLookup *timeZoneLookup;
@property (nonatomic, readonly) NSString *timeZoneName;
@property (nonatomic, readonly) NSNumber *timeZoneOffset;
@property (nonatomic, readonly) NSString *title;
@property (nonatomic, readonly) NSString *transferFunction;
@property (nonatomic, retain) PFMetadataTypeVerifier *typeVerifier;
@property (nonatomic, readonly) NSString *userComment;
@property (nonatomic, retain) NSDate *utcCreationDate;
@property (nonatomic, readonly) NSString *videoCodecName;
@property (nonatomic, readonly) NSNumber *videoDataRate;
@property (nonatomic, readonly) NSNumber *videoDynamicRange;
@property (nonatomic, readonly) struct opaqueCMFormatDescription { }*videoTrackFormatDescription;
@property (nonatomic, readonly) NSNumber *whiteBalance;
@property (nonatomic, readonly) NSNumber *whiteBalanceIndex;

+ (bool)_canEncodeInPropertyList:(id)arg1;
+ (id)_filterArray:(id)arg1;
+ (id)_filterDictionary:(id)arg1;
+ (id)_filterPropertyListObject:(id)arg1;
+ (id)encodedDataWithPropertyListObject:(id)arg1;
+ (id)propertyListObjectFromEncodedData:(id)arg1 expectedClass:(Class)arg2 options:(unsigned long long)arg3 error:(id*)arg4;

- (void).cxx_destruct;
- (id)GIFDelayTime;
- (id)HEICSDelayTime;
- (void)_computeGPSLocation;
- (void)_computeIsSpatialMediaValue;
- (void)_computeOrientationValue;
- (bool)_convertTimeZoneOffsetString:(id)arg1 toSeconds:(double*)arg2;
- (id)_dateTimeOffsetOriginalForSyndicationProperties;
- (id)_dateTimeOriginalForSyndicationProperties;
- (id)_dateTimeSubsecOriginalForSyndicationProperties;
- (id)_makeDateTimeProperties;
- (id)_makeGPSProperties;
- (id)_makeGeometryProperties;
- (unsigned long long)_stillImageProcessingFlags;
- (id)altitude;
- (id)altitudeRef;
- (id)apacAudioTrackBedChannelCount;
- (id)apacAudioTrackChannelCount;
- (id)apacAudioTrackCodecProfileLevelDescription;
- (id)apacAudioTrackHoaChannelCount;
- (id)artworkContentDescription;
- (id)audioBitsPerChannel;
- (id)audioBytesPerFrame;
- (id)audioBytesPerPacket;
- (id)audioChannelsPerFrame;
- (id)audioDataRate;
- (id)audioFramesPerPacket;
- (id)audioSampleRate;
- (id)audioTrackFormat;
- (id)audioTrackFormatFlags;
- (id)author;
- (id)brightness;
- (id)burstUuid;
- (id)cameraMake;
- (id)cameraModel;
- (id)cameraSerialNumber;
- (id)captionAbstract;
- (id)captureMode;
- (struct CGColorSpace { }*)cgColorSpace;
- (struct CGImageMetadata { }*)cgImageMetadata;
- (id)cgImageProperties;
- (id)ciffDictionary;
- (id)colorPrimaries;
- (void)computeDateTimeValues;
- (void)computeGPSValues;
- (void)computePixelWidthAndHeightValue;
- (bool)configureWithMetadataPlist:(id)arg1;
- (id)contentType;
- (id)contentTypeFromFastModernizeVideoMedia;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)creationDate;
- (long long)creationDateSource;
- (id)creationDateString;
- (long long)customRendered;
- (id)defaultProfileName;
- (id)deferredPhotoProcessingIdentifier;
- (unsigned char)detail;
- (id)digitalZoomRatio;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })duration;
- (id)durationTimeInterval;
- (void)enumerateRawThumbnailInfoWithBlock:(id /* block */)arg1;
- (id)exifAuxDictionary;
- (id)exifDictionary;
- (struct CGSize { double x1; double x2; })exifPixelSize;
- (id)exposureBias;
- (id)exposureTime;
- (id)fNumber;
- (id)fileCreationDate;
- (id)fileModificationDate;
- (unsigned long long)fileSize;
- (id)fileSystemProperties;
- (id)fileURL;
- (id)firmware;
- (unsigned int)firstVideoTrackCodec;
- (id)firstVideoTrackCodecString;
- (id)firstVideoTrackFormatDebugDescription;
- (void)fixupGPSWithDate:(id)arg1 time:(id)arg2;
- (id)flashCompensation;
- (bool)flashFired;
- (id)flashValue;
- (id)focalLength;
- (id)focalLengthIn35mm;
- (id)focusDistance;
- (id)focusMode;
- (id)focusPoints;
- (id)gifDictionary;
- (id)gpsDateTime;
- (id)gpsDictionary;
- (id)gpsHPositioningError;
- (id)gpsLocation;
- (id)groupingUuid;
- (bool)hasCustomRendered;
- (bool)hasDepthDataAndIsNotRenderedSDOF;
- (bool)hasHDRGainMap;
- (bool)hasVitality;
- (id)hdrGain;
- (id)hdrGainFromValue:(id)arg1;
- (id)hdrGainMap;
- (id)hdrGainMapPercentageValue;
- (id)hevcProfileInfo;
- (id)imageCaptureRequestIdentifier;
- (id)imageData;
- (id)imageDirection;
- (id)imageDirectionRef;
- (struct CGImageSource { }*)imageSource;
- (id)initWithContentType:(id)arg1 detail:(unsigned char)arg2 timeZoneLookup:(id)arg3;
- (id)initWithMetadataPlist:(id)arg1 timeZoneLookup:(id)arg2;
- (id)iptcDictionary;
- (bool)isActionCam;
- (bool)isAutoLivePhoto;
- (bool)isAutoloop;
- (bool)isCinematicVideo;
- (bool)isDecodable;
- (bool)isDeferredPhotoProxy;
- (bool)isDeferredPhotoProxyExpectingDepth;
- (bool)isEqual:(id)arg1;
- (bool)isFrontFacingCamera;
- (bool)isHDR;
- (bool)isHDR_ExtendedRange;
- (bool)isHDR_TS22028_5;
- (bool)isImage;
- (bool)isLongExposure;
- (bool)isLoopingVideo;
- (bool)isMirror;
- (bool)isMovie;
- (bool)isPhotoBooth;
- (bool)isPlayable;
- (bool)isPortrait;
- (bool)isProRAW;
- (bool)isProRes;
- (bool)isSDOF;
- (bool)isScreenshot;
- (bool)isSloMo;
- (bool)isSpatialMedia;
- (id)isSpatialMediaValue;
- (bool)isSpatialOverCapture;
- (bool)isSpatialVideoRecommendedForImmersiveMode;
- (bool)isSyndicationOriginated;
- (bool)isTimelapse;
- (id)iso;
- (id)jsonDictionary;
- (id)keywords;
- (id)latitude;
- (id)lensMake;
- (id)lensMaximumMM;
- (id)lensMinimumMM;
- (id)lensModel;
- (id)lightSource;
- (id)livePhotoMinimumClientVersion;
- (id)livePhotoPairingIdentifier;
- (bool)livePhotoVitalityLimitingAllowed;
- (id)livePhotoVitalityScore;
- (id)livePhotoVitalityTransitionScore;
- (void)loadMetadataWithCompletionHandler:(id /* block */)arg1;
- (id)longitude;
- (id)makerAppleDictionary;
- (id)makerCanonDictionary;
- (id)makerNikonDictionary;
- (id)meteringMode;
- (id)montageString;
- (id)nominalFrameRate;
- (id)nrfSrlStatus;
- (long long)orientation;
- (struct CGSize { double x1; double x2; })orientedPixelSize;
- (id)originalFileName;
- (id)originatingAssetIdentifier;
- (id)outOfBandHintsBase64String;
- (id)ownerName;
- (unsigned long long)photoProcessingFlags;
- (id)photoProcessingIdentifier;
- (unsigned long long)photosAppFeatureFlags;
- (id)pixelHeight;
- (id)pixelWidth;
- (id)playbackVariation;
- (id)plistForEncoding;
- (id)portraitInLandscapeCamera;
- (id)profileName;
- (id)renderOriginatingAssetIdentifier;
- (id)semanticStylePreset;
- (id)semanticStyleRenderingVersion;
- (id)semanticStyleToneBias;
- (id)semanticStyleWarmthBias;
- (void)setAltitude:(id)arg1;
- (void)setContentType:(id)arg1;
- (void)setCreationDate:(id)arg1;
- (void)setCreationDateSource:(long long)arg1;
- (void)setCreationDateString:(id)arg1;
- (void)setDetail:(unsigned char)arg1;
- (void)setFileSystemProperties:(id)arg1;
- (void)setFileURL:(id)arg1;
- (void)setGpsDateTime:(id)arg1;
- (void)setGpsLocation:(id)arg1;
- (void)setImageSourceProperties:(id)arg1;
- (void)setIsSpatialMediaValue:(id)arg1;
- (void)setIsSpatialVideoRecommendedForImmersiveMode:(bool)arg1;
- (void)setKeysAndValues:(id)arg1 inDictionary:(id)arg2;
- (void)setLatitude:(id)arg1;
- (void)setLongitude:(id)arg1;
- (void)setOrientation:(long long)arg1;
- (void)setSourceType:(long long)arg1;
- (void)setSpeed:(id)arg1;
- (void)setTimeZone:(id)arg1;
- (void)setTimeZoneLookup:(id)arg1;
- (void)setTypeVerifier:(id)arg1;
- (void)setUtcCreationDate:(id)arg1;
- (id)software;
- (long long)sourceType;
- (id)spatialOverCaptureIdentifier;
- (id)speed;
- (id)speedRef;
- (id)srlCompensationValue;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })stillImageDisplayTime;
- (id)syndicationProperties;
- (id)tiffDictionary;
- (id)timeZone;
- (id)timeZoneLookup;
- (id)timeZoneName;
- (id)timeZoneOffset;
- (id)title;
- (id)transferFunction;
- (id)typeVerifier;
- (id)userComment;
- (id)utcCreationDate;
- (id)videoCodecName;
- (id)videoDataRate;
- (id)videoDynamicRange;
- (struct opaqueCMFormatDescription { }*)videoTrackFormatDescription;
- (id)whiteBalance;
- (id)whiteBalanceIndex;

@end
