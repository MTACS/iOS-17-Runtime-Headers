
@interface SBFLockScreenDateView : UIView {
    UIView * _activeSubtitleView;
    double  _alignmentPercent;
    SBFLockScreenDateSubtitleView * _customSubtitleView;
    UIFont * _customTimeFont;
    struct { 
        double ascender; 
        double descender; 
        double bodyLeading; 
        double capHeight; 
    }  _customTimeMetrics;
    NSString * _customTimeNumberingSystem;
    NSDate * _date;
    SBFLockScreenDateSubtitleDateView * _dateSubtitleView;
    double  _dateToTimeStretch;
    UIView * _inlineComplicationView;
    _UILegibilitySettings * _legibilitySettings;
    double  _maximumSubtitleWidth;
    UIColor * _overrideTextColor;
    CSProminentDisplayViewController * _prominentDisplayViewController;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _restingFrame;
    bool  _restrictsVibrancy;
    double  _subtitleAlpha;
    double  _subtitleLegibilityStrength;
    bool  _subtitleOnTop;
    double  _timeAlpha;
    SBUILegibilityLabel * _timeLabel;
    double  _timeLegibilityStrength;
    NSTimeZone * _timeZone;
    bool  _useCompactDateFormat;
    bool  _useLandscapeTimeFontSize;
    BSUIVibrancyConfiguration * _vibrancyConfiguration;
}

@property (nonatomic) double alignmentPercent;
@property (nonatomic, retain) SBFLockScreenDateSubtitleView *customSubtitleView;
@property (nonatomic, copy) UIFont *customTimeFont;
@property (nonatomic, readonly) struct { double x1; double x2; double x3; double x4; } customTimeMetrics;
@property (nonatomic, copy) NSString *customTimeNumberingSystem;
@property (nonatomic, retain) NSDate *date;
@property (nonatomic) double dateToTimeStretch;
@property (nonatomic, retain) UIView *inlineComplicationView;
@property (nonatomic, retain) _UILegibilitySettings *legibilitySettings;
@property (nonatomic) double maximumSubtitleWidth;
@property (nonatomic, retain) CSProminentDisplayViewController *prominentDisplayViewController;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } restingFrame;
@property (nonatomic) bool restrictsVibrancy;
@property (nonatomic, readonly) double subtitleAlpha;
@property (nonatomic, readonly) double subtitleBaselineOffsetFromOrigin;
@property (getter=isSubtitleHidden, nonatomic) bool subtitleHidden;
@property (nonatomic) double subtitleLegibilityStrength;
@property (nonatomic) bool subtitleOnTop;
@property (nonatomic, retain) UIColor *textColor;
@property (nonatomic, readonly) double timeAlpha;
@property (nonatomic, readonly) double timeBaselineOffsetFromOrigin;
@property (nonatomic) double timeLegibilityStrength;
@property (nonatomic) bool useCompactDateFormat;
@property (nonatomic) bool useLandscapeTimeFontSize;
@property (nonatomic, retain) BSUIVibrancyConfiguration *vibrancyConfiguration;

+ (double)defaultHeight;
+ (struct { double x1; double x2; double x3; double x4; })metricsForFont:(id)arg1;
+ (id)timeFont;
+ (struct { double x1; double x2; double x3; double x4; })timeFontMetrics;

- (void).cxx_destruct;
- (void)_cacheCustomTimeMetrics;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_cachedGlyphInsetsTimeFontForString:(id)arg1;
- (id)_effectiveTextColor;
- (void)_layoutSubtitle;
- (void)_setDate:(id)arg1 inTimeZone:(id)arg2;
- (void)_setSubtitleAlpha:(double)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_subtitleViewFrameForView:(id)arg1 alignmentPercent:(double)arg2;
- (id)_timeLabel;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_timeLabelFrameForAlignmentPercent:(double)arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_timeLabelInsetsForTimeString:(id)arg1;
- (void)_updateActiveSubtitleView;
- (void)_updateForNewFont;
- (void)_updateLabelAlpha;
- (void)_updateLabels;
- (void)_updateUsesCompactDateFormat;
- (double)alignmentPercent;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })chargingVisualInformationTimeFrame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })chargingVisualInformationTimeSubtitleFrame;
- (id)customSubtitleView;
- (id)customTimeFont;
- (struct { double x1; double x2; double x3; double x4; })customTimeMetrics;
- (id)customTimeNumberingSystem;
- (id)date;
- (double)dateToTimeStretch;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)inlineComplicationView;
- (bool)isSubtitleHidden;
- (void)layoutSubviews;
- (id)legibilitySettings;
- (double)maximumSubtitleWidth;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })presentationExtentForAlignmentPercent:(double)arg1;
- (id)prominentDisplayViewController;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })restingFrame;
- (bool)restrictsVibrancy;
- (void)setAlignmentPercent:(double)arg1;
- (void)setCustomSubtitleView:(id)arg1;
- (void)setCustomTimeFont:(id)arg1;
- (void)setCustomTimeNumberingSystem:(id)arg1;
- (void)setDate:(id)arg1;
- (void)setDateToTimeStretch:(double)arg1;
- (void)setInlineComplicationView:(id)arg1;
- (void)setLegibilitySettings:(id)arg1;
- (void)setMaximumSubtitleWidth:(double)arg1;
- (void)setProminentDisplayViewController:(id)arg1;
- (void)setRestingFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setRestrictsVibrancy:(bool)arg1;
- (void)setSubtitleHidden:(bool)arg1;
- (void)setSubtitleLegibilityStrength:(double)arg1;
- (void)setSubtitleOnTop:(bool)arg1;
- (void)setTextColor:(id)arg1;
- (void)setTimeAlpha:(double)arg1 subtitleAlpha:(double)arg2;
- (void)setTimeLegibilityStrength:(double)arg1;
- (void)setUseCompactDateFormat:(bool)arg1;
- (void)setUseLandscapeTimeFontSize:(bool)arg1;
- (void)setVibrancyConfiguration:(id)arg1;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (double)subtitleAlpha;
- (double)subtitleBaselineOffsetFromOrigin;
- (double)subtitleLegibilityStrength;
- (bool)subtitleOnTop;
- (id)textColor;
- (double)timeAlpha;
- (double)timeBaselineOffsetFromOrigin;
- (double)timeLegibilityStrength;
- (void)traitCollectionDidChange:(id)arg1;
- (void)updateFormat;
- (bool)useCompactDateFormat;
- (bool)useLandscapeTimeFontSize;
- (id)vibrancyConfiguration;

@end
