
@interface SBFLockScreenDateViewController : UIViewController <PTSettingsKeyObserver> {
    bool  _alternateDateEnabled;
    SBAlwaysOnDefaults * _alwaysOnDefaults;
    <BSDefaultObserver> * _alwaysOnDefaultsObserver;
    <SBFDateProviding> * _dateProvider;
    bool  _disablesUpdates;
    bool  _isVisible;
    _UILegibilitySettings * _legibilitySettings;
    id  _minuteHandlerToken;
    CSProminentDisplayViewController * _prominentDisplayViewController;
    bool  _restrictsVibrancy;
    bool  _screenOff;
    id  _timerToken;
}

@property (getter=isAlternateDateEnabled, nonatomic) bool alternateDateEnabled;
@property (nonatomic) double backgroundAlpha;
@property (nonatomic, retain) UIViewController *complicationContainerViewController;
@property (nonatomic, retain) <SBFDateProviding> *dateProvider;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) UIViewController *inlineComplicationViewController;
@property (nonatomic, retain) _UILegibilitySettings *legibilitySettings;
@property (nonatomic) bool restrictsVibrancy;
@property (nonatomic) bool screenOff;
@property (nonatomic) bool shouldApplyVibrancyToComplications;
@property (getter=isSubtitleHidden, nonatomic) bool subtitleHidden;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_addObservers;
- (bool)_canShowWhileLocked;
- (void)_handleTimeZoneChange;
- (void)_startUpdateTimer;
- (void)_stopUpdateTimer;
- (bool)_supportsCoaching;
- (id)_timelinesForDateInterval:(id)arg1;
- (void)_updateAlternateCalendar;
- (void)_updateFormat;
- (void)_updateFormatIfEnabled;
- (void)_updateLegibilityStrength;
- (void)_updateState;
- (void)_updateView;
- (void)_updateWithFrameSpecifier:(id)arg1;
- (double)backgroundAlpha;
- (id)complicationContainerViewController;
- (id)dateProvider;
- (id)dateView;
- (id)dateViewIfExists;
- (void)dealloc;
- (id)description;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)inlineComplicationViewController;
- (bool)isAlternateDateEnabled;
- (bool)isSubtitleHidden;
- (id)legibilitySettings;
- (void)loadView;
- (bool)restrictsVibrancy;
- (bool)screenOff;
- (void)setAlternateDateEnabled:(bool)arg1;
- (void)setBackgroundAlpha:(double)arg1;
- (void)setComplicationContainerViewController:(id)arg1;
- (void)setCustomSubtitle:(id)arg1;
- (void)setCustomSubtitle:(id)arg1 withTimeout:(double)arg2;
- (void)setCustomSubtitleView:(id)arg1;
- (void)setDateProvider:(id)arg1;
- (void)setDateTimeAlignment:(long long)arg1;
- (void)setDimmingViewAlpha:(double)arg1;
- (void)setInlineComplicationViewController:(id)arg1;
- (void)setLegibilitySettings:(id)arg1;
- (void)setRestrictsVibrancy:(bool)arg1;
- (void)setScreenOff:(bool)arg1;
- (void)setShouldApplyVibrancyToComplications:(bool)arg1;
- (void)setSubtitleHidden:(bool)arg1;
- (void)setTimeAlpha:(double)arg1 subtitleAlpha:(double)arg2;
- (void)setTimerWithText:(id)arg1;
- (void)setView:(id)arg1;
- (void)settings:(id)arg1 changedValueForKey:(id)arg2;
- (bool)shouldApplyVibrancyToComplications;
- (id)transientSubtitleText;
- (void)updateTimeNow;
- (void)updateTimerWithText:(id)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidMoveToWindow:(id)arg1 shouldAppearOrDisappear:(bool)arg2;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (void)willMoveToParentViewController:(id)arg1;

@end
