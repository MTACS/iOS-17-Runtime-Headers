
@interface FCUIActivityControlMenuItemView : UIView <FCUIContentSizeCategoryAdjusting, FCUIMenuElement, MTVisualStylingRequiring, UIPointerInteractionDelegate> {
    UIImageView * _accessoryImageView;
    UILabel * _activationDescriptionLabel;
    UILabel * _activationDetailsLabel;
    bool  _adjustsFontForContentSizeCategory;
    UILabel * _alternativeDescriptionLabel;
    UIView * _backgroundView;
    NSMutableDictionary * _categoriesToVisualStylingProviders;
    UIAction * _defaultAction;
    NSStringDrawingContext * _drawingContext;
    UIView * _highlightView;
    NSString * _preferredContentSizeCategory;
    UIView * _separatorView;
    bool  _separatorVisible;
    NSHashTable * _viewsRequiringUpdate;
}

@property (nonatomic) bool adjustsFontForContentSizeCategory;
@property (nonatomic, copy) NSString *alternativeDescription;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, copy) UIAction *defaultAction;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (getter=isHighlighted, nonatomic) bool highlighted;
@property (getter=isMenuElement, nonatomic, readonly) bool menuElement;
@property (nonatomic, copy) NSString *preferredContentSizeCategory;
@property (nonatomic, readonly, copy) NSString *representedObjectIdentifier;
@property (nonatomic, readonly, copy) NSArray *requiredVisualStyleCategories;
@property (getter=isSelected, nonatomic) bool selected;
@property (getter=isSeparatorVisible, nonatomic) bool separatorVisible;
@property (readonly) Class superclass;

+ (id)_preferredFont:(bool)arg1 textStyle:(id)arg2 weight:(double)arg3 additionalTraits:(unsigned int)arg4;

- (void).cxx_destruct;
- (id)_accessoryImage;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_accessoryImageFrameForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_activationDescription;
- (id)_activationDetails;
- (void)_addViewRequiringUpdate:(id)arg1;
- (id)_checkmarkImage;
- (void)_configureAccessoryImageViewIfNecessary;
- (void)_configureActivationDescriptionLabelIfNecessary;
- (void)_configureActivationDetailsLabelIfNecessary;
- (void)_configureAlternativeDescriptionLabelIfNecessary;
- (void)_configureBackgroundViewIfNecessary;
- (void)_configureCheckmarkImageViewIfNecessary;
- (void)_configureHighlightViewIfNecessary;
- (void)_configureSeparatorViewIfNecessary;
- (void)_didPerformUpdate;
- (bool)_isCheckmarkEnabled;
- (bool)_needsTextAttributesUpdate;
- (id)_newLabel;
- (double)_separatorHeight;
- (void)_setAccessoryImage:(id)arg1;
- (void)_setActivationDescription:(id)arg1;
- (void)_setActivationDetails:(id)arg1;
- (void)_setNeedsTextAttributesUpdate;
- (void)_tearDownAccessoryImageViewIfNecessary;
- (void)_tearDownCheckmarkImageViewIfNecessary;
- (void)_tearDownSeparatorViewIfNecessary;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_textFrameForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 accessoryImageFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)_updateTextAttributes;
- (void)_updateTextAttributesForActivationDescriptionLabel;
- (void)_updateTextAttributesForActivationDetailsLabel;
- (void)_updateTextAttributesForAlternativeDescriptionLabel;
- (void)_updateTextAttributesIfNecessary;
- (void)_updateVisualStylingOfView:(id)arg1 style:(long long)arg2 visualStylingProvider:(id)arg3 outgoingProvider:(id)arg4;
- (void)_visualStylingProvider:(id)arg1 didChangeForCategory:(long long)arg2 outgoingProvider:(id)arg3;
- (bool)adjustForContentSizeCategoryChange;
- (bool)adjustsFontForContentSizeCategory;
- (id)alternativeDescription;
- (id)defaultAction;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isHighlighted;
- (bool)isMenuElement;
- (bool)isSelected;
- (bool)isSeparatorVisible;
- (void)layoutSubviews;
- (void)performAction;
- (id)pointerInteraction:(id)arg1 regionForRequest:(id)arg2 defaultRegion:(id)arg3;
- (id)pointerInteraction:(id)arg1 styleForRegion:(id)arg2;
- (id)preferredContentSizeCategory;
- (id)representedObjectIdentifier;
- (id)requiredVisualStyleCategories;
- (void)setAdjustsFontForContentSizeCategory:(bool)arg1;
- (void)setAlternativeDescription:(id)arg1;
- (void)setDefaultAction:(id)arg1;
- (void)setHighlighted:(bool)arg1;
- (void)setPreferredContentSizeCategory:(id)arg1;
- (void)setSelected:(bool)arg1;
- (void)setSeparatorVisible:(bool)arg1;
- (void)setVisualStylingProvider:(id)arg1 forCategory:(long long)arg2;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;

@end
