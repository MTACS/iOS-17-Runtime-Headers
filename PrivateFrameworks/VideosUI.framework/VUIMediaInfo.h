
@interface VUIMediaInfo : NSObject <NSCopying> {
    bool  _allowsPictureInPicture;
    VUIImageProxy * _alphaImageProxy;
    NSString * _alphaLayerAccessibilityText;
    VUIAppContext * _appContext;
    bool  _automaticPlaybackStart;
    bool  _automaticPlaybackStop;
    UIColor * _backgroundColor;
    UIView * _contentView;
    bool  _gradientDisabled;
    bool  _hasProgress;
    NSArray * _imageProxies;
    NSArray * _imageThemes;
    unsigned long long  _intent;
    UIView * _overlayView;
    bool  _overridesStartTimeWithResumeTime;
    unsigned long long  _playbackContext;
    double  _playbackDelayInterval;
    unsigned long long  _playbackStartReason;
    unsigned long long  _playbackStopReason;
    TVPPlaylist * _playlist;
    double  _primaryVideoAspectRatio;
    bool  _restrictionsAlreadyUnlocked;
    bool  _shouldDelayLoadingImage;
    bool  _showsSecondaryVideoView;
    TVPPlaylist * _tvpPlaylist;
    NSArray * _videosPlayables;
}

@property (nonatomic) bool allowsPictureInPicture;
@property (nonatomic, retain) VUIImageProxy *alphaImageProxy;
@property (nonatomic, retain) NSString *alphaLayerAccessibilityText;
@property (nonatomic, retain) VUIAppContext *appContext;
@property (getter=isAutomaticPlaybackStart, nonatomic) bool automaticPlaybackStart;
@property (getter=isAutomaticPlaybackStop, nonatomic) bool automaticPlaybackStop;
@property (nonatomic, retain) UIColor *backgroundColor;
@property (nonatomic, retain) UIView *contentView;
@property (getter=isGradientDisabled, nonatomic) bool gradientDisabled;
@property (nonatomic, readonly) bool hasProgress;
@property (nonatomic, copy) NSArray *imageProxies;
@property (nonatomic, copy) NSArray *imageThemes;
@property (nonatomic) unsigned long long intent;
@property (nonatomic, retain) UIView *overlayView;
@property (nonatomic) bool overridesStartTimeWithResumeTime;
@property (nonatomic) unsigned long long playbackContext;
@property (nonatomic) double playbackDelayInterval;
@property (nonatomic) unsigned long long playbackStartReason;
@property (nonatomic) unsigned long long playbackStopReason;
@property (nonatomic, retain) TVPPlaylist *playlist;
@property (nonatomic) double primaryVideoAspectRatio;
@property (nonatomic) bool restrictionsAlreadyUnlocked;
@property (nonatomic) bool shouldDelayLoadingImage;
@property (nonatomic) bool showsSecondaryVideoView;
@property (nonatomic, retain) TVPPlaylist *tvpPlaylist;
@property (nonatomic, retain) NSArray *videosPlayables;

+ (id)_playbackOverridesForURL:(id)arg1 adamID:(id)arg2 canonicalID:(id)arg3;
+ (id)playbackURLOverrideForOriginalURL:(id)arg1 adamID:(id)arg2 canonicalID:(id)arg3;

- (void).cxx_destruct;
- (id)_auxMediaItemFromVideosPlayable:(id)arg1;
- (id)_hlsURLEnsuringDsidQueryParamIsPresentFromURL:(id)arg1;
- (id)_hlsURLUpdatedWithBingeWatchingParamFromURL:(id)arg1;
- (id)_mediaItemForSidebandLibraryAdamID:(id)arg1;
- (id)_playlistForSidebandLibraryAdamIDs:(id)arg1;
- (id)_playlistForVUIMediaItems:(id)arg1 playbackContext:(unsigned long long)arg2;
- (id)_playlistFromMPMediaItems:(id)arg1 playbackContext:(unsigned long long)arg2;
- (id)_playlistFromVideosPlayables:(id)arg1 andStoreDictionary:(id)arg2;
- (void)_populateMediaItem:(id)arg1 withMetadataFromVideosPlayable:(id)arg2;
- (void)_populateMediaItem:(id)arg1 withMetadataOverrides:(id)arg2;
- (void)_populateMediaItem:(id)arg1 withResumeTimeInfoFromPlayable:(id)arg2;
- (id)_sportingEventSubtitleFromStartTime:(id)arg1 endTime:(id)arg2 leagueShortName:(id)arg3;
- (id)_storeMediaItemFromMPMediaItem:(id)arg1 playbackContext:(unsigned long long)arg2;
- (id)_storeMediaItemFromVideosPlayable:(id)arg1 andStoreDictionary:(id)arg2;
- (id)_tvpMediaTypeFromPlayable:(id)arg1;
- (id)_tvpRatingDomainFromUTSRatingDomain:(id)arg1;
- (void)_updatePlaybackStartReason;
- (void)_updatePlaybackStopReason;
- (long long)_videoDynamimcRangeFromMPColorCapability:(long long)arg1;
- (long long)_videoResolutionFromMPVideoQuality:(long long)arg1;
- (bool)allowsPictureInPicture;
- (id)alphaImageProxy;
- (id)alphaLayerAccessibilityText;
- (id)appContext;
- (id)backgroundColor;
- (id)contentView;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (bool)hasProgress;
- (unsigned long long)hash;
- (id)imageProxies;
- (id)imageThemes;
- (id)init;
- (id)initWithPlaybackContext:(unsigned long long)arg1 mpMediaItems:(id)arg2;
- (id)initWithPlaybackContext:(unsigned long long)arg1 sidebandLibraryAdamIDs:(id)arg2;
- (id)initWithPlaybackContext:(unsigned long long)arg1 videosPlayables:(id)arg2 imageProxies:(id)arg3 storeDictionary:(id)arg4;
- (id)initWithPlaybackContext:(unsigned long long)arg1 vuiMediaItems:(id)arg2;
- (unsigned long long)intent;
- (bool)isAutomaticPlaybackStart;
- (bool)isAutomaticPlaybackStop;
- (bool)isEqual:(id)arg1;
- (bool)isGradientDisabled;
- (id)overlayView;
- (bool)overridesStartTimeWithResumeTime;
- (unsigned long long)playbackContext;
- (double)playbackDelayInterval;
- (unsigned long long)playbackStartReason;
- (unsigned long long)playbackStopReason;
- (id)playlist;
- (double)primaryVideoAspectRatio;
- (bool)restrictionsAlreadyUnlocked;
- (void)setAllowsPictureInPicture:(bool)arg1;
- (void)setAlphaImageProxy:(id)arg1;
- (void)setAlphaLayerAccessibilityText:(id)arg1;
- (void)setAppContext:(id)arg1;
- (void)setAutomaticPlaybackStart:(bool)arg1;
- (void)setAutomaticPlaybackStop:(bool)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setContentView:(id)arg1;
- (void)setGradientDisabled:(bool)arg1;
- (void)setImageProxies:(id)arg1;
- (void)setImageThemes:(id)arg1;
- (void)setIntent:(unsigned long long)arg1;
- (void)setOverlayView:(id)arg1;
- (void)setOverridesStartTimeWithResumeTime:(bool)arg1;
- (void)setPlaybackContext:(unsigned long long)arg1;
- (void)setPlaybackDelayInterval:(double)arg1;
- (void)setPlaybackStartReason:(unsigned long long)arg1;
- (void)setPlaybackStopReason:(unsigned long long)arg1;
- (void)setPlaylist:(id)arg1;
- (void)setPrimaryVideoAspectRatio:(double)arg1;
- (void)setRestrictionsAlreadyUnlocked:(bool)arg1;
- (void)setShouldDelayLoadingImage:(bool)arg1;
- (void)setShowsSecondaryVideoView:(bool)arg1;
- (void)setTvpPlaylist:(id)arg1;
- (void)setUserPlaybackInitiationDate:(id)arg1 openURLCompletionDate:(id)arg2;
- (void)setVideosPlayables:(id)arg1;
- (bool)shouldDelayLoadingImage;
- (bool)showsSecondaryVideoView;
- (id)tvpPlaylist;
- (id)videosPlayables;

@end
