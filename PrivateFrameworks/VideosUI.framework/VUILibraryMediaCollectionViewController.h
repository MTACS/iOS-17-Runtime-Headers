
@interface VUILibraryMediaCollectionViewController : VUILibraryStackViewController <TVShelfViewLayoutDelegate, UICollectionViewDelegate, VUILibraryDataSourceDelegate, VUILibraryEpisodeFooterCellDelegate, VUILibraryEpisodeShelfViewControllerDelegate, VUIProductLockupViewDelegate> {
    bool  _canShowMultipleSeasons;
    VUIViewControllerContentPresenter * _contentPresenter;
    UICollectionViewDiffableDataSource * _diffableDataSource;
    NSArray * _episodeGroups;
    NSArray * _episodes;
    VUIMediaEntitiesDataSource * _episodesDataSource;
    bool  _episodesFetchHasCompleted;
    VUIMediaCollection * _mediaCollection;
    VUILibraryMediaCollectionViewModel * _mediaCollectionViewModel;
    NSArray * _seasons;
    VUIMediaEntitiesDataSource * _seasonsDataSource;
    bool  _seasonsFetchHasCompleted;
    NSString * _showTitle;
}

@property (nonatomic) bool canShowMultipleSeasons;
@property (nonatomic, retain) VUIViewControllerContentPresenter *contentPresenter;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) UICollectionViewDiffableDataSource *diffableDataSource;
@property (nonatomic, retain) NSArray *episodeGroups;
@property (nonatomic, retain) NSArray *episodes;
@property (nonatomic, retain) VUIMediaEntitiesDataSource *episodesDataSource;
@property (nonatomic) bool episodesFetchHasCompleted;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) VUIMediaCollection *mediaCollection;
@property (nonatomic, retain) VUILibraryMediaCollectionViewModel *mediaCollectionViewModel;
@property (nonatomic, retain) NSArray *seasons;
@property (nonatomic, retain) VUIMediaEntitiesDataSource *seasonsDataSource;
@property (nonatomic) bool seasonsFetchHasCompleted;
@property (nonatomic, retain) NSString *showTitle;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (bool)_allFetchesHaveCompleted;
- (void)_buildMediaCollectionViewModel;
- (id)_createDiffableDataSourceForCollectionView:(id)arg1;
- (id)_createDiffableDataSourceSnapshot;
- (id)_episodeShelfViewControllerWithSeason:(id)arg1 episodes:(id)arg2;
- (id)_episodesBySeasonIdentifier;
- (id)_productLockupViewWithSeason:(id)arg1;
- (id)_seasonViewModelByIdentifier:(id)arg1;
- (id)_seasonViewModelIdentifiers;
- (void)_updateAfterContentWasManuallyDeleted:(bool)arg1;
- (void)_updateDeletedContentErrorMessage;
- (void)_updateEpisodeShelvesWithLatestEpisodes;
- (void)_updateMediaCollectionViewModelForSeasons;
- (void)_updateProductLockupView:(id)arg1 withSeason:(id)arg2;
- (void)_updateProductLockupViewWithSeasonIdentifier:(id)arg1;
- (bool)_usingEpisodesGroupFetch;
- (void)addDownloadButtonToProductLockupView:(id)arg1 forSeason:(id)arg2;
- (bool)canShowMultipleSeasons;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })collectionView:(id)arg1 layout:(id)arg2 insetForSectionAtIndex:(long long)arg3;
- (double)collectionView:(id)arg1 layout:(id)arg2 minimumLineSpacingForSectionAtIndex:(long long)arg3;
- (struct CGSize { double x1; double x2; })collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (void)configureWithCollectionView:(id)arg1;
- (void)contentDescriptionExpanded;
- (id)contentPresenter;
- (void)dataSourceDidFinishFetching:(id)arg1;
- (id)diffableDataSource;
- (id)episodeGroups;
- (id)episodes;
- (id)episodesDataSource;
- (bool)episodesFetchHasCompleted;
- (id)initWithTitle:(id)arg1 withSeasonsDataSource:(id)arg2 withEpisodesDataSource:(id)arg3;
- (void)libraryEpisodesShelfViewController:(id)arg1 didRemoveDownloadForAssetController:(id)arg2;
- (void)loadView;
- (id)mediaCollection;
- (id)mediaCollectionViewModel;
- (id)seasons;
- (id)seasonsDataSource;
- (bool)seasonsFetchHasCompleted;
- (void)setCanShowMultipleSeasons:(bool)arg1;
- (void)setContentPresenter:(id)arg1;
- (void)setDiffableDataSource:(id)arg1;
- (void)setEpisodeGroups:(id)arg1;
- (void)setEpisodes:(id)arg1;
- (void)setEpisodesDataSource:(id)arg1;
- (void)setEpisodesFetchHasCompleted:(bool)arg1;
- (void)setMediaCollection:(id)arg1;
- (void)setMediaCollectionViewModel:(id)arg1;
- (void)setSeasons:(id)arg1;
- (void)setSeasonsDataSource:(id)arg1;
- (void)setSeasonsFetchHasCompleted:(bool)arg1;
- (void)setShowTitle:(id)arg1;
- (void)showItemNotAvailableDialog;
- (id)showTitle;
- (void)start;
- (void)titleButtonPressedForStoreId:(id)arg1;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewWillLayoutSubviews;

@end
