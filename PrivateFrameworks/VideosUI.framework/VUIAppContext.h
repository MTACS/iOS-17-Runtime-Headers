
@interface VUIAppContext : NSObject {
    <VUIApplication> * _app;
    double  _appScriptTimeoutInterval;
    bool  _canAccessPendingQueue;
    <VUIAppContextDelegate> * _delegate;
    bool  _isValid;
    VUIJSApplication * _jsApp;
    JSContext * _jsContext;
    VUIJSFoundation * _jsFoundation;
    struct __CFRunLoop { } * _jsThreadRunLoop;
    struct __CFRunLoopSource { } * _jsThreadRunLoopSource;
    NSObject<OS_dispatch_source> * _lowMemoryWarningSource;
    unsigned long long  _mode;
    NSString * _nextJSChecksum;
    NSMutableArray * _onStartQueue;
    NSMutableArray * _pendingQueue;
    NSMutableArray * _postEvaluationBlocks;
    VUIAppReloadContext * _reloadContext;
    bool  _remoteInspectionEnabled;
    bool  _respondsToTraitCollection;
    NSError * _responseError;
    NSString * _responseScript;
    bool  _running;
}

@property (nonatomic, readonly) <VUIApplication> *app;
@property (nonatomic) double appScriptTimeoutInterval;
@property (nonatomic) bool canAccessPendingQueue;
@property (nonatomic, readonly) <VUIAppContextDelegate> *delegate;
@property bool isValid;
@property (nonatomic, retain) VUIJSApplication *jsApp;
@property (nonatomic, retain) JSContext *jsContext;
@property (nonatomic, retain) VUIJSFoundation *jsFoundation;
@property (nonatomic, readonly) unsigned long long mode;
@property (nonatomic, copy) NSString *nextJSChecksum;
@property (nonatomic, readonly) NSMutableArray *onStartQueue;
@property (nonatomic, retain) NSMutableArray *pendingQueue;
@property (nonatomic, retain) NSMutableArray *postEvaluationBlocks;
@property (nonatomic, retain) VUIAppReloadContext *reloadContext;
@property (nonatomic) bool remoteInspectionEnabled;
@property (nonatomic, retain) NSError *responseError;
@property (nonatomic, copy) NSString *responseScript;
@property (getter=isRunning) bool running;

+ (id)currentAppContext;

- (void).cxx_destruct;
- (void)_addPrivateInterfaces;
- (void)_addStopRecordToPendingQueueWithReload:(bool)arg1;
- (id)_appTraitCollection;
- (void)_dispatchError:(id)arg1;
- (void)_doEvaluate:(id /* block */)arg1;
- (void)_drainOnStartQueue;
- (void)_enqueueOnStartOrExecute:(id /* block */)arg1;
- (id)_errorWithMessage:(id)arg1;
- (void)_evaluate:(id /* block */)arg1;
- (void)_invalidateJSThread;
- (void)_jsThreadMain;
- (bool)_prepareStartWithURL:(id)arg1;
- (void)_sourceCanceledOnRunLoop:(struct __CFRunLoop { }*)arg1;
- (void)_sourcePerform;
- (void)_sourceScheduledOnRunLoop:(struct __CFRunLoop { }*)arg1;
- (void)_startWithScript:(id)arg1 scriptUrl:(id)arg2;
- (void)_startWithURL:(id)arg1;
- (void)_stopAndReload:(bool)arg1;
- (void)addPostEvaluateBlock:(id /* block */)arg1;
- (id)app;
- (double)appScriptTimeoutInterval;
- (bool)canAccessPendingQueue;
- (void)contextDidFailWithError:(id)arg1;
- (void)contextDidStartWithJS:(id)arg1 options:(id)arg2;
- (void)contextDidStopWithOptions:(id)arg1;
- (void)dealloc;
- (id)delegate;
- (void)evaluate:(id /* block */)arg1;
- (void)evaluate:(id /* block */)arg1 completionBlock:(id /* block */)arg2;
- (void)evaluate:(id /* block */)arg1 completionBlock:(id /* block */)arg2 completionQueue:(id)arg3;
- (void)evaluateDelegateBlockSync:(id /* block */)arg1;
- (void)evaluateFoundationJS;
- (void)exitAppWithOptions:(id)arg1;
- (void)handleReloadWithUrgencyType:(unsigned long long)arg1 minInterval:(double)arg2 data:(id)arg3;
- (id)initWithApplication:(id)arg1 mode:(unsigned long long)arg2 delegate:(id)arg3;
- (bool)isRunning;
- (bool)isValid;
- (id)jsApp;
- (id)jsContext;
- (id)jsFoundation;
- (void)launchAppWithOptions:(id)arg1;
- (unsigned long long)mode;
- (id)nextJSChecksum;
- (id)onStartQueue;
- (void)openURLWithOptions:(id)arg1;
- (id)pendingQueue;
- (id)postEvaluationBlocks;
- (void)reload;
- (id)reloadContext;
- (bool)remoteInspectionEnabled;
- (id)responseError;
- (id)responseScript;
- (void)resumeWithOptions:(id)arg1;
- (void)setAppScriptTimeoutInterval:(double)arg1;
- (void)setCanAccessPendingQueue:(bool)arg1;
- (void)setException:(id)arg1 withErrorMessage:(id)arg2;
- (void)setIsValid:(bool)arg1;
- (void)setJsApp:(id)arg1;
- (void)setJsContext:(id)arg1;
- (void)setJsFoundation:(id)arg1;
- (void)setNextJSChecksum:(id)arg1;
- (void)setPendingQueue:(id)arg1;
- (void)setPostEvaluationBlocks:(id)arg1;
- (void)setReloadContext:(id)arg1;
- (void)setRemoteInspectionEnabled:(bool)arg1;
- (void)setResponseError:(id)arg1;
- (void)setResponseScript:(id)arg1;
- (void)setRunning:(bool)arg1;
- (void)start;
- (void)stop;
- (void)suspendWithOptions:(id)arg1;

@end
