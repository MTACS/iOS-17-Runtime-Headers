
@interface AXLTAudioOutTranscriber : NSObject {
    NSString * _appID;
    NSString * _appName;
    long long  _audioBuffersAppendedCount;
    AVAudioFile * _audioFile;
    struct OpaqueAudioQueue { } * _audioQueue;
    NSDate * _bufferLogTime;
    int  _bufferState;
    <AXLTTranscriberDelegateProtocol> * _delegate;
    bool  _dumpTestData;
    NSString * _filePath;
    struct AudioQueueBuffer {} * _mBuffers;
    int  _pid;
    NSObject<OS_dispatch_queue> * _saveQueue;
    NSDate * _sessionStartTime;
    long long  _silentBuffersCount;
    long long  _silentSamplesTailCount;
    AVAudioFormat * _tapFormat;
    NSFileHandle * _textFile;
    NSString * _textFileName;
    NSDate * _textLogTime;
    AXLTTranscriber * _transcriber;
}

@property (nonatomic, retain) NSString *appID;
@property (retain) NSString *appName;
@property (nonatomic) long long audioBuffersAppendedCount;
@property (nonatomic, retain) AVAudioFile *audioFile;
@property (nonatomic) struct OpaqueAudioQueue { }*audioQueue;
@property (nonatomic, retain) NSDate *bufferLogTime;
@property (nonatomic) int bufferState;
@property (nonatomic) <AXLTTranscriberDelegateProtocol> *delegate;
@property (nonatomic, retain) NSString *filePath;
@property (nonatomic) int pid;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *saveQueue;
@property (nonatomic, retain) NSDate *sessionStartTime;
@property (nonatomic) long long silentBuffersCount;
@property (nonatomic) long long silentSamplesTailCount;
@property (nonatomic, retain) AVAudioFormat *tapFormat;
@property (nonatomic, retain) NSFileHandle *textFile;
@property (nonatomic, retain) NSString *textFileName;
@property (nonatomic, retain) NSDate *textLogTime;
@property (retain) AXLTTranscriber *transcriber;

- (void).cxx_destruct;
- (void)_appendBuffer:(struct AudioQueueBuffer { unsigned int x1; void *x2; unsigned int x3; void *x4; unsigned int x5; struct AudioStreamPacketDescription {} *x6; unsigned int x7; }*)arg1 offsetInPackets:(unsigned int)arg2 packetCount:(unsigned int)arg3;
- (void)_calcHistogramForBuffer:(struct AudioQueueBuffer { unsigned int x1; void *x2; unsigned int x3; void *x4; unsigned int x5; struct AudioStreamPacketDescription {} *x6; unsigned int x7; }*)arg1 packetCount:(unsigned int)arg2 isSilence:(bool)arg3;
- (long long)_findSilencePacketOffset:(struct AudioQueueBuffer { unsigned int x1; void *x2; unsigned int x3; void *x4; unsigned int x5; struct AudioStreamPacketDescription {} *x6; unsigned int x7; }*)arg1 packetCount:(unsigned int)arg2 silentSamplesMin:(long long)arg3 zeroOffsetOnly:(bool)arg4;
- (bool)_isSilenceOnlyInBuffer:(struct AudioQueueBuffer { unsigned int x1; void *x2; unsigned int x3; void *x4; unsigned int x5; struct AudioStreamPacketDescription {} *x6; unsigned int x7; }*)arg1 packetCount:(unsigned int)arg2;
- (void)_pauseSpeechRecognition;
- (void)_saveAudioBuffer:(id)arg1;
- (void)_saveTranscribedText:(id)arg1 withTimeStamp:(id)arg2;
- (id)appID;
- (id)appName;
- (long long)audioBuffersAppendedCount;
- (id)audioFile;
- (struct OpaqueAudioQueue { }*)audioQueue;
- (id)bufferLogTime;
- (int)bufferState;
- (void)cleanup;
- (bool)createAudioBuffersWithBufferByteSize:(unsigned int)arg1 error:(id*)arg2;
- (id)delegate;
- (id)filePath;
- (void)handleAudioBuffer:(struct AudioQueueBuffer { unsigned int x1; void *x2; unsigned int x3; void *x4; unsigned int x5; struct AudioStreamPacketDescription {} *x6; unsigned int x7; }*)arg1 audioQueue:(struct OpaqueAudioQueue { }*)arg2 timestamp:(const struct AudioTimeStamp { double x1; unsigned long long x2; double x3; unsigned long long x4; struct SMPTETime { short x_5_1_1; short x_5_1_2; unsigned int x_5_1_3; unsigned int x_5_1_4; unsigned int x_5_1_5; short x_5_1_6; short x_5_1_7; short x_5_1_8; short x_5_1_9; } x5; unsigned int x6; unsigned int x7; }*)arg3 packetCount:(unsigned int)arg4 packetDesc:(const struct AudioStreamPacketDescription { long long x1; unsigned int x2; unsigned int x3; }*)arg5;
- (id)initWithPID:(int)arg1 appID:(id)arg2 appName:(id)arg3 delegate:(id)arg4;
- (int)pid;
- (id)saveQueue;
- (id)sessionStartTime;
- (void)setAppID:(id)arg1;
- (void)setAppName:(id)arg1;
- (void)setAudioBuffersAppendedCount:(long long)arg1;
- (void)setAudioFile:(id)arg1;
- (void)setAudioQueue:(struct OpaqueAudioQueue { }*)arg1;
- (void)setBufferLogTime:(id)arg1;
- (void)setBufferState:(int)arg1;
- (void)setDelegate:(id)arg1;
- (void)setFilePath:(id)arg1;
- (void)setPid:(int)arg1;
- (void)setSaveQueue:(id)arg1;
- (void)setSessionStartTime:(id)arg1;
- (void)setSilentBuffersCount:(long long)arg1;
- (void)setSilentSamplesTailCount:(long long)arg1;
- (void)setTapFormat:(id)arg1;
- (void)setTextFile:(id)arg1;
- (void)setTextFileName:(id)arg1;
- (void)setTextLogTime:(id)arg1;
- (void)setTranscriber:(id)arg1;
- (void)setupTranscriberIfNeeded;
- (long long)silentBuffersCount;
- (long long)silentSamplesTailCount;
- (id)tapFormat;
- (id)textFile;
- (id)textFileName;
- (id)textLogTime;
- (id)transcriber;

@end
