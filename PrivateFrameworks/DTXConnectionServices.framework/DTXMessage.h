
@interface DTXMessage : NSObject {
    void * _auxiliary;
    NSDictionary * _auxiliaryPromoted;
    unsigned int  _channelCode;
    int  _compressionType;
    unsigned int  _conversationIndex;
    unsigned long long  _cost;
    bool  _deserialized;
    bool  _expectsReply;
    unsigned int  _identifier;
    _Atomic bool  _immutable;
    unsigned int  _messageType;
    NSData * _payloadData;
    <NSSecureCoding><NSObject> * _payloadObject;
    NSData * _serializedData;
    unsigned int  _status;
}

@property (nonatomic) unsigned int channelCode;
@property (nonatomic) unsigned int conversationIndex;
@property (nonatomic, readonly) unsigned long long cost;
@property (nonatomic, readonly) NSData *data;
@property (nonatomic, readonly) bool deserialized;
@property (nonatomic, retain) NSError *error;
@property (nonatomic) unsigned int errorStatus;
@property (nonatomic) bool expectsReply;
@property (nonatomic) unsigned int identifier;
@property (nonatomic, readonly) bool isBarrier;
@property (nonatomic, readonly) bool isDispatch;
@property (nonatomic) unsigned int messageType;
@property (nonatomic, readonly) <NSSecureCoding><NSObject> *object;
@property (nonatomic, copy) <NSSecureCoding><NSObject> *payloadObject;
@property (nonatomic, readonly) unsigned long long serializedLength;

+ (id)defaultAllowedSecureCodingClasses;
+ (bool)extractSerializedCompressionInfoFromBuffer:(const char *)arg1 length:(unsigned long long)arg2 compressionType:(int*)arg3 uncompressedLength:(unsigned long long*)arg4 compressedDataOffset:(unsigned long long*)arg5;
+ (void)initialize;
+ (id)message;
+ (id)messageReferencingBuffer:(const void*)arg1 length:(unsigned long long)arg2 destructor:(id /* block */)arg3;
+ (id)messageWithBuffer:(const void*)arg1 length:(unsigned long long)arg2;
+ (id)messageWithData:(id)arg1;
+ (id)messageWithError:(id)arg1;
+ (id)messageWithObject:(id)arg1;
+ (id)messageWithPrimitive:(void*)arg1;
+ (id)messageWithSelector:(SEL)arg1 arguments:(id)arg2;
+ (id)messageWithSelector:(SEL)arg1 objectArguments:(id)arg2;
+ (id)messageWithSelector:(SEL)arg1 typesAndArguments:(unsigned int)arg2;
+ (void)setReportCompressionBlock:(id /* block */)arg1;

- (void).cxx_destruct;
- (void)_appendTypesAndValues:(unsigned int)arg1 withKey:(id)arg2 list:(char *)arg3;
- (id)_decompressedData:(id)arg1 compressor:(id)arg2 compressionType:(int)arg3;
- (id)_faultAuxiliaryValueOfType:(Class)arg1 forKey:(id)arg2;
- (id)_initWithReferencedSerializedForm:(id)arg1 compressor:(id)arg2 payloadSet:(id /* block */)arg3;
- (void)_makeBarrier;
- (void)_makeImmutable;
- (id)_mutableAuxiliaryDictionary;
- (void)_setPayloadBuffer:(const char *)arg1 length:(unsigned long long)arg2 shouldCopy:(bool)arg3 destructor:(id /* block */)arg4;
- (void)_willModifyAuxiliary;
- (unsigned int)channelCode;
- (void)compressWithCompressor:(id)arg1 usingType:(int)arg2 forCompatibilityWithVersion:(long long)arg3;
- (unsigned int)conversationIndex;
- (unsigned long long)cost;
- (id)data;
- (id)dataForMessageKey:(id)arg1;
- (void)dealloc;
- (id)description;
- (id)descriptionWithRoutingInformation:(struct DTXMessageRoutingInfo { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4 : 1; unsigned int x5 : 31; })arg1;
- (bool)deserialized;
- (id)error;
- (unsigned int)errorStatus;
- (bool)expectsReply;
- (const void*)getBufferWithReturnedLength:(unsigned long long*)arg1;
- (unsigned int)identifier;
- (id)initWithInvocation:(id)arg1;
- (id)initWithSelector:(SEL)arg1 firstArg:(id)arg2 remainingObjectArgs:(char *)arg3;
- (id)initWithSelector:(SEL)arg1 objects:(id)arg2;
- (id)initWithSerializedForm:(id)arg1 compressor:(id)arg2;
- (id)initWithSerializedForm:(const char *)arg1 length:(unsigned long long)arg2 destructor:(id /* block */)arg3 compressor:(id)arg4;
- (long long)integerForMessageKey:(id)arg1;
- (void)invokeWithTarget:(id)arg1 replyChannel:(id)arg2 validator:(id /* block */)arg3;
- (bool)isBarrier;
- (bool)isDispatch;
- (unsigned int)messageType;
- (id)newReply;
- (id)newReplyReferencingBuffer:(const void*)arg1 length:(unsigned long long)arg2 destructor:(id /* block */)arg3;
- (id)newReplyWithError:(id)arg1;
- (id)newReplyWithMessage:(id)arg1;
- (id)newReplyWithObject:(id)arg1;
- (id)object;
- (id)objectWithAllowedClasses:(id)arg1;
- (id)payloadObject;
- (void)serializedFormApply:(id /* block */)arg1;
- (unsigned long long)serializedLength;
- (void)setChannelCode:(unsigned int)arg1;
- (void)setConversationIndex:(unsigned int)arg1;
- (void)setData:(id)arg1 forMessageKey:(id)arg2;
- (void)setError:(id)arg1;
- (void)setErrorStatus:(unsigned int)arg1;
- (void)setExpectsReply:(bool)arg1;
- (void)setIdentifier:(unsigned int)arg1;
- (void)setInteger:(long long)arg1 forMessageKey:(id)arg2;
- (void)setMessageType:(unsigned int)arg1;
- (void)setObject:(id)arg1 forMessageKey:(id)arg2;
- (void)setPayloadObject:(id)arg1;
- (void)setString:(id)arg1 forMessageKey:(id)arg2;
- (bool)shouldInvokeWithTarget:(id)arg1;
- (id)stringForMessageKey:(id)arg1;
- (id)valueForMessageKey:(id)arg1;

@end
