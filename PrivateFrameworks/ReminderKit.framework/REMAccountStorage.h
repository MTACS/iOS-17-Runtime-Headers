
@interface REMAccountStorage : NSObject <NSCopying, NSSecureCoding, REMExternalSyncMetadataWritableProviding, REMObjectIDProviding, REMObjectStorageSupportedVersionProviding> {
    REMAccountTypeHost * _accountTypeHost;
    unsigned long long  _copyGeneration;
    bool  _daAllowsCalendarAddDeleteModify;
    NSString * _daConstraintsDescriptionPath;
    bool  _daSupportsSharedCalendars;
    bool  _daWasMigrated;
    bool  _debugSyncDisabled;
    bool  _didChooseToMigrate;
    bool  _didChooseToMigrateLocally;
    bool  _didFinishMigration;
    bool  _inactive;
    bool  _isAddingExtraPrimaryCKAccountForTesting;
    REMCRMergeableOrderedSet * _listIDsMergeableOrdering;
    NSData * _listIDsMergeableOrderingData;
    NSSet * _listIDsToUndelete;
    bool  _listsDADisplayOrderChanged;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    bool  _markedForRemoval;
    NSString * _name;
    REMObjectID * _objectID;
    long long  _persistenceCloudSchemaVersion;
    NSString * _personID;
    NSData * _personIDSalt;
    REMManualOrdering * _pinnedListsManualOrdering;
    REMResolutionTokenMap * _resolutionTokenMap;
    NSData * _resolutionTokenMapData;
    NSSet * _smartListIDsToUndelete;
    unsigned long long  _storeGeneration;
    REMManualOrdering * _templatesManualOrdering;
    long long  _type;
    NSString * daPushKey;
    NSString * daSyncToken;
    long long  effectiveMinimumSupportedVersion;
    NSString * externalIdentifier;
    NSString * externalModificationTag;
    long long  minimumSupportedVersion;
}

@property (nonatomic) bool daAllowsCalendarAddDeleteModify;
@property (nonatomic, copy) NSString *daConstraintsDescriptionPath;
@property (nonatomic, copy) NSString *daPushKey;
@property (nonatomic) bool daSupportsSharedCalendars;
@property (nonatomic, copy) NSString *daSyncToken;
@property (nonatomic) bool daWasMigrated;
@property (nonatomic) bool debugSyncDisabled;
@property (nonatomic) bool didChooseToMigrate;
@property (nonatomic) bool didChooseToMigrateLocally;
@property (nonatomic) bool didFinishMigration;
@property (nonatomic, readonly) NSString *displayName;
@property (nonatomic, readonly) long long effectiveMinimumSupportedVersion;
@property (nonatomic, copy) NSString *externalIdentifier;
@property (nonatomic, copy) NSString *externalModificationTag;
@property (nonatomic) bool inactive;
@property (nonatomic, retain) REMCRMergeableOrderedSet *listIDsMergeableOrdering;
@property (nonatomic, retain) NSData *listIDsMergeableOrderingData;
@property (nonatomic, retain) NSSet *listIDsToUndelete;
@property (nonatomic) bool listsDADisplayOrderChanged;
@property (nonatomic) bool markedForRemoval;
@property (nonatomic, readonly) long long minimumSupportedVersion;
@property (nonatomic, retain) NSString *name;
@property (nonatomic, retain) REMObjectID *objectID;
@property (nonatomic) long long persistenceCloudSchemaVersion;
@property (nonatomic, copy) NSString *personID;
@property (nonatomic, copy) NSData *personIDSalt;
@property (nonatomic, retain) REMManualOrdering *pinnedListsManualOrdering;
@property (nonatomic, readonly) REMObjectID *remObjectID;
@property (nonatomic, retain) REMResolutionTokenMap *resolutionTokenMap;
@property (nonatomic, retain) NSData *resolutionTokenMapData;
@property (nonatomic, retain) NSSet *smartListIDsToUndelete;
@property (nonatomic, retain) REMManualOrdering *templatesManualOrdering;
@property (nonatomic) long long type;

+ (id)cdEntityName;
+ (id)listIDsMergeableOrderingReplicaIDSourceWithAccountID:(id)arg1;
+ (id)newObjectID;
+ (id)objectIDWithUUID:(id)arg1;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (bool)_isAddingExtraPrimaryCKAccountForTesting;
- (void)_setIsAddingExtraPrimaryCKAccountForTesting:(bool)arg1;
- (id)accountTypeHost;
- (id)cdKeyToStorageKeyMap;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (bool)daAllowsCalendarAddDeleteModify;
- (id)daConstraintsDescriptionPath;
- (id)daPushKey;
- (bool)daSupportsSharedCalendars;
- (id)daSyncToken;
- (bool)daWasMigrated;
- (id)debugDescription;
- (bool)debugSyncDisabled;
- (id)description;
- (bool)didChooseToMigrate;
- (bool)didChooseToMigrateLocally;
- (bool)didFinishMigration;
- (id)displayName;
- (long long)effectiveMinimumSupportedVersion;
- (void)encodeWithCoder:(id)arg1;
- (id)externalIdentifier;
- (id)externalModificationTag;
- (bool)hasDeserializedListIDsMergeableOrdering;
- (unsigned long long)hash;
- (bool)inactive;
- (id)initWithCoder:(id)arg1;
- (id)initWithObjectID:(id)arg1 type:(long long)arg2 name:(id)arg3;
- (id)initWithObjectID:(id)arg1 type:(long long)arg2 name:(id)arg3 listIDsMergeableOrdering:(id)arg4;
- (id)initWithObjectID:(id)arg1 type:(long long)arg2 name:(id)arg3 nullableListIDsMergeableOrdering:(id)arg4;
- (bool)isEqual:(id)arg1;
- (bool)isUnsupported;
- (id)listIDsMergeableOrdering;
- (id)listIDsMergeableOrderingData;
- (id)listIDsMergeableOrderingReplicaIDSource;
- (id)listIDsToUndelete;
- (bool)listsDADisplayOrderChanged;
- (bool)markedForRemoval;
- (long long)minimumSupportedVersion;
- (id)name;
- (id)objectID;
- (id)optionalObjectID;
- (long long)persistenceCloudSchemaVersion;
- (id)personID;
- (id)personIDSalt;
- (id)pinnedListsManualOrdering;
- (id)remObjectID;
- (id)resolutionTokenMap;
- (id)resolutionTokenMapData;
- (id)serializedListIDsMergeableOrdering;
- (void)setDaAllowsCalendarAddDeleteModify:(bool)arg1;
- (void)setDaConstraintsDescriptionPath:(id)arg1;
- (void)setDaPushKey:(id)arg1;
- (void)setDaSupportsSharedCalendars:(bool)arg1;
- (void)setDaSyncToken:(id)arg1;
- (void)setDaWasMigrated:(bool)arg1;
- (void)setDebugSyncDisabled:(bool)arg1;
- (void)setDidChooseToMigrate:(bool)arg1;
- (void)setDidChooseToMigrateLocally:(bool)arg1;
- (void)setDidFinishMigration:(bool)arg1;
- (void)setEffectiveMinimumSupportedVersion:(long long)arg1;
- (void)setExternalIdentifier:(id)arg1;
- (void)setExternalModificationTag:(id)arg1;
- (void)setInactive:(bool)arg1;
- (void)setListIDsMergeableOrdering:(id)arg1;
- (void)setListIDsMergeableOrderingData:(id)arg1;
- (void)setListIDsToUndelete:(id)arg1;
- (void)setListsDADisplayOrderChanged:(bool)arg1;
- (void)setMarkedForRemoval:(bool)arg1;
- (void)setMinimumSupportedVersion:(long long)arg1;
- (void)setName:(id)arg1;
- (void)setObjectID:(id)arg1;
- (void)setPersistenceCloudSchemaVersion:(long long)arg1;
- (void)setPersonID:(id)arg1;
- (void)setPersonIDSalt:(id)arg1;
- (void)setPinnedListsManualOrdering:(id)arg1;
- (void)setResolutionTokenMap:(id)arg1;
- (void)setResolutionTokenMapData:(id)arg1;
- (void)setSmartListIDsToUndelete:(id)arg1;
- (void)setStoreGenerationIfNeeded:(unsigned long long)arg1;
- (void)setTemplatesManualOrdering:(id)arg1;
- (void)setType:(long long)arg1;
- (id)smartListIDsToUndelete;
- (unsigned long long)storeGeneration;
- (id)templatesManualOrdering;
- (long long)type;

@end
