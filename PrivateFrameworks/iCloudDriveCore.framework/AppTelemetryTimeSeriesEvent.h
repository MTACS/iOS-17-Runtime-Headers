
@interface AppTelemetryTimeSeriesEvent : PBCodable <NSCopying, PQLValuable> {
    struct { 
        unsigned int magnitudeDouble : 1; 
        unsigned int magnitudeLong : 1; 
        unsigned int timestamp : 1; 
        unsigned int magnitude : 1; 
        unsigned int magnitudeFloat : 1; 
        unsigned int magnitudeInt : 1; 
        unsigned int magnitudeBool : 1; 
    }  _has;
    unsigned int  _identifier;
    AppTelemetryInvestigation * _investigation;
    int  _magnitude;
    bool  _magnitudeBool;
    double  _magnitudeDouble;
    float  _magnitudeFloat;
    int  _magnitudeInt;
    long long  _magnitudeLong;
    unsigned long long  _timestamp;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) bool hasInvestigation;
@property (nonatomic) bool hasMagnitude;
@property (nonatomic) bool hasMagnitudeBool;
@property (nonatomic) bool hasMagnitudeDouble;
@property (nonatomic) bool hasMagnitudeFloat;
@property (nonatomic) bool hasMagnitudeInt;
@property (nonatomic) bool hasMagnitudeLong;
@property (nonatomic) bool hasTimestamp;
@property (readonly) unsigned long long hash;
@property (nonatomic) unsigned int identifier;
@property (nonatomic, retain) AppTelemetryInvestigation *investigation;
@property (nonatomic) int magnitude;
@property (nonatomic) bool magnitudeBool;
@property (nonatomic) double magnitudeDouble;
@property (nonatomic) float magnitudeFloat;
@property (nonatomic) int magnitudeInt;
@property (nonatomic) long long magnitudeLong;
@property (readonly) Class superclass;
@property (nonatomic) unsigned long long timestamp;

+ (id)newBoolEvent:(int)arg1 eventGroupUUID:(id)arg2 value:(bool)arg3;
+ (id)newCADownloadErrorCountEventWithCount:(int)arg1;
+ (id)newCADownloadErrorEventWithError:(id)arg1 pcsChained:(bool)arg2 sharedZone:(bool)arg3 count:(int)arg4;
+ (id)newCASyncDownErrorCountEventWithCount:(int)arg1;
+ (id)newCASyncDownErrorEventWithError:(id)arg1 pcsChained:(bool)arg2 zoneMangledID:(id)arg3;
+ (id)newCASyncUpItemErrorCountEventWithCount:(int)arg1;
+ (id)newCASyncUpItemErrorEventWithError:(id)arg1 pcsChained:(bool)arg2 sharedZone:(bool)arg3 count:(int)arg4;
+ (id)newCASyncUpZoneErrorCountEventWithCount:(int)arg1;
+ (id)newCASyncUpZoneErrorEventWithError:(id)arg1 pcsChained:(bool)arg2 zoneMangledID:(id)arg3;
+ (id)newCATotalErrorCountEventWithCount:(int)arg1;
+ (id)newCAUploadErrorCountEventWithCount:(int)arg1;
+ (id)newCAUploadErrorEventWithError:(id)arg1 pcsChained:(bool)arg2 sharedZone:(bool)arg3 count:(int)arg4;
+ (id)newChainedDirectoryMissingChainPCSEventWithZoneMangledID:(id)arg1 itemIDString:(id)arg2;
+ (id)newChildCountMismatchEventWithZoneMangledID:(id)arg1 itemIDString:(id)arg2 magnitude:(int)arg3;
+ (id)newCiconiaReportEvent:(unsigned long long)arg1 state:(int)arg2;
+ (id)newConsistencyCheckerFailedEvent;
+ (id)newCorruptPackageDownloadEventWithZoneMangledID:(id)arg1 error:(id)arg2 itemIDString:(id)arg3;
+ (id)newDBResetEventWithError:(id)arg1 description:(id)arg2;
+ (id)newDeepScanEventWithReason:(id)arg1 appLibrary:(id)arg2;
+ (id)newDoubleEvent:(int)arg1 eventGroupUUID:(id)arg2 value:(double)arg3;
+ (id)newDroppedEventWithCount:(unsigned int)arg1;
+ (id)newFSEventToSyncUpEventWithDuration:(double)arg1;
+ (id)newFileBouncedManyTimes;
+ (id)newFileChecksumMismatchEventWithZoneMangledID:(id)arg1 itemIDString:(id)arg2;
+ (id)newFileReadErrorWithError:(id)arg1 zoneMangledID:(id)arg2 itemIDString:(id)arg3;
+ (id)newFolderSharePCSChainingEventWithTime:(double)arg1 zoneMangledID:(id)arg2 itemIDString:(id)arg3 error:(id)arg4 errorDescription:(id)arg5;
+ (id)newFolderSharingCountMismatchEventWithCount:(int)arg1 zoneMangledID:(id)arg2;
+ (id)newFromSqliteStatement:(struct sqlite3_stmt { }*)arg1 atIndex:(int)arg2;
+ (id)newFromSqliteValue:(struct sqlite3_value { }*)arg1;
+ (id)newFullyConsistentEvent;
+ (id)newIntEvent:(int)arg1 eventGroupUUID:(id)arg2 value:(int)arg3;
+ (id)newLongEvent:(int)arg1 eventGroupUUID:(id)arg2 value:(long long)arg3;
+ (id)newLongEvent:(int)arg1 eventGroupUUID:(id)arg2 value:(long long)arg3 round:(bool)arg4;
+ (id)newMissingApplyJobEventWithNumberMissing:(unsigned int)arg1;
+ (id)newMissingAssetContentEventWithRecordID:(id)arg1;
+ (id)newMissingDownloaderJobEventWithNumberMissing:(unsigned int)arg1;
+ (id)newMissingPushEventWithNumberOutOfSync:(unsigned int)arg1;
+ (id)newMissingReaderJobEventWithNumberMissing:(unsigned int)arg1;
+ (id)newMissingShareAliasEventWithZoneMangledID:(id)arg1 itemIDString:(id)arg2;
+ (id)newMissingSyncUpJobEventWithNumberMissing:(unsigned int)arg1;
+ (id)newMissingUploaderJobEventWithNumberMissing:(unsigned int)arg1;
+ (id)newNSErrorEvent:(int)arg1 eventGroupUUID:(id)arg2 value:(id)arg3;
+ (id)newNonMigratedItemEvent:(id)arg1 foundInfo:(id)arg2;
+ (id)newOperationTimedOutEventWithTime:(double)arg1 type:(id)arg2 nonDiscretionary:(bool)arg3 hasForegroundClients:(bool)arg4;
+ (id)newPackageChecksumMismatchEventWithZoneMangledID:(id)arg1 itemIDString:(id)arg2;
+ (id)newPermanentlyInconsistentEventWithZoneMangledID:(id)arg1;
+ (id)newQBSDirFaultsCountEvent:(unsigned long long)arg1 serverTruthDirFaultCount:(unsigned long long)arg2 serverTruthDirCount:(unsigned long long)arg3 timeSinceLogin:(unsigned long long)arg4 serverTruthTotalItemsCount:(unsigned long long)arg5 zonesNeverFullSync:(unsigned long long)arg6;
+ (id)newQBSOperationPrformanceEventWithTime:(double)arg1 type:(id)arg2 recordsFetched:(unsigned long long)arg3 recordsFetchedTotalMetadataSize:(unsigned long long)arg4 xattrsFetchedTotalSize:(unsigned long long)arg5;
+ (id)newRecursiveItemCountMismatchEventWithZoneMangledID:(id)arg1 itemIDString:(id)arg2 magnitude:(int)arg3;
+ (id)newShareAcceptationEventWithLastStep:(id)arg1 zoneMangledID:(id)arg2 itemIDString:(id)arg3 error:(id)arg4;
+ (id)newShareAliasCountMismatchEventWithZoneMangledID:(id)arg1 itemIDString:(id)arg2 magnitude:(int)arg3;
+ (id)newShareAliasInSharedFolderEventWithZoneMangledID:(id)arg1;
+ (id)newShareCountMismatchEventWithZoneMangledID:(id)arg1 itemIDString:(id)arg2 magnitude:(int)arg3;
+ (id)newSyncBoostingProblemCountWithProblemCount:(int)arg1;
+ (id)newSyncUpBackoffDelaySummaryEventWithNumberOfFailedZones:(unsigned int)arg1;
+ (id)newSyncUpBackoffRatioSummaryEventWithNumberOfFailedZones:(unsigned int)arg1;
+ (id)newTelemetryEventInZoneWithMangledID:(id)arg1;
+ (id)newTelemetryEventInZoneWithMangledID:(id)arg1 fromError:(id)arg2 errorDescription:(id)arg3 itemIDString:(id)arg4;
+ (id)newTestMetricEventWithMagnitude:(unsigned int)arg1;
+ (id)newTimestampEvent:(int)arg1 eventGroupUUID:(id)arg2 value:(unsigned long long)arg3;
+ (id)newUserDownloadEventWithDuration:(double)arg1;
+ (id)newZoneResetEventWithZoneMangledID:(id)arg1 lastSyncDate:(id)arg2 error:(id)arg3 errorDescription:(id)arg4;

- (void).cxx_destruct;
- (int)StringAsMagnitude:(id)arg1;
- (void)clearOneofValuesForMagnitude;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (bool)hasInvestigation;
- (bool)hasMagnitude;
- (bool)hasMagnitudeBool;
- (bool)hasMagnitudeDouble;
- (bool)hasMagnitudeFloat;
- (bool)hasMagnitudeInt;
- (bool)hasMagnitudeLong;
- (bool)hasTimestamp;
- (unsigned long long)hash;
- (unsigned int)identifier;
- (id)investigation;
- (bool)isEqual:(id)arg1;
- (int)magnitude;
- (id)magnitudeAsString:(int)arg1;
- (bool)magnitudeBool;
- (double)magnitudeDouble;
- (float)magnitudeFloat;
- (int)magnitudeInt;
- (long long)magnitudeLong;
- (void)mergeFrom:(id)arg1;
- (bool)readFrom:(id)arg1;
- (void)setHasMagnitude:(bool)arg1;
- (void)setHasMagnitudeBool:(bool)arg1;
- (void)setHasMagnitudeDouble:(bool)arg1;
- (void)setHasMagnitudeFloat:(bool)arg1;
- (void)setHasMagnitudeInt:(bool)arg1;
- (void)setHasMagnitudeLong:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setIdentifier:(unsigned int)arg1;
- (void)setInvestigation:(id)arg1;
- (void)setMagnitude:(int)arg1;
- (void)setMagnitudeBool:(bool)arg1;
- (void)setMagnitudeDouble:(double)arg1;
- (void)setMagnitudeFloat:(float)arg1;
- (void)setMagnitudeInt:(int)arg1;
- (void)setMagnitudeLong:(long long)arg1;
- (void)setTimestamp:(unsigned long long)arg1;
- (void)sqliteBind:(struct sqlite3_stmt { }*)arg1 index:(int)arg2;
- (unsigned long long)timestamp;
- (void)writeTo:(id)arg1;

@end
