
@interface SYDClientToDaemonConnection : SYDRemotePreferencesSource <SYDClientProtocol> {
    NSObject<OS_dispatch_queue> * _analyticsQueue;
    NSLock * _cacheLock;
    NSMutableDictionary * _cachedObjects;
    NSObject<OS_dispatch_queue> * _callbackQueue;
    int  _daemonWakeNotifyToken;
    bool  _didLogFaultForEntitlements;
    bool  _hasFullCachedDictionary;
    bool  _needsChangeDictionaryFromDaemon;
    NSObject<OS_dispatch_queue> * _queue;
    SYDStoreConfiguration * _storeConfiguration;
    unsigned long long  _syncingWithCloudCounter;
    NSXPCConnection * _xpcConnection;
}

@property (nonatomic, retain) NSObject<OS_dispatch_queue> *analyticsQueue;
@property (nonatomic, retain) NSLock *cacheLock;
@property (nonatomic, retain) NSMutableDictionary *cachedObjects;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *callbackQueue;
@property (nonatomic) int daemonWakeNotifyToken;
@property (nonatomic) bool didLogFaultForEntitlements;
@property (nonatomic) bool hasFullCachedDictionary;
@property (nonatomic, readonly) bool isSyncingWithCloud;
@property bool needsChangeDictionaryFromDaemon;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, retain) SYDStoreConfiguration *storeConfiguration;
@property (nonatomic, readonly) NSString *storeIdentifier;
@property (nonatomic, readonly) long long storeType;
@property unsigned long long syncingWithCloudCounter;
@property (nonatomic, retain) NSXPCConnection *xpcConnection;

+ (id)allStoreIdentifiersWithError:(id*)arg1;
+ (id)clientProtocolInterface;
+ (id)daemonProtocolInterface;
+ (id)defaultStoreIdentifierForCurrentProcessWithApplicationIdentifier:(id)arg1;
+ (id)disgustingUglyHardcodedKnownStoreIdentifierForApplicationIdentifier:(id)arg1;
+ (bool)hasPerformedAppLaunchSyncForStoreIdentifier:(id)arg1;
+ (bool)isCloudSyncUserDefaultEnabledForStoreIdentifier:(id)arg1;
+ (id)machServiceName;
+ (id)machServiceNameUsingTestServer:(bool)arg1;
+ (id)newXPCConnection;
+ (void)processAccountChangesWithCompletionHandler:(id /* block */)arg1;
+ (void)setCloudSyncUserDefaultEnabled:(bool)arg1 storeIdentifier:(id)arg2;
+ (void)setHasPerformedAppLaunchSyncForStoreIdentifier:(id)arg1;
+ (void)setShouldSyncOnFirstInitializationOverride:(id)arg1;
+ (id)shouldSyncOnFirstInitializationOverride;
+ (void)synchronizeStoresWithIdentifiers:(id)arg1 type:(long long)arg2 completionHandler:(id /* block */)arg3;

- (void).cxx_destruct;
- (void)___For_some_reason_NSUbiquitousKeyValueStore_thinks_you_dont_exist___;
- (void)___NSUbiquitousKeyValueStore_isnt_sure_exactly_what_you_did_but_it_was_invalid___:(id)arg1;
- (void)___Tried_to_set_invalid_object_in_NSUbiquitousKeyValueStore___:(id)arg1;
- (void)___We_looked_everywhere_but_we_cant_find_your_store_identifier___;
- (void)___You_are_about_to_lose_data_in_NSUbiquitousKeyValueStore___;
- (void)___You_are_not_entitled_for_NSUbiquitousKeyValueStore___;
- (void)___You_exceeded_the_quota_limit_for_NSUbiquitousKeyValueStore___;
- (void)___You_think_you_can_just_XPC_into_any_process_all_willy_nilly_well_think_again___;
- (void)___Your_store_identifier_is_empty___;
- (void)_clearCachedObjects;
- (void)_handleCacheErrorForKey:(id)arg1;
- (id)analyticsQueue;
- (void)applicationWillEnterForeground;
- (id)asyncDaemonWithErrorHandler:(id /* block */)arg1;
- (id)cacheLock;
- (id)cachedObjects;
- (id)callbackQueue;
- (id)changeToken;
- (struct __CFDictionary { }*)copyDictionary;
- (id)copyDictionaryWithoutNullValues:(id)arg1;
- (id)copyExternalChangesWithChangeCount:(long long*)arg1;
- (void)daemonDidWake;
- (int)daemonWakeNotifyToken;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (id)dictionaryRepresentationWithError:(id*)arg1;
- (bool)didLogFaultForEntitlements;
- (void)discardExternalChangesForChangeCount:(long long)arg1;
- (void*)getValueForKey:(struct __CFString { }*)arg1;
- (unsigned char)hasExternalChanges;
- (bool)hasFullCachedDictionary;
- (id)init;
- (id)initWithStoreConfiguration:(id)arg1;
- (id)initWithStoreIdentifier:(id)arg1 type:(long long)arg2;
- (bool)isSyncingWithCloud;
- (void)logFaultIfNecessaryForError:(id)arg1;
- (id)machServiceName;
- (bool)needsChangeDictionaryFromDaemon;
- (id)objectForKey:(id)arg1;
- (id)objectForKey:(id)arg1 error:(id*)arg2;
- (void)performOpportunisticAppLaunchSyncIfNecessary;
- (void)ping;
- (void)processChangeDictionary:(id)arg1;
- (id)queue;
- (void)registerForApplicationLifecycleEvents;
- (void)registerForDaemonDidWakeNotifications;
- (void)registerForSynchronizedDefaults;
- (void)removeObjectForKey:(id)arg1;
- (bool)removeObjectForKey:(id)arg1 error:(id*)arg2;
- (void)scheduleRemoteSynchronization;
- (void)setAnalyticsQueue:(id)arg1;
- (void)setCacheLock:(id)arg1;
- (void)setCachedObjects:(id)arg1;
- (void)setCallbackQueue:(id)arg1;
- (void)setChangeToken:(id)arg1;
- (void)setDaemonWakeNotifyToken:(int)arg1;
- (void)setDefaultsConfiguration:(id)arg1;
- (void)setDidLogFaultForEntitlements:(bool)arg1;
- (void)setHasFullCachedDictionary:(bool)arg1;
- (void)setNeedsChangeDictionaryFromDaemon:(bool)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (bool)setObject:(id)arg1 forKey:(id)arg2 error:(id*)arg3;
- (void)setQueue:(id)arg1;
- (void)setStoreConfiguration:(id)arg1;
- (void)setSyncingWithCloudCounter:(unsigned long long)arg1;
- (void)setValue:(void*)arg1 forKey:(struct __CFString { }*)arg2;
- (void)setXpcConnection:(id)arg1;
- (id)storeConfiguration;
- (void)storeDidChangeWithStoreID:(id)arg1 changeDictionary:(id)arg2 reply:(id /* block */)arg3;
- (id)storeIdentifier;
- (long long)storeType;
- (void)synchronizationWithCompletionHandler:(id /* block */)arg1;
- (unsigned char)synchronize;
- (unsigned char)synchronizeForced:(unsigned char)arg1;
- (id)synchronousDaemonWithErrorHandler:(id /* block */)arg1;
- (unsigned long long)syncingWithCloudCounter;
- (void)unregisterForSynchronizedDefaults;
- (void)updateConfiguration;
- (bool)validateKey:(id)arg1 error:(id*)arg2;
- (id)xpcConnection;

@end
