
@interface SBAlertItemsController : NSObject <BSDescriptionProviding> {
    NSMutableSet * _activePresenters;
    NSMutableOrderedSet * _alertItemPresentations;
    SBAlertItemsObjectQueue * _alertItemsQueue;
    bool  _delayProcessingQueue;
    NSMutableSet * _forceAlertsToPendReasons;
    bool  _inUILockedMode;
    bool  _isProcessingQueue;
    <SBAlertItemPresenter><SBLockScreenActionProvider> * _lockScreenModalAlertItemPresenter;
    <SBAlertItemPresenter> * _lockScreenNotificationsAlertItemPresenter;
    NSHashTable * _observers;
    NSMutableSet * _pendedAlertsToReenqueuePostDismissal;
    <BSInvalidatable> * _stateCaptureBlock;
    NSMutableOrderedSet * _superModalAlertItemPresentations;
    SBAlertItemsObjectQueue * _superModalItemsQueue;
    bool  _suppressAlertsForKeynote;
    NSMapTable * _suppressionAssertionReasons;
    <SBAlertItemPresenter> * _systemApertureAlertItemPresenter;
    SBModalAlertPresenter * _systemModalAlertPresenter;
    <BSInvalidatable> * _systemModalAlertVisibleAssertion;
    <SBAlertItemPresenter> * _unlockedAlertItemPresenter;
    SBUserSessionController * _userSessionController;
    SBWindowSceneManager * _windowSceneManager;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) <SBAlertItemPresenter><SBLockScreenActionProvider> *lockScreenModalAlertItemPresenter;
@property (nonatomic, retain) <SBAlertItemPresenter> *lockScreenNotificationsAlertItemPresenter;
@property (readonly) Class superclass;
@property (nonatomic, retain) <SBAlertItemPresenter> *systemApertureAlertItemPresenter;
@property (getter=_systemModalAlertPresenter, setter=_setSystemModalAlertPresenter:, nonatomic, retain) SBModalAlertPresenter *systemModalAlertPresenter;
@property (nonatomic, retain) <SBAlertItemPresenter> *unlockedAlertItemPresenter;
@property (nonatomic) SBWindowSceneManager *windowSceneManager;

+ (id)sharedInstance;

- (void).cxx_destruct;
- (void)_activeCallStateDidChange:(id)arg1;
- (id)_activePresenterForAlertItem:(id)arg1;
- (void)_buddyDidExit;
- (void)_clearAllQueuedAlertItems;
- (void)_deactivateAlertItem:(id)arg1 reason:(int)arg2 animated:(bool)arg3;
- (void)_deactivateAlertItem:(id)arg1 reason:(int)arg2 animated:(bool)arg3 alertDismissCompletion:(id /* block */)arg4;
- (void)_dismissAlertItem:(id)arg1 fromPresenter:(id)arg2 forReason:(int)arg3 animated:(bool)arg4 completion:(id /* block */)arg5;
- (void)_enumeratePresentationsWithType:(unsigned long long)arg1 usingBlock:(id /* block */)arg2;
- (void)_enumerateWithDirection:(unsigned long long)arg1 presentationsWithType:(unsigned long long)arg2 usingBlock:(id /* block */)arg3;
- (bool)_hasActivePresentationsThatPresentModally;
- (bool)_hasPresentationForPresenter:(id)arg1;
- (bool)_hasVisibleModalAlertOfType:(unsigned long long)arg1;
- (bool)_hasVisibleModalAlertOfType:(unsigned long long)arg1 forWindowScene:(id)arg2;
- (id)_initWithUserSessionController:(id)arg1;
- (bool)_isAlertItemPresentable:(id)arg1 outReasonsNotPresentable:(id*)arg2;
- (void)_notifyObservers:(id /* block */)arg1;
- (void)_performBatchActions:(id /* block */)arg1 animated:(bool)arg2 processQueue:(bool)arg3;
- (void)_presentAlertItem:(id)arg1 withPresenter:(id)arg2 animated:(bool)arg3;
- (id)_presentationForAlertItem:(id)arg1;
- (id)_presentedAlertItemForPresenter:(id)arg1;
- (id)_presenterForAlertItem:(id)arg1;
- (void)_processAlertItemQueuesAnimated:(bool)arg1;
- (void)_processAlertItemsFromQueue:(id)arg1 animated:(bool)arg2;
- (void)_reallyDeactivateAlertItem:(id)arg1 forReason:(int)arg2 deactivateBlock:(id /* block */)arg3;
- (void)_setSystemModalAlertPresenter:(id)arg1;
- (bool)_shouldPendAlertItem:(id)arg1 outReasonsPended:(id*)arg2;
- (void)_silencingHardwareButtonPressed:(id)arg1;
- (id)_systemModalAlertPresenter;
- (void)_updateActiveDestinations;
- (void)activateAlertItem:(id)arg1;
- (void)activateAlertItem:(id)arg1 animated:(bool)arg2;
- (void)activatePendedAlertsIfNecessary;
- (void)addObserver:(id)arg1;
- (id)alertItemsOfClass:(Class)arg1;
- (bool)canDeactivateAlertForMenuClickOrSystemGesture;
- (void)captureSuppressionAssertion:(id)arg1 reason:(id)arg2;
- (void)convertLockedAlertsToUnlockedAlerts;
- (void)convertUnlockedAlertsToLockedAlerts;
- (bool)deactivateAlertForMenuClickOrSystemGestureWithAnimation:(bool)arg1;
- (void)deactivateAlertItem:(id)arg1;
- (void)deactivateAlertItem:(id)arg1 reason:(int)arg2;
- (void)deactivateAlertItem:(id)arg1 reason:(int)arg2 animated:(bool)arg3;
- (bool)deactivateAlertItemsOfClass:(Class)arg1;
- (bool)deactivateAlertItemsOfClass:(Class)arg1 reason:(int)arg2;
- (bool)deactivateAlertItemsOfClass:(Class)arg1 reason:(int)arg2 animated:(bool)arg3;
- (void)dealloc;
- (id)description;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
- (bool)hasAlertOfClass:(Class)arg1;
- (bool)hasAlerts;
- (bool)hasLockScreenModalAlert;
- (bool)hasVisibleAlert;
- (bool)hasVisibleAlertForWindowScene:(id)arg1;
- (bool)hasVisibleModalAlert;
- (bool)hasVisibleSuperModalAlert;
- (id)init;
- (id)lockScreenModalAlertItemPresenter;
- (id)lockScreenNotificationsAlertItemPresenter;
- (void)moveActiveUnlockedAlertsToPendingWithAnimation:(bool)arg1 completion:(id /* block */)arg2;
- (void)removeObserver:(id)arg1;
- (void)setForceAlertsToPend:(bool)arg1 forReason:(id)arg2;
- (void)setInUILockedMode:(bool)arg1;
- (void)setLockScreenModalAlertItemPresenter:(id)arg1;
- (void)setLockScreenNotificationsAlertItemPresenter:(id)arg1;
- (void)setSystemApertureAlertItemPresenter:(id)arg1;
- (void)setUnlockedAlertItemPresenter:(id)arg1;
- (void)setWindowSceneManager:(id)arg1;
- (id)succinctDescription;
- (id)succinctDescriptionBuilder;
- (id)systemApertureAlertItemPresenter;
- (id)unlockedAlertItemPresenter;
- (id)visibleAlertItem;
- (void)windowSceneDidConnect:(id)arg1 withSharedModalAlertItemPresenter:(id)arg2;
- (void)windowSceneDidDisconnect:(id)arg1;
- (id)windowSceneManager;

@end
