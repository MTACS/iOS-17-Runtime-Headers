
@interface SBElasticValueViewController : UIViewController <PTSettingsKeyObserver, SBHUDViewControlling, UIGestureRecognizerDelegate> {
    unsigned long long  _axis;
    <SBElasticValueDataSource> * _dataSource;
    UILabel * _debugAutoDismissLabel;
    UISwitch * _debugAutoDismissalSwitch;
    NSArray * _debugAutoLayoutConstraints;
    UIView * _debugContainerView;
    UIButton * _debugDumpButton;
    UISlider * _debugHeightSlider;
    UILabel * _debugLabel;
    UILabel * _debugLockStateLabel;
    UISwitch * _debugLockStateSwitch;
    UIButton * _debugNextAudioRouteButton;
    UISlider * _debugPortraitYOriginSlider;
    UIButton * _debugResetAudioRouteButton;
    UISegmentedControl * _debugStateSegmentedControl;
    UISlider * _debugWidthSlider;
    <SBElasticValueViewControllerDelegate> * _delegate;
    UIView * _dimmingView;
    NSTimer * _dismissalTimer;
    bool  _initialTransitionCompleted;
    bool  _isDebugging;
    bool  _isRotating;
    _UILegibilityLabel * _leadingLabel;
    BLSAssertion * _liveRenderingAssertion;
    bool  _lockState;
    NSNumber * _pendingValueToApply;
    long long  _previousState;
    bool  _reduceMotionEnabled;
    <SBElasticRouteDisplaying> * _routeDisplayInfo;
    SBElasticHUDSettings * _settings;
    UILongPressGestureRecognizer * _shortLongPressGestureRecognizer;
    NSTimer * _sliderApplyValueTimer;
    SBFTouchPassThroughView * _sliderContainerView;
    bool  _sliderIsEditing;
    unsigned long long  _sliderTrackingCount;
    SBElasticSliderView * _sliderView;
    long long  _state;
    UIView * _touchTrackingView;
    _UILegibilityLabel * _trailingLabel;
}

@property (nonatomic, readonly) unsigned long long axis;
@property (nonatomic, readonly) struct CGPoint { double x1; double x2; } centerForElasticHUDWhenInInteractingState;
@property (nonatomic, readonly) <SBElasticValueDataSource> *dataSource;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <SBElasticValueViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, copy) NSArray *physicalButtonSceneTargets;
@property (nonatomic, readonly) SBElasticHUDSettings *settings;
@property (getter=isSliderTracking, nonatomic, readonly) bool sliderTracking;
@property (nonatomic, readonly) SBElasticSliderView *sliderView;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_actuallyDismiss;
- (void)_animateFromState:(long long)arg1 toState:(long long)arg2 primaryAnimations:(id /* block */)arg3 primaryCompletion:(id /* block */)arg4 positionAnimations:(id /* block */)arg5 positionCompletion:(id /* block */)arg6 finalCompletion:(id /* block */)arg7;
- (void)_beginDeflationDismissalAnimation;
- (bool)_canShowWhileLocked;
- (bool)_changeValue:(float)arg1;
- (bool)_computeCachedRouteDisplayInformation;
- (void)_debugAutoDismissalSwitchValueChanged:(id)arg1;
- (void)_debugChangingStateFromSegmentedControl:(id)arg1;
- (void)_debugDidTapNextRoute:(id)arg1;
- (void)_debugDidTapResetRoute:(id)arg1;
- (void)_debugDimensionSliderValueDidChange:(id)arg1;
- (void)_debugDump:(id)arg1;
- (void)_debugHandleNextRoute;
- (void)_debugHandleResetRoute;
- (void)_debugLockStateSwitchValueChanged:(id)arg1;
- (void)_dismissalTimerFired:(id)arg1;
- (void)_handleShortLongPressGestureRecognizer:(id)arg1;
- (void)_invalidateDismissalTimerForReason:(id)arg1;
- (bool)_isStateChangeAllowedFrom:(long long)arg1 toState:(long long)arg2;
- (void)_noteSliderViewDidBeginTracking;
- (void)_noteSliderViewDidEndTracking;
- (void)_reduceMotionStatusDidChange;
- (void)_refreshDebugUI:(bool)arg1;
- (void)_reloadData;
- (void)_scheduleDismissal:(id)arg1;
- (void)_scheduleDismissal:(id)arg1 afterInterval:(double)arg2;
- (void)_sliderEditingDidBegin:(id)arg1;
- (void)_sliderEditingDidEnd:(id)arg1;
- (void)_sliderIndirectInputDidBegin:(id)arg1;
- (void)_sliderIndirectInputDidEnd:(id)arg1;
- (void)_sliderTrackingDidBegin:(id)arg1;
- (void)_sliderTrackingDidEnd:(id)arg1;
- (void)_sliderValueDidChange:(id)arg1;
- (void)_sliderViewMetricsUpdatersForState:(long long)arg1 bounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 primaryMetricsUpdater:(out id /* block */*)arg3 positionUpdater:(out id /* block */*)arg4;
- (void)_updateDebugString:(id)arg1;
- (void)_updateDebugUIPositions;
- (void)_updateDimmingVisible:(bool)arg1;
- (void)_updateForAxisChange:(unsigned long long)arg1;
- (void)_updateGlyphStateIfNecessaryForValue:(float*)arg1;
- (void)_updateLabelsForAxis:(unsigned long long)arg1;
- (void)_updateLiveRenderingAssertion;
- (void)_updateSliderTracking;
- (unsigned long long)_updateSliderValue:(float)arg1 animated:(bool)arg2;
- (void)_updateSliderViewMetricsForState:(long long)arg1 bounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)_updateSliderWithAxis:(unsigned long long)arg1;
- (void)_updateTouchTrackingArea;
- (unsigned long long)axis;
- (struct CGPoint { double x1; double x2; })centerForElasticHUDWhenInInteractingState;
- (struct CGPoint { double x1; double x2; })centerForState:(long long)arg1 sliderSize:(struct CGSize { double x1; double x2; })arg2 bounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (void)changeValue:(float)arg1 animated:(bool)arg2;
- (id)createSliderView;
- (float)currentValue;
- (id)dataSource;
- (void)dealloc;
- (bool)definesAnimatedDismissal;
- (id)delegate;
- (void)dismissAnimatedWithCompletion:(id /* block */)arg1;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (double)glyphScaleForState:(long long)arg1;
- (long long)hudPresentationOrientation;
- (id)initWithCoder:(id)arg1;
- (id)initWithDataSource:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (double)interactiveValueUpdateDiscontinuityInterval;
- (bool)isSliderTracking;
- (unsigned long long)layoutAxisForInterfaceOrientation:(long long)arg1;
- (void)loadView;
- (id)log;
- (struct CGSize { double x1; double x2; })maximumSizeForSlider;
- (void)noteContinuousValueInteractionDidEnd;
- (void)noteContinuousValueInteractionWillBegin;
- (id)overrideDisplayNameForRoute:(id)arg1;
- (id)physicalButtonSceneTargets;
- (void)reloadData;
- (void)setDelegate:(id)arg1;
- (id)settings;
- (void)settings:(id)arg1 changedValueForKey:(id)arg2;
- (void)setupFailureRelationshipForGestureRecognizer:(id)arg1;
- (struct CGSize { double x1; double x2; })sizeForState:(long long)arg1;
- (id)sliderAccessibilityIdentifier;
- (id)sliderView;
- (unsigned long long)supportedInterfaceOrientations;
- (void)transitionStateContextuallyForValueChangeEvent;
- (void)transitionToState:(long long)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (bool)updateActiveRouteDisplay:(out id*)arg1;
- (void)updateValue:(float)arg1;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewDidMoveToWindow:(id)arg1 shouldAppearOrDisappear:(bool)arg2;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillLayoutSubviews;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;

@end
