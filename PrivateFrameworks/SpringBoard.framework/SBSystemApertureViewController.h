
@interface SBSystemApertureViewController : SBFTouchPassThroughViewController <SAAlertingConfiguring, SABehaviorOverridingParticipant, SAElementHosting, SAElementRegistering, SAUIElementViewControllingObserving, SAUILayoutHosting, SAUILayoutHostingPrivate, SAUILayoutSpecifyingOverridingParticipant, SAUISystemApertureManagerDelegate, SBButtonEventsHandler, SBFBacklightEnvironmentSceneProviding, SBFZStackParticipantDelegate, SBSystemApertureContainerViewDelegate, SBSystemApertureDynamicsHandling, SBSystemApertureElementAuthorityDelegate, SBSystemApertureElementOrientationAuthority, SBSystemApertureElementOrientationObserving, SBSystemApertureGestureHandling, SBSystemAperturePlatformElementHostingDelegate, SBSystemApertureProximityBacklightPolicyDelegate, SBSystemApertureStatusBarPillElementProviderObserving, UIGestureRecognizerDelegate> {
    SBSAContainerLongPressGestureDescription * _activeContainerDefaultPressGestureDescription;
    SBSAContainerPanGestureDescription * _activeContainerResizeGestureDescription;
    long long  _activeElementInterfaceOrientation;
    NSMutableArray * _activeRequests;
    NSCountedSet * _backlightAssertionRequiringReasons;
    <SBSystemApertureBacklightSessionAggregator> * _backlightSessionAggregator;
    struct __CFRunLoopObserver { } * _beforeCARunLoopObserver;
    NSSet * _bundleIDsPreferringSuppression;
    NSDictionary * _cachedLayoutDidChangeUserInfo;
    long long  _cloningStyle;
    SBSystemApertureKeyLineColorValidator * _colorValidator;
    UIView * _containerBackgroundParent;
    SBFTouchPassThroughView * _containerParent;
    NSUUID * _containerParentIdentifier;
    UIView * _containerSubBackgroundParent;
    <UITraitChangeRegistration> * _contentSizeCategoryTraitChangeRegistration;
    <SBSystemApertureCurtainViewHoster> * _curtainViewHoster;
    NSMutableSet * _dynamicPersistentAnimationAssertions;
    SBSystemApertureElementAuthority * _elementAuthority;
    <SBSystemApertureElementOrientationAuthority> * _elementOrientationAuthority;
    UIView<SBSystemApertureGainMapBackedRendering> * _highLevelMagiciansCurtainView;
    bool  _hostedScenesMayHaveChanged;
    NSMutableDictionary * _impactFeedbackStylesToGenerators;
    _UIPortalView * _indicatorContainerPortalView;
    _SBSystemApertureIndicatorContainerView * _indicatorContainerView;
    UILongPressGestureRecognizer * _interactionLongPressGesture;
    NSMutableDictionary * _lastAppliedPropertyIdentitiesToTransitionDescriptions;
    bool  _lastLayoutWasReboundingFromBounce;
    <BSInvalidatable> * _liveUpdatingAssertion;
    NSMutableArray * _longPressGestureUpdateQueue;
    UIView<SBSystemApertureGainMapBackedRendering> * _magiciansCurtainView;
    NSMutableArray * _orderedContainerViews;
    long long  _overrideRenderingStyle;
    NSMutableArray * _pendingTransitionResults;
    unsigned short  _preferencesInvalidationReasons;
    bool  _prefersSuppressionOfElementsDueToCoversheetVisibility;
    bool  _prefersSuppressionOfElementsDueToLiquidDetectionVisibility;
    bool  _prefersSuppressionOfElementsDueToSystemChromeSuppression;
    unsigned long long  _queryIteration;
    NSMapTable * _reasonsToLayoutAssertions;
    NSMutableArray * _resizeGestureUpdateQueue;
    UIPanGestureRecognizer * _resizePanGesture;
    SBSARootPreferencesProvider * _rootPreferencesProvider;
    NSSet * _sceneIDsPreferringSuppression;
    SBSystemApertureSettings * _settings;
    NSPointerArray * _significantUpdateTransitionAssertions;
    NSHashTable * _snapshotAssertions;
    <BSInvalidatable> * _suppressForSystemChromeSuppressionAssertion;
    bool  _suppressKeyLineForMitosis;
    <BSInvalidatable> * _suppressTouchCancellationAssertion;
    bool  _systemApertureContainsAnyContent;
    SBSystemApertureDefaults * _systemApertureDefaults;
    SAUISystemApertureManager * _systemApertureManager;
    NSMutableSet * _systemApertureSuppressionAssertions;
    SBSystemApertureWindowScene * _systemApertureWindowScene;
    NSMutableDictionary * _timerIdentifiersToDescriptions;
    NSMutableDictionary * _transitionIdentifiersToFloatAnimatableProperties;
    NSMutableSet * _transitionKeyLineAssertions;
    NSMutableSet * _transitionShadowAssertions;
    MTMaterialView * _variableBlurView;
    <SBSystemApertureViewControllerVisibilityDelegate> * _visibilityDelegate;
    SBFZStackParticipant * _zStackParticipant;
    NSMutableArray * _zoomAnimationAssertions;
    NSString * _zoomRegistrationIdentifier;
    bool  _zoomServicesReportedAXisZooming;
}

@property (nonatomic) <SBSystemApertureBacklightSessionAggregator> *backlightSessionAggregator;
@property (nonatomic, readonly) long long behaviorOverridingRole;
@property (nonatomic) long long cloningStyle;
@property (nonatomic, retain) <SBSystemApertureCurtainViewHoster> *curtainViewHoster;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) <SBSystemApertureElementOrientationAuthority> *elementOrientationAuthority;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } minimumSensorRegionFrame;
@property (nonatomic) long long overrideRenderingStyle;
@property (readonly, copy) NSArray *stateDump;
@property (readonly) Class superclass;
@property (nonatomic, retain) MTMaterialView *variableBlurView;
@property (nonatomic) <SBSystemApertureViewControllerVisibilityDelegate> *visibilityDelegate;

- (void).cxx_destruct;
- (long long)_activeElementInterfaceOrientation;
- (id)_activeSnapshotAssertionForElementIdentity:(id)arg1;
- (void)_addActiveRequest:(id)arg1;
- (void)_addActiveSnapshotAssertion:(id)arg1;
- (void)_addFloatAnimatablePropertyForTransitionDescriptionIfNecessary:(id)arg1 propertyIdentity:(id)arg2 milestones:(id)arg3;
- (void)_addMitosisBlobEffects;
- (void)_addPendingTransitionResult:(id)arg1;
- (void)_addRunLoopObserverIfNecessary;
- (void)_addTimerIfNecessaryForDescription:(id)arg1;
- (void)_addZoomAnimationAssertion;
- (struct CGSize { double x1; double x2; })_adjunctContainerMinimalViewSize;
- (id)_animatablePropertyWithProgressMilestones:(id)arg1 block:(id /* block */)arg2;
- (void)_animatedTransitionDidReachMilestone:(double)arg1 description:(id)arg2 propertyIdentity:(id)arg3 finished:(bool)arg4 retargeted:(bool)arg5;
- (struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })_applySymmetryToPreferredLayoutOutsets:(struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (id)_associatedWindowScene;
- (bool)_axLayoutSpecifierRequestsCollapseIfExpandedByUserInteraction:(id)arg1;
- (void)_axLayoutSpecifierRequestsDiminishment:(id)arg1;
- (void)_axRegisterForZoomUpdatesIfNecessary;
- (void)_axRevealHiddenElementIfPossible;
- (bool)_axZoomActiveAndEnabled;
- (void)_axZoomLevelOrStandbyModeChanged;
- (void)_beginRequiringBacklightAssertionForReason:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_boundsForAdjunctContainerViewWithPreferredEdgeOutsets:(struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })arg1 layoutDirection:(long long)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_calculateStatusBarAvoidanceFrame;
- (bool)_canShowWhileLocked;
- (void)_cancelExternalGesturesForReason:(id)arg1;
- (id)_childElementViewControllerWithIdentity:(id)arg1;
- (void)_cleanupIndicatorContainerIfNecessary;
- (void)_cleanupViewController:(id)arg1;
- (bool)_collapseExpandedElementIfPossible;
- (void)_configureGesturesIfNecessary;
- (void)_configureIndicatorContainerView;
- (void)_configureInteractionLongPressIfNecessary;
- (void)_configureLongPressGestureIfNecessary;
- (void)_configurePreferencesStackIfNecessary;
- (void)_configureResizeGestureIfNecessary;
- (void)_configureVariableBlur;
- (id)_containerViewForGesture:(id)arg1 initialLocationInContainerView:(out struct CGPoint { double x1; double x2; }*)arg2;
- (id)_containerViewForLayoutSpecifier:(id)arg1;
- (id)_containerViewForTouch:(id)arg1 ofGestureRecognizer:(id)arg2 initialLocation:(out struct CGPoint { double x1; double x2; }*)arg3;
- (id)_containerViewForViewController:(id)arg1;
- (id)_containerViewForViewController:(id)arg1 includingOutgoing:(bool)arg2;
- (id)_containerViewWithInterfaceElementIdentifier:(id)arg1 creatingIfNecessary:(bool)arg2;
- (id)_containerViewWithRank:(unsigned long long)arg1;
- (id)_containerViewWithRank:(unsigned long long)arg1 creatingIfNecessary:(bool)arg2;
- (id)_contextWithOrderedElementViewControllers:(id)arg1;
- (id)_currentFirstElement;
- (id)_defaultsContextForDefaults;
- (bool)_doesElementHaveValidUrgencyAssertion:(id)arg1;
- (id)_elementContextsForOrderedElementViewControllers:(id)arg1;
- (id)_elementForContainerView:(id)arg1;
- (void)_elementKeyColorWasInvalidated:(id)arg1;
- (id)_elementViewControllerForLayoutSpecifyingOverrider:(id)arg1;
- (id)_elementViewControllerForSizeTransitionWithDescription:(id)arg1 fromPreferences:(id)arg2;
- (void)_endRequiringBacklightAssertionForReason:(id)arg1;
- (id)_feedbackGeneratorForStyle:(long long)arg1;
- (id)_floatAnimatablePropertyForTransitionIdentifier:(id)arg1;
- (id)_flushActiveRequests;
- (id)_flushElapsedTimerDescriptions;
- (id)_flushPendingTransitionResults;
- (id)_flushSignificantUpdateTransitionAssertions;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_frameForSensorRegionInBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_gestureRecognizerForDescription:(id)arg1;
- (void)_handleActionsFromPreferences:(id)arg1;
- (void)_handleAnyContentsDidChangePreferences:(id)arg1 context:(id)arg2;
- (void)_handleBackgroundUpdatesFromPreferences:(id)arg1 context:(id)arg2;
- (bool)_handleButtonEventWithTest:(id /* block */)arg1 handler:(id /* block */)arg2;
- (bool)_handleCalloutBlockAction:(id)arg1;
- (void)_handleContainerAndElementUpdatesFromPreferences:(id)arg1 orderedElementViewControllers:(id)arg2 context:(id)arg3;
- (void)_handleContainerDefaultPressGesture:(id)arg1;
- (void)_handleContainerParentUpdatesFromPreferences:(id)arg1 context:(id)arg2;
- (bool)_handleContainerPressAction:(id)arg1;
- (bool)_handleContainerResizeAction:(id)arg1;
- (void)_handleContainerResizeGesture:(id)arg1;
- (bool)_handleContainerTapAction:(id)arg1;
- (void)_handleCurtainUpdatesFromPreferences:(id)arg1;
- (void)_handleGestureUpdatesFromPreferences:(id)arg1;
- (bool)_handleImpactFeedbackAction:(id)arg1;
- (void)_handleInteractionLongPress:(id)arg1;
- (void)_handleMitosisBlobUpdatesFromPreferences:(id)arg1;
- (bool)_handlePreferencesDidChangeAction:(id)arg1;
- (void)_handleResizePan:(id)arg1;
- (void)_handleResizeResult:(long long)arg1 withContainerView:(id)arg2;
- (void)_handleTelemetryLoggingFromContext:(id)arg1;
- (void)_handleTimerUpdatesFromPreferences:(id)arg1;
- (struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })_hostSuggestedOutsetsForElement:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_indicatorContainerViewFrameInBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_invalidateAndRemoveFloatAnimatableProperty:(id)arg1 forTransitionIdentifier:(id)arg2;
- (void)_invalidatePreferencesForReason:(unsigned short)arg1;
- (void)_invertColorsChanged:(id)arg1;
- (bool)_isAnyGestureRecognizerActive;
- (bool)_isBlobEnabled;
- (bool)_isIndicatorElementViewController:(id)arg1;
- (bool)_isInteractionLongPressGestureActive;
- (bool)_isInteractiveHidingSupportedByElement:(id)arg1;
- (bool)_isProperty:(id)arg1 ofObject:(id)arg2 equalToDescription:(id)arg3;
- (bool)_isResizePanGestureActive;
- (bool)_isSystemGesture:(id)arg1;
- (id)_keyPathForProperty:(id)arg1;
- (id)_layoutAssertionWithMaximumPermittedLayoutMode:(long long)arg1 reason:(id)arg2 creatingIfNecessary:(bool)arg3;
- (id)_layoutMetrics;
- (id)_layoutSpecifyingOverriderForContainerView:(id)arg1;
- (struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })_maximumContainerViewOutsetsInBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inLayoutMode:(long long)arg2;
- (unsigned long long)_maximumNumberOfSimultaneouslyVisibleElements;
- (long long)_mostRestrictiveLayoutModeFromActiveLayoutAssertions;
- (id)_newContainerViewWithInterfaceElementIdentifier:(id)arg1;
- (id)_persistentAssertionForElement:(id)arg1 withType:(long long)arg2;
- (id)_platformMetricsContext;
- (id)_popActiveGestureDescriptions;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_portraitFrameForPrimaryContainerViewInBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withPreferredEdgeOutsets:(struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })arg2 layoutDirection:(long long)arg3;
- (void)_postLayoutDidChangeNotificationIfNecessary;
- (struct CGSize { double x1; double x2; })_preferredMinSizeForCustomLayout:(long long)arg1 elementInterfaceOrientation:(long long)arg2;
- (id)_primaryContainerView;
- (void)_promote:(bool)arg1 gestureRecognizer:(id)arg2 toSystemGestureWithManager:(id)arg3 type:(unsigned long long)arg4;
- (id)_propertyUpdateBlockArrayForPropertyIdentity:(id)arg1 ofObject:(id)arg2 withDescription:(id)arg3 withTransitionDescription:(id)arg4 forceSingle:(bool)arg5 behaviorSettingsArray:(out id*)arg6 updateDescriptionsArray:(out id*)arg7;
- (void)_pushGestureDescription:(id)arg1;
- (void)_reduceTransparencyDidChange:(id)arg1;
- (void)_reevaluateElementSuppression;
- (void)_removeActiveSnapshotAssertion:(id)arg1;
- (void)_removeContainerViewsExceptingThoseWithDescriptions:(id)arg1;
- (void)_removeElementViewControllersExceptingThoseWithDescriptions:(id)arg1;
- (void)_removeIndicatorViewControllerIfNecessary;
- (void)_removeLayoutAssertionAndReevaluate:(id)arg1;
- (void)_removeMitosisBlobEffects;
- (void)_setBlobEnabled:(bool)arg1;
- (bool)_shouldPerformTransitionOfProperty:(id)arg1 ofObject:(id)arg2 withDescription:(id)arg3 fromPreferences:(id)arg4 context:(id)arg5;
- (bool)_shouldSuppressElement:(id)arg1 allowsSuppressionForSystemChromeSuppression:(bool)arg2;
- (unsigned long long)_systemGestureTypeForGesture:(id)arg1 systemGestureManager:(id)arg2;
- (void)_timerDidElapseWithIdentifier:(id)arg1;
- (void)_updateActiveElementInterfaceOrientation;
- (void)_updateAndLayoutIndicatorIfNecessary;
- (void)_updateContainerViewRanks;
- (void)_updateObject:(id)arg1 withDescription:(id)arg2 fromPreferences:(id)arg3 conditionalAnimations:(id /* block */)arg4 conditionalCompletion:(id /* block */)arg5 context:(id)arg6;
- (void)_updatePreferencesForReasonAccessibility:(unsigned short)arg1 updates:(id /* block */)arg2;
- (void)_updatePreferencesForReasonAnimatedPropertyUpdateBegin:(unsigned short)arg1 updates:(id /* block */)arg2;
- (void)_updatePreferencesForReasonAnimatedPropertyUpdateEnd:(unsigned short)arg1 updates:(id /* block */)arg2;
- (void)_updatePreferencesForReasonCloningOrRenderingStyle:(unsigned short)arg1 updates:(id /* block */)arg2;
- (void)_updatePreferencesForReasonDynamicsAnimation:(unsigned short)arg1 updates:(id /* block */)arg2;
- (void)_updatePreferencesForReasonElementRequested:(unsigned short)arg1 updates:(id /* block */)arg2;
- (void)_updatePreferencesForReasonGestures:(unsigned short)arg1 updates:(id /* block */)arg2;
- (void)_updatePreferencesForReasonInitOrDefaults:(unsigned short)arg1 updates:(id /* block */)arg2;
- (void)_updatePreferencesForReasonLumaSampling:(unsigned short)arg1 updates:(id /* block */)arg2;
- (void)_updatePreferencesForReasonMilestoneReached:(unsigned short)arg1 updates:(id /* block */)arg2;
- (void)_updatePreferencesForReasonOrientation:(unsigned short)arg1 updates:(id /* block */)arg2;
- (void)_updatePreferencesForReasonStackInitiated:(unsigned short)arg1 updates:(id /* block */)arg2;
- (void)_updatePreferencesForReasonSystemApertureManager:(unsigned short)arg1 updates:(id /* block */)arg2;
- (void)_updatePreferencesForReasonTimerExpired:(unsigned short)arg1 updates:(id /* block */)arg2;
- (void)_updatePreferencesForReasonTransitionEffectAssertion:(unsigned short)arg1 updates:(id /* block */)arg2;
- (void)_updatePreferencesIfNecessary;
- (void)_updatePreferredContentSizeCategoryForAllElements:(id)arg1;
- (void)_updatePreferredContentSizeCategoryForElementViewController:(id)arg1;
- (void)_updateProperty:(id)arg1 ofObject:(id)arg2 withDescription:(id)arg3 fromPreferences:(id)arg4 conditionalAnimations:(id /* block */)arg5 conditionalCompletion:(id /* block */)arg6 context:(id)arg7;
- (void)_updateStatusBarAvoidanceFrameWithAnimationSettings:(id)arg1;
- (void)_updateStatusBarAvoidanceFrameWithAnimationSettings:(id)arg1 options:(unsigned long long)arg2;
- (void)_updateWithPreferencesFromStack;
- (struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })_validatedEdgeOutsetsForPreferredOutsets:(struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })arg1 maximumOutsets:(struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })arg2;
- (id)_valueForProperty:(id)arg1 ofDescription:(id)arg2;
- (double)_yOffsetForCustomLayout:(long long)arg1;
- (long long)activeElementInterfaceOrientationForSystemApertureElementOrientationObserver:(id)arg1;
- (double)alertingDurationForHost:(id)arg1;
- (void)animateDiscreteAnimationStyle:(long long)arg1 toElement:(id)arg2;
- (void)animateTransitionAcceptanceBounceWithVelocityVector:(struct CGPoint { double x1; double x2; })arg1 triggeredBlock:(id /* block */)arg2;
- (void)animateTransitionEjectionStretchWithVelocityVector:(struct CGPoint { double x1; double x2; })arg1;
- (id)applyPersistentAnimationStyle:(long long)arg1 toElement:(id)arg2;
- (id)backlightSessionAggregator;
- (long long)behaviorOverridingRole;
- (long long)cloningStyle;
- (double)concentricPaddingForProvidedView:(id)arg1 fromViewProvider:(id)arg2;
- (struct CGPoint { double x1; double x2; })containerParentCenter;
- (id)curtainViewHoster;
- (void)dealloc;
- (struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })edgeOutsetsForSize:(struct CGSize { double x1; double x2; })arg1;
- (void)element:(id)arg1 requestsDiscreteAnimationOfType:(long long)arg2;
- (id)element:(id)arg1 requestsPersistentAnimationOfType:(long long)arg2;
- (id)elementOrientationAuthority;
- (void)elementOrientationDidChangeWithTransitionCoordinator:(id)arg1;
- (void)elementRequestsCancellingResizeGesture:(id)arg1;
- (void)elementRequestsNegativeResponse:(id)arg1;
- (void)elementRequestsSignificantUpdateTransition:(id)arg1;
- (void)elementViewControllingDidAppear:(id)arg1;
- (void)elementViewControllingDidDisappear:(id)arg1;
- (void)elementViewControllingWillAppear:(id)arg1;
- (void)elementViewControllingWillDisappear:(id)arg1;
- (bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (bool)handleHeadsetButtonPress:(bool)arg1;
- (bool)handleHomeButtonDoublePress;
- (bool)handleHomeButtonLongPress;
- (bool)handleHomeButtonPress;
- (bool)handleLockButtonPress;
- (bool)handleVoiceCommandButtonPress;
- (bool)handleVolumeDownButtonPress;
- (bool)handleVolumeUpButtonPress;
- (id)initWithWindowScene:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })interSensorRegionInContentView:(id)arg1;
- (void)invalidateElementUrgencyPreferences;
- (bool)isRequestingMenuPresentationForTargetWithOverrider:(id)arg1 isDefaultValue:(bool*)arg2;
- (bool)isTransitionTargetForSceneIdentifier:(id)arg1 bundleIdentifier:(id)arg2;
- (id)keyLineColorValidatorForSystemApertureContainerView:(id)arg1;
- (id)layoutModePreferenceForTargetWithOverrider:(id)arg1 isDefaultValue:(bool*)arg2;
- (struct CGSize { double x1; double x2; })maximumAvailableSizeForProvidedLeadingView:(id)arg1 fromViewProvider:(id)arg2;
- (struct CGSize { double x1; double x2; })maximumAvailableSizeForProvidedMinimalView:(id)arg1 fromViewProvider:(id)arg2;
- (struct CGSize { double x1; double x2; })maximumAvailableSizeForProvidedTrailingView:(id)arg1 fromViewProvider:(id)arg2;
- (void)menuPresentationRequestDidChangeForLayoutSpecifier:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })minimumSensorRegionFrame;
- (long long)overrideRenderingStyle;
- (id)parentViewForBackgroundForSystemApertureContainerView:(id)arg1;
- (id)parentViewForSubBackgroundForSystemApertureContainerView:(id)arg1;
- (void)preferredEdgeOutsetsDidInvalidateForLayoutSpecifier:(id)arg1;
- (struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })preferredEdgeOutsetsForLayoutMode:(long long)arg1 suggestedOutsets:(struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })arg2 maximumOutsets:(struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })arg3 forTargetWithOverrider:(id)arg4 isDefaultValue:(bool*)arg5;
- (void)preferredLayoutModeDidInvalidateForLayoutSpecifier:(id)arg1;
- (id)registerElement:(id)arg1;
- (id)requireHeavyShadowAssertionForTransition;
- (id)requireKeyLineAssertionForTransition;
- (id)restrictSystemApertureToDefaultLayoutWithReason:(id)arg1;
- (id)restrictSystemApertureToInertWithReason:(id)arg1;
- (id)scenesForBacklightSession;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })sensorRegionInContentView:(id)arg1 fromViewProvider:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })sensorRegionObstructingViewProvider:(id)arg1 inContentView:(id)arg2;
- (void)setBacklightSessionAggregator:(id)arg1;
- (void)setCloningStyle:(long long)arg1;
- (void)setContainerParentCenter:(struct CGPoint { double x1; double x2; })arg1;
- (void)setCurtainViewHoster:(id)arg1;
- (void)setElementOrientationAuthority:(id)arg1;
- (void)setLayoutMode:(long long)arg1 reason:(long long)arg2 forTargetWithOverrider:(id)arg3;
- (void)setOverrideRenderingStyle:(long long)arg1;
- (void)setVariableBlurView:(id)arg1;
- (void)setVisibilityDelegate:(id)arg1;
- (bool)shouldAutomaticallyForwardAppearanceMethods;
- (id)stateDump;
- (void)statusBarBackgroundActivityDidChangeWithoutUpdateFromProvider:(id)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (bool)systemApertureApertureElementAuthority:(id)arg1 isActivityElementAlerting:(id)arg2;
- (bool)systemApertureApertureElementAuthority:(id)arg1 isElementExpandedDueToUserInteraction:(id)arg2;
- (bool)systemApertureApertureElementAuthority:(id)arg1 isElementRequiredToRemainVisible:(id)arg2;
- (bool)systemApertureApertureElementAuthority:(id)arg1 isElementUrgentlyVisible:(id)arg2;
- (long long)systemApertureApertureElementAuthority:(id)arg1 preferredLayoutModeForElement:(id)arg2;
- (unsigned long long)systemApertureApertureElementAuthorityMaximumNumberOfSimultaneouslyVisibleElements:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })systemApertureContainerView:(id)arg1 hitRectForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 debugColor:(out id*)arg3;
- (void)systemApertureContainerView:(id)arg1 sampledLuminanceLevelChangedTo:(long long)arg2;
- (void)systemApertureManagerIndicatorHostingDidChange:(bool)arg1;
- (unsigned long long)systemApertureManagerMaximumNumberOfSimultaneouslyVisibleElements:(id)arg1;
- (void)systemApertureManagerRequestsHostNeedsLayout:(id)arg1;
- (bool)systemApertureManagerShouldUseOrderedElementViewControllers:(id)arg1;
- (void)systemApertureProximityBacklightPolicy:(id)arg1 embedProximityTouchTrackingView:(id)arg2 touchBlockingView:(id)arg3;
- (bool)systemApertureProximityBacklightPolicy:(id)arg1 isSystemApertureElementVisibleAtPoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)systemApertureProximityBacklightPolicy:(id)arg1 removeProximityTouchTrackingView:(id)arg2 touchBlockingView:(id)arg3;
- (bool)systemApertureProximityBacklightPolicyShouldConsiderSystemApertureInert:(id)arg1;
- (bool)systemApertureProximityBacklightPolicyShouldDisableGracePeriod:(id)arg1;
- (id)systemApertureRepresentationSuppressionAssertionForCoversheetVisibility;
- (id)systemApertureRepresentationSuppressionAssertionForLiquidDetectionVisibility;
- (id)systemApertureRepresentationSuppressionAssertionForSystemChromeSuppression;
- (id)variableBlurView;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidLoad;
- (double)viewProviderSensorShadowOpacityFactor:(id)arg1;
- (bool)viewProviderShouldMakeSensorShadowVisible:(id)arg1;
- (void)viewWillLayoutSubviews;
- (id)visibilityDelegate;
- (void)zStackParticipant:(id)arg1 updatePreferences:(id)arg2;
- (void)zStackParticipantDidChange:(id)arg1;

@end
