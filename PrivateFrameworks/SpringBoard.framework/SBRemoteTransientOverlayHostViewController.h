
@interface SBRemoteTransientOverlayHostViewController : _UIRemoteViewController <BSDescriptionProviding, SBUIRemoteAlertHostInterface_Internal> {
    bool  _allowsCustomPresentationDismissalAnimations;
    bool  _allowsHomeButtonDismissal;
    bool  _allowsStackingOverlayContentAbove;
    bool  _attachedToWindowedAccessory;
    <SBRemoteTransientOverlayHostViewControllerDelegate> * _delegate;
    long long  _dismissalAnimationStyle;
    NSNumber * _hasTranslucentContentValue;
    NSSet * _preferredBackgroundActivitiesToSuppress;
    unsigned long long  _preferredHardwareButtonEvents;
    NSNumber * _preferredSceneDeactivationReasonValue;
    NSNumber * _preferredStatusBarStyleValue;
    int  _preferredStatusBarVisibility;
    bool  _prefersWallpaperTunnelActive;
    long long  _requestedBackgroundStyle;
    bool  _shouldDisableBanners;
    bool  _shouldDisableControlCenter;
    bool  _shouldDisableInteractiveScreenshotGesture;
    bool  _shouldDisableOrientationUpdates;
    bool  _shouldDisableReachability;
    bool  _shouldDisableSiri;
    bool  _shouldEnableFadeInAnimation;
    bool  _shouldEnableFadeOutAnimation;
    bool  _shouldIgnoreContentOverlayInsetUpdates;
    bool  _shouldPendAlertItems;
    long long  _swipeDismissalStyle;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _windowedAccessoryCutoutFrameInScreen;
}

@property (nonatomic) bool allowsCustomPresentationDismissalAnimations;
@property (nonatomic, readonly) bool allowsHomeButtonDismissal;
@property (nonatomic, readonly) bool allowsStackingOverlayContentAbove;
@property (getter=isAttachedToWindowedAccessory, nonatomic, readonly) bool attachedToWindowedAccessory;
@property (getter=isContentOpaque, nonatomic, readonly) bool contentOpaque;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <SBRemoteTransientOverlayHostViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) long long dismissalAnimationStyle;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, copy) NSSet *preferredBackgroundActivitiesToSuppress;
@property (nonatomic, readonly) unsigned long long preferredHardwareButtonEvents;
@property (nonatomic, readonly, copy) NSNumber *preferredSceneDeactivationReasonValue;
@property (nonatomic, readonly) bool prefersWallpaperTunnelActive;
@property (nonatomic, readonly) long long requestedBackgroundStyle;
@property (nonatomic, readonly) bool shouldDisableBanners;
@property (nonatomic, readonly) bool shouldDisableControlCenter;
@property (nonatomic, readonly) bool shouldDisableInteractiveScreenshotGesture;
@property (nonatomic, readonly) bool shouldDisableOrientationUpdates;
@property (nonatomic, readonly) bool shouldDisableReachability;
@property (nonatomic, readonly) bool shouldDisableSiri;
@property (nonatomic) bool shouldEnableFadeInAnimation;
@property (nonatomic) bool shouldEnableFadeOutAnimation;
@property (nonatomic) bool shouldIgnoreContentOverlayInsetUpdates;
@property (nonatomic, readonly) bool shouldPendAlertItems;
@property (readonly) Class superclass;
@property (nonatomic, readonly) long long swipeDismissalStyle;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } windowedAccessoryCutoutFrameInScreen;

+ (id)exportedInterface;
+ (id)serviceViewControllerInterface;

- (void).cxx_destruct;
- (bool)_canShowWhileLocked;
- (void)_participateInSystemAnimationFence:(id)arg1;
- (int)_preferredStatusBarVisibility;
- (void)_updateContentOverlayInsetsFromParentIfNecessary;
- (bool)allowsCustomPresentationDismissalAnimations;
- (bool)allowsHomeButtonDismissal;
- (bool)allowsStackingOverlayContentAbove;
- (bool)becomeFirstResponder;
- (bool)canBecomeFirstResponder;
- (bool)canResignFirstResponder;
- (void)configureWithContext:(id)arg1 completion:(id /* block */)arg2;
- (void)deactivate;
- (id)delegate;
- (id)description;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
- (void)didInvalidateForRemoteAlert;
- (void)didTransitionToAttachedToWindowedAccessory:(bool)arg1 windowedAccessoryCutoutFrameInScreen:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)dismiss;
- (void)dismissForTransientOverlayAnimated:(bool)arg1 completion:(id /* block */)arg2;
- (long long)dismissalAnimationStyle;
- (void)handleButtonActions:(id)arg1;
- (bool)handleDoubleHeightStatusBarTap;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)invalidate;
- (bool)isAttachedToWindowedAccessory;
- (bool)isContentOpaque;
- (id)preferredBackgroundActivitiesToSuppress;
- (unsigned long long)preferredHardwareButtonEvents;
- (id)preferredSceneDeactivationReasonValue;
- (long long)preferredStatusBarStyle;
- (bool)prefersWallpaperTunnelActive;
- (void)prepareForActivationWithContext:(id)arg1 presentationMode:(long long)arg2 completion:(id /* block */)arg3;
- (void)presentForTransientOverlayAnimated:(bool)arg1 completion:(id /* block */)arg2;
- (void)preserveInputViewsAnimated:(bool)arg1;
- (long long)requestedBackgroundStyle;
- (bool)resignFirstResponder;
- (void)restoreInputViewsAnimated:(bool)arg1;
- (void)setAllowsAlertItems:(bool)arg1;
- (void)setAllowsAlertStacking:(bool)arg1;
- (void)setAllowsBanners:(bool)arg1;
- (void)setAllowsControlCenter:(bool)arg1;
- (void)setAllowsCustomPresentationDismissalAnimations:(bool)arg1;
- (void)setAllowsMenuButtonDismissal:(bool)arg1;
- (void)setAllowsSiri:(bool)arg1;
- (void)setBackgroundActivitiesToCancel:(id)arg1 animationSettings:(id)arg2;
- (void)setBackgroundStyle:(long long)arg1 withDuration:(double)arg2;
- (void)setDelegate:(id)arg1;
- (void)setDesiredAutoLockDuration:(double)arg1;
- (void)setDesiredHardwareButtonEvents:(unsigned long long)arg1;
- (void)setDesiredIdleTimerSettings:(id)arg1;
- (void)setDismissalAnimationStyle:(long long)arg1;
- (void)setIdleTimerDisabled:(bool)arg1 forReason:(id)arg2;
- (void)setInteractiveScreenshotGestureDisabled:(bool)arg1;
- (void)setLaunchingInterfaceOrientation:(long long)arg1;
- (void)setOrientationChangedEventsEnabled:(bool)arg1;
- (void)setReachabilityDisabled:(bool)arg1;
- (void)setSceneDeactivationReason:(id)arg1;
- (void)setShouldDisableFadeInAnimation:(bool)arg1;
- (void)setShouldDismissOnUILock:(bool)arg1;
- (void)setShouldEnableFadeInAnimation:(bool)arg1;
- (void)setShouldEnableFadeOutAnimation:(bool)arg1;
- (void)setShouldIgnoreContentOverlayInsetUpdates:(bool)arg1;
- (void)setStatusBarHidden:(bool)arg1 withDuration:(double)arg2;
- (void)setStyleOverridesToCancel:(unsigned long long)arg1 animationSettings:(id)arg2;
- (void)setSupportedInterfaceOrientationOverride:(unsigned long long)arg1;
- (void)setSwipeDismissalStyle:(long long)arg1;
- (void)setWallpaperStyle:(long long)arg1 withDuration:(double)arg2;
- (void)setWallpaperTunnelActive:(bool)arg1;
- (void)setWhitePointAdaptivityStyle:(long long)arg1;
- (bool)shouldDisableBanners;
- (bool)shouldDisableControlCenter;
- (bool)shouldDisableInteractiveScreenshotGesture;
- (bool)shouldDisableOrientationUpdates;
- (bool)shouldDisableReachability;
- (bool)shouldDisableSiri;
- (bool)shouldEnableFadeInAnimation;
- (bool)shouldEnableFadeOutAnimation;
- (bool)shouldIgnoreContentOverlayInsetUpdates;
- (bool)shouldPendAlertItems;
- (id)succinctDescription;
- (id)succinctDescriptionBuilder;
- (long long)swipeDismissalStyle;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewServiceDidTerminateWithError:(id)arg1;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })windowedAccessoryCutoutFrameInScreen;

@end
