
@interface SBSpotlightPresentableViewController : UIViewController <BSInvalidatable, PTSettingsKeyObserver, SBSearchPresentable, SBSpotlightMultiplexingViewControllerDelegate, SPUIRemoteSearchViewDelegate> {
    bool  _allowsKeyboardWhileInteractive;
    bool  _allowsKeyboardWhileInteractiveWithoutSearchAffordance;
    bool  _allowsVelocityInjection;
    long long  _anticipatedPresentationState;
    struct SBSpotlightPresentationMetrics { 
        double backgroundWeighting; 
        struct CGPoint { 
            double x; 
            double y; 
        } searchContentCenter; 
        double searchContentAlpha; 
        struct CGSize { 
            double width; 
            double height; 
        } searchAffordanceSize; 
        struct CGPoint { 
            double x; 
            double y; 
        } searchAffordanceCenter; 
        double searchAffordanceAlpha; 
        long long searchAffordanceContentAlignment; 
        double searchAffordanceContentScale; 
        double searchAffordanceCornerRadius; 
        struct CGSize { 
            double width; 
            double height; 
        } fullSearchBarSize; 
        double searchBarAlpha; 
        struct CGPoint { 
            double x; 
            double y; 
        } keyboardCenter; 
        double keyboardAlpha; 
        struct CGPoint { 
            double x; 
            double y; 
        } keyboardProtectorCenter; 
        struct CGPoint { 
            double x; 
            double y; 
        } homeAffordanceCenter; 
        double searchContentVelocity; 
        double keyboardVelocity; 
    }  _appliedKeyboardAlignedElementsMetrics;
    UIViewFloatAnimatableProperty * _backgroundBlurProperty;
    struct SBSpotlightTransitionRange { 
        double start; 
        double end; 
    }  _backgroundBlurRange;
    double  _backgroundInteractiveBlurDistance;
    struct SBSpotlightTransitionRange { 
        double start; 
        double end; 
    }  _backgroundUnblurRange;
    bool  _cancellingDismissAnimation;
    <SBSpotlightPresentableViewControllerDelegate> * _delegate;
    bool  _dismissingFromFullyPresented;
    bool  _hasUnifiedKeyboardBackground;
    SBHomeGrabberView * _homeAffordance;
    struct SBSpotlightHostedContentMetrics { 
        double keyboardHeight; 
        double keyboardProtectorHeight; 
        struct CGSize { 
            double width; 
            double height; 
        } searchBarSize; 
        struct CGSize { 
            double width; 
            double height; 
        } dockedSearchBarSize; 
        double searchBarCornerRadius; 
    }  _hostedContentMetrics;
    bool  _initializingKeyboardView;
    double  _injectedPercentageOfGestureVelocity;
    double  _injectedVelocityForNonInteractiveTransitions;
    bool  _injectsVelocityForNonInteractiveTransitions;
    bool  _injectsVelocityOnlyForShortSwipes;
    double  _interactiveKeyboardPresentationOffset;
    double  _interactiveKeyboardPresentationThreshold;
    double  _keyboardFadeInStartValue;
    UIViewFloatAnimatableProperty * _keyboardFadeProperty;
    bool  _keyboardFollowsSpotlightContent;
    double  _keyboardInjectedVelocityPercentage;
    double  _keyboardInjectedVelocityPercentageForNonInteractiveTransitions;
    _UIPortalView * _keyboardProtectorPortalView;
    UIView * _keyboardView;
    double  _maxPresentationOffset;
    unsigned long long  _outstandingAnimationCount;
    double  _presentationOffset;
    double  _presentationProgress;
    long long  _presentationState;
    long long  _previousPresentationState;
    double  _pullTransitionDistance;
    UIViewFloatAnimatableProperty * _scaleProperty;
    SBFFluidBehaviorSettings * _scaleSettings;
    UIView * _scaleView;
    bool  _scalesSearchAffordanceContentWhileFading;
    UIView<SBHSearchAffordance> * _searchAffordance;
    UIView * _searchAffordanceBackgroundCapturingView;
    UIView * _searchAffordanceContentContainerView;
    struct SBSpotlightTransitionRange { 
        double start; 
        double end; 
    }  _searchAffordanceContentFadeRange;
    double  _searchAffordanceMaxOffset;
    double  _searchAffordanceMaxScaleX;
    double  _searchAffordanceMaxScaleY;
    double  _searchAffordanceOffsetRubberbandingRange;
    long long  _searchAffordancePresentationState;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _searchAffordanceReferenceFrame;
    UIView * _searchAffordanceReferenceView;
    struct SBSpotlightTransitionRange { 
        double start; 
        double end; 
    }  _searchAffordanceScaleAndTranslateRange;
    double  _searchAffordanceScaleRubberbandingRange;
    double  _searchAffordanceTransientFadeInThreshold;
    SBFFluidBehaviorSettings * _searchAnimationSettings;
    UIView<SBSpotlightBackgroundWeighting> * _searchBackgroundView;
    _UIPortalView * _searchBarBackgroundPortalView;
    struct SBSpotlightTransitionRange { 
        double start; 
        double end; 
    }  _searchBarContentFadeRange;
    UIView * _searchBarPortalClippingContainerView;
    NSMutableSet * _searchBarPortalRequirementReasons;
    _UIPortalView * _searchBarPortalView;
    struct SBSpotlightTransitionRange { 
        double start; 
        double end; 
    }  _searchContentFadeInRange;
    double  _searchContentFadeInStartValue;
    struct SBSpotlightTransitionRange { 
        double start; 
        double end; 
    }  _searchContentFadeOutRange;
    UIViewFloatAnimatableProperty * _searchContentFadeProperty;
    double  _searchContentInteractiveFadeInDistance;
    SBHHomePullToSearchSettings * _searchTransitionSettings;
    double  _shortSwipeMaximumPercentageOfExpectedVelocity;
    double  _spotlightActivationThreshold;
    SBSpotlightMultiplexingViewController * _spotlightMultiplexingViewController;
    bool  _supportsSeparateSearchBarBackground;
    double  _topOffset;
    bool  _waitingForKeyboardPresentationForFadeIn;
    bool  _waitingForSearchContentAvailabilityForFadeIn;
}

@property (nonatomic) bool allowsKeyboardWhileInteractive;
@property (nonatomic) bool allowsKeyboardWhileInteractiveWithoutSearchAffordance;
@property (nonatomic) bool allowsVelocityInjection;
@property (nonatomic) long long anticipatedPresentationState;
@property (nonatomic) struct SBSpotlightPresentationMetrics { double x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; double x3; struct CGSize { double x_4_1_1; double x_4_1_2; } x4; struct CGPoint { double x_5_1_1; double x_5_1_2; } x5; double x6; long long x7; double x8; double x9; struct CGSize { double x_10_1_1; double x_10_1_2; } x10; double x11; struct CGPoint { double x_12_1_1; double x_12_1_2; } x12; double x13; struct CGPoint { double x_14_1_1; double x_14_1_2; } x14; struct CGPoint { double x_15_1_1; double x_15_1_2; } x15; double x16; double x17; } appliedKeyboardAlignedElementsMetrics;
@property (nonatomic, retain) UIViewFloatAnimatableProperty *backgroundBlurProperty;
@property (nonatomic) struct SBSpotlightTransitionRange { double x1; double x2; } backgroundBlurRange;
@property (nonatomic) double backgroundInteractiveBlurDistance;
@property (nonatomic) struct SBSpotlightTransitionRange { double x1; double x2; } backgroundUnblurRange;
@property (nonatomic) bool cancellingDismissAnimation;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <SBSpotlightPresentableViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool dismissingFromFullyPresented;
@property (nonatomic, readonly) bool hasUnifiedKeyboardBackground;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) SBHomeGrabberView *homeAffordance;
@property (nonatomic) struct SBSpotlightHostedContentMetrics { double x1; double x2; struct CGSize { double x_3_1_1; double x_3_1_2; } x3; struct CGSize { double x_4_1_1; double x_4_1_2; } x4; double x5; } hostedContentMetrics;
@property (nonatomic) bool initializingKeyboardView;
@property (nonatomic) double injectedPercentageOfGestureVelocity;
@property (nonatomic) double injectedVelocityForNonInteractiveTransitions;
@property (nonatomic) bool injectsVelocityForNonInteractiveTransitions;
@property (nonatomic) bool injectsVelocityOnlyForShortSwipes;
@property (nonatomic) double interactiveKeyboardPresentationOffset;
@property (nonatomic) double interactiveKeyboardPresentationThreshold;
@property (nonatomic) double keyboardFadeInStartValue;
@property (nonatomic, retain) UIViewFloatAnimatableProperty *keyboardFadeProperty;
@property (nonatomic) bool keyboardFollowsSpotlightContent;
@property (nonatomic) double keyboardInjectedVelocityPercentage;
@property (nonatomic) double keyboardInjectedVelocityPercentageForNonInteractiveTransitions;
@property (nonatomic, retain) _UIPortalView *keyboardProtectorPortalView;
@property (nonatomic, retain) UIView *keyboardView;
@property (nonatomic) double maxPresentationOffset;
@property (nonatomic) unsigned long long outstandingAnimationCount;
@property (nonatomic) double presentationOffset;
@property (nonatomic) double presentationProgress;
@property (nonatomic) long long presentationState;
@property (nonatomic) long long previousPresentationState;
@property (nonatomic) double pullTransitionDistance;
@property (nonatomic, retain) UIViewFloatAnimatableProperty *scaleProperty;
@property (nonatomic, retain) SBFFluidBehaviorSettings *scaleSettings;
@property (nonatomic, retain) UIView *scaleView;
@property (nonatomic) bool scalesSearchAffordanceContentWhileFading;
@property (nonatomic, readonly) UIView *scalingContentView;
@property (nonatomic, retain) UIView<SBHSearchAffordance> *searchAffordance;
@property (nonatomic, retain) UIView *searchAffordanceBackgroundCapturingView;
@property (nonatomic, retain) UIView *searchAffordanceContentContainerView;
@property (nonatomic) struct SBSpotlightTransitionRange { double x1; double x2; } searchAffordanceContentFadeRange;
@property (nonatomic) double searchAffordanceMaxOffset;
@property (nonatomic) double searchAffordanceMaxScaleX;
@property (nonatomic) double searchAffordanceMaxScaleY;
@property (nonatomic) double searchAffordanceOffsetRubberbandingRange;
@property (nonatomic) long long searchAffordancePresentationState;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } searchAffordanceReferenceFrame;
@property (nonatomic, retain) UIView *searchAffordanceReferenceView;
@property (nonatomic) struct SBSpotlightTransitionRange { double x1; double x2; } searchAffordanceScaleAndTranslateRange;
@property (nonatomic) double searchAffordanceScaleRubberbandingRange;
@property (nonatomic) double searchAffordanceTransientFadeInThreshold;
@property (nonatomic, readonly) UIView<SBHSearchAffordance> *searchAffordanceView;
@property (nonatomic, retain) SBFFluidBehaviorSettings *searchAnimationSettings;
@property (nonatomic, retain) UIView<SBSpotlightBackgroundWeighting> *searchBackgroundView;
@property (nonatomic, retain) _UIPortalView *searchBarBackgroundPortalView;
@property (nonatomic) struct SBSpotlightTransitionRange { double x1; double x2; } searchBarContentFadeRange;
@property (nonatomic, retain) UIView *searchBarPortalClippingContainerView;
@property (nonatomic, retain) NSMutableSet *searchBarPortalRequirementReasons;
@property (nonatomic, retain) _UIPortalView *searchBarPortalView;
@property (nonatomic) struct SBSpotlightTransitionRange { double x1; double x2; } searchContentFadeInRange;
@property (nonatomic) double searchContentFadeInStartValue;
@property (nonatomic) struct SBSpotlightTransitionRange { double x1; double x2; } searchContentFadeOutRange;
@property (nonatomic, retain) UIViewFloatAnimatableProperty *searchContentFadeProperty;
@property (nonatomic) double searchContentInteractiveFadeInDistance;
@property (nonatomic, retain) SBHHomePullToSearchSettings *searchTransitionSettings;
@property (nonatomic) double shortSwipeMaximumPercentageOfExpectedVelocity;
@property (nonatomic) double spotlightActivationThreshold;
@property (nonatomic, readonly) SBSpotlightMultiplexingViewController *spotlightMultiplexingViewController;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsSeparateSearchBarBackground;
@property (nonatomic) double topOffset;
@property (nonatomic) bool waitingForKeyboardPresentationForFadeIn;
@property (nonatomic) bool waitingForSearchContentAvailabilityForFadeIn;

- (void).cxx_destruct;
- (unsigned long long)_activeTransitionCount;
- (void)_beginRequiringSearchBarPortalViewForReason:(id)arg1;
- (bool)_canShowWhileLocked;
- (void)_configureHostedContent;
- (void)_createBackgroundBlurProperty;
- (void)_createKeyboardFadeProperty;
- (void)_createScaleProperty;
- (void)_createSearchContentFadeProperty;
- (void)_endRequiringSearchBarPortalViewForReason:(id)arg1;
- (void)_getSearchAffordanceMetricsForDefaultSize:(struct CGSize { double x1; double x2; })arg1 presentationState:(long long)arg2 presentationOffset:(double)arg3 scaleX:(double*)arg4 scaleY:(double*)arg5 offset:(double*)arg6 size:(struct CGSize { double x1; double x2; }*)arg7 cornerRadius:(double*)arg8;
- (void)_layoutSearchAffordanceWithMetrics:(struct SBSpotlightPresentationMetrics { double x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; double x3; struct CGSize { double x_4_1_1; double x_4_1_2; } x4; struct CGPoint { double x_5_1_1; double x_5_1_2; } x5; double x6; long long x7; double x8; double x9; struct CGSize { double x_10_1_1; double x_10_1_2; } x10; double x11; struct CGPoint { double x_12_1_1; double x_12_1_2; } x12; double x13; struct CGPoint { double x_14_1_1; double x_14_1_2; } x14; struct CGPoint { double x_15_1_1; double x_15_1_2; } x15; double x16; double x17; })arg1;
- (void)_layoutSearchContentWithMetrics:(struct SBSpotlightPresentationMetrics { double x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; double x3; struct CGSize { double x_4_1_1; double x_4_1_2; } x4; struct CGPoint { double x_5_1_1; double x_5_1_2; } x5; double x6; long long x7; double x8; double x9; struct CGSize { double x_10_1_1; double x_10_1_2; } x10; double x11; struct CGPoint { double x_12_1_1; double x_12_1_2; } x12; double x13; struct CGPoint { double x_14_1_1; double x_14_1_2; } x14; struct CGPoint { double x_15_1_1; double x_15_1_2; } x15; double x16; double x17; })arg1;
- (void)_layoutWithMetrics:(struct SBSpotlightPresentationMetrics { double x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; double x3; struct CGSize { double x_4_1_1; double x_4_1_2; } x4; struct CGPoint { double x_5_1_1; double x_5_1_2; } x5; double x6; long long x7; double x8; double x9; struct CGSize { double x_10_1_1; double x_10_1_2; } x10; double x11; struct CGPoint { double x_12_1_1; double x_12_1_2; } x12; double x13; struct CGPoint { double x_14_1_1; double x_14_1_2; } x14; struct CGPoint { double x_15_1_1; double x_15_1_2; } x15; double x16; double x17; })arg1;
- (void)_positionKeyboardAlignedElementsWithMetrics:(struct SBSpotlightPresentationMetrics { double x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; double x3; struct CGSize { double x_4_1_1; double x_4_1_2; } x4; struct CGPoint { double x_5_1_1; double x_5_1_2; } x5; double x6; long long x7; double x8; double x9; struct CGSize { double x_10_1_1; double x_10_1_2; } x10; double x11; struct CGPoint { double x_12_1_1; double x_12_1_2; } x12; double x13; struct CGPoint { double x_14_1_1; double x_14_1_2; } x14; struct CGPoint { double x_15_1_1; double x_15_1_2; } x15; double x16; double x17; })arg1;
- (struct SBSpotlightPresentationMetrics { double x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; double x3; struct CGSize { double x_4_1_1; double x_4_1_2; } x4; struct CGPoint { double x_5_1_1; double x_5_1_2; } x5; double x6; long long x7; double x8; double x9; struct CGSize { double x_10_1_1; double x_10_1_2; } x10; double x11; struct CGPoint { double x_12_1_1; double x_12_1_2; } x12; double x13; struct CGPoint { double x_14_1_1; double x_14_1_2; } x14; struct CGPoint { double x_15_1_1; double x_15_1_2; } x15; double x16; double x17; })_presentationMetricsWithProgress:(double)arg1 offset:(double)arg2 velocity:(double)arg3 presentationState:(long long)arg4 previousPresentationState:(long long)arg5 anticipatedPresentationState:(long long)arg6 searchContentPresentationState:(long long)arg7 searchAffordancePresentationState:(long long)arg8 hostedContentMetrics:(struct SBSpotlightHostedContentMetrics { double x1; double x2; struct CGSize { double x_3_1_1; double x_3_1_2; } x3; struct CGSize { double x_4_1_1; double x_4_1_2; } x4; double x5; })arg9;
- (long long)_searchAffordancePresentationStateWithOffset:(double)arg1 presentationState:(long long)arg2 previousSearchAffordancePresentationState:(long long)arg3;
- (void)_setCornerRounded:(bool)arg1;
- (void)_setHitTestingDisabledOnHostedContent:(bool)arg1;
- (void)_setUpHomeAffordance;
- (bool)_setUpHostedContentMetrics;
- (void)_setUpSearchAffordance;
- (void)_setUpSearchAnimationSettings;
- (void)_setUpSearchBackground;
- (void)_setUpSearchBackgroundMatchMoveAnimation;
- (id)_sharedRemoteSearchViewController;
- (void)_tearDownBackgroundBlurProperty;
- (void)_tearDownKeyboardFadeProperty;
- (void)_updateForScalePropertyChanged;
- (void)_updatePresentationProgress:(double)arg1 withOffset:(double)arg2 velocity:(double)arg3 presentationState:(long long)arg4 previousPresentationState:(long long)arg5;
- (bool)allowsKeyboardWhileInteractive;
- (bool)allowsKeyboardWhileInteractiveWithoutSearchAffordance;
- (bool)allowsVelocityInjection;
- (long long)anticipatedPresentationState;
- (struct SBSpotlightPresentationMetrics { double x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; double x3; struct CGSize { double x_4_1_1; double x_4_1_2; } x4; struct CGPoint { double x_5_1_1; double x_5_1_2; } x5; double x6; long long x7; double x8; double x9; struct CGSize { double x_10_1_1; double x_10_1_2; } x10; double x11; struct CGPoint { double x_12_1_1; double x_12_1_2; } x12; double x13; struct CGPoint { double x_14_1_1; double x_14_1_2; } x14; struct CGPoint { double x_15_1_1; double x_15_1_2; } x15; double x16; double x17; })appliedKeyboardAlignedElementsMetrics;
- (id)backgroundBlurProperty;
- (struct SBSpotlightTransitionRange { double x1; double x2; })backgroundBlurRange;
- (double)backgroundInteractiveBlurDistance;
- (struct SBSpotlightTransitionRange { double x1; double x2; })backgroundUnblurRange;
- (bool)cancellingDismissAnimation;
- (void)dealloc;
- (id)delegate;
- (void)dismissSearchView;
- (bool)dismissingFromFullyPresented;
- (bool)hasUnifiedKeyboardBackground;
- (id)homeAffordance;
- (struct SBSpotlightHostedContentMetrics { double x1; double x2; struct CGSize { double x_3_1_1; double x_3_1_2; } x3; struct CGSize { double x_4_1_1; double x_4_1_2; } x4; double x5; })hostedContentMetrics;
- (id)initWithSpotlightMultiplexingViewController:(id)arg1;
- (bool)initializingKeyboardView;
- (double)injectedPercentageOfGestureVelocity;
- (double)injectedVelocityForNonInteractiveTransitions;
- (bool)injectsVelocityForNonInteractiveTransitions;
- (bool)injectsVelocityOnlyForShortSwipes;
- (double)interactiveKeyboardPresentationOffset;
- (double)interactiveKeyboardPresentationThreshold;
- (void)invalidate;
- (void)invalidateBackgroundView;
- (void)invalidateSearchAffordanceView;
- (double)keyboardFadeInStartValue;
- (id)keyboardFadeProperty;
- (bool)keyboardFollowsSpotlightContent;
- (double)keyboardInjectedVelocityPercentage;
- (double)keyboardInjectedVelocityPercentageForNonInteractiveTransitions;
- (id)keyboardProtectorPortalView;
- (id)keyboardView;
- (void)loadView;
- (double)maxPresentationOffset;
- (unsigned long long)outstandingAnimationCount;
- (double)presentationOffset;
- (double)presentationProgress;
- (long long)presentationState;
- (long long)previousPresentationState;
- (double)pullTransitionDistance;
- (id)scaleProperty;
- (id)scaleSettings;
- (id)scaleView;
- (bool)scalesSearchAffordanceContentWhileFading;
- (id)scalingContentView;
- (id)searchAffordance;
- (id)searchAffordanceBackgroundCapturingView;
- (id)searchAffordanceContentContainerView;
- (struct SBSpotlightTransitionRange { double x1; double x2; })searchAffordanceContentFadeRange;
- (double)searchAffordanceMaxOffset;
- (double)searchAffordanceMaxScaleX;
- (double)searchAffordanceMaxScaleY;
- (double)searchAffordanceOffsetRubberbandingRange;
- (long long)searchAffordancePresentationState;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })searchAffordanceReferenceFrame;
- (id)searchAffordanceReferenceView;
- (struct SBSpotlightTransitionRange { double x1; double x2; })searchAffordanceScaleAndTranslateRange;
- (double)searchAffordanceScaleRubberbandingRange;
- (double)searchAffordanceTransientFadeInThreshold;
- (id)searchAffordanceView;
- (id)searchAnimationSettings;
- (id)searchBackgroundView;
- (id)searchBarBackgroundPortalView;
- (struct SBSpotlightTransitionRange { double x1; double x2; })searchBarContentFadeRange;
- (id)searchBarPortalClippingContainerView;
- (id)searchBarPortalRequirementReasons;
- (id)searchBarPortalView;
- (struct SBSpotlightTransitionRange { double x1; double x2; })searchContentFadeInRange;
- (double)searchContentFadeInStartValue;
- (struct SBSpotlightTransitionRange { double x1; double x2; })searchContentFadeOutRange;
- (id)searchContentFadeProperty;
- (double)searchContentInteractiveFadeInDistance;
- (id)searchTransitionSettings;
- (void)setAllowsKeyboardWhileInteractive:(bool)arg1;
- (void)setAllowsKeyboardWhileInteractiveWithoutSearchAffordance:(bool)arg1;
- (void)setAllowsVelocityInjection:(bool)arg1;
- (void)setAnticipatedPresentationState:(long long)arg1;
- (void)setAppliedKeyboardAlignedElementsMetrics:(struct SBSpotlightPresentationMetrics { double x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; double x3; struct CGSize { double x_4_1_1; double x_4_1_2; } x4; struct CGPoint { double x_5_1_1; double x_5_1_2; } x5; double x6; long long x7; double x8; double x9; struct CGSize { double x_10_1_1; double x_10_1_2; } x10; double x11; struct CGPoint { double x_12_1_1; double x_12_1_2; } x12; double x13; struct CGPoint { double x_14_1_1; double x_14_1_2; } x14; struct CGPoint { double x_15_1_1; double x_15_1_2; } x15; double x16; double x17; })arg1;
- (void)setBackgroundBlurProperty:(id)arg1;
- (void)setBackgroundBlurRange:(struct SBSpotlightTransitionRange { double x1; double x2; })arg1;
- (void)setBackgroundInteractiveBlurDistance:(double)arg1;
- (void)setBackgroundUnblurRange:(struct SBSpotlightTransitionRange { double x1; double x2; })arg1;
- (void)setCancellingDismissAnimation:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDismissingFromFullyPresented:(bool)arg1;
- (void)setHomeAffordance:(id)arg1;
- (void)setHostedContentMetrics:(struct SBSpotlightHostedContentMetrics { double x1; double x2; struct CGSize { double x_3_1_1; double x_3_1_2; } x3; struct CGSize { double x_4_1_1; double x_4_1_2; } x4; double x5; })arg1;
- (void)setInitializingKeyboardView:(bool)arg1;
- (void)setInjectedPercentageOfGestureVelocity:(double)arg1;
- (void)setInjectedVelocityForNonInteractiveTransitions:(double)arg1;
- (void)setInjectsVelocityForNonInteractiveTransitions:(bool)arg1;
- (void)setInjectsVelocityOnlyForShortSwipes:(bool)arg1;
- (void)setInteractiveKeyboardPresentationOffset:(double)arg1;
- (void)setInteractiveKeyboardPresentationThreshold:(double)arg1;
- (void)setKeyboardFadeInStartValue:(double)arg1;
- (void)setKeyboardFadeProperty:(id)arg1;
- (void)setKeyboardFollowsSpotlightContent:(bool)arg1;
- (void)setKeyboardInjectedVelocityPercentage:(double)arg1;
- (void)setKeyboardInjectedVelocityPercentageForNonInteractiveTransitions:(double)arg1;
- (void)setKeyboardProtectorPortalView:(id)arg1;
- (void)setKeyboardView:(id)arg1;
- (void)setMaxPresentationOffset:(double)arg1;
- (void)setOutstandingAnimationCount:(unsigned long long)arg1;
- (void)setPresentationOffset:(double)arg1;
- (void)setPresentationProgress:(double)arg1;
- (void)setPresentationState:(long long)arg1;
- (void)setPreviousPresentationState:(long long)arg1;
- (void)setPullTransitionDistance:(double)arg1;
- (void)setScaleProperty:(id)arg1;
- (void)setScaleSettings:(id)arg1;
- (void)setScaleView:(id)arg1;
- (void)setScalesSearchAffordanceContentWhileFading:(bool)arg1;
- (void)setSearchAffordance:(id)arg1;
- (void)setSearchAffordanceBackgroundCapturingView:(id)arg1;
- (void)setSearchAffordanceContentContainerView:(id)arg1;
- (void)setSearchAffordanceContentFadeRange:(struct SBSpotlightTransitionRange { double x1; double x2; })arg1;
- (void)setSearchAffordanceMaxOffset:(double)arg1;
- (void)setSearchAffordanceMaxScaleX:(double)arg1;
- (void)setSearchAffordanceMaxScaleY:(double)arg1;
- (void)setSearchAffordanceOffsetRubberbandingRange:(double)arg1;
- (void)setSearchAffordancePresentationState:(long long)arg1;
- (void)setSearchAffordanceReferenceFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setSearchAffordanceReferenceView:(id)arg1;
- (void)setSearchAffordanceScaleAndTranslateRange:(struct SBSpotlightTransitionRange { double x1; double x2; })arg1;
- (void)setSearchAffordanceScaleRubberbandingRange:(double)arg1;
- (void)setSearchAffordanceTransientFadeInThreshold:(double)arg1;
- (void)setSearchAnimationSettings:(id)arg1;
- (void)setSearchBackgroundView:(id)arg1;
- (void)setSearchBarBackgroundPortalView:(id)arg1;
- (void)setSearchBarContentFadeRange:(struct SBSpotlightTransitionRange { double x1; double x2; })arg1;
- (void)setSearchBarPortalClippingContainerView:(id)arg1;
- (void)setSearchBarPortalRequirementReasons:(id)arg1;
- (void)setSearchBarPortalView:(id)arg1;
- (void)setSearchContentFadeInRange:(struct SBSpotlightTransitionRange { double x1; double x2; })arg1;
- (void)setSearchContentFadeInStartValue:(double)arg1;
- (void)setSearchContentFadeOutRange:(struct SBSpotlightTransitionRange { double x1; double x2; })arg1;
- (void)setSearchContentFadeProperty:(id)arg1;
- (void)setSearchContentInteractiveFadeInDistance:(double)arg1;
- (void)setSearchTransitionSettings:(id)arg1;
- (void)setShortSwipeMaximumPercentageOfExpectedVelocity:(double)arg1;
- (void)setSpotlightActivationThreshold:(double)arg1;
- (void)setSpotlightScale:(double)arg1 interactive:(bool)arg2;
- (void)setTopOffset:(double)arg1;
- (void)setWaitingForKeyboardPresentationForFadeIn:(bool)arg1;
- (void)setWaitingForSearchContentAvailabilityForFadeIn:(bool)arg1;
- (void)settings:(id)arg1 changedValueForKey:(id)arg2;
- (double)shortSwipeMaximumPercentageOfExpectedVelocity;
- (double)spotlightActivationThreshold;
- (id)spotlightMultiplexingViewController;
- (void)spotlightMultiplexingViewController:(id)arg1 externalKeyboardViewContainsKeyboardDidChange:(bool)arg2;
- (void)spotlightMultiplexingViewController:(id)arg1 searchContentAvailabilityDidChange:(bool)arg2;
- (bool)supportsSeparateSearchBarBackground;
- (double)topOffset;
- (void)updatePresentationProgress:(double)arg1 withOffset:(double)arg2 velocity:(double)arg3 presentationState:(long long)arg4;
- (void)viewDidLoad;
- (void)viewDidMoveToWindow:(id)arg1 shouldAppearOrDisappear:(bool)arg2;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (bool)waitingForKeyboardPresentationForFadeIn;
- (bool)waitingForSearchContentAvailabilityForFadeIn;
- (id /* block */)willBeginModifyingPresentationProgressForState:(long long)arg1 animated:(bool)arg2 needsInitialLayout:(bool*)arg3;

@end
