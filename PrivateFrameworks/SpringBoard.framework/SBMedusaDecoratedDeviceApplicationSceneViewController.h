
@interface SBMedusaDecoratedDeviceApplicationSceneViewController : UIViewController <SBDeviceApplicationSceneHandleObserver, SBDeviceApplicationSceneStatusBarStateObserver, SBDeviceApplicationSceneViewControllerDelegate, SBMedusaDecoratedDeviceApplicationSceneViewControlling, SBMedusaDecoratedDeviceApplicationSceneViewControlling_Internal, SBSceneViewStatusBarAssertionObserver, SBTopAffordanceViewControllerDelegate, SBUIActiveOrientationObserver, UIGestureRecognizerDelegate> {
    UIApplicationSceneClientSettingsDiffInspector * _applicationSceneClientSettingsDiffInspector;
    SBApplicationBlurContentView * _blurView;
    long long  _blurViewAnimationCount;
    UIView * _blurViewContainerView;
    UIView * _containerView;
    UIView * _darkenView;
    double  _darkenViewAlpha;
    <SBMedusaDecoratedDeviceApplicationSceneViewControllerDelegate> * _delegate;
    SBDeviceApplicationSceneHandle * _deviceApplicationSceneHandle;
    SBDeviceApplicationSceneViewController * _deviceApplicationSceneViewController;
    long long  _disableAsyncRenderingCount;
    UIDropInteraction * _dropInteraction;
    long long  _floatingConfiguration;
    bool  _isBlurred;
    bool  _isInsetForHomeAffordance;
    bool  _isZoomed;
    long long  _layoutRole;
    NSMutableSet * _matchMoveAnimationRequiringReasons;
    SBMedusaSettings * _medusaSettings;
    bool  _nubViewHidden;
    bool  _nubViewHighlighted;
    NSString * _sceneMinificationFilter;
    bool  _sceneRendersAsynchronously;
    SBSetupManager * _setupManager;
    long long  _spaceConfiguration;
    NSHashTable * _statusBarAssertions;
    UITapGestureRecognizer * _topAffordanceTapGestureRecognizer;
    SBTopAffordanceViewController * _topAffordanceViewController;
    SBMainWorkspace * _workspace;
}

@property (nonatomic, readonly) UIView *_blurViewContainerView;
@property (nonatomic) <SBApplicationSceneViewControllingStatusBarDelegate> *applicationSceneStatusBarDelegate;
@property (nonatomic, retain) UIView<SBApplicationSceneBackgroundView> *backgroundView;
@property (nonatomic) double blurViewIconScale;
@property (getter=isBlurred, nonatomic, readonly) bool blurred;
@property (nonatomic, readonly) long long containerOrientation;
@property (nonatomic, readonly) long long contentOrientation;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } contentReferenceSize;
@property (nonatomic, retain) UIView *customContentView;
@property (nonatomic) double darkenViewAlpha;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <SBMedusaDecoratedDeviceApplicationSceneViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) long long displayMode;
@property (nonatomic, retain) UIDropInteraction *dropInteraction;
@property (nonatomic, readonly) long long floatingConfiguration;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long homeGrabberDisplayMode;
@property (nonatomic, retain) MTLumaDodgePillSettings *homeGrabberPillSettings;
@property (nonatomic, readonly) SBHomeGrabberView *homeGrabberView;
@property (getter=isInsetForHomeAffordance, nonatomic) bool insetForHomeAffordance;
@property (nonatomic, readonly) long long layoutRole;
@property (getter=isNubViewHidden, nonatomic) bool nubViewHidden;
@property (getter=isNubViewHighlighted, nonatomic) bool nubViewHighlighted;
@property (nonatomic, readonly) long long overrideStatusBarStyle;
@property (nonatomic, retain) <SBScenePlaceholderContentContext> *placeholderContentContext;
@property (nonatomic, readonly) UIView *sceneContentView;
@property (nonatomic, readonly) SBDeviceApplicationSceneHandle *sceneHandle;
@property (nonatomic, copy) NSString *sceneMinificationFilter;
@property (nonatomic) bool sceneRendersAsynchronously;
@property (nonatomic) bool sceneResizesHostedContext;
@property (nonatomic, readonly) long long spaceConfiguration;
@property (nonatomic, readonly) double statusBarAlpha;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (bool)SB_conformsToMedusaDecoratedDeviceApplicationSceneViewControlling;
- (bool)SB_conformsToSceneLayoutMedusaStatusBarAssertionProviding;
- (bool)SB_conformsToSceneLayoutStatusBarAssertionProviding;
- (void)_addSceneViewMatchMoveAnimation;
- (void)_beginRequiringSceneViewMatchMoveAnimationForReason:(id)arg1;
- (id)_blurContentView;
- (id)_blurViewContainerView;
- (void)_createOrDestroyTopAffordanceViewControllerAnimated:(bool)arg1;
- (void)_elasticValueViewControllerWillDismiss:(id)arg1;
- (void)_elasticValueViewControllerWillPresent:(id)arg1;
- (void)_endRequiringSceneViewMatchMoveAnimationForReason:(id)arg1;
- (void)_guidedAccessActivationChanged:(id)arg1;
- (void)_handleSplitHomeScreenSwitcherKeyShortcut;
- (void)_handleTopAffordanceTapGestureRecognizerAction:(id)arg1;
- (void)_hardwareKeyboardAvailabilityChanged:(id)arg1;
- (bool)_isChamoisWindowingUIEnabled;
- (void)_medusaEnabledStateChanged:(id)arg1;
- (void)_modifyApplicationContext:(id)arg1 handleActionType:(long long)arg2 spaceConfiguration:(long long)arg3 layoutRole:(long long)arg4 desiredFloatingConfiguration:(long long)arg5;
- (void)_removeSceneViewMatchMoveAnimation;
- (bool)_sceneViewHasMatchMoveAnimation;
- (void)_sendStatusBarScrollToTopActionForGestureRecognizer:(id)arg1;
- (void)_setBlurContentView:(id)arg1;
- (void)_setTopAffordanceAutoHides:(bool)arg1;
- (void)_topAffordanceViewController:(id)arg1 handleActionType:(long long)arg2 desiredFloatingConfiguration:(long long)arg3 transitionSource:(long long)arg4;
- (void)_topAffordanceViewController:(id)arg1 handleActionType:(long long)arg2 transitionSource:(long long)arg3;
- (void)_topAffordanceViewControllerHandleCloseAction;
- (bool)_topAffordanceViewControllerHandleMoveToDisplayAction:(id)arg1 transitionSource:(long long)arg2;
- (void)_updateAsyncRendering;
- (void)_updateCurrentTopAffordanceAlpha;
- (void)_updateTopAffordanceHighlight;
- (void)_updateTopAffordanceInset;
- (bool)_wantsTopAffordance;
- (void)_windowManagementStyleDidChange:(id)arg1;
- (void)activeInterfaceOrientationDidChangeToOrientation:(long long)arg1 willAnimateWithDuration:(double)arg2 fromOrientation:(long long)arg3;
- (void)activeInterfaceOrientationWillChangeToOrientation:(long long)arg1;
- (id)applicationSceneStatusBarDelegate;
- (void)applicationSceneViewController:(id)arg1 statusBarTapped:(id)arg2 tapActionType:(long long)arg3;
- (void)applicationSceneViewControllerDidUpdateHomeAffordanceSupportedOrientations:(id)arg1;
- (bool)applicationSceneViewControllerIsInNonrotatingWindow:(id)arg1;
- (id)backgroundActivitiesToSuppress;
- (id)backgroundView;
- (long long)bestHomeAffordanceOrientationForOrientation:(long long)arg1;
- (double)blurViewIconScale;
- (void)conformsToProtocolSBDeviceApplicationSceneViewControlling;
- (void)containerContentWrapperInterfaceOrientationChangedTo:(long long)arg1;
- (void)containerDidUpdateTraitsParticipant:(id)arg1;
- (long long)containerOrientation;
- (long long)contentOrientation;
- (struct CGSize { double x1; double x2; })contentReferenceSize;
- (double)currentStatusBarHeight;
- (id)customContentView;
- (double)darkenViewAlpha;
- (void)dealloc;
- (id)delegate;
- (void)didRotateFromInterfaceOrientation:(long long)arg1 toInterfaceOrientation:(long long)arg2;
- (long long)displayMode;
- (id)dropInteraction;
- (long long)floatingConfiguration;
- (bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)hitTestToTopAffordance:(struct CGPoint { double x1; double x2; })arg1 window:(id)arg2;
- (long long)homeGrabberDisplayMode;
- (id)homeGrabberPillSettings;
- (id)homeGrabberView;
- (id)initWithCoder:(id)arg1;
- (id)initWithDeviceApplicationSceneHandle:(id)arg1 layoutRole:(long long)arg2;
- (id)initWithDeviceApplicationSceneHandle:(id)arg1 layoutRole:(long long)arg2 workspace:(id)arg3 setupManager:(id)arg4;
- (void)invalidate;
- (bool)isBlurred;
- (bool)isInsetForHomeAffordance;
- (bool)isNubViewHidden;
- (bool)isNubViewHighlighted;
- (long long)layoutRole;
- (void)layoutStateTransitionCoordinator:(id)arg1 transitionDidBeginWithTransitionContext:(id)arg2;
- (void)layoutStateTransitionCoordinator:(id)arg1 transitionDidEndWithTransitionContext:(id)arg2;
- (void)layoutStateTransitionCoordinator:(id)arg1 transitionWillEndWithTransitionContext:(id)arg2;
- (long long)leadingStatusBarStyle;
- (void)loadView;
- (id)newSnapshot;
- (id)newSnapshotView;
- (void)newSnapshotViewOnQueue:(id)arg1 withCompletion:(id /* block */)arg2;
- (long long)overrideStatusBarStyle;
- (void)performSwitcherKeyboardShortcutAction:(long long)arg1;
- (id)placeholderContentContext;
- (id)prepareForContentRotation;
- (id)sceneContentView;
- (id)sceneHandle;
- (void)sceneHandle:(id)arg1 didCreateScene:(id)arg2;
- (void)sceneHandle:(id)arg1 didUpdateClientSettingsWithDiff:(id)arg2 transitionContext:(id)arg3;
- (id)sceneMinificationFilter;
- (bool)sceneRendersAsynchronously;
- (bool)sceneResizesHostedContext;
- (void)sceneWithIdentifier:(id)arg1 didChangeStatusBarStyleTo:(long long)arg2;
- (void)sceneWithIdentifier:(id)arg1 didChangeStatusBarStyleTo:(long long)arg2 forPartWithIdentifier:(id)arg3;
- (void)setApplicationSceneStatusBarDelegate:(id)arg1;
- (void)setBackgroundView:(id)arg1;
- (void)setBlurViewIconScale:(double)arg1;
- (void)setContentReferenceSize:(struct CGSize { double x1; double x2; })arg1 withContentOrientation:(long long)arg2 andContainerOrientation:(long long)arg3;
- (void)setCustomContentView:(id)arg1;
- (void)setDarkenViewAlpha:(double)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDisplayMode:(long long)arg1 animationFactory:(id)arg2 completion:(id /* block */)arg3;
- (void)setDropInteraction:(id)arg1;
- (void)setHomeGrabberDisplayMode:(long long)arg1;
- (void)setHomeGrabberPillSettings:(id)arg1;
- (void)setInsetForHomeAffordance:(bool)arg1;
- (void)setLayoutRole:(long long)arg1 spaceConfiguration:(long long)arg2 floatingConfiguration:(long long)arg3 sizingPolicy:(long long)arg4;
- (void)setLiveContentBlurEnabled:(bool)arg1 duration:(double)arg2 blurDelay:(double)arg3 iconViewScale:(double)arg4 began:(id /* block */)arg5 completion:(id /* block */)arg6;
- (void)setNubViewHidden:(bool)arg1;
- (void)setNubViewHighlighted:(bool)arg1;
- (void)setPlaceholderContentContext:(id)arg1;
- (void)setSceneMinificationFilter:(id)arg1;
- (void)setSceneRendersAsynchronously:(bool)arg1;
- (void)setSceneResizesHostedContext:(bool)arg1;
- (long long)spaceConfiguration;
- (double)statusBarAlpha;
- (void)statusBarAssertionDidInvalidate:(id)arg1;
- (void)statusBarAssertionDidUpdate:(id)arg1;
- (id)statusBarAssertionWithStatusBarHidden:(bool)arg1 atLevel:(unsigned long long)arg2;
- (id)statusBarAssertionWithStatusBarHidden:(bool)arg1 nubViewHidden:(long long)arg2 atLevel:(unsigned long long)arg3;
- (id)topAffordanceView;
- (void)topAffordanceViewController:(id)arg1 handleActionType:(long long)arg2;
- (void)topAffordanceViewControllerWillPresentMenu:(id)arg1;
- (long long)trailingStatusBarStyle;
- (void)updateTopAffordanceContextMenu;
- (void)updateTopAffordanceOverrideUserInterfaceStyle;
- (void)viewWillLayoutSubviews;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (void)willMoveToParentViewController:(id)arg1;
- (void)willRotateFromInterfaceOrientation:(long long)arg1 toInterfaceOrientation:(long long)arg2 alongsideContainerView:(id)arg3 animated:(bool)arg4;

@end
