
@interface SBSystemApertureController : NSObject <PTSettingsKeyObserver, SAElementRegistering, SBButtonEventsHandler, SBFBacklightEnvironmentSceneProviding, SBSystemApertureBackgroundActivitiesSuppressing, SBSystemApertureBacklightSessionAggregator, SBSystemApertureElementOrientationAuthority, SBSystemApertureProximityBacklightPolicyDelegate, SBSystemApertureRestrictionServerDelegate, SBSystemApertureViewControllerVisibilityDelegate, SBTraitsParticipantDelegate> {
    UIWindow * _auxillarySuperHighLevelWindow;
    bool  _containsAnyContent;
    SBSystemApertureCaptureVisibilityShimViewController * _curtainCloningShimViewController;
    FBScene * _highLevelWindowScene;
    <SAInvalidatable> * _jindoDefaultsSuppressionAssertion;
    SBSystemApertureStatusBarPillElementProvider * _legacyStatusBarPillElementProvider;
    SBSystemApertureCaptureVisibilityShimViewController * _mainCloningShimViewController;
    CAGainMapLayer * _prototypingDefaultGainMapDefeatingLayer;
    bool  _registeredBacklightSceneProvider;
    SBSystemApertureSceneHoster * _sceneHoster;
    SBSystemApertureSettings * _settings;
    FBScene * _superHighLevelWindowScene;
    SBSystemApertureCurtainViewController * _systemApertureCurtainViewController;
    SBSystemApertureDefaults * _systemApertureDefaults;
    SBSystemApertureLayoutMonitorServer * _systemApertureLayoutMonitorServer;
    SBSystemAperturePortalSourceInfoRequestServer * _systemAperturePortalSourceRequestServer;
    SBSystemAperturePresentableManager * _systemAperturePresentableManager;
    SBSystemApertureRestrictionServer * _systemApertureRestrictionServer;
    NSMutableArray * _systemApertureSuppressionAssertions;
    SBSystemApertureViewController * _systemApertureViewController;
    TRAParticipant * _traitsParticipant;
    UIWindow * _window;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_applyOrientation:(long long)arg1 withPreviousOrientation:(long long)arg2 animationSettings:(id)arg3;
- (void)_configureBacklightEnvironmentSceneProviderIfNecessary;
- (void)_configureLegacyStatusBarPillElementProviderIfNecessary;
- (void)_configureNoticeManagerIfNecessary;
- (id)_createHighLevelSystemApertureSceneWithIdentifier:(id)arg1 sceneSpecificiation:(id)arg2 displayConfiguration:(id)arg3 atLevel:(float)arg4;
- (id)_currentFirstElement;
- (void)_reevaluateSystemApertureCompleteSuppression;
- (void)_updateSuppressionForDefaults;
- (void)_updateVisibilityForCloningAndSnapshots;
- (id)acquireActiveElementAssertionForApplication:(id)arg1 reason:(id)arg2;
- (id)acquireSuppressionAssertionForBackgroundActivities:(id)arg1 reason:(id)arg2;
- (long long)activeElementInterfaceOrientationForSystemApertureElementOrientationObserver:(id)arg1;
- (void)animateDiscreteAnimationStyle:(long long)arg1 toElement:(id)arg2;
- (void)animateTransitionAcceptanceBounceWithVelocityVector:(struct CGPoint { double x1; double x2; })arg1 triggeredBlock:(id /* block */)arg2;
- (void)animateTransitionEjectionStretchWithVelocityVector:(struct CGPoint { double x1; double x2; })arg1;
- (void)appendDescriptionForParticipant:(id)arg1 withBuilder:(id)arg2 multilinePrefix:(id)arg3;
- (id)applyPersistentAnimationStyle:(long long)arg1 toElement:(id)arg2;
- (void)createHighLevelSystemApertureWindowWithWindowScene:(id)arg1;
- (void)createHighLevelWindowSceneWithDisplayConfiguration:(id)arg1;
- (void)createSuperHighLevelCurtainWindowSceneWithDisplayConfiguration:(id)arg1;
- (void)createSuperHighLevelCurtainWithWindowScene:(id)arg1;
- (void)dealloc;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })defaultIslandFrameInCoordinateSpace:(id)arg1;
- (void)didChangeSettingsForParticipant:(id)arg1 context:(id)arg2;
- (bool)handleHeadsetButtonPress:(bool)arg1;
- (bool)handleHomeButtonDoublePress;
- (bool)handleHomeButtonLongPress;
- (bool)handleHomeButtonPress;
- (bool)handleLockButtonPress;
- (bool)handleVoiceCommandButtonPress;
- (bool)handleVolumeDownButtonPress;
- (bool)handleVolumeUpButtonPress;
- (void)hostedScenesDidChange;
- (id)initWithWindowScene:(id)arg1;
- (bool)isTransitionTargetForSceneIdentifier:(id)arg1 bundleIdentifier:(id)arg2;
- (long long)overrideRenderingStyle;
- (id)participantAssociatedWindows:(id)arg1;
- (id)registerElement:(id)arg1;
- (id)requireHeavyShadowAssertionForTransition;
- (id)requireKeyLineAssertionForTransition;
- (id)restrictSystemApertureToDefaultLayoutWithReason:(id)arg1;
- (id)restrictSystemApertureToInertWithReason:(id)arg1;
- (id)scenesForBacklightSession;
- (void)setOverrideRenderingStyle:(long long)arg1;
- (void)settings:(id)arg1 changedValueForKey:(id)arg2;
- (id)stateDump;
- (id)suppressSystemApertureCompletelyWithReason:(id)arg1;
- (void)systemApertureProximityBacklightPolicy:(id)arg1 embedProximityTouchTrackingView:(id)arg2 touchBlockingView:(id)arg3;
- (bool)systemApertureProximityBacklightPolicy:(id)arg1 isSystemApertureElementVisibleAtPoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)systemApertureProximityBacklightPolicy:(id)arg1 removeProximityTouchTrackingView:(id)arg2 touchBlockingView:(id)arg3;
- (bool)systemApertureProximityBacklightPolicyShouldConsiderSystemApertureInert:(id)arg1;
- (bool)systemApertureProximityBacklightPolicyShouldDisableGracePeriod:(id)arg1;
- (id)systemApertureRepresentationSuppressionAssertionForCoversheetVisibility;
- (id)systemApertureRepresentationSuppressionAssertionForLiquidDetectionVisibility;
- (void)systemApertureViewController:(id)arg1 containsAnyContent:(bool)arg2;
- (void)updatePreferencesForParticipant:(id)arg1 updater:(id)arg2;

@end
