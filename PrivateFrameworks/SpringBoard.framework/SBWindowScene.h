
@interface SBWindowScene : UIWindowScene <SBWindowSceneContextProviding> {
    bool  _isInvalidated;
    bool  _isInvalidating;
}

@property (nonatomic, readonly) SBAlertItemsController *alertItemsController;
@property (nonatomic, readonly) SBAmbientPresentationController *ambientPresentationController;
@property (nonatomic, readonly) SBDisplayAppInteractionEventSource *appInteractionEventSource;
@property (nonatomic, readonly) <SBAssistantSceneControlling> *assistantController;
@property (nonatomic, readonly) BNBannerController *bannerController;
@property (nonatomic, readonly) SBControlCenterController *controlCenterController;
@property (nonatomic, readonly) SBCoverSheetPresentationManager *coverSheetPresentationManager;
@property (nonatomic, readonly) CSCoverSheetViewController *coverSheetViewController;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, retain) <SBWindowSceneDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) <FBSDisplayLayoutPublishing> *displayLayoutPublisher;
@property (nonatomic, readonly) SBFloatingDockController *floatingDockController;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isExternalDisplayWindowScene;
@property (nonatomic, readonly) bool isMainDisplayWindowScene;
@property (nonatomic, readonly) SBMainDisplayLayoutStateManager *layoutStateManager;
@property (nonatomic, readonly) SBSceneLayoutStateProvider *layoutStateProvider;
@property (nonatomic, readonly) SBLayoutStateTransitionCoordinator *layoutStateTransitionCoordinator;
@property (nonatomic, readonly) SBLockScreenManager *lockScreenManager;
@property (nonatomic, readonly) SBLockedPointerManager *lockedPointerManager;
@property (nonatomic, readonly) SBMedusaHostedKeyboardWindowController *medusaHostedKeyboardWindowController;
@property (nonatomic, readonly) SBModalAlertPresentationCoordinator *modalAlertPresentationCoordinator;
@property (nonatomic, readonly) SBModalLibraryController *modalLibraryController;
@property (nonatomic, readonly) SBModalUIFluidDismissGestureManager *modalUIFluidDismissGestureManager;
@property (nonatomic, readonly) SBWindowScenePIPManager *pictureInPictureManager;
@property (nonatomic, readonly) SBReachabilitySceneController *reachabilityController;
@property (nonatomic, readonly) SBRecordingIndicatorManager *recordingIndicatorManager;
@property (nonatomic, readonly) SBSceneManager *sceneManager;
@property (readonly) Class superclass;
@property (nonatomic, readonly) SBSwitcherController *switcherController;
@property (nonatomic, readonly) SBSystemApertureController *systemApertureController;
@property (nonatomic, readonly) SBSystemGestureManager *systemGestureManager;
@property (nonatomic, readonly) SBSystemPointerInteractionManager *systemPointerInteractionManager;
@property (nonatomic, readonly) TRAArbiter *traitsArbiter;
@property (nonatomic, readonly) SBTraitsPipelineManager *traitsPipelineManager;
@property (nonatomic, readonly) <SBTransientOverlayPresenting> *transientOverlayPresenter;
@property (nonatomic, readonly) SBTransientUIInteractionManager *transientUIInteractionManager;
@property (nonatomic, readonly) <SBUILockStateProviding> *uiLockStateProvider;
@property (nonatomic, readonly) SBWallpaperController *wallpaperController;
@property (nonatomic, readonly) SBWindowHidingManager *windowHidingManager;
@property (nonatomic, readonly) SBFZStackResolver *zStackResolver;

- (id)_abstractWindowSceneDelegate;
- (bool)_windowsIgnoreSceneClientOrientation;
- (id)alertItemsController;
- (id)ambientPresentationController;
- (id)appInteractionEventSource;
- (id)assistantController;
- (id)bannerController;
- (id)controlCenterController;
- (struct CGPoint { double x1; double x2; })convertPoint:(struct CGPoint { double x1; double x2; })arg1 toNeighboringDisplayWindowScene:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 toNeighboringDisplayWindowScene:(id)arg2;
- (id)coverSheetPresentationManager;
- (id)coverSheetViewController;
- (id)displayLayoutPublisher;
- (id)floatingDockController;
- (void)invalidate;
- (bool)isExternalDisplayWindowScene;
- (bool)isInvalidated;
- (bool)isInvalidating;
- (bool)isMainDisplayWindowScene;
- (id)layoutStateManager;
- (id)layoutStateProvider;
- (id)layoutStateTransitionCoordinator;
- (id)lockScreenManager;
- (id)lockedPointerManager;
- (id)medusaHostedKeyboardWindowController;
- (id)modalAlertPresentationCoordinator;
- (id)modalLibraryController;
- (id)modalUIFluidDismissGestureManager;
- (id)pictureInPictureManager;
- (id)reachabilityController;
- (id)recordingIndicatorManager;
- (id)sceneManager;
- (void)setInvalidating:(bool)arg1;
- (id)succinctDescription;
- (id)succinctDescriptionBuilder;
- (id)switcherController;
- (id)systemApertureController;
- (id)systemGestureManager;
- (id)systemPointerInteractionManager;
- (id)traitsArbiter;
- (id)traitsPipelineManager;
- (id)transientOverlayPresenter;
- (id)transientUIInteractionManager;
- (id)uiLockStateProvider;
- (id)wallpaperController;
- (id)windowHidingManager;
- (id)zStackResolver;

@end
