
@interface SBTransientOverlayViewController : UIViewController <BSDescriptionProviding, SBButtonEventsHandler, SBFIdleTimerBehaviorProviding, SBHomeGrabberDelegate, SBIdleTimerProviding, SBSDisplayLayoutElementProviding> {
    bool  _allowsStackingOverlayContentAbove;
    long long  _appearanceUpdateIgnoreCount;
    NSSet * _associatedBundleIdentifiersToSuppressInSystemAperture;
    NSSet * _associatedSceneIdentifiersToSuppressInSystemAperture;
    bool  _attachedToWindowedAccessory;
    NSSet * _audioCategoriesDisablingVolumeHUD;
    UIView * _backgroundView;
    bool  _canBecomeLocalFirstResponder;
    long long  _containerOrientation;
    UIView * _contentContainerView;
    bool  _contentOpaque;
    long long  _contentOverlayInsetUpdateIgnoreCount;
    UIView * _contentView;
    UIStatusBarStyleRequest * _currentStatusBarStyleRequest;
    UIView * _dimmingView;
    bool  _dismissesForCoverSheetPresentation;
    SBSDisplayLayoutElement * _displayLayoutElement;
    <BSInvalidatable> * _displayLayoutElementAssertion;
    SBFHomeGrabberSettings * _grabberSettings;
    SBHomeGrabberView * _grabberView;
    bool  _hasPreservedInputViews;
    UIView * _homeGrabberContainerView;
    <SBIdleTimerCoordinating> * _idleTimerCoordinator;
    bool  _isDisplayLayoutElementActive;
    SBKeyboardHomeAffordanceAssertion * _keyboardHomeAffordanceAssertion;
    UIWindow * _keyboardHomeAffordanceAssertionWindow;
    long long  _keyboardVisible;
    int  _pictureInPictureProcessIdentifier;
    NSSet * _preferredBackgroundActivitiesToSuppress;
    long long  _preferredLockedGestureDismissalStyle;
    long long  _preferredUnlockedGestureDismissalStyle;
    bool  _prefersEmbeddedDisplayPresentation;
    bool  _prefersProximityDetectionEnabled;
    bool  _prefersStatusBarActivityItemVisible;
    bool  _prefersWindowHitTestingDisabled;
    bool  _presentationAllowsHomeGrabberAutoHide;
    UIView * _presentationBackgroundView;
    double  _presentationContentCornerRadius;
    struct CGAffineTransform { 
        double a; 
        double b; 
        double c; 
        double d; 
        double tx; 
        double ty; 
    }  _presentationContentTransform;
    bool  _presentationDimmingViewHidden;
    double  _presentationHomeGrabberAdditionalEdgeSpacing;
    double  _presentationHomeGrabberAlpha;
    struct CGAffineTransform { 
        double a; 
        double b; 
        double c; 
        double d; 
        double tx; 
        double ty; 
    }  _presentationHomeGrabberTransform;
    long long  _presentationPrefersHomeGrabberHidden;
    bool  _presentationPrefersStatusBarHidden;
    bool  _preventsDismissalOnLockForInactiveScreen;
    bool  _preventsSystemApertureSuppressionFromBelow;
    SBDisplayItem * _representedDisplayItem;
    bool  _shouldDisableBanners;
    bool  _shouldDisableControlCenter;
    bool  _shouldDisableInteractiveScreenshotGesture;
    bool  _shouldDisableOrientationUpdates;
    bool  _shouldDisableReachability;
    bool  _shouldDisableSiri;
    bool  _shouldPendAlertItems;
    bool  _shouldPreventDragAndDrop;
    bool  _shouldUseSceneBasedKeyboardFocus;
    UIStatusBar * _statusBar;
    bool  _supportsAlwaysOnDisplay;
    <SBTransientOverlayViewControllerDelegate> * _transientOverlayDelegate;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _windowedAccessoryCutoutFrameInScreen;
}

@property (nonatomic, readonly) bool allowsStackingOverlayContentAbove;
@property (nonatomic, readonly, copy) NSSet *associatedBundleIdentifiersToSuppressInSystemAperture;
@property (nonatomic, readonly, copy) NSSet *associatedSceneIdentifiersToSuppressInSystemAperture;
@property (getter=isAttachedToWindowedAccessory, nonatomic, readonly) bool attachedToWindowedAccessory;
@property (nonatomic, readonly) NSSet *audioCategoriesDisablingVolumeHUD;
@property (nonatomic, readonly) UIView *backgroundView;
@property (nonatomic, readonly) bool canBecomeLocalFirstResponder;
@property (nonatomic) long long containerOrientation;
@property (getter=isContentOpaque, nonatomic, readonly) bool contentOpaque;
@property (nonatomic, readonly) UIView *contentView;
@property (nonatomic, readonly, copy) UIStatusBarStyleRequest *currentStatusBarStyleRequest;
@property (nonatomic, readonly) double customIdleExpirationTimeout;
@property (nonatomic, readonly) double customIdleWarningTimeout;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) bool dismissesForCoverSheetPresentation;
@property (nonatomic, readonly) bool dismissesSiriForPresentation;
@property (getter=_displayLayoutElement, nonatomic, readonly) SBSDisplayLayoutElement *displayLayoutElement;
@property (getter=isDisplayLayoutElementActive, nonatomic) bool displayLayoutElementActive;
@property (nonatomic, retain) SBHomeGrabberView *grabberView;
@property (nonatomic, readonly) bool hasVisibleStatusBar;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) long long homeAffordanceSuppression;
@property (nonatomic) <SBIdleTimerCoordinating> *idleTimerCoordinator;
@property (nonatomic, readonly) long long idleTimerDuration;
@property (nonatomic, readonly) long long idleTimerMode;
@property (nonatomic, readonly) long long idleWarnMode;
@property (nonatomic, readonly) bool isIgnoringAppearanceUpdates;
@property (nonatomic, readonly) bool isIgnoringContentOverlayInsetUpdates;
@property (nonatomic, readonly) int pictureInPictureProcessIdentifier;
@property (nonatomic, readonly, copy) NSSet *preferredBackgroundActivitiesToSuppress;
@property (nonatomic, readonly, copy) NSString *preferredDisplayLayoutElementIdentifier;
@property (nonatomic, readonly) long long preferredLockedGestureDismissalStyle;
@property (nonatomic, readonly, copy) NSNumber *preferredSceneDeactivationReasonValue;
@property (nonatomic, readonly, copy) _UILegibilitySettings *preferredStatusBarLegibilitySettings;
@property (nonatomic, readonly) long long preferredUnlockedGestureDismissalStyle;
@property (nonatomic, readonly) bool prefersEmbeddedDisplayPresentation;
@property (nonatomic, readonly) bool prefersProximityDetectionEnabled;
@property (nonatomic, readonly) bool prefersStatusBarActivityItemVisible;
@property (nonatomic, readonly) bool prefersWindowHitTestingDisabled;
@property (nonatomic) bool presentationAllowsHomeGrabberAutoHide;
@property (nonatomic) double presentationContentCornerRadius;
@property (nonatomic) struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; } presentationContentTransform;
@property (nonatomic) double presentationDimmingAlpha;
@property (nonatomic, readonly) UIColor *presentationDimmingViewColor;
@property (nonatomic) bool presentationDimmingViewHidden;
@property (nonatomic) double presentationHomeGrabberAdditionalEdgeSpacing;
@property (nonatomic) double presentationHomeGrabberAlpha;
@property (nonatomic) struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; } presentationHomeGrabberTransform;
@property (nonatomic, readonly) bool presentationPrefersStatusBarHidden;
@property (nonatomic, readonly) bool preservesAppSwitcherDuringPresentationAndDismissal;
@property (nonatomic, readonly) bool preventsClippingToBounds;
@property (nonatomic, readonly) bool preventsDismissalOnLockForInactiveScreen;
@property (nonatomic, readonly) bool preventsSystemApertureSuppressionFromBelow;
@property (nonatomic, readonly, copy) SBDisplayItem *representedDisplayItem;
@property (nonatomic, readonly, copy) id /* block */ sceneDeactivationPredicate;
@property (nonatomic, readonly) bool shouldDisableBanners;
@property (nonatomic, readonly) bool shouldDisableControlCenter;
@property (nonatomic, readonly) bool shouldDisableInteractiveScreenshotGesture;
@property (nonatomic, readonly) bool shouldDisableOrientationUpdates;
@property (nonatomic, readonly) bool shouldDisableReachability;
@property (nonatomic, readonly) bool shouldDisableSiri;
@property (nonatomic, readonly) bool shouldPendAlertItems;
@property (nonatomic, readonly) bool shouldPreventDragAndDrop;
@property (nonatomic, readonly) bool shouldUseSceneBasedKeyboardFocus;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsAlwaysOnDisplay;
@property (nonatomic) <SBTransientOverlayViewControllerDelegate> *transientOverlayDelegate;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } windowedAccessoryCutoutFrameInScreen;

- (void).cxx_destruct;
- (void)_applyStatusBarStyleRequestWithInitialStatusBarSettings:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_currentStatusBarFrameForStyle:(long long)arg1;
- (id)_displayLayoutElement;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_edgeInsetsForChildViewController:(id)arg1 insetsAreAbsolute:(bool*)arg2;
- (void)_invalidateKeyboardHomeAffordanceAssertion;
- (bool)_isKeyboardVisibleForSpringBoard;
- (void)_keyboardWillHideNotification:(id)arg1;
- (void)_keyboardWillShowNotification:(id)arg1;
- (id)_newHomeGrabberViewWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_updateGrabberViewConfiguration;
- (void)_updateGrabberViewHiddenConfigurationAnimated:(bool)arg1;
- (void)addPresentationBackgroundView:(id)arg1;
- (double)additionalEdgeSpacingForHomeGrabberView:(id)arg1;
- (bool)allowsStackingOverlayContentAbove;
- (id)associatedBundleIdentifiersToSuppressInSystemAperture;
- (id)associatedSceneIdentifiersToSuppressInSystemAperture;
- (id)audioCategoriesDisablingVolumeHUD;
- (id)backgroundView;
- (void)beginIgnoringAppearanceUpdates;
- (void)beginIgnoringContentOverlayInsetUpdates;
- (bool)canBecomeLocalFirstResponder;
- (long long)containerOrientation;
- (id)contentView;
- (id)coordinatorRequestedIdleTimerBehavior:(id)arg1;
- (id)currentStatusBarStyleRequest;
- (void)dealloc;
- (id)description;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
- (void)didTransitionToAttachedToWindowedAccessory:(bool)arg1 windowedAccessoryCutoutFrameInScreen:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (bool)dismissesForCoverSheetPresentation;
- (bool)dismissesSiriForPresentation;
- (void)endIgnoringAppearanceUpdates;
- (void)endIgnoringContentOverlayInsetUpdates;
- (id)grabberView;
- (bool)handleDoubleHeightStatusBarTap;
- (void)handleGestureDismissal;
- (bool)handleHeadsetButtonPress:(bool)arg1;
- (bool)handleHomeButtonDoublePress;
- (bool)handleHomeButtonLongPress;
- (bool)handleHomeButtonPress;
- (bool)handleLockButtonPress;
- (void)handlePictureInPictureDidBegin;
- (bool)handleVoiceCommandButtonPress;
- (bool)handleVolumeDownButtonPress;
- (bool)handleVolumeUpButtonPress;
- (void)handleWillShowKeyboard:(bool)arg1;
- (bool)hasVisibleStatusBar;
- (long long)homeAffordanceSuppression;
- (id)hostedSceneIdentityTokens;
- (id)idleTimerCoordinator;
- (long long)idleTimerDuration;
- (long long)idleTimerMode;
- (long long)idleWarnMode;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (bool)isAttachedToWindowedAccessory;
- (bool)isContentOpaque;
- (bool)isDisplayLayoutElementActive;
- (bool)isIgnoringAppearanceUpdates;
- (bool)isIgnoringContentOverlayInsetUpdates;
- (bool)isPresentedByBundleIdentifier:(id)arg1;
- (bool)isPresentedByProcess:(id)arg1;
- (bool)isPresentedFromSceneWithIdentityTokenString:(id)arg1;
- (id)newTransientOverlayDismissalTransitionCoordinator;
- (id)newTransientOverlayPresentationTransitionCoordinator;
- (int)pictureInPictureProcessIdentifier;
- (id)preferredBackgroundActivitiesToSuppress;
- (id)preferredDisplayLayoutElementIdentifier;
- (long long)preferredInterfaceOrientationForPresentation;
- (long long)preferredLockedGestureDismissalStyle;
- (id)preferredSceneDeactivationReasonValue;
- (id)preferredStatusBarLegibilitySettings;
- (long long)preferredUnlockedGestureDismissalStyle;
- (bool)prefersEmbeddedDisplayPresentation;
- (bool)prefersProximityDetectionEnabled;
- (bool)prefersStatusBarActivityItemVisible;
- (bool)prefersWindowHitTestingDisabled;
- (bool)presentationAllowsHomeGrabberAutoHide;
- (double)presentationContentCornerRadius;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })presentationContentTransform;
- (double)presentationDimmingAlpha;
- (id)presentationDimmingViewColor;
- (bool)presentationDimmingViewHidden;
- (double)presentationHomeGrabberAdditionalEdgeSpacing;
- (double)presentationHomeGrabberAlpha;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })presentationHomeGrabberTransform;
- (bool)presentationPrefersStatusBarHidden;
- (void)preserveInputViewsAnimated:(bool)arg1;
- (bool)preservesAppSwitcherDuringPresentationAndDismissal;
- (bool)preventsClippingToBounds;
- (bool)preventsDismissalOnLockForInactiveScreen;
- (bool)preventsSystemApertureSuppressionFromBelow;
- (void)removePresentationBackgroundView:(id)arg1;
- (id)representedDisplayItem;
- (void)restoreInputViewsAnimated:(bool)arg1;
- (id /* block */)sceneDeactivationPredicate;
- (void)setContainerOrientation:(long long)arg1;
- (void)setDisplayLayoutElementActive:(bool)arg1;
- (void)setGrabberView:(id)arg1;
- (void)setHomeGrabberPointerClickDelegate:(id)arg1;
- (void)setIdleTimerCoordinator:(id)arg1;
- (void)setNeedsAudioCategoriesDisablingVolumeHUDUpdate;
- (void)setNeedsContentOpaqueUpdate;
- (void)setNeedsFeaturePolicyUpdate;
- (void)setNeedsGestureDismissalStyleUpdate;
- (void)setNeedsIdleTimerReset;
- (void)setNeedsOrientationUpdatesDisabledUpdate;
- (void)setNeedsProximityDetectionUpdate;
- (void)setNeedsSceneDeactivationUpdate;
- (void)setNeedsStatusBarAppearanceUpdate;
- (void)setNeedsUpdateOfHomeIndicatorAutoHidden;
- (void)setNeedsUpdateOfScreenEdgesDeferringSystemGestures;
- (void)setNeedsWhitePointAdaptivityStyleUpdate;
- (void)setNeedsWindowHitTestingUpdate;
- (void)setPresentationAllowsHomeGrabberAutoHide:(bool)arg1;
- (void)setPresentationContentCornerRadius:(double)arg1;
- (void)setPresentationContentTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1;
- (void)setPresentationDimmingAlpha:(double)arg1;
- (void)setPresentationDimmingViewHidden:(bool)arg1;
- (void)setPresentationHomeGrabberAdditionalEdgeSpacing:(double)arg1;
- (void)setPresentationHomeGrabberAlpha:(double)arg1;
- (void)setPresentationHomeGrabberTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1;
- (void)setPresentationPrefersHomeGrabberHidden:(bool)arg1 animated:(bool)arg2;
- (void)setPresentationPrefersStatusBarHidden:(bool)arg1;
- (void)setPresentationPrefersStatusBarHidden:(bool)arg1 initialStatusBarSettings:(id)arg2;
- (void)setTransientOverlayDelegate:(id)arg1;
- (bool)shouldAllowAutoHideForHomeGrabberView:(id)arg1;
- (bool)shouldAllowThinStyleForHomeGrabberView:(id)arg1;
- (bool)shouldAutorotate;
- (bool)shouldDisableBanners;
- (bool)shouldDisableControlCenter;
- (bool)shouldDisableInteractiveScreenshotGesture;
- (bool)shouldDisableOrientationUpdates;
- (bool)shouldDisableReachability;
- (bool)shouldDisableSiri;
- (bool)shouldPendAlertItems;
- (bool)shouldPreventDragAndDrop;
- (bool)shouldUseSceneBasedKeyboardFocus;
- (id)succinctDescription;
- (id)succinctDescriptionBuilder;
- (unsigned long long)supportedInterfaceOrientations;
- (bool)supportsAlwaysOnDisplay;
- (id)transientOverlayDelegate;
- (void)updateDisplayLayoutElementWithBuilder:(id /* block */)arg1;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewDidMoveToWindow:(id)arg1 shouldAppearOrDisappear:(bool)arg2;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })windowedAccessoryCutoutFrameInScreen;

@end
