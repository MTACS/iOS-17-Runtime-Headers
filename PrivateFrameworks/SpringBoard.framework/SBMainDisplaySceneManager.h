
@interface SBMainDisplaySceneManager : SBSceneManager <BLSSceneDelegateWithActionHandlers, SBDisplayReferenceModeStatusObserver, SBIdleTimerCoordinating, SBIdleTimerProviding, SBLayoutStateSceneIdentityProviderDataSource, SBSuspendedUnderLockManagerDelegate> {
    UIApplicationSceneClientSettingsDiffInspector * _appClientSettingsDiffInspector;
    NSMapTable * _blsActionHandlersForScenes;
    SBDisplayReferenceModeMonitor * _displayReferenceModeMonitor;
    FBSSceneClientSettingsDiffInspector * _externalClientSettingsDiffInspector;
    SBFaceContactExpectationManager * _faceContactExpectationManager;
    <SBIdleTimerCoordinating> * _idleTimerCoordinator;
    UIApplicationSceneClientSettingsDiffInspector * _internalClientSettingsDiffInspector;
    bool  _isKeyboardDocked;
    SBSuspendedUnderLockManager * _lazy_suspendedUnderLockManager;
    SBPhysicalButtonSceneOverrideManager * _physicalButtonSceneOverrideManager;
    SBMainDisplayPolicyAggregator * _policyAggregator;
    unsigned long long  _processedValidInterfaceOrientationChangeCount;
    NSMutableDictionary * _sceneIdentifierToIgnoreSuspendedUnderLockAssertions;
    long long  _validInterfaceOrientation;
    unsigned long long  _validInterfaceOrientationChangeCount;
    <BSInvalidatable> * stateCaptureInvalidatable;
}

@property (nonatomic, readonly) SBMainDisplayLayoutState *currentLayoutState;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) bool hasIdleTimerBehaviors;
@property (readonly) unsigned long long hash;
@property (nonatomic) <SBIdleTimerCoordinating> *idleTimerCoordinator;
@property (nonatomic, readonly) SBPhysicalButtonSceneOverrideManager *physicalButtonSceneOverrideManager;
@property (nonatomic, readonly) SBMainDisplayPolicyAggregator *policyAggregator;
@property (readonly) Class superclass;
@property (getter=isSuspendedUnderLock, nonatomic) bool suspendedUnderLock;

- (void).cxx_destruct;
- (id)_appSceneClientSettingsDiffInspector;
- (id)_externalClientSettingsDiffInspector;
- (bool)_handleAction:(id)arg1 forScene:(id)arg2;
- (id)_internalClientSettingsDiffInspector;
- (bool)_isExternalForegroundScene:(id)arg1;
- (bool)_isLockscreenHostingApp:(id)arg1;
- (void)_keyboardWillChangeFrame:(id)arg1;
- (void)_noteDidChangeToVisibility:(unsigned long long)arg1 previouslyExisted:(bool)arg2 forScene:(id)arg3;
- (void)_noteDidCommitUpdateForScene:(id)arg1;
- (id)_proposeIdleTimerBehaviorForReason:(id)arg1;
- (void)_scene:(id)arg1 didUpdateClientSettingsWithDiff:(id)arg2 oldClientSettings:(id)arg3 transitionContext:(id)arg4;
- (void)_scene:(id)arg1 interceptUpdateWithNewSettings:(id)arg2;
- (void)_scene:(id)arg1 willUpdateWithSettings:(id)arg2 transitionContext:(id)arg3;
- (bool)_shouldAutoHostScene:(id)arg1;
- (bool)_shouldFenceTransitionForScene:(id)arg1 updatedClientSettingsDiff:(id)arg2 oldClientSettings:(id)arg3 transitionContext:(id)arg4;
- (bool)_shouldGrantRequestsForPhysicalButton:(unsigned long long)arg1 toScene:(id)arg2;
- (bool)_shouldTrackScenesForDeactivation;
- (void)_updateLevelAndBackgroundSettingsForScene:(id)arg1 transitionContext:(id)arg2;
- (id)_windowScene;
- (id)acquireIgnoreSuspendedUnderLockAssertionForSceneIdentifier:(id)arg1 reason:(id)arg2;
- (void)addActionHandler:(id)arg1 forScene:(id)arg2;
- (void)addObserver:(id)arg1;
- (id)coordinatorRequestedIdleTimerBehavior:(id)arg1;
- (void)dealloc;
- (void)displayReferenceModeStatusDidChangeForDisplayWithConfiguration:(id)arg1 newStatus:(long long)arg2;
- (id)existingSceneHandleForPersistenceIdentifier:(id)arg1;
- (id)existingSceneHandleForScene:(id)arg1;
- (id)existingSceneHandleForSceneIdentity:(id)arg1;
- (id)externalApplicationSceneHandles;
- (id)externalForegroundApplicationSceneHandles;
- (id)fetchOrCreateApplicationSceneHandleForRequest:(id)arg1;
- (bool)hasIdleTimerBehaviors;
- (id)idleTimerCoordinator;
- (id)idleTimerProvider:(id)arg1 didProposeBehavior:(id)arg2 forReason:(id)arg3;
- (id)initWithReference:(id)arg1 sceneIdentityProvider:(id)arg2 presentationBinder:(id)arg3;
- (id)initWithReference:(id)arg1 sceneIdentityProvider:(id)arg2 presentationBinder:(id)arg3 snapshotBehavior:(unsigned long long)arg4;
- (bool)isSuspendedUnderLock;
- (id)layoutStateManager;
- (id)physicalButtonSceneOverrideManager;
- (id)policyAggregator;
- (void)removeActionHandler:(id)arg1 forScene:(id)arg2;
- (void)removeObserver:(id)arg1;
- (id)runningApplicationScenes:(id)arg1;
- (void)scene:(id)arg1 didReceiveActions:(id)arg2;
- (void)sceneManager:(id)arg1 didDestroyScene:(id)arg2;
- (id)sceneSnapshotRequestStrategyForSceneSnapshotRequestor:(id)arg1;
- (void)setIdleTimerCoordinator:(id)arg1;
- (void)setSuspendedUnderLock:(bool)arg1;
- (void)setSuspendedUnderLock:(bool)arg1 alongsideWillChangeBlock:(id /* block */)arg2 alongsideDidChangeBlock:(id /* block */)arg3;
- (id)suspendedUnderLockManager:(id)arg1 sceneHandleForScene:(id)arg2;
- (bool)suspendedUnderLockManager:(id)arg1 shouldPreventSuspendUnderLockForScene:(id)arg2;
- (bool)suspendedUnderLockManager:(id)arg1 shouldPreventUnderLockForScene:(id)arg2;
- (id)suspendedUnderLockManagerDisplayConfiguration:(id)arg1;
- (id)suspendedUnderLockManagerVisibleScenes:(id)arg1;
- (void)windowSceneDidConnect:(id)arg1;

@end
