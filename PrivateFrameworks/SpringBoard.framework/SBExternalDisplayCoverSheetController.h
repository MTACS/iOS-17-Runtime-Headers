
@interface SBExternalDisplayCoverSheetController : NSObject <BSInvalidatable, SBBacklightControllerObserver, SBCoverSheetPresentationManagerDismissalObserver, SBExternalDisplayCoverSheetControllerWindowFactory, SBSDisplayLayoutElementProviding, SBTouchTemplateGestureRecognizerDelegate, SBUILockStateProviding> {
    SBBacklightController * _backlightController;
    bool  _coversheetPresented;
    UIWindow * _coversheetWindow;
    SBSDisplayLayoutElement * _displayLayoutElement;
    <BSInvalidatable> * _displayLayoutElementAssertion;
    NSString * _externalDisplayUUID;
    bool  _isInvalidated;
    <SBLockStateProvider> * _lockStateProvider;
    SBFMouseButtonDownGestureRecognizer * _mouseButtonDownGesture;
    bool  _noAnimations;
    NSHashTable * _observers;
    SBCoverSheetPresentationManager * _presentationManager;
    SBExternalDisplayCoverSheetViewController * _rootViewController;
    SBWindowScene * _sbWindowScene;
    bool  _screenOn;
    SBFluidScrunchGestureRecognizer * _scrunchDismissGestureRecognizer;
    bool  _shouldBeVisible;
    <SBExternalDisplayCoverSheetControllerWindowFactory> * _windowFactory;
}

@property (nonatomic, readonly) SBBacklightController *backlightController;
@property (getter=_isCoverSheetPresented, nonatomic) bool coversheetPresented;
@property (nonatomic, retain) UIWindow *coversheetWindow;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) SBSDisplayLayoutElement *displayLayoutElement;
@property (getter=isDisplayLayoutElementActive, nonatomic) bool displayLayoutElementActive;
@property (nonatomic, retain) <BSInvalidatable> *displayLayoutElementAssertion;
@property (nonatomic, copy) NSString *externalDisplayUUID;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) <SBLockStateProvider> *lockStateProvider;
@property (nonatomic, retain) SBFMouseButtonDownGestureRecognizer *mouseButtonDownGesture;
@property (nonatomic) bool noAnimations;
@property (nonatomic, retain) NSHashTable *observers;
@property (nonatomic, readonly) SBCoverSheetPresentationManager *presentationManager;
@property (nonatomic, retain) SBExternalDisplayCoverSheetViewController *rootViewController;
@property (getter=_sbWindowScene, nonatomic) SBWindowScene *sbWindowScene;
@property (getter=_isScreenOn, setter=_setScreenOn:, nonatomic) bool screenOn;
@property (nonatomic, retain) SBFluidScrunchGestureRecognizer *scrunchDismissGestureRecognizer;
@property (nonatomic) bool shouldBeVisible;
@property (readonly) Class superclass;
@property (nonatomic, readonly) <SBExternalDisplayCoverSheetControllerWindowFactory> *windowFactory;

- (void).cxx_destruct;
- (void)_embeddedLockStateDidChange:(id)arg1;
- (void)_handleScrunchGesture:(id)arg1;
- (id)_initWithWindowScene:(id)arg1 lockStateProvider:(id)arg2 backlightController:(id)arg3 presentationManager:(id)arg4 windowFactory:(id)arg5 externalDisplayCoverSheetViewController:(id)arg6;
- (bool)_isCoverSheetPresented;
- (bool)_isScreenOn;
- (void)_notifyObserversDidUpdateExternalDisplayCoverSheetAppearance:(bool)arg1;
- (void)_notifyObserversWillUpdateExternalDisplayCoverSheetAppearance:(bool)arg1;
- (void)_postNotificationForExternalCoverSheetVisibilityDidChange:(bool)arg1;
- (id)_sbWindowScene;
- (void)_setCoverSheetWindowVisible:(bool)arg1 fadeDuration:(double)arg2;
- (void)_setScreenOn:(bool)arg1;
- (bool)_shouldBlankingRemovePower;
- (bool)_shouldIgnoreEmbeddedBacklightChangingSource:(long long)arg1;
- (bool)_shouldShowExternalCoverSheet;
- (void)_updateExternalDisplayCoverSheetExistence;
- (void)_wakeScreenForMouseButtonDown:(id)arg1;
- (void)addObserver:(id)arg1;
- (id)backlightController;
- (void)backlightController:(id)arg1 willAnimateBacklightToFactor:(float)arg2 source:(long long)arg3;
- (void)coverSheetPresentationManagerDidChangeDismissedSinceKeyBagLock:(id)arg1;
- (id)coversheetWindow;
- (void)dealloc;
- (id)displayLayoutElement;
- (id)displayLayoutElementAssertion;
- (id)externalDisplayUUID;
- (id)initWithWindowScene:(id)arg1;
- (void)invalidate;
- (bool)isDisplayLayoutElementActive;
- (bool)isUILocked;
- (id)lockStateProvider;
- (id)mouseButtonDownGesture;
- (id)newCoverSheetWindowForScene:(id)arg1;
- (bool)noAnimations;
- (id)observers;
- (id)presentationManager;
- (void)removeObserver:(id)arg1;
- (id)rootViewController;
- (id)scrunchDismissGestureRecognizer;
- (void)setCoversheetPresented:(bool)arg1;
- (void)setCoversheetWindow:(id)arg1;
- (void)setDisplayLayoutElement:(id)arg1;
- (void)setDisplayLayoutElementActive:(bool)arg1;
- (void)setDisplayLayoutElementAssertion:(id)arg1;
- (void)setExternalDisplayUUID:(id)arg1;
- (void)setMouseButtonDownGesture:(id)arg1;
- (void)setNoAnimations:(bool)arg1;
- (void)setObservers:(id)arg1;
- (void)setRootViewController:(id)arg1;
- (void)setSbWindowScene:(id)arg1;
- (void)setScrunchDismissGestureRecognizer:(id)arg1;
- (void)setShouldBeVisible:(bool)arg1;
- (bool)shouldBeVisible;
- (void)updateDisplayLayoutElementWithBuilder:(id /* block */)arg1;
- (id)viewForSystemGestureRecognizer:(id)arg1;
- (id)windowFactory;

@end
