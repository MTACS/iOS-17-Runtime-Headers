
@interface SBAppSwitcherPageView : SBHitTestExtendedView <PTSettingsKeyObserver, SBSystemPointerInteractionDelegate> {
    unsigned long long  _allowedTouchResizeCorners;
    SBAppResizeGrabberView * _bottomLeftResizeGrabberPillView;
    SBAppResizeGrabberView * _bottomRightResizeGrabberPillView;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _contentClippingFrame;
    UIView * _contentContainerView;
    struct UIRectCornerRadii { 
        double topLeft; 
        double bottomLeft; 
        double bottomRight; 
        double topRight; 
    }  _cornerRadii;
    <SBAppSwitcherPageViewDelegate> * _delegate;
    double  _dimmingAlpha;
    UIView * _dimmingView;
    struct CGSize { 
        double width; 
        double height; 
    }  _fullyPresentedSize;
    unsigned long long  _highlightType;
    UIView * _hitTestBlocker;
    unsigned long long  _hoveringOverEdge;
    double  _lighteningAlpha;
    unsigned long long  _maskedCorners;
    bool  _needsBackgroundWallpaperTreatment;
    bool  _needsWallpaperGradientTreatment;
    bool  _occludedInContinuousExposeStage;
    long long  _orientation;
    UIView * _overlayClippingView;
    UIView * _overlayView;
    struct CGSize { 
        double width; 
        double height; 
    }  _overlayViewSize;
    UIView * _pointerHitTestBlocker;
    double  _pointerInteractionHitTestPadding;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _pointerRegion;
    bool  _resizeGrabbersVisible;
    bool  _resizingAllowed;
    SBAppSwitcherSettings * _settings;
    double  _shadowAlpha;
    double  _shadowOffset;
    long long  _shadowStyle;
    SBAppSwitcherPageShadowView * _shadowView;
    bool  _shouldClipContentView;
    bool  _shouldScaleOverlayToFillBounds;
    double  _switcherCardScale;
    SBSystemPointerInteractionManager * _systemPointerInteractionManager;
    long long  _tintStyle;
    UIView * _tintView;
    SBAppResizeGrabberView * _topLeftResizeGrabberPillView;
    SBAppResizeGrabberView * _topRightResizeGrabberPillView;
    UIView<SBAppSwitcherPageContentView> * _view;
    UIView * _viewClippingView;
    struct SBSwitcherGradientWallpaperAttributes { 
        double leadingAlpha; 
        double trailingAlpha; 
    }  _wallpaperGradientAttributes;
    SBAppSwitcherWallpaperGradientView * _wallpaperGradientView;
    double  _wallpaperOverlayAlpha;
    SBWallpaperEffectView * _wallpaperOverlayView;
}

@property (nonatomic, readonly) UIView *_overlayClippingView;
@property (nonatomic, readonly) SBAppSwitcherPageShadowView *_shadowView;
@property (getter=isActive, nonatomic) bool active;
@property (nonatomic) unsigned long long allowedTouchResizeCorners;
@property (nonatomic) bool blocksTouches;
@property (nonatomic) double contentAlpha;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } contentClippingFrame;
@property (nonatomic) struct UIRectCornerRadii { double x1; double x2; double x3; double x4; } cornerRadii;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <SBAppSwitcherPageViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) double dimmingAlpha;
@property (nonatomic) struct CGSize { double x1; double x2; } fullyPresentedSize;
@property (readonly) unsigned long long hash;
@property (nonatomic) unsigned long long highlightType;
@property (nonatomic) double lighteningAlpha;
@property (nonatomic) unsigned long long maskedCorners;
@property (nonatomic) bool needsBackgroundWallpaperTreatment;
@property (nonatomic) bool needsWallpaperGradientTreatment;
@property (getter=isOccludedInContinuousExposeStage, nonatomic) bool occludedInContinuousExposeStage;
@property (nonatomic) long long orientation;
@property (nonatomic, retain) UIView *overlay;
@property (nonatomic) double overlayAlpha;
@property (nonatomic) struct CGSize { double x1; double x2; } overlayViewSize;
@property (nonatomic) double pointerInteractionHitTestPadding;
@property (getter=areResizeGrabbersVisible, nonatomic) bool resizeGrabbersVisible;
@property (getter=isResizingAllowed, nonatomic) bool resizingAllowed;
@property (nonatomic) double shadowAlpha;
@property (nonatomic) double shadowOffset;
@property (nonatomic) long long shadowStyle;
@property (nonatomic) bool shouldClipContentView;
@property (nonatomic) bool shouldScaleOverlayToFillBounds;
@property (readonly) Class superclass;
@property (nonatomic) double switcherCardScale;
@property (nonatomic) long long tintStyle;
@property (nonatomic, retain) UIView<SBAppSwitcherPageContentView> *view;
@property (getter=isVisible, nonatomic) bool visible;
@property (nonatomic) struct SBSwitcherGradientWallpaperAttributes { double x1; double x2; } wallpaperGradientAttributes;
@property (nonatomic) double wallpaperOverlayAlpha;

- (void).cxx_destruct;
- (void)_addContentView:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_contentViewFrame;
- (void)_createOrDestroyWallpaperGradientView;
- (void)_createOrDestroyWallpaperOverlayView;
- (void)_layoutOverlayView;
- (void)_orderSubviews;
- (id)_overlayClippingView;
- (id)_shadowView;
- (bool)_supportsAsymmetricalCornerRadii;
- (void)_updateCornerRadius;
- (void)_updateDimmingViewAlpha;
- (void)_updateEffectOverlayViews;
- (void)_updateGrabberVisibilities;
- (void)_updateShadowPresence;
- (void)_updateTintStyle;
- (void)_updateTintViewAlpha;
- (void)_updateWallpaperGradientAttributes;
- (void)_updateWallpaperOverlayAlpha;
- (unsigned long long)allowedTouchResizeCorners;
- (bool)areResizeGrabbersVisible;
- (bool)blocksTouches;
- (double)contentAlpha;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })contentClippingFrame;
- (struct UIRectCornerRadii { double x1; double x2; double x3; double x4; })cornerRadii;
- (id)delegate;
- (double)dimmingAlpha;
- (struct CGSize { double x1; double x2; })fullyPresentedSize;
- (unsigned long long)highlightType;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)invalidate;
- (bool)isActive;
- (bool)isOccludedInContinuousExposeStage;
- (bool)isResizingAllowed;
- (bool)isVisible;
- (void)layoutSubviews;
- (double)lighteningAlpha;
- (unsigned long long)maskedCorners;
- (bool)needsBackgroundWallpaperTreatment;
- (bool)needsWallpaperGradientTreatment;
- (long long)orientation;
- (id)overlay;
- (double)overlayAlpha;
- (struct CGSize { double x1; double x2; })overlayViewSize;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })pointerInteractionHitTestInsetsForView:(id)arg1;
- (double)pointerInteractionHitTestPadding;
- (void)pointerWillExitRegion;
- (id)regionAtLocation:(struct CGPoint { double x1; double x2; })arg1 forView:(id)arg2;
- (void)setActive:(bool)arg1;
- (void)setAllowedTouchResizeCorners:(unsigned long long)arg1;
- (void)setBlocksTouches:(bool)arg1;
- (void)setContentAlpha:(double)arg1;
- (void)setContentClippingFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setCornerRadii:(struct UIRectCornerRadii { double x1; double x2; double x3; double x4; })arg1;
- (void)setDelegate:(id)arg1;
- (void)setDimmingAlpha:(double)arg1;
- (void)setFullyPresentedSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setHighlightType:(unsigned long long)arg1;
- (void)setLighteningAlpha:(double)arg1;
- (void)setMaskedCorners:(unsigned long long)arg1;
- (void)setNeedsBackgroundWallpaperTreatment:(bool)arg1;
- (void)setNeedsWallpaperGradientTreatment:(bool)arg1;
- (void)setOccludedInContinuousExposeStage:(bool)arg1;
- (void)setOrientation:(long long)arg1;
- (void)setOverlay:(id)arg1;
- (void)setOverlay:(id)arg1 animated:(bool)arg2;
- (void)setOverlayAlpha:(double)arg1;
- (void)setOverlayViewSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setPointerInteractionHitTestPadding:(double)arg1;
- (void)setResizeGrabbersVisible:(bool)arg1;
- (void)setResizingAllowed:(bool)arg1;
- (void)setShadowAlpha:(double)arg1;
- (void)setShadowOffset:(double)arg1;
- (void)setShadowStyle:(long long)arg1;
- (void)setShouldClipContentView:(bool)arg1;
- (void)setShouldScaleOverlayToFillBounds:(bool)arg1;
- (void)setSwitcherCardScale:(double)arg1;
- (void)setTintStyle:(long long)arg1;
- (void)setView:(id)arg1;
- (void)setView:(id)arg1 animated:(bool)arg2;
- (void)setVisible:(bool)arg1;
- (void)setWallpaperGradientAttributes:(struct SBSwitcherGradientWallpaperAttributes { double x1; double x2; })arg1;
- (void)setWallpaperOverlayAlpha:(double)arg1;
- (void)settings:(id)arg1 changedValueForKey:(id)arg2;
- (double)shadowAlpha;
- (double)shadowOffset;
- (long long)shadowStyle;
- (bool)shouldBeginPointerInteractionRequest:(id)arg1 atLocation:(struct CGPoint { double x1; double x2; })arg2 forView:(id)arg3;
- (bool)shouldClipContentView;
- (bool)shouldScaleOverlayToFillBounds;
- (id)styleForRegion:(id)arg1 forView:(id)arg2;
- (double)switcherCardScale;
- (long long)tintStyle;
- (void)traitCollectionDidChange:(id)arg1;
- (id)view;
- (struct SBSwitcherGradientWallpaperAttributes { double x1; double x2; })wallpaperGradientAttributes;
- (double)wallpaperOverlayAlpha;
- (void)willMoveToWindow:(id)arg1;

@end
