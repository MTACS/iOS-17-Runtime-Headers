
@interface SBDashBoardHostedAppViewController : SBDashBoardViewExternalControllerBase <BSInvalidatable, SBAppViewControllerDelegate, SBApplicationHosting, SBApplicationSceneHandleUpdateContributing, SBApplicationSceneViewControllingStatusBarDelegate, SBDeviceApplicationSceneStatusBarStateObserver, SBMainDisplaySceneLayoutStatusBarViewDataSource, SBSceneHandleObserver> {
    UIApplicationSceneClientSettingsDiffInspector * _appClientSettingsDiffInspector;
    SBAppViewController * _appViewController;
    SBFAuthenticationAssertion * _authenticationAssertion;
    NSString * _cachedBasicPublicDescription;
    <BSInvalidatable> * _deferOrientationUpdatesAssertion;
    <SBDashBoardHostedAppViewControllerDelegate> * _delegate;
    <CSAppHostContextProviding> * _hostContextProvider;
    bool  _intentToTransitionFromSecureAppToFull;
    bool  _interfaceOrientationLocked;
    bool  _invalidated;
    id /* block */  _invalidationHandler;
    long long  _overrideIdleWarnMode;
    UIApplicationSceneDeactivationAssertion * _resignActiveAssertion;
    _SBDashBoardHostedAppStatusBarStateProxy * _statusBarObserverProxy;
    SBMainDisplaySceneLayoutStatusBarView * _statusBarView;
    bool  _waitingToDeactivateAfterDisappearance;
    bool  _wantsIdleTimerDisabled;
}

@property (nonatomic, retain) NSSet *actionsToDeliver;
@property (nonatomic, readonly) SBApplicationSceneView *appView;
@property (nonatomic, readonly) SBApplicationSceneHandle *applicationSceneHandle;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <SBDashBoardHostedAppViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) <CSAppHostContextProviding> *hostContextProvider;
@property (nonatomic) bool intentToTransitionFromSecureAppToFull;
@property (nonatomic) bool interfaceOrientationLocked;
@property (nonatomic, copy) id /* block */ invalidationHandler;
@property (nonatomic) long long mode;
@property (nonatomic) long long overrideIdleWarnMode;
@property (nonatomic, retain) <SBScenePlaceholderContentContext> *placeholderContentContext;
@property (nonatomic) bool placeholderContentEnabled;
@property (nonatomic, readonly) <SBApplicationSceneStatusBarDescribing> *statusBarDescriber;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_addStatusBarViewIfNeeded;
- (id)_appViewController;
- (void)_beginShowingStatusBarView;
- (void)_deactivateIfAppropriateForReason:(id)arg1;
- (id)_deviceApplicationSceneHandle;
- (void)_endShowingStatusBarView;
- (id)_newDisplayLayoutElement;
- (void)_setMode:(long long)arg1 fromClient:(bool)arg2 forReason:(id)arg3;
- (void)_setResignActiveAssertionEnabled:(bool)arg1;
- (bool)_shouldDelayDeactivationUntilAfterDisappearance;
- (bool)_shouldInvalidateUponDeactivation;
- (void)_updateDisplayLayoutElementForActivation:(id)arg1;
- (void)_updateStatusBarContainerOrientation;
- (id)actionsToDeliver;
- (void)aggregateAppearance:(id)arg1;
- (void)aggregateBehavior:(id)arg1;
- (bool)allowsConfiguringIndividualStatusBarParts;
- (id)appView;
- (void)appViewController:(id)arg1 didTransitionFromMode:(long long)arg2 toMode:(long long)arg3;
- (void)appViewControllerDidDeactivateApplication:(id)arg1;
- (void)appViewControllerDidFailToActivateApplication:(id)arg1;
- (bool)appViewControllerIsInNonRotatingWindow:(id)arg1;
- (bool)appViewControllerShouldBackgroundApplicationOnDeactivate:(id)arg1;
- (bool)appViewControllerShouldHideHomeGrabberView:(id)arg1;
- (bool)appViewControllerShouldReactivateApplicationOnDestruction:(id)arg1;
- (void)appViewControllerWillActivateApplication:(id)arg1;
- (id)appearanceIdentifier;
- (id)applicationSceneHandle;
- (void)applicationSceneHandle:(id)arg1 appendToSceneSettings:(id)arg2 fromRequestContext:(id)arg3 entity:(id)arg4;
- (void)applicationSceneViewController:(id)arg1 didUpdateStatusBarSettings:(id)arg2;
- (bool)canHostAnApp;
- (void)conformsToSBApplicationHosting;
- (long long)containerInterfaceOrientation;
- (long long)contentInterfaceOrientation;
- (void)dealloc;
- (id)delegate;
- (bool)handleEvent:(id)arg1;
- (id)hostContextProvider;
- (id)hostedAppSceneHandle;
- (id)hostedAppSceneHandles;
- (void)hostedAppWillRotateToInterfaceOrientation:(long long)arg1;
- (id)initWithApplicationSceneEntity:(id)arg1;
- (bool)intentToTransitionFromSecureAppToFull;
- (bool)interfaceOrientationLocked;
- (void)invalidate;
- (id /* block */)invalidationHandler;
- (bool)isHostingAnApp;
- (long long)mode;
- (long long)overrideIdleWarnMode;
- (id)placeholderContentContext;
- (bool)placeholderContentEnabled;
- (long long)presentationPriority;
- (long long)presentationStyle;
- (long long)presentationType;
- (void)sceneHandle:(id)arg1 didUpdateClientSettingsWithDiff:(id)arg2 transitionContext:(id)arg3;
- (void)sceneWithIdentifier:(id)arg1 didChangeSceneInterfaceOrientationTo:(long long)arg2;
- (void)setActionsToDeliver:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setHostContextProvider:(id)arg1;
- (void)setHostedAppReferenceSize:(struct CGSize { double x1; double x2; })arg1 withInterfaceOrientation:(long long)arg2;
- (void)setIntentToTransitionFromSecureAppToFull:(bool)arg1;
- (void)setInterfaceOrientationLocked:(bool)arg1;
- (void)setInvalidationHandler:(id /* block */)arg1;
- (void)setMode:(long long)arg1;
- (void)setOverrideIdleWarnMode:(long long)arg1;
- (void)setPlaceholderContentContext:(id)arg1;
- (void)setPlaceholderContentEnabled:(bool)arg1;
- (void)setSupplementalActivationSettings:(id)arg1;
- (id)statusBarDescriber;
- (id)statusBarDescriberForStatusBarPart:(id)arg1;
- (id)statusBarDescribers;
- (long long)statusBarOrientation;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewDidMoveToWindow:(id)arg1 shouldAppearOrDisappear:(bool)arg2;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (void)willMoveToParentViewController:(id)arg1;

@end
