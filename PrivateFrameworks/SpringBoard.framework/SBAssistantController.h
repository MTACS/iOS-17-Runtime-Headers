
@interface SBAssistantController : NSObject <CSCoverSheetOverlaying, PTSettingsKeyObserver, SBAssistantSessionDelegate, SBFAuthenticationResponder, SBFIdleTimerBehaviorProviding, SBIdleTimerProviding, SBWindowLevelAssertionManagerDelegate, SBWindowLevelAssertionProviding, SiriPresentationSpringBoardMainScreenViewControllerDelegate> {
    NSSet * _audioCategoriesDisablingVolumeHUD;
    SBAssistantSession * _currentSession;
    SBFAuthenticationAssertion * _disableAssertion;
    bool  _dismissing;
    SBAssistantGestureConfiguration * _gestureConfiguration;
    <SBIdleTimer> * _idleTimer;
    <SBIdleTimerCoordinating> * _idleTimerCoordinator;
    SiriPresentationSpringBoardMainScreenViewController * _mainScreenSiriPresentation;
    NSHashTable * _observers;
    BSEventQueue * _operationQueue;
    bool  _screenShotServicesIsRunning;
    SBSystemAnimationSettings * _settings;
    <SAInvalidatable> * _systemApertureAssertion;
    NSArray * _systemApertureFrames;
    <SBWindowSceneTracking> * _uiSceneTracker;
    bool  _unlockedDevice;
    bool  _visible;
    SBWindowLevelAssertionManager * _windowLevelAssertionManager;
}

@property (nonatomic, readonly) bool contentObscuresEmbeddedDisplayScreen;
@property (nonatomic, retain) SBAssistantSession *currentSession;
@property (nonatomic, readonly) double customIdleExpirationTimeout;
@property (nonatomic, readonly) double customIdleWarningTimeout;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (getter=isEnabled, nonatomic, readonly) bool enabled;
@property (readonly) unsigned long long hash;
@property (getter=_idleTimerCoordinator, setter=_setIdleTimerCoordinator:, nonatomic) <SBIdleTimerCoordinating> *idleTimerCoordinator;
@property (nonatomic, readonly) long long idleTimerDuration;
@property (nonatomic, readonly) long long idleTimerMode;
@property (nonatomic, readonly) long long idleWarnMode;
@property (readonly) Class superclass;
@property (nonatomic, retain) <SAInvalidatable> *systemApertureAssertion;
@property (nonatomic, readonly) bool unlockedDevice;
@property (getter=isVisible, nonatomic, readonly) bool visible;

+ (id)_activationSettingsWithPunchoutStyle:(long long)arg1;
+ (void)bootstrapServices;
+ (id)defaultActivationSettings;
+ (bool)isVisible;
+ (id)sharedInstance;
+ (id)sharedInstanceIfExists;
+ (bool)shouldBreadcrumbLaunchedApplicationWithBundleIdentifier:(id)arg1;
+ (bool)shouldDismissSiriForGestureTranslation:(struct CGPoint { double x1; double x2; })arg1 velocity:(struct CGPoint { double x1; double x2; })arg2;

- (void).cxx_destruct;
- (void)_bioAuthenticated:(id)arg1;
- (void)_deviceBlocked:(id)arg1;
- (void)_dismissAssistantViewIfNecessaryWithAnimation:(long long)arg1 factory:(id)arg2 dismissalOptions:(id)arg3 completion:(id /* block */)arg4;
- (void)_dismissAssistantViewIfNecessaryWithAnimation:(long long)arg1 factory:(id)arg2 dismissalOptions:(id)arg3 windowScene:(id)arg4 completion:(id /* block */)arg5;
- (id)_idleTimerBehavior;
- (id)_idleTimerCoordinator;
- (id)_init;
- (void)_noteDeviceLockedOrBlocked;
- (void)_prototypeSettingsChanged;
- (void)_remoteLocked:(id)arg1;
- (void)_setIdleTimerCoordinator:(id)arg1;
- (void)_setUnlockedDevice:(bool)arg1;
- (void)_setVisible:(bool)arg1;
- (void)_startSessionOnScene:(id)arg1 options:(id)arg2 completion:(id /* block */)arg3;
- (void)_systemApertureFrameDidChange:(id)arg1;
- (void)_turnScreenOffWithCompletion:(id /* block */)arg1;
- (void)_uiLocked:(id)arg1;
- (id)_uiSceneTracker;
- (void)_updateWindowLevelForScene:(id)arg1;
- (id)acquireWindowLevelAssertionWithPriority:(long long)arg1 windowLevel:(double)arg2 windowScene:(id)arg3 reason:(id)arg4;
- (void)addObserver:(id)arg1;
- (id)alwaysOnLiveRenderingAssertionRequested;
- (void)applicationProcessDidChangeState:(id)arg1;
- (void)assistantSession:(id)arg1 requestsDismissalWithAnimation:(long long)arg2 completion:(id /* block */)arg3;
- (void)assistantSession:(id)arg1 requestsDismissalWithDismissalOptions:(id)arg2;
- (void)assistantSession:(id)arg1 viewDidAppearInWindowScene:(id)arg2;
- (void)assistantSession:(id)arg1 viewDidDisappearInWindowScene:(id)arg2;
- (void)assistantSession:(id)arg1 viewWillAppearInWindowScene:(id)arg2;
- (void)assistantSession:(id)arg1 viewWillDisappearInWindowScene:(id)arg2;
- (bool)contentObscuresEmbeddedDisplayScreen;
- (id)coordinatorRequestedIdleTimerBehavior:(id)arg1;
- (id)currentSession;
- (void)dealloc;
- (void)deviceUnlockRequestedWithPassword:(id)arg1;
- (void)dismissAssistantViewIfNecessaryForGestureTranslation:(struct CGPoint { double x1; double x2; })arg1 velocity:(struct CGPoint { double x1; double x2; })arg2 windowScene:(id)arg3;
- (void)dismissAssistantViewIfNecessaryInWindowScene:(id)arg1;
- (void)dismissAssistantViewIfNecessaryWithAnimation:(long long)arg1 windowScene:(id)arg2;
- (void)dismissAssistantViewIfNecessaryWithAnimation:(long long)arg1 windowScene:(id)arg2 completion:(id /* block */)arg3;
- (void)dismissAssistantViewInEverySceneIfNecessary;
- (void)dismissAssistantViewInEverySceneIfNecessaryForGestureTranslation:(struct CGPoint { double x1; double x2; })arg1 velocity:(struct CGPoint { double x1; double x2; })arg2;
- (void)dismissAssistantViewInEverySceneIfNecessaryWithAnimation:(long long)arg1;
- (void)dismissAssistantViewInEverySceneIfNecessaryWithAnimation:(long long)arg1 completion:(id /* block */)arg2;
- (void)dismissAssistantViewInEverySceneIfNecessaryWithAnimation:(long long)arg1 factory:(id)arg2 completion:(id /* block */)arg3;
- (void)dismissOverlayForDashBoardAnimated:(bool)arg1;
- (void)handleFailedAuthenticationRequest:(id)arg1 error:(id)arg2;
- (void)handleInvalidAuthenticationRequest:(id)arg1;
- (void)handleSuccessfulAuthenticationRequest:(id)arg1;
- (long long)idleTimerDuration;
- (long long)idleTimerMode;
- (long long)idleWarnMode;
- (id)init;
- (void)invalidateSystemApertureAssertionWithReason:(id)arg1;
- (bool)isAmbientActive;
- (bool)isEnabled;
- (bool)isVisible;
- (bool)isVisibleInWindowScene:(id)arg1;
- (void)removeObserver:(id)arg1;
- (bool)requestPasscodeUnlockWithCompletion:(id /* block */)arg1;
- (void)restrictSystemApertureToDefaultLayoutWithReason:(id)arg1;
- (id)rootViewController;
- (void)screenWakeIdleTimerResetRequested;
- (void)screenWakeRequested;
- (id)sessionForWindowScene:(id)arg1;
- (void)setCurrentSession:(id)arg1;
- (void)setSystemApertureAssertion:(id)arg1;
- (void)setUISceneTracker:(id)arg1;
- (void)settings:(id)arg1 changedValueForKey:(id)arg2;
- (bool)shouldShowSystemVolumeHUDForCategory:(id)arg1;
- (void)siriPresentation:(id)arg1 didUpdateAudioCategoriesDisablingVolumeHUD:(id)arg2;
- (void)siriPresentation:(id)arg1 didUpdateHomeGestureSharing:(bool)arg2;
- (void)siriPresentation:(id)arg1 didUpdateShouldDismissForSwipesOutsideContent:(bool)arg2;
- (void)siriPresentation:(id)arg1 didUpdateShouldDismissForTapsOutsideContent:(bool)arg2;
- (void)siriPresentation:(id)arg1 didUpdateShouldPassTouchesThroughToSpringBoard:(bool)arg2;
- (void)siriPresentation:(id)arg1 isEnabledDidChange:(bool)arg2;
- (bool)siriPresentation:(id)arg1 requestsDeviceUnlockWithPassword:(id)arg2;
- (void)siriPresentation:(id)arg1 requestsDismissalWithOptions:(id)arg2 withHandler:(id /* block */)arg3;
- (void)siriPresentation:(id)arg1 requestsPresentationWithOptions:(id)arg2 withHandler:(id /* block */)arg3;
- (void)siriPresentation:(id)arg1 requestsPunchout:(id)arg2 withHandler:(id /* block */)arg3;
- (void)siriPresentation:(id)arg1 setHomeAffordanceSuppression:(long long)arg2;
- (void)siriPresentation:(id)arg1 setShowsHomeAffordance:(bool)arg2;
- (id)systemApertureAssertion;
- (bool)unlockedDevice;
- (id)window;
- (void)windowLevelAssertionManager:(id)arg1 didUpdateAssertionsForWindowScene:(id)arg2;

@end
