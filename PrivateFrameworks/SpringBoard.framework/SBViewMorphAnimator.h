
@interface SBViewMorphAnimator : NSObject <SBViewMorphAnimatorObserver> {
    BSAbsoluteMachTimer * _allAnimationsTimeoutTimer;
    bool  _automaticallyStartSourceAnimations;
    bool  _automaticallyStartTargetAnimations;
    unsigned long long  _completedSourceAnimations;
    unsigned long long  _completedTargetAnimations;
    <SBViewMorphAnimatorDataSource> * _dataSource;
    <SBViewMorphAnimatorDelegate> * _delegate;
    long long  _direction;
    long long  _fromOrientation;
    bool  _invalidated;
    BSAbsoluteMachTimer * _morphAnimationTimeout;
    NSHashTable * _observers;
    id /* block */  _sourceAllAnimationsCompletionBlock;
    bool  _sourceAllEnded;
    BSAbsoluteMachTimer * _sourceAnimationsCompletionContinueBlockTimeoutTimer;
    SBViewMorphAnimatorContentBlackCurtainView * _sourceBlackCurtainView;
    SBFFluidBehaviorSettings * _sourceClipAnimationSettings;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _sourceContentContainerFrame;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _sourceContentFrame;
    bool  _sourceContentFrameWasAltered;
    double  _sourceCornerRadius;
    struct CGPoint { 
        double x; 
        double y; 
    }  _sourceFinalCenter;
    double  _sourceFinalScale;
    UIView * _sourceView;
    unsigned long long  _startedSourceAnimations;
    unsigned long long  _startedTargetAnimations;
    SBFFluidBehaviorSettings * _targetClipAnimationSettings;
    SBViewMorphAnimatorContentClippingView * _targetContentClippingView;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _targetContentClippingViewInitialFrame;
    UIView * _targetContentView;
    double  _targetCornerRadius;
    bool  _targetExternalPlaceholderAllEnded;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _targetFinalFrame;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _targetSourcePinningFrame;
    UIView * _targetView;
    long long  _toOrientation;
    NSUUID * _uuid;
    SBWindowScene * _windowScene;
}

@property (nonatomic, retain) BSAbsoluteMachTimer *allAnimationsTimeoutTimer;
@property (nonatomic) bool automaticallyStartSourceAnimations;
@property (nonatomic) bool automaticallyStartTargetAnimations;
@property (nonatomic) unsigned long long completedSourceAnimations;
@property (nonatomic) unsigned long long completedTargetAnimations;
@property (nonatomic) <SBViewMorphAnimatorDataSource> *dataSource;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <SBViewMorphAnimatorDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) long long direction;
@property (nonatomic) long long fromOrientation;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool invalidated;
@property (nonatomic, retain) BSAbsoluteMachTimer *morphAnimationTimeout;
@property (nonatomic, retain) NSHashTable *observers;
@property (nonatomic, copy) id /* block */ sourceAllAnimationsCompletionBlock;
@property (nonatomic) bool sourceAllEnded;
@property (nonatomic, retain) BSAbsoluteMachTimer *sourceAnimationsCompletionContinueBlockTimeoutTimer;
@property (nonatomic, retain) SBViewMorphAnimatorContentBlackCurtainView *sourceBlackCurtainView;
@property (nonatomic, retain) SBFFluidBehaviorSettings *sourceClipAnimationSettings;
@property (nonatomic, readonly) double sourceClippingCornerRadius;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } sourceClippingFrame;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } sourceContentContainerFrame;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } sourceContentFrame;
@property (nonatomic) bool sourceContentFrameWasAltered;
@property (nonatomic) double sourceCornerRadius;
@property (nonatomic, readonly) struct CGPoint { double x1; double x2; } sourceFinalCenter;
@property (nonatomic, readonly) double sourceFinalScale;
@property (nonatomic) UIView *sourceView;
@property (nonatomic) unsigned long long startedSourceAnimations;
@property (nonatomic) unsigned long long startedTargetAnimations;
@property (readonly) Class superclass;
@property (nonatomic, retain) SBFFluidBehaviorSettings *targetClipAnimationSettings;
@property (nonatomic, retain) SBViewMorphAnimatorContentClippingView *targetContentClippingView;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } targetContentClippingViewInitialFrame;
@property (nonatomic) UIView *targetContentView;
@property (nonatomic, readonly) double targetCornerRadius;
@property (nonatomic) bool targetExternalPlaceholderAllEnded;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } targetFinalFrame;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } targetSourcePinningFrame;
@property (nonatomic) UIView *targetView;
@property (nonatomic) long long toOrientation;
@property (nonatomic, readonly) NSUUID *uuid;
@property (nonatomic, readonly) SBWindowScene *windowScene;

- (void).cxx_destruct;
- (void)_checkAnimationsDependencies:(id /* block */)arg1;
- (void)_continueSourceAnimationsCompletionPendingBlock;
- (void)_enumerateObserversRespondingToSelector:(SEL)arg1 usingBlock:(id /* block */)arg2;
- (void)_handleHandoffTimeout;
- (bool)_isReversed;
- (bool)_isTargetSourcePinningFrameEquivalentToSourceViewFrame;
- (void)_noteAnimatorWasCanceled;
- (void)_noteAnimatorWasInterrupted;
- (void)_noteDidEndAllAnimations;
- (void)_removeBlackCurtainView;
- (void)_removeMatchMoveAnimation;
- (void)_removeTargetClippingView;
- (void)_reset;
- (void)_resetAllAnimations;
- (struct CGPoint { double x1; double x2; })_source:(id)arg1 finalCenterWithFinalScale:(double)arg2 contentFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 targetFinalFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg4;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_sourceContentContainerFrameForSourceView:(id)arg1 withTargetDataSource:(id)arg2;
- (double)_sourceFinalScaleWithContentFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 targetFinalFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)_startMorphAnimationTimeoutTimer;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_targetInitialClippingBoundsWithSourceContentFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 sourceFinalScale:(double)arg2 targetViewBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_targetSourcePinningFrameWithSourceContentFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 targetFinalFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)_updateParameters;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_validatedSourceContentFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withinSourceView:(id)arg2 withSourceFinalScale:(double)arg3;
- (void)addObserver:(id)arg1;
- (id)allAnimationsTimeoutTimer;
- (bool)automaticallyStartSourceAnimations;
- (bool)automaticallyStartTargetAnimations;
- (void)cancel:(id /* block */)arg1;
- (unsigned long long)completedSourceAnimations;
- (unsigned long long)completedTargetAnimations;
- (id)dataSource;
- (void)dealloc;
- (id)delegate;
- (void)didEndSourceAnimations:(unsigned long long)arg1 finished:(bool)arg2 continueBlock:(id /* block */)arg3;
- (void)didEndTargetAnimations:(unsigned long long)arg1 finished:(bool)arg2 continueBlock:(id /* block */)arg3;
- (long long)direction;
- (long long)fromOrientation;
- (id)init;
- (id)initWithUUID:(id)arg1 windowScene:(id)arg2 direction:(long long)arg3;
- (void)interrupt:(id /* block */)arg1;
- (bool)invalidated;
- (id)morphAnimationTimeout;
- (void)noteSourceAnimationsDidEnd:(unsigned long long)arg1 finished:(bool)arg2 continueBlock:(id /* block */)arg3;
- (void)noteSourceAnimationsWillStart:(unsigned long long)arg1;
- (void)noteTargetAnimationsDidEnd:(unsigned long long)arg1 finished:(bool)arg2 continueBlock:(id /* block */)arg3;
- (void)noteTargetAnimationsWillStart:(unsigned long long)arg1;
- (void)noteWillRemoveTargeMatchMoveAnimationAtFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withinSourceFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (id)observers;
- (bool)preflightCheck;
- (void)setAllAnimationsTimeoutTimer:(id)arg1;
- (void)setAutomaticallyStartSourceAnimations:(bool)arg1;
- (void)setAutomaticallyStartTargetAnimations:(bool)arg1;
- (void)setCompletedSourceAnimations:(unsigned long long)arg1;
- (void)setCompletedTargetAnimations:(unsigned long long)arg1;
- (void)setDataSource:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDirection:(long long)arg1;
- (void)setFromOrientation:(long long)arg1;
- (void)setInvalidated:(bool)arg1;
- (void)setMorphAnimationTimeout:(id)arg1;
- (void)setObservers:(id)arg1;
- (void)setSourceAllAnimationsCompletionBlock:(id /* block */)arg1;
- (void)setSourceAllEnded:(bool)arg1;
- (void)setSourceAnimationsCompletionContinueBlockTimeoutTimer:(id)arg1;
- (void)setSourceBlackCurtainView:(id)arg1;
- (void)setSourceClipAnimationSettings:(id)arg1;
- (void)setSourceContentContainerFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setSourceContentFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setSourceContentFrameWasAltered:(bool)arg1;
- (void)setSourceCornerRadius:(double)arg1;
- (void)setSourceView:(id)arg1;
- (void)setStartedSourceAnimations:(unsigned long long)arg1;
- (void)setStartedTargetAnimations:(unsigned long long)arg1;
- (void)setTargetClipAnimationSettings:(id)arg1;
- (void)setTargetContentClippingView:(id)arg1;
- (void)setTargetContentClippingViewInitialFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setTargetContentView:(id)arg1;
- (void)setTargetExternalPlaceholderAllEnded:(bool)arg1;
- (void)setTargetView:(id)arg1;
- (void)setToOrientation:(long long)arg1;
- (id /* block */)sourceAllAnimationsCompletionBlock;
- (bool)sourceAllEnded;
- (id)sourceAnimationsCompletionContinueBlockTimeoutTimer;
- (id)sourceBlackCurtainView;
- (id)sourceClipAnimationSettings;
- (double)sourceClippingCornerRadius;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })sourceClippingFrame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })sourceContentContainerFrame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })sourceContentFrame;
- (bool)sourceContentFrameWasAltered;
- (double)sourceCornerRadius;
- (struct CGPoint { double x1; double x2; })sourceFinalCenter;
- (double)sourceFinalScale;
- (id)sourceView;
- (bool)startSourceAnimations:(unsigned long long)arg1;
- (bool)startTargetAnimations:(unsigned long long)arg1;
- (unsigned long long)startedSourceAnimations;
- (unsigned long long)startedTargetAnimations;
- (id)targetClipAnimationSettings;
- (id)targetContentClippingView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })targetContentClippingViewInitialFrame;
- (id)targetContentView;
- (double)targetCornerRadius;
- (bool)targetExternalPlaceholderAllEnded;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })targetFinalFrame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })targetSourcePinningFrame;
- (id)targetView;
- (long long)toOrientation;
- (id)uuid;
- (void)willStartSourceAnimations:(unsigned long long)arg1;
- (void)willStartTargetAnimations:(unsigned long long)arg1;
- (id)windowScene;

@end
