
@interface SBNotificationBannerDestination : NSObject <CSExternalBehaviorProviding, NCFullScreenPresentableViewControllerDelegate, NCNotificationAlertDestination, NCNotificationAlertDestinationPrototyping, NCNotificationManagementContentProviderDelegate, NCNotificationManagementViewPresenterDelegate, NCNotificationPresentableViewControllerDelegate, NCNotificationViewControllerDelegate, NCNotificationViewControllerDelegatePrivate, NCNotificationViewControllerObserving, SBAssistantObserver, SBBacklightControllerObserver, SBFIdleTimerBehaviorProviding, SBFMotionGestureObserver, SBFNotificationExtensionVisibilityProviding, SBNotificationDestinationHomeButtonPressHandler, SBUICoronaAnimationControllerParticipant> {
    SBInAppStatusBarHiddenAssertion * _appsStatusBarAssertion;
    SBAssistantController * _assistantController;
    <BSInvalidatable> * _bannerGestureRecognizerPriorityAssertion;
    <BSInvalidatable> * _biometricMatchingAssertion;
    SBDashBoardLegibilityProvider * _dashBoardLegibilityProvider;
    <NCNotificationAlertDestinationDelegate> * _delegate;
    NSMutableSet * _destinationObservers;
    NSObject<OS_dispatch_source> * _dismissTimer;
    <BSInvalidatable> * _idleTimerDisableAssertion;
    SBLockScreenManager * _lockScreenManager;
    NCNotificationManagementViewPresenter * _notificationManagementPresenter;
    NCNotificationViewController * _notificationViewControllerForActiveDragSession;
    NSObject<OS_dispatch_source> * _presentTimer;
    <BNPresentable> * _presentablePendingSnapshot;
    <BNPresentable> * _presentedPresentable;
    NSObject<OS_dispatch_source> * _replaceTimer;
    UIApplicationSceneDeactivationAssertion * _resignActiveAssertion;
    SBSetupManager * _setupManager;
    <BSInvalidatable> * _starModeDisableAssertion;
    SBWindowSceneStatusBarSettingsAssertion * _systemStatusBarAssertion;
    NCBannerTransitionBlockingPrototypeRecipe * _transitionBlockingPrototypeRecipe;
    bool  _userInteractionInProgress;
}

@property (nonatomic, readonly) <NCNotificationRequestPresenting> *activeNotificationRequestPresenter;
@property (getter=isAlertDestination, nonatomic, readonly) bool alertDestination;
@property (nonatomic, retain) SBInAppStatusBarHiddenAssertion *appsStatusBarAssertion;
@property (nonatomic, retain) SBAssistantController *assistantController;
@property (nonatomic, retain) <BSInvalidatable> *bannerGestureRecognizerPriorityAssertion;
@property (nonatomic, retain) <BSInvalidatable> *biometricMatchingAssertion;
@property (nonatomic, readonly, copy) NSString *coverSheetIdentifier;
@property (nonatomic, readonly) double customIdleExpirationTimeout;
@property (nonatomic, readonly) double customIdleWarningTimeout;
@property (nonatomic, retain) SBDashBoardLegibilityProvider *dashBoardLegibilityProvider;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <NCNotificationAlertDestinationDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSMutableSet *destinationObservers;
@property (nonatomic, retain) NSObject<OS_dispatch_source> *dismissTimer;
@property (nonatomic, readonly) BSServiceConnectionEndpoint *endpoint;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSString *identifier;
@property (nonatomic, retain) <BSInvalidatable> *idleTimerDisableAssertion;
@property (nonatomic, readonly) long long idleTimerDuration;
@property (nonatomic, readonly) long long idleTimerMode;
@property (nonatomic, readonly) long long idleWarnMode;
@property (nonatomic, retain) SBLockScreenManager *lockScreenManager;
@property (nonatomic, readonly) long long notificationBehavior;
@property (nonatomic, retain) NCNotificationManagementViewPresenter *notificationManagementPresenter;
@property (getter=_notificationViewControllerForActiveDragSession, setter=_setNotificationViewControllerForActiveDragSession:, nonatomic, retain) NCNotificationViewController *notificationViewControllerForActiveDragSession;
@property (nonatomic, readonly) long long participantState;
@property (nonatomic, retain) NSObject<OS_dispatch_source> *presentTimer;
@property (nonatomic) <BNPresentable> *presentablePendingSnapshot;
@property (nonatomic, readonly, retain) NCNotificationViewController *presentedBanner;
@property (getter=_presentedNotificationPresentableVC, nonatomic, readonly) SBNotificationPresentableViewController *presentedNotificationPresentableVC;
@property (getter=_presentedNotificationRequest, nonatomic, readonly) NCNotificationRequest *presentedNotificationRequest;
@property (setter=_setPresentedPresentable:, nonatomic, retain) <BNPresentable> *presentedPresentable;
@property (getter=isPresentingBanner, nonatomic, readonly) bool presentingBanner;
@property (getter=isPresentingBannerInLongLook, nonatomic, readonly) bool presentingBannerInLongLook;
@property (getter=isPresentingEmergencyNotification, nonatomic, readonly) bool presentingEmergencyNotification;
@property (getter=isPresentingStickyBanner, nonatomic, readonly) bool presentingStickyBanner;
@property (getter=isPreventingAutomaticLock, nonatomic, readonly) bool preventingAutomaticLock;
@property (nonatomic, readonly) long long proximityDetectionMode;
@property (nonatomic, retain) NSObject<OS_dispatch_source> *replaceTimer;
@property (nonatomic, retain) UIApplicationSceneDeactivationAssertion *resignActiveAssertion;
@property (nonatomic, readonly) unsigned long long restrictedCapabilities;
@property (nonatomic, readonly) long long scrollingStrategy;
@property (nonatomic, retain) SBSetupManager *setupManager;
@property (nonatomic, retain) <BSInvalidatable> *starModeDisableAssertion;
@property (readonly) Class superclass;
@property (nonatomic, retain) SBWindowSceneStatusBarSettingsAssertion *systemStatusBarAssertion;
@property (nonatomic, retain) NCBannerTransitionBlockingPrototypeRecipe *transitionBlockingPrototypeRecipe;
@property (getter=isUserInteractionInProgress, nonatomic) bool userInteractionInProgress;

+ (id)_test_notificationRequestForBannerWithIcon;

- (void).cxx_destruct;
- (id)_ambientPresentationController;
- (bool)_canReceiveNotificationRequestIfAmbientPresented:(id)arg1;
- (bool)_canReceiveNotificationRequestIfLocked:(id)arg1;
- (void)_cancelDismissTimer;
- (void)_cancelReplaceAndDismissTimers;
- (void)_cancelReplaceTimer;
- (id)_dashBoardLegibilitySettings;
- (void)_dismissPresentableCompleted:(id)arg1;
- (void)_dismissPresentedBannerAnimated:(bool)arg1 reason:(id)arg2 forceIfSticky:(bool)arg3;
- (void)_dismissPresentedBannerOnly:(bool)arg1 reason:(id)arg2 animated:(bool)arg3;
- (void)_dismissPresentedBannerOnly:(bool)arg1 reason:(id)arg2 animated:(bool)arg3 forceIfSticky:(bool)arg4;
- (void)_handleExpansionRequestForViewController:(id)arg1 notificationRequest:(id)arg2 forTrigger:(long long)arg3 test:(id /* block */)arg4 completionBlock:(id /* block */)arg5;
- (void)_invalidateBiometricAuthIfNecessary;
- (bool)_isAmbientNotificationsPreviewOnTapOnly;
- (bool)_isAmbientPresented;
- (bool)_isBundleIdentifierBlockedForCommunicationPolicy:(id)arg1;
- (bool)_isBundleIdentifierBlockedForScreenTimeExpiration:(id)arg1;
- (bool)_isContentSuppressedForNotificationRequest:(id)arg1;
- (bool)_isDeviceAuthenticated;
- (bool)_isDismissingLongLookForBanner;
- (bool)_isInSetupMode;
- (bool)_isPresentedBannerBeingDragged;
- (bool)_isPresentingBanner;
- (bool)_isPresentingBannerInLongLook;
- (bool)_isPresentingBannerPreventingAutomaticLock;
- (bool)_isPresentingBannerRequestingRaiseGesture;
- (bool)_isPresentingBannerWithHiddenPreview;
- (bool)_isPresentingStickyBanner;
- (bool)_isShowingShortLookAtRest;
- (bool)_isUILocked;
- (void)_lockStateChanged;
- (id)_notificationSectionSettingsForSectionIdentifier:(id)arg1;
- (id)_notificationSystemSettings;
- (id)_notificationViewControllerForActiveDragSession;
- (id)_notificationViewControllerForRequest:(id)arg1;
- (id)_notificationViewControllerFromPresentable:(id)arg1;
- (void)_performCancelAction;
- (void)_performSilenceAction;
- (void)_postNotificationRequest:(id)arg1 modal:(bool)arg2 completion:(id /* block */)arg3;
- (void)_postPresentableForRequest:(id)arg1 modal:(bool)arg2 completion:(id /* block */)arg3;
- (id)_presentableForRequest:(id)arg1 modal:(bool)arg2;
- (bool)_presentedBannerMatchesNotificationRequest:(id)arg1;
- (id)_presentedNotificationPresentableVC;
- (id)_presentedNotificationRequest;
- (id)_presentedNotificationRequestPresenter;
- (void)_publishDidPresentBannerForNotificationRequest:(id)arg1;
- (void)_requestBiometricAuthIfAmbientPresentedForNotificationRequest:(id)arg1;
- (id)_requestFromPresentable:(id)arg1;
- (void)_requestUnlockForExpansionForViewController:(id)arg1 notificationRequest:(id)arg2 completionBlock:(id /* block */)arg3;
- (void)_resetPresentTimer;
- (bool)_revokeAllPresentablesWithRequesterIdentifier:(id)arg1 reason:(id)arg2 options:(unsigned long long)arg3;
- (void)_setNotificationViewControllerForActiveDragSession:(id)arg1;
- (void)_setPresentedPresentable:(id)arg1;
- (void)_setReadyForNotificationRequests;
- (void)_setReadyForNotificationRequestsCoalescingWith:(id)arg1;
- (void)_setStatusBarsHidden:(bool)arg1 withDuration:(double)arg2;
- (void)_setupModeChanged;
- (void)_setupSystemStateChangeNotifications;
- (void)_setupTimers;
- (bool)_shouldAllowDragInteraction;
- (bool)_shouldDismissPresentedBannerPerformingPreludeForcingIfSticky:(bool)arg1 outReason:(id*)arg2;
- (bool)_shouldForceDismisssIfStickyForReason:(id)arg1;
- (bool)_shouldHideStatusBar;
- (bool)_shouldScreenTimeSuppressNotificationRequest:(id)arg1;
- (bool)_shouldScreenTimeSuppressNotificationsForBundleIdentifier:(id)arg1;
- (void)_startDismissTimer;
- (void)_startReplaceAndDismissTimersForRequest:(id)arg1;
- (void)_startReplaceTimer;
- (id)_startTimerWithDelay:(unsigned long long)arg1 eventHandler:(id /* block */)arg2;
- (id)_staticContentProviderForViewController:(id)arg1 class:(Class)arg2 notificationRequest:(id)arg3 test:(id /* block */)arg4;
- (void)_test_dismissNotificationRequest:(id)arg1;
- (void)_test_postNotificationRequest:(id)arg1 completion:(id /* block */)arg2;
- (void)_updateMotionGestureObservation;
- (void)_userInteractionDidEndForRequestPresenter:(id)arg1;
- (void)_userInteractionWillBeginForRequestPresenter:(id)arg1;
- (id)activeNotificationRequestPresenter;
- (id)appsStatusBarAssertion;
- (id)assistantController;
- (void)assistantDidDisappear:(id)arg1;
- (void)backlightController:(id)arg1 didAnimateBacklightToFactor:(float)arg2 source:(long long)arg3;
- (id)bannerGestureRecognizerPriorityAssertion;
- (id)biometricMatchingAssertion;
- (bool)canReceiveNotificationRequest:(id)arg1;
- (void)conformsToCSBehaviorProviding;
- (void)conformsToCSExternalBehaviorProviding;
- (void)coronaAnimationController:(id)arg1 willAnimateCoronaTransitionWithAnimator:(id)arg2;
- (id)coverSheetIdentifier;
- (id)dashBoardLegibilityProvider;
- (void)dealloc;
- (id)delegate;
- (void)destinationDidBecomeDisabled;
- (id)destinationObservers;
- (void)didReceiveRaiseGesture;
- (id)dismissTimer;
- (id)endpoint;
- (void)fullScreenPresentableViewController:(id)arg1 requestsDismissalWithReason:(id)arg2;
- (bool)fullScreenPresentableViewControllerShouldTransitionToDetailStageOnTap:(id)arg1;
- (bool)handleHomeButtonPress;
- (id)identifier;
- (id)idleTimerDisableAssertion;
- (long long)idleTimerDuration;
- (long long)idleTimerMode;
- (long long)idleWarnMode;
- (id)init;
- (bool)isAlertDestination;
- (bool)isNotificationContentExtensionVisible:(id)arg1;
- (bool)isPresentingBanner;
- (bool)isPresentingBannerInLongLook;
- (bool)isPresentingEmergencyNotification;
- (bool)isPresentingStickyBanner;
- (bool)isPreventingAutomaticLock;
- (bool)isUserInteractionInProgress;
- (id)lockScreenManager;
- (void)longLookDidDismissForNotificationViewController:(id)arg1;
- (void)longLookDidPresentForNotificationViewController:(id)arg1;
- (void)longLookWillDismissForNotificationViewController:(id)arg1;
- (void)longLookWillPresentForNotificationViewController:(id)arg1;
- (void)modifyNotificationRequest:(id)arg1;
- (long long)notificationBehavior;
- (void)notificationManagementContentProvider:(id)arg1 requestsPresentingNotificationManagementViewType:(unsigned long long)arg2 forNotificationRequest:(id)arg3 withPresentingView:(id)arg4;
- (id)notificationManagementPresenter;
- (id)notificationManagementViewPresenter:(id)arg1 sectionSettingsForSectionIdentifier:(id)arg2;
- (void)notificationManagementViewPresenter:(id)arg1 setAllowsCriticalAlerts:(bool)arg2 forNotificationRequest:(id)arg3 withSectionIdentifier:(id)arg4;
- (void)notificationManagementViewPresenter:(id)arg1 setAllowsNotifications:(bool)arg2 forNotificationRequest:(id)arg3 withSectionIdentifier:(id)arg4;
- (void)notificationManagementViewPresenter:(id)arg1 setAllowsTimeSensitive:(bool)arg2 forNotificationRequest:(id)arg3 withSectionIdentifier:(id)arg4;
- (void)notificationManagementViewPresenter:(id)arg1 setDeliverQuietly:(bool)arg2 forNotificationRequest:(id)arg3 withSectionIdentifier:(id)arg4;
- (void)notificationManagementViewPresenter:(id)arg1 setMuted:(bool)arg2 untilDate:(id)arg3 forSectionIdentifier:(id)arg4 threadIdentifier:(id)arg5;
- (void)notificationManagementViewPresenterDidDismissManagementView:(id)arg1;
- (id)notificationManagementViewPresenterRequestsSystemSettings:(id)arg1;
- (void)notificationManagementViewPresenterWillPresentManagementView:(id)arg1;
- (void)notificationPresentableViewController:(id)arg1 presentationSize:(out struct CGSize { double x1; double x2; }*)arg2 containerSize:(out struct CGSize { double x1; double x2; }*)arg3;
- (bool)notificationPresentableViewControllerShouldPresentLongLook:(id)arg1;
- (void)notificationRequestPresenter:(id)arg1 didVendTransitionBlockingAssertion:(id)arg2;
- (void)notificationRequestPresenter:(id)arg1 executeAction:(id)arg2 withParameters:(id)arg3 completion:(id /* block */)arg4;
- (void)notificationRequestPresenter:(id)arg1 shouldTransitionToStage:(id)arg2 forTrigger:(long long)arg3 completionBlock:(id /* block */)arg4;
- (id)notificationRequestPresenter:(id)arg1 staticContentProviderForNotificationRequest:(id)arg2;
- (id)notificationRequestPresenterNotificationUsageTrackingState:(id)arg1;
- (id)notificationViewController:(id)arg1 auxiliaryOptionsContentProviderForNotificationRequest:(id)arg2 withLongLook:(bool)arg3;
- (void)notificationViewController:(id)arg1 dragInteraction:(id)arg2 session:(id)arg3 didEndWithOperation:(unsigned long long)arg4;
- (void)notificationViewController:(id)arg1 dragInteraction:(id)arg2 session:(id)arg3 willEndWithOperation:(unsigned long long)arg4;
- (void)notificationViewController:(id)arg1 dragInteraction:(id)arg2 sessionWillBegin:(id)arg3;
- (void)notificationViewController:(id)arg1 requestPermissionToExecuteAction:(id)arg2 withParameters:(id)arg3 completion:(id /* block */)arg4;
- (id)notificationViewControllerContainerViewProviderForExpandedContent:(id)arg1;
- (void)notificationViewControllerDidEndUserInteraction:(id)arg1;
- (bool)notificationViewControllerShouldAllowDragInteraction:(id)arg1;
- (bool)notificationViewControllerShouldAllowExpandedPlatterInteraction:(id)arg1;
- (bool)notificationViewControllerShouldInterpretTapAsDefaultAction:(id)arg1;
- (bool)notificationViewControllerShouldPan:(id)arg1;
- (bool)notificationViewControllerShouldSupportExpandedPlatterInteraction:(id)arg1;
- (void)notificationViewControllerWillBeginUserInteraction:(id)arg1;
- (void)notificationViewControllerWillDismissForCancelAction:(id)arg1;
- (long long)participantState;
- (void)postNotificationRequest:(id)arg1;
- (void)prepareDestinationToReceiveCriticalNotificationRequest:(id)arg1;
- (void)presentModalBannerAndExpandForNotificationRequest:(id)arg1;
- (id)presentTimer;
- (void)presentableDidAppearAsBanner:(id)arg1;
- (void)presentableDidDisappearAsBanner:(id)arg1 withReason:(id)arg2;
- (id)presentablePendingSnapshot;
- (void)presentableWillAppearAsBanner:(id)arg1;
- (void)presentableWillDisappearAsBanner:(id)arg1 withReason:(id)arg2;
- (void)presentableWillNotAppearAsBanner:(id)arg1 withReason:(id)arg2;
- (id)presentedBanner;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })presentedBannerScreenFrame;
- (id)presentedPresentable;
- (long long)proximityDetectionMode;
- (void)registerNotificationBannerDestinationObserver:(id)arg1;
- (id)replaceTimer;
- (id)resignActiveAssertion;
- (unsigned long long)restrictedCapabilities;
- (long long)scrollingStrategy;
- (void)setAppsStatusBarAssertion:(id)arg1;
- (void)setAssistantController:(id)arg1;
- (void)setBannerGestureRecognizerPriorityAssertion:(id)arg1;
- (void)setBiometricMatchingAssertion:(id)arg1;
- (void)setDashBoardLegibilityProvider:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDestinationObservers:(id)arg1;
- (void)setDismissTimer:(id)arg1;
- (void)setIdleTimerDisableAssertion:(id)arg1;
- (void)setLockScreenManager:(id)arg1;
- (void)setNotificationManagementPresenter:(id)arg1;
- (void)setPresentTimer:(id)arg1;
- (void)setPresentablePendingSnapshot:(id)arg1;
- (void)setReplaceTimer:(id)arg1;
- (void)setResignActiveAssertion:(id)arg1;
- (void)setSetupManager:(id)arg1;
- (void)setStarModeDisableAssertion:(id)arg1;
- (void)setSystemStatusBarAssertion:(id)arg1;
- (void)setTransitionBlockingPrototypeRecipe:(id)arg1;
- (void)setUserInteractionInProgress:(bool)arg1;
- (id)setupManager;
- (bool)shouldAcquireWindowLevelAssertion;
- (bool)shouldDismissForReason:(id)arg1 outReason:(id*)arg2;
- (id)starModeDisableAssertion;
- (id)systemStatusBarAssertion;
- (id)transitionBlockingPrototypeRecipe;
- (void)unregisterNotificationBannerDestinationObserver:(id)arg1;
- (void)userInteractionDidEndForBannerForPresentable:(id)arg1;
- (void)userInteractionWillBeginForBannerForPresentable:(id)arg1;
- (void)withdrawNotificationRequest:(id)arg1;

@end
