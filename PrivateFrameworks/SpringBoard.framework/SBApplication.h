
@interface SBApplication : NSObject <BSDescriptionProviding, SBHApplication, UISApplicationStateServiceDataSource, XBApplicationSnapshotManifestDelegate> {
    SBApplicationInfo * _appInfo;
    long long  _appSnapshotSequenceID;
    int  _applicationRestorationCheckState;
    NSHashTable * _backgroundActivityAssertions;
    NSMapTable * _backgroundActivityAssertionsByIdentifier;
    NSHashTable * _backgroundActivityAttributions;
    NSMapTable * _backgroundActivityAttributionsByIdentifier;
    NSString * _bundleIdentifier;
    id  _cachedLastWindowLayoutAttributesOrNSNull;
    bool  _calculatedSupportedTypes;
    long long  _currentClassicMode;
    unsigned int  _dataFlags;
    bool  _dataFlagsIsSet;
    FBSApplicationDataStore * _dataStore;
    long long  _defaultClassicModeOverride;
    unsigned long long  _displayedLaunchAlerts;
    unsigned int  _doingBackgroundNetworking;
    unsigned long long  _failedAutoLaunchCountForVOIP;
    unsigned long long  _failedLaunchCount;
    unsigned int  _hasBadgeValue;
    bool  _hasProminentlyIndicatedLocationUseWhileForeground;
    bool  _hasShownDataPlanAlertSinceLock;
    SBApplicationSupportServiceRequestContext * _initializationContext;
    bool  _isConnectedToExternalAccessory;
    unsigned int  _isNewlyInstalled;
    bool  _isNowRecordingApplication;
    bool  _isPlayingAudio;
    unsigned int  _isRecentlyUpdated;
    bool  _isRecordingAudio;
    bool  _isRestoringApplicationFromHiding;
    FBProcessExitContext * _lastExitContext;
    bool  _launchWillBePrevented;
    NSUserDefaults * _lazy_defaults;
    SBApplicationWakeScheduler * _legacyVOIPPeriodicWakeScheduler;
    FBApplicationProcess * _process;
    int  _showsProgressCount;
    unsigned long long  _supportedTypes;
    XBApplicationSnapshotManifest * _synchronized_snapshotManifest;
    SBApplicationProcessState * _threadUnsafe_processState;
    bool  _uninstalled;
}

@property (getter=isAppClip, nonatomic, readonly) bool appClip;
@property (getter=isAppleApplication, nonatomic, readonly) bool appleApplication;
@property (nonatomic, retain) id badgeValue;
@property (nonatomic, readonly, copy) NSString *bundleIdentifier;
@property (nonatomic, readonly) NSURL *bundleURL;
@property (nonatomic, readonly) bool classicAppFullScreen;
@property (nonatomic, readonly) bool classicAppNonFullScreenWithHomeAffordance;
@property (nonatomic, readonly) bool classicAppPhoneAppRunningOnPad;
@property (nonatomic, readonly) bool classicAppRequiresHiDPI;
@property (nonatomic, readonly) bool classicAppScaled;
@property (nonatomic, readonly) bool classicAppScaledWithAspectRatioCloseEnoughToBeTreatedAsFullScreen;
@property (nonatomic, readonly) bool classicAppWithOwnSafeArea;
@property (nonatomic, readonly) bool classicAppWithRoundedCorners;
@property (nonatomic, readonly) bool classicAppZoomedIn;
@property (setter=_setClassicAppZoomedIn:, nonatomic) bool classicAppZoomedIn;
@property (nonatomic, readonly) bool classicAppZoomedInOrRequiresHiDPI;
@property (getter=_classicMode, nonatomic, readonly) long long classicMode;
@property (nonatomic, readonly, copy) NSString *configurationStorageIdentifier;
@property (getter=isConnectedToExternalAccessory, nonatomic) bool connectedToExternalAccessory;
@property (nonatomic, readonly) int dataUsage;
@property (readonly, copy) NSString *debugDescription;
@property (getter=_defaultClassicMode, nonatomic, readonly) long long defaultClassicMode;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly, copy) NSString *displayName;
@property (nonatomic, copy) NSArray *dynamicApplicationShortcutItems;
@property (nonatomic) unsigned long long failedAutoLaunchCountForVOIP;
@property (nonatomic, readonly) unsigned long long failedLaunchCount;
@property (nonatomic, readonly) bool hasHiddenTag;
@property (nonatomic) bool hasProminentlyIndicatedLocationUseWhileForeground;
@property (nonatomic) bool hasShownDataPlanAlertSinceLock;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, copy) NSString *iconIdentifier;
@property (nonatomic, retain) SBApplicationInfo *info;
@property (getter=isInsetForHomeAffordance, nonatomic, readonly) bool insetForHomeAffordance;
@property (getter=isInternalApplication, nonatomic, readonly) bool internalApplication;
@property (getter=_internalProcessState, setter=_setInternalProcessState:, retain) SBApplicationProcessState *internalProcessState;
@property (nonatomic, readonly) bool isClassic;
@property (nonatomic, readonly) bool isFaceTime;
@property (nonatomic, readonly) bool isMedusaCapable;
@property (nonatomic, readonly) bool isMobilePhone;
@property (nonatomic, readonly) bool isPaperBoard;
@property (nonatomic, readonly) bool isSetup;
@property (nonatomic, readonly) bool isSpotlight;
@property (nonatomic, readonly) bool isSpringBoard;
@property (nonatomic, readonly) FBProcessExitContext *lastExitContext;
@property (nonatomic, retain) SBDisplayItemLayoutAttributes *lastWindowLayoutAttributes;
@property (nonatomic, readonly) SBApplicationWakeScheduler *legacyVOIPPeriodicWakeScheduler;
@property (nonatomic, retain) NSDate *nextWakeDate;
@property (getter=isNowRecordingApplication, nonatomic) bool nowRecordingApplication;
@property (getter=isPlayingAudio, nonatomic) bool playingAudio;
@property (nonatomic, readonly) SBApplicationProcessState *processState;
@property (getter=isRestoringIcon, nonatomic) bool restoringIcon;
@property (nonatomic) bool showsProgress;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsMultitaskingShelf;
@property (nonatomic, readonly) bool suppressesControlCenter;
@property (nonatomic, readonly) bool suppressesCoverSheetGesture;
@property (getter=isSystemApplication, nonatomic, readonly) bool systemApplication;
@property (nonatomic, readonly) NSArray *tags;
@property (getter=isAnyTerminationAssertionHeld, nonatomic, readonly) bool terminationAssertionHeld;
@property (getter=isAnyTerminationAssertionInEffect, nonatomic, readonly) bool terminationAssertionInEffect;
@property (getter=isUninstallSupported, nonatomic, readonly) bool uninstallSupported;
@property (getter=isUninstalled, nonatomic) bool uninstalled;
@property (nonatomic, readonly, copy) NSString *uniqueIdentifier;
@property (nonatomic) bool usesBackgroundNetwork;
@property (nonatomic) bool usesEdgeNetwork;
@property (nonatomic) bool usesWiFiNetwork;
@property (nonatomic, readonly, copy) NSString *vendorName;
@property (nonatomic) bool wantsAutoLaunchForVOIP;

+ (bool)KJHKJHw39rq9w87q903475q0983rskjd;
+ (id)_appStateKeysToPrefetch;
+ (long long)_bestAvailableClassicModeForHostingExtensionContainedInApplication:(bool)arg1;
+ (unsigned long long)_canonicalScreenTypeForClassicMode:(long long)arg1;
+ (long long)_classicModeForLaunchingSize:(struct CGSize { double x1; double x2; })arg1;
+ (struct CGSize { double x1; double x2; })_defaultLaunchingSizeForDisplayConfiguration:(id)arg1 classicMode:(long long)arg2;
+ (id)_deviceSafeAreaInsets;
+ (void)_markAllManifestsForReingestion;
+ (unsigned long long)_niceScreenTypeForClassicType:(unsigned long long)arg1 matchingAValidDisplayZoomModeOnScreenType:(unsigned long long)arg2;
+ (void)_reingestStaticDefaultImagesForAllApps;
+ (id)restrictedClassicModeDisplayConfigurationForDisplayConfiguration:(id)arg1 classicMode:(long long)arg2;
+ (id)snapshotSortDescriptorForContentTypeMask;
+ (id)snapshotSortDescriptorForCreationDate;
+ (id)snapshotSortDescriptorForCustomSafeAreaInsets:(id)arg1;
+ (id)snapshotSortDescriptorForImageScale:(double)arg1;
+ (id)snapshotSortDescriptorForInterfaceOrientationMask:(unsigned long long)arg1;
+ (id)snapshotSortDescriptorForLaunchInterfaceIdentifier:(id)arg1;
+ (id)snapshotSortDescriptorForNames:(id)arg1;
+ (id)snapshotSortDescriptorForReferenceSize:(struct CGSize { double x1; double x2; })arg1;
+ (id)snapshotSortDescriptorForRequiredOSVersion:(id)arg1;
+ (id)snapshotSortDescriptorForScheme:(id)arg1;
+ (id)snapshotSortDescriptorForStatusBarStateMask:(unsigned long long)arg1;
+ (id)snapshotSortDescriptorForUIUserInterfaceStyle:(long long)arg1;
+ (id)snapshotSortDescriptorPreferringProtectedContent;
+ (id)snapshotSortDescriptorsForNames:(id)arg1 scheme:(id)arg2 imageScale:(double)arg3 referenceSize:(struct CGSize { double x1; double x2; })arg4 userInterfaceStyle:(long long)arg5 statusBarStateMask:(unsigned long long)arg6 interfaceOrientationMask:(unsigned long long)arg7 requiredOSVersion:(id)arg8;

- (void).cxx_destruct;
- (void)__noteSnapshotDidUpdate:(long long)arg1 forSceneIdentifier:(id)arg2;
- (int)_applicationRestorationCheckState;
- (id)_baseSceneIdentifier;
- (bool)_bypassesClassicMode;
- (void)_calculateSupportedTypesForSplashBoard;
- (void)_calculateSupportedTypesLazilyIfNecessary;
- (bool)_canLaunchInClassicMode:(long long)arg1;
- (void)_cancelPreheatForUserLaunchIfNecessary;
- (bool)_classicAppScaledOnPhone;
- (bool)_classicAppScaledPadOnPad;
- (bool)_classicAppScaledPhoneOnPad;
- (long long)_classicMode;
- (long long)_classicModeForHostingExtensionContainedInApplication:(id)arg1;
- (long long)_classicModeForHostingExtensionContainedInThisApplicationInUnknownHostingHierarchy;
- (long long)_classicModeFromSupportedTypes;
- (void)_clearSceneTitles;
- (id)_dataStore;
- (long long)_defaultClassicMode;
- (id)_defaultLaunchImageBaseName;
- (id)_defaultPNGNameFromSuspensionSettingsWithExpiration:(double*)arg1 sceneID:(id)arg2;
- (id)_defaultPNGNameUsingFallbacksWithSceneID:(id)arg1 contentOverridesContext:(id)arg2;
- (void)_didExitWithContext:(id)arg1;
- (void)_didSuspend;
- (bool)_exposeRealDisplayCornerRadii;
- (void)_ingestDefaultPNGsInManifest:(id)arg1 withLaunchImageBaseName:(id)arg2;
- (void)_ingestInfoPlistImagesInManifest:(id)arg1;
- (id)_initializationContext;
- (id)_internalProcessState;
- (void)_invalidateBackgroundActivityAssertions;
- (void)_invalidateBackgroundActivityAssertionsOrAttributions;
- (void)_invalidateBackgroundActivityAttributions;
- (bool)_isClassicViaOverride;
- (bool)_isNewEnoughToKnowAbout2020Phones;
- (bool)_isNewEnoughToKnowAboutRoundPads;
- (bool)_isNewlyInstalled;
- (bool)_isRecentlyUpdated;
- (void)_lockStateDidChange:(id)arg1;
- (id)_normalizeSnapshotName:(id)arg1;
- (void)_noteIconDataSourceDidChange;
- (void)_noteProcess:(id)arg1 didChangeToState:(id)arg2;
- (void)_noteSnapshotDidUpdateForSceneIdentifier:(id)arg1;
- (void)_noteSnapshotDidUpdateForSceneIdentifiers:(id)arg1;
- (id)_preferredImagePathByScaleInBundle:(id)arg1 resourceName:(id)arg2 ofType:(id)arg3 scale:(double)arg4 outScale:(double*)arg5;
- (id)_preferredImagePathInBundle:(id)arg1 baseResourceName:(id)arg2 ofType:(id)arg3 forMainScene:(bool)arg4 size:(struct CGSize { double x1; double x2; })arg5 scale:(double)arg6 outScale:(double*)arg7;
- (id)_prepareInitializationContextIfNecessaryForLaunchOnDisplayConfiguration:(id)arg1;
- (void)_processDidLaunch:(id)arg1;
- (void)_processWillLaunch:(id)arg1;
- (void)_purgeAndResetStaticDefaultImagesInSnapshotManifest;
- (void)_purgeStaticDefaultImagesInSnapshotManifest;
- (void)_recalculateApplicationSupportedTypes;
- (void)_reingestStaticDefaultImagesInSnapshotManifest;
- (void)_resetDataUsage;
- (void)_resetLaunchImageIngestionStatus;
- (id)_sceneIdentifierForStoredPersistenceIdentifier:(id)arg1;
- (unsigned long long)_screenTypeForClassicMode:(long long)arg1;
- (void)_setApplicationRestorationCheckState:(int)arg1;
- (void)_setClassicAppZoomedIn:(bool)arg1;
- (void)_setCurrentClassicMode:(long long)arg1;
- (void)_setDataUsage:(int)arg1;
- (void)_setDefaultClassicModeOverride:(long long)arg1;
- (void)_setInternalProcessState:(id)arg1;
- (void)_setLaunchPrevented:(bool)arg1;
- (void)_setNewlyInstalled:(bool)arg1;
- (void)_setRecentlyUpdated:(bool)arg1;
- (id)_snapshotManifest;
- (id)_snapshotManifestCreateIfNeeded:(bool)arg1;
- (id)_snapshotsWithImageName:(id)arg1 sceneHandle:(id)arg2 referenceSize:(struct CGSize { double x1; double x2; })arg3 requireExactSize:(bool)arg4 launchingScale:(double)arg5 contentTypeMask:(unsigned long long)arg6 statusBarStateMask:(unsigned long long)arg7 launchingOrientation:(long long)arg8 contentOverridesContext:(id)arg9 userInterfaceStyle:(long long)arg10 displayEdgeInfo:(id)arg11;
- (unsigned long long)_supportedTypeForClassicModeNone;
- (bool)_supportsApplicationType:(unsigned long long)arg1;
- (void)_updateProcess:(id)arg1 withState:(id)arg2;
- (void)_updateRecentlyUpdatedTimer;
- (bool)_useSupportedTypesForSplashBoard;
- (id)_windowSceneFromApplicationSceneHandle:(id)arg1;
- (void)_xbactivity_saveSnapshotForSceneHandle:(id)arg1 context:(id)arg2 completion:(id /* block */)arg3;
- (bool)alwaysMaximizedInChamois;
- (id)backgroundActivityAssertionsByIdentifier;
- (id)backgroundActivityAttributionsByIdentifier;
- (id)badgeNumberOrStringForIcon:(id)arg1;
- (id)badgeValue;
- (id)bestSnapshotWithImageName:(id)arg1 sceneHandle:(id)arg2 variantID:(id)arg3 scale:(double)arg4 referenceSize:(struct CGSize { double x1; double x2; })arg5 requireExactSize:(bool)arg6 contentTypeMask:(unsigned long long)arg7 statusBarStateMask:(unsigned long long)arg8 launchingOrientation:(long long)arg9 contentOverridesContext:(id)arg10 userInterfaceStyle:(long long)arg11 displayEdgeInfo:(id)arg12;
- (id)bundleIdentifier;
- (id)bundleURL;
- (id)cachedImageForSnapshot:(id)arg1 interfaceOrientation:(long long)arg2;
- (bool)canGenerateIconsInBackgroundForIcon:(id)arg1;
- (bool)classicAppFullScreen;
- (bool)classicAppNonFullScreenWithHomeAffordance;
- (bool)classicAppPhoneAppRunningOnPad;
- (bool)classicAppRequiresHiDPI;
- (bool)classicAppScaled;
- (bool)classicAppScaledWithAspectRatioCloseEnoughToBeTreatedAsFullScreen;
- (bool)classicAppWithOwnSafeArea;
- (bool)classicAppWithRoundedCorners;
- (bool)classicAppZoomedIn;
- (bool)classicAppZoomedInOrRequiresHiDPI;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)createDownscaledVariantForSnapshot:(id)arg1 sceneHandle:(id)arg2 scaleFactor:(double)arg3 didSaveImage:(id /* block */)arg4;
- (long long)dataOwnershipRoleAsDragDropTargetForIcon:(id)arg1;
- (int)dataUsage;
- (void)dealloc;
- (struct CGSize { double x1; double x2; })defaultLaunchingSizeForDisplayConfiguration:(id)arg1;
- (void)deleteAllSnapshots;
- (void)deleteSnapshotForContext:(id)arg1;
- (id)description;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
- (id)displayName;
- (id)dynamicApplicationShortcutItems;
- (unsigned long long)failedAutoLaunchCountForVOIP;
- (unsigned long long)failedLaunchCount;
- (void)flushSnapshotsForAllScenes;
- (void)flushSnapshotsForAllScenesIncludingAllLegacyImages;
- (void)flushSnapshotsForSceneID:(id)arg1;
- (id)folderFallbackTitleForIcon:(id)arg1;
- (id)folderTitleOptionsForIcon:(id)arg1;
- (bool)hasDisplayedLaunchAlertForType:(unsigned long long)arg1;
- (bool)hasHiddenTag;
- (bool)hasProminentlyIndicatedLocationUseWhileForeground;
- (bool)hasRegisteredBackgroundActivityWithIdentifier:(id)arg1;
- (bool)hasShownDataPlanAlertSinceLock;
- (id)iTunesCategoriesOrderedByRelevancyForIcon:(id)arg1;
- (id)icon:(id)arg1 displayNameForLocation:(id)arg2;
- (id)icon:(id)arg1 displayNameForObscuredDisabledLaunchForLocation:(id)arg2;
- (id)icon:(id)arg1 imageWithInfo:(struct SBIconImageInfo { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; })arg2;
- (bool)icon:(id)arg1 launchFromLocation:(id)arg2 context:(id)arg3;
- (id)icon:(id)arg1 unmaskedImageWithInfo:(struct SBIconImageInfo { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; double x2; double x3; })arg2;
- (bool)iconAllowsLaunch:(id)arg1;
- (bool)iconCanTightenLabel:(id)arg1;
- (bool)iconCanTruncateLabel:(id)arg1;
- (bool)iconCompleteUninstall:(id)arg1;
- (bool)iconDisallowsLaunchForObscuredReason:(id)arg1;
- (id)iconIdentifier;
- (bool)iconSupportsUninstall:(id)arg1;
- (id)imageForSnapshot:(id)arg1 interfaceOrientation:(long long)arg2;
- (bool)includesStatusBarInClassicJailForInterfaceOrientation:(long long)arg1;
- (id)info;
- (id)initWithApplicationInfo:(id)arg1;
- (bool)isAnyTerminationAssertionHeld;
- (bool)isAnyTerminationAssertionInEffect;
- (bool)isAppClip;
- (bool)isAppleApplication;
- (bool)isCacheCleaningTerminationAssertionHeld;
- (bool)isClassic;
- (bool)isConnectedToExternalAccessory;
- (bool)isFaceTime;
- (bool)isInsetForHomeAffordance;
- (bool)isInternalApplication;
- (bool)isLaunchDisallowedForObscuredReason;
- (bool)isMedusaCapable;
- (bool)isMobilePhone;
- (bool)isNowRecordingApplication;
- (bool)isPaperBoard;
- (bool)isPlayingAudio;
- (bool)isRestoringIcon;
- (bool)isSameExecutableAsApplication:(id)arg1;
- (bool)isSetup;
- (bool)isSpotlight;
- (bool)isSpringBoard;
- (bool)isSystemApplication;
- (bool)isTimedOutForIcon:(id)arg1;
- (bool)isUninstallSupported;
- (bool)isUninstalled;
- (bool)isWebApplication;
- (long long)labelAccessoryTypeForIcon:(id)arg1;
- (id)lastExitContext;
- (id)lastWindowLayoutAttributes;
- (void)launchFromIcon:(id)arg1 location:(id)arg2 context:(id)arg3;
- (id)legacyVOIPPeriodicWakeScheduler;
- (void)manifest:(id)arg1 didPurgeProtectedContentSnapshotsWithGroupIdentifiers:(id)arg2;
- (void)markNewlyInstalled;
- (void)markRecentlyUpdated;
- (id)mostRecentSceneSnapshotsForSceneHandle:(id)arg1 scale:(double)arg2 launchingOrientation:(long long)arg3;
- (id)nextWakeDate;
- (void)possibleUserTapBeganWithAbsoluteTime:(unsigned long long)arg1 andContinuousTime:(unsigned long long)arg2;
- (void)possibleUserTapDidCancel;
- (void)preHeatForUserLaunchIfNecessaryWithAbsoluteTime:(unsigned long long)arg1 andContinuousTime:(unsigned long long)arg2;
- (long long)preferredSizingPolicyForSwitcherWindowManagementStyle:(unsigned long long)arg1 displayIdentity:(id)arg2 contentOrientation:(long long)arg3 containerOrientation:(long long)arg4;
- (unsigned long long)priorityForIcon:(id)arg1;
- (id)processState;
- (void)purgeCaches;
- (void)refreshLaunchImagesInSnapshotManifestIfNeeded;
- (void)releaseBackgroundActivityAssertion:(id)arg1;
- (void)releaseBackgroundActivityAttribution:(id)arg1;
- (id)restrictedClassicModeDisplayConfigurationForDisplayConfiguration:(id)arg1;
- (bool)restrictedToTheEmbeddedDisplayInChamois;
- (void)saveSnapshotForSceneHandle:(id)arg1 context:(id)arg2 completion:(id /* block */)arg3;
- (void)saveSuspendSnapshot:(id)arg1 forSceneHandle:(id)arg2;
- (void)setBadgeValue:(id)arg1;
- (void)setConnectedToExternalAccessory:(bool)arg1;
- (void)setDynamicApplicationShortcutItems:(id)arg1;
- (void)setFailedAutoLaunchCountForVOIP:(unsigned long long)arg1;
- (void)setHasDisplayedLaunchAlert:(bool)arg1 forType:(unsigned long long)arg2;
- (void)setHasProminentlyIndicatedLocationUseWhileForeground:(bool)arg1;
- (void)setHasShownDataPlanAlertSinceLock:(bool)arg1;
- (void)setInfo:(id)arg1;
- (void)setLastWindowLayoutAttributes:(id)arg1;
- (void)setNextWakeDate:(id)arg1;
- (void)setNowRecordingApplication:(bool)arg1;
- (void)setPlayingAudio:(bool)arg1;
- (void)setRestoringIcon:(bool)arg1;
- (void)setShowsProgress:(bool)arg1;
- (void)setUninstalled:(bool)arg1;
- (void)setUsesBackgroundNetwork:(bool)arg1;
- (void)setUsesEdgeNetwork:(bool)arg1;
- (void)setUsesWiFiNetwork:(bool)arg1;
- (void)setWantsAutoLaunchForVOIP:(bool)arg1;
- (bool)shouldReceiveSourceApplicationContextFromOriginatingApplication:(id)arg1;
- (bool)showsProgress;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })snapshotFrameForClassicInsideBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 forOrientation:(long long)arg2 scaleFactor:(double*)arg3 inReferenceSpace:(bool)arg4;
- (struct CGSize { double x1; double x2; })snapshotSizeAdjustedForLegacyStatusBarBasedOnSize:(struct CGSize { double x1; double x2; })arg1 interfaceOrientation:(long long)arg2 contentFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg3;
- (id)succinctDescription;
- (id)succinctDescriptionBuilder;
- (unsigned long long)supportedGridSizeClassesForIcon:(id)arg1;
- (unsigned long long)supportedSizingPoliciesForSwitcherWindowManagementStyle:(unsigned long long)arg1 displayIdentity:(id)arg2 contentOrientation:(long long)arg3 containerOrientation:(long long)arg4;
- (bool)supportsChamoisOnExternalDisplay;
- (bool)supportsChamoisSceneResizing;
- (bool)supportsChamoisViewResizing;
- (bool)supportsMixedOrientationForSwitcherWindowManagementStyle:(unsigned long long)arg1 displayIdentity:(id)arg2;
- (bool)supportsMultiWindowLayoutsForSwitcherWindowManagementStyle:(unsigned long long)arg1 displayIdentity:(id)arg2;
- (bool)supportsMultitaskingShelf;
- (bool)suppressesControlCenter;
- (bool)suppressesCoverSheetGesture;
- (id)tags;
- (id)tagsForIcon:(id)arg1;
- (void)takeBackgroundActivityAssertion:(id)arg1;
- (void)takeBackgroundActivityAttribution:(id)arg1;
- (void)uninstall;
- (id)uniqueIdentifier;
- (bool)usesBackgroundNetwork;
- (bool)usesEdgeNetwork;
- (bool)usesWiFiNetwork;
- (id)vendorName;
- (bool)wantsAutoLaunchForVOIP;

@end
