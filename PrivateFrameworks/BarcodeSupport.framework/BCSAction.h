
@interface BCSAction : NSObject <BCSAction, BCSActionPrivate> {
    BCSActionPickerViewAssistant * _actionPickerViewAssistant;
    <BCSCodePayload> * _codePayload;
    NSString * _contentPreviewString;
    <BCSParsedDataPrivate> * _data;
    BCSDetectedCode * _detectedCode;
    NSURL * _url;
    NSArray * appLinks;
    CPSClipMetadataRequest * clipMetadataRequest;
    <BCSActionDelegate> * delegate;
    bool  hasSensitiveURL;
    bool  isAMSAction;
    bool  isAirplayPairingAction;
    bool  isContinuityCameraAction;
    bool  isInvalidDataAction;
    bool  isPasskeyAction;
    bool  isPasskeyAssertionAction;
    bool  isPasskeyRegistrationAction;
    bool  isWiFiAction;
    bool  shouldRequireUserToPickTargetApp;
    NSURL * urlThatCanBeOpened;
}

@property (nonatomic, readonly) UIImage *actionIcon;
@property (nonatomic, readonly, copy) NSArray *actionPickerItems;
@property (nonatomic, readonly, copy) NSArray *appLinks;
@property (nonatomic, retain) CPSClipMetadataRequest *clipMetadataRequest;
@property (nonatomic, readonly) <BCSCodePayload> *codePayload;
@property (nonatomic, readonly) long long codeType;
@property (nonatomic, readonly) NSString *contentPreviewString;
@property (nonatomic, readonly) <BCSParsedDataPrivate> *data;
@property (nonatomic, readonly) NSString *dataTypeDisplayString;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly, copy) NSDictionary *debugDescriptionDictionary;
@property (nonatomic, readonly, copy) NSString *defaultActionTargetApplicationBundleIdentifier;
@property (nonatomic) <BCSActionDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) BCSDetectedCode *detectedCode;
@property (nonatomic, readonly, copy) NSString *extraPreviewText;
@property (nonatomic, readonly) bool hasSensitiveURL;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isAMSAction;
@property (nonatomic, readonly) bool isAirplayPairingAction;
@property (nonatomic, readonly) bool isContinuityCameraAction;
@property (nonatomic, readonly) bool isInvalidDataAction;
@property (nonatomic, readonly) bool isLiveCameraOnlyAction;
@property (nonatomic, readonly) bool isPasskeyAction;
@property (nonatomic, readonly) bool isPasskeyAssertionAction;
@property (nonatomic, readonly) bool isPasskeyRegistrationAction;
@property (nonatomic, readonly) bool isWiFiAction;
@property (nonatomic, readonly, copy) NSString *localizedActionDescription;
@property (nonatomic, readonly, copy) NSString *localizedDefaultActionDescription;
@property (nonatomic, readonly, copy) NSString *localizedDefaultActionTitle;
@property (nonatomic, readonly) NSArray *menuElements;
@property (nonatomic, readonly) unsigned long long menuElementsCount;
@property (nonatomic, readonly) id /* block */ menuProvider;
@property (nonatomic, readonly) long long payloadDataType;
@property (nonatomic, readonly) bool preferItemsInSubmenu;
@property (nonatomic, readonly) NSString *shortDescription;
@property (nonatomic, readonly) bool shouldRequireUserToPickTargetApp;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSURL *url;
@property (nonatomic, readonly) NSURL *urlThatCanBeOpened;

+ (void)getActionWithData:(id)arg1 codePayload:(id)arg2 completionHandler:(id /* block */)arg3;

- (void).cxx_destruct;
- (id)_fallbackDataTypeDisplayString;
- (id)actionIcon;
- (id)actionPickerItems;
- (id)appLinks;
- (id)clipMetadataRequest;
- (id)codePayload;
- (long long)codeType;
- (id)contentPreviewString;
- (id)data;
- (id)dataTypeDisplayString;
- (id)debugDescriptionDictionary;
- (id)debugDescriptionExtraInfoDictionary;
- (id)defaultActionTargetApplicationBundleIdentifier;
- (id)delegate;
- (id)detectedCode;
- (void)determineActionabilityWithCompletionHandler:(id /* block */)arg1;
- (id)extraPreviewText;
- (bool)hasSensitiveURL;
- (id)initWithData:(id)arg1 codePayload:(id)arg2;
- (bool)isAMSAction;
- (bool)isAirplayPairingAction;
- (bool)isContinuityCameraAction;
- (bool)isInvalidDataAction;
- (bool)isLiveCameraOnlyAction;
- (bool)isPasskeyAction;
- (bool)isPasskeyAssertionAction;
- (bool)isPasskeyRegistrationAction;
- (bool)isWiFiAction;
- (id)localizedActionDescription;
- (id)localizedDefaultActionDescription;
- (id)localizedDefaultActionTitle;
- (id)menuElements;
- (unsigned long long)menuElementsCount;
- (id /* block */)menuProvider;
- (long long)payloadDataType;
- (void)performAction;
- (void)performActionWithCompletion:(id /* block */)arg1;
- (void)performActionWithOptions:(id)arg1 completion:(id /* block */)arg2;
- (void)performDefaultAction;
- (bool)preferItemsInSubmenu;
- (void)setClipMetadataRequest:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDetectedCode:(id)arg1;
- (id)shortDescription;
- (bool)shouldRequireUserToPickTargetApp;
- (void)showActionPicker;
- (id)subMenuWithMenuItems:(id)arg1;
- (long long)type;
- (id)url;
- (id)urlThatCanBeOpened;

@end
