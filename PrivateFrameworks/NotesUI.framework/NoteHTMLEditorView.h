
@interface NoteHTMLEditorView : UIView <UIScrollViewDelegate, WKNavigationDelegate, WKUIDelegatePrivate, _WKInputDelegate> {
    <NoteHTMLEditorViewActionDelegate> * _actionDelegate;
    NSArray * _attachmentContentIDs;
    NSArray * _attachmentsToLoad;
    NSLayoutConstraint * _contentSizeHeightConstraint;
    NSLayoutConstraint * _contentSizeWidthConstraint;
    <NoteHTMLEditorViewDelegate> * _delegate;
    bool  _editable;
    bool  _editing;
    bool  _hasAttachments;
    NSString * _htmlString;
    NSString * _htmlStringToLoad;
    <NoteHTMLEditorViewLayoutDelegate> * _layoutDelegate;
    unsigned short  _listStyle;
    NoteHTMLEditorViewScriptMessageHandler * _scriptMessageHandler;
    long long  _selectionLength;
    bool  _setSelectionToEndAfterLoad;
    bool  _startEditingAfterLoad;
    NSString * _text;
    NSString * _title;
    ICSelectorDelayer * _updateContentDelayer;
    bool  _updatingContent;
    NoteHTMLEditorViewURLSchemeHandler * _urlSchemeHandler;
    NoteWKWebView * _webView;
}

@property (nonatomic) <NoteHTMLEditorViewActionDelegate> *actionDelegate;
@property (nonatomic, copy) NSArray *attachmentContentIDs;
@property (nonatomic, copy) NSArray *attachmentsToLoad;
@property (nonatomic, retain) NSLayoutConstraint *contentSizeHeightConstraint;
@property (nonatomic, retain) NSLayoutConstraint *contentSizeWidthConstraint;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <NoteHTMLEditorViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (getter=isEditable, nonatomic) bool editable;
@property (getter=isEditing, nonatomic) bool editing;
@property (nonatomic) bool hasAttachments;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSString *htmlString;
@property (nonatomic, copy) NSString *htmlStringToLoad;
@property (nonatomic) <NoteHTMLEditorViewLayoutDelegate> *layoutDelegate;
@property (nonatomic) unsigned short listStyle;
@property (nonatomic, retain) NoteHTMLEditorViewScriptMessageHandler *scriptMessageHandler;
@property (nonatomic) long long selectionLength;
@property (nonatomic) bool setSelectionToEndAfterLoad;
@property (nonatomic) bool startEditingAfterLoad;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSString *text;
@property (nonatomic) double textZoomFactor;
@property (nonatomic, copy) NSString *title;
@property (nonatomic, retain) ICSelectorDelayer *updateContentDelayer;
@property (nonatomic) bool updatingContent;
@property (nonatomic, retain) NoteHTMLEditorViewURLSchemeHandler *urlSchemeHandler;
@property (nonatomic, readonly) UIViewPrintFormatter *viewPrintFormatter;
@property (nonatomic, readonly) WebArchive *webArchive;
@property (nonatomic, retain) NoteWKWebView *webView;

+ (id)baseHTMLString;

- (void).cxx_destruct;
- (void)_webView:(id)arg1 contextMenuConfigurationForElement:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)_webView:(id)arg1 contextMenuDidEndForElement:(id)arg2;
- (long long)_webView:(id)arg1 dataOwnerForDragSession:(id)arg2;
- (long long)_webView:(id)arg1 dataOwnerForDropSession:(id)arg2;
- (void)_webView:(id)arg1 didInsertAttachment:(id)arg2 withSource:(id)arg3;
- (void)_webView:(id)arg1 didStartInputSession:(id)arg2;
- (bool)_webView:(id)arg1 focusShouldStartInputSession:(id)arg2;
- (bool)_webView:(id)arg1 performDataInteractionOperationWithItemProviders:(id)arg2;
- (id)actionDelegate;
- (void)adoptEditableState;
- (id)attachmentContentIDs;
- (id)attachmentInfoDictionaryForAttachmentPresentation:(id)arg1;
- (id)attachmentsToLoad;
- (void)buildMenuWithBuilder:(id)arg1;
- (bool)canBecomeFocused;
- (bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (id)contentSizeHeightConstraint;
- (id)contentSizeWidthConstraint;
- (id)contextMenuConfigurationForElement:(id)arg1 presentation:(id)arg2;
- (void)copyNoteHTMLToPasteboard;
- (id)delegate;
- (void)didReceiveScriptMessage:(id)arg1;
- (void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (void)getRectForSelectionWithCompletion:(id /* block */)arg1;
- (bool)hasAttachments;
- (id)htmlString;
- (id)htmlStringToLoad;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)insertBulletedList:(id)arg1;
- (void)insertDashedList:(id)arg1;
- (void)insertHTMLString:(id)arg1;
- (void)insertImage:(id)arg1;
- (void)insertLinkWithURL:(id)arg1 title:(id)arg2;
- (void)insertLinksWithURLs:(id)arg1 titles:(id)arg2;
- (void)insertOrderedList:(id)arg1;
- (bool)isEditable;
- (bool)isEditing;
- (bool)isFirstResponder;
- (id)jsonStringFromDictionaryOrArray:(id)arg1;
- (id)layoutDelegate;
- (unsigned short)listStyle;
- (void)loadAttachmentContentForURLSchemeTask:(id)arg1;
- (void)removeScriptHandlers;
- (void)removeStyle:(id)arg1;
- (void)replaceContentIDs:(id)arg1;
- (void)replaceSelectionWithAttachmentPresentation:(id)arg1;
- (id)scriptMessageHandler;
- (void)scrollSelectionToVisible:(bool)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (long long)selectionLength;
- (void)setActionDelegate:(id)arg1;
- (void)setAttachmentContentIDs:(id)arg1;
- (void)setAttachmentsToLoad:(id)arg1;
- (void)setContentSizeHeightConstraint:(id)arg1;
- (void)setContentSizeWidthConstraint:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEditable:(bool)arg1;
- (void)setEditing:(bool)arg1;
- (void)setEnableAttachments:(bool)arg1;
- (void)setEnableShiftNewlinesInSmartLists:(bool)arg1;
- (void)setEnableSmartLists:(bool)arg1;
- (void)setHasAttachments:(bool)arg1;
- (void)setHtmlString:(id)arg1;
- (void)setHtmlString:(id)arg1 attachments:(id)arg2;
- (void)setHtmlStringToLoad:(id)arg1;
- (void)setLayoutDelegate:(id)arg1;
- (void)setListStyle:(unsigned short)arg1;
- (void)setScriptMessageHandler:(id)arg1;
- (void)setSelectionLength:(long long)arg1;
- (void)setSelectionToEnd;
- (bool)setSelectionToEndAfterLoad;
- (void)setSelectionToStart;
- (void)setSetSelectionToEndAfterLoad:(bool)arg1;
- (void)setStartEditingAfterLoad:(bool)arg1;
- (void)setText:(id)arg1;
- (void)setTextZoomFactor:(double)arg1;
- (void)setTitle:(id)arg1;
- (void)setUpdateContentDelayer:(id)arg1;
- (void)setUpdatingContent:(bool)arg1;
- (void)setUrlSchemeHandler:(id)arg1;
- (void)setWebView:(id)arg1;
- (void)setupWebView;
- (void)startEditing;
- (bool)startEditingAfterLoad;
- (void)stopEditing;
- (void)stopEditingWithCompletion:(id /* block */)arg1;
- (void)stopLoadingAttachmentContentForURLSchemeTask:(id)arg1;
- (id)targetForAction:(SEL)arg1 withSender:(id)arg2;
- (id)text;
- (double)textZoomFactor;
- (id)title;
- (void)undoablyRemoveAttachmentPresentations:(id)arg1 undoManager:(id)arg2;
- (void)undoablyReplaceSelectionWithAttachmentPresentations:(id)arg1 undoManager:(id)arg2;
- (void)updateContent;
- (id)updateContentDelayer;
- (void)updateDataDetectors;
- (void)updateDataOwnerForCopyAndPaste;
- (void)updateWebViewEditability;
- (bool)updatingContent;
- (id)urlSchemeHandler;
- (id)viewPrintFormatter;
- (id)webArchive;
- (id)webView;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(id /* block */)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (id)webViewConfiguration;
- (void)webViewWebContentProcessDidTerminate:(id)arg1;

@end
