
@interface GEOCarInfo : PBCodable <NSCopying> {
    int  _brightness;
    NSString * _carName;
    int  _colorRange;
    bool  _destinationSharingEnabled;
    int  _deviceConnection;
    struct { 
        int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _engineTypes;
    struct { 
        unsigned int has_screenResolution : 1; 
        unsigned int has_brightness : 1; 
        unsigned int has_colorRange : 1; 
        unsigned int has_deviceConnection : 1; 
        unsigned int has_navAidedDrivingStatus : 1; 
        unsigned int has_destinationSharingEnabled : 1; 
        unsigned int has_isInstructionCardEnabled : 1; 
        unsigned int has_isInstrumentClusterEnabled : 1; 
        unsigned int has_isMapviewEnabled : 1; 
        unsigned int read_unknownFields : 1; 
        unsigned int read_engineTypes : 1; 
        unsigned int read_inputMethods : 1; 
        unsigned int read_carName : 1; 
        unsigned int read_manufacturer : 1; 
        unsigned int read_model : 1; 
        unsigned int read_screenDimension : 1; 
        unsigned int wrote_anyField : 1; 
    }  _flags;
    struct { 
        int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _inputMethods;
    bool  _isInstructionCardEnabled;
    bool  _isInstrumentClusterEnabled;
    bool  _isMapviewEnabled;
    NSString * _manufacturer;
    NSString * _model;
    int  _navAidedDrivingStatus;
    PBDataReader * _reader;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _readerLock;
    unsigned int  _readerMarkLength;
    unsigned int  _readerMarkPos;
    GEOScreenDimension * _screenDimension;
    struct GEOScreenResolution { 
        double _height; 
        double _width; 
        struct { 
            unsigned int height : 1; 
            unsigned int width : 1; 
        } _has; 
    }  _screenResolution;
    PBUnknownFields * _unknownFields;
}

@property (nonatomic) int brightness;
@property (nonatomic, retain) NSString *carName;
@property (nonatomic) int colorRange;
@property (nonatomic) bool destinationSharingEnabled;
@property (nonatomic) int deviceConnection;
@property (nonatomic, readonly) int*engineTypes;
@property (nonatomic, readonly) unsigned long long engineTypesCount;
@property (nonatomic) bool hasBrightness;
@property (nonatomic, readonly) bool hasCarName;
@property (nonatomic) bool hasColorRange;
@property (nonatomic) bool hasDestinationSharingEnabled;
@property (nonatomic) bool hasDeviceConnection;
@property (nonatomic) bool hasIsInstructionCardEnabled;
@property (nonatomic) bool hasIsInstrumentClusterEnabled;
@property (nonatomic) bool hasIsMapviewEnabled;
@property (nonatomic, readonly) bool hasManufacturer;
@property (nonatomic, readonly) bool hasModel;
@property (nonatomic) bool hasNavAidedDrivingStatus;
@property (nonatomic, readonly) bool hasScreenDimension;
@property (nonatomic) bool hasScreenResolution;
@property (nonatomic, readonly) int*inputMethods;
@property (nonatomic, readonly) unsigned long long inputMethodsCount;
@property (nonatomic) bool isInstructionCardEnabled;
@property (nonatomic) bool isInstrumentClusterEnabled;
@property (nonatomic) bool isMapviewEnabled;
@property (nonatomic, retain) NSString *manufacturer;
@property (nonatomic, retain) NSString *model;
@property (nonatomic) int navAidedDrivingStatus;
@property (nonatomic, retain) GEOScreenDimension *screenDimension;
@property (nonatomic) struct GEOScreenResolution { double x1; double x2; struct { unsigned int x_3_1_1 : 1; unsigned int x_3_1_2 : 1; } x3; } screenResolution;
@property (nonatomic, readonly) PBUnknownFields *unknownFields;

+ (id)carInfoWithTraits:(id)arg1;
+ (bool)isValid:(id)arg1;

- (void).cxx_destruct;
- (int)StringAsDeviceConnection:(id)arg1;
- (int)StringAsEngineTypes:(id)arg1;
- (int)StringAsInputMethods:(id)arg1;
- (int)StringAsNavAidedDrivingStatus:(id)arg1;
- (void)addEngineType:(int)arg1;
- (void)addInputMethod:(int)arg1;
- (int)brightness;
- (id)carName;
- (void)clearEngineTypes;
- (void)clearInputMethods;
- (void)clearUnknownFields:(bool)arg1;
- (int)colorRange;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (bool)destinationSharingEnabled;
- (int)deviceConnection;
- (id)deviceConnectionAsString:(int)arg1;
- (id)dictionaryRepresentation;
- (int)engineTypeAtIndex:(unsigned long long)arg1;
- (int*)engineTypes;
- (id)engineTypesAsString:(int)arg1;
- (unsigned long long)engineTypesCount;
- (bool)hasBrightness;
- (bool)hasCarName;
- (bool)hasColorRange;
- (bool)hasDestinationSharingEnabled;
- (bool)hasDeviceConnection;
- (bool)hasIsInstructionCardEnabled;
- (bool)hasIsInstrumentClusterEnabled;
- (bool)hasIsMapviewEnabled;
- (bool)hasManufacturer;
- (bool)hasModel;
- (bool)hasNavAidedDrivingStatus;
- (bool)hasScreenDimension;
- (bool)hasScreenResolution;
- (unsigned long long)hash;
- (id)init;
- (id)initWithData:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithJSON:(id)arg1;
- (id)initWithTraits:(id)arg1;
- (int)inputMethodAtIndex:(unsigned long long)arg1;
- (int*)inputMethods;
- (id)inputMethodsAsString:(int)arg1;
- (unsigned long long)inputMethodsCount;
- (bool)isEqual:(id)arg1;
- (bool)isInstructionCardEnabled;
- (bool)isInstrumentClusterEnabled;
- (bool)isMapviewEnabled;
- (id)jsonRepresentation;
- (id)manufacturer;
- (void)mergeFrom:(id)arg1;
- (id)model;
- (int)navAidedDrivingStatus;
- (id)navAidedDrivingStatusAsString:(int)arg1;
- (void)readAll:(bool)arg1;
- (bool)readFrom:(id)arg1;
- (id)screenDimension;
- (struct GEOScreenResolution { double x1; double x2; struct { unsigned int x_3_1_1 : 1; unsigned int x_3_1_2 : 1; } x3; })screenResolution;
- (void)setBrightness:(int)arg1;
- (void)setCarName:(id)arg1;
- (void)setColorRange:(int)arg1;
- (void)setDestinationSharingEnabled:(bool)arg1;
- (void)setDeviceConnection:(int)arg1;
- (void)setEngineTypes:(int*)arg1 count:(unsigned long long)arg2;
- (void)setHasBrightness:(bool)arg1;
- (void)setHasColorRange:(bool)arg1;
- (void)setHasDestinationSharingEnabled:(bool)arg1;
- (void)setHasDeviceConnection:(bool)arg1;
- (void)setHasIsInstructionCardEnabled:(bool)arg1;
- (void)setHasIsInstrumentClusterEnabled:(bool)arg1;
- (void)setHasIsMapviewEnabled:(bool)arg1;
- (void)setHasNavAidedDrivingStatus:(bool)arg1;
- (void)setHasScreenResolution:(bool)arg1;
- (void)setInputMethods:(int*)arg1 count:(unsigned long long)arg2;
- (void)setIsInstructionCardEnabled:(bool)arg1;
- (void)setIsInstrumentClusterEnabled:(bool)arg1;
- (void)setIsMapviewEnabled:(bool)arg1;
- (void)setManufacturer:(id)arg1;
- (void)setModel:(id)arg1;
- (void)setNavAidedDrivingStatus:(int)arg1;
- (void)setScreenDimension:(id)arg1;
- (void)setScreenResolution:(struct GEOScreenResolution { double x1; double x2; struct { unsigned int x_3_1_1 : 1; unsigned int x_3_1_2 : 1; } x3; })arg1;
- (id)unknownFields;
- (void)writeTo:(id)arg1;

@end
