
@interface GEOVLFFrameDetails : PBCodable <NSCopying> {
    struct { 
        float *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _calibrationMatrixs;
    struct { 
        unsigned int has_resultTranslationX : 1; 
        unsigned int has_resultTranslationY : 1; 
        unsigned int has_resultTranslationZ : 1; 
        unsigned int has_timestamp : 1; 
        unsigned int has_radialDistortion1 : 1; 
        unsigned int has_radialDistortion2 : 1; 
        unsigned int has_resultStatus : 1; 
        unsigned int has_vioStatus : 1; 
        unsigned int read_calibrationMatrixs : 1; 
        unsigned int read_resultPoseRotations : 1; 
        unsigned int read_slamPoses : 1; 
        unsigned int read_vioPoses : 1; 
        unsigned int read_tileId : 1; 
        unsigned int wrote_anyField : 1; 
    }  _flags;
    float  _radialDistortion1;
    float  _radialDistortion2;
    PBDataReader * _reader;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _readerLock;
    unsigned int  _readerMarkLength;
    unsigned int  _readerMarkPos;
    struct { 
        double *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _resultPoseRotations;
    int  _resultStatus;
    double  _resultTranslationX;
    double  _resultTranslationY;
    double  _resultTranslationZ;
    struct { 
        float *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _slamPoses;
    GEOVLFUsageTileID * _tileId;
    double  _timestamp;
    struct { 
        float *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _vioPoses;
    unsigned int  _vioStatus;
}

@property (nonatomic, readonly) float*calibrationMatrixs;
@property (nonatomic, readonly) unsigned long long calibrationMatrixsCount;
@property (nonatomic) bool hasRadialDistortion1;
@property (nonatomic) bool hasRadialDistortion2;
@property (nonatomic) bool hasResultStatus;
@property (nonatomic) bool hasResultTranslationX;
@property (nonatomic) bool hasResultTranslationY;
@property (nonatomic) bool hasResultTranslationZ;
@property (nonatomic, readonly) bool hasTileId;
@property (nonatomic) bool hasTimestamp;
@property (nonatomic) bool hasVioStatus;
@property (nonatomic) float radialDistortion1;
@property (nonatomic) float radialDistortion2;
@property (nonatomic, readonly) double*resultPoseRotations;
@property (nonatomic, readonly) unsigned long long resultPoseRotationsCount;
@property (nonatomic) int resultStatus;
@property (nonatomic) double resultTranslationX;
@property (nonatomic) double resultTranslationY;
@property (nonatomic) double resultTranslationZ;
@property (nonatomic, readonly) float*slamPoses;
@property (nonatomic, readonly) unsigned long long slamPosesCount;
@property (nonatomic, retain) GEOVLFUsageTileID *tileId;
@property (nonatomic) double timestamp;
@property (nonatomic, readonly) float*vioPoses;
@property (nonatomic, readonly) unsigned long long vioPosesCount;
@property (nonatomic) unsigned int vioStatus;

+ (bool)isValid:(id)arg1;

- (void).cxx_destruct;
- (void)addCalibrationMatrix:(float)arg1;
- (void)addResultPoseRotation:(double)arg1;
- (void)addSlamPose:(float)arg1;
- (void)addVioPose:(float)arg1;
- (float)calibrationMatrixAtIndex:(unsigned long long)arg1;
- (float*)calibrationMatrixs;
- (unsigned long long)calibrationMatrixsCount;
- (void)clearCalibrationMatrixs;
- (void)clearResultPoseRotations;
- (void)clearSlamPoses;
- (void)clearVioPoses;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (bool)hasRadialDistortion1;
- (bool)hasRadialDistortion2;
- (bool)hasResultStatus;
- (bool)hasResultTranslationX;
- (bool)hasResultTranslationY;
- (bool)hasResultTranslationZ;
- (bool)hasTileId;
- (bool)hasTimestamp;
- (bool)hasVioStatus;
- (unsigned long long)hash;
- (id)init;
- (id)initWithData:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithJSON:(id)arg1;
- (bool)isEqual:(id)arg1;
- (id)jsonRepresentation;
- (void)mergeFrom:(id)arg1;
- (float)radialDistortion1;
- (float)radialDistortion2;
- (void)readAll:(bool)arg1;
- (bool)readFrom:(id)arg1;
- (double)resultPoseRotationAtIndex:(unsigned long long)arg1;
- (double*)resultPoseRotations;
- (unsigned long long)resultPoseRotationsCount;
- (int)resultStatus;
- (double)resultTranslationX;
- (double)resultTranslationY;
- (double)resultTranslationZ;
- (void)setCalibrationMatrixs:(float*)arg1 count:(unsigned long long)arg2;
- (void)setHasRadialDistortion1:(bool)arg1;
- (void)setHasRadialDistortion2:(bool)arg1;
- (void)setHasResultStatus:(bool)arg1;
- (void)setHasResultTranslationX:(bool)arg1;
- (void)setHasResultTranslationY:(bool)arg1;
- (void)setHasResultTranslationZ:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setHasVioStatus:(bool)arg1;
- (void)setRadialDistortion1:(float)arg1;
- (void)setRadialDistortion2:(float)arg1;
- (void)setResultPoseRotations:(double*)arg1 count:(unsigned long long)arg2;
- (void)setResultStatus:(int)arg1;
- (void)setResultTranslationX:(double)arg1;
- (void)setResultTranslationY:(double)arg1;
- (void)setResultTranslationZ:(double)arg1;
- (void)setSlamPoses:(float*)arg1 count:(unsigned long long)arg2;
- (void)setTileId:(id)arg1;
- (void)setTimestamp:(double)arg1;
- (void)setVioPoses:(float*)arg1 count:(unsigned long long)arg2;
- (void)setVioStatus:(unsigned int)arg1;
- (float)slamPoseAtIndex:(unsigned long long)arg1;
- (float*)slamPoses;
- (unsigned long long)slamPosesCount;
- (id)tileId;
- (double)timestamp;
- (float)vioPoseAtIndex:(unsigned long long)arg1;
- (float*)vioPoses;
- (unsigned long long)vioPosesCount;
- (unsigned int)vioStatus;
- (void)writeTo:(id)arg1;

@end
