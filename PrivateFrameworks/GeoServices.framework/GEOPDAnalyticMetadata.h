
@interface GEOPDAnalyticMetadata : PBCodable <NSCopying> {
    GEOAbAssignInfo * _abAssignInfo;
    NSString * _appIdentifier;
    NSString * _appMajorVersion;
    NSString * _appMinorVersion;
    struct { 
        unsigned int has_sessionId : 1; 
        unsigned int has_relativeTimestamp : 1; 
        unsigned int has_requestSource : 1; 
        unsigned int has_routeStopCount : 1; 
        unsigned int has_sequenceNumber : 1; 
        unsigned int has_isFromApi : 1; 
        unsigned int has_isInternalInstall : 1; 
        unsigned int has_isInternalTool : 1; 
        unsigned int has_isSiriOriginalRequest : 1; 
        unsigned int read_unknownFields : 1; 
        unsigned int read_abAssignInfo : 1; 
        unsigned int read_appIdentifier : 1; 
        unsigned int read_appMajorVersion : 1; 
        unsigned int read_appMinorVersion : 1; 
        unsigned int read_hardwareModel : 1; 
        unsigned int read_loggedAbExperiment : 1; 
        unsigned int read_osVersion : 1; 
        unsigned int read_productName : 1; 
        unsigned int read_requestTime : 1; 
        unsigned int read_serviceTags : 1; 
        unsigned int wrote_anyField : 1; 
    }  _flags;
    NSString * _hardwareModel;
    bool  _isFromApi;
    bool  _isInternalInstall;
    bool  _isInternalTool;
    bool  _isSiriOriginalRequest;
    NSString * _loggedAbExperiment;
    NSString * _osVersion;
    NSString * _productName;
    PBDataReader * _reader;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _readerLock;
    unsigned int  _readerMarkLength;
    unsigned int  _readerMarkPos;
    double  _relativeTimestamp;
    int  _requestSource;
    GEOLocalTime * _requestTime;
    unsigned int  _routeStopCount;
    unsigned int  _sequenceNumber;
    NSMutableArray * _serviceTags;
    struct GEOSessionID { 
        unsigned long long _high; 
        unsigned long long _low; 
    }  _sessionId;
    PBUnknownFields * _unknownFields;
}

@property (nonatomic, retain) GEOAbAssignInfo *abAssignInfo;
@property (nonatomic, retain) NSString *appIdentifier;
@property (nonatomic, retain) NSString *appMajorVersion;
@property (nonatomic, retain) NSString *appMinorVersion;
@property (nonatomic, retain) NSString *hardwareModel;
@property (nonatomic, readonly) bool hasAbAssignInfo;
@property (nonatomic, readonly) bool hasAppIdentifier;
@property (nonatomic, readonly) bool hasAppMajorVersion;
@property (nonatomic, readonly) bool hasAppMinorVersion;
@property (nonatomic, readonly) bool hasHardwareModel;
@property (nonatomic) bool hasIsFromApi;
@property (nonatomic) bool hasIsInternalInstall;
@property (nonatomic) bool hasIsInternalTool;
@property (nonatomic) bool hasIsSiriOriginalRequest;
@property (nonatomic, readonly) bool hasLoggedAbExperiment;
@property (nonatomic, readonly) bool hasOsVersion;
@property (nonatomic, readonly) bool hasProductName;
@property (nonatomic) bool hasRelativeTimestamp;
@property (nonatomic) bool hasRequestSource;
@property (nonatomic, readonly) bool hasRequestTime;
@property (nonatomic) bool hasRouteStopCount;
@property (nonatomic) bool hasSequenceNumber;
@property (nonatomic) bool hasSessionId;
@property (nonatomic) bool isFromApi;
@property (nonatomic) bool isInternalInstall;
@property (nonatomic) bool isInternalTool;
@property (nonatomic) bool isSiriOriginalRequest;
@property (nonatomic, retain) NSString *loggedAbExperiment;
@property (nonatomic, retain) NSString *osVersion;
@property (nonatomic, retain) NSString *productName;
@property (nonatomic) double relativeTimestamp;
@property (nonatomic) int requestSource;
@property (nonatomic, retain) GEOLocalTime *requestTime;
@property (nonatomic) unsigned int routeStopCount;
@property (nonatomic) unsigned int sequenceNumber;
@property (nonatomic, retain) NSMutableArray *serviceTags;
@property (nonatomic) struct GEOSessionID { unsigned long long x1; unsigned long long x2; } sessionId;
@property (nonatomic, readonly) PBUnknownFields *unknownFields;

+ (bool)isValid:(id)arg1;
+ (Class)serviceTagType;

- (void).cxx_destruct;
- (int)StringAsRequestSource:(id)arg1;
- (id)abAssignInfo;
- (void)addServiceTag:(id)arg1;
- (id)appIdentifier;
- (id)appMajorVersion;
- (id)appMinorVersion;
- (void)clearServiceTags;
- (void)clearUnknownFields:(bool)arg1;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (id)hardwareModel;
- (bool)hasAbAssignInfo;
- (bool)hasAppIdentifier;
- (bool)hasAppMajorVersion;
- (bool)hasAppMinorVersion;
- (bool)hasHardwareModel;
- (bool)hasIsFromApi;
- (bool)hasIsInternalInstall;
- (bool)hasIsInternalTool;
- (bool)hasIsSiriOriginalRequest;
- (bool)hasLoggedAbExperiment;
- (bool)hasOsVersion;
- (bool)hasProductName;
- (bool)hasRelativeTimestamp;
- (bool)hasRequestSource;
- (bool)hasRequestTime;
- (bool)hasRouteStopCount;
- (bool)hasSequenceNumber;
- (bool)hasSessionId;
- (unsigned long long)hash;
- (id)init;
- (id)initWithData:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithJSON:(id)arg1;
- (id)initWithTraits:(id)arg1;
- (bool)isEqual:(id)arg1;
- (bool)isFromApi;
- (bool)isInternalInstall;
- (bool)isInternalTool;
- (bool)isSiriOriginalRequest;
- (id)jsonRepresentation;
- (id)loggedAbExperiment;
- (void)mergeFrom:(id)arg1;
- (id)osVersion;
- (id)productName;
- (void)readAll:(bool)arg1;
- (bool)readFrom:(id)arg1;
- (double)relativeTimestamp;
- (int)requestSource;
- (id)requestSourceAsString:(int)arg1;
- (id)requestTime;
- (unsigned int)routeStopCount;
- (unsigned int)sequenceNumber;
- (id)serviceTagAtIndex:(unsigned long long)arg1;
- (id)serviceTags;
- (unsigned long long)serviceTagsCount;
- (struct GEOSessionID { unsigned long long x1; unsigned long long x2; })sessionId;
- (void)setAbAssignInfo:(id)arg1;
- (void)setAppIdentifier:(id)arg1;
- (void)setAppMajorVersion:(id)arg1;
- (void)setAppMinorVersion:(id)arg1;
- (void)setHardwareModel:(id)arg1;
- (void)setHasIsFromApi:(bool)arg1;
- (void)setHasIsInternalInstall:(bool)arg1;
- (void)setHasIsInternalTool:(bool)arg1;
- (void)setHasIsSiriOriginalRequest:(bool)arg1;
- (void)setHasRelativeTimestamp:(bool)arg1;
- (void)setHasRequestSource:(bool)arg1;
- (void)setHasRouteStopCount:(bool)arg1;
- (void)setHasSequenceNumber:(bool)arg1;
- (void)setHasSessionId:(bool)arg1;
- (void)setIsFromApi:(bool)arg1;
- (void)setIsInternalInstall:(bool)arg1;
- (void)setIsInternalTool:(bool)arg1;
- (void)setIsSiriOriginalRequest:(bool)arg1;
- (void)setLoggedAbExperiment:(id)arg1;
- (void)setOsVersion:(id)arg1;
- (void)setProductName:(id)arg1;
- (void)setRelativeTimestamp:(double)arg1;
- (void)setRequestSource:(int)arg1;
- (void)setRequestTime:(id)arg1;
- (void)setRouteStopCount:(unsigned int)arg1;
- (void)setSequenceNumber:(unsigned int)arg1;
- (void)setServiceTags:(id)arg1;
- (void)setSessionId:(struct GEOSessionID { unsigned long long x1; unsigned long long x2; })arg1;
- (id)unknownFields;
- (void)writeTo:(id)arg1;

@end
