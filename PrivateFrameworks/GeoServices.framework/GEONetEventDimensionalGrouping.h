
@interface GEONetEventDimensionalGrouping : PBCodable <NSCopying> {
    NSString * _appId;
    NSString * _countryCode;
    unsigned int  _dataSetId;
    unsigned int  _day;
    long long  _errorCode;
    NSString * _errorDomain;
    unsigned long long  _eventCount;
    struct { 
        unsigned int has_errorCode : 1; 
        unsigned int has_eventCount : 1; 
        unsigned int has_dataSetId : 1; 
        unsigned int has_day : 1; 
        unsigned int has_httpResponseCode : 1; 
        unsigned int has_month : 1; 
        unsigned int has_networkService : 1; 
        unsigned int has_placeType : 1; 
        unsigned int has_tileSetId : 1; 
        unsigned int has_tileSetStyle : 1; 
        unsigned int has_year : 1; 
        unsigned int has_isBackground : 1; 
        unsigned int has_reusedConnection : 1; 
        unsigned int has_usedCellular : 1; 
        unsigned int read_appId : 1; 
        unsigned int read_countryCode : 1; 
        unsigned int read_errorDomain : 1; 
        unsigned int read_latencyStats : 1; 
        unsigned int read_manifestEnv : 1; 
        unsigned int read_requestingAppId : 1; 
        unsigned int read_rxBytesStats : 1; 
        unsigned int read_svcIp : 1; 
        unsigned int read_txBytesStats : 1; 
        unsigned int wrote_anyField : 1; 
    }  _flags;
    unsigned int  _httpResponseCode;
    bool  _isBackground;
    GEONetEventAggregateStats * _latencyStats;
    NSString * _manifestEnv;
    unsigned int  _month;
    int  _networkService;
    int  _placeType;
    PBDataReader * _reader;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _readerLock;
    unsigned int  _readerMarkLength;
    unsigned int  _readerMarkPos;
    NSString * _requestingAppId;
    bool  _reusedConnection;
    GEONetEventAggregateStats * _rxBytesStats;
    NSString * _svcIp;
    unsigned int  _tileSetId;
    int  _tileSetStyle;
    GEONetEventAggregateStats * _txBytesStats;
    bool  _usedCellular;
    unsigned int  _year;
}

@property (nonatomic, retain) NSString *appId;
@property (nonatomic, retain) NSString *countryCode;
@property (nonatomic) unsigned int dataSetId;
@property (nonatomic) unsigned int day;
@property (nonatomic) long long errorCode;
@property (nonatomic, retain) NSString *errorDomain;
@property (nonatomic) unsigned long long eventCount;
@property (nonatomic, readonly) bool hasAppId;
@property (nonatomic, readonly) bool hasCountryCode;
@property (nonatomic) bool hasDataSetId;
@property (nonatomic) bool hasDay;
@property (nonatomic) bool hasErrorCode;
@property (nonatomic, readonly) bool hasErrorDomain;
@property (nonatomic) bool hasEventCount;
@property (nonatomic) bool hasHttpResponseCode;
@property (nonatomic) bool hasIsBackground;
@property (nonatomic, readonly) bool hasLatencyStats;
@property (nonatomic, readonly) bool hasManifestEnv;
@property (nonatomic) bool hasMonth;
@property (nonatomic) bool hasNetworkService;
@property (nonatomic) bool hasPlaceType;
@property (nonatomic, readonly) bool hasRequestingAppId;
@property (nonatomic) bool hasReusedConnection;
@property (nonatomic, readonly) bool hasRxBytesStats;
@property (nonatomic, readonly) bool hasSvcIp;
@property (nonatomic) bool hasTileSetId;
@property (nonatomic) bool hasTileSetStyle;
@property (nonatomic, readonly) bool hasTxBytesStats;
@property (nonatomic) bool hasUsedCellular;
@property (nonatomic) bool hasYear;
@property (nonatomic) unsigned int httpResponseCode;
@property (nonatomic) bool isBackground;
@property (nonatomic, retain) GEONetEventAggregateStats *latencyStats;
@property (nonatomic, retain) NSString *manifestEnv;
@property (nonatomic) unsigned int month;
@property (nonatomic) int networkService;
@property (nonatomic) int placeType;
@property (nonatomic, retain) NSString *requestingAppId;
@property (nonatomic) bool reusedConnection;
@property (nonatomic, retain) GEONetEventAggregateStats *rxBytesStats;
@property (nonatomic, retain) NSString *svcIp;
@property (nonatomic) unsigned int tileSetId;
@property (nonatomic) int tileSetStyle;
@property (nonatomic, retain) GEONetEventAggregateStats *txBytesStats;
@property (nonatomic) bool usedCellular;
@property (nonatomic) unsigned int year;

+ (bool)isValid:(id)arg1;

- (void).cxx_destruct;
- (int)StringAsNetworkService:(id)arg1;
- (int)StringAsPlaceType:(id)arg1;
- (int)StringAsTileSetStyle:(id)arg1;
- (id)appId;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)countryCode;
- (unsigned int)dataSetId;
- (unsigned int)day;
- (id)description;
- (id)dictionaryRepresentation;
- (long long)errorCode;
- (id)errorDomain;
- (unsigned long long)eventCount;
- (bool)hasAppId;
- (bool)hasCountryCode;
- (bool)hasDataSetId;
- (bool)hasDay;
- (bool)hasErrorCode;
- (bool)hasErrorDomain;
- (bool)hasEventCount;
- (bool)hasHttpResponseCode;
- (bool)hasIsBackground;
- (bool)hasLatencyStats;
- (bool)hasManifestEnv;
- (bool)hasMonth;
- (bool)hasNetworkService;
- (bool)hasPlaceType;
- (bool)hasRequestingAppId;
- (bool)hasReusedConnection;
- (bool)hasRxBytesStats;
- (bool)hasSvcIp;
- (bool)hasTileSetId;
- (bool)hasTileSetStyle;
- (bool)hasTxBytesStats;
- (bool)hasUsedCellular;
- (bool)hasYear;
- (unsigned long long)hash;
- (unsigned int)httpResponseCode;
- (id)init;
- (id)initWithData:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithJSON:(id)arg1;
- (bool)isBackground;
- (bool)isEqual:(id)arg1;
- (id)jsonRepresentation;
- (id)latencyStats;
- (id)manifestEnv;
- (void)mergeFrom:(id)arg1;
- (unsigned int)month;
- (int)networkService;
- (id)networkServiceAsString:(int)arg1;
- (int)placeType;
- (id)placeTypeAsString:(int)arg1;
- (void)readAll:(bool)arg1;
- (bool)readFrom:(id)arg1;
- (id)requestingAppId;
- (bool)reusedConnection;
- (id)rxBytesStats;
- (void)setAppId:(id)arg1;
- (void)setCountryCode:(id)arg1;
- (void)setDataSetId:(unsigned int)arg1;
- (void)setDay:(unsigned int)arg1;
- (void)setErrorCode:(long long)arg1;
- (void)setErrorDomain:(id)arg1;
- (void)setEventCount:(unsigned long long)arg1;
- (void)setHasDataSetId:(bool)arg1;
- (void)setHasDay:(bool)arg1;
- (void)setHasErrorCode:(bool)arg1;
- (void)setHasEventCount:(bool)arg1;
- (void)setHasHttpResponseCode:(bool)arg1;
- (void)setHasIsBackground:(bool)arg1;
- (void)setHasMonth:(bool)arg1;
- (void)setHasNetworkService:(bool)arg1;
- (void)setHasPlaceType:(bool)arg1;
- (void)setHasReusedConnection:(bool)arg1;
- (void)setHasTileSetId:(bool)arg1;
- (void)setHasTileSetStyle:(bool)arg1;
- (void)setHasUsedCellular:(bool)arg1;
- (void)setHasYear:(bool)arg1;
- (void)setHttpResponseCode:(unsigned int)arg1;
- (void)setIsBackground:(bool)arg1;
- (void)setLatencyStats:(id)arg1;
- (void)setManifestEnv:(id)arg1;
- (void)setMonth:(unsigned int)arg1;
- (void)setNetworkService:(int)arg1;
- (void)setPlaceType:(int)arg1;
- (void)setRequestingAppId:(id)arg1;
- (void)setReusedConnection:(bool)arg1;
- (void)setRxBytesStats:(id)arg1;
- (void)setSvcIp:(id)arg1;
- (void)setTileSetId:(unsigned int)arg1;
- (void)setTileSetStyle:(int)arg1;
- (void)setTxBytesStats:(id)arg1;
- (void)setUsedCellular:(bool)arg1;
- (void)setYear:(unsigned int)arg1;
- (id)svcIp;
- (unsigned int)tileSetId;
- (int)tileSetStyle;
- (id)tileSetStyleAsString:(int)arg1;
- (id)txBytesStats;
- (bool)usedCellular;
- (void)writeTo:(id)arg1;
- (unsigned int)year;

@end
