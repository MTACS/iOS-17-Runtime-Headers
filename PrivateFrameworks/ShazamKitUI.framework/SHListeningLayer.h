
@interface SHListeningLayer : CALayer <SHShazamButtonViewDelegate> {
    CALayer * _autoShadowContainerLayer;
    SHListeningAutoShadowLayer * _autoShadowLayer;
    SHInnerCircleMaskLayer * _autoShadowToShazamButtonMaskLayer;
    double  _bass;
    SHInnerCircleMaskLayer * _innerCircleToAutoShadowMaskLayer;
    SHInnerCircleMaskLayer * _innerCircleToShazamButtonMaskLayer;
    CALayer * _innerCirclesContainerLayer;
    SHListeningInnerCirclesLayer * _innerCirclesLayer;
    CALayer * _innerCirclesSecondaryContainerLayer;
    SHListeningOuterCirclesLayer * _outerCirclesLayer;
    SHPalette * _palette;
    SHShazamButtonLayer * _shazamButtonLayer;
    bool  _shouldPerformIntroAnimation;
    long long  _state;
    double  _treble;
    <SHListeningLayerDelegate> * _viewDelegate;
}

@property (nonatomic, retain) CALayer *autoShadowContainerLayer;
@property (nonatomic, retain) SHListeningAutoShadowLayer *autoShadowLayer;
@property (nonatomic, retain) SHInnerCircleMaskLayer *autoShadowToShazamButtonMaskLayer;
@property (nonatomic) double bass;
@property (nonatomic, retain) SHInnerCircleMaskLayer *innerCircleToAutoShadowMaskLayer;
@property (nonatomic, retain) SHInnerCircleMaskLayer *innerCircleToShazamButtonMaskLayer;
@property (nonatomic, retain) CALayer *innerCirclesContainerLayer;
@property (nonatomic, retain) SHListeningInnerCirclesLayer *innerCirclesLayer;
@property (nonatomic, retain) CALayer *innerCirclesSecondaryContainerLayer;
@property (nonatomic, retain) SHListeningOuterCirclesLayer *outerCirclesLayer;
@property (nonatomic, readonly) SHPalette *palette;
@property (nonatomic, retain) SHShazamButtonLayer *shazamButtonLayer;
@property (nonatomic) bool shouldPerformIntroAnimation;
@property (nonatomic) long long state;
@property (nonatomic) double treble;
@property (nonatomic) <SHListeningLayerDelegate> *viewDelegate;

- (void).cxx_destruct;
- (void)addAutoAnimationInitialShazamButtonPulse;
- (void)addAutoShadowLayer;
- (void)addAutoShadowToShazamButtonMaskLayer;
- (void)addInnerCircleToAutoShadowMaskLayer;
- (void)addInnerCirclesLayer;
- (void)addInnerCirclesToShazamButtonMaskLayer;
- (void)addOuterCirclesLayer;
- (void)addTouchDownAnimation;
- (void)animateToIdleStateWithCompletion:(id /* block */)arg1;
- (id)autoShadowContainerLayer;
- (id)autoShadowLayer;
- (id)autoShadowToShazamButtonMaskLayer;
- (double)bass;
- (void)buildView;
- (void)buttonDidFinishDrawingShazamShape;
- (void)buttonWillFinishDrawingShazamShape;
- (void)centerLayer:(id)arg1 inSuperLayer:(id)arg2 withRelativeSize:(double)arg3;
- (id)init;
- (id)initWithIntroAnimation:(bool)arg1 useCustomCompatibleBackground:(bool)arg2;
- (id)innerCircleToAutoShadowMaskLayer;
- (id)innerCircleToShazamButtonMaskLayer;
- (id)innerCirclesContainerLayer;
- (id)innerCirclesLayer;
- (id)innerCirclesSecondaryContainerLayer;
- (void)layoutSublayers;
- (id)outerCirclesLayer;
- (id)palette;
- (void)processBass:(double)arg1 treble:(double)arg2;
- (void)processBassForInnerCircle:(double)arg1;
- (void)processBassForShazamButton:(double)arg1;
- (void)processTrebleForOuterCircles:(double)arg1;
- (void)removeAnimationLayers;
- (void)setAutoShadowContainerLayer:(id)arg1;
- (void)setAutoShadowLayer:(id)arg1;
- (void)setAutoShadowToShazamButtonMaskLayer:(id)arg1;
- (void)setBass:(double)arg1;
- (void)setInnerCircleToAutoShadowMaskLayer:(id)arg1;
- (void)setInnerCircleToShazamButtonMaskLayer:(id)arg1;
- (void)setInnerCirclesContainerLayer:(id)arg1;
- (void)setInnerCirclesLayer:(id)arg1;
- (void)setInnerCirclesSecondaryContainerLayer:(id)arg1;
- (void)setOuterCirclesLayer:(id)arg1;
- (void)setShazamButtonLayer:(id)arg1;
- (void)setShouldPerformIntroAnimation:(bool)arg1;
- (void)setState:(long long)arg1;
- (void)setTreble:(double)arg1;
- (void)setViewDelegate:(id)arg1;
- (id)shazamButtonLayer;
- (bool)shouldPerformIntroAnimation;
- (void)startActiveListeningAnimation;
- (void)startIdleAnimation;
- (void)startPassiveListeningAnimation;
- (long long)state;
- (void)stopAllAnimations;
- (void)stopAllAnimationsWithCompletionHandler:(id /* block */)arg1;
- (void)stopListeningAnimations;
- (double)treble;
- (id)viewDelegate;

@end
