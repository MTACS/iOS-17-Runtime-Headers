
@interface NTPBScoreProfileDebug : PBCodable <NSCopying> {
    double  _audioMultiplier;
    double  _bundleFreeMultiplier;
    double  _bundlePaidMultiplier;
    double  _contentTriggerDampener;
    double  _evergreenMultiplier;
    double  _featuredMultiplier;
    long long  _groupingReason;
    double  _halfLifeCoefficient;
    struct { 
        unsigned int audioMultiplier : 1; 
        unsigned int bundleFreeMultiplier : 1; 
        unsigned int bundlePaidMultiplier : 1; 
        unsigned int contentTriggerDampener : 1; 
        unsigned int evergreenMultiplier : 1; 
        unsigned int featuredMultiplier : 1; 
        unsigned int groupingReason : 1; 
        unsigned int halfLifeCoefficient : 1; 
        unsigned int listenedPenalty : 1; 
        unsigned int multiplierDampener : 1; 
        unsigned int mutedVoteDampener : 1; 
        unsigned int nicheContentMultiplier : 1; 
        unsigned int readPenalty : 1; 
        unsigned int scoringContext : 1; 
        unsigned int scoringType : 1; 
        unsigned int seenPenalty : 1; 
        unsigned int sparseTagsPenalty : 1; 
        unsigned int timeDecayPenalty : 1; 
        unsigned int userConversionScore : 1; 
    }  _has;
    double  _listenedPenalty;
    double  _multiplierDampener;
    double  _mutedVoteDampener;
    double  _nicheContentMultiplier;
    double  _readPenalty;
    long long  _scoringContext;
    long long  _scoringType;
    double  _seenPenalty;
    double  _sparseTagsPenalty;
    double  _timeDecayPenalty;
    double  _userConversionScore;
}

@property (nonatomic) double audioMultiplier;
@property (nonatomic) double bundleFreeMultiplier;
@property (nonatomic) double bundlePaidMultiplier;
@property (nonatomic) double contentTriggerDampener;
@property (nonatomic, retain) NSDictionary *contentTriggerScores;
@property (nonatomic) double evergreenMultiplier;
@property (nonatomic, retain) NSDictionary *featureWeightsByID;
@property (nonatomic) double featuredMultiplier;
@property (nonatomic) long long groupingReason;
@property (nonatomic) double halfLifeCoefficient;
@property (nonatomic) bool hasAudioMultiplier;
@property (nonatomic) bool hasBundleFreeMultiplier;
@property (nonatomic) bool hasBundlePaidMultiplier;
@property (nonatomic) bool hasContentTriggerDampener;
@property (nonatomic) bool hasEvergreenMultiplier;
@property (nonatomic) bool hasFeaturedMultiplier;
@property (nonatomic) bool hasGroupingReason;
@property (nonatomic) bool hasHalfLifeCoefficient;
@property (nonatomic) bool hasListenedPenalty;
@property (nonatomic) bool hasMultiplierDampener;
@property (nonatomic) bool hasMutedVoteDampener;
@property (nonatomic) bool hasNicheContentMultiplier;
@property (nonatomic) bool hasReadPenalty;
@property (nonatomic) bool hasScoringContext;
@property (nonatomic) bool hasScoringType;
@property (nonatomic) bool hasSeenPenalty;
@property (nonatomic) bool hasSparseTagsPenalty;
@property (nonatomic) bool hasTimeDecayPenalty;
@property (nonatomic) bool hasUserConversionScore;
@property (nonatomic) double listenedPenalty;
@property (nonatomic) double multiplierDampener;
@property (nonatomic) double mutedVoteDampener;
@property (nonatomic) double nicheContentMultiplier;
@property (nonatomic, retain) NSDictionary *nicheContentScores;
@property (nonatomic) double readPenalty;
@property (nonatomic) long long scoringContext;
@property (nonatomic) unsigned long long scoringType;
@property (nonatomic) long long scoringType;
@property (nonatomic) double seenPenalty;
@property (nonatomic) double sparseTagsPenalty;
@property (nonatomic, retain) NSDictionary *tagWeightsByID;
@property (nonatomic) double timeDecayPenalty;
@property (nonatomic) double userConversionScore;

// Image: /System/Library/PrivateFrameworks/NewsTransport.framework/NewsTransport

- (double)audioMultiplier;
- (double)bundleFreeMultiplier;
- (double)bundlePaidMultiplier;
- (double)contentTriggerDampener;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (double)evergreenMultiplier;
- (double)featuredMultiplier;
- (long long)groupingReason;
- (double)halfLifeCoefficient;
- (bool)hasAudioMultiplier;
- (bool)hasBundleFreeMultiplier;
- (bool)hasBundlePaidMultiplier;
- (bool)hasContentTriggerDampener;
- (bool)hasEvergreenMultiplier;
- (bool)hasFeaturedMultiplier;
- (bool)hasGroupingReason;
- (bool)hasHalfLifeCoefficient;
- (bool)hasListenedPenalty;
- (bool)hasMultiplierDampener;
- (bool)hasMutedVoteDampener;
- (bool)hasNicheContentMultiplier;
- (bool)hasReadPenalty;
- (bool)hasScoringContext;
- (bool)hasScoringType;
- (bool)hasSeenPenalty;
- (bool)hasSparseTagsPenalty;
- (bool)hasTimeDecayPenalty;
- (bool)hasUserConversionScore;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (double)listenedPenalty;
- (void)mergeFrom:(id)arg1;
- (double)multiplierDampener;
- (double)mutedVoteDampener;
- (double)nicheContentMultiplier;
- (bool)readFrom:(id)arg1;
- (double)readPenalty;
- (long long)scoringContext;
- (long long)scoringType;
- (double)seenPenalty;
- (void)setAudioMultiplier:(double)arg1;
- (void)setBundleFreeMultiplier:(double)arg1;
- (void)setBundlePaidMultiplier:(double)arg1;
- (void)setContentTriggerDampener:(double)arg1;
- (void)setEvergreenMultiplier:(double)arg1;
- (void)setFeaturedMultiplier:(double)arg1;
- (void)setGroupingReason:(long long)arg1;
- (void)setHalfLifeCoefficient:(double)arg1;
- (void)setHasAudioMultiplier:(bool)arg1;
- (void)setHasBundleFreeMultiplier:(bool)arg1;
- (void)setHasBundlePaidMultiplier:(bool)arg1;
- (void)setHasContentTriggerDampener:(bool)arg1;
- (void)setHasEvergreenMultiplier:(bool)arg1;
- (void)setHasFeaturedMultiplier:(bool)arg1;
- (void)setHasGroupingReason:(bool)arg1;
- (void)setHasHalfLifeCoefficient:(bool)arg1;
- (void)setHasListenedPenalty:(bool)arg1;
- (void)setHasMultiplierDampener:(bool)arg1;
- (void)setHasMutedVoteDampener:(bool)arg1;
- (void)setHasNicheContentMultiplier:(bool)arg1;
- (void)setHasReadPenalty:(bool)arg1;
- (void)setHasScoringContext:(bool)arg1;
- (void)setHasScoringType:(bool)arg1;
- (void)setHasSeenPenalty:(bool)arg1;
- (void)setHasSparseTagsPenalty:(bool)arg1;
- (void)setHasTimeDecayPenalty:(bool)arg1;
- (void)setHasUserConversionScore:(bool)arg1;
- (void)setListenedPenalty:(double)arg1;
- (void)setMultiplierDampener:(double)arg1;
- (void)setMutedVoteDampener:(double)arg1;
- (void)setNicheContentMultiplier:(double)arg1;
- (void)setReadPenalty:(double)arg1;
- (void)setScoringContext:(long long)arg1;
- (void)setScoringType:(long long)arg1;
- (void)setSeenPenalty:(double)arg1;
- (void)setSparseTagsPenalty:(double)arg1;
- (void)setTimeDecayPenalty:(double)arg1;
- (void)setUserConversionScore:(double)arg1;
- (double)sparseTagsPenalty;
- (double)timeDecayPenalty;
- (double)userConversionScore;
- (void)writeTo:(id)arg1;

// Image: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore

- (id)contentTriggerScores;
- (id)featureWeightsByID;
- (id)nicheContentScores;
- (void)setContentTriggerScores:(id)arg1;
- (void)setFeatureWeightsByID:(id)arg1;
- (void)setNicheContentScores:(id)arg1;
- (void)setTagWeightsByID:(id)arg1;
- (id)tagWeightsByID;

@end
