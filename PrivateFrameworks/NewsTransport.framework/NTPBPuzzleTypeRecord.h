
@interface NTPBPuzzleTypeRecord : PBCodable <NSCopying> {
    NSMutableArray * _allowedStorefrontIDs;
    NTPBRecordBase * _base;
    NSMutableArray * _blockedStorefrontIDs;
    NSString * _coverImageURL;
    NSString * _engineResourceId;
    NSString * _exploreTileImageURL;
    NSString * _feedNavImageURL;
    struct { 
        unsigned int minimumNewsVersion : 1; 
    }  _has;
    NSString * _imagesResourceID;
    NSString * _language;
    NSMutableArray * _latestPuzzleIds;
    long long  _minimumNewsVersion;
    NSString * _name;
    NSString * _nameImageCompactURL;
    NSString * _nameImageForDarkBackgroundURL;
    NSString * _nameImageMaskURL;
    NSString * _nameImageURL;
    NSString * _navigationChromeBackgroundDarkModeImageCompactURL;
    NSString * _navigationChromeBackgroundDarkModeImageLargeURL;
    NSString * _navigationChromeBackgroundDarkModeImageURL;
    NSString * _navigationChromeBackgroundImageCompactURL;
    NSString * _navigationChromeBackgroundImageLargeURL;
    NSString * _navigationChromeBackgroundImageURL;
    NSMutableArray * _promotedPuzzleIds;
    NSString * _superfeedConfigResourceID;
    NSString * _themeConfiguration;
}

@property (nonatomic, retain) NSMutableArray *allowedStorefrontIDs;
@property (nonatomic, retain) NTPBRecordBase *base;
@property (nonatomic, retain) NSMutableArray *blockedStorefrontIDs;
@property (nonatomic, retain) NSString *coverImageURL;
@property (nonatomic, retain) NSString *engineResourceId;
@property (nonatomic, retain) NSString *exploreTileImageURL;
@property (nonatomic, retain) NSString *feedNavImageURL;
@property (nonatomic, readonly) bool hasBase;
@property (nonatomic, readonly) bool hasCoverImageURL;
@property (nonatomic, readonly) bool hasEngineResourceId;
@property (nonatomic, readonly) bool hasExploreTileImageURL;
@property (nonatomic, readonly) bool hasFeedNavImageURL;
@property (nonatomic, readonly) bool hasImagesResourceID;
@property (nonatomic, readonly) bool hasLanguage;
@property (nonatomic) bool hasMinimumNewsVersion;
@property (nonatomic, readonly) bool hasName;
@property (nonatomic, readonly) bool hasNameImageCompactURL;
@property (nonatomic, readonly) bool hasNameImageForDarkBackgroundURL;
@property (nonatomic, readonly) bool hasNameImageMaskURL;
@property (nonatomic, readonly) bool hasNameImageURL;
@property (nonatomic, readonly) bool hasNavigationChromeBackgroundDarkModeImageCompactURL;
@property (nonatomic, readonly) bool hasNavigationChromeBackgroundDarkModeImageLargeURL;
@property (nonatomic, readonly) bool hasNavigationChromeBackgroundDarkModeImageURL;
@property (nonatomic, readonly) bool hasNavigationChromeBackgroundImageCompactURL;
@property (nonatomic, readonly) bool hasNavigationChromeBackgroundImageLargeURL;
@property (nonatomic, readonly) bool hasNavigationChromeBackgroundImageURL;
@property (nonatomic, readonly) bool hasSuperfeedConfigResourceID;
@property (nonatomic, readonly) bool hasThemeConfiguration;
@property (nonatomic, retain) NSString *imagesResourceID;
@property (nonatomic, retain) NSString *language;
@property (nonatomic, retain) NSMutableArray *latestPuzzleIds;
@property (nonatomic) long long minimumNewsVersion;
@property (nonatomic, retain) NSString *name;
@property (nonatomic, retain) NSString *nameImageCompactURL;
@property (nonatomic, retain) NSString *nameImageForDarkBackgroundURL;
@property (nonatomic, retain) NSString *nameImageMaskURL;
@property (nonatomic, retain) NSString *nameImageURL;
@property (nonatomic, retain) NSString *navigationChromeBackgroundDarkModeImageCompactURL;
@property (nonatomic, retain) NSString *navigationChromeBackgroundDarkModeImageLargeURL;
@property (nonatomic, retain) NSString *navigationChromeBackgroundDarkModeImageURL;
@property (nonatomic, retain) NSString *navigationChromeBackgroundImageCompactURL;
@property (nonatomic, retain) NSString *navigationChromeBackgroundImageLargeURL;
@property (nonatomic, retain) NSString *navigationChromeBackgroundImageURL;
@property (nonatomic, retain) NSMutableArray *promotedPuzzleIds;
@property (nonatomic, retain) NSString *superfeedConfigResourceID;
@property (nonatomic, retain) NSString *themeConfiguration;

// Image: /System/Library/PrivateFrameworks/NewsTransport.framework/NewsTransport

+ (Class)allowedStorefrontIDsType;
+ (Class)blockedStorefrontIDsType;
+ (Class)latestPuzzleIdsType;
+ (Class)promotedPuzzleIdsType;

- (void)addAllowedStorefrontIDs:(id)arg1;
- (void)addBlockedStorefrontIDs:(id)arg1;
- (void)addLatestPuzzleIds:(id)arg1;
- (void)addPromotedPuzzleIds:(id)arg1;
- (id)allowedStorefrontIDs;
- (id)allowedStorefrontIDsAtIndex:(unsigned long long)arg1;
- (unsigned long long)allowedStorefrontIDsCount;
- (id)base;
- (id)blockedStorefrontIDs;
- (id)blockedStorefrontIDsAtIndex:(unsigned long long)arg1;
- (unsigned long long)blockedStorefrontIDsCount;
- (void)clearAllowedStorefrontIDs;
- (void)clearBlockedStorefrontIDs;
- (void)clearLatestPuzzleIds;
- (void)clearPromotedPuzzleIds;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)coverImageURL;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (id)engineResourceId;
- (id)exploreTileImageURL;
- (id)feedNavImageURL;
- (bool)hasBase;
- (bool)hasCoverImageURL;
- (bool)hasEngineResourceId;
- (bool)hasExploreTileImageURL;
- (bool)hasFeedNavImageURL;
- (bool)hasImagesResourceID;
- (bool)hasLanguage;
- (bool)hasMinimumNewsVersion;
- (bool)hasName;
- (bool)hasNameImageCompactURL;
- (bool)hasNameImageForDarkBackgroundURL;
- (bool)hasNameImageMaskURL;
- (bool)hasNameImageURL;
- (bool)hasNavigationChromeBackgroundDarkModeImageCompactURL;
- (bool)hasNavigationChromeBackgroundDarkModeImageLargeURL;
- (bool)hasNavigationChromeBackgroundDarkModeImageURL;
- (bool)hasNavigationChromeBackgroundImageCompactURL;
- (bool)hasNavigationChromeBackgroundImageLargeURL;
- (bool)hasNavigationChromeBackgroundImageURL;
- (bool)hasSuperfeedConfigResourceID;
- (bool)hasThemeConfiguration;
- (unsigned long long)hash;
- (id)imagesResourceID;
- (bool)isEqual:(id)arg1;
- (id)language;
- (id)latestPuzzleIds;
- (id)latestPuzzleIdsAtIndex:(unsigned long long)arg1;
- (unsigned long long)latestPuzzleIdsCount;
- (void)mergeFrom:(id)arg1;
- (long long)minimumNewsVersion;
- (id)name;
- (id)nameImageCompactURL;
- (id)nameImageForDarkBackgroundURL;
- (id)nameImageMaskURL;
- (id)nameImageURL;
- (id)navigationChromeBackgroundDarkModeImageCompactURL;
- (id)navigationChromeBackgroundDarkModeImageLargeURL;
- (id)navigationChromeBackgroundDarkModeImageURL;
- (id)navigationChromeBackgroundImageCompactURL;
- (id)navigationChromeBackgroundImageLargeURL;
- (id)navigationChromeBackgroundImageURL;
- (id)promotedPuzzleIds;
- (id)promotedPuzzleIdsAtIndex:(unsigned long long)arg1;
- (unsigned long long)promotedPuzzleIdsCount;
- (bool)readFrom:(id)arg1;
- (void)setAllowedStorefrontIDs:(id)arg1;
- (void)setBase:(id)arg1;
- (void)setBlockedStorefrontIDs:(id)arg1;
- (void)setCoverImageURL:(id)arg1;
- (void)setEngineResourceId:(id)arg1;
- (void)setExploreTileImageURL:(id)arg1;
- (void)setFeedNavImageURL:(id)arg1;
- (void)setHasMinimumNewsVersion:(bool)arg1;
- (void)setImagesResourceID:(id)arg1;
- (void)setLanguage:(id)arg1;
- (void)setLatestPuzzleIds:(id)arg1;
- (void)setMinimumNewsVersion:(long long)arg1;
- (void)setName:(id)arg1;
- (void)setNameImageCompactURL:(id)arg1;
- (void)setNameImageForDarkBackgroundURL:(id)arg1;
- (void)setNameImageMaskURL:(id)arg1;
- (void)setNameImageURL:(id)arg1;
- (void)setNavigationChromeBackgroundDarkModeImageCompactURL:(id)arg1;
- (void)setNavigationChromeBackgroundDarkModeImageLargeURL:(id)arg1;
- (void)setNavigationChromeBackgroundDarkModeImageURL:(id)arg1;
- (void)setNavigationChromeBackgroundImageCompactURL:(id)arg1;
- (void)setNavigationChromeBackgroundImageLargeURL:(id)arg1;
- (void)setNavigationChromeBackgroundImageURL:(id)arg1;
- (void)setPromotedPuzzleIds:(id)arg1;
- (void)setSuperfeedConfigResourceID:(id)arg1;
- (void)setThemeConfiguration:(id)arg1;
- (id)superfeedConfigResourceID;
- (id)themeConfiguration;
- (void)writeTo:(id)arg1;

// Image: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore

- (id)generateCoverImageAssetHandleWithAssetManager:(id)arg1;
- (id)generateExploreTileImageAssetHandleWithAssetManager:(id)arg1;
- (id)generateFeedNavImageAssetHandleWithAssetManager:(id)arg1;
- (id)generateNameImageAssetHandleWithAssetManager:(id)arg1;
- (id)generateNameImageCompactAssetHandleWithAssetManager:(id)arg1;
- (id)generateNameImageForDarkBackgroundAssetHandleWithAssetManager:(id)arg1;
- (id)generateNameImageMaskAssetHandleWithAssetManager:(id)arg1;
- (id)generateNavigationChromeBackgroundDarkModeImageCompactHandleWithAssetManager:(id)arg1;
- (id)generateNavigationChromeBackgroundDarkModeImageHandleWithAssetManager:(id)arg1;
- (id)generateNavigationChromeBackgroundDarkModeImageLargeHandleWithAssetManager:(id)arg1;
- (id)generateNavigationChromeBackgroundImageCompactHandleWithAssetManager:(id)arg1;
- (id)generateNavigationChromeBackgroundImageHandleWithAssetManager:(id)arg1;
- (id)generateNavigationChromeBackgroundImageLargeHandleWithAssetManager:(id)arg1;

@end
