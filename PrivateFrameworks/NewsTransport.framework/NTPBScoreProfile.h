
@interface NTPBScoreProfile : PBCodable <NSCopying> {
    double  _agedPersonalizationScore;
    double  _autoSubscribeCtr;
    NSMutableArray * _cohortMemberships;
    double  _computedGlobalScoreCoefficient;
    double  _conversionMultiplier;
    double  _dampenedStaticMultiplier;
    NTPBScoreProfileDebug * _debugFields;
    double  _embeddingScore;
    double  _featureCtr;
    struct { 
        unsigned int agedPersonalizationScore : 1; 
        unsigned int autoSubscribeCtr : 1; 
        unsigned int computedGlobalScoreCoefficient : 1; 
        unsigned int conversionMultiplier : 1; 
        unsigned int dampenedStaticMultiplier : 1; 
        unsigned int embeddingScore : 1; 
        unsigned int featureCtr : 1; 
        unsigned int paidNonpaidSubscriptionCtr : 1; 
        unsigned int personalizationScore : 1; 
        unsigned int publisherDampener : 1; 
        unsigned int publisherFavorability : 1; 
        unsigned int qualitativeMultiplier : 1; 
        unsigned int rawPersonalizationScore : 1; 
        unsigned int rawUserFeedbackScore : 1; 
        unsigned int staticMultiplier : 1; 
        unsigned int subscribedChannelCtr : 1; 
        unsigned int tabiScore : 1; 
        unsigned int userFeedbackScore : 1; 
        unsigned int isEvergreen : 1; 
    }  _has;
    bool  _isEvergreen;
    double  _paidNonpaidSubscriptionCtr;
    double  _personalizationScore;
    double  _publisherDampener;
    double  _publisherFavorability;
    double  _qualitativeMultiplier;
    double  _rawPersonalizationScore;
    double  _rawUserFeedbackScore;
    double  _staticMultiplier;
    double  _subscribedChannelCtr;
    double  _tabiScore;
    double  _userFeedbackScore;
}

@property (nonatomic) double agedPersonalizationScore;
@property (nonatomic) double autoSubscribeCtr;
@property (nonatomic, retain) NSMutableArray *cohortMemberships;
@property (nonatomic) double computedGlobalScoreCoefficient;
@property (nonatomic) double conversionMultiplier;
@property (nonatomic) double dampenedStaticMultiplier;
@property (nonatomic, retain) NTPBScoreProfileDebug *debugFields;
@property (nonatomic) double embeddingScore;
@property (nonatomic) double featureCtr;
@property (nonatomic) bool hasAgedPersonalizationScore;
@property (nonatomic) bool hasAutoSubscribeCtr;
@property (nonatomic) bool hasComputedGlobalScoreCoefficient;
@property (nonatomic) bool hasConversionMultiplier;
@property (nonatomic) bool hasDampenedStaticMultiplier;
@property (nonatomic, readonly) bool hasDebugFields;
@property (nonatomic) bool hasEmbeddingScore;
@property (nonatomic) bool hasFeatureCtr;
@property (nonatomic) bool hasIsEvergreen;
@property (nonatomic) bool hasPaidNonpaidSubscriptionCtr;
@property (nonatomic) bool hasPersonalizationScore;
@property (nonatomic) bool hasPublisherDampener;
@property (nonatomic) bool hasPublisherFavorability;
@property (nonatomic) bool hasQualitativeMultiplier;
@property (nonatomic) bool hasRawPersonalizationScore;
@property (nonatomic) bool hasRawUserFeedbackScore;
@property (nonatomic) bool hasStaticMultiplier;
@property (nonatomic) bool hasSubscribedChannelCtr;
@property (nonatomic) bool hasTabiScore;
@property (nonatomic) bool hasUserFeedbackScore;
@property (nonatomic) bool isEvergreen;
@property (nonatomic) double paidNonpaidSubscriptionCtr;
@property (nonatomic) double personalizationScore;
@property (nonatomic) double publisherDampener;
@property (nonatomic) double publisherFavorability;
@property (nonatomic) double qualitativeMultiplier;
@property (nonatomic) double rawPersonalizationScore;
@property (nonatomic) double rawUserFeedbackScore;
@property (nonatomic) double staticMultiplier;
@property (nonatomic) double subscribedChannelCtr;
@property (nonatomic) double tabiScore;
@property (nonatomic) double userFeedbackScore;

+ (Class)cohortMembershipsType;

- (void)addCohortMemberships:(id)arg1;
- (double)agedPersonalizationScore;
- (double)autoSubscribeCtr;
- (void)clearCohortMemberships;
- (id)cohortMemberships;
- (id)cohortMembershipsAtIndex:(unsigned long long)arg1;
- (unsigned long long)cohortMembershipsCount;
- (double)computedGlobalScoreCoefficient;
- (double)conversionMultiplier;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (double)dampenedStaticMultiplier;
- (void)dealloc;
- (id)debugFields;
- (id)description;
- (id)dictionaryRepresentation;
- (double)embeddingScore;
- (double)featureCtr;
- (bool)hasAgedPersonalizationScore;
- (bool)hasAutoSubscribeCtr;
- (bool)hasComputedGlobalScoreCoefficient;
- (bool)hasConversionMultiplier;
- (bool)hasDampenedStaticMultiplier;
- (bool)hasDebugFields;
- (bool)hasEmbeddingScore;
- (bool)hasFeatureCtr;
- (bool)hasIsEvergreen;
- (bool)hasPaidNonpaidSubscriptionCtr;
- (bool)hasPersonalizationScore;
- (bool)hasPublisherDampener;
- (bool)hasPublisherFavorability;
- (bool)hasQualitativeMultiplier;
- (bool)hasRawPersonalizationScore;
- (bool)hasRawUserFeedbackScore;
- (bool)hasStaticMultiplier;
- (bool)hasSubscribedChannelCtr;
- (bool)hasTabiScore;
- (bool)hasUserFeedbackScore;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (bool)isEvergreen;
- (void)mergeFrom:(id)arg1;
- (double)paidNonpaidSubscriptionCtr;
- (double)personalizationScore;
- (double)publisherDampener;
- (double)publisherFavorability;
- (double)qualitativeMultiplier;
- (double)rawPersonalizationScore;
- (double)rawUserFeedbackScore;
- (bool)readFrom:(id)arg1;
- (void)setAgedPersonalizationScore:(double)arg1;
- (void)setAutoSubscribeCtr:(double)arg1;
- (void)setCohortMemberships:(id)arg1;
- (void)setComputedGlobalScoreCoefficient:(double)arg1;
- (void)setConversionMultiplier:(double)arg1;
- (void)setDampenedStaticMultiplier:(double)arg1;
- (void)setDebugFields:(id)arg1;
- (void)setEmbeddingScore:(double)arg1;
- (void)setFeatureCtr:(double)arg1;
- (void)setHasAgedPersonalizationScore:(bool)arg1;
- (void)setHasAutoSubscribeCtr:(bool)arg1;
- (void)setHasComputedGlobalScoreCoefficient:(bool)arg1;
- (void)setHasConversionMultiplier:(bool)arg1;
- (void)setHasDampenedStaticMultiplier:(bool)arg1;
- (void)setHasEmbeddingScore:(bool)arg1;
- (void)setHasFeatureCtr:(bool)arg1;
- (void)setHasIsEvergreen:(bool)arg1;
- (void)setHasPaidNonpaidSubscriptionCtr:(bool)arg1;
- (void)setHasPersonalizationScore:(bool)arg1;
- (void)setHasPublisherDampener:(bool)arg1;
- (void)setHasPublisherFavorability:(bool)arg1;
- (void)setHasQualitativeMultiplier:(bool)arg1;
- (void)setHasRawPersonalizationScore:(bool)arg1;
- (void)setHasRawUserFeedbackScore:(bool)arg1;
- (void)setHasStaticMultiplier:(bool)arg1;
- (void)setHasSubscribedChannelCtr:(bool)arg1;
- (void)setHasTabiScore:(bool)arg1;
- (void)setHasUserFeedbackScore:(bool)arg1;
- (void)setIsEvergreen:(bool)arg1;
- (void)setPaidNonpaidSubscriptionCtr:(double)arg1;
- (void)setPersonalizationScore:(double)arg1;
- (void)setPublisherDampener:(double)arg1;
- (void)setPublisherFavorability:(double)arg1;
- (void)setQualitativeMultiplier:(double)arg1;
- (void)setRawPersonalizationScore:(double)arg1;
- (void)setRawUserFeedbackScore:(double)arg1;
- (void)setStaticMultiplier:(double)arg1;
- (void)setSubscribedChannelCtr:(double)arg1;
- (void)setTabiScore:(double)arg1;
- (void)setUserFeedbackScore:(double)arg1;
- (double)staticMultiplier;
- (double)subscribedChannelCtr;
- (double)tabiScore;
- (double)userFeedbackScore;
- (void)writeTo:(id)arg1;

@end
