
@interface PencilEducationElementViewController : UIViewController <PKScribbleInteractionDelegate> {
    NSMutableArray * _animationQueue;
    <UITextCursorAssertion> * _cursorAssertion;
    PKDrawingReplayController * _delayDrawingReplayController;
    <PencilEducationElementViewControllerDelegate> * _delegate;
    bool  _didDisappear;
    bool  _didRunInitialAppearActions;
    PKDrawingReplayController * _drawingReplayController;
    PencilEducationElementData * _elementData;
    id /* block */  _endWritingCompletionBlock;
    bool  _hasPencilInteraction;
    long long  _inProgressAnimationType;
    bool  _isAnimating;
    bool  _isRunningAnimationSequence;
    bool  _isTextFieldRTL;
    NSDictionary * _localizationOffsetDictionary;
    unsigned long long  _performAnimationAsyncIndex;
    NSString * _processedString;
    UIButton * _replayButton;
    unsigned long long  _replayButtonHiddenIndex;
    UIStackView * _stackView;
    PencilEducationElementTextField * _textField;
    PKTextInputInteraction * _textInputInteraction;
    PKTextInputSettings * _textInputSettings;
    UILabel * _titleLabel;
}

@property (nonatomic, readonly) bool animationInProgress;
@property (nonatomic, retain) NSMutableArray *animationQueue;
@property (nonatomic, retain) <UITextCursorAssertion> *cursorAssertion;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, retain) PKDrawingReplayController *delayDrawingReplayController;
@property (nonatomic) <PencilEducationElementViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool didDisappear;
@property (nonatomic) bool didRunInitialAppearActions;
@property (nonatomic, retain) PKDrawingReplayController *drawingReplayController;
@property (nonatomic, retain) PencilEducationElementData *elementData;
@property (nonatomic, copy) id /* block */ endWritingCompletionBlock;
@property (nonatomic) bool hasPencilInteraction;
@property (nonatomic, readonly) bool hasRemainingAnimation;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long inProgressAnimationType;
@property (nonatomic) bool isAnimating;
@property (nonatomic) bool isRunningAnimationSequence;
@property (nonatomic) bool isTextFieldRTL;
@property (nonatomic, readonly) bool isUIRTL;
@property (nonatomic, retain) NSDictionary *localizationOffsetDictionary;
@property (nonatomic) unsigned long long performAnimationAsyncIndex;
@property (nonatomic, retain) NSString *processedString;
@property (nonatomic) UIButton *replayButton;
@property (nonatomic) unsigned long long replayButtonHiddenIndex;
@property (nonatomic, retain) UIStackView *stackView;
@property (readonly) Class superclass;
@property (nonatomic) PencilEducationElementTextField *textField;
@property (nonatomic, readonly) PKTextInputInteraction *textInputInteraction;
@property (nonatomic, retain) PKTextInputSettings *textInputSettings;
@property (nonatomic) UILabel *titleLabel;
@property (nonatomic, readonly) long long type;

+ (id)keyPathsForValuesAffectingAnimationInProgress;

- (void).cxx_destruct;
- (bool)_canShowWhileLocked;
- (bool)_pkScribbleInteractionShouldDisableInputAssistant:(id)arg1;
- (void)_scribbleInteraction:(id)arg1 didFinishWritingInElement:(id)arg2;
- (bool)_scribbleInteraction:(id)arg1 focusWillTransformElement:(id)arg2;
- (void)_scribbleInteraction:(id)arg1 willBeginWritingInElement:(id)arg2;
- (id)allowedCalloutActionsForType:(long long)arg1;
- (bool)animationInProgress;
- (id)animationQueue;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })applyLocalizationScaleOffsetsIfNecesssaryForDrawing:(id)arg1 animationType:(long long)arg2 transform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg3;
- (void)beginAnimation;
- (void)beginAnimationIfNecessary;
- (double)calculateFittingHeightByTemporarilyAdjustingFrameForWidth:(double)arg1;
- (void)cancelAnimation;
- (void)cancelPendingReplayHiddenCommands;
- (void)cancelScheduledAnimations;
- (id)cursorAssertion;
- (double)customHeightRatioForAnimationType:(long long)arg1;
- (double)customWidthRatioForAnimationType:(long long)arg1;
- (id)defaultAllowedCalloutActions;
- (id)delayDrawingReplayController;
- (id)delegate;
- (bool)didDisappear;
- (bool)didRunInitialAppearActions;
- (id)drawingForAnimationType:(long long)arg1;
- (id)drawingReplayController;
- (id)elementData;
- (id /* block */)endWritingCompletionBlock;
- (void)handleEndAnimation;
- (bool)hasCustomHeightRatioForAnimationType:(long long)arg1;
- (bool)hasCustomWidthRatioForAnimationType:(long long)arg1;
- (bool)hasPencilInteraction;
- (bool)hasRemainingAnimation;
- (long long)inProgressAnimationType;
- (id)initWithElementData:(id)arg1;
- (bool)isAnimating;
- (bool)isRunningAnimationSequence;
- (bool)isSecondaryAnimationForType:(long long)arg1;
- (bool)isTextAddedForAnimationType:(long long)arg1;
- (bool)isTextFieldRTL;
- (bool)isUIRTL;
- (id)localizationOffsetDictionary;
- (id)localizationOffsetKeyForAnimationType:(long long)arg1;
- (struct PKPencilEducationOffset { double x1; double x2; double x3; double x4; })localizationOffsetsForAnimationType:(long long)arg1;
- (double)nextAnimationDelayForAnimationType:(long long)arg1;
- (struct CGPoint { double x1; double x2; })offsetForAnimationType:(long long)arg1;
- (unsigned long long)performAnimationAsyncIndex;
- (id)processedString;
- (void)reloadAnimationQueue;
- (void)reloadStrings;
- (id)replacePlaceholdersInString:(id)arg1;
- (id)replayButton;
- (unsigned long long)replayButtonHiddenIndex;
- (void)replayButtonPressed:(id)arg1;
- (double)scaleRatioForAnimationType:(long long)arg1;
- (void)setAnimationQueue:(id)arg1;
- (void)setCursorAssertion:(id)arg1;
- (void)setDelayDrawingReplayController:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDidDisappear:(bool)arg1;
- (void)setDidRunInitialAppearActions:(bool)arg1;
- (void)setDrawingReplayController:(id)arg1;
- (void)setElementData:(id)arg1;
- (void)setEndWritingCompletionBlock:(id /* block */)arg1;
- (void)setHasPencilInteraction:(bool)arg1;
- (void)setInProgressAnimationType:(long long)arg1;
- (void)setIsAnimating:(bool)arg1;
- (void)setIsRunningAnimationSequence:(bool)arg1;
- (void)setIsTextFieldRTL:(bool)arg1;
- (void)setLocalizationOffsetDictionary:(id)arg1;
- (void)setPerformAnimationAsyncIndex:(unsigned long long)arg1;
- (void)setProcessedString:(id)arg1;
- (void)setReplayButton:(id)arg1;
- (void)setReplayButtonHiddenIndex:(unsigned long long)arg1;
- (void)setStackView:(id)arg1;
- (void)setTextField:(id)arg1;
- (void)setTextInputSettings:(id)arg1;
- (void)setTitleLabel:(id)arg1;
- (double)speedRatioForAnimationType:(long long)arg1;
- (id)stackView;
- (id)textField;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })textFieldBoundsForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)textInputInteraction;
- (id)textInputSettings;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })textRangeForAnimationType:(long long)arg1;
- (id)titleLabel;
- (long long)transformDimensionAnimationType:(long long)arg1;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })transformDrawing:(id)arg1 toFitBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 dimension:(long long)arg3 offset:(struct CGPoint { double x1; double x2; })arg4 animationType:(long long)arg5;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })transformForAnimationType:(long long)arg1 drawing:(id)arg2 bounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (long long)type;
- (void)updateIsAnimatingUI;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;

@end
