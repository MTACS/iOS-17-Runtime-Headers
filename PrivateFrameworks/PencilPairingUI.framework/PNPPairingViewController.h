
@interface PNPPairingViewController : UIViewController <PNPChargingStatusViewDelegate, PNPDeviceStateConfigurable, PNPPairingViewDelegate, PNPPencilViewDelegate, PNPPlatterViewController, PNPViewController> {
    UIAlertController * _alertVC;
    struct CGPoint { 
        double x; 
        double y; 
    }  _animationTranslation;
    <PNPPairingViewControllerDelegate> * _delegate;
    PNPDeviceState * _deviceState;
    PNPChargingStatusView * _horizontalChargingStatusView;
    PNPPlatterContainerView * _horizontalPencilPlatterContainerView;
    PNPPencilView * _horizontalPencilView;
    PNPPencilHorizontalPresentationContainerView * _horizontalPresentationPencilContainerView;
    bool  _inWizard;
    NSTimer * _initialTimer;
    PNPChargingStatusView * _pairingChargingStatusView;
    PNPPairingView * _pairingView;
    long long  _pairingViewControllerState;
    UIPanGestureRecognizer * _panGestureRecognizer;
    PNPPlatterTransitioningDelegate * _platterTransitioningDelegate;
    bool  _showingChargingUI;
    double  _spinnerElapsedTime;
    NSTimer * _timeoutTimer;
    bool  _viewDidAppearCalled;
    bool  _viewRequestsDismissCalled;
    PNPPlatterContainerView * _wizardPlatterContainerView;
    <PNPViewControllerAppearanceDelegate> * appearanceDelegate;
    <PNPPlatterViewControllerPlatterDelegate> * platterDelegate;
}

@property (nonatomic) <PNPViewControllerAppearanceDelegate> *appearanceDelegate;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PNPPairingViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) PNPDeviceState *deviceState;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long pairingViewControllerState;
@property (nonatomic) <PNPPlatterViewControllerPlatterDelegate> *platterDelegate;
@property (nonatomic, readonly) double preferredCornerRadius;
@property (nonatomic, readonly) unsigned long long preferredEdge;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_actuallyTransitionToCharging;
- (void)_actuallyTransitionToChargingByMovingPlatter;
- (void)_actuallyTransitionToChargingBySlideOutAndPresent;
- (void)_actuallyTransitionToSpinningPlatterWithDimmingState:(long long)arg1;
- (void)_actuallyTransitionToWizard;
- (bool)_canShowWhileLocked;
- (void)_cancelTimeoutTimer;
- (void)_centerContainerViews;
- (void)_chargingStatusViewHostsLayoutIfNeeded;
- (void)_chargingStatusViewHostsSetShowsChargingStatusView:(bool)arg1;
- (void)_chargingStatusViewHostsSetupChargingViews;
- (void)_chargingStatusViewHostsTeardownChargingViews;
- (void)_chargingStatusViewLayoutIfNeeded;
- (void)_chargingStatusViewSetChargingState:(long long)arg1;
- (void)_chargingStatusViewSetDeviceState:(id)arg1;
- (void)_chargingStatusViewSetIsTransitioningToBatteryUI:(bool)arg1;
- (void)_chargingStatusViewSetNeedsLayout;
- (void)_chargingStatusViewSetShowCharging:(bool)arg1;
- (void)_chargingStatusViewUpdateConstraints;
- (void)_chargingUIViewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (id)_currentPlatterContainerView;
- (long long)_dimmingState;
- (void)_dismissChargingAndPresentSpinningPencilWithDimmingState:(long long)arg1;
- (unsigned long long)_edgeToStickToPort;
- (id)_effectivePencilView;
- (void)_handlePanGesture:(id)arg1;
- (void)_hideOrShowAllContainerViewsIfNeeded;
- (void)_hideOrShowContainerViewIfNeeded:(id)arg1;
- (void)_morphToSpinningPencilWithDimmingState:(long long)arg1;
- (void)_offsetContainerViewsIfNecessary;
- (void)_orientationChanged:(double)arg1;
- (void)_performAnimations:(id /* block */)arg1 completion:(id /* block */)arg2;
- (void)_resetTimeoutTimer;
- (void)_resetTimerForWizard;
- (void)_showConnectingAnimationUI;
- (void)_spinningPencilViewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (void)_startConnectingUITimer;
- (void)_transitionPairingViewToWizardByMovingPlatter;
- (void)_transitionToChargingFrom:(long long)arg1;
- (void)_transitionToChargingFromSpinner;
- (void)_transitionToWizard;
- (void)_transitionToWizardBySlideOutAndPresent;
- (double)_translationAmountForDismiss;
- (void)_updateAnimationTranslation;
- (void)_updateForSize:(struct CGSize { double x1; double x2; })arg1;
- (void)_updatePillUIAnimated:(bool)arg1;
- (void)_updatePlatterContainerView:(id)arg1 toPreferredCornerRadius:(double)arg2 edge:(unsigned long long)arg3;
- (void)_updatePreferredContentSize;
- (void)_updateSubviewDeviceStateForContainerView:(id)arg1;
- (void)_wizardViewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (id)appearanceDelegate;
- (bool)canBecomeFirstResponder;
- (id)delegate;
- (id)deviceState;
- (void)didCompleteOneRevolution;
- (void)didTapOnCancelButton;
- (void)didTapOnConnectButton;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)intrinsicContentSizeDidChangeForView:(id)arg1;
- (void)loadView;
- (void)pairingFailed;
- (void)pairingStarted;
- (void)pairingStartedWithDimming:(bool)arg1;
- (void)pairingStartedWithDimmingState:(long long)arg1;
- (void)pairingSucceeded;
- (void)pairingSucceededSubsequently;
- (void)pairingSucceededWithShouldShowWhatsNew:(bool)arg1;
- (void)pairingSucceededWithShouldShowWhatsNew:(bool)arg1 deviceType:(long long)arg2;
- (long long)pairingViewControllerState;
- (id)platterDelegate;
- (struct CGSize { double x1; double x2; })preferredContentSize;
- (double)preferredCornerRadius;
- (unsigned long long)preferredEdge;
- (void)setAppearanceDelegate:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDeviceState:(id)arg1;
- (void)setPairingViewControllerState:(long long)arg1;
- (void)setPlatterDelegate:(id)arg1;
- (void)showGenericBatteryUI;
- (void)showPairingPrompt;
- (void)showPairingPromptAlert;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewRequestsDismiss:(id)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillLayoutSubviews;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;

@end
