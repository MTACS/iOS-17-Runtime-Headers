
@interface SecureBackup : NSObject <NSSecureCoding> {
    NSString * _activityLabel;
    NSUUID * _activityUUID;
    NSString * _appleID;
    NSString * _authToken;
    NSDate * _backOffDate;
    NSData * _certData;
    NSString * _countryCode;
    NSString * _countryDialCode;
    bool  _deleteAll;
    bool  _deleteDoubleOnly;
    NSString * _deviceSessionID;
    NSString * _doubleRecoveryUUID;
    NSString * _dsid;
    NSString * _duplicateEncodedMetadata;
    NSString * _emcsCred;
    NSDictionary * _emcsDict;
    bool  _emcsMode;
    NSString * _encodedMetadata;
    NSError * _error;
    NSString * _escrowProxyURL;
    NSDictionary * _escrowRecord;
    bool  _excludeiCDPRecords;
    NSString * _flowID;
    bool  _fmipRecovery;
    NSString * _fmipUUID;
    NSString * _hsa2CachedPrerecordUUID;
    NSString * _iCloudEnv;
    NSData * _iCloudIdentityData;
    NSString * _iCloudPassword;
    bool  _icdp;
    NSData * _idmsData;
    bool  _idmsRecovery;
    NSDictionary * _metadata;
    NSDictionary * _metadataHash;
    bool  _nonViableRepair;
    NSString * _oldEMCSCred;
    NSString * _passphrase;
    EscrowPrerecord * _prerecord;
    NSObject<OS_dispatch_queue> * _queue;
    NSString * _recordID;
    NSString * _recoveryKey;
    bool  _recoveryResult;
    NSString * _recoveryUUID;
    SESWrapper * _ses;
    bool  _silent;
    bool  _silentDoubleRecovery;
    NSString * _smsTarget;
    bool  _sosCompatibleEscrowSorting;
    NSNumber * _specifiedFederation;
    bool  _stingray;
    bool  _suppressServerFiltering;
    bool  _synchronize;
    bool  _useCachedPassphrase;
    bool  _useRecoveryPET;
    bool  _usesMultipleiCSC;
    bool  _usesRandomPassphrase;
    bool  _usesRecoveryKey;
    NSString * _verificationToken;
}

@property (nonatomic, readonly) NSString *activityLabel;
@property (nonatomic, readonly) NSUUID *activityUUID;
@property (nonatomic, copy) NSString *appleID;
@property (nonatomic, copy) NSString *authToken;
@property (nonatomic, retain) NSDate *backOffDate;
@property (nonatomic, retain) NSData *certData;
@property (nonatomic, copy) NSString *countryCode;
@property (nonatomic, copy) NSString *countryDialCode;
@property (nonatomic) bool deleteAll;
@property (nonatomic) bool deleteDoubleOnly;
@property (nonatomic, retain) NSString *deviceSessionID;
@property (nonatomic, retain) NSString *doubleRecoveryUUID;
@property (nonatomic, copy) NSString *dsid;
@property (nonatomic, copy) NSString *duplicateEncodedMetadata;
@property (nonatomic, copy) NSString *emcsCred;
@property (nonatomic, retain) NSDictionary *emcsDict;
@property (nonatomic) bool emcsMode;
@property (nonatomic, copy) NSString *encodedMetadata;
@property (nonatomic, retain) NSError *error;
@property (nonatomic, copy) NSString *escrowProxyURL;
@property (nonatomic, retain) NSDictionary *escrowRecord;
@property (nonatomic) bool excludeiCDPRecords;
@property (nonatomic, retain) NSString *flowID;
@property (nonatomic) bool fmipRecovery;
@property (nonatomic, copy) NSString *fmipUUID;
@property (nonatomic, copy) NSString *hsa2CachedPrerecordUUID;
@property (nonatomic, copy) NSString *iCloudEnv;
@property (nonatomic, retain) NSData *iCloudIdentityData;
@property (nonatomic, copy) NSString *iCloudPassword;
@property (nonatomic) bool icdp;
@property (nonatomic, retain) NSData *idmsData;
@property (nonatomic) bool idmsRecovery;
@property (nonatomic, retain) NSDictionary *metadata;
@property (nonatomic, retain) NSDictionary *metadataHash;
@property (nonatomic) bool nonViableRepair;
@property (nonatomic, copy) NSString *oldEMCSCred;
@property (nonatomic, copy) NSString *passphrase;
@property (nonatomic, retain) EscrowPrerecord *prerecord;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, copy) NSString *recordID;
@property (nonatomic, copy) NSString *recoveryKey;
@property (nonatomic) bool recoveryResult;
@property (nonatomic, retain) NSString *recoveryUUID;
@property (nonatomic, retain) SESWrapper *ses;
@property (nonatomic) bool silent;
@property (nonatomic) bool silentDoubleRecovery;
@property (nonatomic, copy) NSString *smsTarget;
@property (nonatomic) bool sosCompatibleEscrowSorting;
@property (nonatomic, copy) NSNumber *specifiedFederation;
@property (nonatomic) bool stingray;
@property (nonatomic) bool suppressServerFiltering;
@property (nonatomic) bool synchronize;
@property (nonatomic) bool useCachedPassphrase;
@property (nonatomic) bool useRecoveryPET;
@property (nonatomic) bool usesMultipleiCSC;
@property (nonatomic) bool usesRandomPassphrase;
@property (nonatomic) bool usesRecoveryKey;
@property (nonatomic, copy) NSString *verificationToken;

+ (id)_ClassCreateSecureBackupConcurrentConnection;
+ (id)_getAcceptedTermsForAltDSID:(id)arg1 withError:(id*)arg2;
+ (void)asyncRequestEscrowRecordUpdate;
+ (unsigned int)daemonPasscodeRequestOpinion:(id*)arg1;
+ (void)getAcceptedTermsForAltDSID:(id)arg1 reply:(id /* block */)arg2;
+ (id)getAcceptedTermsForAltDSID:(id)arg1 withError:(id*)arg2;
+ (id)getAllAcceptedTermsWithError:(id*)arg1;
+ (id)knownICDPFederations:(id*)arg1;
+ (bool)moveToFederationAllowed:(id)arg1 altDSID:(id)arg2 error:(id*)arg3;
+ (unsigned int)needPasscodeForHSA2EscrowRecordUpdate:(id*)arg1;
+ (void)saveTermsAcceptance:(id)arg1 reply:(id /* block */)arg2;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)_CreateSecureBackupConnection;
- (id)activityLabel;
- (id)activityUUID;
- (id)appleID;
- (id)authToken;
- (id)backOffDate;
- (void)backOffDateWithCompletionBlock:(id /* block */)arg1;
- (void)backOffDateWithInfo:(id)arg1 completionBlock:(id /* block */)arg2;
- (id)backupForRecoveryKeyWithInfo:(id)arg1;
- (id)backupWithInfo:(id)arg1;
- (void)backupWithInfo:(id)arg1 completionBlock:(id /* block */)arg2;
- (id)beginHSA2PasscodeRequest:(bool)arg1 error:(id*)arg2;
- (id)beginHSA2PasscodeRequest:(bool)arg1 uuid:(id)arg2 error:(id*)arg3;
- (id)beginHSA2PasscodeRequest:(bool)arg1 uuid:(id)arg2 reason:(id)arg3 error:(id*)arg4;
- (void)cachePassphrase;
- (void)cachePassphraseWithCompletionBlock:(id /* block */)arg1;
- (id)cachePassphraseWithInfo:(id)arg1;
- (void)cachePassphraseWithInfo:(id)arg1 completionBlock:(id /* block */)arg2;
- (void)cacheRecoveryKeyWithCompletionBlock:(id /* block */)arg1;
- (id)certData;
- (void)changeSMSTargetWithCompletionBlock:(id /* block */)arg1;
- (bool)changeSMSTargetWithError:(id*)arg1;
- (id)changeSMSTargetWithInfo:(id)arg1;
- (void)changeSMSTargetWithInfo:(id)arg1 completionBlock:(id /* block */)arg2;
- (id)countryCode;
- (id)countryDialCode;
- (void)createICDPRecordWithContents:(id)arg1 reply:(id /* block */)arg2;
- (bool)deleteAll;
- (bool)deleteDoubleOnly;
- (id)deviceSessionID;
- (void)disableWithCompletionBlock:(id /* block */)arg1;
- (bool)disableWithError:(id*)arg1;
- (id)disableWithInfo:(id)arg1;
- (void)disableWithInfo:(id)arg1 completionBlock:(id /* block */)arg2;
- (id)doubleRecoveryUUID;
- (id)dsid;
- (id)duplicateEncodedMetadata;
- (id)emcsCred;
- (id)emcsDict;
- (bool)emcsMode;
- (void)enableWithCompletionBlock:(id /* block */)arg1;
- (bool)enableWithError:(id*)arg1;
- (id)enableWithInfo:(id)arg1;
- (void)enableWithInfo:(id)arg1 completionBlock:(id /* block */)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)encodedMetadata;
- (id)error;
- (id)escrowProxyURL;
- (id)escrowRecord;
- (bool)excludeiCDPRecords;
- (id)flowID;
- (bool)fmipRecovery;
- (id)fmipUUID;
- (id)getAccountInfoWithError:(id*)arg1;
- (void)getAccountInfoWithInfo:(id)arg1 completionBlock:(id /* block */)arg2;
- (void)getAccountInfoWithInfo:(id)arg1 completionBlockWithResults:(id /* block */)arg2;
- (id)getAccountInfoWithInfo:(id)arg1 results:(id*)arg2;
- (void)getAccountInfoWithResults:(id /* block */)arg1;
- (void)getCertificates:(id /* block */)arg1;
- (void)getCountrySMSCodesWithInfo:(id)arg1 completionBlockWithResults:(id /* block */)arg2;
- (void)getCountrySMSCodesWithResults:(id /* block */)arg1;
- (id)hsa2CachedPrerecordUUID;
- (id)iCloudEnv;
- (id)iCloudIdentityData;
- (id)iCloudPassword;
- (bool)icdp;
- (id)idmsData;
- (bool)idmsRecovery;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithUserActivityLabel:(id)arg1;
- (bool)isRecoveryKeySet:(id*)arg1;
- (id)metadata;
- (id)metadataHash;
- (bool)nonViableRepair;
- (void)notificationInfo:(id /* block */)arg1;
- (id)oldEMCSCred;
- (id)passphrase;
- (void)populateWithInfo:(id)arg1;
- (void)prepareHSA2EscrowRecordContents:(bool)arg1 reply:(id /* block */)arg2;
- (id)prerecord;
- (id)queue;
- (id)recordID;
- (void)recoverRecordContents:(id /* block */)arg1;
- (id)recoverSilentWithCDPContext:(id)arg1 allRecords:(id)arg2 error:(id*)arg3;
- (id)recoverWithCDPContext:(id)arg1 escrowRecord:(id)arg2 error:(id*)arg3;
- (id)recoverWithError:(id*)arg1;
- (void)recoverWithInfo:(id)arg1 completionBlock:(id /* block */)arg2;
- (void)recoverWithInfo:(id)arg1 completionBlockWithResults:(id /* block */)arg2;
- (id)recoverWithInfo:(id)arg1 results:(id*)arg2;
- (void)recoverWithResults:(id /* block */)arg1;
- (id)recoveryKey;
- (bool)recoveryResult;
- (id)recoveryUUID;
- (bool)requiresDoubleEnrollment;
- (void)restoreKeychainAsyncWithPassword:(id)arg1 keybagDigest:(id)arg2 haveBottledPeer:(bool)arg3 viewsNotToBeRestored:(id)arg4 error:(id*)arg5;
- (bool)restoreKeychainWithBackupPassword:(id)arg1 error:(id*)arg2;
- (id)ses;
- (void)setAppleID:(id)arg1;
- (void)setAuthToken:(id)arg1;
- (void)setBackOffDate:(id)arg1;
- (void)setBackOffDateWithCompletionBlock:(id /* block */)arg1;
- (void)setBackOffDateWithInfo:(id)arg1 completionBlock:(id /* block */)arg2;
- (void)setCertData:(id)arg1;
- (void)setCountryCode:(id)arg1;
- (void)setCountryDialCode:(id)arg1;
- (void)setDeleteAll:(bool)arg1;
- (void)setDeleteDoubleOnly:(bool)arg1;
- (void)setDeviceSessionID:(id)arg1;
- (void)setDoubleRecoveryUUID:(id)arg1;
- (void)setDsid:(id)arg1;
- (void)setDuplicateEncodedMetadata:(id)arg1;
- (void)setEmcsCred:(id)arg1;
- (void)setEmcsDict:(id)arg1;
- (void)setEmcsMode:(bool)arg1;
- (void)setEncodedMetadata:(id)arg1;
- (void)setError:(id)arg1;
- (void)setEscrowProxyURL:(id)arg1;
- (void)setEscrowRecord:(id)arg1;
- (void)setExcludeiCDPRecords:(bool)arg1;
- (void)setFlowID:(id)arg1;
- (void)setFmipRecovery:(bool)arg1;
- (void)setFmipUUID:(id)arg1;
- (void)setHsa2CachedPrerecordUUID:(id)arg1;
- (void)setICloudEnv:(id)arg1;
- (void)setICloudIdentityData:(id)arg1;
- (void)setICloudPassword:(id)arg1;
- (void)setIcdp:(bool)arg1;
- (void)setIdmsData:(id)arg1;
- (void)setIdmsRecovery:(bool)arg1;
- (void)setMetadata:(id)arg1;
- (void)setMetadataHash:(id)arg1;
- (void)setNonViableRepair:(bool)arg1;
- (void)setOldEMCSCred:(id)arg1;
- (void)setPassphrase:(id)arg1;
- (void)setPrerecord:(id)arg1;
- (void)setQueue:(id)arg1;
- (void)setRecordID:(id)arg1;
- (void)setRecoveryKey:(id)arg1;
- (void)setRecoveryResult:(bool)arg1;
- (void)setRecoveryUUID:(id)arg1;
- (void)setSes:(id)arg1;
- (void)setSilent:(bool)arg1;
- (void)setSilentDoubleRecovery:(bool)arg1;
- (void)setSmsTarget:(id)arg1;
- (void)setSosCompatibleEscrowSorting:(bool)arg1;
- (void)setSpecifiedFederation:(id)arg1;
- (void)setStingray:(bool)arg1;
- (void)setSuppressServerFiltering:(bool)arg1;
- (void)setSynchronize:(bool)arg1;
- (void)setUseCachedPassphrase:(bool)arg1;
- (void)setUseRecoveryPET:(bool)arg1;
- (void)setUsesMultipleiCSC:(bool)arg1;
- (void)setUsesRandomPassphrase:(bool)arg1;
- (void)setUsesRecoveryKey:(bool)arg1;
- (void)setVerificationToken:(id)arg1;
- (bool)silent;
- (bool)silentDoubleRecovery;
- (id)smsTarget;
- (bool)sosCompatibleEscrowSorting;
- (id)specifiedFederation;
- (id)srpInitNonce;
- (id)srpRecoveryBlobFromSRPInitResponse:(id)arg1;
- (id)srpRecoveryBlobFromSRPInitResponse:(id)arg1 error:(id*)arg2;
- (void)srpRecoveryUpdateDSID:(id)arg1 recoveryPassphrase:(id)arg2;
- (id)startSMSChallengeWithError:(id*)arg1;
- (void)startSMSChallengeWithInfo:(id)arg1 completionBlock:(id /* block */)arg2;
- (void)startSMSChallengeWithInfo:(id)arg1 completionBlockWithResults:(id /* block */)arg2;
- (id)startSMSChallengeWithInfo:(id)arg1 results:(id*)arg2;
- (void)startSMSChallengeWithResults:(id /* block */)arg1;
- (void)stashRecoveryDataWithCompletionBlock:(id /* block */)arg1;
- (void)stashRecoveryDataWithInfo:(id)arg1 completionBlock:(id /* block */)arg2;
- (void)stateCaptureWithCompletionBlock:(id /* block */)arg1;
- (bool)stingray;
- (bool)suppressServerFiltering;
- (bool)synchronize;
- (void)uncachePassphrase;
- (void)uncachePassphraseWithCompletionBlock:(id /* block */)arg1;
- (id)uncachePassphraseWithInfo:(id)arg1;
- (void)uncachePassphraseWithInfo:(id)arg1 completionBlock:(id /* block */)arg2;
- (void)uncacheRecoveryKeyWithCompletionBlock:(id /* block */)arg1;
- (void)updateMetadataWithCompletionBlock:(id /* block */)arg1;
- (bool)updateMetadataWithError:(id*)arg1;
- (id)updateMetadataWithInfo:(id)arg1;
- (void)updateMetadataWithInfo:(id)arg1 completionBlock:(id /* block */)arg2;
- (bool)useCachedPassphrase;
- (bool)useRecoveryPET;
- (bool)usesMultipleiCSC;
- (bool)usesRandomPassphrase;
- (bool)usesRecoveryKey;
- (id)verificationToken;
- (bool)verifyRecoveryKey:(id)arg1 error:(id*)arg2;

@end
