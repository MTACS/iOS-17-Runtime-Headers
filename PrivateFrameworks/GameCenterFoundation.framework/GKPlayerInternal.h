
@interface GKPlayerInternal : GKInternalRepresentation {
    NSNumber * _acceptedGameInviteFromThisFriend;
    int  _achievementsVisibility;
    NSString * _alias;
    NSNumber * _automatchedTogether;
    NSNumber * _avatarType;
    CNContact * _contact;
    NSString * _contactsAssociationID;
    int  _contactsIntegrationConsent;
    union { 
        struct { 
            unsigned int _unused : 8; 
            unsigned int _purpleBuddyAccount : 1; 
            unsigned int _underage : 1; 
            unsigned int _photoPending : 1; 
            unsigned int _findable : 1; 
            unsigned int _defaultNickname : 1; 
            unsigned int _defaultPrivacyVisibility : 1; 
            unsigned int _defaultContactsIntegrationConsent : 1; 
            unsigned int _reserved : 18; 
        } ; 
        unsigned int _value; 
    }  _flags;
    NSNumber * _friendBiDirectional;
    NSNumber * _friendLevel;
    NSNumber * _friendPlayedNearby;
    NSNumber * _friendPlayedWith;
    int  _friendsVisibility;
    NSString * _gamePlayerID;
    int  _gamesPlayedVisibility;
    int  _globalFriendListAccess;
    GKMessageInboxEntryInternal * _inboxEntry;
    NSNumber * _initiatedGameInviteToThisFriend;
    bool  _isArcadeSubscriber;
    bool  _isInContacts;
    NSString * _lastContactsIntegrationConsentVersionDisplayed;
    NSString * _lastFriendSuggestionsVersionDisplayed;
    NSString * _lastPersonalizationVersionDisplayed;
    unsigned long long  _lastPrivacyNoticeVersionDisplayed;
    NSString * _lastProfilePrivacyVersionDisplayed;
    unsigned long long  _lastWelcomeWhatsNewCopyVersionDisplayed;
    NSString * _messagesID;
    unsigned int  _numberOfAchievementPoints;
    unsigned int  _numberOfAchievements;
    unsigned short  _numberOfFriends;
    unsigned short  _numberOfFriendsInCommon;
    unsigned short  _numberOfGames;
    unsigned short  _numberOfGamesInCommon;
    NSDictionary * _photos;
    NSString * _playerID;
    NSDate * _serviceLastUpdatedTimestamp;
    NSString * _teamPlayerID;
}

@property (nonatomic, retain) NSNumber *acceptedGameInviteFromThisFriend;
@property (nonatomic, retain) NSString *accountName;
@property (nonatomic) int achievementsVisibility;
@property (nonatomic, retain) NSString *alias;
@property (nonatomic, retain) NSNumber *automatchedTogether;
@property (nonatomic, retain) NSNumber *avatarType;
@property (nonatomic, retain) NSString *compositeName;
@property (nonatomic, retain) CNContact *contact;
@property (nonatomic, retain) NSString *contactsAssociationID;
@property (nonatomic) int contactsIntegrationConsent;
@property (getter=isDefaultContactsIntegrationConsent, nonatomic) bool defaultContactsIntegrationConsent;
@property (getter=isDefaultNickname, nonatomic) bool defaultNickname;
@property (getter=isDefaultPrivacyVisibility, nonatomic) bool defaultPrivacyVisibility;
@property (getter=isFindable, nonatomic) bool findable;
@property (nonatomic, retain) NSString *firstName;
@property (nonatomic) unsigned int flags;
@property (nonatomic, retain) NSNumber *friendBiDirectional;
@property (nonatomic, retain) NSNumber *friendLevel;
@property (nonatomic, retain) NSNumber *friendPlayedNearby;
@property (nonatomic, retain) NSNumber *friendPlayedWith;
@property (nonatomic, retain) NSArray *friends;
@property (nonatomic) int friendsVisibility;
@property (retain) NSString *gamePlayerID;
@property (nonatomic) int gamesPlayedVisibility;
@property (nonatomic) int globalFriendListAccess;
@property (nonatomic, retain) NSString *guestIdentifier;
@property (nonatomic, retain) GKMessageInboxEntryInternal *inboxEntry;
@property (nonatomic, retain) NSNumber *initiatedGameInviteToThisFriend;
@property (nonatomic, readonly) bool isAnonymousPlayer;
@property (nonatomic) bool isArcadeSubscriber;
@property (nonatomic, readonly) bool isAutomatchPlayer;
@property (nonatomic, readonly) bool isFriend;
@property (nonatomic, readonly) bool isGuestPlayer;
@property (nonatomic) bool isInContacts;
@property (nonatomic, readonly) bool isLoaded;
@property (nonatomic, readonly) bool isLocalPlayer;
@property (nonatomic, readonly) bool isUnknownPlayer;
@property (nonatomic, retain) NSString *lastContactsIntegrationConsentVersionDisplayed;
@property (nonatomic, retain) NSString *lastFriendSuggestionsVersionDisplayed;
@property (nonatomic, retain) NSString *lastName;
@property (nonatomic, retain) NSString *lastPersonalizationVersionDisplayed;
@property (nonatomic, retain) NSDate *lastPlayedDate;
@property (nonatomic, retain) GKGameInternal *lastPlayedGame;
@property (nonatomic) unsigned long long lastPrivacyNoticeVersionDisplayed;
@property (nonatomic, retain) NSString *lastProfilePrivacyVersionDisplayed;
@property (nonatomic) unsigned long long lastWelcomeWhatsNewCopyVersionDisplayed;
@property (nonatomic, retain) NSString *messagesID;
@property (nonatomic) unsigned int numberOfAchievementPoints;
@property (nonatomic) unsigned int numberOfAchievements;
@property (nonatomic) unsigned short numberOfChallenges;
@property (nonatomic) unsigned short numberOfFriends;
@property (nonatomic) unsigned short numberOfFriendsInCommon;
@property (nonatomic) unsigned short numberOfGames;
@property (nonatomic) unsigned short numberOfGamesInCommon;
@property (nonatomic) unsigned short numberOfRequests;
@property (nonatomic) unsigned short numberOfTurns;
@property (getter=isPhotoPending, nonatomic) bool photoPending;
@property (nonatomic, retain) NSDictionary *photos;
@property (retain) NSString *playerID;
@property (getter=isPurpleBuddyAccount, nonatomic) bool purpleBuddyAccount;
@property (nonatomic, retain) NSDate *serviceLastUpdatedTimestamp;
@property (nonatomic, retain) NSString *status;
@property (retain) NSString *teamPlayerID;
@property (getter=isUnderage, nonatomic) bool underage;

+ (Class)classForFamiliarity:(int)arg1;
+ (id)compositeNameForFirstName:(id)arg1 lastName:(id)arg2;
+ (id)displayNameWithOptions:(unsigned char)arg1 alias:(id)arg2 composite:(id)arg3;
+ (id)secureCodedPropertyKeys;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)acceptedGameInviteFromThisFriend;
- (id)accountName;
- (int)achievementsVisibility;
- (id)alias;
- (bool)allowNearbyMultiplayer;
- (id)automatchedTogether;
- (id)avatarType;
- (id)cacheKey;
- (id)compositeName;
- (id)conciseDescription;
- (id)contact;
- (id)contactsAssociationID;
- (int)contactsIntegrationConsent;
- (id)debugDescription;
- (int)defaultFamiliarity;
- (id)displayNameWithOptions:(unsigned char)arg1;
- (id)firstName;
- (unsigned int)flags;
- (id)friendBiDirectional;
- (id)friendLevel;
- (id)friendPlayedNearby;
- (id)friendPlayedWith;
- (id)friends;
- (int)friendsVisibility;
- (id)gamePlayerID;
- (int)gamesPlayedVisibility;
- (int)globalFriendListAccess;
- (int)globalFriendListSharingStatus;
- (id)guestIdentifier;
- (unsigned long long)hash;
- (id)inboxEntry;
- (id)initiatedGameInviteToThisFriend;
- (bool)isAnonymousPlayer;
- (bool)isArcadeSubscriber;
- (bool)isAutomatchPlayer;
- (bool)isDefaultContactsIntegrationConsent;
- (bool)isDefaultNickname;
- (bool)isDefaultPrivacyVisibility;
- (bool)isEqual:(id)arg1;
- (bool)isFindable;
- (bool)isFriend;
- (bool)isGuestPlayer;
- (bool)isInContacts;
- (bool)isLoaded;
- (bool)isLocalPlayer;
- (bool)isPhotoPending;
- (bool)isPurpleBuddyAccount;
- (bool)isUnderage;
- (bool)isUnknownPlayer;
- (id)lastContactsIntegrationConsentVersionDisplayed;
- (id)lastFriendSuggestionsVersionDisplayed;
- (id)lastName;
- (id)lastPersonalizationVersionDisplayed;
- (id)lastPlayedDate;
- (id)lastPlayedGame;
- (unsigned long long)lastPrivacyNoticeVersionDisplayed;
- (id)lastProfilePrivacyVersionDisplayed;
- (unsigned long long)lastWelcomeWhatsNewCopyVersionDisplayed;
- (id)messagesID;
- (id)minimalInternal;
- (unsigned int)numberOfAchievementPoints;
- (unsigned int)numberOfAchievements;
- (unsigned short)numberOfChallenges;
- (unsigned short)numberOfFriends;
- (unsigned short)numberOfFriendsInCommon;
- (unsigned short)numberOfGames;
- (unsigned short)numberOfGamesInCommon;
- (unsigned short)numberOfRequests;
- (unsigned short)numberOfTurns;
- (id)photos;
- (id)playerID;
- (id)serverRepresentation;
- (id)serviceLastUpdatedTimestamp;
- (void)setAcceptedGameInviteFromThisFriend:(id)arg1;
- (void)setAccountName:(id)arg1;
- (void)setAchievementsVisibility:(int)arg1;
- (void)setAlias:(id)arg1;
- (void)setAllowNearbyMultiplayer:(bool)arg1;
- (void)setAutomatchedTogether:(id)arg1;
- (void)setAvatarType:(id)arg1;
- (void)setCompositeName:(id)arg1;
- (void)setContact:(id)arg1;
- (void)setContactsAssociationID:(id)arg1;
- (void)setContactsIntegrationConsent:(int)arg1;
- (void)setDefaultContactsIntegrationConsent:(bool)arg1;
- (void)setDefaultNickname:(bool)arg1;
- (void)setDefaultPrivacyVisibility:(bool)arg1;
- (void)setFindable:(bool)arg1;
- (void)setFirstName:(id)arg1;
- (void)setFlags:(unsigned int)arg1;
- (void)setFriendBiDirectional:(id)arg1;
- (void)setFriendLevel:(id)arg1;
- (void)setFriendPlayedNearby:(id)arg1;
- (void)setFriendPlayedWith:(id)arg1;
- (void)setFriends:(id)arg1;
- (void)setFriendsVisibility:(int)arg1;
- (void)setGamePlayerID:(id)arg1;
- (void)setGamesPlayedVisibility:(int)arg1;
- (void)setGlobalFriendListAccess:(int)arg1;
- (void)setInboxEntry:(id)arg1;
- (void)setInitiatedGameInviteToThisFriend:(id)arg1;
- (void)setIsArcadeSubscriber:(bool)arg1;
- (void)setIsInContacts:(bool)arg1;
- (void)setLastContactsIntegrationConsentVersionDisplayed:(id)arg1;
- (void)setLastFriendSuggestionsVersionDisplayed:(id)arg1;
- (void)setLastName:(id)arg1;
- (void)setLastPersonalizationVersionDisplayed:(id)arg1;
- (void)setLastPlayedDate:(id)arg1;
- (void)setLastPlayedGame:(id)arg1;
- (void)setLastPrivacyNoticeVersionDisplayed:(unsigned long long)arg1;
- (void)setLastProfilePrivacyVersionDisplayed:(id)arg1;
- (void)setLastWelcomeWhatsNewCopyVersionDisplayed:(unsigned long long)arg1;
- (void)setMessagesID:(id)arg1;
- (void)setNumberOfAchievementPoints:(unsigned int)arg1;
- (void)setNumberOfAchievements:(unsigned int)arg1;
- (void)setNumberOfChallenges:(unsigned short)arg1;
- (void)setNumberOfFriends:(unsigned short)arg1;
- (void)setNumberOfFriendsInCommon:(unsigned short)arg1;
- (void)setNumberOfGames:(unsigned short)arg1;
- (void)setNumberOfGamesInCommon:(unsigned short)arg1;
- (void)setNumberOfRequests:(unsigned short)arg1;
- (void)setNumberOfTurns:(unsigned short)arg1;
- (void)setPhotoPending:(bool)arg1;
- (void)setPhotos:(id)arg1;
- (void)setPlayerID:(id)arg1;
- (void)setPurpleBuddyAccount:(bool)arg1;
- (void)setServiceLastUpdatedTimestamp:(id)arg1;
- (void)setStatus:(id)arg1;
- (void)setTeamPlayerID:(id)arg1;
- (void)setUnderage:(bool)arg1;
- (id)status;
- (void)stripPIIs;
- (id)teamPlayerID;

@end
