
@interface GKInviteInternal : GKInternalRepresentation {
    NSString * _bundleID;
    NSNumber * _declineReason;
    NSString * _deviceID;
    NSSet * _gameParticipants;
    NSString * _inviteID;
    bool  _isMessageBasedInvite;
    bool  _isNearbyInvite;
    bool  _isSharePlayInvite;
    NSSet * _lobbyParticipants;
    NSDictionary * _localizableMessage;
    unsigned long long  _matchType;
    NSString * _message;
    NSString * _participantID;
    NSData * _peerBlob;
    NSString * _peerID;
    NSData * _peerNATIP;
    unsigned long long  _peerNATType;
    NSString * _peerPseudonym;
    NSData * _peerPushToken;
    GKPlayerInternal * _player;
    unsigned int  _playerAttributes;
    unsigned long long  _playerGroup;
    NSString * _rid;
    NSString * _sessionID;
    NSData * _sessionToken;
    NSNumber * _transportVersionToUse;
    unsigned char  _version;
}

@property (nonatomic, retain) NSString *bundleID;
@property (nonatomic) NSNumber *declineReason;
@property (nonatomic, retain) NSString *deviceID;
@property (nonatomic, retain) NSSet *gameParticipants;
@property (nonatomic, retain) NSString *inviteID;
@property (nonatomic) bool isMessageBasedInvite;
@property (nonatomic, readonly) bool isNearby;
@property (nonatomic) bool isNearbyInvite;
@property (nonatomic) bool isSharePlayInvite;
@property (nonatomic, retain) NSSet *lobbyParticipants;
@property (nonatomic, retain) NSDictionary *localizableMessage;
@property (nonatomic) unsigned long long matchType;
@property (nonatomic, retain) NSString *message;
@property (nonatomic, retain) NSString *participantID;
@property (nonatomic, retain) NSData *peerBlob;
@property (nonatomic, retain) NSString *peerID;
@property (nonatomic, retain) NSData *peerNATIP;
@property (nonatomic) unsigned long long peerNATType;
@property (nonatomic, retain) NSString *peerPseudonym;
@property (nonatomic, retain) NSData *peerPushToken;
@property (nonatomic, retain) GKPlayerInternal *player;
@property (nonatomic) unsigned int playerAttributes;
@property (nonatomic) unsigned long long playerGroup;
@property (nonatomic, retain) NSString *rid;
@property (nonatomic, retain) NSString *sessionID;
@property (nonatomic, retain) NSData *sessionToken;
@property (nonatomic, retain) NSNumber *transportVersionToUse;
@property (nonatomic) unsigned char version;

+ (id)inviteFromNearbyPlayer:(id)arg1 participantID:(id)arg2 deviceID:(id)arg3 bundleID:(id)arg4 connectionData:(id)arg5;
+ (id)inviteWithBulletin:(id)arg1;
+ (id)nearbyInviteIDForPlayerID:(id)arg1 deviceID:(id)arg2 bundleID:(id)arg3;
+ (id)secureCodedPropertyKeys;

- (void).cxx_destruct;
- (id)bundleID;
- (id)declineReason;
- (id)descriptionSubstitutionMap;
- (id)deviceID;
- (id)gameParticipants;
- (unsigned long long)hash;
- (id)init;
- (id)inviteID;
- (bool)isEqual:(id)arg1;
- (bool)isMessageBasedInvite;
- (bool)isNearby;
- (bool)isNearbyInvite;
- (bool)isSharePlayInvite;
- (id)lobbyParticipants;
- (id)localizableMessage;
- (unsigned long long)matchType;
- (id)message;
- (id)participantID;
- (id)peerBlob;
- (id)peerID;
- (id)peerNATIP;
- (unsigned long long)peerNATType;
- (id)peerPseudonym;
- (id)peerPushToken;
- (id)player;
- (unsigned int)playerAttributes;
- (unsigned long long)playerGroup;
- (id)rid;
- (id)sessionID;
- (id)sessionToken;
- (void)setBundleID:(id)arg1;
- (void)setDeclineReason:(id)arg1;
- (void)setDeviceID:(id)arg1;
- (void)setGameParticipants:(id)arg1;
- (void)setInviteID:(id)arg1;
- (void)setIsMessageBasedInvite:(bool)arg1;
- (void)setIsNearbyInvite:(bool)arg1;
- (void)setIsSharePlayInvite:(bool)arg1;
- (void)setLobbyParticipants:(id)arg1;
- (void)setLocalizableMessage:(id)arg1;
- (void)setMatchType:(unsigned long long)arg1;
- (void)setMessage:(id)arg1;
- (void)setParticipantID:(id)arg1;
- (void)setPeerBlob:(id)arg1;
- (void)setPeerID:(id)arg1;
- (void)setPeerNATIP:(id)arg1;
- (void)setPeerNATType:(unsigned long long)arg1;
- (void)setPeerPseudonym:(id)arg1;
- (void)setPeerPushToken:(id)arg1;
- (void)setPlayer:(id)arg1;
- (void)setPlayerAttributes:(unsigned int)arg1;
- (void)setPlayerGroup:(unsigned long long)arg1;
- (void)setRid:(id)arg1;
- (void)setSessionID:(id)arg1;
- (void)setSessionToken:(id)arg1;
- (void)setTransportVersionToUse:(id)arg1;
- (void)setVersion:(unsigned char)arg1;
- (id)transportVersionToUse;
- (unsigned char)version;

@end
