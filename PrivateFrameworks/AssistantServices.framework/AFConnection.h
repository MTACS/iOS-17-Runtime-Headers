
@interface AFConnection : NSObject <AFAccessibilityListening, AFAudioPowerUpdaterDelegate, AFDeviceRingerSwitchListening, AFInterstitialProviderDelegate, NSXPCListenerDelegate> {
    _Atomic unsigned long long  _activePlaybackCount;
    long long  _activeRequestActivationEvent;
    double  _activeRequestBeginTime;
    bool  _activeRequestHasSpeechRecognition;
    double  _activeRequestInitialInterstitialBeginTimeInterval;
    bool  _activeRequestIsDucking;
    bool  _activeRequestIsTwoShot;
    unsigned long long  _activeRequestNumberOfPresentedInterstitials;
    unsigned long long  _activeRequestSpeechEndHostTime;
    long long  _activeRequestSpeechEvent;
    double  _activeRequestSpeechRecognitionTimeInterval;
    double  _activeRequestSpeechRecordingEndTimeInterval;
    double  _activeRequestStartSpeechTimeAPICalled;
    double  _activeRequestStartSpeechTimeRequested;
    double  _activeRequestStopSpeechTimeAPICalled;
    double  _activeRequestStopSpeechTimeRequested;
    long long  _activeRequestType;
    int  _activeRequestTypeForRequestCategorization;
    NSUUID * _activeRequestUUID;
    long long  _activeRequestUsefulUserResultType;
    NSUUID * _activeTurnIdentifier;
    AFAnalytics * _analytics;
    unsigned int  _audioSessionID;
    NSArray * _cachedBulletins;
    AFClientConfiguration * _clientConfiguration;
    unsigned int  _clientConfigurationIsInSync;
    void * _clientID;
    NSXPCConnection * _connection;
    <AFAssistantUIService> * _delegate;
    unsigned int  _hasOutstandingRequest;
    AFCallSiteInfo * _initiationCallSiteInfo;
    AFAudioPowerUpdater * _inputAudioPowerUpdater;
    AFInstanceContext * _instanceContext;
    AFQueue * _interstitialCommandQueue;
    AFInterstitialProvider * _interstitialProvider;
    unsigned int  _isCapturingSpeech;
    NSError * _lastRetryError;
    NSString * _outstandingRequestClass;
    unsigned long long  _pendingSpeechRequestCounter;
    NSString * _playbackRoute;
    AFPreferences * _preferences;
    NSString * _recordRoute;
    NSMutableDictionary * _replyHandlerForAceId;
    AFOneArgumentSafetyBlock * _requestCompletion;
    AFWatchdogTimer * _requestTimeoutTimer;
    unsigned int  _shouldSpeak;
    AFSiriClientStateManager * _siriClientStateManager;
    NSObject<OS_dispatch_group> * _speechCallbackGroup;
    <AFSpeechDelegate> * _speechDelegate;
    unsigned int  _stateInSync;
    NSObject<OS_dispatch_queue> * _targetQueue;
    unsigned long long  _uufrID;
    unsigned int  _voiceOverIsActive;
}

@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <AFAssistantUIService> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) bool hasActiveRequest;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isRecording;
@property (nonatomic) <AFSpeechDelegate> *speechDelegate;
@property (readonly) Class superclass;

+ (bool)assistantIsSupported;
+ (bool)assistantIsSupportedForLanguageCode:(id)arg1 error:(id*)arg2;
+ (void)beginMonitoringAvailability;
+ (id)currentLanguageCode;
+ (void)defrost;
+ (void)initialize;
+ (bool)isAvailable;
+ (bool)isNetworkAvailable;
+ (id)outputVoice;
+ (bool)siriIsSupportedForLanguageCode:(id)arg1 deviceProductVersion:(id)arg2 error:(id*)arg3;
+ (bool)siriIsSupportedForLanguageCode:(id)arg1 productName:(id)arg2 productVersion:(id)arg3 error:(id*)arg4;
+ (void)stopMonitoringAvailability;
+ (bool)userDataSyncNeeded;

- (void).cxx_destruct;
- (void)_aceConnectionWillRetryOnError:(id)arg1;
- (id)_activeRequestUUID;
- (void)_barrier;
- (void)_beginInterstitialsForReason:(id)arg1;
- (id)_cachedBulletins;
- (void)_cancelRequestTimeoutForReason:(id)arg1;
- (void)_checkAndSetIsCapturingSpeech:(bool)arg1;
- (void)_clearAssistantInfoForAccountWithIdentifier:(id)arg1;
- (void)_clearConnection;
- (id)_clientConfiguration;
- (id)_clientService;
- (id)_clientServiceWithErrorHandler:(id /* block */)arg1;
- (void)_completeRequestWithUUID:(id)arg1 forReason:(long long)arg2 error:(id)arg3;
- (id)_connection;
- (void)_connectionFailedWithError:(id)arg1;
- (void)_dispatchCallbackGroupBlock:(id /* block */)arg1;
- (void)_dispatchCommand:(id)arg1 isInterstitial:(bool)arg2 interstitialPhase:(long long)arg3 interstitialDelay:(double)arg4 reply:(id /* block */)arg5;
- (void)_endInterstitialsForReason:(id)arg1;
- (void)_enqueueInterstitialCommand:(id)arg1;
- (void)_extendExistingRequestTimeoutForReason:(id)arg1;
- (void)_extendRequestTimeoutForReason:(id)arg1;
- (void)_fetchShouldSpeak:(id /* block */)arg1;
- (long long)_getActiveSpeechEvent;
- (void)_handleCommand:(id)arg1 reply:(id /* block */)arg2;
- (void)_handleInterstitialPhase:(long long)arg1 fromProvider:(id)arg2 displayText:(id)arg3 speakableText:(id)arg4 expectedDelay:(double)arg5 context:(id)arg6 completion:(id /* block */)arg7;
- (void)_invokeRequestTimeoutForReason:(id)arg1;
- (void)_markIsDucking;
- (void)_markIsTwoShot;
- (void)_markSpeechRecognized;
- (id)_metricContextValueForUseDeviceSpeakerForTTS:(long long)arg1;
- (void)_pauseRequestTimeoutForReason:(id)arg1;
- (void)_requestDidEnd;
- (void)_requestWillBeginWithRequestClass:(id)arg1 isSpeechRequest:(bool)arg2 speechRequestOptions:(id)arg3 requestInfo:(id)arg4 analyticsEventProvider:(id /* block */)arg5;
- (void)_requestWillBeginWithRequestClass:(id)arg1 isSpeechRequest:(bool)arg2 speechRequestOptions:(id)arg3 requestInfo:(id)arg4 isBackgroundRequest:(bool)arg5 analyticsEventProvider:(id /* block */)arg6;
- (void)_resumeRequestTimeoutForReason:(id)arg1;
- (void)_scheduleRequestTimeoutForReason:(id)arg1;
- (void)_setAudioSessionID:(unsigned int)arg1;
- (void)_setRecordRoute:(id)arg1;
- (void)_setShouldSpeak:(bool)arg1;
- (bool)_shouldEmitUEIRequestLinkForRequestInfo:(id)arg1 speechRequestOptions:(id)arg2;
- (id)_siriClientStateManager;
- (void)_speechRecordingDidFailWithError:(id)arg1;
- (bool)_startInputAudioPowerUpdatesWithXPCWrapper:(id)arg1;
- (id)_startRequestMetricSettings;
- (void)_startRequestWithAceCommand:(id)arg1 turnIdentifier:(id)arg2 suppressAlert:(bool)arg3;
- (void)_startRequestWithInfo:(id)arg1;
- (void)_startUIRequestWithInfo:(id)arg1 completion:(id /* block */)arg2;
- (void)_startUIRequestWithText:(id)arg1 completion:(id /* block */)arg2;
- (void)_stopInputAudioPowerUpdates;
- (void)_tellDelegateAudioPlaybackRequestDidStart:(id)arg1;
- (void)_tellDelegateAudioPlaybackRequestDidStop:(id)arg1 error:(id)arg2;
- (void)_tellDelegateAudioPlaybackRequestWillStart:(id)arg1;
- (void)_tellDelegateAudioSessionDidBecomeActive:(bool)arg1;
- (void)_tellDelegateAudioSessionDidBeginInterruptionWithUserInfo:(id)arg1;
- (void)_tellDelegateAudioSessionDidEndInterruption:(bool)arg1 userInfo:(id)arg2;
- (void)_tellDelegateAudioSessionIDChanged:(unsigned int)arg1;
- (void)_tellDelegateAudioSessionWillBecomeActive:(bool)arg1;
- (void)_tellDelegateCacheImage:(id)arg1;
- (void)_tellDelegateDidDetectMusic;
- (void)_tellDelegateDidFinishAcousticIDRequestWithSuccess:(bool)arg1;
- (void)_tellDelegateExtensionRequestFinishedForApplication:(id)arg1 error:(id)arg2;
- (void)_tellDelegateExtensionRequestWillStartForApplication:(id)arg1;
- (void)_tellDelegateFailedToLaunchAppWithBundleIdentifier:(id)arg1;
- (void)_tellDelegateInvalidateCurrentUserActivity;
- (void)_tellDelegateRequestWillStart;
- (void)_tellDelegateSetUserActivityInfo:(id)arg1 webpageURL:(id)arg2;
- (void)_tellDelegateShouldSpeakChanged:(bool)arg1;
- (void)_tellDelegateStartPlaybackDidFail:(long long)arg1;
- (void)_tellDelegateWillProcessAppLaunchWithBundleIdentifier:(id)arg1;
- (void)_tellDelegateWillProcessStartPlayback:(long long)arg1 intent:(id)arg2 completion:(id /* block */)arg3;
- (void)_tellDelegateWillStartAcousticIDRequest;
- (void)_tellSpeechDelegateRecognitionDidFail:(id)arg1;
- (void)_tellSpeechDelegateRecognitionUpdateWillBeginForTask:(id)arg1;
- (void)_tellSpeechDelegateRecognizedAdditionalSpeechInterpretation:(id)arg1 refId:(id)arg2;
- (void)_tellSpeechDelegateRecordingDidBeginOnAVRecordRoute:(id)arg1 audioSessionID:(unsigned int)arg2;
- (void)_tellSpeechDelegateRecordingDidCancel;
- (void)_tellSpeechDelegateRecordingDidChangeAVRecordRoute:(id)arg1;
- (void)_tellSpeechDelegateRecordingDidDetectStartpoint;
- (void)_tellSpeechDelegateRecordingDidEnd;
- (void)_tellSpeechDelegateRecordingDidFail:(id)arg1;
- (void)_tellSpeechDelegateRecordingDidUpdateRecognitionPhrases:(id)arg1 utterances:(id)arg2 refId:(id)arg3;
- (void)_tellSpeechDelegateRecordingWillBeginWithInputAudioPowerXPCWrapper:(id)arg1;
- (void)_tellSpeechDelegateSpeechRecognized:(id)arg1;
- (void)_tellSpeechDelegateSpeechRecognizedPartialResult:(id)arg1;
- (void)_tellSpeechDelegateToPerformTwoShotPromptWithType:(long long)arg1 reply:(id /* block */)arg2;
- (void)_updateClientConfiguration;
- (void)_updateSpeechEndHostTime:(unsigned long long)arg1;
- (void)_updateState;
- (void)_updateStateIfNotInSync;
- (void)_willCancelRequest;
- (void)_willCompleteRequest;
- (void)_willEndSession;
- (void)_willFailRequestWithError:(id)arg1;
- (void)_willPresentUsefulUserResultWithType:(long long)arg1;
- (void)_willStartRequestWithSpeech:(bool)arg1 speechRequestOptions:(id)arg2 requestInfo:(id)arg3 analyticsEventProvider:(id /* block */)arg4;
- (void)_willStopRecordingWithSignpostID:(unsigned long long)arg1;
- (void)accessibilityObserver:(id)arg1 stateDidChangeFrom:(id)arg2 to:(id)arg3;
- (void)acquireAudioSessionWithContext:(id)arg1 completion:(id /* block */)arg2;
- (id)acquireUserInteractionAssertion;
- (void)adviseSessionArbiterToContinueWithPreviousWinner:(bool)arg1;
- (void)audioPowerUpdaterDidUpdate:(id)arg1 averagePower:(float)arg2 peakPower:(float)arg3;
- (unsigned int)audioSessionID;
- (float)averagePower;
- (void)boostedPreheatWithStyle:(long long)arg1 completion:(id /* block */)arg2;
- (void)broadcastCommandDictionary:(id)arg1;
- (void)cancelRequest;
- (void)cancelRequestForReason:(long long)arg1;
- (void)cancelSpeech;
- (void)checkLanguageReady:(id)arg1 completion:(id /* block */)arg2;
- (void)clearContext;
- (void)dealloc;
- (id)delegate;
- (void)deviceRingerObserver:(id)arg1 didChangeState:(long long)arg2;
- (void)didDismissUI;
- (void)endSession;
- (void)failRequestWithError:(id)arg1;
- (void)fetchAppicationContextForApplicationInfo:(id)arg1 supplementalContext:(id)arg2 refID:(id)arg3;
- (void)fetchShouldSpeak:(id /* block */)arg1;
- (void)forceAudioSessionActive;
- (void)forceAudioSessionActiveWithContext:(id)arg1 completion:(id /* block */)arg2;
- (void)forceAudioSessionActiveWithOptions:(unsigned long long)arg1 completion:(id /* block */)arg2;
- (void)forceAudioSessionActiveWithOptions:(unsigned long long)arg1 reason:(long long)arg2 completion:(id /* block */)arg3;
- (void)forceAudioSessionActiveWithOptions:(unsigned long long)arg1 reason:(long long)arg2 speechRequestOptions:(id)arg3 completion:(id /* block */)arg4;
- (void)forceAudioSessionInactive;
- (void)forceAudioSessionInactiveWithOptions:(unsigned long long)arg1 completion:(id /* block */)arg2;
- (void)getCachedObjectsWithIdentifiers:(id)arg1 completion:(id /* block */)arg2;
- (void)getDeferredObjectsWithIdentifiers:(id)arg1 completion:(id /* block */)arg2;
- (void)getRemoteClockTimerSnapshotWithCompletion:(id /* block */)arg1;
- (bool)hasActiveRequest;
- (id)init;
- (id)initWithTargetQueue:(id)arg1;
- (id)initWithTargetQueue:(id)arg1 instanceContext:(id)arg2;
- (void)interstitialProvider:(id)arg1 handlePhase:(long long)arg2 displayText:(id)arg3 speakableText:(id)arg4 expectedDelay:(double)arg5 context:(id)arg6 completion:(id /* block */)arg7;
- (void)invalidate;
- (bool)isRecording;
- (float)peakPower;
- (void)preheatWithStyle:(long long)arg1;
- (void)preheatWithStyle:(long long)arg1 forOptions:(id)arg2;
- (void)prepareForPhoneCall;
- (void)recordRequestMetric:(id)arg1 withTimestamp:(double)arg2;
- (void)recordUIMetrics:(id)arg1;
- (void)reportIssueForError:(id)arg1 type:(long long)arg2 context:(id)arg3;
- (void)reportIssueForError:(id)arg1 type:(long long)arg2 subtype:(id)arg3 context:(id)arg4;
- (void)reportIssueForType:(id)arg1 subtype:(id)arg2 context:(id)arg3;
- (void)requestBarrier:(id /* block */)arg1;
- (void)resumeInterruptedAudioPlaybackIfNeeded;
- (void)rollbackClearContext;
- (void)rollbackRequest;
- (void)sendFeedbackToAppPreferencesPredictorForMetricsContext:(id)arg1 selectedBundleId:(id)arg2;
- (void)sendGenericAceCommand:(id)arg1;
- (void)sendGenericAceCommand:(id)arg1 conflictHandler:(id /* block */)arg2;
- (void)sendGenericAceCommand:(id)arg1 turnIdentifier:(id)arg2 conflictHandler:(id /* block */)arg3;
- (void)sendReplyCommand:(id)arg1;
- (void)setAccessibilityState:(id)arg1;
- (void)setAlertContextWithBulletins:(id)arg1;
- (void)setAnnouncementRequestsPermittedByPresentationWhileActive:(bool)arg1;
- (void)setApplicationContext:(id)arg1;
- (void)setApplicationContextForApplicationInfos:(id)arg1;
- (void)setApplicationContextForApplicationInfos:(id)arg1 withRefId:(id)arg2;
- (void)setCarDNDActive:(bool)arg1;
- (void)setConfiguration:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDeviceRingerSwitchState:(long long)arg1;
- (void)setIsDeviceInStarkMode:(bool)arg1;
- (void)setLockState:(bool)arg1 screenLocked:(bool)arg2;
- (void)setModesConfiguration:(id)arg1;
- (void)setMyriadDecisionResult:(bool)arg1;
- (void)setOverriddenApplicationContext:(id)arg1 withContext:(id)arg2;
- (void)setShouldWaitForMyriad:(bool)arg1;
- (void)setSpeechDelegate:(id)arg1;
- (void)setVoiceOverIsActive:(bool)arg1;
- (void)setWatchAuthenticated:(bool)arg1;
- (bool)shouldSpeak;
- (id)speechDelegate;
- (void)startAcousticIDRequestWithOptions:(id)arg1;
- (void)startAudioPlaybackRequest:(id)arg1 options:(unsigned long long)arg2 completion:(id /* block */)arg3;
- (void)startContinuationRequestWithUserInfo:(id)arg1;
- (void)startDirectActionRequestWithString:(id)arg1;
- (id /* block */)startRecordingAndGetContinueBlockForPendingSpeechRequestWithOptions:(id)arg1;
- (void)startRecordingForPendingSpeechRequestWithOptions:(id)arg1 completion:(id /* block */)arg2;
- (void)startRequestWithAceCommand:(id)arg1;
- (void)startRequestWithCorrectedText:(id)arg1 forSpeechIdentifier:(id)arg2 userSelectionResults:(id)arg3;
- (void)startRequestWithCorrectedText:(id)arg1 forSpeechIdentifier:(id)arg2 userSelectionResults:(id)arg3 turnIdentifier:(id)arg4;
- (void)startRequestWithInfo:(id)arg1;
- (void)startRequestWithInfo:(id)arg1 activationEvent:(long long)arg2;
- (void)startRequestWithText:(id)arg1;
- (void)startSpeechPronunciationRequestWithOptions:(id)arg1 pronunciationContext:(id)arg2;
- (void)startSpeechRequestWithOptions:(id)arg1;
- (void)startSpeechRequestWithSpeechFileAtURL:(id)arg1;
- (void)startSpeechRequestWithSpeechFileAtURL:(id)arg1 isNarrowBand:(bool)arg2;
- (void)startUIRequest;
- (void)stopAllAudioPlaybackRequests:(bool)arg1;
- (void)stopAudioPlaybackRequest:(id)arg1 immediately:(bool)arg2;
- (void)stopSpeech;
- (void)stopSpeechWithOptions:(id)arg1;
- (void)telephonyRequestCompleted;
- (void)updateSpeechOptions:(id)arg1;
- (void)updateSpeechSynthesisRecord:(id)arg1;
- (void)usefulUserResultWillPresent;
- (void)willPresentUI;
- (void)willPresentUsefulUserResultWithType:(long long)arg1;
- (void)willPresentUsefulUserResultWithType:(long long)arg1 forCommand:(id)arg2;
- (void)willSetApplicationContextWithRefId:(id)arg1;

@end
