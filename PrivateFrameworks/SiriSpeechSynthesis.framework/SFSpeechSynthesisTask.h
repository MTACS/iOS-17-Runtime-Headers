
@interface SFSpeechSynthesisTask : NSObject <SFSpeechSynthesisTaskProtocol> {
    struct AudioStreamBasicDescription { 
        double mSampleRate; 
        unsigned int mFormatID; 
        unsigned int mFormatFlags; 
        unsigned int mBytesPerPacket; 
        unsigned int mFramesPerPacket; 
        unsigned int mBytesPerFrame; 
        unsigned int mChannelsPerFrame; 
        unsigned int mBitsPerChannel; 
        unsigned int mReserved; 
    }  _asbd;
    double  _audioPlaybackBufferDuration;
    NSMutableArray * _bufferedAudioData;
    NSMutableArray * _bufferedAudios;
    double  _bufferedDuration;
    <SFSpeechSynthesisTaskPrivateDelegate> * _delegate;
    NSError * _error;
    SFSSInstrumentMetrics * _instrumentMetrics;
    bool  _isCancelled;
    bool  _isFinished;
    bool  _isSpeaking;
    NSMutableArray * _phonemeSequence;
    SFSSAudioPlaybackService * _playbackService;
    SFSpeechSynthesisRequest * _request;
    SFSSResourceAsset * _resourceAsset;
    long long  _speakState;
    long long  _synthesisState;
    NSCondition * _synthesisStateCondition;
    NSString * _taskIdentifer;
    SFSSVoiceAsset * _voiceAsset;
}

@property (nonatomic) struct AudioStreamBasicDescription { double x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; } asbd;
@property (nonatomic) double audioPlaybackBufferDuration;
@property (nonatomic, retain) NSMutableArray *bufferedAudioData;
@property (nonatomic, retain) NSMutableArray *bufferedAudios;
@property (nonatomic) double bufferedDuration;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <SFSpeechSynthesisTaskPrivateDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) NSError *error;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) SFSSInstrumentMetrics *instrumentMetrics;
@property (nonatomic) bool isCancelled;
@property (nonatomic) bool isFinished;
@property (nonatomic) bool isSpeaking;
@property (nonatomic, retain) NSMutableArray *phonemeSequence;
@property (nonatomic, retain) SFSSAudioPlaybackService *playbackService;
@property (nonatomic, retain) SFSpeechSynthesisRequest *request;
@property (nonatomic, retain) SFSSResourceAsset *resourceAsset;
@property (nonatomic) long long speakState;
@property (readonly) Class superclass;
@property (nonatomic) long long synthesisState;
@property (nonatomic, retain) NSCondition *synthesisStateCondition;
@property (nonatomic, copy) NSString *taskIdentifer;
@property (nonatomic, retain) SFSSVoiceAsset *voiceAsset;

- (void).cxx_destruct;
- (struct AudioStreamBasicDescription { double x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; })asbd;
- (double)audioPlaybackBufferDuration;
- (id)bufferedAudioData;
- (id)bufferedAudios;
- (double)bufferedDuration;
- (id)cancel;
- (void)cancelTask;
- (id)delegate;
- (id)error;
- (void)handleSynthesisBegin:(unsigned int)arg1 asbd:(struct AudioStreamBasicDescription { double x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; })arg2 audioPlaybackBufferDuration:(double)arg3 voiceAsset:(id)arg4 resourceAsset:(id)arg5;
- (void)handleSynthesisChunks:(id)arg1;
- (void)handleSynthesisEnd:(id)arg1;
- (void)handleSynthesisEndCallback;
- (void)handleSynthesisFrontendFeaturePhoneme:(id)arg1;
- (void)handleSynthesisInit;
- (void)initSpeak:(unsigned int)arg1 asbd:(struct AudioStreamBasicDescription { double x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; })arg2;
- (id)initWithRequest:(id)arg1;
- (id)instrumentMetrics;
- (bool)isCancelled;
- (bool)isFinished;
- (bool)isSpeakRequest;
- (bool)isSpeaking;
- (id)pause;
- (id)phonemeSequence;
- (id)playbackService;
- (id)request;
- (id)resourceAsset;
- (id)resume;
- (void)setAsbd:(struct AudioStreamBasicDescription { double x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; })arg1;
- (void)setAudioPlaybackBufferDuration:(double)arg1;
- (void)setBufferedAudioData:(id)arg1;
- (void)setBufferedAudios:(id)arg1;
- (void)setBufferedDuration:(double)arg1;
- (void)setDelegate:(id)arg1;
- (void)setError:(id)arg1;
- (void)setErrorIfNotNull:(id)arg1;
- (void)setInstrumentMetrics:(id)arg1;
- (void)setIsCancelled:(bool)arg1;
- (void)setIsFinished:(bool)arg1;
- (void)setIsSpeaking:(bool)arg1;
- (void)setPhonemeSequence:(id)arg1;
- (void)setPlaybackService:(id)arg1;
- (void)setRequest:(id)arg1;
- (void)setResourceAsset:(id)arg1;
- (void)setSpeakState:(long long)arg1;
- (void)setSynthesisState:(long long)arg1;
- (void)setSynthesisStateCondition:(id)arg1;
- (void)setTaskIdentifer:(id)arg1;
- (void)setVoiceAsset:(id)arg1;
- (long long)speakState;
- (void)start:(id /* block */)arg1;
- (void)startSpeakIfValid;
- (void)startTask:(id /* block */)arg1;
- (long long)synthesisState;
- (id)synthesisStateCondition;
- (id)taskIdentifer;
- (id)voiceAsset;
- (void)waitForSpeakFinish;

@end
