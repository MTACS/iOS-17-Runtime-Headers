
@interface PXGView : UIView <PXDebugHierarchyProvider, PXDiagnosticsEnvironment, PXGAXResponder, PXGDiagnosticsProvider, PXGEngineDelegate, PXGHitTestEnvironment, PXGLayoutFocusDelegate, PXGLayoutScrollDelegate, PXGLayoutViewDelegate, PXScrollViewControllerObserver, PXSettingsKeyObserver, PXTapToRadarDiagnosticProvider, UIGestureRecognizerDelegate> {
    <PXGViewAccessibilityDelegate> * _accessibilityDelegate;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _additionalSafeAreaInsets;
    bool  _allowLargerImagesDuringScrollingInLowMemoryMode;
    bool  _avoidSnapshotOnHeightChanges;
    UIColor * _backgroundColor;
    PXGAXCoalescingResponder * _coalescingAXResponder;
    bool  _contentShouldBeObscured;
    PXGDebugHUDLayer * _debugHUDLayer;
    <PXGViewDiagnosticsSource> * _diagnosticsSource;
    bool  _disableMetalViewDisplayCompositing;
    PXGEngine * _engine;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _hitTestPadding;
    bool  _isAccessibilityEnabled;
    bool  _isAnimatingScroll;
    bool  _isBeingFullPageSnapshotted;
    bool  _isFocusFastScrolling;
    bool  _isSceneBackgrounded;
    bool  _isScrolling;
    bool  _lowMemoryModeEnabled;
    PXGMetalRenderer * _metalRenderer;
    MTKView * _metalView;
    id /* block */  _nextDidLayoutHandler;
    unsigned long long  _offscreenEffectQuality;
    NSDictionary * _ppt_currentTestOptions;
    PXGRectDiagnosticsLayer * _rectDiagnosticsLayer;
    bool  _resizesDrawableManually;
    PXGLayout * _rootLayoutIfExists;
    PXScrollViewController * _scrollViewController;
    PXGAnchor * _scrollingAnimationAnchor;
    PXScrollViewSpeedometer * _scrollingSpeedometer;
    bool  _shouldScrollViewContentInsetAlwaysAdjustToAvoidSafeArea;
    bool  _shouldWorkaround18475431;
    bool  _showDebugHUD;
    bool  _showPerspectiveDebug;
    PXUpdater * _updater;
    PXGViewRenderer * _viewRenderer;
    <PXGAXResponder> * axNextResponder;
}

@property (nonatomic) <PXGViewAccessibilityDelegate> *accessibilityDelegate;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } additionalSafeAreaInsets;
@property (nonatomic) bool allowLargerImagesDuringScrollingInLowMemoryMode;
@property (nonatomic) bool avoidSnapshotOnHeightChanges;
@property (nonatomic) <PXGAXResponder> *axNextResponder;
@property (nonatomic) bool contentShouldBeObscured;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) NSArray *debugHierarchyIdentifiers;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly, copy) NSString *diagnosticDescription;
@property (nonatomic, readonly) NSObject<PXAnonymousScrollView> *diagnosticsMainScrollView;
@property (nonatomic) <PXGViewDiagnosticsSource> *diagnosticsSource;
@property (nonatomic) bool disableMetalViewDisplayCompositing;
@property (nonatomic, readonly) PXGEngine *engine;
@property (nonatomic, readonly) bool hasExtendedColorDisplay;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } hitTestPadding;
@property (nonatomic) bool isAccessibilityEnabled;
@property (nonatomic) bool isAnimatingScroll;
@property (nonatomic) bool isBeingFullPageSnapshotted;
@property (nonatomic) bool isFocusFastScrolling;
@property (nonatomic) bool isSceneBackgrounded;
@property (nonatomic) bool isScrolling;
@property (nonatomic) bool lowMemoryModeEnabled;
@property (nonatomic, readonly) PXGMetalRenderer *metalRenderer;
@property (nonatomic, readonly) MTKView *metalView;
@property (nonatomic, copy) id /* block */ nextDidLayoutHandler;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } normalizedVisibleRect;
@property (nonatomic) unsigned long long offscreenEffectQuality;
@property (setter=ppt_setCurrentTestOptions:, nonatomic, copy) NSDictionary *ppt_currentTestOptions;
@property (nonatomic, readonly) NSDictionary *ppt_extraResults;
@property (nonatomic, readonly) NSString *preferredFileNameForExportingDebugHierarchy;
@property (nonatomic) bool resizesDrawableManually;
@property (nonatomic, retain) PXGLayout *rootLayout;
@property (nonatomic, retain) PXGLayout *rootLayoutIfExists;
@property (nonatomic, readonly) PXScrollViewController *scrollViewController;
@property (nonatomic, retain) PXGAnchor *scrollingAnimationAnchor;
@property (nonatomic, readonly) PXScrollViewSpeedometer *scrollingSpeedometer;
@property (nonatomic) bool shouldScrollViewContentInsetAlwaysAdjustToAvoidSafeArea;
@property (nonatomic) bool shouldWorkaround18475431;
@property (nonatomic) bool showDebugHUD;
@property (nonatomic) bool showPerspectiveDebug;
@property (nonatomic) bool slowAnimationsEnabled;
@property (readonly) Class superclass;
@property (nonatomic, readonly) PXUpdater *updater;
@property (nonatomic, readonly) PXGViewRenderer *viewRenderer;
@property (nonatomic, readonly) PXVisualDiagnosticsConfiguration *visualDiagnosticsConfigurationForFullPageSnapshot;
@property (nonatomic, readonly) UIWindowScene *windowScene;

+ (id)allDescriptions;
+ (id)debugHierarchyChildGroupingID;
+ (id)debugHierarchyObjectsInGroupWithID:(id)arg1 onObject:(id)arg2 outOptions:(id*)arg3;
+ (void)enumerateAllViewsUsingBlock:(id /* block */)arg1;
+ (bool)forceAccessibilityEnabled;
+ (long long)screenPixelCount;
+ (void)setForceAccessibilityEnabled:(bool)arg1;
+ (unsigned long long)supportLevel;

- (void).cxx_destruct;
- (void)_ensureEndAnimatedScroll;
- (void)_handleSceneDidEnterBackground:(id)arg1;
- (void)_handleSceneWillEnterForeground:(id)arg1;
- (void)_installNextDidLayoutHandler:(id /* block */)arg1;
- (void)_invalidateScrollableAxis;
- (void)_setNeedsUpdate;
- (void)_updateAccessibility;
- (void)_updateDebugHUD;
- (void)_updateEngineLowMemoryMode;
- (void)_updateFocusItemProvider;
- (void)_updateIsSceneBackgrounded;
- (void)_updateIsVisible;
- (void)_updateLayoutScreenScale;
- (void)_updateLayoutViewEnvironment;
- (void)_updateMetalView;
- (void)_updateRectDiagnosticsLayer;
- (void)_updateScrollableAxis;
- (void)_updateUserInterfaceDirection;
- (void)_willChangeBoundsSizeFrom:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 toBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (id)accessibilityDelegate;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })additionalSafeAreaInsets;
- (bool)allowLargerImagesDuringScrollingInLowMemoryMode;
- (bool)avoidSnapshotOnHeightChanges;
- (id)axContainingScrollViewForAXGroup:(id)arg1;
- (void)axGroup:(id)arg1 didChange:(unsigned long long)arg2 userInfo:(id)arg3;
- (bool)axGroup:(id)arg1 didRequestToPerformAction:(long long)arg2 userInfo:(id)arg3;
- (id)axNextResponder;
- (id)backgroundColor;
- (void)collectTapToRadarDiagnosticsIntoContainer:(id)arg1;
- (id)contentCoordinateSpaceForLayout:(id)arg1;
- (bool)contentShouldBeObscured;
- (struct CGPoint { double x1; double x2; })convertPoint:(struct CGPoint { double x1; double x2; })arg1 fromLayout:(id)arg2;
- (struct CGPoint { double x1; double x2; })convertPoint:(struct CGPoint { double x1; double x2; })arg1 toLayout:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 fromLayout:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 toLayout:(id)arg2;
- (id)curatedLibraryHitTestResultsInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withControl:(long long)arg2;
- (id)debugHierarchyIdentifiers;
- (id)diagnosticDescription;
- (id)diagnosticsMainScrollView;
- (id)diagnosticsSource;
- (void)didMoveToWindow;
- (void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (bool)disableMetalViewDisplayCompositing;
- (void)disablePreheating;
- (id)dropTargetObjectReferenceForLocation:(struct CGPoint { double x1; double x2; })arg1;
- (id)engine;
- (bool)engine:(id)arg1 shouldRenderLayout:(id)arg2 sprites:(id)arg3;
- (void)engine:(id)arg1 updateDebugHUDWithStats:(struct { double x1[6]; double x2[6]; long long x3[6]; double x4[6]; double x5[6]; }*)arg2;
- (void)engineSetNeedsUpdate:(id)arg1;
- (void)ensureUpdatedLayout;
- (void)enumerateCuratedLibraryHitTestResultsAtPoint:(struct CGPoint { double x1; double x2; })arg1 usingBlock:(id /* block */)arg2;
- (void)enumerateCuratedLibraryHitTestResultsAtPoint:(struct CGPoint { double x1; double x2; })arg1 withControls:(id)arg2 usingBlock:(id /* block */)arg3;
- (void)enumerateCuratedLibraryHitTestResultsInDirection:(unsigned long long)arg1 fromSpriteReference:(id)arg2 usingBlock:(id /* block */)arg3;
- (void)enumerateCuratedLibraryHitTestResultsInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 usingBlock:(id /* block */)arg2;
- (void)enumerateDebugHierarchyWithIdentifier:(id)arg1 options:(unsigned long long)arg2 usingBlock:(id /* block */)arg3;
- (bool)exportDebugHierarchyToURL:(id)arg1 error:(id*)arg2;
- (id)feedHitTestResultAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)feedHitTestResultAtPoint:(struct CGPoint { double x1; double x2; })arg1 ignoringOverlayContent:(bool)arg2;
- (id)feedHitTestResultsInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)firstCuratedLibraryHitTestResultsAtPoint:(struct CGPoint { double x1; double x2; })arg1 withControl:(long long)arg2;
- (void)forceFullUpdate;
- (void)forceUpdate;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)handlePan:(id)arg1;
- (bool)handlePrimaryInteractionAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id /* block */)handleTouchAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (bool)hasExtendedColorDisplay;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })hitTestPadding;
- (id)hitTestResultAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)hitTestResultAtPoint:(struct CGPoint { double x1; double x2; })arg1 padding:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg2 passingTest:(id /* block */)arg3;
- (id)hitTestResultsAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)hitTestResultsAtPoint:(struct CGPoint { double x1; double x2; })arg1 padding:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg2 passingTest:(id /* block */)arg3;
- (id)hitTestResultsAtPoint:(struct CGPoint { double x1; double x2; })arg1 withIdentifiers:(id)arg2;
- (id)hitTestResultsInDirection:(unsigned long long)arg1 fromSpriteReference:(id)arg2;
- (id)hitTestResultsInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 passingTest:(id /* block */)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 allowedPresentationTypes:(id)arg2;
- (void)installAnimationRenderingCompletionHandler:(id /* block */)arg1;
- (void)installLayoutCompletionHandler:(id /* block */)arg1;
- (void)installRenderingCompletionHandler:(id /* block */)arg1;
- (bool)isAccessibilityEnabled;
- (bool)isAnimatingScroll;
- (bool)isBeingFullPageSnapshotted;
- (bool)isFocusFastScrolling;
- (bool)isObjectReference:(id)arg1 visuallyBeforeObjectReference:(id)arg2;
- (bool)isSceneBackgrounded;
- (bool)isScrolling;
- (bool)isVisible;
- (id)layout:(id)arg1 viewForSpriteIndex:(unsigned int)arg2;
- (bool)lowMemoryModeEnabled;
- (id)metalRenderer;
- (id)metalView;
- (id /* block */)nextDidLayoutHandler;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })normalizedVisibleRect;
- (void)notifyContentFullyLoadedWithTimeout:(double)arg1 block:(id /* block */)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (unsigned long long)offscreenEffectQuality;
- (void)ppt_cleanUpAfterTest:(id)arg1 isScrollTest:(bool)arg2;
- (id)ppt_currentTestOptions;
- (id)ppt_extraResults;
- (void)ppt_prepareForTest:(id)arg1 withOptions:(id)arg2 isScrollTest:(bool)arg3;
- (void)ppt_setCurrentTestOptions:(id)arg1;
- (id)preferredFileNameForExportingDebugHierarchy;
- (id)preferredFocusEnvironments;
- (id)px_diagnosticsItemProvidersForPoint:(struct CGPoint { double x1; double x2; })arg1 inCoordinateSpace:(id)arg2;
- (id)regionOfInterestForHitTestResult:(id)arg1;
- (id)regionOfInterestForObjectReference:(id)arg1;
- (id)regionOfInterestForSpriteReference:(id)arg1;
- (void)registerAllTextureProvidersWithMediaProvider:(id)arg1;
- (void)registerAllTextureProvidersWithMediaProvider:(id)arg1 namedImagesBundle:(id)arg2;
- (void)registerTextureProvider:(id)arg1 forMediaKind:(unsigned char)arg2;
- (bool)resizesDrawableManually;
- (id)rootLayout;
- (id)rootLayoutIfExists;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })safeAreaInsets;
- (void)safeAreaInsetsDidChange;
- (id)scrollViewController;
- (void)scrollViewControllerDidBeginFocusFastScrolling:(id)arg1;
- (void)scrollViewControllerDidEndFocusFastScrolling:(id)arg1;
- (void)scrollViewControllerDidEndScrolling:(id)arg1;
- (void)scrollViewControllerDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewControllerDidLayoutSubviews:(id)arg1;
- (void)scrollViewControllerDidScroll:(id)arg1;
- (void)scrollViewControllerWillBeginScrolling:(id)arg1;
- (void)scrollViewControllerWillBeginScrollingAnimation:(id)arg1 towardsContentEdges:(unsigned long long)arg2;
- (id)scrollingAnimationAnchor;
- (id)scrollingSpeedometer;
- (void)setAccessibilityDelegate:(id)arg1;
- (void)setAdditionalSafeAreaInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setAllowLargerImagesDuringScrollingInLowMemoryMode:(bool)arg1;
- (void)setAvoidSnapshotOnHeightChanges:(bool)arg1;
- (void)setAxNextResponder:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setContentShouldBeObscured:(bool)arg1;
- (void)setDiagnosticsSource:(id)arg1;
- (void)setDisableMetalViewDisplayCompositing:(bool)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setHidden:(bool)arg1;
- (void)setIsAccessibilityEnabled:(bool)arg1;
- (void)setIsAnimatingScroll:(bool)arg1;
- (void)setIsBeingFullPageSnapshotted:(bool)arg1;
- (void)setIsFocusFastScrolling:(bool)arg1;
- (void)setIsSceneBackgrounded:(bool)arg1;
- (void)setIsScrolling:(bool)arg1;
- (void)setLowMemoryModeEnabled:(bool)arg1;
- (void)setNeedsFocusUpdateForLayout:(id)arg1;
- (void)setNeedsUpdateOfScrollableAxisForLayout:(id)arg1;
- (void)setNextDidLayoutHandler:(id /* block */)arg1;
- (void)setNormalizedVisibleRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setOffscreenEffectQuality:(unsigned long long)arg1;
- (void)setResizesDrawableManually:(bool)arg1;
- (void)setRootLayout:(id)arg1;
- (void)setRootLayoutIfExists:(id)arg1;
- (void)setScrollingAnimationAnchor:(id)arg1;
- (void)setShouldScrollViewContentInsetAlwaysAdjustToAvoidSafeArea:(bool)arg1;
- (void)setShouldWorkaround18475431:(bool)arg1;
- (void)setShowDebugHUD:(bool)arg1;
- (void)setShowPerspectiveDebug:(bool)arg1;
- (void)setSlowAnimationsEnabled:(bool)arg1;
- (void)settings:(id)arg1 changedValueForKey:(id)arg2;
- (bool)shouldScrollViewContentInsetAlwaysAdjustToAvoidSafeArea;
- (bool)shouldWorkaround18475431;
- (bool)showDebugHUD;
- (bool)showPerspectiveDebug;
- (bool)slowAnimationsEnabled;
- (id)storyHitTestResultAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)storyHitTestResultsInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)test_installRenderSnapshotHandler:(id /* block */)arg1;
- (struct CGImage { }*)textureSnapshotForSpriteReference:(id)arg1;
- (void)tintColorDidChange;
- (id)trackingContainerViewForSpriteIndex:(unsigned int)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (id)updater;
- (id)viewForSpriteIndex:(unsigned int)arg1;
- (id)viewForSpriteReference:(id)arg1;
- (id)viewRenderer;
- (id)visualDiagnosticsConfigurationForFullPageSnapshot;
- (id)windowScene;

@end
