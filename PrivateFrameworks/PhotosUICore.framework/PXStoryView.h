
@interface PXStoryView : UIView <PXChangeObserver, PXStoryQueueParticipant, PXTapToRadarDiagnosticProvider, PXTouchingUIGestureRecognizerDelegate, PXVerticalSwipeGestureRecognizerHelperDelegate, UIGestureRecognizerDelegate> {
    NSMutableSet * _activeRemoteGestureRecognizers;
    UILongPressGestureRecognizer * _anyIndirectTouchGestureRecognizer;
    UILongPressGestureRecognizer * _anyPressGestureRecognizer;
    PXStoryViewDismissalController * _dismissalController;
    bool  _isActive;
    bool  _isTouching;
    NSMutableArray * _lastDemotedDisplayAssets;
    UILongPressGestureRecognizer * _longPressGestureRecognizer;
    PXStoryModel * _mainModel;
    PXMediaProvider * _mediaProvider;
    UITapGestureRecognizer * _menuGestureRecognizer;
    UIPanGestureRecognizer * _panDownGestureRecognizer;
    UIPanGestureRecognizer * _panUpGestureRecognizer;
    PXApplicationDisabledIdleTimerToken * _preventedDisplaySleepToken;
    bool  _shouldPreventDisplaySleep;
    NSObject<OS_dispatch_queue> * _storyQueue;
    PXVerticalSwipeGestureRecognizerHelper * _swipeDownGestureHelper;
    NSArray * _swipeGestureRecognizers;
    UITapGestureRecognizer * _tapGestureRecognizer;
    <PXStoryPacingTimeSource> * _timeSource;
    PXTouchingUIGestureRecognizer * _touchingGestureRecognizer;
    PXGViewCoordinator * _tungstenViewCoordinator;
    PXUpdater * _updater;
    PXStoryViewLayout * _viewLayout;
    PXStoryViewModel * _viewModel;
}

@property (nonatomic, readonly) NSMutableSet *activeRemoteGestureRecognizers;
@property (nonatomic, readonly) UILongPressGestureRecognizer *anyIndirectTouchGestureRecognizer;
@property (nonatomic, readonly) UILongPressGestureRecognizer *anyPressGestureRecognizer;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) PXStoryViewDismissalController *dismissalController;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isActive;
@property (nonatomic) bool isTouching;
@property (nonatomic, readonly) NSMutableArray *lastDemotedDisplayAssets;
@property (nonatomic, readonly) UILongPressGestureRecognizer *longPressGestureRecognizer;
@property (nonatomic, readonly) id mainItemReference;
@property (nonatomic, retain) PXStoryModel *mainModel;
@property (nonatomic, readonly) PXMediaProvider *mediaProvider;
@property (nonatomic, readonly) UITapGestureRecognizer *menuGestureRecognizer;
@property (nonatomic, readonly) UIPanGestureRecognizer *panDownGestureRecognizer;
@property (nonatomic, readonly) UIPanGestureRecognizer *panUpGestureRecognizer;
@property (nonatomic, retain) PXApplicationDisabledIdleTimerToken *preventedDisplaySleepToken;
@property (nonatomic) bool shouldPreventDisplaySleep;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *storyQueue;
@property (readonly) Class superclass;
@property (nonatomic, readonly) PXVerticalSwipeGestureRecognizerHelper *swipeDownGestureHelper;
@property (nonatomic, readonly) NSArray *swipeGestureRecognizers;
@property (nonatomic, readonly) UITapGestureRecognizer *tapGestureRecognizer;
@property (nonatomic, readonly) <PXStoryPacingTimeSource> *timeSource;
@property (nonatomic, readonly) PXTouchingUIGestureRecognizer *touchingGestureRecognizer;
@property (nonatomic, readonly) PXGView *tungstenView;
@property (nonatomic, readonly) PXGViewCoordinator *tungstenViewCoordinator;
@property (nonatomic, readonly) PXUpdater *updater;
@property (nonatomic, readonly) PXStoryViewLayout *viewLayout;
@property (nonatomic, readonly) PXStoryViewModel *viewModel;

+ (id)allDiagnosticDescriptions;
+ (void)dumpTapToRadarDiagnosticAttachmentsToURL:(id)arg1 completionHandler:(id /* block */)arg2;

- (void).cxx_destruct;
- (void)_changeColorGrade;
- (void)_changeOverallDuration:(long long)arg1;
- (void)_changeStyle;
- (void)_considerUpdatingFocusForChrome;
- (void)_considerUpdatingFocusForInfoPanel;
- (void)_considerUpdatingFocusForRelatedOverlay;
- (void)_editCurrentChapter;
- (void)_handleAnyTouchOrPressGesture:(id)arg1;
- (void)_handleArrowButton:(id)arg1;
- (void)_handleEdgeTap:(unsigned long long)arg1;
- (void)_handleLongPress:(id)arg1;
- (void)_handleMenuGestureRecognizer:(id)arg1;
- (void)_handlePanDown:(id)arg1;
- (void)_handlePlayPauseGesture:(id)arg1;
- (bool)_handlePrimaryInteractionAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)_handleRelatedKeyboardNavigation:(unsigned long long)arg1;
- (void)_handleSelect:(id)arg1;
- (void)_handleSwipeGesture:(id)arg1;
- (void)_handleTap:(id)arg1;
- (void)_handleTwoFingerTap:(id)arg1;
- (void)_hideRelatedOverlay;
- (void)_initializeGestureRecognizers;
- (void)_invalidateBackgroundColor;
- (void)_invalidateGestureRecognizers;
- (void)_invalidateMainModel;
- (void)_invalidateShouldPreventDisplaySleep;
- (bool)_isRTL;
- (void)_moveLeftAfterEdgeTap:(bool)arg1;
- (void)_moveRightAfterEdgeTap:(bool)arg1;
- (void)_setNeedsUpdate;
- (void)_skipToSegmentWithOffset:(long long)arg1 afterEdgeTap:(bool)arg2;
- (id)_storyHitTestResultAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)_toggleChrome;
- (void)_togglePlayback;
- (void)_updateBackgroundColor;
- (void)_updateGestureRecognizers;
- (void)_updateMainModel;
- (void)_updateShouldPreventDisplaySleep;
- (bool)acceptsFirstResponder;
- (id)activeRemoteGestureRecognizers;
- (id)anyIndirectTouchGestureRecognizer;
- (id)anyPressGestureRecognizer;
- (void)cancelOperation:(id)arg1;
- (void)collectTapToRadarDiagnosticsIntoContainer:(id)arg1;
- (id)dismissalController;
- (bool)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;
- (bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 configuration:(id)arg2;
- (void)insertNewline:(id)arg1;
- (void)insertText:(id)arg1;
- (bool)isActive;
- (bool)isTouching;
- (id)itemPlacementControllerForItemReference:(id)arg1;
- (id)lastDemotedDisplayAssets;
- (void)layoutSubviews;
- (id)longPressGestureRecognizer;
- (id)mainItemReference;
- (id)mainModel;
- (id)mediaProvider;
- (id)menuGestureRecognizer;
- (void)moveLeft:(id)arg1;
- (void)moveRight:(id)arg1;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void*)arg3;
- (id)panDownGestureRecognizer;
- (id)panUpGestureRecognizer;
- (id)preventedDisplaySleepToken;
- (void)setIsActive:(bool)arg1;
- (void)setIsTouching:(bool)arg1;
- (void)setMainModel:(id)arg1;
- (void)setPreventedDisplaySleepToken:(id)arg1;
- (void)setShouldPreventDisplaySleep:(bool)arg1;
- (bool)shouldPreventDisplaySleep;
- (id)storyQueue;
- (id)swipeDownGestureHelper;
- (id)swipeGestureRecognizers;
- (id)tapGestureRecognizer;
- (id)timeSource;
- (void)togglePlayback:(id)arg1;
- (id)touchingGestureRecognizer;
- (void)touchingUIGestureRecognizerDidBeginTouching:(id)arg1;
- (void)touchingUIGestureRecognizerDidEndTouching:(id)arg1;
- (id)tungstenView;
- (id)tungstenViewCoordinator;
- (id)updater;
- (bool)verticalSwipeGestureRecognizerHelper:(id)arg1 shouldRecognizeSwipeDownGestureRecognizer:(id)arg2;
- (id)viewLayout;
- (id)viewModel;

@end
