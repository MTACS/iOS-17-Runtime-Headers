
@interface PXFeedViewModel : PXObservable <PXChangeObserver, PXSectionedDataSourceManagerObserver, PXStoryMutableFeedViewModel, PXStoryQueueParticipant, PXTapToRadarDiagnosticProvider> {
    NSHashTable * _accessoryTapToRadarDiagnosticsProviders;
    <PXFeedViewActionPerformer> * _actionPerformer;
    <PXAssetCollectionActionPerformerDelegate> * _assetCollectionActionPerformerDelegate;
    PXSectionedDataSource * _dataSource;
    PXSectionedChangeDetailsRepository * _dataSourceChangeHistory;
    PXSectionedDataSourceManager * _dataSourceManager;
    bool  _isActive;
    <PXFeedItemLayoutFactory> * _itemLayoutFactory;
    <PXFeedPlaceholderFactory> * _placeholderFactory;
    NSObject<PXAnonymousViewController> * _presentingViewController;
    PXSectionedSelectionManager * _selectionManager;
    PXSelectionSnapshot * _selectionSnapshot;
    <PXFeedViewLayoutSpec> * _spec;
    PXFeedViewLayoutSpecManager * _specManager;
    NSObject<OS_dispatch_queue> * _storyQueue;
    NSString * _subtitle;
    PXUpdater * _updater;
    id /* block */  _visibleRectChangeObserver;
    bool  _wantsEmbeddedScrollView;
}

@property (nonatomic, readonly) NSHashTable *accessoryTapToRadarDiagnosticsProviders;
@property (nonatomic, readonly) <PXFeedViewActionPerformer> *actionPerformer;
@property (nonatomic, readonly) <PXAssetCollectionActionPerformerDelegate> *assetCollectionActionPerformerDelegate;
@property (nonatomic, readonly) PXSectionedDataSource *dataSource;
@property (nonatomic, readonly) PXSectionedChangeDetailsRepository *dataSourceChangeHistory;
@property (nonatomic, readonly) PXSectionedDataSourceManager *dataSourceManager;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isActive;
@property (nonatomic, readonly) <PXFeedItemLayoutFactory> *itemLayoutFactory;
@property (nonatomic, readonly) <PXFeedPlaceholderFactory> *placeholderFactory;
@property (nonatomic, readonly) NSObject<PXAnonymousViewController> *presentingViewController;
@property (nonatomic, readonly) PXSectionedSelectionManager *selectionManager;
@property (nonatomic, readonly) PXSelectionSnapshot *selectionSnapshot;
@property (nonatomic, readonly) <PXFeedViewLayoutSpec> *spec;
@property (nonatomic, readonly) PXFeedViewLayoutSpecManager *specManager;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *storyQueue;
@property (nonatomic, readonly, copy) NSString *subtitle;
@property (readonly) Class superclass;
@property (nonatomic, readonly) PXUpdater *updater;
@property (nonatomic, readonly, copy) id /* block */ visibleRectChangeObserver;
@property (nonatomic, readonly) bool wantsEmbeddedScrollView;

- (void).cxx_destruct;
- (void)_invalidateDataSource;
- (void)_invalidateSelectionSnapshot;
- (void)_invalidateSpec;
- (void)_setNeedsUpdate;
- (void)_updateDataSource;
- (void)_updateSelectionSnapshot;
- (void)_updateSpec;
- (id)accessoryTapToRadarDiagnosticsProviders;
- (id)actionPerformer;
- (id)assetCollectionActionPerformerDelegate;
- (void)collectTapToRadarDiagnosticsIntoContainer:(id)arg1;
- (id)dataSource;
- (id)dataSourceChangeHistory;
- (id)dataSourceManager;
- (void)didPerformChanges;
- (id)init;
- (id)initWithDataSourceManager:(id)arg1 specManager:(id)arg2 itemLayoutFactory:(id)arg3 placeholderFactory:(id)arg4 wantsEmbeddedScrollView:(bool)arg5 visibleRectChangeObserver:(id /* block */)arg6;
- (id)initWithFeedViewConfiguration:(id)arg1;
- (bool)isActive;
- (id)itemLayoutFactory;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void*)arg3;
- (void)performChanges:(id /* block */)arg1;
- (id)placeholderFactory;
- (id)presentingViewController;
- (void)registerAccessoryTapToRadarDiagnosticsProvider:(id)arg1;
- (id)selectionManager;
- (id)selectionSnapshot;
- (void)setActionPerformer:(id)arg1;
- (void)setAssetCollectionActionPerformerDelegate:(id)arg1;
- (void)setDataSource:(id)arg1;
- (void)setIsActive:(bool)arg1;
- (void)setPresentingViewController:(id)arg1;
- (void)setSelectionSnapshot:(id)arg1;
- (void)setSpec:(id)arg1;
- (void)setSubtitle:(id)arg1;
- (id)spec;
- (id)specManager;
- (id)storyQueue;
- (id)subtitle;
- (id)updater;
- (id /* block */)visibleRectChangeObserver;
- (bool)wantsEmbeddedScrollView;

@end
