
@interface PXStoryTimelineManager : PXObservable <PXChangeObserver, PXStoryDiagnosticHUDContentProvider, PXStoryMutableTimelineManager, PXStoryQueueParticipant, PXTapToRadarDiagnosticProvider> {
    <PXStoryErrorReporter> * _errorReporter;
    bool  _isTargetTimelineFinal;
    bool  _isTimelineFinal;
    bool  _isUpdatingTimeline;
    <PXStoryLoadingCoordinator> * _loadingCoordinator;
    unsigned long long  _options;
    long long  _paperTrailLength;
    unsigned long long  _paperTrailOptions;
    NSIndexSet * _pendingVisibleSegmentIdentifiers;
    PXStoryResourcesDataSourceManager * _resourcesDataSourceManager;
    PXStoryTimelineSpecManager * _specManager;
    NSObject<OS_dispatch_queue> * _storyQueue;
    PXStoryStyleManager * _styleManager;
    NSProgress * _targetTimelineProgress;
    PXStoryProducerResult * _targetTimelineResult;
    NSMutableArray * _targetTimelineResultsPaperTrail;
    <PXStoryTimeline> * _timeline;
    unsigned long long  _timelineAttributes;
    <PXStoryTimelineProducer> * _timelineProducer;
    NSMutableArray * _timelinesPaperTrail;
    PXUpdater * _updater;
    NSIndexSet * _visibleSegmentIdentifiers;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) <PXStoryErrorReporter> *errorReporter;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isTargetTimelineFinal;
@property (nonatomic, readonly) bool isTimelineFinal;
@property (nonatomic, readonly) <PXStoryLoadingCoordinator> *loadingCoordinator;
@property (nonatomic, readonly) unsigned long long options;
@property (nonatomic, readonly) unsigned long long paperTrailOptions;
@property (nonatomic, retain) NSIndexSet *pendingVisibleSegmentIdentifiers;
@property (nonatomic, readonly) bool requiresUpdatedTargetTimelineImmediately;
@property (nonatomic, readonly) PXStoryResourcesDataSourceManager *resourcesDataSourceManager;
@property (nonatomic, readonly) PXStoryTimelineSpecManager *specManager;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *storyQueue;
@property (nonatomic, readonly) PXStoryStyleManager *styleManager;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSProgress *targetTimelineProgress;
@property (nonatomic, retain) PXStoryProducerResult *targetTimelineResult;
@property (nonatomic, readonly) <PXStoryTimeline> *timeline;
@property (nonatomic, readonly) unsigned long long timelineAttributes;
@property (nonatomic, readonly) <PXStoryTimelineProducer> *timelineProducer;
@property (nonatomic, readonly) PXUpdater *updater;
@property (nonatomic, readonly, copy) NSIndexSet *visibleSegmentIdentifiers;

+ (id)timelineManagerWithTimelineProducer:(id)arg1 resourcesDataSourceManager:(id)arg2 styleManager:(id)arg3 specManager:(id)arg4 configuration:(id)arg5 loadingCoordinator:(id)arg6 paperTrailOptions:(unsigned long long)arg7;

- (void).cxx_destruct;
- (void)_applyPendingVisibleSegmentIdentifiers;
- (id)_diagnosticMovementTextForClipInfo:(struct { long long x1; long long x2; struct CGSize { double x_3_1_1; double x_3_1_2; } x3; unsigned long long x4; struct { struct { long long x_1_2_1; int x_1_2_2; unsigned int x_1_2_3; long long x_1_2_4; } x_5_1_1; struct { long long x_2_2_1; int x_2_2_2; unsigned int x_2_2_3; long long x_2_2_4; } x_5_1_2; struct { long long x_3_2_1; int x_3_2_2; unsigned int x_3_2_3; long long x_3_2_4; } x_5_1_3; struct { struct { long long x_1_3_1; int x_1_3_2; unsigned int x_1_3_3; long long x_1_3_4; } x_4_2_1; long long x_4_2_2; } x_5_1_4; BOOL x_5_1_5; } x5; long long x6; struct { struct CGSize { double x_1_2_1; double x_1_2_2; } x_7_1_1; struct CGRect { struct CGPoint { double x_1_3_1; double x_1_3_2; } x_2_2_1; struct CGSize { double x_2_3_1; double x_2_3_2; } x_2_2_2; } x_7_1_2; struct CGRect { struct CGPoint { double x_1_3_1; double x_1_3_2; } x_3_2_1; struct CGSize { double x_2_3_1; double x_2_3_2; } x_3_2_2; } x_7_1_3; struct CGRect { struct CGPoint { double x_1_3_1; double x_1_3_2; } x_4_2_1; struct CGSize { double x_2_3_1; double x_2_3_2; } x_4_2_2; } x_7_1_4; struct CGRect { struct CGPoint { double x_1_3_1; double x_1_3_2; } x_5_2_1; struct CGSize { double x_2_3_1; double x_2_3_2; } x_5_2_2; } x_7_1_5; } x7; })arg1 segmentClipCount:(int)arg2 autoEditClip:(id)arg3;
- (id)_diagnosticStyleTextForClipInfo:(struct { long long x1; long long x2; struct CGSize { double x_3_1_1; double x_3_1_2; } x3; unsigned long long x4; struct { struct { long long x_1_2_1; int x_1_2_2; unsigned int x_1_2_3; long long x_1_2_4; } x_5_1_1; struct { long long x_2_2_1; int x_2_2_2; unsigned int x_2_2_3; long long x_2_2_4; } x_5_1_2; struct { long long x_3_2_1; int x_3_2_2; unsigned int x_3_2_3; long long x_3_2_4; } x_5_1_3; struct { struct { long long x_1_3_1; int x_1_3_2; unsigned int x_1_3_3; long long x_1_3_4; } x_4_2_1; long long x_4_2_2; } x_5_1_4; BOOL x_5_1_5; } x5; long long x6; struct { struct CGSize { double x_1_2_1; double x_1_2_2; } x_7_1_1; struct CGRect { struct CGPoint { double x_1_3_1; double x_1_3_2; } x_2_2_1; struct CGSize { double x_2_3_1; double x_2_3_2; } x_2_2_2; } x_7_1_2; struct CGRect { struct CGPoint { double x_1_3_1; double x_1_3_2; } x_3_2_1; struct CGSize { double x_2_3_1; double x_2_3_2; } x_3_2_2; } x_7_1_3; struct CGRect { struct CGPoint { double x_1_3_1; double x_1_3_2; } x_4_2_1; struct CGSize { double x_2_3_1; double x_2_3_2; } x_4_2_2; } x_7_1_4; struct CGRect { struct CGPoint { double x_1_3_1; double x_1_3_2; } x_5_2_1; struct CGSize { double x_2_3_1; double x_2_3_2; } x_5_2_2; } x_7_1_5; } x7; })arg1 segmentClipCount:(int)arg2 autoEditClip:(id)arg3;
- (id)_diagnosticTextForSegmentIdentifier:(long long)arg1 segmentTimeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg2 HUDType:(long long)arg3 decisionList:(id)arg4;
- (void)_handleUpdatedTargetTimelineResult:(id)arg1;
- (void)_invalidatePendingVisibleSegmentIdentifiers;
- (void)_invalidateTargetTimeline;
- (void)_invalidateTimeline;
- (void)_invalidateTimelineAttributes;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_rangeOfVisibleDisplayAssetsInResourcesDataSource:(id)arg1;
- (void)_setNeedsUpdate;
- (void)_updatePendingVisibleSegmentIdentifiers;
- (void)_updateTargetTimeline;
- (void)_updateTimeline;
- (void)_updateTimelineAttributes;
- (void)collectTapToRadarDiagnosticsIntoContainer:(id)arg1;
- (void)dealloc;
- (id)diagnosticErrorsByComponentForHUDType:(long long)arg1;
- (id)diagnosticTextForHUDType:(long long)arg1 displaySize:(struct CGSize { double x1; double x2; })arg2;
- (void)didPerformChanges;
- (id)errorReporter;
- (id)init;
- (id)initWithTimelineProducer:(id)arg1 resourcesDataSourceManager:(id)arg2 styleManager:(id)arg3 specManager:(id)arg4 loadingCoordinator:(id)arg5 errorReporter:(id)arg6 options:(unsigned long long)arg7 paperTrailOptions:(unsigned long long)arg8;
- (bool)isTargetTimelineFinal;
- (bool)isTimelineFinal;
- (id)loadingCoordinator;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void*)arg3;
- (unsigned long long)options;
- (unsigned long long)paperTrailOptions;
- (id)pendingVisibleSegmentIdentifiers;
- (void)performChanges:(id /* block */)arg1;
- (bool)requiresUpdatedTargetTimelineImmediately;
- (id)resourcesDataSourceManager;
- (void)setIsTargetTimelineFinal:(bool)arg1;
- (void)setIsTimelineFinal:(bool)arg1;
- (void)setPendingVisibleSegmentIdentifiers:(id)arg1;
- (void)setTargetTimelineProgress:(id)arg1;
- (void)setTargetTimelineResult:(id)arg1;
- (void)setTimeline:(id)arg1;
- (void)setTimelineAttributes:(unsigned long long)arg1;
- (void)setVisibleSegmentIdentifiers:(id)arg1;
- (void)setVisibleSegmentIdentifiers:(id)arg1 afterUpdatePass:(bool)arg2;
- (id)specManager;
- (id)storyQueue;
- (id)styleManager;
- (id)targetTimelineProgress;
- (id)targetTimelineResult;
- (id)timeline;
- (unsigned long long)timelineAttributes;
- (id)timelineProducer;
- (id)updater;
- (id)visibleSegmentIdentifiers;

@end
