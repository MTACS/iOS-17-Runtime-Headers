
@interface _PXStoryExportOperation : NSOperation <PXGEngineDelegate, PXStoryDiagnosticHUDDataSource, PXStoryExportRequest_Internal, PXStoryPacingCueSource> {
    AVAssetWriter * _assetWriter;
    NSObject<OS_dispatch_queue> * _audioQueue;
    AVAssetReader * _audioQueue_assetReader;
    AVAssetReaderAudioMixOutput * _audioQueue_audioMixOutput;
    AVAssetWriterInput * _audioQueue_audioWriter;
    NSObject<OS_dispatch_semaphore> * _completedWritingVideoFrameSemaphore;
    PXStoryExportConfiguration * _configuration;
    NSURL * _destinationURL;
    unsigned long long  _frequentSignpostID;
    NSObject<OS_os_log> * _frequentSignpostLog;
    NSObject<OS_dispatch_semaphore> * _layoutCompleteSemaphore;
    NSProgress * _progress;
    id /* block */  _progressHandler;
    unsigned long long  _signpostID;
    NSObject<OS_os_log> * _signpostLog;
    NSObject<OS_dispatch_queue> * _stateQueue;
    NSError * _stateQueue_error;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _stateQueue_exportDuration;
    <PXStoryStyle> * _stateQueue_exportedStyle;
    bool  _stateQueue_hasAudioForExport;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _stateQueue_outroDuration;
    long long  _stateQueue_status;
    NSObject<OS_dispatch_queue> * _storyQueue;
    PXGEngine * _storyQueue_engine;
    bool  _storyQueue_hasEncounteredDriftError;
    bool  _storyQueue_isWaitingForResources;
    PXMediaProvider * _storyQueue_mediaProvider;
    PXStoryPacingController * _storyQueue_pacingController;
    PXGPixelBufferMetalRenderDestination * _storyQueue_pixelBufferRenderDestination;
    PXStorySongController * _storyQueue_songController;
    PXStoryModel * _storyQueue_storyModel;
    NSString * _uniqueIdentifier;
    PXStoryExportVideoOptions * _videoOptions;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _videoQueue_firstWrittenStoryTime;
    NSObject<OS_dispatch_queue> * _videoWriterQueue;
    AVAssetWriterInputPixelBufferAdaptor * _videoWriterQueue_pixelBufferWriter;
}

@property (nonatomic, readonly) unsigned long long HUDContentChangeDescriptor;
@property (nonatomic, readonly) PXObservable *HUDObservable;
@property (nonatomic, readonly) PXStoryRelatedController *HUDRelatedController;
@property (nonatomic, readonly) PXStoryModel *HUDStoryModel;
@property (nonatomic, readonly) unsigned long long HUDStoryModelChangeDescriptor;
@property (nonatomic, readonly) unsigned long long HUDVisibiltyChangeDescriptor;
@property (retain) AVAssetWriter *assetWriter;
@property (nonatomic, readonly) <PXAudioCueSource> *audioCueSource;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *audioQueue;
@property (nonatomic, retain) AVAssetReader *audioQueue_assetReader;
@property (nonatomic, retain) AVAssetReaderAudioMixOutput *audioQueue_audioMixOutput;
@property (nonatomic, retain) AVAssetWriterInput *audioQueue_audioWriter;
@property (nonatomic, readonly) NSObject<OS_dispatch_semaphore> *completedWritingVideoFrameSemaphore;
@property (nonatomic, readonly) PXStoryExportConfiguration *configuration;
@property (nonatomic, readonly) long long cuesVersion;
@property (nonatomic, readonly) struct { long long x1; int x2; unsigned int x3; long long x4; } currentTime;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSURL *destinationURL;
@property (nonatomic, readonly) long long diagnosticHUDType;
@property (setter=_setError:, nonatomic, retain) NSError *error;
@property (setter=_setExportDuration:, nonatomic) struct { long long x1; int x2; unsigned int x3; long long x4; } exportDuration;
@property (setter=_setExportedStyle:, nonatomic, retain) <PXStoryStyle> *exportedStyle;
@property (setter=_setHasAudioForExport:, nonatomic) bool hasAudioForExport;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isCancelled;
@property (nonatomic, readonly) bool isHUDVisible;
@property (nonatomic, readonly) NSObject<OS_dispatch_semaphore> *layoutCompleteSemaphore;
@property (setter=_setOutroDuration:, nonatomic) struct { long long x1; int x2; unsigned int x3; long long x4; } outroDuration;
@property (nonatomic, readonly) NSProgress *progress;
@property (nonatomic, readonly) id /* block */ progressHandler;
@property (setter=_setStatus:, nonatomic) long long status;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *storyQueue;
@property (nonatomic, retain) PXGEngine *storyQueue_engine;
@property (nonatomic, readonly) bool storyQueue_isWaitingForResources;
@property (nonatomic, retain) PXMediaProvider *storyQueue_mediaProvider;
@property (nonatomic, retain) PXStoryPacingController *storyQueue_pacingController;
@property (nonatomic, retain) PXGPixelBufferMetalRenderDestination *storyQueue_pixelBufferRenderDestination;
@property (nonatomic, retain) PXStorySongController *storyQueue_songController;
@property (nonatomic, retain) PXStoryModel *storyQueue_storyModel;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSString *uniqueIdentifier;
@property (nonatomic, readonly) PXStoryExportVideoOptions *videoOptions;
@property (nonatomic) struct { long long x1; int x2; unsigned int x3; long long x4; } videoQueue_firstWrittenStoryTime;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *videoWriterQueue;
@property (nonatomic, retain) AVAssetWriterInputPixelBufferAdaptor *videoWriterQueue_pixelBufferWriter;

- (void).cxx_destruct;
- (unsigned long long)HUDContentChangeDescriptor;
- (id)HUDObservable;
- (id)HUDRelatedController;
- (id)HUDStoryModel;
- (unsigned long long)HUDStoryModelChangeDescriptor;
- (unsigned long long)HUDVisibiltyChangeDescriptor;
- (void)_addAudioAssetsForVideoHilightsToAudioCompositionBuilder:(id)arg1;
- (void)_addAudioInputToAssetWriter:(id)arg1;
- (void)_addMetadataToAssetWriter:(id)arg1;
- (void)_addSongAssetToAudioCompositionBuilder:(id)arg1;
- (void)_addVideoInputToAssetWriter:(id)arg1;
- (void)_advanceLayoutToStoryTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (id)_audibleVideoHilightsInStory;
- (void)_audioWriteQueue_cancelAudioExport;
- (void)_audioWriteQueue_exportAudioWithCompletionHandler:(id /* block */)arg1;
- (void)_audioWriteQueue_setupAudioReaderWithAudioExportComposition:(id)arg1 audioMix:(id)arg2;
- (void)_checkForDriftFromCurrentTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)_exportAudioWithCompletionHandler:(id /* block */)arg1;
- (void)_exportVideo;
- (void)_finishWriting;
- (void)_handleMediaRequestCompletedForSongAsset:(id)arg1 avAsset:(id)arg2 audioMix:(id)arg3 info:(id)arg4 audioCompositionBuilder:(id)arg5;
- (void)_initializeProgress;
- (void)_preloadStoryResourcesAndWaitForBuffering;
- (void)_setError:(id)arg1;
- (void)_setExportDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)_setExportedStyle:(id)arg1;
- (void)_setHasAudioForExport:(bool)arg1;
- (void)_setOutroDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)_setStatus:(long long)arg1;
- (void)_setupAudioExporting;
- (void)_setupStoryLayout;
- (void)_setupStoryModel;
- (void)_setupWriter;
- (void)_signalSemaphoresForFailedExport;
- (void)_storyQueue_advanceLayoutToStoryTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)_storyQueue_checkForDriftFromCurrentTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (id)_storyQueue_createStoryModel;
- (void)_storyQueue_processRenderedLayoutPixelBuffer:(struct __CVBuffer { }*)arg1;
- (id)_videoOutputSettings;
- (void)_videoWriterQueue_writeVideoWithPixelBuffer:(struct __CVBuffer { }*)arg1 forStoryTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (bool)_waitForStoryStateWhileExportingCanContinueByWatchingChanges:(unsigned long long)arg1 timeout:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 verificationBlock:(id /* block */)arg3;
- (bool)_waitWhileExportingCanContinueForSemaphore:(id)arg1 timeout:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (void)_writeVideoWithPixelBuffer:(struct __CVBuffer { }*)arg1 forStoryTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (id)assetWriter;
- (id)audioCueSource;
- (id)audioQueue;
- (id)audioQueue_assetReader;
- (id)audioQueue_audioMixOutput;
- (id)audioQueue_audioWriter;
- (void)cancel;
- (id)collectAnalyticsForExportBegin;
- (void)collectAnalyticsForExportEnd:(id)arg1;
- (id)completedWritingVideoFrameSemaphore;
- (id)configuration;
- (long long)cuesVersion;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })currentTime;
- (void)dealloc;
- (id)destinationURL;
- (id)diagnosticCueStringForSize:(struct CGSize { double x1; double x2; })arg1 withIndicatorTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 rangeIndicatorTimeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg3;
- (id)diagnosticHUDContentProviderForType:(long long)arg1;
- (long long)diagnosticHUDType;
- (bool)engine:(id)arg1 shouldRenderLayout:(id)arg2 sprites:(id)arg3;
- (void)engineSetNeedsUpdate:(id)arg1;
- (id)error;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })exportDuration;
- (id)exportedStyle;
- (bool)hasAudioForExport;
- (id)initWithURL:(id)arg1 configuration:(id)arg2 qualityOfService:(long long)arg3 progressHandler:(id /* block */)arg4;
- (bool)isCancelled;
- (bool)isHUDVisible;
- (id)layoutCompleteSemaphore;
- (void)main;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })outroDuration;
- (id)pixelBufferAttributes;
- (id)progress;
- (id /* block */)progressHandler;
- (void)setAssetWriter:(id)arg1;
- (void)setAudioQueue_assetReader:(id)arg1;
- (void)setAudioQueue_audioMixOutput:(id)arg1;
- (void)setAudioQueue_audioWriter:(id)arg1;
- (void)setStoryQueue_engine:(id)arg1;
- (void)setStoryQueue_mediaProvider:(id)arg1;
- (void)setStoryQueue_pacingController:(id)arg1;
- (void)setStoryQueue_pixelBufferRenderDestination:(id)arg1;
- (void)setStoryQueue_songController:(id)arg1;
- (void)setStoryQueue_storyModel:(id)arg1;
- (void)setVideoQueue_firstWrittenStoryTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setVideoWriterQueue_pixelBufferWriter:(id)arg1;
- (bool)shouldContinueExporting;
- (long long)status;
- (id)storyQueue;
- (id)storyQueue_engine;
- (bool)storyQueue_isWaitingForResources;
- (id)storyQueue_mediaProvider;
- (id)storyQueue_pacingController;
- (id)storyQueue_pixelBufferRenderDestination;
- (id)storyQueue_songController;
- (id)storyQueue_storyModel;
- (id)uniqueIdentifier;
- (id)videoOptions;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })videoQueue_firstWrittenStoryTime;
- (id)videoWriterQueue;
- (id)videoWriterQueue_pixelBufferWriter;

@end
