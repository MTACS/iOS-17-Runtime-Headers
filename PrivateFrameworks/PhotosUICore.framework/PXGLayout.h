
@interface PXGLayout : NSObject <PXGAXGroupSource, PXGAXInfoSource, PXGAXResponder, PXGDataSourceDrivenLayout, PXGDiagnosticsProvider, PXGSpriteIndexReferencing> {
    PXGAnchor * _activeAnchor;
    double  _alpha;
    NSMutableArray * _animations;
    unsigned long long  _appearState;
    <PXGAXResponder> * _axNextResponder;
    struct PXGCameraConfiguration { 
        struct { 
            /* Warning: Unrecognized filer type: ']' using 'void*' */ void*columns[4]; 
        } viewMatrix; 
        struct { 
            void*columns[4]; 
        } billboardMatrix; 
    }  _cameraConfiguration;
    NSMutableArray * _changeDetails;
    unsigned long long  _childrenTotalUpdateDuration;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _clippingRect;
    struct CGSize { 
        double width; 
        double height; 
    }  _contentSize;
    <PXGLayoutContentSource> * _contentSource;
    bool  _disableDebugAssertionForAnchorUpdatesWithZeroContentSize;
    <PXGDisplayAssetSource> * _displayAssetSource;
    struct { 
        bool supportedDisplayAssetPresentationStylesInLayout; 
        bool minSpriteSizeForPresentationStyle; 
        bool displayAssetRequestObserverForSpritesInRangeInLayout; 
        bool videoPresentationControllerForDisplayAssetSpriteIndexInLayout; 
        bool adjustmentForDisplayAssetSpriteIndexInLayout; 
        bool presentationIntentForSpritesInRangeInLayout; 
        bool customMediaProviderForDisplayAssetsInLayout; 
        bool customPixelBufferSourcesProviderForDisplayAssetsInLayout; 
        bool useLowMemoryDecodeInLayout; 
        bool shouldApplyCleanApertureCropToStillImagesInLayout; 
    }  _displayAssetSourceRespondsTo;
    double  _displayScale;
    PXGEntityManager * _entityManager;
    struct CGSize { 
        double width; 
        double height; 
    }  _estimatedContentSize;
    NSMutableArray * _fences;
    bool  _floating;
    double  _floatingOffset;
    <PXGLayoutFocusDelegate> * _focusDelegate;
    NSArray * _interactions;
    PXGDataSourceChange * _internalCurrentDataSourceChange;
    long long  _intrinsicScrollRegime;
    bool  _isLastVisibleAreaAnchoringInformationInvalidated;
    bool  _isPerformingWithLocalUpdate;
    bool  _isPropagatingAdjustedReferencedHiddenSpriteIndexes;
    bool  _isRequestingVisibleRect;
    bool  _isUpdating;
    bool  _isUpdatingAnchoring;
    bool  _isUpdatingSpriteStyling;
    double  _lastBaseline;
    struct CGPoint { 
        double x; 
        double y; 
    }  _lastScrollDirection;
    PXGAnchor * _lastVisibleAreaAnchor;
    NSObject<OS_dispatch_queue> * _layoutQueue;
    NSIndexSet * _localHiddenSpriteIndexes;
    PXMediaProvider * _mediaProvider;
    bool  _needsUpdate;
    long long  _nestedAnchorVisibleRectChanges;
    PXGLayout * _nextViewHostingLayout;
    long long  _numberOfDescendantAnchors;
    long long  _numberOfRepeatedSublayoutUpdatesInUpdatePass;
    unsigned int  _numberOfSprites;
    NSHashTable * _pointReferences;
    double  _referenceDepth;
    unsigned short  _referenceOptions;
    struct CGSize { 
        double width; 
        double height; 
    }  _referenceSize;
    PXGBasicAXGroup * _reusableAXGroup;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _safeAreaInsets;
    <PXGLayoutScrollDelegate> * _scrollDelegate;
    long long  _scrollSpeedRegime;
    PXGSpriteDataStore * _spriteDataStore;
    NSIndexSet * _spriteIndexesWithInvalidatedStyle;
    PXGSpriteMetadataStore * _spriteMetadataStore;
    NSMutableArray * _spriteReferencesForHiddenSprites;
    struct { 
        bool stringDrawingOptionsForSpriteAtIndexInLayout; 
        bool paddingForSpriteAtIndexInLayout; 
        bool drawingContextForSpriteAtIndexInLayout; 
        bool attributedStringBoundingSizeForSpriteAtIndexInLayout; 
    }  _stringSourceRespondsTo;
    PXGSublayoutDataStore * _sublayoutDataStore;
    NSMutableSet * _sublayoutsExpectedToBeUpdatedInUpdatePass;
    PXGLayout * _superlayout;
    NSMutableArray * _transitions;
    long long  _updateCount;
    <PXGLayoutUpdateDelegate> * _updateDelegate;
    struct { 
        unsigned long long needsUpdate; 
        unsigned long long updated; 
        bool isPerformingUpdate; 
        bool willPerformUpdate; 
    }  _updateFlags;
    id  _userData;
    unsigned long long  _userInterfaceDirection;
    long long  _version;
    <PXGLayoutViewDelegate> * _viewDelegate;
    PXGViewEnvironment * _viewEnvironment;
    unsigned int  _viewHostingSpriteIndex;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _visibleRect;
    <PXGLayoutVisibleRectDelegate> * _visibleRectDelegate;
}

@property (nonatomic, readonly) PXGAnchor *activeAnchor;
@property (nonatomic, readonly) bool allowsDanglingUpdatesAssertions;
@property (nonatomic, readonly) bool allowsObjectReferenceSpriteIndexLookup;
@property (nonatomic, readonly) bool allowsSublayoutUpdateCycleAssertions;
@property (nonatomic) double alpha;
@property (nonatomic, readonly) unsigned long long anchoredContentEdges;
@property (nonatomic, readonly) long long anchoredSublayoutIndex;
@property (nonatomic, readonly, copy) NSArray *animations;
@property (nonatomic) unsigned long long appearState;
@property (nonatomic, readonly) bool appliesAlphaToSublayouts;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } axFrame;
@property (nonatomic, readonly) PXGBasicAXGroup *axGroup;
@property (nonatomic, readonly) NSString *axLocalizedLabel;
@property (nonatomic) <PXGAXResponder> *axNextResponder;
@property (nonatomic, readonly) NSIndexSet *axSelectedSpriteIndexes;
@property (nonatomic, readonly) bool axShouldBeConsideredAsSubgroup;
@property (nonatomic, readonly) bool axShouldSearchLeafsInSubgroups;
@property (nonatomic, readonly) NSIndexSet *axSpriteIndexes;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } axVisibleRect;
@property (nonatomic, readonly) NSIndexSet *axVisibleSpriteIndexes;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } bounds;
@property (nonatomic, readonly) NSString *briefDiagnosticDescription;
@property (nonatomic) struct PXGCameraConfiguration { struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x_1_1_1[4]; } x1; struct { void*x_2_1_1[4]; } x2; } cameraConfiguration;
@property (nonatomic, readonly) bool canHandleVisibleRectRejection;
@property (nonatomic, readonly) NSMutableArray *changeDetails;
@property (nonatomic, readonly) unsigned int childrenNumberOfSprites;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } clippingRect;
@property (nonatomic, readonly) unsigned long long contentChangeTrend;
@property (nonatomic) struct CGSize { double x1; double x2; } contentSize;
@property (nonatomic) <PXGLayoutContentSource> *contentSource;
@property (nonatomic, readonly) NSObject<UICoordinateSpace> *coordinateSpace;
@property (nonatomic, readonly) PXGDataSourceChange *currentDataSourceChange;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) PXGDecoratingLayout *decoratingLayout;
@property (nonatomic, readonly) bool definesContextForPointReferences;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly, copy) NSString *diagnosticDescription;
@property (nonatomic, readonly) bool disableDebugAssertionForAnchorUpdatesWithZeroContentSize;
@property (nonatomic, readonly) <PXGDisplayAssetSource> *displayAssetSource;
@property (nonatomic, readonly) struct { bool x1; bool x2; bool x3; bool x4; bool x5; bool x6; bool x7; bool x8; bool x9; bool x10; } displayAssetSourceRespondsTo;
@property (nonatomic) double displayScale;
@property (nonatomic, retain) PXGEntityManager *entityManager;
@property (nonatomic) struct CGSize { double x1; double x2; } estimatedContentSize;
@property (nonatomic, readonly, copy) NSArray *fences;
@property (nonatomic, readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } flexibleRegionInsets;
@property (getter=isFloating, nonatomic) bool floating;
@property (nonatomic) double floatingOffset;
@property (nonatomic) <PXGLayoutFocusDelegate> *focusDelegate;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } frame;
@property (nonatomic, readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } fullPageSnapshotFloatingInsets;
@property (nonatomic, readonly) unsigned long long fullyVisibleEdgesWithDefaultTolerance;
@property (nonatomic, readonly) bool hasPointReferences;
@property (nonatomic, readonly) bool hasSublayoutsRemainingToBeUpdated;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSIndexSet *hiddenSpriteIndexes;
@property (nonatomic, readonly, copy) NSArray *interactions;
@property (nonatomic, copy) NSArray *interactions;
@property (nonatomic, retain) PXGDataSourceChange *internalCurrentDataSourceChange;
@property (nonatomic, readonly) long long intrinsicScrollRegime;
@property (nonatomic, readonly) bool isAnimating;
@property (nonatomic, readonly) bool isUpdatingSpriteStyling;
@property (nonatomic, readonly) PXGItemsLayout *itemsLayout;
@property (nonatomic) double lastBaseline;
@property (nonatomic) struct CGPoint { double x1; double x2; } lastScrollDirection;
@property (nonatomic, retain) PXGAnchor *lastVisibleAreaAnchor;
@property (nonatomic, readonly) PXGItemsLayout *layoutForItemChanges;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *layoutQueue;
@property (nonatomic, readonly) <PXGLayoutSnapshotDataSource> *layoutSnapshotDataSource;
@property (nonatomic, readonly) NSIndexSet *localHiddenSpriteIndexes;
@property (nonatomic, readonly) unsigned int localNumberOfSprites;
@property (nonatomic, retain) PXMediaProvider *mediaProvider;
@property (nonatomic, readonly) bool needsUpdate;
@property (nonatomic) PXGLayout *nextViewHostingLayout;
@property (nonatomic, readonly) long long numberOfDescendantAnchors;
@property (nonatomic, readonly) unsigned int numberOfSprites;
@property (nonatomic, readonly) long long numberOfSublayouts;
@property (nonatomic, readonly) struct { struct CGAffineTransform { double x_1_1_1; double x_1_1_2; double x_1_1_3; double x_1_1_4; double x_1_1_5; double x_1_1_6; } x1; double x2; } orientedContentTransform;
@property (nonatomic, readonly) NSString *parentDescription;
@property (nonatomic, readonly) NSArray *pendingAnimations;
@property (nonatomic, readonly) NSArray *pendingFences;
@property (nonatomic, readonly) NSHashTable *pointReferences;
@property (nonatomic, readonly) NSArray *preferredFocusLayouts;
@property (nonatomic, readonly) NSIndexSet *preferredFocusSpriteIndexes;
@property (nonatomic, readonly) PXAssetsSectionLayout *px_assetsSectionLayout;
@property (nonatomic, readonly) NSString *recursiveDescription;
@property (nonatomic) double referenceDepth;
@property (nonatomic) unsigned short referenceOptions;
@property (nonatomic) struct CGSize { double x1; double x2; } referenceSize;
@property (nonatomic, readonly) PXGLayout *rootLayout;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } safeAreaInsets;
@property (nonatomic) <PXGLayoutScrollDelegate> *scrollDelegate;
@property (nonatomic) long long scrollSpeedRegime;
@property (nonatomic, readonly) long long scrollableAxis;
@property (nonatomic, readonly) bool shouldDecorateUndefinedMediaKind;
@property (nonatomic, readonly) bool shouldFaultInContentAtAnchoredContentEdges;
@property (nonatomic, readonly) bool shouldInvalidateDecorationForModifiedSprites;
@property (nonatomic, readonly) bool shouldUpdateDecorationMediaTargetSizes;
@property (nonatomic, readonly) PXGSpriteDataStore *spriteDataStore;
@property (nonatomic, readonly) PXGSpriteMetadataStore *spriteMetadataStore;
@property (nonatomic, readonly) struct { bool x1; bool x2; bool x3; bool x4; } stringSourceRespondsTo;
@property (nonatomic, readonly) PXGSublayoutDataStore *sublayoutDataStore;
@property (readonly) Class superclass;
@property (nonatomic) PXGLayout *superlayout;
@property (nonatomic, readonly, copy) NSArray *transitions;
@property (nonatomic, readonly) long long updateCount;
@property (nonatomic) <PXGLayoutUpdateDelegate> *updateDelegate;
@property (nonatomic, retain) id userData;
@property (nonatomic) unsigned long long userInterfaceDirection;
@property (nonatomic, readonly) long long version;
@property (nonatomic) <PXGLayoutViewDelegate> *viewDelegate;
@property (nonatomic, retain) PXGViewEnvironment *viewEnvironment;
@property (nonatomic, readonly) unsigned int viewHostingSpriteIndex;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } visibleRect;
@property (nonatomic) <PXGLayoutVisibleRectDelegate> *visibleRectDelegate;

+ (unsigned long long)scrolledEdgesForVisibleEdges:(unsigned long long)arg1 scrollableAxis:(long long)arg2;

- (void).cxx_destruct;
- (void)_addAnimations:(id)arg1;
- (void)_addFences:(id)arg1;
- (void)_addHiddenSpriteIndexes:(id)arg1;
- (void)_appendDescription:(id)arg1 atLevel:(long long)arg2;
- (void)_childDidUpdateWithDuration:(unsigned long long)arg1;
- (id)_createAnchorForContentEdges:(unsigned long long)arg1 priority:(long long)arg2;
- (id)_createAnchorWithAnchor:(id)arg1 resetPriority:(bool)arg2;
- (id)_createAnchorWithPriority:(long long)arg1 constraints:(id /* block */)arg2;
- (void)_ensureSpriteDataStore;
- (void)_ensureSublayoutDataStore;
- (void)_enumerateSpritesInRange:(struct _PXGSpriteIndexRange { unsigned int x1; unsigned int x2; })arg1 transform:(struct { struct CGAffineTransform { double x_1_1_1; double x_1_1_2; double x_1_1_3; double x_1_1_4; double x_1_1_5; double x_1_1_6; } x1; double x2; })arg2 spriteOffset:(unsigned int)arg3 stop:(bool*)arg4 usingBlock:(id /* block */)arg5;
- (void)_enumerateSpritesInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 transform:(struct { struct CGAffineTransform { double x_1_1_1; double x_1_1_2; double x_1_1_3; double x_1_1_4; double x_1_1_5; double x_1_1_6; } x1; double x2; })arg2 usingBlock:(id /* block */)arg3;
- (void)_incrementNumberOfSprites:(long long)arg1;
- (void)_invalidateDecorationForSpriteRange:(struct _PXGSpriteIndexRange { unsigned int x1; unsigned int x2; })arg1 inLayout:(id)arg2 invalidateSprites:(bool)arg3;
- (void)_invalidateStyleOfSpritesWithIndexes:(id)arg1;
- (struct CGPoint { double x1; double x2; })_offsetToDescendantLayout:(id)arg1;
- (id)_paddingForLevel:(long long)arg1;
- (void)_propagateHiddenSpriteIndexes:(id)arg1;
- (void)_recursivelyResetHiddenSpriteIndexes;
- (void)_recycleSpriteDataStore;
- (void)_resetHiddenSpriteIndexes;
- (void)_setNeedsUpdateExternally:(bool)arg1;
- (void)_updateAnchoring;
- (void)_updateVersion;
- (void)_willAddSublayout:(id)arg1;
- (id)activeAnchor;
- (void)addAnchor:(id)arg1;
- (void)addAnimation:(id)arg1;
- (void)addFence:(id)arg1;
- (void)addInteraction:(id)arg1;
- (void)addPointReference:(id)arg1;
- (unsigned short)addResizableCapInsets:(struct { float x1; float x2; float x3; float x4; })arg1;
- (struct _PXGSpriteIndexRange { unsigned int x1; unsigned int x2; })addSpriteCount:(unsigned int)arg1 withInitialState:(id /* block */)arg2;
- (unsigned int)addSpriteWithInitialState:(id /* block */)arg1;
- (void)addSpritesAtIndexes:(id)arg1 initialState:(id /* block */)arg2;
- (void)addSpritesInRange:(struct _PXGSpriteIndexRange { unsigned int x1; unsigned int x2; })arg1 initialState:(id /* block */)arg2;
- (long long)addSublayout:(id)arg1;
- (void)addTransition:(id)arg1;
- (void)adjustCopiedSprites:(struct { unsigned int x1; struct { /* ? */ } *x2; struct { /* ? */ } *x3; struct { /* ? */ } *x4; struct { /* ? */ } *x5; })arg1;
- (void)adjustReferencedSpriteIndexesWithChangeDetails:(id)arg1 appliedToLayout:(id)arg2;
- (bool)allowsDanglingUpdatesAssertions;
- (bool)allowsObjectReferenceSpriteIndexLookup;
- (bool)allowsSublayoutUpdateCycleAssertions;
- (double)alpha;
- (void)alphaDidChange;
- (id)ancestorSharedWithLayout:(id)arg1;
- (unsigned long long)anchoredContentEdges;
- (long long)anchoredSublayoutIndex;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })anchoringRectForSpriteAtIndex:(unsigned int)arg1;
- (void)animationDidComplete:(id)arg1;
- (id)animations;
- (unsigned long long)appearState;
- (void)appearStateDidChange;
- (bool)appliesAlphaToSublayouts;
- (void)applySectionedChangeDetails:(id)arg1 dataSourceBeforeChanges:(id)arg2 dataSourceAfterChanges:(id)arg3 sublayoutProvider:(id)arg4 outChangedSections:(id*)arg5 outSectionsWithItemChanges:(id*)arg6 changeMediaVersionHandler:(id /* block */)arg7;
- (void)applySectionedChangeDetailsForSingleSection:(id)arg1 dataSourceBeforeChanges:(id)arg2 dataSourceAfterChanges:(id)arg3 changeMediaVersionHandler:(id /* block */)arg4;
- (void)applySpriteChangeDetails:(id)arg1 countAfterChanges:(unsigned int)arg2 initialState:(id /* block */)arg3 modifyFullState:(id /* block */)arg4;
- (void)applySpriteChangeDetails:(id)arg1 countAfterChanges:(unsigned int)arg2 initialState:(id /* block */)arg3 modifyState:(id /* block */)arg4;
- (void)applySublayoutChangeDetails:(id)arg1 countAfterChanges:(long long)arg2 sublayoutProvider:(id)arg3;
- (void)assumeWillUpdateSublayoutInUpdatePass:(id)arg1;
- (void)axAddSubgroupForSublayout:(id)arg1 atIndex:(long long)arg2 flags:(unsigned long long)arg3;
- (id)axContainingScrollViewForAXGroup:(id)arg1;
- (id)axContainingViewForAXGroup:(id)arg1;
- (id)axContentInfoAtSpriteIndex:(unsigned int)arg1;
- (struct CGPoint { double x1; double x2; })axConvertPoint:(struct CGPoint { double x1; double x2; })arg1 fromDescendantGroup:(id)arg2;
- (struct CGPoint { double x1; double x2; })axConvertPoint:(struct CGPoint { double x1; double x2; })arg1 toDescendantGroup:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })axConvertRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 fromDescendantGroup:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })axConvertRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 toDescendantGroup:(id)arg2;
- (void)axDidReceiveFocusMovementHint:(id)arg1 forSpriteAtIndex:(unsigned int)arg2;
- (void)axDidUpdateFocusFromSpriteAtIndex:(unsigned int)arg1 toSpriteAtIndex:(unsigned int)arg2;
- (void)axDidUpdateFocusInContext:(id)arg1;
- (unsigned long long)axFocusabilityForSpriteAtIndex:(unsigned int)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })axFrame;
- (id)axGroup;
- (void)axGroup:(id)arg1 didChange:(unsigned long long)arg2 userInfo:(id)arg3;
- (bool)axGroup:(id)arg1 didRequestToPerformAction:(long long)arg2 userInfo:(id)arg3;
- (id)axLeafForObjectReference:(id)arg1;
- (id)axLocalizedLabel;
- (id)axNextResponder;
- (void)axRemoveSubgroupForSublayout:(id)arg1 atIndex:(long long)arg2 flags:(unsigned long long)arg3;
- (id)axSelectedSpriteIndexes;
- (bool)axShouldBeConsideredAsSubgroup;
- (bool)axShouldSearchLeafsInSubgroups;
- (unsigned int)axSpriteIndexClosestToSpriteIndex:(unsigned int)arg1 inDirection:(unsigned long long)arg2;
- (unsigned int)axSpriteIndexClosestToSpriteIndexDefaultImplementation:(unsigned int)arg1 inDirection:(unsigned long long)arg2;
- (id)axSpriteIndexes;
- (id)axSpriteIndexesInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)axSpriteIndexesInRectDefaultImplementation:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })axVisibleRect;
- (id)axVisibleSpriteIndexes;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })bounds;
- (id)briefDiagnosticDescription;
- (struct PXGCameraConfiguration { struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x_1_1_1[4]; } x1; struct { void*x_2_1_1[4]; } x2; })cameraConfiguration;
- (bool)canHandleVisibleRectRejection;
- (id)changeDetails;
- (bool)changeVisibleRectToProposedVisibleRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (unsigned int)childrenNumberOfSprites;
- (void)clearLastVisibleAreaAnchoringInformation;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })clippingRect;
- (void)containingScrollViewDidScroll:(struct CGPoint { double x1; double x2; })arg1;
- (unsigned long long)contentChangeTrend;
- (struct CGSize { double x1; double x2; })contentSize;
- (void)contentSizeDidChange;
- (id)contentSource;
- (id)convertChangeDetails:(id)arg1 fromSublayout:(id)arg2;
- (struct CGPoint { double x1; double x2; })convertPoint:(struct CGPoint { double x1; double x2; })arg1 fromDescendantLayout:(id)arg2;
- (struct CGPoint { double x1; double x2; })convertPoint:(struct CGPoint { double x1; double x2; })arg1 fromLayout:(id)arg2;
- (struct CGPoint { double x1; double x2; })convertPoint:(struct CGPoint { double x1; double x2; })arg1 toDescendantLayout:(id)arg2;
- (struct _PXGSpriteIndexRange { unsigned int x1; unsigned int x2; })convertRange:(struct _PXGSpriteIndexRange { unsigned int x1; unsigned int x2; })arg1 fromSublayout:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 fromDescendantLayout:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 fromLayout:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 toDescendantLayout:(id)arg2;
- (unsigned int)convertSpriteIndex:(unsigned int)arg1 fromDescendantLayout:(id)arg2;
- (unsigned int)convertSpriteIndex:(unsigned int)arg1 fromLayout:(id)arg2;
- (unsigned int)convertSpriteIndex:(unsigned int)arg1 toDescendantLayout:(id)arg2;
- (struct _PXGSpriteIndexRange { unsigned int x1; unsigned int x2; })convertSpriteIndexRange:(struct _PXGSpriteIndexRange { unsigned int x1; unsigned int x2; })arg1 fromDescendantLayout:(id)arg2;
- (id)convertSpriteIndexes:(id)arg1 fromDescendantLayout:(id)arg2;
- (id)coordinateSpace;
- (void)copyLayoutForSpritesInRange:(struct _PXGSpriteIndexRange { unsigned int x1; unsigned int x2; })arg1 applySpriteTransforms:(bool)arg2 entities:(struct { unsigned int x1; }*)arg3 geometries:(struct { struct { double x_1_1_1; double x_1_1_2; double x_1_1_3; } x1; }*)arg4 styles:(struct { float x1; struct { union { struct { float x_1_3_1; float x_1_3_2; float x_1_3_3; float x_1_3_4; } x_1_2_1; float x_1_2_2[4]; } x_2_1_1; } x2; float x3; float x4; float x5; float x6; unsigned short x7; unsigned char x8; float x9; struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x_10_1_1[4]; } x10; }*)arg5 infos:(struct { unsigned char x1; unsigned char x2; float x3; long long x4; unsigned short x5; unsigned char x6; }*)arg6;
- (void)copyLayoutForSpritesInRange:(struct _PXGSpriteIndexRange { unsigned int x1; unsigned int x2; })arg1 applySpriteTransforms:(bool)arg2 parentTransform:(struct { struct CGAffineTransform { double x_1_1_1; double x_1_1_2; double x_1_1_3; double x_1_1_4; double x_1_1_5; double x_1_1_6; } x1; double x2; })arg3 parentAlpha:(float)arg4 parentClippingRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg5 parentSublayoutOrigin:(struct { double x1; double x2; double x3; })arg6 entities:(struct { unsigned int x1; }*)arg7 geometries:(struct { struct { double x_1_1_1; double x_1_1_2; double x_1_1_3; } x1; }*)arg8 styles:(struct { float x1; struct { union { struct { float x_1_3_1; float x_1_3_2; float x_1_3_3; float x_1_3_4; } x_1_2_1; float x_1_2_2[4]; } x_2_1_1; } x2; float x3; float x4; float x5; float x6; unsigned short x7; unsigned char x8; float x9; struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x_10_1_1[4]; } x10; }*)arg9 infos:(struct { unsigned char x1; unsigned char x2; float x3; long long x4; unsigned short x5; unsigned char x6; }*)arg10;
- (void)copyLayoutForSpritesInRange:(struct _PXGSpriteIndexRange { unsigned int x1; unsigned int x2; })arg1 entities:(struct { unsigned int x1; }*)arg2 geometries:(struct { struct { double x_1_1_1; double x_1_1_2; double x_1_1_3; } x1; }*)arg3 styles:(struct { float x1; struct { union { struct { float x_1_3_1; float x_1_3_2; float x_1_3_3; float x_1_3_4; } x_1_2_1; float x_1_2_2[4]; } x_2_1_1; } x2; float x3; float x4; float x5; float x6; unsigned short x7; unsigned char x8; float x9; struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x_10_1_1[4]; } x10; }*)arg4 infos:(struct { unsigned char x1; unsigned char x2; float x3; long long x4; unsigned short x5; unsigned char x6; }*)arg5;
- (void)copyLayoutForSpritesInRange:(struct _PXGSpriteIndexRange { unsigned int x1; unsigned int x2; })arg1 toSpriteDataStore:(id)arg2;
- (void)copySpritesToDataStore:(id)arg1;
- (id)createAnchorForContentEdges:(unsigned long long)arg1;
- (id)createAnchorForScrollingAnimationTowardsContentEdges:(unsigned long long)arg1;
- (id)createAnchorForScrollingSpriteAtIndex:(unsigned int)arg1 toScrollPosition:(unsigned long long)arg2 padding:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg3;
- (id)createAnchorForScrollingSpriteForObjectReference:(id)arg1 toScrollPosition:(unsigned long long)arg2 padding:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg3;
- (id)createAnchorForScrollingSpriteForSpriteReference:(id)arg1 normalizedAnchorPoint:(struct CGPoint { double x1; double x2; })arg2 toVisibleLocation:(struct CGPoint { double x1; double x2; })arg3;
- (id)createAnchorForScrollingSpriteForSpriteReference:(id)arg1 toScrollPosition:(unsigned long long)arg2 padding:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg3;
- (id)createAnchorForScrollingSpriteForSpriteReference:(id)arg1 toScrollPosition:(unsigned long long)arg2 padding:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg3 customOffset:(id /* block */)arg4;
- (id)createAnchorForScrollingToContentEdges:(unsigned long long)arg1 padding:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg2;
- (id)createAnchorForSpriteAtIndex:(unsigned int)arg1;
- (id)createAnchorForSpriteReferences:(id)arg1;
- (id)createAnchorForVisibleArea;
- (id)createAnchorForVisibleAreaIgnoringEdges:(unsigned long long)arg1;
- (id)createAnchorFromSuperlayoutWithSublayoutIndex:(long long)arg1 sublayoutPositionEdges:(unsigned long long)arg2 ignoringScrollingAnimationAnchors:(bool)arg3;
- (id)createAnchorWithAnchor:(id)arg1;
- (id)createAnchorWithConstraints:(id /* block */)arg1;
- (id)createAnimation;
- (id)createCuratedLibraryLayoutAnimationIfNeededWithContext:(long long)arg1;
- (id)createCuratedLibraryLayoutAnimationIfNeededWithContext:(long long)arg1 userData:(id)arg2;
- (id)createCuratedLibraryLayoutSkimmingSlideshowAnimationFromSectionIndexPath:(struct PXSimpleIndexPath { long long x1; long long x2; long long x3; long long x4; })arg1 toSectionIndexPath:(struct PXSimpleIndexPath { long long x1; long long x2; long long x3; long long x4; })arg2;
- (id)createCuratedLibraryLayoutTransitionIfNeededWithContext:(long long)arg1;
- (id)createCuratedLibraryLayoutZoomLevelChangeAnimationFromZoomLevel:(long long)arg1 toZoomLevel:(long long)arg2 withContext:(long long)arg3;
- (id)createDefaultAnimationForCurrentContext;
- (id)createFenceWithType:(unsigned long long)arg1;
- (id)createPointReferenceAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)createTransitionWithAnimations:(id)arg1;
- (id)currentDataSourceChange;
- (void)dealloc;
- (id)decoratingLayout;
- (bool)definesContextForPointReferences;
- (id)diagnosticDescription;
- (id)diagnosticsItemProvidersInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)didAddSublayout:(id)arg1 atIndex:(long long)arg2 flags:(unsigned long long)arg3;
- (void)didApplySpriteChangeDetails:(id)arg1;
- (void)didApplySublayoutChangeDetails:(id)arg1 axAdjustedSubgroupChangeDetails:(id)arg2 countAfterChanges:(long long)arg3;
- (void)didChangeSublayoutOrigins;
- (void)didFaultInSublayout:(id)arg1 atIndex:(long long)arg2 fromEstimatedContentSize:(struct CGSize { double x1; double x2; })arg3;
- (void)didRender;
- (void)didUpdate;
- (void)didUpdateSublayout:(id)arg1;
- (bool)disableDebugAssertionForAnchorUpdatesWithZeroContentSize;
- (id)displayAssetSource;
- (struct { bool x1; bool x2; bool x3; bool x4; bool x5; bool x6; bool x7; bool x8; bool x9; bool x10; })displayAssetSourceRespondsTo;
- (double)displayScale;
- (void)displayScaleDidChange;
- (id)dropTargetObjectReferenceForLocation:(struct CGPoint { double x1; double x2; })arg1;
- (id)dynamicSpriteReferenceForObjectReference:(id)arg1;
- (struct { unsigned int x1; })entityForSpriteAtIndex:(unsigned int)arg1;
- (id)entityManager;
- (void)entityManagerDidChange;
- (void)enumerateDescendantsLayoutsBreadthFirstReverseUsingBlock:(id /* block */)arg1;
- (void)enumerateDescendantsLayoutsUsingBlock:(id /* block */)arg1;
- (void)enumerateLayoutsForSpritesInRange:(struct _PXGSpriteIndexRange { unsigned int x1; unsigned int x2; })arg1 options:(unsigned long long)arg2 usingBlock:(id /* block */)arg3;
- (void)enumerateLocalSpritesInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 usingBlock:(id /* block */)arg2;
- (void)enumerateSpritesInRange:(struct _PXGSpriteIndexRange { unsigned int x1; unsigned int x2; })arg1 options:(unsigned long long)arg2 usingBlock:(id /* block */)arg3;
- (void)enumerateSpritesInRange:(struct _PXGSpriteIndexRange { unsigned int x1; unsigned int x2; })arg1 usingBlock:(id /* block */)arg2;
- (void)enumerateSpritesInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 usingBlock:(id /* block */)arg2;
- (void)enumerateSublayoutsForDetailedPlacement:(id)arg1 ofItemWithReference:(id)arg2 usingBlock:(id /* block */)arg3;
- (void)enumerateVisibleAnchoringLayoutsUsingBlock:(id /* block */)arg1;
- (void)enumerateVisibleAnchoringSpriteIndexesUsingBlock:(id /* block */)arg1;
- (struct CGSize { double x1; double x2; })estimatedContentSize;
- (id)fences;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })flexibleRegionInsets;
- (void)floatingDidChange;
- (double)floatingOffset;
- (void)floatingOffsetDidChange;
- (id)focusDelegate;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frame;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })fullPageSnapshotFloatingInsets;
- (unsigned long long)fullyVisibleEdgesWithDefaultTolerance;
- (unsigned long long)fullyVisibleEdgesWithEdgeTolerances:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (struct { struct { double x_1_1_1; double x_1_1_2; double x_1_1_3; } x1; })geometryForSpriteAtIndex:(unsigned int)arg1;
- (void)getDetailedPresentedPlacement:(id)arg1 forItemReference:(id)arg2;
- (bool)hasPointReferences;
- (bool)hasSublayoutsRemainingToBeUpdated;
- (id)hiddenSpriteIndexes;
- (void)hideSpritesForObjectReferences:(id)arg1;
- (id)hitTestResultForSpriteIndex:(unsigned int)arg1;
- (long long)indexOfSublayout:(id)arg1;
- (struct { unsigned char x1; unsigned char x2; float x3; long long x4; unsigned short x5; unsigned char x6; })infoForSpriteAtIndex:(unsigned int)arg1;
- (id)init;
- (void)insertSublayout:(id)arg1 atIndex:(long long)arg2;
- (void)insertSublayoutProvider:(id)arg1 atIndexes:(id)arg2;
- (void)insertSublayoutProvider:(id)arg1 inRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)installLayoutCompletionBlock:(id /* block */)arg1;
- (id)interactions;
- (id)internalCurrentDataSourceChange;
- (long long)intrinsicScrollRegime;
- (void)invalidateAllSuperlayoutAnchors;
- (void)invalidateDecoration;
- (void)invalidateDecorationAndSprites;
- (void)invalidateDecorationForSpritesInRange:(struct _PXGSpriteIndexRange { unsigned int x1; unsigned int x2; })arg1;
- (void)invalidateLastVisibleAreaAnchoringInformation;
- (void)invalidateVersion;
- (bool)isAnimating;
- (bool)isDescendantOfLayout:(id)arg1;
- (bool)isFloating;
- (bool)isSpriteIndex:(unsigned int)arg1 decoratingSpriteWithIndex:(out unsigned int*)arg2;
- (bool)isUpdatingSpriteStyling;
- (id)itemPlacementControllerForItemReference:(id)arg1;
- (id)itemsLayout;
- (double)lastBaseline;
- (struct CGPoint { double x1; double x2; })lastScrollDirection;
- (void)lastScrollDirectionDidChange;
- (id)lastVisibleAreaAnchor;
- (id)layoutForItemChanges;
- (id)layoutQueue;
- (void)layoutQueueDidChange;
- (id)layoutSnapshotDataSource;
- (id)leafSublayoutForSpriteIndex:(unsigned int)arg1;
- (id)localHiddenSpriteIndexes;
- (void)localHiddenSpriteIndexesDidChange;
- (unsigned int)localNumberOfSprites;
- (void)markLastVisibleAreaAnchoringInformationForInvalidation;
- (id)mediaProvider;
- (void)mediaProviderDidChange;
- (struct CGSize { double x1; double x2; })minPlayableSizeForSpriteAtIndex:(unsigned int)arg1;
- (void)modifySpritesAtIndexes:(id)arg1 fullState:(id /* block */)arg2;
- (void)modifySpritesAtIndexes:(id)arg1 state:(id /* block */)arg2;
- (void)modifySpritesInRange:(struct _PXGSpriteIndexRange { unsigned int x1; unsigned int x2; })arg1 fullState:(id /* block */)arg2;
- (void)modifySpritesInRange:(struct _PXGSpriteIndexRange { unsigned int x1; unsigned int x2; })arg1 state:(id /* block */)arg2;
- (void)modifySpritesInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 state:(id /* block */)arg2;
- (void)moveSpritesInRange:(struct _PXGSpriteIndexRange { unsigned int x1; unsigned int x2; })arg1 toRange:(struct _PXGSpriteIndexRange { unsigned int x1; unsigned int x2; })arg2;
- (id)navigationObjectReferenceForLocation:(struct CGPoint { double x1; double x2; })arg1;
- (bool)needsUpdate;
- (id)nextViewHostingLayout;
- (long long)numberOfDescendantAnchors;
- (unsigned int)numberOfSprites;
- (long long)numberOfSublayouts;
- (id)objectReferenceForSpriteIndex:(unsigned int)arg1;
- (struct { struct CGAffineTransform { double x_1_1_1; double x_1_1_2; double x_1_1_3; double x_1_1_4; double x_1_1_5; double x_1_1_6; } x1; double x2; })orientedContentTransform;
- (id)parentDescription;
- (id)pendingAnimations;
- (id)pendingFences;
- (void)performChangesWithLocalUpdate:(id /* block */)arg1;
- (void)performRepeatedSublayoutsUpdate:(id /* block */)arg1;
- (void)performSpriteStylingUpdate:(id /* block */)arg1;
- (struct CGPoint { double x1; double x2; })pointForPointReference:(id)arg1;
- (id)pointReferences;
- (id)preferredFocusLayouts;
- (id)preferredFocusSpriteIndexes;
- (id)px_assetsSectionLayout;
- (void)px_modifyAssetsSectionLayoutGeometry:(id /* block */)arg1;
- (id)recursiveDescription;
- (double)referenceDepth;
- (void)referenceDepthDidChange;
- (unsigned short)referenceOptions;
- (void)referenceOptionsDidChange;
- (struct CGSize { double x1; double x2; })referenceSize;
- (void)referenceSizeDidChange;
- (void)removeAllAnimations;
- (void)removeAllFences;
- (void)removeAllTransitions;
- (void)removeAnchor:(id)arg1;
- (void)removeAnimation:(id)arg1;
- (void)removeFromSuperlayout;
- (void)removeInteraction:(id)arg1;
- (void)removePointReference:(id)arg1;
- (void)removeSpritesAtIndexes:(id)arg1;
- (void)removeSpritesInRange:(struct _PXGSpriteIndexRange { unsigned int x1; unsigned int x2; })arg1;
- (void)removeSublayoutAtIndex:(long long)arg1;
- (void)removeSublayoutsAtIndexes:(id)arg1;
- (void)removeSublayoutsInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)rootLayout;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })safeAreaInsets;
- (void)safeAreaInsetsDidChange;
- (id)scrollDelegate;
- (long long)scrollSpeedRegime;
- (void)scrollSpeedRegimeDidChange;
- (long long)scrollableAxis;
- (void)setAlpha:(double)arg1;
- (void)setAppearState:(unsigned long long)arg1;
- (void)setAxNextResponder:(id)arg1;
- (void)setCameraConfiguration:(struct PXGCameraConfiguration { struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x_1_1_1[4]; } x1; struct { void*x_2_1_1[4]; } x2; })arg1;
- (void)setClippingRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setContentSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setContentSource:(id)arg1;
- (void)setDetailedPlacementOverride:(id)arg1 forItemReference:(id)arg2;
- (void)setDisplayScale:(double)arg1;
- (void)setEntityManager:(id)arg1;
- (void)setEstimatedContentSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setFloating:(bool)arg1;
- (void)setFloatingOffset:(double)arg1;
- (void)setFocusDelegate:(id)arg1;
- (void)setHiddenSpriteIndexes:(id)arg1;
- (void)setInteractions:(id)arg1;
- (void)setInternalCurrentDataSourceChange:(id)arg1;
- (void)setLastBaseline:(double)arg1;
- (void)setLastScrollDirection:(struct CGPoint { double x1; double x2; })arg1;
- (void)setLastVisibleAreaAnchor:(id)arg1;
- (void)setLayoutQueue:(id)arg1;
- (void)setLocalHiddenSpriteIndexes:(id)arg1;
- (void)setMediaProvider:(id)arg1;
- (void)setNeedsFocusUpdate;
- (void)setNeedsUpdate;
- (void)setNeedsUpdateOfScrollableAxis;
- (void)setNextViewHostingLayout:(id)arg1;
- (void)setReferenceDepth:(double)arg1;
- (void)setReferenceOptions:(unsigned short)arg1;
- (void)setReferenceSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setSafeAreaInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setScrollDelegate:(id)arg1;
- (void)setScrollSpeedRegime:(long long)arg1;
- (void)setSuperlayout:(id)arg1;
- (void)setUpdateDelegate:(id)arg1;
- (void)setUserData:(id)arg1;
- (void)setUserInterfaceDirection:(unsigned long long)arg1;
- (void)setViewDelegate:(id)arg1;
- (void)setViewEnvironment:(id)arg1;
- (void)setVisibleRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setVisibleRectDelegate:(id)arg1;
- (bool)shouldApplyItemChangeDetailsToSublayout:(id)arg1;
- (bool)shouldApplySpriteTransformToSublayouts;
- (bool)shouldDecorateUndefinedMediaKind;
- (bool)shouldFaultInContentAtAnchoredContentEdges;
- (bool)shouldInvalidateDecorationForModifiedSprites;
- (bool)shouldUpdateDecorationMediaTargetSizes;
- (id)spriteDataStore;
- (unsigned int)spriteIndexForObjectReference:(id)arg1;
- (unsigned int)spriteIndexForObjectReference:(id)arg1 options:(unsigned long long)arg2 updatedObjectReference:(out id*)arg3;
- (unsigned int)spriteIndexForSpriteReference:(id)arg1;
- (unsigned int)spriteIndexForSpriteReference:(id)arg1 options:(unsigned long long)arg2;
- (struct _PXGSpriteIndexRange { unsigned int x1; unsigned int x2; })spriteIndexRangeCoveringRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)spriteMetadataStore;
- (id)spriteReferenceForObjectReference:(id)arg1;
- (id)spriteReferenceForSpriteIndex:(unsigned int)arg1;
- (id)spriteReferenceForSpriteIndex:(unsigned int)arg1 objectReference:(id)arg2;
- (id)spriteReferenceForSpriteReference:(id)arg1;
- (struct { bool x1; bool x2; bool x3; bool x4; })stringSourceRespondsTo;
- (struct { float x1; struct { union { struct { float x_1_3_1; float x_1_3_2; float x_1_3_3; float x_1_3_4; } x_1_2_1; float x_1_2_2[4]; } x_2_1_1; } x2; float x3; float x4; float x5; float x6; unsigned short x7; unsigned char x8; float x9; struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x_10_1_1[4]; } x10; })styleForSpriteAtIndex:(unsigned int)arg1;
- (void)sublayout:(id)arg1 didAddAnchor:(id)arg2;
- (void)sublayout:(id)arg1 didApplySpriteChangeDetails:(id)arg2 fromDescendentSublayout:(id)arg3;
- (void)sublayout:(id)arg1 didRemoveAnchor:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })sublayout:(id)arg1 visibleRectForRequestedVisibleRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (id)sublayoutAtIndex:(long long)arg1 loadIfNeeded:(bool)arg2;
- (id)sublayoutDataStore;
- (void)sublayoutDidChangeContentSize:(id)arg1;
- (void)sublayoutDidChangeLastBaseline:(id)arg1;
- (id)sublayoutForSpriteIndex:(unsigned int)arg1;
- (long long)sublayoutIndexForObjectReference:(id)arg1 options:(unsigned long long)arg2 updatedObjectReference:(out id*)arg3;
- (long long)sublayoutIndexForSpriteIndex:(unsigned int)arg1;
- (long long)sublayoutIndexForSpriteReference:(id)arg1 options:(unsigned long long)arg2;
- (void)sublayoutNeedsUpdate:(id)arg1;
- (id)superlayout;
- (void)superlayoutDidChange;
- (id)transitions;
- (void)update;
- (void)updateAsRootIfNeeded;
- (long long)updateCount;
- (id)updateDelegate;
- (void)updateIfNeeded;
- (void)updateStylingForSpritesAtIndexes:(id)arg1;
- (id)userData;
- (unsigned long long)userInterfaceDirection;
- (void)userInterfaceDirectionDidChange;
- (long long)version;
- (id)viewDelegate;
- (id)viewEnvironment;
- (void)viewEnvironmentDidChange;
- (id)viewForSpriteIndex:(unsigned int)arg1;
- (unsigned int)viewHostingSpriteIndex;
- (unsigned int)viewHostingSpriteIndexForSublayout:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })visibleRect;
- (id)visibleRectDelegate;
- (void)visibleRectDidChange;
- (void)willFaultOutSublayout:(id)arg1 atIndex:(long long)arg2;
- (void)willRemoveSublayout:(id)arg1 atIndex:(long long)arg2 flags:(unsigned long long)arg3;
- (void)willUpdate;

@end
