
@interface PXGItemsLayout : PXGLayout {
    long long  __numberOfItems;
    <PXGLayoutContentSource> * _accessoryItemContentSource;
    PXGLayout * _accessoryItemsContainerLayout;
    struct { 
        unsigned long long needsUpdate; 
        unsigned long long updated; 
        bool isPerformingUpdate; 
        bool willPerformUpdate; 
    }  _accessoryItemsUpdateFlags;
    long long  _applyingItemChangesCount;
    long long * _currentStylableItems;
    <PXGItemsLayoutDelegate> * _delegate;
    unsigned long long  _delegateRespondsTo;
    id  _dropTargetObjectReference;
    unsigned long long  _dropTargetStyle;
    <PXGItemsGeometry> * _itemsGeometry;
    bool  _lazy;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _loadedItems;
    struct { 
        unsigned long long needsUpdate; 
        unsigned long long updated; 
        bool isPerformingUpdate; 
        bool willPerformUpdate; 
    }  _loadedItemsUpdateFlags;
    long long  _numberOfAccessoryItems;
    bool * _pendingAnimations;
    long long * _pendingStylableItems;
    double * _stylablePaddings;
    long long * _styleableAnimations;
    struct { 
        unsigned long long needsUpdate; 
        unsigned long long updated; 
        bool isPerformingUpdate; 
        bool willPerformUpdate; 
    }  _updateFlags;
}

@property (nonatomic) long long _numberOfItems;
@property (nonatomic) <PXGLayoutContentSource> *accessoryItemContentSource;
@property (nonatomic) <PXGItemsLayoutDelegate> *delegate;
@property (nonatomic, retain) id dropTargetObjectReference;
@property (nonatomic) unsigned long long dropTargetStyle;
@property (nonatomic, readonly) <PXGItemsLayoutDelegate> *insetDelegate;
@property (nonatomic, readonly) bool isApplyingItemChanges;
@property (nonatomic, readonly) <PXGItemsGeometry> *itemsGeometry;
@property (getter=isLazy, nonatomic) bool lazy;
@property (nonatomic) struct _NSRange { unsigned long long x1; unsigned long long x2; } loadedItems;
@property (nonatomic, readonly) <PXGItemsLayoutDelegate> *marginDelegate;
@property (nonatomic) long long numberOfAccessoryItems;
@property (nonatomic) long long numberOfItems;

- (void).cxx_destruct;
- (void)_handleFocusChangeWithUserInfo:(id)arg1;
- (void)_handleSelectionChangeWithUserInfo:(id)arg1;
- (void)_invalidateAccessoryItems;
- (long long)_numberOfItems;
- (void)_updateAccessoryItems;
- (void)_updateFocusedItemIfNeeded;
- (void)_updateHoveredItemIfNeeded;
- (void)_updateLoadedItems;
- (void)_updatePressedItemIfNeeded;
- (void)_updateStylableType:(long long)arg1;
- (id)accessoryItemContentSource;
- (long long)accessoryItemForSpriteIndex:(unsigned int)arg1;
- (void)accessoryItemsDidChange;
- (void)axGroup:(id)arg1 didChange:(unsigned long long)arg2 userInfo:(id)arg3;
- (unsigned int)axSpriteIndexClosestToSpriteIndex:(unsigned int)arg1 inDirection:(unsigned long long)arg2;
- (id)axSpriteIndexes;
- (id)axSpriteIndexesInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)axVisibleSpriteIndexes;
- (void)beginApplyingItemChanges;
- (void)dealloc;
- (id)delegate;
- (bool)delegateRespondsTo:(unsigned long long)arg1;
- (id)description;
- (void)didUpdate;
- (id)dropTargetObjectReference;
- (void)dropTargetObjectReferenceDidChange;
- (unsigned long long)dropTargetStyle;
- (void)effectsDidChange;
- (void)endApplyingItemChanges;
- (void)enumerateVisibleAnchoringLayoutsUsingBlock:(id /* block */)arg1;
- (id)hitTestResultForSpriteIndex:(unsigned int)arg1;
- (id)init;
- (id)insetDelegate;
- (void)invalidateEffects;
- (void)invalidateLoadedItems;
- (void)invalidateStylableType:(long long)arg1;
- (bool)isApplyingItemChanges;
- (bool)isLazy;
- (long long)itemForObjectReference:(id)arg1;
- (long long)itemForObjectReference:(id)arg1 options:(unsigned long long)arg2;
- (long long)itemForSpriteIndex:(unsigned int)arg1;
- (id)itemsForSpriteIndexes:(id)arg1;
- (id)itemsGeometry;
- (id)itemsLayout;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })itemsToLoad;
- (id)layoutForItemChanges;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })loadedItems;
- (void)loadedItemsDidChange;
- (id)loadedItemsForItems:(id)arg1;
- (id)marginDelegate;
- (void)modifyAccessoryItemSpritesInRange:(struct _PXGSpriteIndexRange { unsigned int x1; unsigned int x2; })arg1 state:(id /* block */)arg2;
- (long long)numberOfAccessoryItems;
- (void)numberOfAccessoryItemsDidChange;
- (long long)numberOfItems;
- (id)objectReferenceForItem:(long long)arg1;
- (id)objectReferenceForSpriteIndex:(unsigned int)arg1;
- (void)setAccessoryItemContentSource:(id)arg1;
- (void)setAnimationParameters:(struct { long long x1; double x2; })arg1 forStylableType:(long long)arg2;
- (void)setDelegate:(id)arg1;
- (void)setDropTargetObjectReference:(id)arg1;
- (void)setDropTargetStyle:(unsigned long long)arg1;
- (void)setItem:(long long)arg1 forStylableType:(long long)arg2 animated:(bool)arg3;
- (void)setLazy:(bool)arg1;
- (void)setLoadedItems:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setNumberOfAccessoryItems:(long long)arg1;
- (void)setNumberOfItems:(long long)arg1;
- (void)setNumberOfItems:(long long)arg1 withChangeDetails:(id)arg2;
- (void)setNumberOfItems:(long long)arg1 withChangeDetails:(id)arg2 changeMediaVersionHandler:(id /* block */)arg3;
- (void)set_numberOfItems:(long long)arg1;
- (bool)shouldInvalidateDecorationForModifiedSprites;
- (struct CGSize { double x1; double x2; })sizeForItem:(long long)arg1;
- (unsigned int)spriteIndexForAccessoryItem:(long long)arg1;
- (unsigned int)spriteIndexForItem:(long long)arg1;
- (bool)spriteIndexIsAccessoryItem:(unsigned int)arg1;
- (bool)spriteIndexIsItem:(unsigned int)arg1;
- (id)spriteIndexesForItems:(id)arg1;
- (void)update;
- (void)updateAccessoryItemsIfNeeded;
- (void)updateLoadedItemsIfNeeded;
- (void)willUpdate;

@end
