
@interface PXOneUpPresentation : PXObservable <UIContextMenuInteractionDelegate> {
    <PXOneUpPresentationImplementationDelegate> * __implementationDelegate;
    UIContextMenuInteraction * _contextMenuInteraction;
    NSMapTable * _contextMenuStateByConfiguration;
    UIViewController * _currentPreviewViewController;
    <PXOneUpPresentationDelegate> * _delegate;
    struct { 
        bool respondsToPhotosDetailsContext; 
        bool respondsToPrivacyController; 
        bool respondsToInitialAssetReference; 
        bool respondsToCanStartPreviewingForContextMenuInteraction; 
        bool respondsToAllowsActionsForContextMenuInteraction; 
        bool respondsToAllowsMultiSelectMenuForInteraction; 
        bool respondsToAllowsPreviewCommittingForContextMenuInteraction; 
        bool respondsToCommitPreviewForContextMenuInteraction; 
        bool respondsToWillStartPreviewingForContextMenuInteraction; 
        bool respondsToWillEndPreviewingForContextMenuInteraction; 
        bool respondsToAccessoriesForContextMenuInteraction; 
        bool respondsToSecondaryIdentifiersForConfiguration; 
        bool respondsToStyleForContextMenuInteraction; 
        bool respondsToCurrentImageForAssetReference; 
        bool respondsToRegionOfInterestForAssetReference; 
        bool respondsToScrollAssetReferenceToVisible; 
        bool respondsToSetHiddenAssetReferences; 
        bool respondsToShouldAutoPlay; 
        bool respondsToShouldShowSelectionContextMenu; 
        bool respondsToPreventShowInAllPhotos; 
        bool respondsToActionManager; 
        bool respondsToActionManagerForPreviewing; 
        bool respondsToActionContext; 
        bool respondsToImportStatusManager; 
        bool respondsToOrigin; 
        bool respondsToScrollView; 
        bool respondsToSearchContext; 
        bool respondsToMatchedQueryStrings; 
        bool respondsToAssetUUIDsAllowedToHighlight; 
        bool respondsToMatchedSceneIdentifiers; 
        bool respondsToMatchedAudioIdentifiers; 
        bool respondsToMatchedHumanActionIdentifiers; 
        bool respondsToMatchedPersonLocalIdentifiers; 
    }  _delegateFlags;
    bool  _enabled;
    <PXOneUpPresentationImplementationDelegate> * _implementationDelegate;
    struct { 
        bool respondsToPresentingViewControllerViewWillAppear; 
        bool respondsToPresentingViewControllerViewIsAppearing; 
        bool respondsToPresentingViewControllerViewDidAppear; 
        bool respondsToPresentingViewControllerViewWillDisappear; 
        bool respondsToPresentingViewControllerViewDidDisappear; 
        bool respondsToCanStart; 
        bool respondsToLastViewedAssetReference; 
        bool respondsToCanStop; 
        bool respondsToInvalidatePresentingGeometry; 
        bool respondsToHandlePresentingPinchGestureRecognizer; 
    }  _implementationDelegateFlags;
    UITargetedPreview * _interactionTargetedPreview;
    UIViewController * _originalPresentingViewController;
    UIViewController * _presentingViewController;
    long long  _state;
}

@property (setter=_setImplementationDelegate:, nonatomic) <PXOneUpPresentationImplementationDelegate> *_implementationDelegate;
@property (nonatomic, readonly) long long actionContext;
@property (nonatomic, readonly) PXAssetActionManager *actionManager;
@property (nonatomic, readonly) PXAssetActionManager *actionManagerForPreviewing;
@property (nonatomic, readonly) bool canStart;
@property (nonatomic, readonly) bool canStop;
@property (nonatomic, readonly) UIContextMenuInteraction *contextMenuInteraction;
@property (nonatomic, retain) NSMapTable *contextMenuStateByConfiguration;
@property (nonatomic, retain) UIViewController *currentPreviewViewController;
@property (nonatomic, readonly) PXAssetsDataSourceManager *dataSourceManager;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PXOneUpPresentationDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (getter=isEnabled, nonatomic) bool enabled;
@property (readonly) unsigned long long hash;
@property (nonatomic) <PXOneUpPresentationImplementationDelegate> *implementationDelegate;
@property (nonatomic, readonly) <PXAssetImportStatusManager> *importStatusManager;
@property (nonatomic, readonly) PXAssetReference *initialAssetReference;
@property (nonatomic, retain) UITargetedPreview *interactionTargetedPreview;
@property (nonatomic, readonly) bool isContextMenuInteractionActive;
@property (nonatomic, readonly) PXAssetReference *lastViewedAssetReference;
@property (nonatomic, readonly) PXUIMediaProvider *mediaProvider;
@property (nonatomic, readonly) long long origin;
@property (nonatomic) UIViewController *originalPresentingViewController;
@property (nonatomic, readonly) PXPhotosDetailsContext *photosDetailsContext;
@property (nonatomic, readonly) UIViewController *presentingViewController;
@property (nonatomic, readonly) bool preventShowInAllPhotosAction;
@property (nonatomic, readonly) PXContentPrivacyController *privacyController;
@property (nonatomic, readonly) UIScrollView *scrollView;
@property (nonatomic, readonly) PXSearchQueryMatchInfo *searchQueryMatchInfo;
@property (nonatomic, readonly) bool shouldAutoPlay;
@property (nonatomic, readonly) long long state;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool wantsShowInLibraryButton;

// Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore

+ (id)_sharedDefaultImplementationDelegate;
+ (id)navigationControllerWithRootViewController:(id)arg1;
+ (void)viewController:(id)arg1 willPresentOneUpInViewController:(id)arg2;

- (void).cxx_destruct;
- (id)_contextMenuInteraction:(id)arg1 accessoriesForMenuWithConfiguration:(id)arg2;
- (id)_contextMenuInteraction:(id)arg1 styleForMenuWithConfiguration:(id)arg2;
- (id)_implementationDelegate;
- (void)_setImplementationDelegate:(id)arg1;
- (void)_updateImplementationDelegate;
- (long long)actionContext;
- (id)actionManager;
- (id)actionManagerForPreviewing;
- (bool)canStart;
- (bool)canStartAnimated:(bool)arg1;
- (bool)canStop;
- (void)commitPreviewViewController:(id)arg1;
- (id)contextMenuInteraction;
- (id)contextMenuInteraction:(id)arg1 configuration:(id)arg2 dismissalPreviewForItemWithIdentifier:(id)arg3;
- (id)contextMenuInteraction:(id)arg1 configuration:(id)arg2 highlightPreviewForItemWithIdentifier:(id)arg3;
- (id)contextMenuInteraction:(id)arg1 configurationForMenuAtLocation:(struct CGPoint { double x1; double x2; })arg2;
- (void)contextMenuInteraction:(id)arg1 willEndForConfiguration:(id)arg2 animator:(id)arg3;
- (void)contextMenuInteraction:(id)arg1 willPerformPreviewActionForMenuWithConfiguration:(id)arg2 animator:(id)arg3;
- (id)contextMenuStateByConfiguration;
- (id)currentImageForAssetReference:(id)arg1;
- (id)currentPreviewViewController;
- (id)dataSourceManager;
- (id)delegate;
- (void)didDismissPreviewViewController:(id)arg1 committing:(bool)arg2;
- (bool)handlePresentingPinchGestureRecognizer:(id)arg1;
- (id)implementationDelegate;
- (id)importStatusManager;
- (id)init;
- (id)initWithPresentingViewController:(id)arg1;
- (id)initialAssetReference;
- (id)interactionTargetedPreview;
- (void)invalidatePresentingGeometry;
- (bool)isContextMenuInteractionActive;
- (bool)isEnabled;
- (id)lastViewedAssetReference;
- (id)mediaProvider;
- (long long)origin;
- (id)originalPresentingViewController;
- (id)photosDetailsContext;
- (id)presentingViewController;
- (void)presentingViewControllerViewDidAppear:(bool)arg1;
- (void)presentingViewControllerViewDidDisappear:(bool)arg1;
- (void)presentingViewControllerViewIsAppearing:(bool)arg1;
- (void)presentingViewControllerViewWillAppear:(bool)arg1;
- (void)presentingViewControllerViewWillDisappear:(bool)arg1;
- (bool)preventShowInAllPhotosAction;
- (void)preventTargetedContextMenuDismissalAnimation;
- (id)previewViewControllerAllowingActions:(bool)arg1;
- (id)privacyController;
- (id)regionOfInterestForAssetReference:(id)arg1;
- (void)scrollAssetReferenceToVisible:(id)arg1;
- (id)scrollView;
- (id)searchQueryMatchInfo;
- (void)setContextMenuStateByConfiguration:(id)arg1;
- (void)setCurrentPreviewViewController:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEnabled:(bool)arg1;
- (void)setHiddenAssetReferences:(id)arg1;
- (void)setImplementationDelegate:(id)arg1;
- (void)setInteractionTargetedPreview:(id)arg1;
- (void)setOriginalPresentingViewController:(id)arg1;
- (void)setState:(long long)arg1;
- (bool)shouldAutoPlay;
- (bool)startWithConfigurationHandler:(id /* block */)arg1;
- (long long)state;
- (void)stopAnimated:(bool)arg1;
- (void)waitUntilPresentationCanStartAnimated:(bool)arg1 completionHandler:(id /* block */)arg2;
- (bool)wantsShowInLibraryButton;

// Image: /System/Library/PrivateFrameworks/PhotosUIPrivate.framework/PhotosUIPrivate

+ (id)defaultImplementationDelegate;
+ (id)implementationDelegateNavigationControllerWithRootViewController:(id)arg1;

@end
