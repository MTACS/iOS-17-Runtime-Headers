
@interface PXZoomablePhotosLayout : PXGSplitLayout <PXAssetsDataSourceManagerObserver, PXChangeObserver, PXCuratedLibraryBodyLayout, PXGDisplayAssetSource, PXGItemsLayoutDelegate, PXPhotosSectionedLayoutBody, PXZoomableInlineHeadersLayoutGeometrySource> {
    PXAssetReference * __anchorAssetReference;
    id /* block */  _addContentHandler;
    PXGAnchor * _anchor;
    PXPhotosGridAssetDecorationSource * _assetDecorationSource;
    unsigned int  _backgroundMediaVersion;
    long long  _bodyLayoutAXGroupRole;
    PXGBurstStackEffect * _burstStackEffect;
    <PXDisplayAssetFetchResult> * _cachedClampedFetchResult;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _cachedClampedItemRange;
    PXAssetsDataSource * _currentDataSource;
    PXAssetsDataSourceManager * _dataSourceManager;
    struct _PXGSpriteIndexRange { 
        unsigned int location; 
        unsigned int length; 
    }  _debugVisualizationSpriteIndexRange;
    NSArray * _debugVisualizationSpriteTitles;
    PXGItemsLayout<PXZoomablePhotosContentLayout> * _decadesItemLayout;
    PXNumberAnimator * _decorationAlphaAnimator;
    PXGEdgeStretchEffect * _edgeStretchEffect;
    id /* block */  _effectProvider;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _effectiveOverlayInsets;
    bool  _enableAddContentAccessoryItem;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _inlineHeaderOverlayInsets;
    PXZoomableInlineHeadersLayout * _inlineHeadersLayout;
    bool  _isPerformingUpdate;
    bool  _isPreheatingByColumnIndex;
    PXGItemsLayout<PXZoomablePhotosContentLayout> * _itemLayoutByHeaderLevel;
    NSArray * _itemLayouts;
    NSMutableSet * _itemLayoutsAllowedToLoad;
    NSDateInterval * _lastReturnedDateInterval;
    long long  _lastReturnedDateIntervalDataSourceIdentifier;
    NSArray * _lastReturnedLocationNames;
    long long  _lastReturnedLocationNamesDataSourceIdentifier;
    NSArray * _layers;
    struct _PXGSpriteIndexRange { 
        unsigned int location; 
        unsigned int length; 
    }  _lightBackgroundSpriteIndexRange;
    struct CGPoint { 
        double x; 
        double y; 
    }  _normalizedScaleCenterInAnchorSprite;
    PXGOneColumnLayout * _oneColLayout;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _overlayInsets;
    bool  _performedInitialVisualShift;
    unsigned int  _pinchEffectCaptureSpriteIndex;
    struct { 
        unsigned long long needsUpdate; 
        unsigned long long updated; 
        bool isPerformingUpdate; 
        bool willPerformUpdate; 
    }  _postUpdateFlags;
    struct { 
        unsigned long long needsUpdate; 
        unsigned long long updated; 
        bool isPerformingUpdate; 
        bool willPerformUpdate; 
    }  _preUpdateFlags;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _prefetchedForLoadedItems;
    PXMediaProvider * _preheatMediaProvider;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _preheatedThumbsForItemsByColumnIndex;
    PXAssetsDataSource * _presentedDataSource;
    bool  _preventFillingTopAreaInsets;
    NSCache * _providedEffectByAsset;
    struct CGPoint { 
        double x; 
        double y; 
    }  _scaleCenterTargetInViewport;
    bool  _scrolledWhileAnimatingZoom;
    bool  _shouldAnimateTowardsAnchor;
    PXZoomablePhotosLayoutSpec * _spec;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _surroundingScrollableContent;
    PXZoomablePhotosViewModel * _viewModel;
    NSMapTable * _visualAnchorAssetReferenceItemByLayout;
    bool  _visuallyStableAnchorAllowedCloseToTop;
    long long  _visuallyStableAnchorItem;
    long long  _visuallyStableAnchorItemDesiredColumn;
    bool  _wantsOverBackgroundFloatingHeaderAppearance;
    bool  _wasTracking;
    PXGZoomLayout * _zoomLayout;
}

@property (nonatomic, copy) id /* block */ addContentHandler;
@property (nonatomic, readonly) PXGAnchor *anchor;
@property (nonatomic, retain) PXAssetReference *anchorAssetReference;
@property (nonatomic, readonly) PXPhotosGridAssetDecorationSource *assetDecorationSource;
@property (nonatomic) long long bodyLayoutAXGroupRole;
@property (nonatomic, readonly) PXGBurstStackEffect *burstStackEffect;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) id /* block */ effectProvider;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } effectiveOverlayInsets;
@property (nonatomic) bool enableAddContentAccessoryItem;
@property (readonly) unsigned long long hash;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } inlineHeaderOverlayInsets;
@property (nonatomic, readonly) struct CGPoint { double x1; double x2; } normalizedScaleCenterInAnchorSprite;
@property (nonatomic, readonly) PXGOneColumnLayout *oneColLayout;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } overlayInsets;
@property (nonatomic, readonly) PXAssetsDataSource *presentedDataSource;
@property (nonatomic) bool preventFillingTopAreaInsets;
@property (nonatomic, readonly) PXGItemsLayout<PXZoomablePhotosContentLayout> *primaryItemsLayout;
@property (nonatomic, readonly) struct CGPoint { double x1; double x2; } scaleCenterTargetInViewport;
@property (nonatomic, readonly) bool shouldAnimateTowardsAnchor;
@property (nonatomic, readonly) PXZoomablePhotosLayoutSpec *spec;
@property (readonly) Class superclass;
@property (nonatomic, readonly) PXZoomablePhotosViewModel *viewModel;
@property (nonatomic, readonly) NSMapTable *visualAnchorAssetReferenceItemByLayout;
@property (nonatomic) bool wantsOverBackgroundFloatingHeaderAppearance;
@property (nonatomic, readonly) bool wasTracking;

+ (void)getBestAnchorColumns:(long long*)arg1 forItemLayouts:(id)arg2 startingAtBaseLayout:(id)arg3 anchorItem:(long long)arg4 normalizedScaleCenterInAnchor:(struct CGPoint { double x1; double x2; })arg5 biasTowardsCenter:(bool)arg6;
+ (id)visualizeBestAnchorColumnsForLayouts:(id)arg1 imageWidth:(double)arg2;

- (void).cxx_destruct;
- (void)_callAddContentActionHandler;
- (void)_configureLayout:(id)arg1;
- (id)_createLayoutWithNumberOfColumns:(long long)arg1;
- (id)_debugColors;
- (id)_displayAssetForItem:(long long)arg1;
- (id)_displayFaceForItem:(long long)arg1;
- (void)_ensureZoomingAnchor;
- (long long)_estimatedItemsPerScreenForLayout:(id)arg1;
- (double)_interItemSpacingForLayout:(id)arg1;
- (bool)_isAllowedToShiftItem:(long long)arg1 inLayout:(id)arg2;
- (double)_itemCaptionSpacingForLayout:(id)arg1;
- (bool)_layoutAllowsCaptionsInSquare:(id)arg1;
- (bool)_layoutHasIndividualItems:(id)arg1;
- (bool)_layoutIsAspectFit:(id)arg1;
- (bool)_layoutIsQuiteTransparent:(id)arg1;
- (bool)_layoutWantsSingleDateTitle;
- (void)_performAnchorAlignmentVisualShiftWithBaseLayout:(id)arg1;
- (bool)_performVisualShiftWithLayout:(id)arg1 movingItem:(long long)arg2 toColumn:(long long)arg3;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_rangeOfItemsForContentInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGSize { double x1; double x2; })_scaleForLayout:(id)arg1;
- (struct { struct CGAffineTransform { double x_1_1_1; double x_1_1_2; double x_1_1_3; double x_1_1_4; double x_1_1_5; double x_1_1_6; } x1; double x2; })_spriteTransformForLayout:(id)arg1;
- (void)_updateBackgroundSprites;
- (void)_updateDataSource;
- (void)_updateDebugVisualizationSprites;
- (void)_updateDecorationSource;
- (void)_updateDecorationVisibility;
- (void)_updateEffectProvider;
- (void)_updateEffectiveOverlayInsets;
- (void)_updateFloatingHeaderStyle;
- (void)_updateLayers;
- (void)_updatePinchEffect;
- (void)_updatePrefetching;
- (void)_updateSurroundingScrollableContent;
- (void)_updateVisualShifting;
- (void)_updateZoom;
- (void)_updateZoomTransforms;
- (bool)_wantsDecorationForNumberOfColumns:(long long)arg1;
- (bool)_wantsMiniDecorationForNumberOfColumns:(long long)arg1;
- (id /* block */)addContentHandler;
- (id)anchor;
- (id)anchorAssetReference;
- (void)appearStateDidChange;
- (id)assetDecorationSource;
- (id)attributedStringForSpriteAtIndex:(unsigned int)arg1 inLayout:(id)arg2;
- (void)axGroup:(id)arg1 didChange:(unsigned long long)arg2 userInfo:(id)arg3;
- (id)axSpriteIndexes;
- (unsigned long long)behaviorForCaptureSpriteAtIndex:(unsigned int)arg1 inLayout:(id)arg2;
- (long long)bodyLayoutAXGroupRole;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })boundsForLevel:(unsigned long long)arg1;
- (id)burstStackEffect;
- (id)colorAtIndex:(unsigned int)arg1 inLayout:(id)arg2;
- (void)containingScrollViewDidScroll:(struct CGPoint { double x1; double x2; })arg1;
- (unsigned long long)contentChangeTrend;
- (id)customPixelBufferSourcesProviderForDisplayAssetsInLayout:(id)arg1;
- (id /* block */)dateIntervalFutureForContentInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 type:(unsigned long long)arg2;
- (id)debugQuickLookObject;
- (unsigned long long)desiredPlaceholderStyleInLayout:(id)arg1;
- (void)didUpdate;
- (id)displayAssetFetchResultForSpritesInRange:(struct _PXGSpriteIndexRange { unsigned int x1; unsigned int x2; })arg1 inLayout:(id)arg2;
- (id)displayAssetRequestObserverForSpritesInRange:(struct _PXGSpriteIndexRange { unsigned int x1; unsigned int x2; })arg1 inLayout:(id)arg2;
- (void)displayScaleDidChange;
- (id /* block */)effectProvider;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })effectiveOverlayInsets;
- (bool)enableAddContentAccessoryItem;
- (void)entityManagerDidChange;
- (void)enumerateVisibleAnchoringLayoutsUsingBlock:(id /* block */)arg1;
- (void)enumerateVisibleAnchoringSpriteIndexesUsingBlock:(id /* block */)arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })floatingHeadersMarginsForLevel:(unsigned long long)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameForItemAtIndexPath:(struct PXSimpleIndexPath { long long x1; long long x2; long long x3; long long x4; })arg1 level:(unsigned long long)arg2;
- (id)hitTestResultForSpriteIndex:(unsigned int)arg1;
- (id)init;
- (id)initWithViewModel:(id)arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })inlineHeaderOverlayInsets;
- (void)invalidateItemsLayout;
- (bool)isAnimating;
- (id)itemsGeometry;
- (double)itemsLayout:(id)arg1 aspectRatioForItem:(long long)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })itemsLayout:(id)arg1 bestCropRectForItem:(long long)arg2 withAspectRatio:(double)arg3;
- (struct { union { struct { float x_1_2_1; float x_1_2_2; float x_1_2_3; float x_1_2_4; } x_1_1_1; float x_1_1_2[4]; } x1; })itemsLayout:(id)arg1 cornerRadiusForItem:(long long)arg2;
- (unsigned int)itemsLayout:(id)arg1 effectIdForItem:(long long)arg2;
- (struct CGSize { double x1; double x2; })itemsLayout:(id)arg1 insetForItem:(long long)arg2;
- (long long)itemsLayout:(id)arg1 itemForObjectReference:(id)arg2 options:(unsigned long long)arg3;
- (id)itemsLayout:(id)arg1 objectReferenceForItem:(long long)arg2;
- (void)itemsLayout:(id)arg1 updateTagsInSpriteInfos:(struct { unsigned char x1; unsigned char x2; float x3; long long x4; unsigned short x5; unsigned char x6; }*)arg2 forItemsInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3;
- (id)layoutSnapshotDataSource;
- (id /* block */)locationNamesFutureForContentInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGSize { double x1; double x2; })minSpriteSizeForPresentationStyle:(unsigned long long)arg1;
- (struct CGPoint { double x1; double x2; })normalizedScaleCenterInAnchorSprite;
- (id)objectReferenceForSpriteIndex:(unsigned int)arg1;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void*)arg3;
- (id)oneColLayout;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })overlayInsets;
- (id)presentedDataSource;
- (id)presentedItemsGeometryForDataSource:(id)arg1;
- (bool)preventFillingTopAreaInsets;
- (id)primaryItemsLayout;
- (struct CGPoint { double x1; double x2; })scaleCenterTargetInViewport;
- (void)scrollSpeedRegimeDidChange;
- (void)setAddContentHandler:(id /* block */)arg1;
- (void)setAnchorAssetReference:(id)arg1;
- (void)setBodyLayoutAXGroupRole:(long long)arg1;
- (void)setEffectProvider:(id /* block */)arg1;
- (void)setEffectiveOverlayInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setEnableAddContentAccessoryItem:(bool)arg1;
- (void)setInlineHeaderOverlayInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setOverlayInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setPreventFillingTopAreaInsets:(bool)arg1;
- (void)setSpec:(id)arg1;
- (void)setWantsOverBackgroundFloatingHeaderAppearance:(bool)arg1;
- (bool)shouldAnimateTowardsAnchor;
- (id)spec;
- (struct { struct CGAffineTransform { double x_1_1_1; double x_1_1_2; double x_1_1_3; double x_1_1_4; double x_1_1_5; double x_1_1_6; } x1; double x2; })spriteTransformForLevel:(unsigned long long)arg1;
- (id)stringAtIndex:(unsigned int)arg1 inLayout:(id)arg2;
- (id)stringAttributesAtIndex:(unsigned int)arg1 inLayout:(id)arg2;
- (long long)sublayoutIndexForObjectReference:(id)arg1 options:(unsigned long long)arg2 updatedObjectReference:(out id*)arg3;
- (unsigned long long)supportedDisplayAssetPresentationStylesInLayout:(id)arg1;
- (void)update;
- (bool)useLowMemoryDecodeInLayout:(id)arg1;
- (long long)verticalAlignmentForStringAtIndex:(unsigned int)arg1 inLayout:(id)arg2;
- (Class)viewClassForSpriteAtIndex:(unsigned int)arg1 inLayout:(id)arg2;
- (id)viewModel;
- (id)viewUserDataForSpriteAtIndex:(unsigned int)arg1 inLayout:(id)arg2;
- (void)visibleRectDidChange;
- (id)visualAnchorAssetReferenceItemByLayout;
- (bool)wantsOverBackgroundFloatingHeaderAppearance;
- (bool)wasTracking;
- (void)willUpdate;

@end
