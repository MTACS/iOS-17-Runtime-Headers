
@interface PXPhotosDataSource : NSObject <PXChangeObserver, PXPhotoLibraryUIChangeObserver> {
    NSMutableSet * __inaccurateAssetCollections;
    PXPhotosDataSourceSectionCache * __preparedSectionCache;
    unsigned long long  __previousCollectionsCount;
    PXPhotosDataSourceSectionCache * __sectionCache;
    bool  _allowNextChangeDeliveryOnAllRunLoopModes;
    bool  _allowSlowFetchesOnClientQueue;
    NSSet * _allowedOIDs;
    NSSet * _allowedUUIDs;
    _Atomic int  _backgroundFetchId;
    long long  _backgroundFetchOriginSection;
    bool  _backgroundFetchOriginSectionChanged;
    PXBackgroundFetchToken * _backgroundFetchToken;
    PXLIFOQueue * _backgroundLIFOQueue;
    NSObject<OS_dispatch_queue> * _backgroundQueue;
    NSPredicate * _basePredicate;
    NSNumber * _cachedIsEmpty;
    bool  _canIncludeUnsavedSyndicatedAssets;
    NSObject<OS_dispatch_queue> * _clientQueue;
    NSMutableArray * _coalescedChanges;
    PHFetchResult * _collectionListFetchResult;
    PHCollection * _containerCollection;
    long long  _curationType;
    bool  _didFinishBackgroundFetch;
    PHFetchResult * _emptyAssetsFetchResult;
    NSMutableDictionary * _facesByAssetCache;
    unsigned long long  _fetchLimit;
    NSArray * _fetchPropertySets;
    NSArray * _filterPersons;
    NSPredicate * _filterPredicate;
    bool  _hideHiddenAssets;
    NSDictionary * _hintIndexPathByAssetReferenceCache;
    bool  _ignoreSharedLibraryFilters;
    bool  _inaccurateAssetCollectionsNeedsUpdate;
    NSMutableDictionary * _infoForAssetCollection;
    bool  _interruptBackgroundFetch;
    bool  _isBackgroundFetching;
    long long  _libraryFilter;
    PXLibraryFilterState * _libraryFilterState;
    bool  _needToStartBackgroundFetch;
    long long  _nestedChanges;
    long long  _nestedCoalesceChanges;
    NSObject<OS_dispatch_queue> * _observersQueue;
    NSHashTable * _observersQueue_observers;
    bool  _observersQueue_shouldCopyChangeObserversOnWrite;
    unsigned long long  _options;
    PXPhotosDataSource * _parentDataSource;
    bool  _pauseBackgroundFetchResultsDelivery;
    NSMutableSet * _pauseLibraryChangeDeliveryTokens;
    NSMutableDictionary * _pendingPreparedResultRecordByAssetCollection;
    NSMutableDictionary * _pendingResultsByAssetCollection;
    NSObject<OS_dispatch_queue> * _pendingResultsIsolationQueue;
    PHPhotoLibrary * _photoLibrary;
    NSObject<OS_dispatch_queue> * _prefetchQueue;
    NSMutableDictionary * _preparedChangeDetailsByAssetCollection;
    NSDictionary * _preparedIndexPathByAssetReferenceCache;
    NSDictionary * _preparedResultRecordChangeDetailsByAssetCollection;
    bool  _processAndPublishScheduledOnRunloop;
    NSMutableOrderedSet * _queuedAssetCollectionsToFetch;
    PHAsset * _referenceAsset;
    NSMutableDictionary * _resultRecordByAssetCollection;
    bool  _reverseSortOrder;
    PXSharedLibraryStatusProvider * _sharedLibraryStatusProvider;
    unsigned long long  _signpostIntervalId;
    NSArray * _sortDescriptors;
    long long  _versionIdentifier;
    bool  _wantsCurationByDefault;
    NSMutableDictionary * _weightByAssetCache;
}

@property (setter=_setPreviousCollectionsCount:, nonatomic) unsigned long long _previousCollectionsCount;
@property (nonatomic) bool allowNextChangeDeliveryOnAllRunLoopModes;
@property (nonatomic) bool allowSlowFetchesOnClientQueue;
@property (nonatomic, copy) NSSet *allowedOIDs;
@property (nonatomic, copy) NSSet *allowedUUIDs;
@property (nonatomic, readonly) bool areAllSectionsConsideredAccurate;
@property (nonatomic) long long backgroundFetchOriginSection;
@property (nonatomic, readonly) NSPredicate *basePredicate;
@property (nonatomic) bool canIncludeUnsavedSyndicatedAssets;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *clientQueue;
@property (nonatomic, retain) PHFetchResult *collectionListFetchResult;
@property (nonatomic, readonly) PHAssetCollection *containerAssetCollection;
@property (nonatomic, readonly) PHCollection *containerCollection;
@property (nonatomic, readonly) bool containsMultipleAssets;
@property (nonatomic, readonly) NSObject<OS_os_log> *dataSourceLog;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) long long estimatedOtherCount;
@property (nonatomic, readonly) long long estimatedPhotosCount;
@property (nonatomic, readonly) long long estimatedVideosCount;
@property (nonatomic) unsigned long long fetchLimit;
@property (nonatomic, readonly) PXPhotosAssetsFetcher *fetcher;
@property (nonatomic, readonly) NSArray *filterPersons;
@property (nonatomic, retain) NSPredicate *filterPredicate;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool ignoreSharedLibraryFilters;
@property (nonatomic) bool isBackgroundFetching;
@property (nonatomic, readonly) bool isEmpty;
@property (nonatomic, readonly) bool isImmutable;
@property (nonatomic) long long libraryFilter;
@property (nonatomic, readonly) PXLibraryFilterState *libraryFilterState;
@property (nonatomic, readonly) unsigned long long options;
@property (nonatomic, readonly) PHPhotoLibrary *photoLibrary;
@property (nonatomic, readonly) PHAsset *referenceAsset;
@property (nonatomic) bool reverseSortOrder;
@property (nonatomic, readonly) PXSharedLibraryStatusProvider *sharedLibraryStatusProvider;
@property (nonatomic) unsigned long long signpostIntervalId;
@property (nonatomic, copy) NSArray *sortDescriptors;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsCurationToggling;
@property (nonatomic, readonly) long long versionIdentifier;
@property (nonatomic) bool wantsCurationByDefault;
@property (nonatomic, readonly) bool wantsCurationForFirstAssetCollection;

+ (id)_curationSharedBackgroundQueue;
+ (id)_sharedPrefetchQueue;
+ (id)backgroundFetchingGroup;
+ (void)waitForAllBackgroundFetchingToFinish;

- (void).cxx_destruct;
- (bool)_addResultTuple:(id)arg1 forAssetCollection:(id)arg2 preparedResultRecord:(id)arg3 toMutableResultRecord:(id)arg4;
- (bool)_allSectionsConsideredAccurate;
- (id)_allowedOIDsForAssetCollection:(id)arg1;
- (id)_allowedUUIDsForAssetCollection:(id)arg1;
- (bool)_areFiltersDisabledForAssetCollection:(id)arg1;
- (bool)_areSecondaryFetchesEnabled;
- (unsigned long long)_assetCollectionFetchStatus:(id)arg1;
- (id)_assetOidsByAssetCollectionForAssetsAtIndexPathsInSet:(id)arg1;
- (id)_assetsForAssetCollection:(id)arg1;
- (void)_bringFetchResultsUpToDateWithFetcherCacheForAssetCollection:(id)arg1;
- (unsigned long long)_cachedSectionForAssetCollection:(id)arg1;
- (void)_cancelBackgroundFetchIfNeeded;
- (void)_childDataSourceDidUpdateFetchesForAssetCollection:(id)arg1;
- (id)_closestIndexPathToIndexPath:(id)arg1;
- (void)_commonInit;
- (id)_createDataSourceWithAssetsCollections:(id)arg1;
- (id)_createResultRecordForAssetCollection:(id)arg1;
- (void)_didChange:(id)arg1;
- (void)_didFinishBackgroundFetchingForId:(long long)arg1;
- (void)_distributeChange:(id)arg1;
- (void)_endFilterPredicateChangedForCollection:(id)arg1;
- (void)_endLibraryFilterChangedSignpostForCollection:(id)arg1;
- (void)_enumerateChangeObserversWithBlock:(id /* block */)arg1;
- (id)_fetchAssetsStartingAtIndexPath:(id)arg1;
- (void)_fetchRemainingCollectionsBackgroundLoopWithId:(long long)arg1;
- (id)_fetchTupleForAssetCollection:(id)arg1 calledOnClientQueue:(bool)arg2 isLimitedInitialFetch:(bool)arg3;
- (id)_filterPredicateForAssetCollection:(id)arg1;
- (id)_finalFilterPredicateForAssetCollection:(id)arg1;
- (bool)_forceAccurateSection:(long long)arg1 andNumberOfSurroundingSectionsWithContent:(long long)arg2;
- (void)_getFetchLimit:(unsigned long long*)arg1 fetchWithReverseSortOrder:(bool*)arg2 forAssetCollection:(id)arg3 isLimitedInitialFetch:(bool)arg4;
- (id)_inaccurateAssetCollections;
- (id)_inclusionPredicateForAssetCollection:(id)arg1;
- (void)_incrementVersionIdentifier;
- (id)_indexPathForAssetWithUUID:(id)arg1 orBurstIdentifier:(id)arg2 orSyndicationIdentifier:(id)arg3 hintIndexPath:(id)arg4 hintCollections:(id)arg5;
- (void)_initResultRecordsWithOldOptions:(unsigned long long)arg1 newOptions:(unsigned long long)arg2;
- (void)_internalSetLibraryFilter:(long long)arg1;
- (void)_interruptBackgroundFetch;
- (bool)_isFiltering;
- (bool)_isResulTupleApplicable:(id)arg1 forAssetCollection:(id)arg2;
- (id)_keyAssetsForAssetCollection:(id)arg1;
- (id)_mutableResultRecordForAssetCollection:(id)arg1;
- (long long)_nextBackgroundFetchId;
- (id)_observerInterestingAssetReferences;
- (void)_observersQueue_copyChangeObserversForWriteIfNeeded;
- (void)_performManualChangesForAssetCollections:(id)arg1 changeBlock:(id /* block */)arg2;
- (void)_performManualChangesForAssetCollections:(id)arg1 collectionsToDiff:(id)arg2 changeBlock:(id /* block */)arg3;
- (void)_performManualChangesForAssetCollections:(id)arg1 collectionsToDiff:(id)arg2 collectionsToChange:(id)arg3 changeBlock:(id /* block */)arg4;
- (void)_performManualReloadWithChangeBlock:(id /* block */)arg1;
- (void)_performProcessAndPublishSelectorInDefaultRunLoopMode;
- (void)_prefetchIndexesByFetchResult:(id)arg1 onlyThumbnails:(bool)arg2;
- (void)_prepareDiffsForPendingResultsWithCompletion:(id /* block */)arg1;
- (unsigned long long)_previousCollectionsCount;
- (void)_processAndPublishPendingCollectionFetchResults;
- (void)_processAndPublishPendingCollectionFetchResultsWhenAppropriate;
- (void)_publishDidReceivePhotoLibraryChange:(id)arg1;
- (void)_publishReloadChange;
- (void)_restartBackgroundFetchWithAssetCollectionsToDiff:(id)arg1;
- (id)_resultRecordForAssetCollection:(id)arg1;
- (bool)_reverseSortOrderForAssetCollection:(id)arg1;
- (id)_sectionCache;
- (void)_setPreviousCollectionsCount:(unsigned long long)arg1;
- (void)_startFilterPredicateChangedSignpostForCollection:(id)arg1;
- (void)_startLibraryFilterChangedSignpostForCollection:(id)arg1;
- (void)_updateInaccurateAssetCollectionsIfNeeded;
- (void)_willChange;
- (bool)allowNextChangeDeliveryOnAllRunLoopModes;
- (bool)allowSlowFetchesOnClientQueue;
- (id)allowedOIDs;
- (id)allowedUUIDs;
- (id)approximateAssetsAtIndexPaths:(id)arg1;
- (bool)areAllSectionsConsideredAccurate;
- (id)assetAtIndexPath:(id)arg1;
- (id)assetAtSimpleIndexPath:(struct PXSimpleIndexPath { long long x1; long long x2; long long x3; long long x4; })arg1;
- (id)assetCollectionForSection:(long long)arg1;
- (id)assetReferenceAtIndexPath:(id)arg1;
- (id)assetReferenceForAsset:(id)arg1 containedInAssetCollectionWithType:(long long)arg2;
- (id)assetsAtIndexPaths:(id)arg1;
- (id)assetsInSection:(long long)arg1;
- (id)assetsStartingAtIndexPath:(id)arg1;
- (long long)backgroundFetchOriginSection;
- (id)basePredicate;
- (bool)canIncludeUnsavedSyndicatedAssets;
- (void)clearResultsForAssetCollection:(id)arg1;
- (void)clearResultsForAssetCollections:(id)arg1;
- (id)clientQueue;
- (id)collectionListFetchResult;
- (id)containerAssetCollection;
- (id)containerCollection;
- (bool)containsMultipleAssets;
- (id)createDataSourceWithAssetsAtIndexPaths:(id)arg1;
- (id)createDataSourceWithAssetsInSectionOfAsset:(id)arg1;
- (id)curatedAssetsForAssetCollection:(id)arg1;
- (id)curatedAssetsInSection:(long long)arg1;
- (id)dataSourceLog;
- (void)dealloc;
- (id)description;
- (void)enumerateStartingAtIndexPath:(id)arg1 reverseDirection:(bool)arg2 usingBlock:(id /* block */)arg3;
- (long long)estimatedAssetsCountWithEnrichmentState:(unsigned short)arg1;
- (long long)estimatedOtherCount;
- (long long)estimatedPhotosCount;
- (long long)estimatedVideosCount;
- (id)facesAtSimpleIndexPath:(struct PXSimpleIndexPath { long long x1; long long x2; long long x3; long long x4; })arg1;
- (unsigned long long)fetchLimit;
- (id)fetchResultWithAssetsAtIndexPaths:(id)arg1;
- (id)fetchResultWithAssetsInSections:(id)arg1;
- (id)fetchResultsByAssetCollection;
- (id)fetcher;
- (id)filterPersons;
- (id)filterPredicate;
- (id)firstAssetCollection;
- (bool)forceAccurateAllSectionsIfNeeded;
- (bool)forceAccurateAssetCollectionsIfNeeded:(id)arg1 reloadChanges:(bool)arg2;
- (bool)forceAccurateIndexPath:(id)arg1 andAssetsBeforeAndAfter:(long long)arg2;
- (bool)forceAccurateSection:(long long)arg1 andSectionsBeforeAndAfter:(long long)arg2;
- (bool)forceAccurateSectionsIfNeeded:(id)arg1;
- (bool)forceAccurateSectionsIfNeeded:(id)arg1 reloadChanges:(bool)arg2;
- (void)forceExcludeAssetsAtIndexPaths:(id)arg1;
- (void)forceExcludeAssetsAtIndexes:(id)arg1;
- (void)forceIncludeAssetsAtIndexPaths:(id)arg1;
- (void)forceIncludeAssetsAtIndexes:(id)arg1;
- (bool)hasCurationForAssetCollection:(id)arg1;
- (bool)ignoreSharedLibraryFilters;
- (id)immutableCopy;
- (long long)indexForAsset:(id)arg1 inCollection:(id)arg2 hintIndex:(long long)arg3;
- (id)indexPathForAsset:(id)arg1 hintIndexPath:(id)arg2 hintCollection:(id)arg3;
- (id)indexPathForAsset:(id)arg1 hintIndexPath:(id)arg2 hintCollections:(id)arg3;
- (id)indexPathForAsset:(id)arg1 inCollection:(id)arg2;
- (id)indexPathForAssetReference:(id)arg1;
- (id)indexPathForAssetWithUUID:(id)arg1 orBurstIdentifier:(id)arg2 hintIndexPath:(id)arg3 hintCollection:(id)arg4;
- (id)indexPathForAssetWithUUID:(id)arg1 orSyndicationIdentifier:(id)arg2 hintIndexPath:(id)arg3 hintCollection:(id)arg4;
- (id)indexPathForFirstAsset;
- (id)indexPathForLastAsset;
- (id)infoForAssetCollection:(id)arg1;
- (id)initWithPhotosDataSource:(id)arg1 options:(unsigned long long)arg2;
- (id)initWithPhotosDataSourceConfiguration:(id)arg1;
- (bool)isAssetAtIndexPathPartOfCuratedSet:(struct PXSimpleIndexPath { long long x1; long long x2; long long x3; long long x4; })arg1;
- (bool)isBackgroundFetching;
- (bool)isCuratedAssetsEmptyForAssetCollection:(id)arg1;
- (bool)isCuratedAssetsFutilelyForAssetCollection:(id)arg1;
- (bool)isEmpty;
- (bool)isImmutable;
- (long long)keyAssetIndexInSection:(long long)arg1;
- (id)keyAssetsInSection:(long long)arg1;
- (id)lastAssetCollection;
- (long long)libraryFilter;
- (id)libraryFilterState;
- (long long)numberOfItemsInSection:(long long)arg1;
- (long long)numberOfSections;
- (long long)numberOfSectionsWithEnrichmentState:(unsigned short)arg1;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void*)arg3;
- (unsigned long long)options;
- (id)pauseChangeDeliveryAndBackgroundLoadingWithTimeout:(double)arg1 identifier:(id)arg2;
- (void)pauseChangeDeliveryFor:(double)arg1 identifier:(id)arg2;
- (void)performChanges:(id /* block */)arg1;
- (id)photoLibrary;
- (void)photoLibraryDidChangeOnMainQueue:(id)arg1;
- (void)prefetchApproximateAssetsAtIndexPaths:(id)arg1;
- (void)prefetchApproximateAssetsAtIndexPaths:(id)arg1 reverseOrder:(bool)arg2;
- (void)prefetchAssetsAtIndexPaths:(id)arg1 onlyThumbnailAssets:(bool)arg2;
- (void)prefetchAssetsInSections:(id)arg1;
- (id)prepareForPhotoLibraryChange:(id)arg1;
- (id)referenceAsset;
- (void)refetchResultsForAssetCollection:(id)arg1;
- (void)registerChangeObserver:(id)arg1;
- (void)resumeChangeDeliveryAndBackgroundLoading:(id)arg1;
- (bool)reverseSortOrder;
- (unsigned long long)sectionForAssetCollection:(id)arg1;
- (id)sectionsForAssetCollections:(id)arg1;
- (void)setAllowNextChangeDeliveryOnAllRunLoopModes:(bool)arg1;
- (void)setAllowSlowFetchesOnClientQueue:(bool)arg1;
- (void)setAllowedOIDs:(id)arg1;
- (void)setAllowedUUIDs:(id)arg1;
- (void)setBackgroundFetchOriginSection:(long long)arg1;
- (void)setCanIncludeUnsavedSyndicatedAssets:(bool)arg1;
- (void)setCollectionListFetchResult:(id)arg1;
- (void)setDisableFilters:(bool)arg1 forAssetCollection:(id)arg2;
- (void)setFetchLimit:(unsigned long long)arg1;
- (void)setFilterPredicate:(id)arg1;
- (void)setFilterPredicate:(id)arg1 provideIncrementalChangeDetailsForAssetCollections:(id)arg2;
- (void)setIgnoreSharedLibraryFilters:(bool)arg1;
- (void)setIsBackgroundFetching:(bool)arg1;
- (void)setKeyAsset:(id)arg1 forAssetCollection:(id)arg2;
- (void)setLibraryFilter:(long long)arg1;
- (void)setReverseSortOrder:(bool)arg1;
- (void)setSignpostIntervalId:(unsigned long long)arg1;
- (void)setSortDescriptors:(id)arg1;
- (void)setWantsCuration:(bool)arg1 forAssetCollection:(id)arg2;
- (void)setWantsCurationByDefault:(bool)arg1;
- (void)setWantsCurationForAllCollections:(bool)arg1 collectionsToDiff:(id)arg2;
- (id)sharedLibraryStatusProvider;
- (unsigned long long)signpostIntervalId;
- (id)sortDescriptors;
- (void)startBackgroundFetchIfNeeded;
- (void)stopExcludingAssets:(id)arg1;
- (void)stopForceIncludingAllAssets;
- (bool)supportsCurationToggling;
- (bool)supportsDynamicBackgroundFetching;
- (id)uncuratedAssetsForAssetCollection:(id)arg1;
- (id)uncuratedAssetsInSection:(long long)arg1;
- (void)unregisterChangeObserver:(id)arg1;
- (long long)versionIdentifier;
- (bool)wantsCurationByDefault;
- (bool)wantsCurationForAssetCollection:(id)arg1;
- (bool)wantsCurationForFirstAssetCollection;
- (double)weightForAsset:(id)arg1;

@end
