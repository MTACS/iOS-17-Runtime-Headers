
@interface PXStoryChromeButtonConfiguration : NSObject <PXGViewUserData> {
    SEL  _action;
    bool  _applyTintColorAsHierarchicalColor;
    NSString * _axLabel;
    bool  _backgroundColorAdaptsToHoveredState;
    bool  _backgroundExtendsUnderLabel;
    long long  _backgroundStyle;
    double  _badgeBorderWidth;
    unsigned long long  _badgeEdges;
    struct CGSize { 
        double width; 
        double height; 
    }  _badgePadding;
    NSArray * _badgeSystemImageColors;
    NSString * _badgeSystemImageName;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _contentEdgeInsets;
    <NSObject> * _customContextMenuInteractionDelegate;
    <PXDisplayAsset> * _displayAsset;
    bool  _enabled;
    UIColor * _focusedTintColor;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _hitTestEdgeOutsets;
    NSString * _label;
    UIMenu * _menu;
    <PXStoryChromeButtonMenuDelegate> * _menuDelegate;
    struct CGPoint { 
        double x; 
        double y; 
    }  _offset;
    long long  _pointerShape;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _pointerShapeInsets;
    double  _preferredSystemImagePointSize;
    long long  _preferredSystemImageWeight;
    UIColor * _solidBackgroundColor;
    PXStoryChromeButtonSpec * _spec;
    NSSymbolContentTransition * _symbolTransition;
    NSString * _systemImageName;
    long long  _systemImageStyle;
    id  _target;
    UIColor * _tintColor;
    struct CGAffineTransform { 
        double a; 
        double b; 
        double c; 
        double d; 
        double tx; 
        double ty; 
    }  _transform;
}

@property (nonatomic) SEL action;
@property (nonatomic) bool applyTintColorAsHierarchicalColor;
@property (nonatomic, copy) NSString *axLabel;
@property (nonatomic) bool backgroundColorAdaptsToHoveredState;
@property (nonatomic) bool backgroundExtendsUnderLabel;
@property (nonatomic) long long backgroundStyle;
@property (nonatomic) double badgeBorderWidth;
@property (nonatomic) unsigned long long badgeEdges;
@property (nonatomic) struct CGSize { double x1; double x2; } badgePadding;
@property (nonatomic, copy) NSArray *badgeSystemImageColors;
@property (nonatomic, copy) NSString *badgeSystemImageName;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } contentEdgeInsets;
@property (nonatomic) <NSObject> *customContextMenuInteractionDelegate;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) <PXDisplayAsset> *displayAsset;
@property (nonatomic) bool enabled;
@property (nonatomic, retain) UIColor *focusedTintColor;
@property (nonatomic, readonly) bool hasBadgeImageContent;
@property (nonatomic, readonly) bool hasPrimaryImageContent;
@property (readonly) unsigned long long hash;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } hitTestEdgeOutsets;
@property (nonatomic, copy) NSString *label;
@property (nonatomic, retain) UIMenu *menu;
@property (nonatomic) <PXStoryChromeButtonMenuDelegate> *menuDelegate;
@property (nonatomic) struct CGPoint { double x1; double x2; } offset;
@property (nonatomic) long long pointerShape;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } pointerShapeInsets;
@property (nonatomic) double preferredSystemImagePointSize;
@property (nonatomic) long long preferredSystemImageWeight;
@property (nonatomic, retain) UIColor *solidBackgroundColor;
@property (nonatomic, retain) PXStoryChromeButtonSpec *spec;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSSymbolContentTransition *symbolTransition;
@property (nonatomic, copy) NSString *systemImageName;
@property (nonatomic) long long systemImageStyle;
@property (nonatomic) id target;
@property (nonatomic, retain) UIColor *tintColor;
@property (nonatomic) struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; } transform;

- (void).cxx_destruct;
- (SEL)action;
- (bool)applyTintColorAsHierarchicalColor;
- (id)axLabel;
- (bool)backgroundColorAdaptsToHoveredState;
- (bool)backgroundExtendsUnderLabel;
- (long long)backgroundStyle;
- (double)badgeBorderWidth;
- (unsigned long long)badgeEdges;
- (struct CGSize { double x1; double x2; })badgePadding;
- (id)badgeSystemImageColors;
- (id)badgeSystemImageName;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })contentEdgeInsets;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)customContextMenuInteractionDelegate;
- (id)displayAsset;
- (bool)enabled;
- (id)focusedTintColor;
- (bool)hasBadgeImageContent;
- (bool)hasPrimaryImageContent;
- (unsigned long long)hash;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })hitTestEdgeOutsets;
- (id)init;
- (bool)isEqual:(id)arg1;
- (id)label;
- (id)menu;
- (id)menuDelegate;
- (struct CGPoint { double x1; double x2; })offset;
- (long long)pointerShape;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })pointerShapeInsets;
- (double)preferredSystemImagePointSize;
- (long long)preferredSystemImageWeight;
- (void)setAction:(SEL)arg1;
- (void)setApplyTintColorAsHierarchicalColor:(bool)arg1;
- (void)setAxLabel:(id)arg1;
- (void)setBackgroundColorAdaptsToHoveredState:(bool)arg1;
- (void)setBackgroundExtendsUnderLabel:(bool)arg1;
- (void)setBackgroundStyle:(long long)arg1;
- (void)setBadgeBorderWidth:(double)arg1;
- (void)setBadgeEdges:(unsigned long long)arg1;
- (void)setBadgePadding:(struct CGSize { double x1; double x2; })arg1;
- (void)setBadgeSystemImageColors:(id)arg1;
- (void)setBadgeSystemImageName:(id)arg1;
- (void)setContentEdgeInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setCustomContextMenuInteractionDelegate:(id)arg1;
- (void)setDisplayAsset:(id)arg1;
- (void)setEnabled:(bool)arg1;
- (void)setFocusedTintColor:(id)arg1;
- (void)setHitTestEdgeOutsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setLabel:(id)arg1;
- (void)setMenu:(id)arg1;
- (void)setMenuDelegate:(id)arg1;
- (void)setOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)setPointerShape:(long long)arg1;
- (void)setPointerShapeInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setPreferredSystemImagePointSize:(double)arg1;
- (void)setPreferredSystemImageWeight:(long long)arg1;
- (void)setSolidBackgroundColor:(id)arg1;
- (void)setSpec:(id)arg1;
- (void)setSymbolTransition:(id)arg1;
- (void)setSystemImageName:(id)arg1;
- (void)setSystemImageStyle:(long long)arg1;
- (void)setTarget:(id)arg1;
- (void)setTintColor:(id)arg1;
- (void)setTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1;
- (id)solidBackgroundColor;
- (id)spec;
- (id)symbolTransition;
- (id)systemImageName;
- (long long)systemImageStyle;
- (id)target;
- (id)tintColor;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })transform;

@end
