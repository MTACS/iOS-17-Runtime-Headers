
@interface PXStoryModel : PXObservable <PXChangeObserver, PXStoryMutableModel, PXStoryQueueParticipant, PXTapToRadarDiagnosticProvider> {
    NSMapTable * _HUDContentProvidersByType;
    <PXStorySongResource> * _activeSongResource;
    bool  _allowsScrolling;
    PXStoryAnimationController * _animationController;
    AVAudioSession * _audioSession;
    long long  _bufferingEvents;
    NSMutableSet * _changesOrigins;
    double  _chromeVisibilityFraction;
    long long  _colorGradeKind;
    <PXStoryColorGradingRepository> * _colorGradingRepository;
    PXStoryConfiguration * _configuration;
    long long  _contentReadinessStatus;
    <PXDisplayAssetCollection> * _currentAssetCollection;
    bool  _currentAssetCollectionIsFavorite;
    struct CGPoint { 
        double x; 
        double y; 
    }  _currentGridScrollPosition;
    struct { 
        long long firstSegmentIdentifier; 
        double secondSegmentMixFactor; 
        long long secondSegmentIdentifier; 
    }  _currentScrollPosition;
    long long  _currentSegmentIdentifier;
    <PXStoryStyle> * _currentStyle;
    double  _desiredInfoPanelVisibilityFraction;
    long long  _desiredPlayState;
    <PXDisplayAsset> * _desiredStartAsset;
    long long  _detailsViewButtonDisplayStyle;
    long long  _diagnosticHUDType;
    bool  _didPrerequestPersistencePermission;
    bool  _didReachOutroOnce;
    <PXStorySongResource> * _editorPreviewSong;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _elapsedTime;
    <PXStoryErrorReporter> * _errorReporter;
    <PXStoryTimeline> * _gridTimeline;
    bool  _inLiveResize;
    double  _infoPanelVisibilityFraction;
    bool  _isActuallyPlaying;
    bool  _isAtPlaybackEnd;
    bool  _isHUDVisible;
    bool  _isHovering;
    bool  _isPerformingViewControllerTransition;
    bool  _isPresentingAnyAlert;
    bool  _isPresentingAssetPicker;
    bool  _isPresentingColorGradeEditor;
    bool  _isPresentingMusicEditor;
    bool  _isScrolling;
    bool  _isTouching;
    PXAssetReference * _lastHitAssetReference;
    long long  _lastHitClipIdentifier;
    unsigned long long  _lastPlaybackTimeChangeSource;
    <PXStoryLayoutSpec> * _layoutSpec;
    PXStoryLayoutSpecManager * _layoutSpecManager;
    PXStoryLoadingStatusReporter * _loadingStatusReporter;
    NSMutableSet * _musicDuckingTokens;
    long long  _musicReadinessStatus;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _nominalPlaybackTime;
    long long  _numberOfPresentedAlerts;
    unsigned long long  _options;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _outroDuration;
    double  _outroFractionCompleted;
    id /* block */  _overallDurationChangeCompletionHandler;
    long long  _persistencePermission;
    NSMutableArray * _persistenceRequests;
    double  _playbackFractionCompleted;
    double  _playbackMaxFractionCompleted;
    bool  _prefersExportLayoutMatchesPlayback;
    PXCoordinatedRect * _presentedSubtitleFrame;
    PXCoordinatedRect * _presentedTitleFrame;
    struct { 
        double pressedFraction; 
        double pressedFractionVelocity; 
        struct CGSize { 
            double width; 
            double height; 
        } timelineSizeBeforePressing; 
    }  _pressAnimationInfo;
    PXNumberAnimator * _pressedFractionAnimator;
    long long  _previousSegmentIdentifier;
    long long  _readinessStatus;
    PXStoryRecipeManager * _recipeManager;
    PXStoryResourcesDataSourceManager * _resourcesDataSourceManager;
    bool  _shouldAspectFitCurrentSegment;
    bool  _shouldAutoplayThumbnail;
    NSObject<OS_dispatch_queue> * _storyQueue;
    PXStoryStyleManager * _styleManager;
    double  _styleSwitcherVisibilityFraction;
    <PXStoryThumbnailActionPerformer> * _thumbnailActionPerformer;
    struct { 
        struct { 
            long long value; 
            int timescale; 
            unsigned int flags; 
            long long epoch; 
        } start; 
        struct { 
            long long value; 
            int timescale; 
            unsigned int flags; 
            long long epoch; 
        } duration; 
    }  _thumbnailAutoplayTimeRange;
    long long  _thumbnailStyle;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _timeIntoCurrentSegment;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _timeLeftInCurrentSegment;
    <PXStoryTimeline> * _timeline;
    unsigned long long  _timelineAttributes;
    PXStoryTimelineManager * _timelineManager;
    <PXStoryTimelineSpec> * _timelineSpec;
    long long  _titleAlignment;
    NSString * _titleCategory;
    double  _titleOpacity;
    NSUndoManager * _undoManager;
    <NSCopying> * _uniqueIdentifier;
    PXUpdater * _updater;
    NSHashTable * _videoPresentationControllers;
    PXVideoSessionManager * _videoSessionManager;
    long long  _viewMode;
    PXStoryViewModeTransition * _viewModeTransition;
    NSIndexSet * _visibleSegmentIdentifiers;
    double  _volume;
    float  _volumeDuringViewControllerTransition;
    bool  _wantsMusicDucked;
}

@property (nonatomic, readonly) NSMapTable *HUDContentProvidersByType;
@property (nonatomic, readonly) <PXStorySongResource> *activeSongResource;
@property (nonatomic, readonly) bool allowsScrolling;
@property (nonatomic, readonly) PXStoryAnimationController *animationController;
@property (nonatomic, readonly) AVAudioSession *audioSession;
@property (nonatomic) long long bufferingEvents;
@property (nonatomic, readonly) NSSet *changesOrigins;
@property (nonatomic, readonly) PXStoryChapterCollectionManager *chapterCollectionManager;
@property (nonatomic, readonly) double chromeVisibilityFraction;
@property (nonatomic) long long colorGradeKind;
@property (nonatomic, readonly) <PXStoryColorGradingRepository> *colorGradingRepository;
@property (nonatomic, readonly) PXStoryConfiguration *configuration;
@property (nonatomic, readonly) long long contentReadinessStatus;
@property (nonatomic, readonly) <PXDisplayAssetFetchResult> *curatedAssets;
@property (nonatomic, readonly) <PXDisplayAssetCollection> *currentAssetCollection;
@property (nonatomic, readonly) bool currentAssetCollectionIsFavorite;
@property (nonatomic, readonly) <PXStoryChapter> *currentChapter;
@property (nonatomic, readonly) bool currentChapterTitleIsVisible;
@property (nonatomic, readonly) struct CGPoint { double x1; double x2; } currentGridScrollPosition;
@property (nonatomic, readonly) struct { long long x1; double x2; long long x3; } currentScrollPosition;
@property (nonatomic, readonly) long long currentSegmentIdentifier;
@property (nonatomic, readonly) <PXStorySongResource> *currentSongResource;
@property (nonatomic, readonly) <PXStoryStyle> *currentStyle;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) double desiredInfoPanelVisibilityFraction;
@property (nonatomic, readonly) long long desiredPlayState;
@property (nonatomic, retain) <PXDisplayAsset> *desiredStartAsset;
@property (nonatomic, readonly) long long detailsViewButtonDisplayStyle;
@property (nonatomic, readonly) long long diagnosticHUDType;
@property (nonatomic) bool didPrerequestPersistencePermission;
@property (nonatomic) bool didReachOutroOnce;
@property (nonatomic, readonly) <PXStorySongResource> *editorPreviewSong;
@property (nonatomic, readonly) struct { long long x1; int x2; unsigned int x3; long long x4; } elapsedTime;
@property (nonatomic, readonly) <PXStoryErrorReporter> *errorReporter;
@property (nonatomic, readonly) PXExtendedTraitCollection *extendedTraitCollection;
@property (nonatomic, readonly) <PXStoryTimeline> *gridTimeline;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool inLiveResize;
@property (nonatomic, readonly) double infoPanelVisibilityFraction;
@property (nonatomic, readonly) bool isActuallyPlaying;
@property (nonatomic, readonly) bool isAtPlaybackEnd;
@property (nonatomic, readonly) bool isExporting;
@property (nonatomic, readonly) bool isFirstSegmentVisible;
@property (nonatomic, readonly) bool isHUDVisible;
@property (nonatomic, readonly) bool isHovering;
@property (nonatomic, readonly) bool isLastSegmentVisible;
@property (nonatomic, readonly) bool isPerformingViewControllerTransition;
@property (nonatomic, readonly) bool isPresentingAnyAlert;
@property (nonatomic, readonly) bool isPresentingAssetPicker;
@property (nonatomic, readonly) bool isPresentingColorGradeEditor;
@property (nonatomic, readonly) bool isPresentingMusicEditor;
@property (nonatomic, readonly) bool isScrolling;
@property (nonatomic, readonly) bool isTouching;
@property (nonatomic, readonly, copy) PXAssetReference *lastHitAssetReference;
@property (nonatomic, readonly) long long lastHitClipIdentifier;
@property (nonatomic, readonly) unsigned long long lastPlaybackTimeChangeSource;
@property (nonatomic, readonly) <PXStoryLayoutSpec> *layoutSpec;
@property (nonatomic, readonly) PXStoryLayoutSpecManager *layoutSpecManager;
@property (nonatomic, readonly) PXStoryLoadingStatusReporter *loadingStatusReporter;
@property (nonatomic, readonly) long long musicReadinessStatus;
@property (nonatomic, readonly) struct { long long x1; int x2; unsigned int x3; long long x4; } nominalPlaybackTime;
@property (nonatomic) long long numberOfPresentedAlerts;
@property (nonatomic, readonly) unsigned long long options;
@property (nonatomic) struct { long long x1; int x2; unsigned int x3; long long x4; } outroDuration;
@property (nonatomic) double outroFractionCompleted;
@property (nonatomic, copy) id /* block */ overallDurationChangeCompletionHandler;
@property (nonatomic, readonly) long long persistencePermission;
@property (nonatomic, readonly) double playbackFractionCompleted;
@property (nonatomic, readonly) double playbackMaxFractionCompleted;
@property (nonatomic, readonly) bool prefersExportLayoutMatchesPlayback;
@property (nonatomic, readonly) PXCoordinatedRect *presentedSubtitleFrame;
@property (nonatomic, readonly) PXCoordinatedRect *presentedTitleFrame;
@property (nonatomic) struct { double x1; double x2; struct CGSize { double x_3_1_1; double x_3_1_2; } x3; } pressAnimationInfo;
@property (nonatomic, readonly) PXNumberAnimator *pressedFractionAnimator;
@property (nonatomic, readonly) long long previousSegmentIdentifier;
@property (nonatomic, readonly) long long readinessStatus;
@property (nonatomic, readonly) PXStoryRecipeManager *recipeManager;
@property (nonatomic, readonly) PXStoryResourcesDataSourceManager *resourcesDataSourceManager;
@property (nonatomic, readonly) bool shouldAspectFitCurrentSegment;
@property (nonatomic, readonly) bool shouldAutoplayThumbnail;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *storyQueue;
@property (nonatomic, readonly) PXStoryStyleManager *styleManager;
@property (nonatomic, readonly) double styleSwitcherVisibilityFraction;
@property (readonly) Class superclass;
@property (nonatomic, readonly) <PXStoryThumbnailActionPerformer> *thumbnailActionPerformer;
@property (nonatomic, readonly) struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; } thumbnailAutoplayTimeRange;
@property (nonatomic, readonly) long long thumbnailStyle;
@property (nonatomic, readonly) struct { long long x1; int x2; unsigned int x3; long long x4; } timeIntoCurrentSegment;
@property (nonatomic, readonly) struct { long long x1; int x2; unsigned int x3; long long x4; } timeLeftInCurrentSegment;
@property (nonatomic, readonly) <PXStoryTimeline> *timeline;
@property (nonatomic, readonly) unsigned long long timelineAttributes;
@property (nonatomic, readonly) PXStoryTimelineManager *timelineManager;
@property (nonatomic, readonly) <PXStoryTimelineSpec> *timelineSpec;
@property (nonatomic, readonly) long long titleAlignment;
@property (nonatomic, readonly) NSString *titleCategory;
@property (nonatomic, readonly) double titleOpacity;
@property (nonatomic, retain) NSUndoManager *undoManager;
@property (nonatomic, readonly) <NSCopying> *uniqueIdentifier;
@property (nonatomic, readonly) <PXDisplayAssetFetchResult> *untruncatedCuratedAssets;
@property (nonatomic, readonly) PXUpdater *updater;
@property (nonatomic, readonly) NSHashTable *videoPresentationControllers;
@property (nonatomic, readonly) PXVideoSessionManager *videoSessionManager;
@property (nonatomic, readonly) long long viewMode;
@property (nonatomic, readonly) PXStoryViewModeTransition *viewModeTransition;
@property (nonatomic, readonly) <PXDisplayAssetFetchResult> *visibleDisplayAssets;
@property (nonatomic, readonly, copy) NSIndexSet *visibleSegmentIdentifiers;
@property (nonatomic, readonly) double volume;
@property (nonatomic, readonly) float volumeDuringViewControllerTransition;
@property (nonatomic, readonly) bool wantsMusicDucked;

- (void).cxx_destruct;
- (id)HUDContentProvidersByType;
- (id)_appleMusicCapabilitiesDebugInformation;
- (void)_callCompletionHandlersPendingTimelineChange;
- (void)_clearLastHitAssetClip;
- (void)_completePersistenceRequestsWithSuccess:(bool)arg1 error:(id)arg2;
- (id)_currentAssetCollectionDescriptionForHUDType:(long long)arg1;
- (void)_displayCollectionPersistenceConfirmationIfNeeded;
- (void)_enumerateVisibleAssetVideoPresentationControllersUsingBlock:(id /* block */)arg1;
- (void)_invalidateCurrentAssetCollection;
- (void)_invalidateCurrentStyleAndFocus;
- (void)_invalidateLayoutSpec;
- (void)_invalidateNominalPlaybackTime;
- (void)_invalidateOutroDuration;
- (void)_invalidateOutroFractionCompleted;
- (void)_invalidatePersistencePermission;
- (void)_invalidatePlaybackFractionCompleted;
- (void)_invalidatePressAnimationInfo;
- (void)_invalidatePressedFractionAnimator;
- (void)_invalidateShouldAspectFitCurrentSegment;
- (void)_invalidateTimeline;
- (void)_invalidateTimelineAttributes;
- (void)_invalidateTimelineSpec;
- (void)_invalidateWantsMusicDucked;
- (id)_musicCurationDebugInformation;
- (void)_setNeedsUpdate;
- (void)_updateCurrentAssetCollection;
- (void)_updateCurrentStyle;
- (void)_updateLayoutSpec;
- (void)_updateNominalPlaybackTime;
- (void)_updateOutroDuration;
- (void)_updateOutroFractionCompleted;
- (void)_updatePersistencePermission;
- (void)_updatePlaybackFractionCompleted;
- (void)_updatePressAnimationInfo;
- (void)_updatePressedFractionAnimator;
- (void)_updateShouldAspectFitCurrentSegment;
- (void)_updateTimeline;
- (void)_updateTimelineAttributes;
- (void)_updateTimelineSpec;
- (void)_updateWantsMusicDucked;
- (id)activeSongResource;
- (void)addVideoPresentationController:(id)arg1;
- (bool)allowsScrolling;
- (id)animationController;
- (id)assetReferenceForClipIdentifier:(long long)arg1;
- (id)audioSession;
- (id)beginMusicDucking;
- (long long)bufferingEvents;
- (void)changeOverallDuration:(long long)arg1 completionHandler:(id /* block */)arg2;
- (id)changesOrigins;
- (id)chapterCollectionManager;
- (bool)checkIfShouldPreventAdvancingAndReturnReason:(out id*)arg1;
- (double)chromeVisibilityFraction;
- (void)collectTapToRadarDiagnosticsIntoContainer:(id)arg1;
- (long long)colorGradeKind;
- (id)colorGradingRepository;
- (id)configuration;
- (long long)contentReadinessStatus;
- (id)curatedAssets;
- (id)currentAssetCollection;
- (bool)currentAssetCollectionIsFavorite;
- (id)currentChapter;
- (bool)currentChapterTitleIsVisible;
- (id)currentGradeDescription;
- (struct CGPoint { double x1; double x2; })currentGridScrollPosition;
- (struct { long long x1; double x2; long long x3; })currentScrollPosition;
- (long long)currentSegmentIdentifier;
- (id)currentSongDescription;
- (id)currentSongPaceDescription;
- (id)currentSongResource;
- (id)currentSongTagsDescription;
- (id)currentStyle;
- (id)currentStyleDescription;
- (id)currentTimeDescription;
- (double)desiredInfoPanelVisibilityFraction;
- (long long)desiredPlayState;
- (id)desiredStartAsset;
- (long long)detailsViewButtonDisplayStyle;
- (id)diagnosticDescriptionForAllHUDTypes;
- (id)diagnosticHUDContentProviderForType:(long long)arg1;
- (long long)diagnosticHUDType;
- (id)diagnosticTextForHUDType:(long long)arg1;
- (void)didEndChangeHandling;
- (void)didEndPresentingAlert;
- (void)didPerformChanges;
- (bool)didPrerequestPersistencePermission;
- (bool)didReachOutroOnce;
- (void)didStartPresentingAlert;
- (id)editorPreviewSong;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })elapsedTime;
- (void)endMusicDuckingWithToken:(id)arg1;
- (id)errorReporter;
- (id)extendedTraitCollection;
- (void)flickedPastEnd;
- (bool)getMainVisibleClipIdentifier:(out long long*)arg1 assetReferece:(id*)arg2;
- (id)gridTimeline;
- (bool)inLiveResize;
- (double)infoPanelVisibilityFraction;
- (id)init;
- (id)initWithConfiguration:(id)arg1 extendedTraitCollection:(id)arg2;
- (id)initWithConfiguration:(id)arg1 extendedTraitCollection:(id)arg2 loadingCoordinator:(id)arg3 paperTrailOptions:(unsigned long long)arg4;
- (id)initWithTimelineManager:(id)arg1 layoutSpecManager:(id)arg2 configuration:(id)arg3;
- (bool)isActuallyPlaying;
- (bool)isAtPlaybackEnd;
- (bool)isExporting;
- (bool)isFirstSegmentVisible;
- (bool)isHUDVisible;
- (bool)isHovering;
- (bool)isLastSegmentVisible;
- (bool)isPerformingViewControllerTransition;
- (bool)isPresentingAnyAlert;
- (bool)isPresentingAssetPicker;
- (bool)isPresentingColorGradeEditor;
- (bool)isPresentingMusicEditor;
- (bool)isScrolling;
- (bool)isTouching;
- (id)lastHitAssetReference;
- (long long)lastHitClipIdentifier;
- (unsigned long long)lastPlaybackTimeChangeSource;
- (id)layoutSpec;
- (id)layoutSpecManager;
- (id)loadingStatusReporter;
- (void)makeAssetKeyPhoto:(id)arg1;
- (void)makeCurrentAssetKeyPhoto;
- (long long)musicReadinessStatus;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })nominalPlaybackTime;
- (long long)numberOfPresentedAlerts;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void*)arg3;
- (unsigned long long)options;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })outroDuration;
- (double)outroFractionCompleted;
- (id /* block */)overallDurationChangeCompletionHandler;
- (void)performChanges:(id /* block */)arg1;
- (void)performChanges:(id /* block */)arg1 origin:(id)arg2;
- (void)performWithPrerequestedPersistencePermission:(id /* block */)arg1;
- (long long)persistencePermission;
- (double)playbackFractionCompleted;
- (double)playbackMaxFractionCompleted;
- (bool)prefersExportLayoutMatchesPlayback;
- (void)prerequestPersistencePermission:(id /* block */)arg1;
- (id)presentedSubtitleFrame;
- (id)presentedTitleFrame;
- (struct { double x1; double x2; struct CGSize { double x_3_1_1; double x_3_1_2; } x3; })pressAnimationInfo;
- (id)pressedFractionAnimator;
- (long long)previousSegmentIdentifier;
- (long long)readinessStatus;
- (id)recipeManager;
- (void)reconfigureWithAssetCollection:(id)arg1;
- (void)removeAssetsFromCuration:(id)arg1;
- (void)removeVideoPresentationController:(id)arg1;
- (void)reportNetworkRelatedPlaybackFailure;
- (void)reportPersistenceFailureWithError:(id)arg1;
- (void)requestPersistencePermission:(id /* block */)arg1;
- (void)requestPersistencePermissionWithTimeout:(double)arg1 completionHandler:(id /* block */)arg2;
- (id)resourcesDataSourceManager;
- (void)restartPlaybackFromBeginning;
- (bool)rewindToBeginningOfCurrentSegment;
- (void)scrollToPosition:(struct { long long x1; double x2; long long x3; })arg1;
- (void)setActiveSongResource:(id)arg1;
- (void)setAllowsScrolling:(bool)arg1;
- (void)setAudioSession:(id)arg1;
- (void)setBufferingEvents:(long long)arg1;
- (void)setChromeVisibilityFraction:(double)arg1;
- (void)setColorGradeKind:(long long)arg1;
- (void)setConfiguration:(id)arg1;
- (void)setContentReadinessStatus:(long long)arg1;
- (void)setCurrentAssetCollection:(id)arg1;
- (void)setCurrentAssetCollectionIsFavorite:(bool)arg1;
- (void)setCurrentGridScrollPosition:(struct CGPoint { double x1; double x2; })arg1;
- (void)setCurrentScrollPosition:(struct { long long x1; double x2; long long x3; })arg1;
- (bool)setCurrentSegmentIdentifier:(long long)arg1 timeIntoSegment:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 timeLeftInSegment:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3 changeSource:(unsigned long long)arg4;
- (void)setCurrentStyle:(id)arg1;
- (void)setDesiredInfoPanelVisibilityFraction:(double)arg1;
- (void)setDesiredPlayState:(long long)arg1;
- (void)setDesiredStartAsset:(id)arg1;
- (void)setDetailsViewButtonDisplayStyle:(long long)arg1;
- (void)setDiagnosticHUDContentProvider:(id)arg1 forType:(long long)arg2;
- (void)setDiagnosticHUDType:(long long)arg1;
- (void)setDidPrerequestPersistencePermission:(bool)arg1;
- (void)setDidReachOutroOnce:(bool)arg1;
- (void)setEditorPreviewSong:(id)arg1;
- (void)setElapsedTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setInLiveResize:(bool)arg1;
- (void)setInfoPanelVisibilityFraction:(double)arg1;
- (void)setIsActuallyPlaying:(bool)arg1;
- (void)setIsAtPlaybackEnd:(bool)arg1;
- (void)setIsHUDVisible:(bool)arg1;
- (void)setIsHovering:(bool)arg1;
- (void)setIsPerformingViewControllerTransition:(bool)arg1;
- (void)setIsPresentingAnyAlert:(bool)arg1;
- (void)setIsPresentingAssetPicker:(bool)arg1;
- (void)setIsPresentingColorGradeEditor:(bool)arg1;
- (void)setIsPresentingMusicEditor:(bool)arg1;
- (void)setIsScrolling:(bool)arg1;
- (void)setIsTouching:(bool)arg1;
- (void)setLastHitAssetReference:(id)arg1;
- (void)setLastHitClipIdentifier:(long long)arg1;
- (void)setLastPlaybackTimeChangeSource:(unsigned long long)arg1;
- (void)setLayoutSpec:(id)arg1;
- (void)setMusicReadinessStatus:(long long)arg1;
- (void)setNominalPlaybackTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setNumberOfPresentedAlerts:(long long)arg1;
- (void)setOutroDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setOutroFractionCompleted:(double)arg1;
- (void)setOverallDurationChangeCompletionHandler:(id /* block */)arg1;
- (void)setPersistencePermission:(long long)arg1;
- (void)setPlaybackFractionCompleted:(double)arg1;
- (void)setPlaybackMaxFractionCompleted:(double)arg1;
- (void)setPrefersExportLayoutMatchesPlayback:(bool)arg1;
- (void)setPresentedSubtitleFrame:(id)arg1;
- (void)setPresentedTitleFrame:(id)arg1;
- (void)setPressAnimationInfo:(struct { double x1; double x2; struct CGSize { double x_3_1_1; double x_3_1_2; } x3; })arg1;
- (void)setPreviousSegmentIdentifier:(long long)arg1;
- (void)setReadinessStatus:(long long)arg1;
- (void)setShouldAspectFitCurrentSegment:(bool)arg1;
- (void)setShouldAutoplayThumbnail:(bool)arg1;
- (void)setStyleSwitcherVisibilityFraction:(double)arg1;
- (void)setThumbnailAutoplayTimeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg1;
- (void)setThumbnailStyle:(long long)arg1;
- (void)setTimeline:(id)arg1;
- (void)setTimelineAttributes:(unsigned long long)arg1;
- (void)setTimelineSpec:(id)arg1;
- (void)setTitleAlignment:(long long)arg1;
- (void)setTitleOpacity:(double)arg1;
- (void)setUndoManager:(id)arg1;
- (void)setViewMode:(long long)arg1;
- (void)setViewModeTransition:(id)arg1;
- (void)setVisibleSegmentIdentifiers:(id)arg1;
- (void)setVolume:(double)arg1;
- (void)setVolumeDuringViewControllerTransition:(float)arg1;
- (void)setWantsMusicDucked:(bool)arg1;
- (bool)shouldAspectFitCurrentSegment;
- (bool)shouldAutoplayThumbnail;
- (bool)skipToBeginningOfSegmentWithIdentifier:(long long)arg1;
- (bool)skipToSegmentWithOffset:(long long)arg1;
- (id)storyQueue;
- (id)styleManager;
- (double)styleSwitcherVisibilityFraction;
- (id)thumbnailActionPerformer;
- (struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })thumbnailAutoplayTimeRange;
- (long long)thumbnailStyle;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })timeIntoCurrentSegment;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })timeLeftInCurrentSegment;
- (id)timeline;
- (unsigned long long)timelineAttributes;
- (id)timelineManager;
- (id)timelineSpec;
- (long long)titleAlignment;
- (id)titleCategory;
- (double)titleOpacity;
- (id)undoManager;
- (id)uniqueIdentifier;
- (id)untruncatedCuratedAssets;
- (id)updater;
- (id)videoPresentationControllers;
- (id)videoSessionManager;
- (long long)viewMode;
- (id)viewModeTransition;
- (id)visibleDisplayAssets;
- (id)visibleSegmentIdentifiers;
- (double)volume;
- (float)volumeDuringViewControllerTransition;
- (bool)wantsMusicDucked;

@end
