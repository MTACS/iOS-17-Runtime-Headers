
@interface PXForYouSuggestionGadgetContentView : UIView <PXFocusInfoProvider, PXPhotoLibraryUIChangeObserver, PXSettingsKeyObserver> {
    bool  _assetContentHidden;
    PXDisplayAssetContentView * _assetView;
    SLAttributionView * _attributionView;
    unsigned long long  _badgeTypes;
    PXUIAssetBadgeView * _badgeView;
    bool  _blursDegradedContent;
    NSString * _caption;
    id /* block */  _focusInfoChangeHandler;
    bool  _forceAssetContentReload;
    PXGadgetSpec * _gadgetSpec;
    SLHighlight * _highlight;
    <PXDisplayAsset> * _keyAsset;
    PXUIMediaProvider * _mediaProvider;
    long long  _mode;
    PXRoundedCornerOverlayView * _roundedOverlayView;
    bool  _shouldShowSyndicationAttributionView;
    NSString * _subtitle;
    UILabel * _subtitleLabel;
    <PXDisplaySuggestion> * _suggestion;
    NSString * _title;
    UILabel * _titleLabel;
    struct { 
        unsigned long long needsUpdate; 
        unsigned long long updated; 
        bool isPerformingUpdate; 
        bool willPerformUpdate; 
    }  _updateFlags;
}

@property (nonatomic) bool assetContentHidden;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } assetContentsRect;
@property (nonatomic, retain) PXDisplayAssetContentView *assetView;
@property (nonatomic, retain) SLAttributionView *attributionView;
@property (nonatomic) unsigned long long badgeTypes;
@property (nonatomic, retain) PXUIAssetBadgeView *badgeView;
@property (nonatomic) bool blursDegradedContent;
@property (nonatomic, copy) NSString *caption;
@property (nonatomic, readonly) UIImage *currentAssetImage;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSError *error;
@property (nonatomic, readonly) PXFocusInfo *focusInfo;
@property (nonatomic, copy) id /* block */ focusInfoChangeHandler;
@property (nonatomic, retain) PXGadgetSpec *gadgetSpec;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) SLHighlight *highlight;
@property (nonatomic, readonly) bool isDisplayingFullQualityContent;
@property (nonatomic, retain) <PXDisplayAsset> *keyAsset;
@property (nonatomic, retain) PXUIMediaProvider *mediaProvider;
@property (nonatomic) long long mode;
@property (nonatomic, retain) PXRoundedCornerOverlayView *roundedOverlayView;
@property (nonatomic) bool shouldShowSyndicationAttributionView;
@property (nonatomic, copy) NSString *subtitle;
@property (nonatomic, readonly) UILabel *subtitleLabel;
@property (nonatomic, retain) <PXDisplaySuggestion> *suggestion;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSString *title;
@property (nonatomic, readonly) UILabel *titleLabel;

+ (id)_gaussianBlurFilter;
+ (id)darkPlaceholderFilters;
+ (id)lightPlaceholderFilters;
+ (void)preloadResources;
+ (double)scaledSubtitleBaselineDistance;
+ (double)scaledSuggestionBaselineDistance;
+ (double)scaledTitleBaselineDistance;
+ (double)scaledTitleWithSuggestionBaselineDistance;
+ (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1 withSuggestion:(id)arg2 title:(id)arg3 subtitle:(id)arg4;
+ (id)suggestionLabelFont;
+ (id)titleLabelFont;

- (void).cxx_destruct;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_assetFrameInBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGSize { double x1; double x2; })_calculateLayoutWithInputSize:(struct CGSize { double x1; double x2; })arg1 apply:(bool)arg2;
- (void)_contentSizeCategoryDidChange:(id)arg1;
- (void)_handleChangedAsset:(id)arg1;
- (void)_updateAssetView;
- (void)_updateAssetViewAnimatedContentEnabled;
- (void)_updateAssetViewPlaceholderFilters;
- (void)_updateAttributionView;
- (void)_updateBadgeContents;
- (void)_updateBadgeViews;
- (void)_updateIfNeeded;
- (void)_updateRoundedCornerOverlayView;
- (void)_updateTitleFont;
- (void)_updateTitleLabelVisibility;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })assetContentBoundsInCoordinateSpace:(id)arg1;
- (bool)assetContentHidden;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })assetContentsRect;
- (id)assetView;
- (id)attributionView;
- (unsigned long long)badgeTypes;
- (id)badgeView;
- (bool)blursDegradedContent;
- (id)caption;
- (id)currentAssetImage;
- (void)dealloc;
- (id)error;
- (id)focusInfo;
- (id /* block */)focusInfoChangeHandler;
- (id)gadgetSpec;
- (id)highlight;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isDisplayingFullQualityContent;
- (id)keyAsset;
- (void)layoutSubviews;
- (id)mediaProvider;
- (long long)mode;
- (void)photoLibraryDidChangeOnMainQueue:(id)arg1;
- (id)previewAssetView;
- (id)roundedOverlayView;
- (void)setAssetContentHidden:(bool)arg1;
- (void)setAssetView:(id)arg1;
- (void)setAttributionView:(id)arg1;
- (void)setBadgeTypes:(unsigned long long)arg1;
- (void)setBadgeView:(id)arg1;
- (void)setBlursDegradedContent:(bool)arg1;
- (void)setCaption:(id)arg1;
- (void)setFocusInfoChangeHandler:(id /* block */)arg1;
- (void)setGadgetSpec:(id)arg1;
- (void)setHighlight:(id)arg1;
- (void)setKeyAsset:(id)arg1;
- (void)setMediaProvider:(id)arg1;
- (void)setMode:(long long)arg1;
- (void)setRoundedOverlayView:(id)arg1;
- (void)setShouldShowSyndicationAttributionView:(bool)arg1;
- (void)setSubtitle:(id)arg1;
- (void)setSuggestion:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)settings:(id)arg1 changedValueForKey:(id)arg2;
- (bool)shouldShowSyndicationAttributionView;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (id)subtitle;
- (id)subtitleLabel;
- (id)suggestion;
- (id)syndicationReplyActionFromAttributionView;
- (id)title;
- (id)titleLabel;
- (void)traitCollectionDidChange:(id)arg1;

@end
