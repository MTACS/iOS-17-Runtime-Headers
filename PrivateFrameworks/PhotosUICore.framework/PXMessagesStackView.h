
@interface PXMessagesStackView : UIView <PXAssetsDataSourceManagerObserver, PXEventCoalescerObserver, PXGAssetBadgeDecorationSource, PXGDisplayAssetSource, PXGSelectionDecorationSource, PXGShadowSource, PXGSolidColorOverlayDecorationSource, PXGSolidColorSource, PXGTapbackDecorationSource, PXGViewSource, PXMessagesStackItemsLayoutDelegate, PXMessagesStackItemsLayoutPrimaryItemDelegate, PXPhotosGridStackTransitionEndpoint, PXScrollViewControllerObserver, UIGestureRecognizerDelegate, UIViewControllerTransitioningDelegate> {
    PXMessagesStackActivityIndicatorViewUserData * _activityIndicatorViewUserData;
    struct { 
        unsigned long long count; 
        long long type; 
    }  _additionalItemsCount;
    bool  _allowPlayableContentLoading;
    PXPhotosGridAssetDecorationSource * _assetDecorationSource;
    PXMessagesStackAdditionalItemsViewUserData * _cachedAdditionalItemsUserData;
    <PXDisplayAssetFetchResult> * _cachedClampedFetchResult;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _cachedClampedItemRange;
    PXMessagesStackPlaybackControlUserData * _cachedPlaybackControlUserData;
    NSShadow * _centerItemShadow;
    PXAssetsDataSource * _currentDataSource;
    PXGDisplayAssetVideoPresentationController * _currentVideoPresentationController;
    PXAssetsDataSourceManager * _dataSourceManager;
    bool  _debugColorModeEnabled;
    PXGDecoratingLayout * _decoratingLayout;
    <PXMessagesStackViewDelegate> * _delegate;
    struct { 
        bool didSelectAssetReference; 
        bool didChangeCurrentAssetReference; 
        bool shouldAutoplayAsset; 
        bool didSelectAdditionalItems; 
    }  _delegateRespondsTo;
    NSSet * _hiddenAssetReferences;
    long long  _horizontalAlignment;
    long long  _indexToRestore;
    bool  _isProgramaticallyScrolling;
    struct PXSimpleIndexPath { 
        long long dataSourceIdentifier; 
        long long section; 
        long long item; 
        long long subitem; 
    }  _lastKnownPrimaryIndex;
    PXMessagesStackItemsLayout * _layout;
    PXUIMediaProvider * _mediaProvider;
    PXMessagesStackPlaybackControlViewModel * _playbackControlViewModel;
    bool  _providesLoadingAppearanceAndBehavior;
    bool  _selectionOverlayEnabled;
    bool  _settled;
    PXEventCoalescer * _settledEventCoalescer;
    UITapGestureRecognizer * _tapGestureRecognizer;
    UIView * _transitionPlaceholderView;
    PXGView * _tungstenView;
    bool  _useAspectTiles;
    double  _verticalContentInsets;
    PXLRUMemoryCache * _videoPresentationControllersByItem;
}

@property (nonatomic) struct { unsigned long long x1; long long x2; } additionalItemsCount;
@property (nonatomic) bool allowPlayableContentLoading;
@property (nonatomic, readonly) PXAssetReference *currentAssetReference;
@property (nonatomic, retain) PXAssetsDataSource *currentDataSource;
@property (nonatomic, readonly) unsigned long long currentIndex;
@property (nonatomic, retain) PXGDisplayAssetVideoPresentationController *currentVideoPresentationController;
@property (nonatomic, retain) PXAssetsDataSourceManager *dataSourceManager;
@property (nonatomic) bool debugColorModeEnabled;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PXMessagesStackViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) <UIViewControllerTransitioningDelegate> *gridTransitioningDelegate;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSSet *hiddenAssetReferences;
@property (nonatomic) long long horizontalAlignment;
@property (nonatomic, readonly) double horizontalContentMargin;
@property (nonatomic) double leftEdgeHorizontalContentMarginAdjustment;
@property (nonatomic, retain) PXUIMediaProvider *mediaProvider;
@property (nonatomic, readonly) UIPanGestureRecognizer *panGestureRecognizer;
@property (nonatomic) bool providesLoadingAppearanceAndBehavior;
@property (nonatomic) double rightEdgeHorizontalContentMarginAdjustment;
@property (nonatomic) bool selectionOverlayEnabled;
@property (getter=isSettled, nonatomic) bool settled;
@property (readonly) Class superclass;
@property (nonatomic, readonly) UITapGestureRecognizer *tapGestureRecognizer;
@property (nonatomic, retain) <PXTapbackStatusManager> *tapbackStatusManager;
@property (nonatomic, retain) UIView *transitionPlaceholderView;
@property (nonatomic) bool useAspectTiles;
@property (nonatomic) double verticalContentInsets;

- (void).cxx_destruct;
- (void)_handleTap:(id)arg1;
- (bool)_isSpriteReferenceForPrimaryItem:(id)arg1;
- (id)_presentationControllerForAsset:(id)arg1;
- (id)_regionOfInterestForAssetReference:(id)arg1 forTransitioning:(bool)arg2;
- (bool)_shouldAutoplayAsset:(id)arg1;
- (id)_trackingContainerViewForAssetReference:(id)arg1;
- (void)_updateCurrentPresentationController;
- (void)_updateDataSource;
- (Class)_viewClassForSpriteAtIndex:(unsigned int)arg1 inDecoratingLayout:(id)arg2;
- (id)_viewUserDataForSpriteAtIndex:(unsigned int)arg1 inDecoratingLayout:(id)arg2;
- (struct { unsigned long long x1; long long x2; })additionalItemsCount;
- (bool)allowPlayableContentLoading;
- (double)alphaForShadowAtSpriteIndex:(unsigned int)arg1 inLayout:(id)arg2;
- (id)animationControllerForDismissedController:(id)arg1;
- (id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (struct PXAssetBadgeInfo { unsigned long long x1; double x2; long long x3; long long x4; })assetBadgeInfoForAsset:(id)arg1 atSpriteIndex:(unsigned int)arg2 inLayout:(id)arg3;
- (id)colorAtIndex:(unsigned int)arg1 inLayout:(id)arg2;
- (double)cornerRadiusForShadowSpriteAtIndex:(unsigned int)arg1 inLayout:(id)arg2;
- (id)currentAssetReference;
- (id)currentDataSource;
- (unsigned long long)currentIndex;
- (id)currentVideoPresentationController;
- (id)dataSourceManager;
- (bool)debugColorModeEnabled;
- (id)delegate;
- (unsigned long long)desiredPlaceholderStyleInLayout:(id)arg1;
- (id)displayAssetFetchResultForSpritesInRange:(struct _PXGSpriteIndexRange { unsigned int x1; unsigned int x2; })arg1 inLayout:(id)arg2;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)gridTransitioningDelegate;
- (bool)hasTapbacksForSpriteIndex:(unsigned int)arg1 inLayout:(id)arg2;
- (id)hiddenAssetReferences;
- (long long)horizontalAlignment;
- (double)horizontalContentMargin;
- (double)horizontalContentMarginForSize:(struct CGSize { double x1; double x2; })arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)installTransitionSnapshotViewForAssetReference:(id)arg1 uncroppedImageFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg2;
- (id)interactionControllerForDismissal:(id)arg1;
- (bool)isSettled;
- (double)itemsLayout:(id)arg1 aspectRatioForItem:(long long)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })itemsLayout:(id)arg1 bestCropRectForItem:(long long)arg2 withAspectRatio:(double)arg3;
- (long long)itemsLayout:(id)arg1 itemForObjectReference:(id)arg2 options:(unsigned long long)arg3;
- (id)itemsLayout:(id)arg1 objectReferenceForItem:(long long)arg2;
- (void)layoutSubviews;
- (double)leftEdgeHorizontalContentMarginAdjustment;
- (id)mediaProvider;
- (struct CGSize { double x1; double x2; })minSpriteSizeForPresentationStyle:(unsigned long long)arg1;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void*)arg3;
- (void)outputEventSignaledForCoalescer:(id)arg1;
- (long long)overallSelectionOrderAtSpriteIndex:(unsigned int)arg1 inLayout:(id)arg2;
- (struct { float x1; float x2; float x3; float x4; })overlayInsetsForSpriteIndex:(unsigned int)arg1 inLayout:(id)arg2;
- (id)panGestureRecognizer;
- (void)prepareForDisplay;
- (void)primaryItemDidChangeForStackItemsLayout:(id)arg1;
- (bool)providesLoadingAppearanceAndBehavior;
- (id)regionOfInterestForAssetReference:(id)arg1;
- (id)regionOfInterestForTransitioningAssetReference:(id)arg1;
- (void)removeTransitionSnapshotView;
- (double)rightEdgeHorizontalContentMarginAdjustment;
- (bool)scrollToAssetReference:(id)arg1 animated:(bool)arg2;
- (bool)scrollToIndex:(unsigned long long)arg1 animated:(bool)arg2;
- (void)scrollViewControllerDidEndScrolling:(id)arg1;
- (void)scrollViewControllerDidLayoutSubviews:(id)arg1;
- (void)scrollViewControllerWillBeginScrolling:(id)arg1;
- (void)scrollViewControllerWillEndScrolling:(id)arg1 withVelocity:(struct CGPoint { double x1; double x2; })arg2 targetContentOffset:(inout struct CGPoint { double x1; double x2; }*)arg3 currentContentOffset:(struct CGPoint { double x1; double x2; })arg4;
- (id)selectedSpriteIndexesInLayout:(id)arg1;
- (unsigned long long)selectionDecorationAdditionsInLayout:(id)arg1;
- (long long)selectionDecorationStyleInLayout:(id)arg1;
- (bool)selectionOverlayEnabled;
- (void)setAdditionalItemsCount:(struct { unsigned long long x1; long long x2; })arg1;
- (void)setAllowPlayableContentLoading:(bool)arg1;
- (void)setCurrentDataSource:(id)arg1;
- (void)setCurrentVideoPresentationController:(id)arg1;
- (void)setDataSourceManager:(id)arg1;
- (void)setDebugColorModeEnabled:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setHiddenAssetReferences:(id)arg1;
- (void)setHiddenAssetReferences:(id)arg1 animationType:(long long)arg2;
- (void)setHorizontalAlignment:(long long)arg1;
- (void)setLeftEdgeHorizontalContentMarginAdjustment:(double)arg1;
- (void)setMediaProvider:(id)arg1;
- (void)setProvidesLoadingAppearanceAndBehavior:(bool)arg1;
- (void)setRightEdgeHorizontalContentMarginAdjustment:(double)arg1;
- (void)setSelectionOverlayEnabled:(bool)arg1;
- (void)setSettled:(bool)arg1;
- (void)setTapbackStatusManager:(id)arg1;
- (void)setTransitionPlaceholderView:(id)arg1;
- (void)setUseAspectTiles:(bool)arg1;
- (void)setVerticalContentInsets:(double)arg1;
- (id)shadowForSpriteAtIndex:(unsigned int)arg1 inLayout:(id)arg2;
- (double)solidColorOverlayAlphaForSpriteIndex:(unsigned int)arg1 inLayout:(id)arg2;
- (id)solidColorOverlayForLayout:(id)arg1;
- (bool)stackItemsLayout:(id)arg1 itemHasTapback:(long long)arg2;
- (unsigned long long)supportedDisplayAssetPresentationStylesInLayout:(id)arg1;
- (id)tapGestureRecognizer;
- (struct { double x1; double x2; struct CGPoint { double x_3_1_1; double x_3_1_2; } x3; })tapbackConfigurationForProposedConfiguration:(struct { double x1; double x2; struct CGPoint { double x_3_1_1; double x_3_1_2; } x3; })arg1 spriteIndex:(unsigned int)arg2 inLayout:(id)arg3;
- (id)tapbackStatusManager;
- (id)transitionPlaceholderView;
- (bool)useAspectTiles;
- (double)verticalContentInsets;
- (id)videoPresentationControllerForDisplayAsset:(id)arg1 spriteIndex:(unsigned int)arg2 inLayout:(id)arg3;
- (Class)viewClassForSpriteAtIndex:(unsigned int)arg1 inLayout:(id)arg2;
- (id)viewUserDataForSpriteAtIndex:(unsigned int)arg1 inLayout:(id)arg2;
- (bool)wantsAssetBadgeDecorationsInLayout:(id)arg1;
- (bool)wantsFileSizeBadgesInLayout:(id)arg1;
- (bool)wantsInteractiveFavoriteBadgesInLayout:(id)arg1;
- (bool)wantsTapbackDecorationInLayout:(id)arg1;

@end
