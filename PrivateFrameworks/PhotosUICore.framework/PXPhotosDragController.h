
@interface PXPhotosDragController : NSObject <PXAssetCollectionActionPerformerDelegate, PXChangeObserver, PXLocalDragSessionDelegate, UIDragInteractionDelegate, UIDropInteractionDelegate> {
    PXAssetCollectionActionManager * _assetCollectionActionManager;
    bool  _canDragIn;
    UIView * _contentView;
    <PXPhotosDragControllerDelegate> * _delegate;
    UIDragInteraction * _dragInteraction;
    NSSet * _draggedAssetReferences;
    UIDropInteraction * _dropInteraction;
    PXAssetReference * _dropTargetAssetReference;
    NSSet * _excludedAssets;
    PXAssetReference * _hitAssetReference;
    bool  _isDragSessionActive;
    bool  _isUpdatingExcludedAssets;
    NSMutableSet * _localDragSessions;
    bool  _reorderFeedbackEnabled;
    _UIDragSnappingFeedbackGenerator * _reorderFeedbackGenerator;
    PXSectionedSelectionManager * _selectionManager;
    PXUpdater * _updater;
}

@property (nonatomic, readonly) PXAssetCollectionActionManager *assetCollectionActionManager;
@property (nonatomic) bool canDragIn;
@property (nonatomic, readonly) UIView *contentView;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) <PXPhotosDragControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) UIDragInteraction *dragInteraction;
@property (nonatomic, retain) NSSet *draggedAssetReferences;
@property (nonatomic, retain) UIDropInteraction *dropInteraction;
@property (nonatomic, retain) PXAssetReference *dropTargetAssetReference;
@property (nonatomic, retain) NSSet *excludedAssets;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) PXAssetReference *hitAssetReference;
@property (nonatomic) bool isDragSessionActive;
@property (nonatomic) bool isUpdatingExcludedAssets;
@property (nonatomic, readonly) NSMutableSet *localDragSessions;
@property (nonatomic, readonly) <PXMemoryAssetsActionFactory> *memoryAssetsActionFactory;
@property (nonatomic) bool reorderFeedbackEnabled;
@property (nonatomic, readonly) _UIDragSnappingFeedbackGenerator *reorderFeedbackGenerator;
@property (nonatomic, readonly) PXSectionedSelectionManager *selectionManager;
@property (readonly) Class superclass;
@property (nonatomic, readonly) PXUpdater *updater;
@property (nonatomic, readonly) UIViewController *viewControllerForPresentation;

- (void).cxx_destruct;
- (id)_actionManagerForDropSession:(id)arg1;
- (bool)_addDraggedAssetReferences:(id)arg1 toLocalSession:(id)arg2;
- (id)_assetReferenceForDragItem:(id)arg1;
- (id)_createDragItemForAssetReference:(id)arg1;
- (id)_createLocalSession;
- (id)_draggableAssetReferenceAtLocation:(struct CGPoint { double x1; double x2; })arg1;
- (void)_localSessionForDragSession:(id)arg1 changeBlock:(id /* block */)arg2;
- (void)_localSessionForDropSession:(id)arg1 changeBlock:(id /* block */)arg2;
- (void)_presentConfidentialityWarning;
- (void)_pruneLocalSessionIfFinished:(id)arg1;
- (void)_removeDraggedAssetReferece:(id)arg1 fromLocalSession:(id)arg2;
- (void)_setupWithContentView:(id)arg1;
- (unsigned long long)_supportedDropOperationForSession:(id)arg1;
- (void)_updateDraggedAssetReferences;
- (void)_updateDropTarget;
- (void)_updateExcludedAssets;
- (void)_updateIsDragSessionActive;
- (void)_updateTrackedAssetReferences;
- (bool)actionPerformer:(id)arg1 dismissViewController:(id)arg2 completionHandler:(id /* block */)arg3;
- (bool)actionPerformer:(id)arg1 presentViewController:(id)arg2;
- (id)assetCollectionActionManager;
- (bool)canDragIn;
- (bool)canDragOut;
- (id)contentView;
- (id)delegate;
- (id)dragInteraction;
- (void)dragInteraction:(id)arg1 item:(id)arg2 willAnimateCancelWithAnimator:(id)arg3;
- (id)dragInteraction:(id)arg1 itemsForAddingToSession:(id)arg2 withTouchAtPoint:(struct CGPoint { double x1; double x2; })arg3;
- (id)dragInteraction:(id)arg1 itemsForBeginningSession:(id)arg2;
- (id)dragInteraction:(id)arg1 previewForCancellingItem:(id)arg2 withDefault:(id)arg3;
- (id)dragInteraction:(id)arg1 previewForLiftingItem:(id)arg2 session:(id)arg3;
- (void)dragInteraction:(id)arg1 session:(id)arg2 didEndWithOperation:(unsigned long long)arg3;
- (void)dragInteraction:(id)arg1 session:(id)arg2 willAddItems:(id)arg3 forInteraction:(id)arg4;
- (id)dragInteraction:(id)arg1 sessionForAddingItems:(id)arg2 withTouchAtPoint:(struct CGPoint { double x1; double x2; })arg3;
- (void)dragInteraction:(id)arg1 sessionWillBegin:(id)arg2;
- (void)dragInteraction:(id)arg1 willAnimateLiftWithAnimator:(id)arg2 session:(id)arg3;
- (id)draggedAssetReferences;
- (id)dropInteraction;
- (bool)dropInteraction:(id)arg1 canHandleSession:(id)arg2;
- (void)dropInteraction:(id)arg1 concludeDrop:(id)arg2;
- (void)dropInteraction:(id)arg1 performDrop:(id)arg2;
- (id)dropInteraction:(id)arg1 previewForDroppingItem:(id)arg2 withDefault:(id)arg3;
- (void)dropInteraction:(id)arg1 sessionDidEnd:(id)arg2;
- (void)dropInteraction:(id)arg1 sessionDidEnter:(id)arg2;
- (void)dropInteraction:(id)arg1 sessionDidExit:(id)arg2;
- (id)dropInteraction:(id)arg1 sessionDidUpdate:(id)arg2;
- (id)dropTargetAssetReference;
- (id)excludedAssets;
- (id)hitAssetReference;
- (id)hostViewControllerForActionPerformer:(id)arg1;
- (id)init;
- (id)initWithContentView:(id)arg1 selectionManager:(id)arg2 assetCollectionActionManager:(id)arg3 delegate:(id)arg4;
- (bool)isDragSessionActive;
- (bool)isUpdatingExcludedAssets;
- (void)localDragSession:(id)arg1 didChangeProperty:(SEL)arg2;
- (id)localDragSessions;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void*)arg3;
- (void)removeFromView;
- (bool)reorderFeedbackEnabled;
- (id)reorderFeedbackGenerator;
- (id)scrollView;
- (id)selectionManager;
- (void)setCanDragIn:(bool)arg1;
- (void)setDraggedAssetReferences:(id)arg1;
- (void)setDropInteraction:(id)arg1;
- (void)setDropTargetAssetReference:(id)arg1;
- (void)setExcludedAssets:(id)arg1;
- (void)setHitAssetReference:(id)arg1;
- (void)setIsDragSessionActive:(bool)arg1;
- (void)setIsUpdatingExcludedAssets:(bool)arg1;
- (void)setReorderFeedbackEnabled:(bool)arg1;
- (id)undoManagerForActionPerformer:(id)arg1;
- (id)updater;
- (id)viewControllerForPresentation;

@end
