
@interface PXPhotoKitCollectionsDataSourceManager : PXCollectionsDataSourceManager <PXChangeObserver, PXCollectionFetchOperationDelegate, PXPhotoLibraryUIChangeObserver> {
    NSArray * __collectionListBySection;
    NSArray * __collectionsFetchResultBySection;
    NSMutableDictionary * __subCollectionActiveCountFetchOperations;
    NSMutableDictionary * __subCollectionActiveKeyAssetsFetchOperations;
    NSArray * __virtualCollections;
    NSMutableSet * _changeProcessingPausedReasons;
    NSMutableSet * _changedSubCollections;
    NSMutableArray * _changesDetailsWhilePaused;
    bool  _changesOccurredWhilePaused;
    NSPredicate * _collectionFilterPredicate;
    NSMutableDictionary * _collectionIndexPathByCollection;
    PHCollectionList * _collectionList;
    PHFetchResult * _collectionsFetchResult;
    PXPhotoKitCollectionsDataSourceManagerConfiguration * _configuration;
    PXContentSyndicationConfigurationProvider * _contentSyndicationConfigurationProvider;
    bool  _isChangeProcessingPaused;
    bool  _isInitialDuplicateDetectorProcessingCompleted;
    bool  _isPhotoLibraryEmpty;
    NSDate * _lastDuplicatesProcessingCheckDate;
    double  _lastPublishChangesTime;
    PXLibraryFilterState * _libraryFilterState;
    long long  _pausedChangeDetailsBufferLength;
    NSMutableSet * _pendingChangedCollections;
    PHPhotoLibrary * _photoLibrary;
    bool  _preparedBackgroundFetching;
    bool  _publishChangesScheduledOnRunLoop;
    bool  _simulateNonIncrementalChanges;
    NSOperationQueue * _subCollectionFetchOperationQueue;
    NSMutableDictionary * _subCollectionFetchResultsCache;
    NSMutableDictionary * _subCollectionKeyAssetFetchResultsCache;
    NSOperationQueue * _subCollectionKeyAssetsFetchOperationQueue;
    NSUserDefaults * _userDefaults;
}

@property (setter=_setCollectionListBySection:, nonatomic, retain) NSArray *_collectionListBySection;
@property (setter=_setCollectionsFetchResultBySection:, nonatomic, retain) NSArray *_collectionsFetchResultBySection;
@property (nonatomic, readonly) NSMutableDictionary *_subCollectionActiveCountFetchOperations;
@property (nonatomic, readonly) NSMutableDictionary *_subCollectionActiveKeyAssetsFetchOperations;
@property (nonatomic, retain) NSArray *_virtualCollections;
@property (nonatomic, readonly) NSPredicate *collectionFilterPredicate;
@property (nonatomic, readonly) PHCollectionList *collectionList;
@property (nonatomic, readonly) PHFetchResult *collectionsFetchResult;
@property (nonatomic, readonly) PXPhotoKitCollectionsDataSourceManagerConfiguration *configuration;
@property (nonatomic, readonly) PXPhotoKitCollectionsDataSource *dataSource;
@property (readonly) NSObject<OS_os_log> *dataSourceManagerLog;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isChangeProcessingPaused;
@property (nonatomic) bool isInitialDuplicateDetectorProcessingCompleted;
@property (nonatomic, readonly) PXLibraryFilterState *libraryFilterState;
@property (nonatomic, readonly) long long numberOfPendingKeyAssetFetches;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSUserDefaults *userDefaults;

+ (id)sharedKeyAssetsFetchQueue;
+ (id)sharedSubCollectionsFetchQueue;
+ (id)standardDataSourceManagerForCollectionList:(id)arg1;

- (void).cxx_destruct;
- (void)_cancelAllBackgroundFetches;
- (id)_changedSubCollectionIndexesBySections;
- (id)_collectionListBySection;
- (id)_collectionsFetchResultBySection;
- (bool)_containsAnyAlbumsWithAssets:(id)arg1;
- (bool)_containsAnyAssets:(id)arg1;
- (void)_endSignpostForFetchOperation:(id)arg1;
- (void)_enqueueFetchCountsOperationForCollection:(id)arg1;
- (void)_enqueueFetchKeyAssetsOperationForCollection:(id)arg1;
- (void)_enumerateAllPhotoKitCollectionsUsingBlock:(id /* block */)arg1;
- (id)_filterFetchResult:(id)arg1;
- (unsigned long long)_fixedOrderPriorityForVirtualCollection:(id)arg1;
- (id)_getSectionedCollectionListAndFetchResultsFromFetchResult:(id)arg1;
- (bool)_isEmpty;
- (bool)_isImportsAssetCollection:(id)arg1;
- (bool)_isPlacesAlbumAssetCollection:(id)arg1;
- (id)_keyAssetFetchResultForSubCollection:(id)arg1 fetchIfNeeded:(bool)arg2;
- (bool)_needsFetchResultForCollection:(id)arg1;
- (bool)_needsKeyAssetsFetchResultForCollection:(id)arg1;
- (id)_newDataSource;
- (void)_prepareBackgroundFetchingIfNeeded;
- (void)_prepareBackgroundFetchingIfNeededForCollection:(id)arg1;
- (void)_publishPendingCollectionChanges;
- (void)_recursivelyCollectCollectionsIn:(id)arg1 fetchResult:(id)arg2;
- (void)_recursivelyEnumerateAssetCollectionsInFetchResult:(id)arg1 block:(id /* block */)arg2;
- (void)_registerContentSyndicationConfigurationProviderChangeObserver;
- (void)_reloadAndRestartBackgroundFetchesIfNeeded;
- (void)_setCollectionListBySection:(id)arg1;
- (void)_setCollectionsFetchResultBySection:(id)arg1;
- (bool)_shouldIncludeCollection:(id)arg1;
- (id)_subCollectionActiveCountFetchOperations;
- (id)_subCollectionActiveKeyAssetsFetchOperations;
- (id)_subitemChangeDetailsByItemBySection;
- (bool)_updateCachedSubCollectionFetchResultsForChange:(id)arg1 fetchResultChangeDetails:(id)arg2;
- (void)_updateCollectionIndexMappingForFilteredFetchResults;
- (void)_updateDataSourceForChangeOnCollection:(id)arg1;
- (void)_updateFilteredCollectionsFetchResults;
- (void)_updateKeyAssetsCacheForCollection:(id)arg1 withFetchResult:(id)arg2 otherFetchResultsByAssetCollection:(id)arg3;
- (void)_updateVisibleCountsForCollection:(id)arg1 withWithFetchResult:(id)arg2;
- (id)_virtualCollections;
- (id)assetsFetchResultForCollection:(id)arg1;
- (id)assetsFetchResultForCollection:(id)arg1 fetchIfNeeded:(bool)arg2;
- (bool)canDeleteCollection:(id)arg1;
- (bool)canEditAlbums;
- (bool)canRenameCollection:(id)arg1;
- (bool)canReorderCollection:(id)arg1;
- (void)collectionFetchOperationDidBegin:(id)arg1;
- (void)collectionFetchOperationDidCancel:(id)arg1;
- (void)collectionFetchOperationDidComplete:(id)arg1;
- (id)collectionFilterPredicate;
- (id)collectionList;
- (id)collectionsFetchResult;
- (id)configuration;
- (bool)containsAnyAssets:(id)arg1;
- (id)createInitialDataSource;
- (id)customFetchOptionsForCollection:(id)arg1;
- (id)dataSourceManagerLog;
- (void)dealloc;
- (id)description;
- (id)displayableAssetsForCollectionList:(id)arg1 maximumCount:(long long)arg2 useCache:(bool)arg3 correspondingCollections:(out id*)arg4;
- (long long)estimatedCountForAssetCollection:(id)arg1;
- (id)fetchResultForSubCollection:(id)arg1;
- (void)getDisplayableAssets:(id*)arg1 indexes:(id*)arg2 forCollection:(id)arg3 maximumCount:(long long)arg4 useCache:(bool)arg5;
- (bool)hasAssetsFetchResultForCollection:(id)arg1;
- (unsigned long long)indexOfFirstReorderableCollection;
- (id)indexPathForCollection:(id)arg1;
- (id)initWithConfiguration:(id)arg1;
- (bool)isBackgroundFetching;
- (bool)isCachedFetchResultOutdatedForCollection:(id)arg1;
- (bool)isChangeProcessingPaused;
- (bool)isInitialDuplicateDetectorProcessingCompleted;
- (id)keyAssetsFetchResultForCollection:(id)arg1;
- (id)keyAssetsFetchResultForCollection:(id)arg1 fetchIfNeeded:(bool)arg2;
- (id)libraryFilterState;
- (long long)numberOfPendingKeyAssetFetches;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void*)arg3;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)pauseBackgroundFetching;
- (void)photoLibraryDidChangeOnMainQueue:(id)arg1;
- (void)prepareBackgroundFetchingIfNeeded;
- (id)prepareForPhotoLibraryChange:(id)arg1;
- (void)setChangeProcessingPaused:(bool)arg1 forReason:(id)arg2;
- (void)setCollectionFilterPredicate:(id)arg1;
- (void)setDataSource:(id)arg1 changeDetailsArray:(id)arg2;
- (void)setIsChangeProcessingPaused:(bool)arg1;
- (void)setIsInitialDuplicateDetectorProcessingCompleted:(bool)arg1;
- (void)set_virtualCollections:(id)arg1;
- (void)startBackgroundFetchingIfNeeded;
- (void)startCoalescingFetchResultChanges;
- (void)stopCoalescingAndPublishFetchResultChanges;
- (id)uncachedFetchResultForSubCollection:(id)arg1;
- (id)uncachedKeyAssetFetchResultForSubCollection:(id)arg1;
- (id)userDefaults;
- (void)waitUntilBackgroundFetchingFinishedWithCompletionBlock:(id /* block */)arg1;

@end
