
@interface PXStoryConfiguration : NSObject <NSCopying, PXStoryQueueParticipant> {
    bool  _allowPlayingMultipleStoriesSimulatenously;
    NSIndexSet * _allowedTransitionKinds;
    <PXDisplayAssetCollection> * _assetCollection;
    <PXAssetCollectionActionPerformerDelegate> * _assetCollectionActionPerformerDelegate;
    <PXDisplayAssetFetchResult> * _assets;
    <PXCloudCapabilitiesProvider> * _cloudCapabilitiesProvider;
    long long  _collectionPersistenceConfirmationStyle;
    <PXTapToRadarDiagnosticProvider> * _containerTapToRadarDiagnosticsProvider;
    <PXDisplayAsset> * _desiredStartAsset;
    <PXStoryDetailedSaliencyProducer> * _detailedSaliencyProducer;
    bool  _disableBufferingController;
    bool  _disableNUp;
    bool  _disableRotationClipMotionStyle;
    bool  _disableVideoPlayback;
    <PXStoryErrorReporter> * _errorReporter;
    PXStoryErrorRepository * _errorRepository;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _fixedSegmentDuration;
    bool  _forcePanUpOrDownInOneUpKenBurnsWithPortraitAspectAsset;
    long long  _initialViewMode;
    double  _kenBurnsPanSpeed;
    double  _kenBurnsScaleSpeed;
    <PXDisplayAsset> * _keyAsset;
    long long  _keyAssetAspectRatioOverride;
    unsigned long long  _keyAssetKenBurnsPanDirection;
    unsigned long long  _keyAssetKenBurnsScaleDirection;
    NSString * _launchType;
    NSObject<OS_os_log> * _log;
    unsigned long long  _logContext;
    PXMediaProvider * _mediaProvider;
    long long  _movementAnimationCurve;
    <PXStoryMusicCurationProvider> * _musicCurationProvider;
    bool  _nUpCompositionIgnoresOverallTargetDuration;
    double  _noncriticalBufferingTimeout;
    unsigned long long  _options;
    long long  _otherAssetsAspectRatioOverride;
    PXStoryConfiguration * _parentConfiguration;
    <PFStoryRecipe> * _persistableRecipe;
    bool  _preferAssetLocationAndCreationDateForClipTitleAndSubtitle;
    bool  _preferFaceCrops;
    NSObject<PXAnonymousViewController> * _presentingViewController;
    NSArray * _referencePersons;
    <PXStoryRelatedProducer> * _relatedProducer;
    bool  _shouldFadeToBlackAtEnd;
    bool  _shouldReplayAtEnd;
    PXStorySongsConfiguration * _songsConfiguration;
    long long  _songsProducerKind;
    NSObject<OS_dispatch_queue> * _storyQueue;
    <PXStoryStyleProducer> * _styleProducer;
    <PXStoryTimelineProducer> * _timelineProducer;
    bool  _useLowMemoryMode;
    bool  _usePreferredCropRectWhenVerticallyPanningLargeFaceAreasInPortraitAssets;
    <PXUserDefaultsDataSource> * _userDefaults;
    NSMutableDictionary * _userInfo;
    PXVolumeController * _volumeController;
    bool  _wantsTitles;
}

@property (nonatomic) bool allowPlayingMultipleStoriesSimulatenously;
@property (nonatomic, retain) NSIndexSet *allowedTransitionKinds;
@property (nonatomic, readonly) <PXDisplayAssetCollection> *assetCollection;
@property (nonatomic) <PXAssetCollectionActionPerformerDelegate> *assetCollectionActionPerformerDelegate;
@property (nonatomic, readonly) <PXDisplayAssetFetchResult> *assets;
@property (nonatomic, retain) <PXCloudCapabilitiesProvider> *cloudCapabilitiesProvider;
@property (nonatomic) long long collectionPersistenceConfirmationStyle;
@property (nonatomic) <PXTapToRadarDiagnosticProvider> *containerTapToRadarDiagnosticsProvider;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) <PXDisplayAsset> *desiredStartAsset;
@property (nonatomic, retain) <PXStoryDetailedSaliencyProducer> *detailedSaliencyProducer;
@property (nonatomic) bool disableBufferingController;
@property (nonatomic) bool disableNUp;
@property (nonatomic) bool disableRotationClipMotionStyle;
@property (nonatomic) bool disableVideoPlayback;
@property (nonatomic, readonly) <PXStoryErrorReporter> *errorReporter;
@property (nonatomic, readonly) PXStoryErrorRepository *errorRepository;
@property (nonatomic) struct { long long x1; int x2; unsigned int x3; long long x4; } fixedSegmentDuration;
@property (nonatomic) bool forcePanUpOrDownInOneUpKenBurnsWithPortraitAspectAsset;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long initialViewMode;
@property (nonatomic, readonly) bool isAppleMusicPreview;
@property (nonatomic, readonly) bool isExportPreview;
@property (nonatomic, readonly) bool isPresentedForAirPlay;
@property (nonatomic, readonly) bool isRelated;
@property (nonatomic) double kenBurnsPanSpeed;
@property (nonatomic) double kenBurnsScaleSpeed;
@property (nonatomic, readonly) <PXDisplayAsset> *keyAsset;
@property (nonatomic) long long keyAssetAspectRatioOverride;
@property (nonatomic) unsigned long long keyAssetKenBurnsPanDirection;
@property (nonatomic) unsigned long long keyAssetKenBurnsScaleDirection;
@property (nonatomic, retain) NSString *launchType;
@property (nonatomic, retain) NSObject<OS_os_log> *log;
@property (nonatomic) unsigned long long logContext;
@property (nonatomic, retain) PXMediaProvider *mediaProvider;
@property (nonatomic) long long movementAnimationCurve;
@property (nonatomic, retain) <PXStoryMusicCurationProvider> *musicCurationProvider;
@property (nonatomic) bool nUpCompositionIgnoresOverallTargetDuration;
@property (nonatomic) double noncriticalBufferingTimeout;
@property (nonatomic) unsigned long long options;
@property (nonatomic) long long otherAssetsAspectRatioOverride;
@property (nonatomic, readonly) PXStoryConfiguration *parentConfiguration;
@property (nonatomic, readonly) <PFStoryRecipe> *persistableRecipe;
@property (nonatomic, readonly) PHAssetCollection *photoKitAssetCollection;
@property (nonatomic, readonly) PHPhotoLibrary *photoLibrary;
@property (nonatomic) bool preferAssetLocationAndCreationDateForClipTitleAndSubtitle;
@property (nonatomic) bool preferFaceCrops;
@property (nonatomic) NSObject<PXAnonymousViewController> *presentingViewController;
@property (nonatomic, readonly) NSArray *referencePersons;
@property (nonatomic, retain) <PXStoryRelatedProducer> *relatedProducer;
@property (nonatomic, readonly) bool shouldDismissAtEnd;
@property (nonatomic) bool shouldFadeToBlackAtEnd;
@property (nonatomic) bool shouldReplayAtEnd;
@property (nonatomic, retain) PXStorySongsConfiguration *songsConfiguration;
@property (nonatomic) long long songsProducerKind;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *storyQueue;
@property (nonatomic, retain) <PXStoryStyleProducer> *styleProducer;
@property (readonly) Class superclass;
@property (nonatomic, retain) <PXStoryTimelineProducer> *timelineProducer;
@property (nonatomic) bool useLowMemoryMode;
@property (nonatomic) bool usePreferredCropRectWhenVerticallyPanningLargeFaceAreasInPortraitAssets;
@property (nonatomic, retain) <PXUserDefaultsDataSource> *userDefaults;
@property (nonatomic, readonly) NSMutableDictionary *userInfo;
@property (nonatomic, retain) PXVolumeController *volumeController;
@property (nonatomic) bool wantsTitles;

- (void).cxx_destruct;
- (void)_copyPropertiesFromConfiguration:(id)arg1;
- (bool)allowPlayingMultipleStoriesSimulatenously;
- (id)allowedTransitionKinds;
- (id)assetCollection;
- (id)assetCollectionActionPerformerDelegate;
- (id)assets;
- (id)cloudCapabilitiesProvider;
- (long long)collectionPersistenceConfirmationStyle;
- (id)containerTapToRadarDiagnosticsProvider;
- (id)copyForMusicPreviewWithCuratedSongs:(id)arg1;
- (id)copyWithAdditionalOptions:(unsigned long long)arg1;
- (id)copyWithAssetCollection:(id)arg1;
- (id)copyWithKeyAsset:(id)arg1;
- (id)copyWithParentConfiguration:(id)arg1;
- (id)copyWithStoryQueue:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)desiredStartAsset;
- (id)detailedSaliencyProducer;
- (bool)disableBufferingController;
- (bool)disableNUp;
- (bool)disableRotationClipMotionStyle;
- (bool)disableVideoPlayback;
- (id)errorReporter;
- (id)errorRepository;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })fixedSegmentDuration;
- (bool)forcePanUpOrDownInOneUpKenBurnsWithPortraitAspectAsset;
- (id)init;
- (id)initWithAssetCollection:(id)arg1;
- (id)initWithAssetCollection:(id)arg1 assets:(id)arg2 keyAsset:(id)arg3 referencePersons:(id)arg4 persistableRecipe:(id)arg5 musicCurationProvider:(id)arg6 errorRepository:(id)arg7 queue:(id)arg8 parentConfiguration:(id)arg9;
- (id)initWithAssetCollection:(id)arg1 keyAsset:(id)arg2;
- (id)initWithAssetCollection:(id)arg1 keyAsset:(id)arg2 referencePersons:(id)arg3;
- (id)initWithAssets:(id)arg1;
- (id)initWithAssets:(id)arg1 keyAsset:(id)arg2 persistableRecipe:(id)arg3;
- (id)initWithPersistableRecipe:(id)arg1;
- (id)initWithSyntheticAsset;
- (id)initWithSyntheticAssetCount:(long long)arg1;
- (long long)initialViewMode;
- (bool)isAppleMusicPreview;
- (bool)isExportPreview;
- (bool)isPresentedForAirPlay;
- (bool)isRelated;
- (double)kenBurnsPanSpeed;
- (double)kenBurnsScaleSpeed;
- (id)keyAsset;
- (long long)keyAssetAspectRatioOverride;
- (unsigned long long)keyAssetKenBurnsPanDirection;
- (unsigned long long)keyAssetKenBurnsScaleDirection;
- (id)launchType;
- (id)log;
- (unsigned long long)logContext;
- (id)mediaProvider;
- (long long)movementAnimationCurve;
- (id)musicCurationProvider;
- (bool)nUpCompositionIgnoresOverallTargetDuration;
- (double)noncriticalBufferingTimeout;
- (unsigned long long)options;
- (long long)otherAssetsAspectRatioOverride;
- (id)parentConfiguration;
- (id)persistableRecipe;
- (id)photoKitAssetCollection;
- (id)photoLibrary;
- (bool)preferAssetLocationAndCreationDateForClipTitleAndSubtitle;
- (bool)preferFaceCrops;
- (id)presentingViewController;
- (id)referencePersons;
- (id)relatedProducer;
- (void)setAllowPlayingMultipleStoriesSimulatenously:(bool)arg1;
- (void)setAllowedTransitionKinds:(id)arg1;
- (void)setAssetCollectionActionPerformerDelegate:(id)arg1;
- (void)setCloudCapabilitiesProvider:(id)arg1;
- (void)setCollectionPersistenceConfirmationStyle:(long long)arg1;
- (void)setContainerTapToRadarDiagnosticsProvider:(id)arg1;
- (void)setDesiredStartAsset:(id)arg1;
- (void)setDetailedSaliencyProducer:(id)arg1;
- (void)setDisableBufferingController:(bool)arg1;
- (void)setDisableNUp:(bool)arg1;
- (void)setDisableRotationClipMotionStyle:(bool)arg1;
- (void)setDisableVideoPlayback:(bool)arg1;
- (void)setFixedSegmentDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setForcePanUpOrDownInOneUpKenBurnsWithPortraitAspectAsset:(bool)arg1;
- (void)setInitialViewMode:(long long)arg1;
- (void)setKenBurnsPanSpeed:(double)arg1;
- (void)setKenBurnsScaleSpeed:(double)arg1;
- (void)setKeyAssetAspectRatioOverride:(long long)arg1;
- (void)setKeyAssetKenBurnsPanDirection:(unsigned long long)arg1;
- (void)setKeyAssetKenBurnsScaleDirection:(unsigned long long)arg1;
- (void)setLaunchType:(id)arg1;
- (void)setLog:(id)arg1;
- (void)setLogContext:(unsigned long long)arg1;
- (void)setMediaProvider:(id)arg1;
- (void)setMovementAnimationCurve:(long long)arg1;
- (void)setMusicCurationProvider:(id)arg1;
- (void)setNUpCompositionIgnoresOverallTargetDuration:(bool)arg1;
- (void)setNoncriticalBufferingTimeout:(double)arg1;
- (void)setOptions:(unsigned long long)arg1;
- (void)setOtherAssetsAspectRatioOverride:(long long)arg1;
- (void)setPreferAssetLocationAndCreationDateForClipTitleAndSubtitle:(bool)arg1;
- (void)setPreferFaceCrops:(bool)arg1;
- (void)setPresentingViewController:(id)arg1;
- (void)setRelatedProducer:(id)arg1;
- (void)setShouldFadeToBlackAtEnd:(bool)arg1;
- (void)setShouldReplayAtEnd:(bool)arg1;
- (void)setSongsConfiguration:(id)arg1;
- (void)setSongsProducerKind:(long long)arg1;
- (void)setStyleProducer:(id)arg1;
- (void)setTimelineProducer:(id)arg1;
- (void)setUseLowMemoryMode:(bool)arg1;
- (void)setUsePreferredCropRectWhenVerticallyPanningLargeFaceAreasInPortraitAssets:(bool)arg1;
- (void)setUserDefaults:(id)arg1;
- (void)setVolumeController:(id)arg1;
- (void)setWantsTitles:(bool)arg1;
- (bool)shouldDismissAtEnd;
- (bool)shouldFadeToBlackAtEnd;
- (bool)shouldReplayAtEnd;
- (id)songsConfiguration;
- (long long)songsProducerKind;
- (id)storyQueue;
- (id)styleProducer;
- (id)timelineProducer;
- (bool)useLowMemoryMode;
- (bool)usePreferredCropRectWhenVerticallyPanningLargeFaceAreasInPortraitAssets;
- (id)userDefaults;
- (id)userInfo;
- (id)volumeController;
- (bool)wantsTitles;

@end
