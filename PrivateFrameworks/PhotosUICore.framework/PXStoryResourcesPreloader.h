
@interface PXStoryResourcesPreloader : PXObservable <PXStoryMutableResourcesPreloader, PXStoryQueueParticipant> {
    double  _displayScale;
    NSObject<OS_dispatch_queue> * _estimationQueue;
    <PXStoryTimeline> * _estimationQueue_currentSessionTimeline;
    NSIndexSet * _estimationQueue_loadedSegments;
    NSArray * _estimationQueue_loadingSegments;
    unsigned long long  _estimationQueue_loadingStartTime;
    NSMutableIndexSet * _estimationQueue_segmentsToLoad;
    bool  _estimationQueue_sessionStarted;
    PXStoryResourcesPreloadingStatsStore * _estimationQueue_statsStore;
    double  _isExporting;
    NSOperationQueue * _loadingOperationQueue;
    PXStoryLoadingStatusReporter * _loadingStatusReporter;
    NSObject<OS_os_log> * _log;
    unsigned long long  _logContext;
    PXMediaProvider * _mediaProvider;
    NSObject<OS_dispatch_queue> * _stateQueue;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _stateQueue_currentPlaybackTime;
    PXStoryResourcesPreloadingRequest * _stateQueue_currentRequest;
    long long  _stateQueue_currentSegmentIdentifier;
    NSError * _stateQueue_error;
    NSString * _stateQueue_estimationDiagnostics;
    bool  _stateQueue_isLoadingLikelyToKeepUpWithPlayback;
    bool  _stateQueue_isLoadingLikelyToKeepUpWithPlaybackWasSet;
    long long  _stateQueue_lagsCount;
    struct { 
        struct { 
            long long value; 
            int timescale; 
            unsigned int flags; 
            long long epoch; 
        } start; 
        struct { 
            long long value; 
            int timescale; 
            unsigned int flags; 
            long long epoch; 
        } duration; 
    }  _stateQueue_loadedContinuousTimeRange;
    NSMutableIndexSet * _stateQueue_loadedSegments;
    NSMutableArray * _stateQueue_loadedTimeRanges;
    float  _stateQueue_loadingFractionComplete;
    NSCountedSet * _stateQueue_loadingSegments;
    PXStoryResourcesPreloadingRequest * _stateQueue_previousRequest;
    NSObject<OS_dispatch_queue> * _storyQueue;
    NSObject<OS_dispatch_queue> * _timelineReadingQueue;
    NSMutableIndexSet * _timelineReadingQueue_loadedSegments;
    PXUpdater * _updater;
    PXVideoSessionManager * _videoSessionManager;
}

@property (nonatomic) struct { long long x1; int x2; unsigned int x3; long long x4; } currentPlaybackTime;
@property (nonatomic, readonly) PXStoryResourcesPreloadingRequest *currentRequest;
@property (nonatomic) long long currentSegmentIdentifier;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSString *diagnosticDescription;
@property (nonatomic, readonly) double displayScale;
@property (nonatomic, readonly) NSError *error;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *estimationQueue;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) double isExporting;
@property (nonatomic, readonly) bool isLoadingLikelyToKeepUpWithPlayback;
@property (nonatomic, readonly) NSArray *loadedTimeRanges;
@property (nonatomic, readonly) float loadingFractionComplete;
@property (nonatomic, readonly) NSOperationQueue *loadingOperationQueue;
@property (nonatomic, readonly) PXStoryLoadingStatusReporter *loadingStatusReporter;
@property (retain) NSObject<OS_os_log> *log;
@property unsigned long long logContext;
@property (nonatomic, readonly) PXMediaProvider *mediaProvider;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *stateQueue;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *storyQueue;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *timelineReadingQueue;
@property (nonatomic, retain) NSMutableIndexSet *timelineReadingQueue_loadedSegments;
@property (nonatomic, readonly) PXUpdater *updater;
@property (nonatomic, readonly) PXVideoSessionManager *videoSessionManager;

- (void).cxx_destruct;
- (void)_accumulateLoadedTimeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg1 moreExpected:(bool)arg2;
- (void)_estimationNoteClipWithPlaybackStyle:(long long)arg1 loadedWithLoadingTime:(double)arg2;
- (void)_estimationNoteLoadingSegments:(id)arg1 loadedSegments:(id)arg2;
- (void)_estimationNoteSessionStartedWithSegmentsToLoad:(id)arg1 preloadableClipsCounts:(struct { long long x1; long long x2; long long x3; })arg2 inTimeline:(id)arg3;
- (void)_estimationQueue_updateEstimation;
- (void)_invalidateEstimation;
- (void)_invalidateProcessing;
- (bool)_isClipPreloadable:(struct { long long x1; long long x2; struct CGSize { double x_3_1_1; double x_3_1_2; } x3; unsigned long long x4; struct { struct { long long x_1_2_1; int x_1_2_2; unsigned int x_1_2_3; long long x_1_2_4; } x_5_1_1; struct { long long x_2_2_1; int x_2_2_2; unsigned int x_2_2_3; long long x_2_2_4; } x_5_1_2; struct { long long x_3_2_1; int x_3_2_2; unsigned int x_3_2_3; long long x_3_2_4; } x_5_1_3; struct { struct { long long x_1_3_1; int x_1_3_2; unsigned int x_1_3_3; long long x_1_3_4; } x_4_2_1; long long x_4_2_2; } x_5_1_4; BOOL x_5_1_5; } x5; long long x6; struct { struct CGSize { double x_1_2_1; double x_1_2_2; } x_7_1_1; struct CGRect { struct CGPoint { double x_1_3_1; double x_1_3_2; } x_2_2_1; struct CGSize { double x_2_3_1; double x_2_3_2; } x_2_2_2; } x_7_1_2; struct CGRect { struct CGPoint { double x_1_3_1; double x_1_3_2; } x_3_2_1; struct CGSize { double x_2_3_1; double x_2_3_2; } x_3_2_2; } x_7_1_3; struct CGRect { struct CGPoint { double x_1_3_1; double x_1_3_2; } x_4_2_1; struct CGSize { double x_2_3_1; double x_2_3_2; } x_4_2_2; } x_7_1_4; struct CGRect { struct CGPoint { double x_1_3_1; double x_1_3_2; } x_5_2_1; struct CGSize { double x_2_3_1; double x_2_3_2; } x_5_2_2; } x_7_1_5; } x7; })arg1;
- (bool)_isImagePreloadingNeededForClipInfo:(struct { long long x1; long long x2; struct CGSize { double x_3_1_1; double x_3_1_2; } x3; unsigned long long x4; struct { struct { long long x_1_2_1; int x_1_2_2; unsigned int x_1_2_3; long long x_1_2_4; } x_5_1_1; struct { long long x_2_2_1; int x_2_2_2; unsigned int x_2_2_3; long long x_2_2_4; } x_5_1_2; struct { long long x_3_2_1; int x_3_2_2; unsigned int x_3_2_3; long long x_3_2_4; } x_5_1_3; struct { struct { long long x_1_3_1; int x_1_3_2; unsigned int x_1_3_3; long long x_1_3_4; } x_4_2_1; long long x_4_2_2; } x_5_1_4; BOOL x_5_1_5; } x5; long long x6; struct { struct CGSize { double x_1_2_1; double x_1_2_2; } x_7_1_1; struct CGRect { struct CGPoint { double x_1_3_1; double x_1_3_2; } x_2_2_1; struct CGSize { double x_2_3_1; double x_2_3_2; } x_2_2_2; } x_7_1_2; struct CGRect { struct CGPoint { double x_1_3_1; double x_1_3_2; } x_3_2_1; struct CGSize { double x_2_3_1; double x_2_3_2; } x_3_2_2; } x_7_1_3; struct CGRect { struct CGPoint { double x_1_3_1; double x_1_3_2; } x_4_2_1; struct CGSize { double x_2_3_1; double x_2_3_2; } x_4_2_2; } x_7_1_4; struct CGRect { struct CGPoint { double x_1_3_1; double x_1_3_2; } x_5_2_1; struct CGSize { double x_2_3_1; double x_2_3_2; } x_5_2_2; } x_7_1_5; } x7; })arg1;
- (bool)_isVideoPreloadingNeededForClipInfo:(struct { long long x1; long long x2; struct CGSize { double x_3_1_1; double x_3_1_2; } x3; unsigned long long x4; struct { struct { long long x_1_2_1; int x_1_2_2; unsigned int x_1_2_3; long long x_1_2_4; } x_5_1_1; struct { long long x_2_2_1; int x_2_2_2; unsigned int x_2_2_3; long long x_2_2_4; } x_5_1_2; struct { long long x_3_2_1; int x_3_2_2; unsigned int x_3_2_3; long long x_3_2_4; } x_5_1_3; struct { struct { long long x_1_3_1; int x_1_3_2; unsigned int x_1_3_3; long long x_1_3_4; } x_4_2_1; long long x_4_2_2; } x_5_1_4; BOOL x_5_1_5; } x5; long long x6; struct { struct CGSize { double x_1_2_1; double x_1_2_2; } x_7_1_1; struct CGRect { struct CGPoint { double x_1_3_1; double x_1_3_2; } x_2_2_1; struct CGSize { double x_2_3_1; double x_2_3_2; } x_2_2_2; } x_7_1_2; struct CGRect { struct CGPoint { double x_1_3_1; double x_1_3_2; } x_3_2_1; struct CGSize { double x_2_3_1; double x_2_3_2; } x_3_2_2; } x_7_1_3; struct CGRect { struct CGPoint { double x_1_3_1; double x_1_3_2; } x_4_2_1; struct CGSize { double x_2_3_1; double x_2_3_2; } x_4_2_2; } x_7_1_4; struct CGRect { struct CGPoint { double x_1_3_1; double x_1_3_2; } x_5_2_1; struct CGSize { double x_2_3_1; double x_2_3_2; } x_5_2_2; } x_7_1_5; } x7; })arg1;
- (void)_noteLoadingEndedForClip:(struct { long long x1; long long x2; struct CGSize { double x_3_1_1; double x_3_1_2; } x3; unsigned long long x4; struct { struct { long long x_1_2_1; int x_1_2_2; unsigned int x_1_2_3; long long x_1_2_4; } x_5_1_1; struct { long long x_2_2_1; int x_2_2_2; unsigned int x_2_2_3; long long x_2_2_4; } x_5_1_2; struct { long long x_3_2_1; int x_3_2_2; unsigned int x_3_2_3; long long x_3_2_4; } x_5_1_3; struct { struct { long long x_1_3_1; int x_1_3_2; unsigned int x_1_3_3; long long x_1_3_4; } x_4_2_1; long long x_4_2_2; } x_5_1_4; BOOL x_5_1_5; } x5; long long x6; struct { struct CGSize { double x_1_2_1; double x_1_2_2; } x_7_1_1; struct CGRect { struct CGPoint { double x_1_3_1; double x_1_3_2; } x_2_2_1; struct CGSize { double x_2_3_1; double x_2_3_2; } x_2_2_2; } x_7_1_2; struct CGRect { struct CGPoint { double x_1_3_1; double x_1_3_2; } x_3_2_1; struct CGSize { double x_2_3_1; double x_2_3_2; } x_3_2_2; } x_7_1_3; struct CGRect { struct CGPoint { double x_1_3_1; double x_1_3_2; } x_4_2_1; struct CGSize { double x_2_3_1; double x_2_3_2; } x_4_2_2; } x_7_1_4; struct CGRect { struct CGPoint { double x_1_3_1; double x_1_3_2; } x_5_2_1; struct CGSize { double x_2_3_1; double x_2_3_2; } x_5_2_2; } x_7_1_5; } x7; })arg1 inSegment:(long long)arg2 resourceType:(id)arg3 resourceIdentifier:(id)arg4 timeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg5 error:(id)arg6 loadingTime:(double)arg7 playbackStyle:(long long)arg8;
- (void)_noteLoadingStartedForClipInSegment:(long long)arg1;
- (void)_noteSessionStartedWithLoadedSegments:(id)arg1 segmentsToLoad:(id)arg2 preloadableClipsCounts:(struct { long long x1; long long x2; long long x3; })arg3 inTimeline:(id)arg4;
- (void)_performChangesOnStoryQueue:(id /* block */)arg1;
- (void)_setNeedsUpdate;
- (void)_stateQueue_accumulateLoadedTimeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg1 moreExpected:(bool)arg2;
- (void)_timelineReadingQueue_loadResourcesForClipsInSegment:(long long)arg1 request:(id)arg2 clipLoadingGroup:(id)arg3;
- (void)_timelineReadingQueue_processRequest:(id)arg1 previousRequest:(id)arg2;
- (void)_timelineReadingQueue_sessionStartedWithAlreadyLoadedSegments:(id)arg1 segmentsToLoad:(id)arg2 preloadableClipsCounts:(struct { long long x1; long long x2; long long x3; })arg3 request:(id)arg4;
- (void)_updateEstimation;
- (void)_updateProcessing;
- (void)cancelProcessingAllRequests;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })currentPlaybackTime;
- (id)currentRequest;
- (long long)currentSegmentIdentifier;
- (void)dealloc;
- (id)diagnosticDescription;
- (void)didPerformChanges;
- (double)displayScale;
- (id)error;
- (id)estimationQueue;
- (id)init;
- (id)initWithMediaProvider:(id)arg1 displayScale:(double)arg2 videoSessionManager:(id)arg3 loadingStatusReporter:(id)arg4 storyQueue:(id)arg5 isExporting:(bool)arg6;
- (double)isExporting;
- (bool)isLoadingLikelyToKeepUpWithPlayback;
- (long long)lagsCount;
- (id)loadedTimeRanges;
- (float)loadingFractionComplete;
- (id)loadingOperationQueue;
- (id)loadingStatusReporter;
- (id)log;
- (unsigned long long)logContext;
- (id)mediaProvider;
- (void)performChanges:(id /* block */)arg1;
- (id)previousRequest;
- (void)setCurrentPlaybackTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setCurrentRequest:(id)arg1;
- (void)setCurrentSegmentIdentifier:(long long)arg1;
- (void)setError:(id)arg1;
- (void)setIsLoadingLikelyToKeepUpWithPlayback:(bool)arg1;
- (void)setLoadingFractionComplete:(float)arg1;
- (void)setLog:(id)arg1;
- (void)setLogContext:(unsigned long long)arg1;
- (void)setTimelineReadingQueue_loadedSegments:(id)arg1;
- (void)startProcessingRequest:(id)arg1;
- (id)stateQueue;
- (id)storyQueue;
- (id)timelineReadingQueue;
- (id)timelineReadingQueue_loadedSegments;
- (id)updater;
- (id)videoSessionManager;

@end
