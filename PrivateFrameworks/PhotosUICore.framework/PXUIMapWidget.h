
@interface PXUIMapWidget : NSObject <PXPhotosDataSourceChangeObserver, PXPhotosDetailsLocationSearchDelegate, PXPlacesMapLocationEditDelegate, PXUIWidget, UIContextMenuInteractionDelegate> {
    NSString * __cachedDisclosureTitle;
    NSString * __cachedLocalizedTitle;
    UIView * __containerView;
    UIView * __contentView;
    PXPlacesSnapshotFactory * __factory;
    PXImageUIView * __imageView;
    PXPlacesMapFetchResultViewController * __mapViewController;
    NSMutableArray * __nearbyCountCompletionBlocks;
    PXPlacesMapFetchResultViewController * __presentedMapViewController;
    UIButton * _adjustButton;
    NSString * _cachedFooterTitle;
    UIImageView * _chevronImageView;
    struct CGSize { 
        double width; 
        double height; 
    }  _contentSize;
    PXPhotosDetailsContext * _context;
    bool  _didDisplayContentView;
    bool  _enableCuratedThumbnails;
    NSMutableDictionary * _fetchedImages;
    UIButton * _footerButton;
    UIFont * _footerFont;
    double  _footerHeight;
    UIView * _footerView;
    bool  _hasLoadedContentData;
    double  _height;
    bool  _isLoaded;
    long long  _lastFetchedBoundingRectAssetCount;
    NSObject<OS_os_log> * _logger;
    bool  _showAddressLink;
    PXWidgetSpec * _spec;
    PXPlacesMapThumbnailLocationCurator * _thumbnailLocationCurator;
    PXPlacesMapViewPort * _viewPort;
    <PXWidgetDelegate> * _widgetDelegate;
    <PXWidgetUnlockDelegate> * _widgetUnlockDelegate;
}

@property (nonatomic, retain) NSString *_cachedDisclosureTitle;
@property (nonatomic, retain) NSString *_cachedLocalizedTitle;
@property (nonatomic, readonly) UIView *_containerView;
@property (nonatomic, readonly) UIView *_contentView;
@property (nonatomic, retain) PXPlacesSnapshotFactory *_factory;
@property (nonatomic, readonly) bool _hasLocation;
@property (nonatomic, readonly) PXImageUIView *_imageView;
@property (nonatomic, readonly) PXPlacesMapFetchResultViewController *_mapViewController;
@property (nonatomic, retain) NSMutableArray *_nearbyCountCompletionBlocks;
@property (nonatomic) PXPlacesMapFetchResultViewController *_presentedMapViewController;
@property (nonatomic, readonly) UIButton *adjustButton;
@property (nonatomic, readonly) bool allowUserInteractionWithSubtitle;
@property (nonatomic, readonly) PXAssetActionManager *assetActionManager;
@property (nonatomic, retain) NSString *cachedFooterTitle;
@property (nonatomic, readonly) UIImageView *chevronImageView;
@property (nonatomic, readonly) long long contentLayoutStyle;
@property (nonatomic, readonly) PXTilingController *contentTilingController;
@property (nonatomic, readonly) NSObject<PXAnonymousView> *contentView;
@property (nonatomic, readonly) long long contentViewAnchoringType;
@property (nonatomic, retain) PXPhotosDetailsContext *context;
@property (nonatomic, readonly) bool cursorInteractionEnabled;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) bool enableCuratedThumbnails;
@property (nonatomic, readonly) double extraSpaceNeededAtContentBottom;
@property (getter=isFaceModeEnabled, nonatomic) bool faceModeEnabled;
@property (nonatomic, readonly) UIButton *footerButton;
@property (nonatomic, readonly) UIFont *footerFont;
@property (nonatomic) double footerHeight;
@property (nonatomic, readonly) UIView *footerView;
@property (nonatomic, readonly) bool hasContentForCurrentInput;
@property (setter=_setHasLoadedContentData:, nonatomic) bool hasLoadedContentData;
@property (readonly) unsigned long long hash;
@property (nonatomic) double height;
@property (nonatomic, readonly) bool isInEditMode;
@property (nonatomic, readonly) NSString *localizedCaption;
@property (nonatomic, readonly) NSString *localizedDisclosureTitle;
@property (nonatomic, readonly) NSString *localizedSubtitle;
@property (nonatomic, readonly) NSString *localizedTitle;
@property (nonatomic) struct CGSize { double x1; double x2; } maxVisibleSizeInEditMode;
@property (nonatomic, retain) PXOneUpPresentation *oneUpPresentation;
@property (getter=isSelecting, nonatomic) bool selecting;
@property (nonatomic, readonly) PXSectionedSelectionManager *selectionManager;
@property (nonatomic) bool showAddressLink;
@property (nonatomic, readonly) NSString *snappableWidgetIdentifier;
@property (nonatomic, retain) PXWidgetSpec *spec;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsFaceMode;
@property (nonatomic, readonly) bool supportsSelection;
@property (nonatomic, retain) PXPlacesMapThumbnailLocationCurator *thumbnailLocationCurator;
@property (getter=isUserInteractionEnabled, nonatomic) bool userInteractionEnabled;
@property (nonatomic, readonly) bool wantsFocus;
@property (nonatomic, readonly) bool wantsNoSpaceAfterContentBottom;
@property (nonatomic) <PXWidgetDelegate> *widgetDelegate;
@property (nonatomic) <PXWidgetEditingDelegate> *widgetEditingDelegate;
@property (nonatomic) <PXWidgetInteractionDelegate> *widgetInteractionDelegate;
@property (nonatomic) <PXWidgetUnlockDelegate> *widgetUnlockDelegate;

+ (id)sharedSnapshotRequestConcurrentQueue;

- (void).cxx_destruct;
- (id)_cachedDisclosureTitle;
- (id)_cachedLocalizedTitle;
- (void)_clipboardChanged:(id)arg1;
- (id)_containerView;
- (bool)_containsLocationInPasteboard;
- (id)_contentView;
- (id)_contextMenuActions;
- (id)_copyLocationAction;
- (void)_copyLocationTapped;
- (id)_createSnapshotOptions;
- (void)_didTapAdjustLocation;
- (struct CGSize { double x1; double x2; })_estimatedMapViewImageSize;
- (id)_factory;
- (long long)_fetchCountOfAssetsWithLocation;
- (void)_fetchPlacesSnapshotUsingMapType:(unsigned long long)arg1 fetchResults:(id)arg2 imageSize:(struct CGSize { double x1; double x2; })arg3 shouldFetchNearbyAssetCount:(bool)arg4;
- (id)_fetchResultsForSections;
- (id)_firstAsset;
- (bool)_forceRevGeoUpdate;
- (void)_generateSnapshotsForExtendedTraitCollection:(id)arg1 placesUtils:(id)arg2 queue:(id)arg3 size:(struct CGSize { double x1; double x2; })arg4 snapshotMapType:(unsigned long long)arg5 fetchResults:(id)arg6 shouldFetchNearbyAssetCount:(bool)arg7;
- (void)_handleContentSizeCategoryDidChange:(id)arg1;
- (void)_handleSnapshotResponse:(id)arg1 viewPort:(id)arg2 snapshotMapType:(unsigned long long)arg3 shouldFetchNearbyAssetCount:(bool)arg4 fetchedImageKey:(id)arg5 error:(id)arg6 userInterfaceStyle:(long long)arg7;
- (void)_handleTapGestureRecognizer:(id)arg1;
- (bool)_hasCachedSnapshotImageForKey:(id)arg1;
- (bool)_hasLocation;
- (void)_hasLocationDidChange;
- (id)_imageView;
- (void)_layoutSubviews;
- (void)_loadContainerView;
- (void)_loadMapDataWithFetchResultsController:(id)arg1;
- (id)_localizedGeoDescriptionForAsset:(id)arg1;
- (id)_mapViewController;
- (id)_mapViewControllerWithContentMode:(unsigned long long)arg1;
- (id)_nearbyCountCompletionBlocks;
- (void)_openMapsAtCoordinate:(struct CLLocationCoordinate2D { double x1; double x2; })arg1 title:(id)arg2;
- (id)_pasteLocationAction;
- (void)_pasteLocationTapped;
- (void)_presentLocationSearchPicker;
- (id)_presentedMapViewController;
- (void)_reloadFooterTitle;
- (bool)_requiresDetailedAddressFooterString;
- (void)_setHasLoadedContentData:(bool)arg1;
- (void)_setImage:(id)arg1 animated:(bool)arg2;
- (void)_showPlaceholder;
- (void)_showPlacesWithContentMode:(unsigned long long)arg1;
- (id)_snapshotOptionsForExtendedTraitCollection:(id)arg1 queue:(id)arg2 viewSize:(struct CGSize { double x1; double x2; })arg3 snapshotMapType:(unsigned long long)arg4;
- (void)_updateContentViewFrame;
- (void)_updateFooterButton;
- (void)_updateFooterContextMenu;
- (void)_updateFooterHeight;
- (void)_updateFooterWithTitle:(id)arg1;
- (void)_updateHeight;
- (id)adjustButton;
- (bool)allowUserInteractionWithSubtitle;
- (id)cachedFooterTitle;
- (id)chevronImageView;
- (id)contentView;
- (id)context;
- (id)contextMenuInteraction:(id)arg1 configurationForMenuAtLocation:(struct CGPoint { double x1; double x2; })arg2;
- (void)controllerTraitCollectionDidChangeFrom:(id)arg1 to:(id)arg2;
- (void)dealloc;
- (bool)enableCuratedThumbnails;
- (id)footerButton;
- (id)footerFont;
- (double)footerHeight;
- (id)footerView;
- (bool)hasContentForCurrentInput;
- (bool)hasLoadedContentData;
- (double)height;
- (bool)infoPanelLayoutEnabled;
- (id)init;
- (id)initWithEnableCuratedThumbnails:(bool)arg1;
- (void)loadContentData;
- (id)localizedDisclosureTitle;
- (id)localizedTitle;
- (void)mapFetchResultsViewControllerDidSelectEditLocation:(id)arg1;
- (void)photosDataSource:(id)arg1 didChange:(id)arg2;
- (double)preferredContentHeightForWidth:(double)arg1;
- (void)setCachedFooterTitle:(id)arg1;
- (void)setContentSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setContext:(id)arg1;
- (void)setFooterHeight:(double)arg1;
- (void)setHeight:(double)arg1;
- (void)setShowAddressLink:(bool)arg1;
- (void)setSpec:(id)arg1;
- (void)setThumbnailLocationCurator:(id)arg1;
- (void)setWidgetDelegate:(id)arg1;
- (void)setWidgetUnlockDelegate:(id)arg1;
- (void)set_cachedDisclosureTitle:(id)arg1;
- (void)set_cachedLocalizedTitle:(id)arg1;
- (void)set_factory:(id)arg1;
- (void)set_nearbyCountCompletionBlocks:(id)arg1;
- (void)set_presentedMapViewController:(id)arg1;
- (bool)showAddressLink;
- (id)snappableWidgetIdentifier;
- (id)spec;
- (id)thumbnailLocationCurator;
- (void)unloadContentData;
- (void)userDidSelectDisclosureControl;
- (void)userDidSelectFooter:(id)arg1;
- (id)widgetDelegate;
- (id)widgetUnlockDelegate;

@end
