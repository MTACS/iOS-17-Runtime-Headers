
@interface PXMemoriesSpec : PXFeatureSpec {
    double  __columnWidth;
    double  __displayScale;
    unsigned long long  __style;
    UIColor * _borderColor;
    struct CGPoint { 
        double x; 
        double y; 
    }  _borderOffset;
    double  _borderWidth;
    double  _distanceBetweenHeaderBaselineAndImageTop;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _favoriteBadgeInset;
    struct CGSize { 
        double width; 
        double height; 
    }  _favoriteBadgeSize;
    double  _feedAdditionalContentThreshold;
    long long  _feedAxis;
    UIColor * _feedBackgroundColor;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _feedEntryEdgeInsets;
    double  _feedEntryHeaderHeight;
    double  _feedHeroImageAspectRatio;
    long long  _feedHeroPosition;
    double  _feedInteritemSpacing;
    unsigned long long  _feedMemoriesPerRow;
    bool  _feedShouldAllowHeaders;
    double  _firstFeedEntryHeaderHeight;
    struct CGPoint { 
        double x; 
        double y; 
    }  _highlightedSectionHeaderOffset;
    long long  _idiom;
    double  _orbPreviewSize;
    UIColor * _selectionHighlightColor;
    bool  _shouldRemoveHighlightOnScroll;
    double  _tabTitleBaselineOffset;
    UIFont * _tabTitleFont;
    UIColor * _tabTitleTextColor;
    double  _tabTopContentPadding;
}

@property (nonatomic, readonly) double _columnWidth;
@property (nonatomic, readonly) double _displayScale;
@property (nonatomic, readonly) unsigned long long _style;
@property (nonatomic, readonly) UIColor *borderColor;
@property (nonatomic, readonly) struct CGPoint { double x1; double x2; } borderOffset;
@property (nonatomic, readonly) double borderWidth;
@property (nonatomic, readonly) double bottomShadowPadding;
@property (nonatomic, readonly) double distanceBetweenHeaderBaselineAndImageTop;
@property (nonatomic, readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } favoriteBadgeInset;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } favoriteBadgeSize;
@property (nonatomic, readonly) double feedAdditionalContentThreshold;
@property (nonatomic, readonly) long long feedAxis;
@property (nonatomic, readonly) UIColor *feedBackgroundColor;
@property (nonatomic, readonly) Class feedDataSourceManagerClass;
@property (nonatomic, readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } feedEntryEdgeInsets;
@property (nonatomic, readonly) double feedEntryHeaderHeight;
@property (nonatomic, readonly) double feedHeroImageAspectRatio;
@property (nonatomic, readonly) double feedHeroImagePaddingBottom;
@property (nonatomic, readonly) double feedHeroImagePaddingTop;
@property (nonatomic, readonly) long long feedHeroPosition;
@property (nonatomic, readonly) double feedInteritemSpacing;
@property (nonatomic, readonly) Class feedLayoutMetricsClass;
@property (nonatomic, readonly) unsigned long long feedMemoriesPerRow;
@property (nonatomic, readonly) double feedSecondaryImagePaddingBottom;
@property (nonatomic, readonly) long long feedSectionLayoutAxis;
@property (nonatomic, readonly) bool feedShouldAllowHeaders;
@property (nonatomic, readonly) Class feedTransitionAnimationCoordinatorClass;
@property (nonatomic, readonly) double firstFeedEntryHeaderHeight;
@property (nonatomic, readonly) struct CGPoint { double x1; double x2; } highlightedSectionHeaderOffset;
@property (nonatomic, readonly) long long idiom;
@property (nonatomic, readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } layoutInsets;
@property (nonatomic, readonly) double orbPreviewSize;
@property (nonatomic, readonly) UIColor *selectionHighlightColor;
@property (nonatomic, readonly) bool shouldRemoveHighlightOnScroll;
@property (nonatomic, readonly) double tabTitleBaselineOffset;
@property (nonatomic, readonly) UIFont *tabTitleFont;
@property (nonatomic, readonly) UIColor *tabTitleTextColor;
@property (nonatomic, readonly) double tabTopContentPadding;

- (void).cxx_destruct;
- (void)_calculateSectionInsetWithExtendedTraitCollection:(id)arg1;
- (double)_columnWidth;
- (double)_displayScale;
- (double)_feedInteritemSpacingForReferenceSize:(struct CGSize { double x1; double x2; })arg1;
- (unsigned long long)_style;
- (id)borderColor;
- (struct CGPoint { double x1; double x2; })borderOffset;
- (double)borderWidth;
- (double)bottomShadowPadding;
- (id)createViewSpecWithDescriptor:(struct PXViewSpecDescriptor { long long x1; unsigned long long x2; struct CGSize { double x_3_1_1; double x_3_1_2; } x3; })arg1;
- (double)distanceBetweenHeaderBaselineAndImageTop;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })favoriteBadgeInset;
- (struct CGSize { double x1; double x2; })favoriteBadgeSize;
- (double)feedAdditionalContentThreshold;
- (long long)feedAxis;
- (id)feedBackgroundColor;
- (id)feedCategoryLabelTextColor;
- (Class)feedDataSourceManagerClass;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })feedEntryEdgeInsets;
- (double)feedEntryHeaderHeight;
- (double)feedHeroImageAspectRatio;
- (double)feedHeroImagePaddingBottom;
- (double)feedHeroImagePaddingTop;
- (long long)feedHeroPosition;
- (double)feedInteritemSpacing;
- (Class)feedLayoutMetricsClass;
- (unsigned long long)feedMemoriesPerRow;
- (double)feedSecondaryImagePaddingBottom;
- (long long)feedSectionLayoutAxis;
- (bool)feedShouldAllowHeaders;
- (Class)feedTransitionAnimationCoordinatorClass;
- (double)firstFeedEntryHeaderHeight;
- (struct CGPoint { double x1; double x2; })highlightedSectionHeaderOffset;
- (long long)idiom;
- (id)initWithExtendedTraitCollection:(id)arg1 options:(unsigned long long)arg2;
- (id)initWithExtendedTraitCollection:(id)arg1 options:(unsigned long long)arg2 style:(unsigned long long)arg3;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })layoutInsets;
- (id)newLayoutGeneratorWithMetrics:(id)arg1;
- (double)orbPreviewSize;
- (id)selectionHighlightColor;
- (bool)shouldRemoveHighlightOnScroll;
- (double)tabTitleBaselineOffset;
- (id)tabTitleFont;
- (id)tabTitleTextColor;
- (double)tabTopContentPadding;

@end
