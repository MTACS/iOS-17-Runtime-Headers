
@interface CMContinuityCaptureDeviceBase : NSObject <CMContinuityCaptureDevice> {
    CMContinuityCaptureConfiguration * _activeConfiguration;
    unsigned long long  _avCaptureStackStartTime;
    bool  _avcStackStarted;
    AVCMediaStreamNegotiator * _avcStreamNegotiator;
    unsigned long long  _cameraCaptureStackStartTime;
    CMContinuityCaptureDeviceCapabilities * _capabilities;
    <CMContinuityCaptureCompositeDeviceDelegate> * _compositeDelegate;
    <ContinuityCaptureTransportDevice> * _deviceStatusObserverDevice;
    long long  _entity;
    _Atomic bool  _hasStreamIntent;
    _Atomic bool  _invalidated;
    NSDate * _lastStreamFirstFrameDispatchTime;
    unsigned long long  _lastStreamNoOfFramesDispatched;
    unsigned long long  _lastStreamNoOfHighLatencyFrames;
    NSDate * _lastStreamStartTime;
    _Atomic bool  _observingStateMachineState;
    NSMutableArray * _pendingCompletionBlocks;
    NSObject<OS_dispatch_queue> * _queue;
    CMContinuityCaptureStateMachine * _stateMachine;
    CMContinuityCaptureStateMachine * _streamActionStateMachine;
    NSMutableArray * _streamSessionLogs;
    id /* block */  _streamTimeoutBlock;
    _Atomic bool  _streaming;
    bool  _terminated;
    <ContinuityCaptureTransportDevice> * _transportDevice;
    <ContinuityCaptureTransportDeviceStream> * _transportStream;
}

@property (readonly, retain) CMContinuityCaptureConfiguration *activeConfiguration;
@property (nonatomic, readonly) unsigned long long avCaptureStackStartTime;
@property (readonly, retain) AVCMediaStreamNegotiator *avcStreamNegotiator;
@property (nonatomic, readonly) unsigned long long cameraCaptureStackStartTime;
@property (readonly, retain) CMContinuityCaptureDeviceCapabilities *capabilities;
@property (readonly) <CMContinuityCaptureCompositeDeviceDelegate> *compositeDelegate;
@property (readonly, retain) NSArray *controls;
@property (nonatomic, readonly) unsigned long long currentSessionID;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, retain) NSUUID *deviceID;
@property (readonly) long long entity;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool invalidated;
@property (readonly, retain) NSObject<OS_dispatch_queue> *queue;
@property (readonly, retain) CMContinuityCaptureState *stateMachineCurrentState;
@property (readonly, retain) CMContinuityCaptureStateMachine *streamActionStateMachine;
@property (getter=hasStreamIntent, nonatomic) bool streamIntent;
@property (readonly) bool streaming;
@property (readonly) Class superclass;
@property (readonly, retain) <ContinuityCaptureTransportDevice> *transportDevice;
@property (readonly, retain) <ContinuityCaptureTransportDeviceStream> *transportStream;

+ (void)defaultStateEntryTransitionActionForState:(id)arg1 onEvent:(id)arg2;
+ (bool)defaultStateExitGuard:(id)arg1 dstState:(id)arg2 onEvent:(id)arg3;
+ (void)defaultStateExitTransitionActionForState:(id)arg1 onEvent:(id)arg2;
+ (bool)keepRemoteClientAliveForEvent:(id)arg1;

- (void).cxx_destruct;
- (id)_aggregateEventDuplicatesInAnyState:(id)arg1 eventName:(id)arg2;
- (id)_aggregateEventPairInAnyState:(id)arg1 entryEventName:(id)arg2 exitEventName:(id)arg3;
- (id)_aggregateStreamEventsInInitState:(id)arg1;
- (id)_aggregateStreamEventsInStreamState:(id)arg1;
- (id)_debugInfo;
- (void)_handleAVCNegotiation:(long long)arg1 data:(id)arg2;
- (void)_startStream:(id)arg1 option:(unsigned long long)arg2 completion:(id /* block */)arg3;
- (void)_stopStream:(long long)arg1 option:(unsigned long long)arg2 completion:(id /* block */)arg3;
- (id)activeConfiguration;
- (bool)activeConnection;
- (id)aggregateEvents:(id)arg1;
- (unsigned long long)avCaptureStackStartTime;
- (id)avcStreamNegotiator;
- (unsigned long long)cameraCaptureStackStartTime;
- (id)capabilities;
- (void)captureStillImage:(id)arg1 entity:(long long)arg2 completion:(id /* block */)arg3;
- (id)compositeDelegate;
- (void)connectionInterrupted:(id)arg1 forDevice:(id)arg2;
- (id)controls;
- (unsigned long long)currentSessionID;
- (void)dealloc;
- (id)debugInfo;
- (id)description;
- (id)deviceID;
- (void)didCaptureStillImage:(id)arg1 entity:(long long)arg2;
- (void)dispatchFrame:(struct opaqueCMSampleBuffer { }*)arg1 entity:(long long)arg2 completion:(id /* block */)arg3;
- (void)enqueueReactionEffect:(id)arg1 entity:(long long)arg2;
- (long long)entity;
- (void)forceDeviceRemoval;
- (void)handleAVCNegotiation:(long long)arg1 data:(id)arg2;
- (void)handleSynchronizeAudioClockCompletion;
- (bool)hasStreamIntent;
- (id)initWithCapabilities:(id)arg1 compositeDelegate:(id)arg2 transportDevice:(id)arg3 queue:(id)arg4;
- (void)invalidate;
- (bool)invalidated;
- (void)logStreamSessionSummary;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)postActionCompletionForEventName:(id)arg1 eventData:(id)arg2 error:(id)arg3;
- (bool)postActionGuardOfType:(unsigned long long)arg1 forEventName:(id)arg2 option:(unsigned long long)arg3;
- (void)postActionOfType:(unsigned long long)arg1 forEvent:(id)arg2 option:(unsigned long long)arg3;
- (void)postEvent:(id)arg1 entity:(long long)arg2 data:(id)arg3;
- (void)printFrameBufferLog:(long long)arg1;
- (id)queue;
- (void)resetTransportDevice:(id)arg1;
- (void)scheduleDeviceBusyNotification:(bool)arg1;
- (void)setStreamIntent:(bool)arg1;
- (void)setStreamStateTimeout:(bool)arg1 forTime:(unsigned int)arg2;
- (void)setValueForControl:(id)arg1 completion:(id /* block */)arg2;
- (void)setupStateMachine;
- (void)setupStreamActionStateMachine;
- (bool)startAVConferenceStack:(unsigned long long)arg1;
- (bool)startCameraCaptureStack:(unsigned long long)arg1;
- (void)startStream:(id)arg1 option:(unsigned long long)arg2 completion:(id /* block */)arg3;
- (void)startStreamCompletedWithError:(id)arg1;
- (void)stateMachineClearDeferredEvents;
- (id)stateMachineCurrentState;
- (void)stateMachineNotifyComplete:(id)arg1;
- (void)stateMachineReStartStreamOnEvent:(id)arg1 option:(unsigned long long)arg2;
- (void)stateMachineStartStreamOnEvent:(id)arg1 option:(unsigned long long)arg2;
- (void)stateMachineStopStreamOnEvent:(id)arg1 option:(unsigned long long)arg2;
- (void)stateMachineStreamSubstateReceiveData:(id)arg1;
- (void)stateMachineStreamSubstateSendData:(id)arg1;
- (bool)stopCameraCaptureStack:(unsigned long long)arg1;
- (void)stopCaptureStack:(unsigned long long)arg1 completion:(id /* block */)arg2;
- (void)stopStream:(long long)arg1 option:(unsigned long long)arg2 completion:(id /* block */)arg3;
- (id)streamActionStateMachine;
- (void)streamStateMachineNotifyComplete:(id)arg1;
- (bool)streaming;
- (void)synchronizeAudioClockWithSampleTime:(unsigned long long)arg1 networkTime:(unsigned long long)arg2 clockGrandMasterIdentifier:(unsigned long long)arg3;
- (void)terminateComplete:(id /* block */)arg1;
- (id)transportDevice;
- (id)transportStream;
- (void)unconditionalTransitionForState:(id)arg1 andDeferringEvent:(id)arg2;

@end
