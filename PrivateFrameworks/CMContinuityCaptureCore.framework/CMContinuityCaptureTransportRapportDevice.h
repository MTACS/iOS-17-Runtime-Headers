
@interface CMContinuityCaptureTransportRapportDevice : NSObject <ContinuityCaptureTransportDevice> {
    bool  _active;
    NSMutableDictionary * _activeStreams;
    bool  _allFeaturesSupported;
    CMContinuityCaptureCapabilities * _capabilities;
    RPRemoteDisplayDevice * _device;
    unsigned long long  _deviceMajorVersion;
    unsigned long long  _deviceMinorVersion;
    NSUUID * _deviceUUID;
    bool  _disconnectedWhileWired;
    CMContinuityCaptureMagicStateMonitor * _magicStateMonitor;
    bool  _nearby;
    bool  _placementStepSkipped;
    NSObject<OS_dispatch_queue> * _queue;
    bool  _remote;
    NSMutableArray * _rpCompanionSidebandSessions;
    bool  _sessionInterrupted;
    NSObject<OS_dispatch_queue> * _sidebandQueue;
    bool  _streamIntent;
    bool  _terminationDeferred;
    bool  _userDisconnected;
}

@property (readonly) bool active;
@property (readonly, retain) NSArray *activeStreams;
@property (readonly) bool allFeaturesSupported;
@property (readonly) bool canDeferTermination;
@property (readonly) bool canReconnect;
@property (retain) CMContinuityCaptureCapabilities *capabilities;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, retain) RPRemoteDisplayDevice *device;
@property (readonly, retain) NSUUID *deviceIdentifier;
@property unsigned long long deviceMajorVersion;
@property unsigned long long deviceMinorVersion;
@property (readonly, retain) NSString *deviceModel;
@property (readonly) long long deviceModelType;
@property (readonly, retain) NSString *deviceName;
@property (readonly) unsigned long long deviceStatus;
@property (readonly) bool guest;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool legacyReconnectRecovery;
@property (readonly, retain) CMContinuityCaptureMagicStateMonitor *magicStateMonitor;
@property bool nearby;
@property (getter=isPlacementStepSkipped, nonatomic) bool placementStepSkipped;
@property (readonly, retain) NSObject<OS_dispatch_queue> *queue;
@property (readonly) bool remote;
@property (nonatomic) bool sessionInterrupted;
@property (getter=hasStreamIntent, nonatomic) bool streamIntent;
@property (readonly) Class superclass;
@property bool terminationDeferred;
@property (readonly) bool usable;
@property bool userDisconnected;
@property (readonly) bool wifiP2pActive;
@property (readonly) bool wired;

+ (void)queryCameraCapabilitiesFromRemoteDevice:(id)arg1 transport:(long long)arg2;

- (void).cxx_destruct;
- (void)_didCaptureStillImage:(id)arg1 entity:(long long)arg2;
- (void)_handleAVCNegotiation:(long long)arg1 data:(id)arg2;
- (void)_postEvent:(id)arg1 entity:(long long)arg2 data:(id)arg3;
- (void)_relaySidebandMessageType:(id)arg1 overTransport:(long long)arg2;
- (void)_setValueForControl:(id)arg1 completion:(id /* block */)arg2;
- (void)_startStream:(id)arg1 option:(unsigned long long)arg2 completion:(id /* block */)arg3;
- (void)_stopStream:(long long)arg1 option:(unsigned long long)arg2 completion:(id /* block */)arg3;
- (void)_synchronizeAudioClockWithSampleTime:(unsigned long long)arg1 networkTime:(unsigned long long)arg2 clockGrandMasterIdentifier:(unsigned long long)arg3;
- (bool)active;
- (id)activeStreamForIdentifier:(id)arg1;
- (id)activeStreams;
- (void)addStream:(id)arg1;
- (bool)allFeaturesSupported;
- (bool)canDeferTermination;
- (bool)canReconnect;
- (id)capabilities;
- (void)captureStillImage:(id)arg1 entity:(long long)arg2 completion:(id /* block */)arg3;
- (void)connectionInterrupted:(id)arg1 forDevice:(id)arg2;
- (void)dealloc;
- (id)description;
- (id)device;
- (id)deviceIdentifier;
- (unsigned long long)deviceMajorVersion;
- (unsigned long long)deviceMinorVersion;
- (id)deviceModel;
- (long long)deviceModelType;
- (id)deviceName;
- (unsigned long long)deviceStatus;
- (void)didCaptureStillImage:(id)arg1 entity:(long long)arg2;
- (bool)disconnectedWhileWired;
- (void)dispatchFrame:(struct opaqueCMSampleBuffer { }*)arg1 entity:(long long)arg2 completion:(id /* block */)arg3;
- (void)enqueueReactionEffect:(id)arg1 entity:(long long)arg2;
- (bool)guest;
- (void)handleAVCNegotiation:(long long)arg1 data:(id)arg2;
- (void)handleSynchronizeAudioClockCompletion;
- (bool)hasStreamIntent;
- (id)initWithRapportDevice:(id)arg1 capabilities:(id)arg2 remote:(bool)arg3;
- (bool)isPlacementStepSkipped;
- (bool)legacyReconnectRecovery;
- (id)magicStateMonitor;
- (bool)nearby;
- (void)notifyDeviceStateChange;
- (void)postEvent:(id)arg1 entity:(long long)arg2 data:(id)arg3;
- (void)postEvent:(id)arg1 entity:(long long)arg2 data:(id)arg3 forTransport:(long long)arg4;
- (void)preLaunchShieldUIForTransport:(long long)arg1 data:(id)arg2;
- (id)queue;
- (void)relaySkipPlacementStepForTranport:(long long)arg1;
- (void)relayUserDisconnectForTransport:(long long)arg1 reason:(id)arg2 shieldSessionID:(id)arg3;
- (bool)remote;
- (void)removeStream:(id)arg1;
- (void)resetDevice:(id)arg1;
- (bool)sessionInterrupted;
- (void)setCapabilities:(id)arg1;
- (void)setDeviceMajorVersion:(unsigned long long)arg1;
- (void)setDeviceMinorVersion:(unsigned long long)arg1;
- (void)setLegacyReconnectRecovery:(bool)arg1;
- (void)setNearby:(bool)arg1;
- (void)setPlacementStepSkipped:(bool)arg1;
- (void)setSessionInterrupted:(bool)arg1;
- (void)setStreamIntent:(bool)arg1;
- (void)setTerminationDeferred:(bool)arg1;
- (void)setUserDisconnected:(bool)arg1;
- (void)setValueForControl:(id)arg1 completion:(id /* block */)arg2;
- (void)startStream:(id)arg1 option:(unsigned long long)arg2 completion:(id /* block */)arg3;
- (void)stopStream:(long long)arg1 option:(unsigned long long)arg2 completion:(id /* block */)arg3;
- (void)synchronizeAudioClockWithSampleTime:(unsigned long long)arg1 networkTime:(unsigned long long)arg2 clockGrandMasterIdentifier:(unsigned long long)arg3;
- (void)teardownActiveRapportStreams;
- (bool)terminationDeferred;
- (void)updateSystemState;
- (bool)usable;
- (bool)userDisconnected;
- (bool)wifiP2pActive;
- (bool)wired;

@end
