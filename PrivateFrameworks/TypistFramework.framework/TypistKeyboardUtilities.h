
@interface TypistKeyboardUtilities : NSObject

+ (bool)allOneTimeActionsAlreadyTriggered;
+ (id)appendKeyboardForKeyboardSetting:(id)arg1;
+ (id)canonicalConversion:(id)arg1;
+ (id)captureCurrentKeyboardImage;
+ (id)convertRecapCommands:(id)arg1;
+ (id)convertRecapCommandsFromListOfActions:(id)arg1;
+ (void)correctForRotation:(struct CGVector { double x1; double x2; }*)arg1 orientation:(long long)arg2;
+ (id)deviceInfo;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })findKeyBoundsInKeyboard:(id)arg1;
+ (struct CGPoint { double x1; double x2; })floatingKeyboardDraggablePoint;
+ (id)formattedKeyplaneName;
+ (struct CGPoint { double x1; double x2; })generateGaussianPoint:(struct CGPoint { double x1; double x2; })arg1 withSeed:(long long)arg2 andSigma:(double)arg3;
+ (struct CGPoint { double x1; double x2; })generateGaussianPointWithMean:(struct CGPoint { double x1; double x2; })arg1 andSigma:(double)arg2;
+ (id)generateKeyboardList;
+ (struct CGPoint { double x1; double x2; })generateUniformPointWithMean:(struct CGPoint { double x1; double x2; })arg1 andBounds:(struct CGVector { double x1; double x2; })arg2;
+ (struct CGPoint { double x1; double x2; })generateUniformPointWithMean:(struct CGPoint { double x1; double x2; })arg1 andRange:(unsigned int)arg2;
+ (id)getAggregatedTIPreferences;
+ (bool)getAutoCapitalizationPrefSetting;
+ (bool)getAutoCorrectionPrefSetting;
+ (bool)getCapsLockPrefSetting;
+ (bool)getCheckSpellingPrefSetting;
+ (bool)getDictationEnabled;
+ (bool)getFuzzyPinyinPrefSetting;
+ (bool)getGestureKeyPrefSetting;
+ (bool)getHWKeyboardCapsLockRomanSwitchPrefSetting;
+ (id)getHwRevision;
+ (bool)getKeyPaddlePrefSetting;
+ (id)getKeyboardsForKeyboardSetting;
+ (id)getMobileGestalt:(id)arg1;
+ (id)getNandCapacity;
+ (id)getOneHandedKeyboardHandBias;
+ (bool)getPeriodShortcutPrefSetting;
+ (bool)getPredictivePrefSetting;
+ (id)getRegionCodeFromKeyboardID:(id)arg1;
+ (id)getRootViewControllerViaScene;
+ (id)getSameScreenSizeModel;
+ (id)getScreenSize;
+ (int)getShuangpinPrefSetting;
+ (bool)getSmallDisplayPrefSetting;
+ (bool)getSmartDashesPrefSetting;
+ (bool)getSmartFullWidthSetting;
+ (bool)getSmartQuotesPrefSetting;
+ (id)getTrainBuildVersion:(id)arg1;
+ (bool)getTypologyEnabled;
+ (id)getUIDeviceOrientationAsString;
+ (long long)getUIDeviceOrientationFromString:(id)arg1;
+ (long long)getUIInterfaceOrientation;
+ (int)getWubiPrefSetting;
+ (bool)hasFaceID;
+ (bool)hasHomeButton;
+ (bool)hasMarkedText;
+ (bool)inhibitGlobalAlerts:(bool)arg1;
+ (bool)isDictationSupported:(id)arg1;
+ (bool)isFloating;
+ (void)killKbd;
+ (void)launchRecap:(id)arg1;
+ (void)launchRecap:(id)arg1 completion:(id /* block */)arg2;
+ (void)logToFile:(bool)arg1;
+ (void)logToSTDERR:(bool)arg1;
+ (id)markedText;
+ (id)removeKeyboardForKeyboardSetting:(id)arg1;
+ (id)replaceWaitForKeyboardPlane:(id)arg1 withWait:(double)arg2;
+ (void)runCommandLineProcess:(char **)arg1;
+ (void)runOnMainThread:(id /* block */)arg1;
+ (id)searchForViewInKeyboardWindow:(id)arg1;
+ (id)searchForWindow:(id)arg1;
+ (void)setAirplaneMode:(bool)arg1;
+ (void)setDoNotDisturb:(bool)arg1;
+ (void)setFloatingKeyboard:(bool)arg1;
+ (bool)setKeyboardDictation:(bool)arg1;
+ (id)setKeyboardForKeyboardSetting:(id)arg1;
+ (id)setOneHandedKeyboardHandBias:(id)arg1;
+ (bool)setPrefSettings:(id)arg1;
+ (void)setRecapFastMode:(bool)arg1;
+ (void)setTapTouchRadius:(id)arg1;
+ (id)sharedFBSOrientationObserver;
+ (id)sharedRecapInlinePlayer;
+ (bool)shouldShowDictationKey;
+ (bool)shouldShowGlobeKey;
+ (bool)supportsPencil;
+ (void)tearDownRecapInlinePlayer;
+ (id)timeInStringFromTimeInterval:(double)arg1;
+ (long long)toUIDeviceOrientation:(long long)arg1;
+ (long long)toUIInterfaceOrientation:(long long)arg1;
+ (int)touchScanRate;
+ (bool)triggerAllTIOneTimeActions;
+ (id)validateProbability:(id)arg1;
+ (void)waitFor:(double)arg1;
+ (bool)waitForKeyboardPlane:(id)arg1;

@end
