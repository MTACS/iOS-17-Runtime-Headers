
@interface TabBarItemView : UIView {
    bool  _active;
    UIVisualEffectView * _borderEffectsView;
    UIButton * _closeButton;
    UIVisualEffectView * _closeButtonEffectsView;
    UIImageView * _closeButtonImageView;
    UIVisualEffectView * _contentEffectsView;
    double  _contentOffset;
    bool  _hidesTitleText;
    UIView * _highlightView;
    UIHoverGestureRecognizer * _hoverRecognizer;
    UIImage * _icon;
    UIView * _iconClipperView;
    UIImageView * _iconView;
    bool  _isPlaceholder;
    unsigned long long  _mediaStateIcon;
    UIButton * _mediaStateMuteButton;
    SFAvatarStackView * _participantsView;
    bool  _pinned;
    bool  _reordering;
    NSArray * _shareParticipants;
    TabBar * _tabBar;
    double  _titleAnchorAdditionalOffset;
    long long  _titleAnchorEdge;
    UIView * _titleClipperView;
    UILabel * _titleLabel;
    double  _titleLayoutWidth;
    NSString * _titleText;
    bool  _titleWasTruncated;
    NSString * _truncatedTitleText;
    struct CGSize { 
        double width; 
        double height; 
    }  _truncatedTitleTextSize;
    bool  _unread;
    SFUnreadIndicator * _unreadIndicator;
    long long  _visibleEdge;
}

@property (getter=isActive, nonatomic) bool active;
@property (nonatomic, readonly) UIButton *closeButton;
@property (nonatomic) double contentOffset;
@property (nonatomic) bool hidesTitleText;
@property (nonatomic, retain) UIImage *icon;
@property (nonatomic) bool isPlaceholder;
@property (nonatomic) unsigned long long mediaStateIcon;
@property (nonatomic, readonly) UIButton *mediaStateMuteButton;
@property (getter=isPinned, nonatomic) bool pinned;
@property (getter=isReordering, nonatomic) bool reordering;
@property (nonatomic, copy) NSArray *shareParticipants;
@property (nonatomic) double titleAnchorAdditionalOffset;
@property (nonatomic) long long titleAnchorEdge;
@property (nonatomic) double titleLayoutWidth;
@property (getter=isUnread, nonatomic) bool unread;
@property (nonatomic) long long visibleEdge;

- (void).cxx_destruct;
- (bool)_canUseCachedTitleTruncationOnBoundsChange;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_closeButtonFrame;
- (double)_contentWidthIgnoringCollaborationViews;
- (bool)_hasRoomForIconAndCloseButton;
- (void)_hover:(id)arg1;
- (long long)_iconPosition;
- (bool)_isHovering;
- (bool)_isHoveringOverCloseButton;
- (bool)_isPinnedAndNarrow;
- (void)_layOutParticipantsView;
- (void)_layOutUnreadIndicator;
- (void)_layoutCloseButton;
- (void)_layoutEdges;
- (void)_layoutMediaStateIndicator;
- (void)_layoutTitleClipperView;
- (void)_layoutTitleLabel;
- (void)_layoutTitleLabelUsingCachedTruncation;
- (long long)_physicalEdgeForLogicalEdge:(long long)arg1;
- (void)_showOrHideCloseButton;
- (bool)_showsCloseButton;
- (bool)_showsParticipants;
- (bool)_showsUnreadIndicator;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_titleBoundingBox;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_titleBounds;
- (id)_truncatedTitleWithFont:(id)arg1 desiredWidth:(double)arg2 truncatedSize:(struct CGSize { double x1; double x2; }*)arg3;
- (void)_updateCloseButtonAlpha;
- (void)_updateCloseButtonEffect;
- (void)_updateCloseButtonImage;
- (void)_updateHighlightAlpha;
- (void)_updateIconViewVisibility;
- (void)_updateMediaStateButtonButtonAlpha;
- (void)_updateMediaStateIndicator;
- (void)_updateShowsParticipants;
- (void)_updateShowsUnreadIndicator;
- (id)closeButton;
- (void)configureForDragPreview;
- (double)contentOffset;
- (bool)hidesTitleText;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (id)icon;
- (id)initWithTabBar:(id)arg1;
- (bool)isActive;
- (bool)isPinned;
- (bool)isPlaceholder;
- (bool)isReordering;
- (bool)isUnread;
- (unsigned long long)mediaStateIcon;
- (id)mediaStateMuteButton;
- (void)setActive:(bool)arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setContentOffset:(double)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setHidesTitleText:(bool)arg1;
- (void)setIcon:(id)arg1;
- (void)setIsPlaceholder:(bool)arg1;
- (void)setMediaStateIcon:(unsigned long long)arg1;
- (void)setPinned:(bool)arg1;
- (void)setReordering:(bool)arg1;
- (void)setShareParticipants:(id)arg1;
- (void)setTitleAnchorAdditionalOffset:(double)arg1;
- (void)setTitleAnchorEdge:(long long)arg1;
- (void)setTitleLayoutWidth:(double)arg1;
- (void)setTitleText:(id)arg1;
- (void)setUnread:(bool)arg1;
- (void)setVisibleEdge:(long long)arg1;
- (id)shareParticipants;
- (double)titleAnchorAdditionalOffset;
- (long long)titleAnchorEdge;
- (double)titleLayoutWidth;
- (void)updateTabBarStyle;
- (void)updateTitleTruncation;
- (long long)visibleEdge;

@end
