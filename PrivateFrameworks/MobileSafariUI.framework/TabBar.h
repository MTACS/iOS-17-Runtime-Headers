
@interface TabBar : UIView <TabCollectionView, TabCollectionViewDragDropSupport, UIGestureRecognizerDelegate, UIScrollViewDelegate> {
    bool  _allowsScrollingPinnedItems;
    <TabBarDelegate> * _delegate;
    UIDragInteraction * _dragInteraction;
    UIView * _dragPreviewContainer;
    bool  _draggingItem;
    bool  _hidesTitles;
    UIHoverGestureRecognizer * _hoverRecognizer;
    NSArray * _items;
    UIView * _leadingContainer;
    UIVisualEffectView * _leadingVibrancyEffectView;
    double  _minimumTabWidth;
    bool  _newTabVisibleInTabBar;
    NSIndexSet * _overflowPinnedItemIndexes;
    PinnedTabsOverflowButton * _pinnedOverflowButton;
    UIPanGestureRecognizer * _reorderRecognizer;
    UIScrollView * _scrollView;
    NSMutableArray * _tabBarItemViewReuseStack;
    SFTabHoverPreviewController * _tabHoverPreviewController;
    UITapGestureRecognizer * _tapRecognizer;
    long long  _tintStyle;
    UIView * _trailingContainer;
    UIVisualEffectView * _trailingVibrancyEffectView;
    unsigned long long  _visiblePinnedItemCount;
}

@property (nonatomic) bool allowsScrollingPinnedItems;
@property (nonatomic, readonly) bool canDragOntoActiveTab;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <TabBarDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (getter=isDraggingItem, nonatomic) bool draggingItem;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool hidesInactiveTabs;
@property (nonatomic) bool hidesTitles;
@property (nonatomic, readonly) unsigned long long indexOfCenterItem;
@property (nonatomic, readonly) long long itemDragContentType;
@property (nonatomic, readonly) double itemWidth;
@property (nonatomic, copy) NSArray *items;
@property (nonatomic, readonly) bool lastDecelerationWasInterrupted;
@property (nonatomic, readonly) unsigned long long layoutAxes;
@property (nonatomic, readonly) unsigned long long maxNumberOfVisibleTabs;
@property (nonatomic, readonly) double minimumTabWidth;
@property (nonatomic, readonly) ReorderingAutoscroller *reorderingAutoscroller;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsDropTransitionToItemView;
@property (nonatomic, readonly) SFTabHoverPreviewController *tabHoverPreviewController;
@property (nonatomic) long long tintStyle;
@property (nonatomic, readonly) UIView *view;

+ (double)defaultHeight;

- (void).cxx_destruct;
- (void)_activateItemIfNeeded:(id)arg1;
- (void)_didCompleteScrolling;
- (void)_didReceiveMemoryWarning:(id)arg1;
- (unsigned int)_edgeToAlignWithPreviewForItem:(id)arg1;
- (unsigned long long)_effectiveIndexForIndex:(unsigned long long)arg1 ofItems:(id)arg2 currentItems:(id)arg3;
- (id)_firstVisibleItemAfterIndex:(unsigned long long)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_frameForItemAtIndex:(unsigned long long)arg1;
- (double)_horizontalPositionForItemAtIndex:(unsigned long long)arg1;
- (double)_horizontalPositionForItemAtIndex:(unsigned long long)arg1 withSlowingFactor:(double)arg2;
- (double)_horizontalPositionForItemAtIndex:(unsigned long long)arg1 withSlowingFactor:(double)arg2 pinned:(bool)arg3;
- (void)_hover:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_initialFrameForItemAtIndex:(unsigned long long)arg1;
- (bool)_isScrollable;
- (bool)_itemAtIndexIsPinned:(unsigned long long)arg1;
- (id)_itemAtLocation:(struct CGPoint { double x1; double x2; })arg1;
- (void)_itemDidPressCloseButton:(id)arg1;
- (id)_itemForTouch:(id)arg1;
- (double)_itemWidth;
- (unsigned long long)_lastVisiblePinnedItemIndex;
- (void)_layOutPinnedOverflowButton;
- (void)_layoutContainers;
- (void)_layoutIndexes:(id)arg1 ofItems:(id)arg2 currentItems:(id)arg3;
- (void)_layoutItem:(id)arg1 atIndex:(unsigned long long)arg2 inRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 itemCount:(unsigned long long)arg4 beforeActiveItem:(bool)arg5;
- (unsigned long long)_maximumTruncationIndexForTitle:(id)arg1;
- (id)_overflowPinnedItemsMenuElements;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_pinnedItemInsets;
- (double)_pinnedItemsWidth;
- (void)_relinquishReusableTabBarItemView:(id)arg1;
- (void)_reorder:(id)arg1;
- (id)_requestReusableTabBarItemView;
- (void)_scrollToItemIfNeeded:(id)arg1;
- (void)_scrollTowardItem:(id)arg1 byAmount:(double)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_scrollableItemArea;
- (unsigned long long)_scrollableItemCount;
- (double)_scrollableWidth;
- (void)_tap:(id)arg1;
- (void)_toggleMediaStateMutedForItem:(id)arg1;
- (unsigned long long)_totalPinnedItemCount;
- (void)_updateBackground;
- (void)_updatePinnedItemCount;
- (void)_updateReorderRecognizer;
- (void)activateItem:(id)arg1;
- (void)addInteraction:(id)arg1;
- (bool)allowsScrollingPinnedItems;
- (void)cleanUpDragPreviewForItem:(id)arg1;
- (unsigned long long)contextMenuOptionsForItem:(id)arg1;
- (void)dealloc;
- (id)delegate;
- (id)dragPreviewForItem:(id)arg1 pinned:(bool)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameForItem:(id)arg1;
- (bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (bool)hidesTitles;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (unsigned long long)indexOfCenterItem;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isDraggingItem;
- (id)itemAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (long long)itemDragContentType;
- (double)itemWidth;
- (id)items;
- (void)layoutSubviews;
- (unsigned long long)maxNumberOfVisibleTabs;
- (double)minimumTabWidth;
- (void)scrollToItem:(id)arg1 animated:(bool)arg2;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(bool)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)setAllowsScrollingPinnedItems:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDraggingItem:(bool)arg1;
- (void)setHidesTitles:(bool)arg1;
- (void)setItems:(id)arg1;
- (void)setTintStyle:(long long)arg1;
- (bool)shouldPinItemsDroppedAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (bool)supportsDropTransitionToItemView;
- (id)tabHoverPreviewController;
- (id)targetItemForDropAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)targetedDragPreviewForLiftingItem:(id)arg1;
- (long long)tintStyle;
- (void)updatePinnedItems;
- (id)view;
- (id)viewForItem:(id)arg1;

@end
