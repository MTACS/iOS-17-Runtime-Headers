
@interface UnifiedField : UITextField <PKUITextInputPencilTextInput, UIGestureRecognizerDelegate> {
    CKContextCompleter * _contextCompleter;
    bool  _hasSelectedQuerySuggestion;
    bool  _isResigningFirstResponder;
    bool  _lastEditWasADeletion;
    bool  _lastInputWasQuerySuggestion;
    bool  _pastingText;
    NSString * _pendingTopHitNavigationText;
    bool  _performingExternalSearch;
    NSArray * _querySuggestions;
    <CompletionItem> * _reflectedItem;
    UITextCursorAssertionController * _textCursorAssertionController;
    <UITextCursorAssertion> * _textCursorHiddenAssertion;
    <CompletionItem> * _topHit;
    TopHitCompletionPromotionRecognizer * _topHitCompletionPromotionRecognizer;
    TopHitCompletionView * _topHitCompletionView;
    NSString * _userTypedText;
    bool  _usingPencilInput;
    long long  _voiceSearchState;
}

@property (nonatomic) long long autocapitalizationType;
@property (nonatomic) long long autocorrectionType;
@property (nonatomic, readonly) UITextPosition *beginningOfDocument;
@property (nonatomic, retain) CKContextCompleter *contextCompleter;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <UnifiedFieldDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool enablesReturnKeyAutomatically;
@property (nonatomic, readonly) UITextPosition *endOfDocument;
@property (nonatomic, readonly) bool hasSelectedQuerySuggestion;
@property (nonatomic, readonly) bool hasText;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long inlinePredictionType;
@property (nonatomic) <UITextInputDelegate> *inputDelegate;
@property (nonatomic, readonly) id insertDictationResultPlaceholder;
@property (nonatomic) bool isResigningFirstResponder;
@property (nonatomic) long long keyboardAppearance;
@property (nonatomic) long long keyboardType;
@property (nonatomic) bool lastEditWasADeletion;
@property (nonatomic, readonly) bool lastInputWasQuerySuggestion;
@property (nonatomic, readonly) UITextRange *markedTextRange;
@property (nonatomic, copy) NSDictionary *markedTextStyle;
@property (nonatomic, copy) UITextInputPasswordRules *passwordRules;
@property (getter=isPastingText, nonatomic, readonly) bool pastingText;
@property (nonatomic) bool performingExternalSearch;
@property (nonatomic, copy) UIColor *placeholderColor;
@property (nonatomic, readonly) double placeholderHorizontalInset;
@property (nonatomic, readonly) NSArray *querySuggestions;
@property (nonatomic, retain) <CompletionItem> *reflectedItem;
@property (nonatomic) long long returnKeyType;
@property (getter=isSecureTextEntry, nonatomic) bool secureTextEntry;
@property (copy) UITextRange *selectedTextRange;
@property (nonatomic) long long selectionAffinity;
@property (nonatomic) long long smartDashesType;
@property (nonatomic) long long smartInsertDeleteType;
@property (nonatomic) long long smartQuotesType;
@property (nonatomic) long long spellCheckingType;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSString *textContentType;
@property (nonatomic, readonly) UIView *textInputView;
@property (nonatomic, readonly) <UITextInputTokenizer> *tokenizer;
@property (getter=isUsingPencilInput, nonatomic, readonly) bool usingPencilInput;
@property (nonatomic) long long voiceSearchState;

- (void).cxx_destruct;
- (id)_allCombinationsOfModifierKeys;
- (bool)_allowsReflectedTopHit;
- (void)_cancelPendingTopHitNavigation;
- (void)_endEditingWithCurrentText;
- (bool)_hasContent;
- (void)_layoutTopHitCompletionView;
- (void)_promoteCompletionToSelection;
- (void)_promoteCompletionToSelectionSelectingSuffix:(bool)arg1 andMoveForward:(bool)arg2;
- (id)_reflectedItemCompletionString;
- (void)_removeTopHitCompletionView;
- (void)_restoreUserTypedText;
- (void)_setReflectedItem:(id)arg1 updateUserTypedPrefix:(bool)arg2;
- (void)_setTopHit:(id)arg1;
- (void)_textDidChangeFromTyping;
- (id)_textForPasteboard;
- (id)_textWithoutWhitespace;
- (id)_topHitForCurrentText;
- (unsigned long long)_unifiedFieldInputType;
- (bool)_updateQuerySuggestionsMatchingText:(id)arg1;
- (void)_updateReturnKey;
- (id)_voiceSearchInputModeForFirstResponder:(bool)arg1;
- (bool)_waitingForTopHitForCurrentText;
- (bool)becomeFirstResponder;
- (void)buildMenuWithBuilder:(id)arg1;
- (bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)clearUserTypedText;
- (void)completeDictation;
- (id)contextCompleter;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (void)dictationDidFinish:(id)arg1;
- (void)dictationRecognitionFailed;
- (void)dictationRecordingDidEnd;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })editRect;
- (void)endExternalSearch;
- (void)focusAndInsertCursorAtEnd;
- (void)focusNextKeyViewKeyPressed;
- (void)focusPreviousKeyViewKeyPressed;
- (bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (bool)hasSelectedQuerySuggestion;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)insertTextSuggestion:(id)arg1;
- (bool)isPastingText;
- (bool)isResigningFirstResponder;
- (bool)isUsingPencilInput;
- (id)keyCommands;
- (bool)keyboardInput:(id)arg1 shouldInsertText:(id)arg2 isMarkedText:(bool)arg3;
- (bool)keyboardInputShouldDelete:(id)arg1;
- (bool)lastEditWasADeletion;
- (bool)lastInputWasQuerySuggestion;
- (void)layoutSubviews;
- (void)moveLeftKeyPressed;
- (void)moveRightKeyPressed;
- (void)nextCompletionSelectionByRowKeyPressed;
- (void)nextCompletionSelectionBySectionKeyPressed;
- (void)paste:(id)arg1;
- (void)pasteAndGo:(id)arg1;
- (void)pasteAndSearch:(id)arg1;
- (bool)performingExternalSearch;
- (id)placeholderColor;
- (double)placeholderHorizontalInset;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })placeholderRectForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)previousCompletionSelectionByRowKeyPressed;
- (void)previousCompletionSelectionBySectionKeyPressed;
- (id)querySuggestions;
- (id)reflectedItem;
- (bool)resignFirstResponder;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rightViewRectForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)selectAll:(id)arg1;
- (void)selectCompletionKeyPressed;
- (void)setAttributedText:(id)arg1;
- (void)setContextCompleter:(id)arg1;
- (void)setIsResigningFirstResponder:(bool)arg1;
- (void)setLastEditWasADeletion:(bool)arg1;
- (void)setPerformingExternalSearch:(bool)arg1;
- (void)setPlaceholderColor:(id)arg1;
- (void)setReflectedItem:(id)arg1;
- (void)setText:(id)arg1;
- (void)setVoiceSearchState:(long long)arg1;
- (bool)supportsImagePaste;
- (void)topHitDidBecomeReady;
- (void)updateQuerySuggestionsFromUserTypedText;
- (long long)voiceSearchState;
- (void)willBeginPencilTextInputEditing;

@end
