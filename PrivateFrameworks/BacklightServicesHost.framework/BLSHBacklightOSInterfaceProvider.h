
@interface BLSHBacklightOSInterfaceProvider : BLSHBacklightOSTimerProvider <BLSHBacklightOSInterfaceProviding, BLSHTransparentFlipbookProvider, BLSHWatchdogDelegate, BLSHWatchdogProviderDelegate, CBDisplayStateClientDelegate> {
    float  _backlightDimmedFactor;
    <BLSCBDisplayStateDelegate> * _cbDisplayStateDelegate;
    double  _completionDelayForTesting;
    BLSHCriticalAssertProvider * _criticalAssertProvider;
    bool  _deviceSupportsAlwaysOn;
    CBDisplayStateClient * _displayStateClient;
    bool  _displayStateClientSupported;
    unsigned long long  _flipbookDiagnosticHistoryFrameLimit;
    unsigned long long  _flipbookDiagnosticHistoryMemoryLimit;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    bool  _lock_caBlanked;
    bool  _lock_caFlipbookEnabled;
    bool  _lock_caFlipbookSuppressed;
    long long  _lock_cbDisplayMode;
    long long  _lock_cbFlipbookState;
    bool  _lock_flipbookTransparent;
    bool  _lock_kernelSpecialMode;
    BLSHSuppressionEvent * _lock_lastSuppressionEvent;
    NSMutableDictionary * _lock_sceneObservers;
    NSMutableSet * _lock_sceneWorkspaces;
    bool  _lock_suppressionServiceActive;
    <BLSHWatchdogInvalidatable> * _lock_watchdogTimer;
    unsigned long long  _lock_watchdogType;
    <BLSHBacklightPlatformProvider> * _platformProvider;
    BSContinuousMachTimer * _setCBDisplayModeTimer;
    CMSuppressionManager * _suppressionManager;
    BLSHWatchdogProvider * _watchdogProvider;
}

@property (getter=isCABlanked, setter=setCABlanked:, nonatomic) bool caBlanked;
@property (getter=isCAFlipbookEnabled, setter=setCAFlipbookEnabled:, nonatomic) bool caFlipbookEnabled;
@property (getter=isCAFlipbookSuppressed, setter=setCAFlipbookSuppressed:, nonatomic) bool caFlipbookSuppressed;
@property (nonatomic, readonly) long long cbDisplayMode;
@property (setter=setCBDisplayStateDelegate:, retain) <BLSCBDisplayStateDelegate> *cbDisplayStateDelegate;
@property (nonatomic, readonly) long long cbFlipbookState;
@property (nonatomic) double completionDelayForTesting;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *delegateQueue;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) bool deviceSupportsAlwaysOn;
@property (nonatomic, readonly) unsigned long long flipbookDiagnosticHistoryFrameLimit;
@property (nonatomic, readonly) unsigned long long flipbookDiagnosticHistoryMemoryLimit;
@property (getter=isFlipbookTransparent, nonatomic) bool flipbookTransparent;
@property (readonly) unsigned long long hash;
@property (getter=isKernelAlwaysOnMode, nonatomic) bool kernelAlwaysOnMode;
@property (nonatomic, readonly) BLSHSuppressionEvent *lastSuppressionEvent;
@property (nonatomic, readonly) unsigned long long mach_continuous_time;
@property (nonatomic, readonly) NSDate *now;
@property (getter=isShowingBlankingWindow, nonatomic, readonly) bool showingBlankingWindow;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsFlipbookState;
@property (getter=isSuppressionServiceActive, nonatomic, readonly) bool suppressionServiceActive;
@property (getter=isTesting, nonatomic, readonly) bool testing;

+ (void)setSharedProvider:(id)arg1;
+ (id)sharedProvider;

- (void).cxx_destruct;
- (id)abortContext;
- (void)abortForWatchdog:(unsigned long long)arg1 payload:(void*)arg2 payloadSize:(unsigned int)arg3 explanation:(id)arg4;
- (id)addSceneObserver:(id)arg1 forSceneIdentityToken:(id)arg2;
- (long long)cbDisplayMode;
- (id)cbDisplayStateDelegate;
- (long long)cbFlipbookState;
- (id)createFlipbook;
- (id)createPowerAssertionWithIdentifier:(id)arg1;
- (id)createSystemActivityAssertionWithIdentifier:(id)arg1;
- (id)delegateQueue;
- (void)deregisterSceneWorkspace:(id)arg1;
- (bool)deviceSupportsAlwaysOn;
- (void)didCompleteSwitchToFlipbookState:(long long)arg1 withError:(id)arg2;
- (void)didCompleteTransitionToDisplayMode:(long long)arg1 withError:(id)arg2;
- (void)didDetectSignificantUserInteraction;
- (void)dispatchToMainQueueAfterSecondsDelay:(double)arg1 identifier:(id)arg2 block:(id /* block */)arg3;
- (void)endSuppressionService;
- (unsigned long long)flipbookDiagnosticHistoryFrameLimit;
- (unsigned long long)flipbookDiagnosticHistoryMemoryLimit;
- (id)identifier;
- (id)initWithPlatformProvider:(id)arg1;
- (bool)isCABlanked;
- (bool)isCAFlipbookEnabled;
- (bool)isCAFlipbookSuppressed;
- (bool)isFlipbookTransparent;
- (bool)isKernelAlwaysOnMode;
- (bool)isShowingBlankingWindow;
- (bool)isSuppressionServiceActive;
- (bool)isTailspinAvailable;
- (id)lastSuppressionEvent;
- (id)observeSignificantTimeChangeWithIdentifier:(id)arg1 handler:(id /* block */)arg2;
- (id)osInterfaceProvider;
- (bool)panicForWatchdog:(id)arg1;
- (void)registerHandlersForService:(id)arg1;
- (void)registerSceneWorkspace:(id)arg1;
- (id)removeSceneObserver:(id)arg1 forSceneIdentityToken:(id)arg2;
- (id)sceneWithIdentityToken:(id)arg1;
- (id)scheduleWatchdogWithDelegate:(id)arg1 explanation:(id)arg2 timeout:(double)arg3;
- (void)setCABlanked:(bool)arg1;
- (void)setCAFlipbookEnabled:(bool)arg1;
- (void)setCAFlipbookSuppressed:(bool)arg1;
- (void)setCBDisplayStateDelegate:(id)arg1;
- (void)setCompletionDelayForTesting:(double)arg1;
- (void)setFlipbookTransparent:(bool)arg1;
- (void)setKernelAlwaysOnMode:(bool)arg1;
- (void)setShowingBlankingWindow:(bool)arg1 fadeDuration:(double)arg2;
- (void)startSuppressionServiceWithHandler:(id /* block */)arg1;
- (bool)supportsFlipbookState;
- (void)switchToFlipbookState:(long long)arg1;
- (id)systemSleepMonitor;
- (void)transitionToDisplayMode:(long long)arg1 withDuration:(double)arg2;
- (void)willUnblank;
- (void)writeTailspinForWatchdog:(id)arg1 completion:(id /* block */)arg2;

@end
