
@interface _IMLegacyDaemonController : NSObject <IMDaemonControlling, IMDaemonControlling_Private> {
    bool  __autoReconnect;
    bool  __blocksConnectionAtResume;
    unsigned int  __capabilities;
    NSArray * __servicesToAllow;
    NSArray * __servicesToDeny;
    bool  _acquiringDaemonConnection;
    NSLock * _blockingLock;
    unsigned int  _cachedCapabilities;
    NSRecursiveLock * _connectionLock;
    NSObject<OS_dispatch_queue> * _daemonConnectionQueue;
    IMDaemonListener * _daemonListener;
    id  _delegate;
    unsigned int  _gMyFZListenerCapabilities;
    bool  _hasBeenSuspended;
    bool  _hasCheckedForDaemon;
    bool  _inBlockingConnect;
    unsigned int  _lastUpdatedCapabilities;
    NSString * _listenerID;
    NSObject<OS_dispatch_queue> * _listenerLockQueue;
    NSMutableDictionary * _listenerMap;
    IMLocalObject * _localObject;
    NSObject<OS_dispatch_queue> * _localObjectLockQueue;
    bool  _preventReconnect;
    NSProtocolChecker * _protocol;
    IMDaemonQueryController * _queryController;
    struct os_unfair_recursive_lock_s { 
        struct os_unfair_lock_s { 
            unsigned int _os_unfair_lock_opaque; 
        } ourl_lock; 
        unsigned int ourl_count; 
    }  _remoteDaemonLock;
    NSObject<OS_dispatch_queue> * _remoteMessageQueue;
    IMRemoteObject<IMDaemonProtocol> * _remoteObject;
    <IMDaemonProtocol> * _replyingRemoteDaemon;
    bool  _requestingConnection;
    struct __CFRunLoopSource { } * _runLoopSource;
    NSMutableArray * _services;
    <IMDaemonProtocol> * _synchronousReplyingRemoteDaemon;
}

@property (setter=_setAutoReconnect:) bool _autoReconnect;
@property (setter=_setBlocksConnectionAtResume:, nonatomic) bool _blocksConnectionAtResume;
@property (setter=__setCapabilities:) unsigned int _capabilities;
@property (setter=_setServicesToAllow:, retain) NSArray *_servicesToAllow;
@property (setter=_setServicesToDeny:, retain) NSArray *_servicesToDeny;
@property (nonatomic) bool acquiringDaemonConnection;
@property (nonatomic, retain) NSLock *blockingLock;
@property (nonatomic) unsigned int cachedCapabilities;
@property (nonatomic, readonly) unsigned int capabilities;
@property (getter=isConnected, nonatomic, readonly) bool connected;
@property (nonatomic, retain) NSRecursiveLock *connectionLock;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *daemonConnectionQueue;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) id delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) unsigned int gMyFZListenerCapabilities;
@property (nonatomic) bool hasBeenSuspended;
@property (nonatomic) bool hasCheckedForDaemon;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool inBlockingConnect;
@property (nonatomic, readonly) bool isConnecting;
@property (nonatomic) unsigned int lastUpdatedCapabilities;
@property (nonatomic, retain) IMDaemonListener *listener;
@property (setter=_setListenerID:, nonatomic, retain) NSString *listenerID;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *listenerLockQueue;
@property (nonatomic, retain) NSMutableDictionary *listenerMap;
@property (nonatomic, retain) IMLocalObject *localObject;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *localObjectLockQueue;
@property (nonatomic) bool preventReconnect;
@property (nonatomic, retain) NSProtocolChecker *protocol;
@property (nonatomic, readonly) IMDaemonQueryController *queryController;
@property (nonatomic, readonly) <IMDaemonProtocol> *remoteDaemon;
@property (nonatomic) struct os_unfair_recursive_lock_s { struct os_unfair_lock_s { unsigned int x_1_1_1; } x1; unsigned int x2; } remoteDaemonLock;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *remoteMessageQueue;
@property (nonatomic, retain) IMRemoteObject<IMDaemonProtocol> *remoteObject;
@property (nonatomic, readonly) <IMDaemonProtocol> *replyingRemoteDaemon;
@property (getter=isRequestingConnection, nonatomic, readonly) bool requestingConnection;
@property (nonatomic) struct __CFRunLoopSource { }*runLoopSource;
@property (nonatomic, retain) NSMutableArray *services;
@property (readonly) Class superclass;
@property (nonatomic, readonly) <IMDaemonProtocol> *synchronousRemoteDaemon;
@property (nonatomic, readonly) <IMDaemonProtocol> *synchronousReplyingRemoteDaemon;

+ (bool)_applicationWillTerminate;
+ (void)_blockUntilSendQueueIsEmpty;
+ (void)_setApplicationWillTerminate;

- (void).cxx_destruct;
- (bool)__isLocalObjectValidOnQueue:(id)arg1;
- (bool)__isRemoteObjectValid;
- (void)__setCapabilities:(unsigned int)arg1;
- (bool)_acquiringDaemonConnection;
- (void)_agentDidLaunchNotification:(id)arg1;
- (bool)_autoReconnect;
- (void)_blockUntilSendQueueIsEmpty;
- (bool)_blocksConnectionAtResume;
- (unsigned int)_capabilities;
- (void)_connectToDaemonWithLaunch:(bool)arg1 capabilities:(unsigned int)arg2;
- (double)_connectionTimeout;
- (void)_disconnectFromDaemonWithForce:(bool)arg1;
- (void)_handleDaemonException:(id)arg1;
- (void)_listenerSetUpdated;
- (void)_localObjectCleanup;
- (bool)_makeConnectionWithLaunch:(bool)arg1 completionBlock:(id /* block */)arg2;
- (void)_noteSetupComplete;
- (id)_remoteObject;
- (void)_remoteObjectCleanup;
- (id)_servicesToAllow;
- (id)_servicesToDeny;
- (void)_setAutoReconnect:(bool)arg1;
- (void)_setBlocksConnectionAtResume:(bool)arg1;
- (void)_setCapabilities:(unsigned int)arg1;
- (void)_setListenerID:(id)arg1;
- (void)_setServicesToAllow:(id)arg1;
- (void)_setServicesToDeny:(id)arg1;
- (bool)acquiringDaemonConnection;
- (bool)addListenerID:(id)arg1 capabilities:(unsigned int)arg2;
- (void)blockUntilConnected;
- (id)blockingLock;
- (unsigned int)cachedCapabilities;
- (unsigned int)capabilities;
- (unsigned int)capabilitiesForListenerID:(id)arg1;
- (bool)connectToDaemon;
- (bool)connectToDaemonWithLaunch:(bool)arg1;
- (bool)connectToDaemonWithLaunch:(bool)arg1 capabilities:(unsigned int)arg2 blockUntilConnected:(bool)arg3;
- (id)connectionLock;
- (bool)consumeQueryContext:(id)arg1;
- (id)daemonConnectionQueue;
- (void)dealloc;
- (id)delegate;
- (void)disconnectFromDaemon;
- (void)disconnectFromDaemonWithForce:(bool)arg1;
- (void)forwardInvocation:(id)arg1;
- (unsigned int)gMyFZListenerCapabilities;
- (bool)hasBeenSuspended;
- (bool)hasCheckedForDaemon;
- (bool)hasListenerForID:(id)arg1;
- (bool)inBlockingConnect;
- (id)init;
- (bool)isConnected;
- (bool)isConnecting;
- (bool)isRequestingConnection;
- (void)killDaemon;
- (unsigned int)lastUpdatedCapabilities;
- (id)listener;
- (void)listener:(id)arg1 setListenerCapabilities:(unsigned int)arg2;
- (void)listener:(id)arg1 setValue:(id)arg2 ofPersistentProperty:(id)arg3;
- (void)listener:(id)arg1 setValue:(id)arg2 ofProperty:(id)arg3;
- (id)listenerID;
- (id)listenerLockQueue;
- (id)listenerMap;
- (id)localObject;
- (void)localObjectDiedNotification:(id)arg1;
- (bool)localObjectExists;
- (id)localObjectLockQueue;
- (id)methodSignatureForSelector:(SEL)arg1;
- (bool)preventReconnect;
- (unsigned long long)processCapabilities;
- (id)protocol;
- (id)queryController;
- (id)remoteDaemon;
- (struct os_unfair_recursive_lock_s { struct os_unfair_lock_s { unsigned int x_1_1_1; } x1; unsigned int x2; })remoteDaemonLock;
- (id)remoteMessageQueue;
- (id)remoteObject;
- (void)remoteObjectDiedNotification:(id)arg1;
- (bool)remoteObjectExists;
- (bool)removeListenerID:(id)arg1;
- (id)replyingRemoteDaemon;
- (struct __CFRunLoopSource { }*)runLoopSource;
- (void)sendQueryWithReply:(bool)arg1 query:(id /* block */)arg2;
- (id)services;
- (void)setAcquiringDaemonConnection:(bool)arg1;
- (void)setBlockingLock:(id)arg1;
- (void)setCachedCapabilities:(unsigned int)arg1;
- (bool)setCapabilities:(unsigned int)arg1 forListenerID:(id)arg2;
- (void)setConnectionLock:(id)arg1;
- (void)setDaemonConnectionQueue:(id)arg1;
- (void)setDaemonLogsOutWithoutStatusListeners:(bool)arg1;
- (void)setDaemonTerminatesWithoutListeners:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setGMyFZListenerCapabilities:(unsigned int)arg1;
- (void)setHasBeenSuspended:(bool)arg1;
- (void)setHasCheckedForDaemon:(bool)arg1;
- (void)setInBlockingConnect:(bool)arg1;
- (void)setLastUpdatedCapabilities:(unsigned int)arg1;
- (void)setListener:(id)arg1;
- (void)setListenerLockQueue:(id)arg1;
- (void)setListenerMap:(id)arg1;
- (void)setLocalObject:(id)arg1;
- (void)setLocalObjectLockQueue:(id)arg1;
- (void)setPreventReconnect:(bool)arg1;
- (void)setProtocol:(id)arg1;
- (void)setQueryContext:(id)arg1;
- (void)setRemoteDaemonLock:(struct os_unfair_recursive_lock_s { struct os_unfair_lock_s { unsigned int x_1_1_1; } x1; unsigned int x2; })arg1;
- (void)setRemoteObject:(id)arg1;
- (void)setRunLoopSource:(struct __CFRunLoopSource { }*)arg1;
- (void)setServices:(id)arg1;
- (id)synchronousRemoteDaemon;
- (id)synchronousReplyingRemoteDaemon;
- (void)systemApplicationDidEnterBackground;
- (void)systemApplicationDidResume;
- (void)systemApplicationDidSuspend;
- (void)systemApplicationWillEnterForeground;
- (void)unsetQueryContext:(id)arg1;

@end
