
@interface IMDaemonController : NSObject <IMDaemonControlling, IMDaemonControlling_Private> {
    bool  __blocksConnectionAtResume;
    NSArray * __servicesToAllow;
    NSArray * __servicesToDeny;
    IMMultiplexedDaemonConnection * _anonymousMultiplexedConnection;
    IMDaemonConnection * _connection;
    id  _delegate;
    IMDaemonListener * _listener;
    NSString * _listenerID;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    NSMapTable * _multiplexedConnections;
    NSDictionary * _processContext;
    IMDaemonQueryController * _queryController;
    IMDistributingProxy * _remoteDaemonProxy;
    NSMutableDictionary * _retainedMultiplexedConnections;
}

@property (setter=_setBlocksConnectionAtResume:, nonatomic) bool _blocksConnectionAtResume;
@property (setter=_setServicesToAllow:, retain) NSArray *_servicesToAllow;
@property (setter=_setServicesToDeny:, retain) NSArray *_servicesToDeny;
@property (nonatomic, retain) IMMultiplexedDaemonConnection *anonymousMultiplexedConnection;
@property (nonatomic, readonly) unsigned int capabilities;
@property (getter=isConnected, nonatomic, readonly) bool connected;
@property (nonatomic, readonly) IMDaemonConnection *connection;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) id delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isConnecting;
@property (nonatomic, readonly) IMDaemonListener *listener;
@property (setter=_setListenerID:, nonatomic, retain) NSString *listenerID;
@property (nonatomic, readonly) struct os_unfair_lock_s { unsigned int x1; } lock;
@property (nonatomic, readonly) NSMapTable *multiplexedConnections;
@property (nonatomic, readonly) unsigned long long processCapabilities;
@property (nonatomic, readonly) NSDictionary *processContext;
@property (nonatomic, readonly) IMDaemonQueryController *queryController;
@property (nonatomic, readonly) <IMDaemonProtocol> *remoteDaemon;
@property (nonatomic, readonly) IMDistributingProxy *remoteDaemonProxy;
@property (nonatomic, readonly) <IMDaemonProtocol> *replyingRemoteDaemon;
@property (nonatomic, readonly) NSMutableDictionary *retainedMultiplexedConnections;
@property (readonly) Class superclass;
@property (nonatomic, readonly) <IMDaemonProtocol> *synchronousRemoteDaemon;
@property (nonatomic, readonly) <IMDaemonProtocol> *synchronousReplyingRemoteDaemon;

+ (void)_blockUntilSendQueueIsEmpty;
+ (id)sharedController;
+ (id)sharedInstance;

- (void).cxx_destruct;
- (void)_blockUntilSendQueueIsEmpty;
- (bool)_blocksConnectionAtResume;
- (void)_capabilitiesDidChange;
- (void)_capabilitiesDidChangeWithContextChange:(bool)arg1;
- (unsigned long long)_capabilitiesForMultiplexedConnectionWithUniqueID:(id)arg1;
- (unsigned long long)_clientCapabilitiesForLegacyClientWithListenerID:(id)arg1 requestedCapabilities:(unsigned long long)arg2;
- (bool)_clientRequiresSynchronousConnectionRescueWithListenerID:(id)arg1;
- (void)_connectWithCompletion:(id /* block */)arg1;
- (void)_connectWithContextChange:(bool)arg1;
- (bool)_hasMultiplexedConnectionWithUniqueID:(id)arg1;
- (void)_invalidateMultiplexedConnectionWithUniqueID:(id)arg1;
- (id)_multiplexedConnectionWithUniqueID:(id)arg1 label:(id)arg2 capabilities:(unsigned long long)arg3 context:(id)arg4 retain:(bool)arg5;
- (void)_noteSetupComplete;
- (id)_servicesToAllow;
- (id)_servicesToDeny;
- (void)_setBlocksConnectionAtResume:(bool)arg1;
- (void)_setListenerID:(id)arg1;
- (void)_setServicesToAllow:(id)arg1;
- (void)_setServicesToDeny:(id)arg1;
- (void)_updateAnonymousMultiplexedConnectionWithAddedCapabilities:(unsigned long long)arg1;
- (bool)addListenerID:(id)arg1 capabilities:(unsigned int)arg2;
- (id)anonymousMultiplexedConnection;
- (void)blockUntilConnected;
- (unsigned int)capabilities;
- (unsigned int)capabilitiesForListenerID:(id)arg1;
- (bool)connectToDaemon;
- (bool)connectToDaemonWithLaunch:(bool)arg1;
- (bool)connectToDaemonWithLaunch:(bool)arg1 capabilities:(unsigned int)arg2 blockUntilConnected:(bool)arg3;
- (id)connection;
- (id)delegate;
- (void)disconnectFromDaemon;
- (bool)hasListenerForID:(id)arg1;
- (id)init;
- (bool)isConnected;
- (bool)isConnecting;
- (void)killDaemon;
- (id)listener;
- (id)listenerID;
- (struct os_unfair_lock_s { unsigned int x1; })lock;
- (id)multiplexedConnectionWithLabel:(id)arg1 capabilities:(unsigned long long)arg2 context:(id)arg3;
- (id)multiplexedConnections;
- (unsigned long long)processCapabilities;
- (id)processContext;
- (id)queryController;
- (id)remoteDaemon;
- (id)remoteDaemonProxy;
- (bool)removeListenerID:(id)arg1;
- (id)replyingRemoteDaemon;
- (void)requestSetup;
- (id)retainedMultiplexedConnections;
- (void)sendQueryWithReply:(bool)arg1 query:(id /* block */)arg2;
- (void)setAnonymousMultiplexedConnection:(id)arg1;
- (bool)setCapabilities:(unsigned int)arg1 forListenerID:(id)arg2;
- (void)setDelegate:(id)arg1;
- (id)synchronousRemoteDaemon;
- (id)synchronousReplyingRemoteDaemon;

@end
