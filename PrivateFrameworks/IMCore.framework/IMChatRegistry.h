
@interface IMChatRegistry : NSObject <IMAssistantChatDataSource, TUConversationManagerDelegate> {
    bool  __isLoading;
    NSMutableArray * _allChatsInProcess;
    bool  _blackholedChatsExist;
    NSMutableArray * _cachedChatsInThreadNameMap;
    NSMutableDictionary * _chatGUIDToChatMap;
    NSMutableDictionary * _chatGUIDToCurrentThreadMap;
    NSMutableDictionary * _chatGUIDToInfoMap;
    NSMutableDictionary * _chatGUIDToiMessageSentOrReceivedMap;
    NSMutableDictionary * _chatPersonIDToChatMap;
    NSMutableDictionary * _chatsBeingLoadedMap;
    IMContactStore * _contactStore;
    NSObject<OS_dispatch_queue> * _contactStoreQueue;
    TUConversationManager * _conversationManager;
    bool  _daemonHadTerminated;
    unsigned long long  _defaultNumberOfMessagesToLoad;
    NSDictionary * _filterCategoryToEarliestInitiallyFetchedLastMessageDate;
    bool  _filterediMessageChatsExist;
    bool  _firstLoad;
    NSMutableDictionary * _groupIDToChatMap;
    NSMutableDictionary * _groupParticipantToChatsMap;
    NSString * _historyModificationStamp;
    bool  _isInternalInstall;
    long long  _lastFailedMessageDate;
    bool  _loading;
    IMTimer * _markAsReadTimer;
    bool  _postMessageSentNotifications;
    NSArray * _preExistingAllChats;
    bool  _processingChatCacheMiss;
    NSSet * _registryChangeHistoryChatsToObserve;
    NSSet * _registryChangeHistoryChatsToUnregister;
    NSMutableDictionary * _simulatedChatGUIDToChatMap;
    NSArray * _simulatedChats;
    NSMutableDictionary * _threadNameToChatMap;
    double  _timerStartTimeInterval;
    unsigned long long  _unreadCount;
    NSUserActivity * _userActivity;
    bool  _wantsHistoryReload;
}

@property (setter=_setDefaultNumberOfMessagesToLoad:, nonatomic) unsigned long long _defaultNumberOfMessagesToLoad;
@property (nonatomic, readonly) bool _isLoading;
@property (setter=_setPostMessageSentNotifications:, nonatomic) bool _postMessageSentNotifications;
@property (nonatomic, readonly) NSMutableArray *allChatsInProcess;
@property (nonatomic, readonly) NSArray *allExistingChats;
@property (nonatomic, readonly) bool blackholedChatsExist;
@property (nonatomic) bool blackholedChatsExist;
@property (nonatomic, readonly, copy) NSArray *cachedChats;
@property (nonatomic, readonly) NSMutableArray *cachedChatsInThreadNameMap;
@property (nonatomic, readonly) NSMutableDictionary *chatGUIDToChatMap;
@property (nonatomic, readonly) NSMutableDictionary *chatGUIDToCurrentThreadMap;
@property (nonatomic, readonly) NSMutableDictionary *chatGUIDToInfoMap;
@property (nonatomic, readonly) NSMutableDictionary *chatGUIDToiMessageSentOrReceivedMap;
@property (nonatomic, retain) NSMutableDictionary *chatPersonIDToChatMap;
@property (nonatomic, retain) NSMutableDictionary *chatsBeingLoadedMap;
@property (nonatomic, retain) IMContactStore *contactStore;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *contactStoreQueue;
@property (nonatomic, readonly) TUConversationManager *conversationManager;
@property (nonatomic, readonly) IMDaemonController *daemonController;
@property (nonatomic) bool daemonHadTerminated;
@property (nonatomic, readonly) IMDaemonQueryController *daemonQueryController;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) NSDictionary *filterCategoryToEarliestInitiallyFetchedLastMessageDate;
@property (nonatomic) bool filterediMessageChatsExist;
@property (getter=isFirstLoad, nonatomic) bool firstLoad;
@property (nonatomic, readonly) NSMutableDictionary *groupIDToChatMap;
@property (nonatomic, readonly) NSMutableDictionary *groupParticipantToChatsMap;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSString *historyModificationStamp;
@property (nonatomic) bool isInternalInstall;
@property (nonatomic) long long lastFailedMessageDate;
@property (nonatomic) bool loading;
@property (nonatomic, retain) IMTimer *markAsReadTimer;
@property (nonatomic, readonly) unsigned long long numberOfCachedChats;
@property (nonatomic, readonly) unsigned long long numberOfExistingChats;
@property (nonatomic, retain) NSArray *preExistingAllChats;
@property (nonatomic) bool processingChatCacheMiss;
@property (nonatomic, retain) NSSet *registryChangeHistoryChatsToObserve;
@property (nonatomic, retain) NSSet *registryChangeHistoryChatsToUnregister;
@property (nonatomic, readonly) <IMDaemonProtocol> *remoteDaemon;
@property (nonatomic, readonly) IMSharedWithYouManager *sharedWithYouManager;
@property (nonatomic, readonly) NSMutableDictionary *simulatedChatGUIDToChatMap;
@property (setter=_setSimulatedChats:, nonatomic, retain) NSArray *simulatedChats;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSMutableDictionary *threadNameToChatMap;
@property (nonatomic) double timerStartTimeInterval;
@property (nonatomic) unsigned long long unreadCount;
@property (nonatomic, retain) NSUserActivity *userActivity;
@property (nonatomic) bool wantsHistoryReload;

// Image: /System/Library/PrivateFrameworks/IMCore.framework/IMCore

+ (bool)hasInitializedChatFiltering;
+ (Class)messageClass;
+ (id)performanceLogHandle;
+ (void)setHasInitializedChatFiltering:(bool)arg1;
+ (void)setMessageClass:(Class)arg1;
+ (id)sharedInstance;
+ (id)sharedRegistry;
+ (id)sharedRegistryIfAvailable;

- (void).cxx_destruct;
- (void)_IMChatGetIdentifiersAndServicesTestHookWithChatRegistry:(id)arg1 chat:(id)arg2 identifiers:(id*)arg3 services:(id*)arg4 personCentricEnabled:(bool)arg5;
- (void)__handleChatReconstructions:(id)arg1;
- (void)__handleMergedChatReconstructions:(id)arg1;
- (void)_account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 messagesUpdated:(id)arg5;
- (void)_account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 messagesUpdated:(id)arg5 suppressNotification:(bool)arg6;
- (id)_activeTUConversations;
- (void)_addChat:(id)arg1 participantSet:(id)arg2;
- (void)_automation_markAsReadQuery:(id)arg1 finishedWithResult:(bool)arg2;
- (void)_batchFetchRemainingContactsOnLaunch;
- (id)_bestChatForHandleIDs:(id)arg1;
- (id)_cachedChatForChatDictionary:(id)arg1 participants:(id)arg2 participantHash:(id)arg3;
- (id)_cachedChatWithDisplayName:(id)arg1;
- (id)_cachedChatWithGUID:(id)arg1;
- (id)_cachedChatWithGroupID:(id)arg1;
- (id)_cachedChatWithHandle:(id)arg1;
- (id)_cachedChatWithHandles:(id)arg1 allowAlternativeService:(bool)arg2 groupID:(id)arg3 displayName:(id)arg4 joinedChatsOnly:(bool)arg5;
- (id)_cachedChatWithIdentifier:(id)arg1;
- (id)_cachedChatWithIdentifier:(id)arg1 style:(unsigned char)arg2;
- (id)_cachedChatWithPersonID:(id)arg1;
- (id)_cachedChatsWithDisplayName:(id)arg1;
- (id)_cachedChatsWithMessage:(id)arg1;
- (id)_cachedChatsWithMessageGUID:(id)arg1;
- (id)_cachedGroupChatForGroupChatDictionary:(id)arg1 participants:(id)arg2 participantHash:(id)arg3;
- (id)_cachedOneToOneChatForChatDictionary:(id)arg1 participants:(id)arg2 participantHash:(id)arg3;
- (void)_chat:(id)arg1 inviteParticipants:(id)arg2 reason:(id)arg3 toiMessageChat:(bool)arg4;
- (void)_chat:(id)arg1 joinWithProperties:(id)arg2;
- (void)_chat:(id)arg1 removeParticipants:(id)arg2 reason:(id)arg3 fromiMessageChat:(bool)arg4;
- (void)_chat:(id)arg1 resendEditedMessageItem:(id)arg2 partIndex:(long long)arg3 withBackwardCompatabilityText:(id)arg4;
- (void)_chat:(id)arg1 retryGroupPhotoUpload:(id)arg2;
- (void)_chat:(id)arg1 sendEditedMessageItem:(id)arg2 previousMessageItem:(id)arg3 partIndex:(long long)arg4 editType:(unsigned long long)arg5 backwardCompatabilityText:(id)arg6;
- (void)_chat:(id)arg1 sendGroupPhotoUpdate:(id)arg2;
- (void)_chat:(id)arg1 sendMessage:(id)arg2;
- (void)_chat:(id)arg1 sendMessage:(id)arg2 withAccount:(id)arg3;
- (void)_chat:(id)arg1 sendNotifyRecipientCommandForMessage:(id)arg2;
- (void)_chat:(id)arg1 sendPlayedReceiptForMessage:(id)arg2;
- (void)_chat:(id)arg1 sendReadReceiptForMessages:(id)arg2;
- (void)_chat:(id)arg1 sendSavedReceiptForMessage:(id)arg2;
- (void)_chat:(id)arg1 sendSyndicationAction:(id)arg2;
- (void)_chat:(id)arg1 sendUpdatedCollaborationMetadata:(id)arg2 forMessageGUID:(id)arg3;
- (void)_chat:(id)arg1 setPlayedExpressiveSendForMessage:(id)arg2;
- (void)_chat:(id)arg1 setProperties:(id)arg2 ofParticipant:(id)arg3;
- (void)_chat:(id)arg1 setValue:(id)arg2 forChatProperty:(id)arg3;
- (void)_chat:(id)arg1 updateDisplayName:(id)arg2;
- (void)_chat:(id)arg1 updateIsBlackholed:(bool)arg2;
- (void)_chat:(id)arg1 updateIsDeletingIncomingMessages:(bool)arg2;
- (void)_chat:(id)arg1 updateIsFiltered:(long long)arg2;
- (void)_chat:(id)arg1 updateIsRecovered:(bool)arg2;
- (void)_chat:(id)arg1 updateLastAddressedHandle:(id)arg2;
- (void)_chat:(id)arg1 updateLastAddressedSIMID:(id)arg2;
- (id)_chatForIdentifiers:(id)arg1;
- (void)_chatLoadedWithChatIdentifier:(id)arg1 chats:(id)arg2;
- (void)_chat_clearHistory:(id)arg1 beforeGUID:(id)arg2 afterGUID:(id)arg3 queryID:(id)arg4;
- (void)_chat_closeSession:(id)arg1;
- (void)_chat_declineInvitation:(id)arg1;
- (void)_chat_downloadPurgedAttachmentsForChat:(id)arg1;
- (void)_chat_isDownloadingPurgedAssetsForChat:(id)arg1 queryID:(id)arg2 loadImmediately:(bool)arg3;
- (void)_chat_leave:(id)arg1 leavingiMessageChat:(bool)arg2;
- (void)_chat_loadAttachments:(id)arg1 queryID:(id)arg2 loadImmediately:(bool)arg3;
- (void)_chat_loadFrequentReplies:(id)arg1 limit:(unsigned long long)arg2 queryID:(id)arg3 loadImmediately:(bool)arg4;
- (void)_chat_loadHistory:(id)arg1 limit:(unsigned long long)arg2 beforeGUID:(id)arg3 afterGUID:(id)arg4 threadIdentifier:(id)arg5 queryID:(id)arg6 synchronous:(bool)arg7 completion:(id /* block */)arg8;
- (void)_chat_loadPagedHistory:(id)arg1 numberOfMessagesBefore:(unsigned long long)arg2 numberOfMessagesAfter:(unsigned long long)arg3 messageGUID:(id)arg4 threadIdentifier:(id)arg5 queryID:(id)arg6 synchronous:(bool)arg7 completion:(id /* block */)arg8;
- (void)_chat_loadUncachedAttachmentsCount:(id)arg1 queryID:(id)arg2 loadImmediately:(bool)arg3;
- (void)_chat_loadUnreadMessages:(id)arg1 limit:(unsigned long long)arg2 fallbackGUID:(id)arg3 queryID:(id)arg4 loadImmediately:(bool)arg5;
- (void)_chat_markAsSpam:(id)arg1 queryID:(id)arg2 autoReport:(bool)arg3 isJunkReportedToCarrier:(bool)arg4;
- (void)_chat_markAsSpam:(id)arg1 queryID:(id)arg2 isJunkReportedToCarrier:(bool)arg3;
- (void)_chat_markAsSpamAutomatically:(id)arg1;
- (void)_chat_markLastMessageAsUnread:(id)arg1;
- (void)_chat_recoverFromJunk:(id)arg1;
- (void)_chat_remove:(id)arg1;
- (void)_chat_sendReadReceiptForAllMessages:(id)arg1;
- (void)_chat_storeItem:(id)arg1 inChat:(id)arg2;
- (id)_chatsMatchingStatusSubscription:(id)arg1;
- (void)_checkIfItemIsCorrupt:(id)arg1;
- (void)_checkLimitAndSetMessagesToKeepLoadedIfNeeded:(unsigned long long)arg1 chat:(id)arg2;
- (void)_clearExistingTypingIndicatorsWithMessageGUID:(id)arg1 excludingChatWithIdentifier:(id)arg2;
- (void)_completeChatLoadQueryWithChat:(id)arg1 queryID:(id)arg2;
- (id)_copyMergedChatsPairedArrayFromMergedChatsArray:(id)arg1;
- (void)_daemonCompletedDeferredSetup;
- (void)_daemonReallyDied:(id)arg1;
- (unsigned long long)_defaultNumberOfMessagesToLoad;
- (id)_earliestLastMessageDateFromChatDictionaries:(id)arg1;
- (id)_eventForMessage:(id)arg1;
- (id)_existingChatForHandleUsingPersonID:(id)arg1;
- (id)_existingChatForTUConversation:(id)arg1;
- (id)_existingChatFromSiblingsForHandle:(id)arg1;
- (id)_existingChatWithHandle:(id)arg1 fixChatHandle:(bool)arg2;
- (id)_existingChatWithIdentifier:(id)arg1 style:(unsigned char)arg2 account:(id)arg3;
- (id)_existingChatWithIdentifier:(id)arg1 style:(unsigned char)arg2 service:(id)arg3;
- (void)_fetchInitialBatchOfContactsOnLaunch;
- (void)_handleAddressBookChange:(id)arg1;
- (void)_handleAvailabilityChangedNotification:(id)arg1;
- (void)_handleAvailabilityInvitationReceivedNotification:(id)arg1;
- (void)_handleAvailabilityStateChangedNotification:(id)arg1;
- (void)_handleCachingAliasToCNIDMap:(id)arg1;
- (void)_handleChatParticipantsDidChange:(id)arg1;
- (void)_handleChatReconstructions:(id)arg1;
- (void)_handleMergedChatReconstructions:(id)arg1;
- (bool)_hasChat:(id)arg1 forService:(id)arg2;
- (id)_inPersonFromIMHandle:(id)arg1 isMe:(bool)arg2;
- (id)_inPersonHandleFromIMHandle:(id)arg1 contact:(id)arg2;
- (id)_inPersonNameForContact:(id)arg1 imHandle:(id)arg2;
- (id)_interactionForMessage:(id)arg1 inChat:(id)arg2;
- (bool)_isLoading;
- (id)_lastMessageDateForQueryFromChatDictionary:(id)arg1;
- (id)_lastMessageItemForChatDictionary:(id)arg1;
- (void)_loadAllSiblingChatsForHandlesAssociatedWithChats:(id)arg1 waitForReply:(bool)arg2 completionHandler:(id /* block */)arg3;
- (void)_loadChatsFilteredUsingPredicate:(id)arg1 lastMessageOlderThan:(id)arg2 limit:(unsigned long long)arg3 waitForReply:(bool)arg4 completionHandler:(id /* block */)arg5;
- (void)_loadSiblingsForChatIfNeeded:(id)arg1;
- (void)_markHasHadSuccessfulQueryForChat:(id)arg1;
- (unsigned long long)_nicknameSharingAudience;
- (bool)_nicknameSharingEnabled;
- (void)_noteChatDealloc:(id)arg1;
- (void)_noteChatInit:(id)arg1;
- (id)_ownerHandleStringsFromSubscription:(id)arg1;
- (id)_participantsForChatDictionary:(id)arg1;
- (id)_performChatCacheLookupWithBlock:(id /* block */)arg1 cacheMissQueryKey:(id)arg2 queryBlock:(id /* block */)arg3;
- (id)_performSingleChatCacheLookupWithBlock:(id /* block */)arg1 cacheMissQueryKey:(id)arg2 queryBlock:(id /* block */)arg3;
- (id)_possiblyUnregisteredCachedChatForRoom:(id)arg1 onAccount:(id)arg2;
- (id)_possiblyUnregisteredCachedChatWithHandle:(id)arg1;
- (id)_possiblyUnregisteredCachedChatWithHandles:(id)arg1 style:(unsigned char)arg2 groupID:(id)arg3 displayName:(id)arg4 joinedChatsOnly:(bool)arg5;
- (id)_possiblyUnregisteredCachedChatWithIdentifier:(id)arg1 style:(unsigned char)arg2 account:(id)arg3;
- (bool)_postMessageSentNotifications;
- (void)_postMultiWayStateChangedNotification:(id)arg1;
- (void)_previouslyBlackholedChatLoadedWithHandleIDs:(id)arg1 chat:(id)arg2;
- (id)_processLoadedChatDictionaries:(id)arg1;
- (void)_processMessageForAccount:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 groupID:(id)arg5 chatPersonCentricID:(id)arg6 message:(id)arg7;
- (void)_processMessagesForAccount:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 groupID:(id)arg5 chatPersonCentricID:(id)arg6 messages:(id)arg7 messagesComingFromStorage:(bool)arg8;
- (void)_registerChat:(id)arg1 isIncoming:(bool)arg2 guid:(id)arg3;
- (void)_registerChatDictionary:(id)arg1 forChat:(id)arg2 isIncoming:(bool)arg3 newGUID:(id)arg4;
- (void)_registerChatDictionary:(id)arg1 forChat:(id)arg2 isIncoming:(bool)arg3 newGUID:(id)arg4 shouldPostNotification:(bool)arg5;
- (void)_removeFromGroupParticipantToChatsMap:(id)arg1;
- (void)_resetChatReconstructionGroupMaps;
- (void)_resetChatRegistry;
- (id)_sendMessageInteractionForMessage:(id)arg1 inChat:(id)arg2;
- (void)_setChatHasCommunicatedOveriMessage:(id)arg1;
- (void)_setDefaultNumberOfMessagesToLoad:(unsigned long long)arg1;
- (void)_setMeCardSharingOnMessage:(id)arg1 forChat:(id)arg2;
- (void)_setPostMessageSentNotifications:(bool)arg1;
- (void)_setReplyToGuidOnMessage:(id)arg1 forChat:(id)arg2;
- (void)_setSimulatedChats:(id)arg1;
- (bool)_shouldShareMeCardForAlwaysAskAudienceWithChat:(id)arg1;
- (bool)_shouldShareMeCardForContactsOnlyAudienceWithChat:(id)arg1;
- (bool)_shouldSwitchAccountAddingMessagesToChat:(id)arg1 messageItems:(id)arg2 messagesComingFromStorage:(bool)arg3 chatProperties:(id)arg4;
- (id)_sortedParticipantIDHashForParticipants:(id)arg1;
- (id)_sortedParticipantIDHashForParticipants:(id)arg1 usesPersonCentricID:(bool)arg2;
- (void)_trackUsageForMessage:(id)arg1;
- (void)_unregisterChat:(id)arg1;
- (void)_unregisterChatWithGUID:(id)arg1;
- (id)_unsendMessageInteractionForMessage:(id)arg1 inChat:(id)arg2;
- (bool)_updateAutoDonationBehavior:(long long)arg1 forChat:(id)arg2 shouldPostNotification:(bool)arg3;
- (void)_updateBlackholedChatsExist:(bool)arg1;
- (void)_updateChat:(id)arg1 groupID:(id)arg2 shouldPostNotification:(bool)arg3;
- (void)_updateChat:(id)arg1 updateIsFiltered:(long long)arg2;
- (void)_updateChatAutoDonationBehavior:(id)arg1 withInfo:(id)arg2 shouldPostNotification:(bool)arg3;
- (void)_updateFilterediMessageChatsExist:(bool)arg1;
- (void)_updateInfo:(id)arg1 forGUID:(id)arg2 updatingUnreadCount:(bool)arg3;
- (void)_updateInfo:(id)arg1 forGUID:(id)arg2 updatingUnreadCount:(bool)arg3 shouldPostNotifications:(bool)arg4;
- (void)_updatePersonCentricIDToChatMapForChat:(id)arg1 toNewPersonCentricID:(id)arg2;
- (void)_updateReplySuggestions:(id)arg1 withInfo:(id)arg2;
- (void)_updateUnreadCountForChat:(id)arg1;
- (void)_updateUnreadCountForChat:(id)arg1 shouldPostNotification:(bool)arg2;
- (void)_validateChatQueryResults:(id)arg1 matchCurrentCacheResults:(id)arg2;
- (void)_verifyChatMergeWithChat:(id)arg1 dictionary:(id)arg2;
- (long long)_winningJoinStateForExistingChat:(id)arg1 incomingDictionary:(id)arg2;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 chatPersonCentricID:(id)arg5 member:(id)arg6 statusChanged:(int)arg7;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 error:(id)arg5;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 groupID:(id)arg5 chatPersonCentricID:(id)arg6 initialEmergencyQuestionnaireReceived:(id)arg7;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 groupID:(id)arg5 chatPersonCentricID:(id)arg6 messageReceived:(id)arg7;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 groupID:(id)arg5 chatPersonCentricID:(id)arg6 messageSent:(id)arg7;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 groupID:(id)arg5 chatPersonCentricID:(id)arg6 messagesReceived:(id)arg7 messagesComingFromStorage:(bool)arg8;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 groupID:(id)arg5 chatPersonCentricID:(id)arg6 statusChanged:(int)arg7 handleInfo:(id)arg8;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 invitationReceived:(id)arg5;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 messageUpdated:(id)arg5;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 messageUpdated:(id)arg5 suppressNotification:(bool)arg6;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 messagesUpdated:(id)arg5;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 notifySentMessage:(id)arg5 sendTime:(id)arg6;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 updateProperties:(id)arg5;
- (id)activeCallForConversationUUID:(id)arg1;
- (id)allChatsInProcess;
- (id)allExistingChats;
- (id)allGUIDsForChat:(id)arg1;
- (void)attachmentQuery:(id)arg1 chatID:(id)arg2 services:(id)arg3 finishedWithResult:(id)arg4;
- (bool)blackholedChatsExist;
- (void)blackholedChatsExist:(bool)arg1;
- (id)cachedChats;
- (id)cachedChatsInThreadNameMap;
- (void)chat:(id)arg1 chatPersonCentricID:(id)arg2 displayNameUpdated:(id)arg3;
- (void)chat:(id)arg1 chatPersonCentricID:(id)arg2 displayNameUpdated:(id)arg3 sender:(id)arg4;
- (void)chat:(id)arg1 engramIDUpdated:(id)arg2;
- (void)chat:(id)arg1 isDeletingIncomingMessagesUpdated:(bool)arg2;
- (void)chat:(id)arg1 isFilteredUpdated:(long long)arg2;
- (void)chat:(id)arg1 isRecoveredUpdated:(bool)arg2;
- (void)chat:(id)arg1 lastAddressedHandleUpdated:(id)arg2;
- (void)chat:(id)arg1 lastAddressedSIMIDUpdated:(id)arg2;
- (void)chat:(id)arg1 lastMessageTimeStampOnLoadUpdated:(double)arg2;
- (void)chat:(id)arg1 nicknamesUpdated:(id)arg2;
- (void)chat:(id)arg1 propertiesUpdated:(id)arg2;
- (void)chat:(id)arg1 uncachedAttachmentCountUpdated:(id)arg2;
- (void)chat:(id)arg1 updated:(id)arg2;
- (id)chatForFaceTimeConversation:(id)arg1;
- (id)chatForFaceTimeRecipientIDs:(id)arg1;
- (id)chatForIMHandle:(id)arg1;
- (id)chatForIMHandle:(id)arg1 lastAddressedHandle:(id)arg2 lastAddressedSIMID:(id)arg3;
- (id)chatForIMHandles:(id)arg1;
- (id)chatForIMHandles:(id)arg1 chatName:(id)arg2;
- (id)chatForIMHandles:(id)arg1 chatName:(id)arg2 lastAddressedHandle:(id)arg3 lastAddressedSIMID:(id)arg4;
- (id)chatForIMHandles:(id)arg1 displayName:(id)arg2 joinedChatsOnly:(bool)arg3;
- (id)chatForIMHandles:(id)arg1 displayName:(id)arg2 joinedChatsOnly:(bool)arg3 lastAddressedHandle:(id)arg4 lastAddressedSIMID:(id)arg5;
- (id)chatForIMHandles:(id)arg1 lastAddressedHandle:(id)arg2 lastAddressedSIMID:(id)arg3;
- (id)chatForRoom:(id)arg1 onAccount:(id)arg2;
- (id)chatForURL:(id)arg1 outMessageText:(id*)arg2 outRecipientIDs:(id*)arg3 outService:(id*)arg4 outMessageGUID:(id*)arg5;
- (id)chatForURL:(id)arg1 outMessageText:(id*)arg2 outRecipientIDs:(id*)arg3 outService:(id*)arg4 outMessageGUID:(id*)arg5 presentOverlay:(bool*)arg6;
- (id)chatForURL:(id)arg1 outMessageText:(id*)arg2 outRecipientIDs:(id*)arg3 outService:(id*)arg4 outMessageGUID:(id*)arg5 presentOverlay:(bool*)arg6 outSIMID:(id*)arg7;
- (id)chatGUIDToChatMap;
- (id)chatGUIDToCurrentThreadMap;
- (id)chatGUIDToInfoMap;
- (id)chatGUIDToiMessageSentOrReceivedMap;
- (id)chatGuidsForChat:(id)arg1;
- (void)chatLoadedWithChatIdentifier:(id)arg1 chats:(id)arg2;
- (id)chatPersonIDToChatMap;
- (id)chatWithHandle:(id)arg1;
- (id)chatWithHandle:(id)arg1 lastAddressedHandle:(id)arg2 lastAddressedSIMID:(id)arg3;
- (id)chatWithHandles:(id)arg1;
- (id)chatWithHandles:(id)arg1 displayName:(id)arg2 joinedChatsOnly:(bool)arg3;
- (id)chatWithHandles:(id)arg1 displayName:(id)arg2 joinedChatsOnly:(bool)arg3 lastAddressedHandle:(id)arg4 lastAddressedSIMID:(id)arg5;
- (id)chatWithHandles:(id)arg1 lastAddressedHandle:(id)arg2 lastAddressedSIMID:(id)arg3;
- (id)chatsBeingLoadedMap;
- (void)chatsNeedRemerging:(id)arg1 groupedChats:(id)arg2;
- (id)chatsWithMyself;
- (id)contactStore;
- (id)contactStoreQueue;
- (id)conversationManager;
- (void)conversationManager:(id)arg1 activeRemoteParticipantsChangedForConversation:(id)arg2;
- (void)conversationManager:(id)arg1 activitySessionsChangedForConversation:(id)arg2;
- (void)conversationManager:(id)arg1 remoteMembersChangedForConversation:(id)arg2;
- (void)conversationManager:(id)arg1 removedActiveConversation:(id)arg2;
- (void)conversationManager:(id)arg1 stateChangedForConversation:(id)arg2;
- (id)daemonController;
- (bool)daemonHadTerminated;
- (id)daemonQueryController;
- (void)dealloc;
- (void)downloadedPurgedAssetBatchForChatIDs:(id)arg1 completedTransferGUIDs:(id)arg2;
- (void)engroupParticipantsUpdatedForChat:(id)arg1;
- (void)enumerateAllChatsAndAttachmentSizesWithOptions:(unsigned long long)arg1 usingBlock:(id /* block */)arg2;
- (id)exisitingChatForGroupID:(id)arg1;
- (id)existingChatForAddresses:(id)arg1 allowRetargeting:(bool)arg2 bestHandles:(id*)arg3;
- (id)existingChatForContacts:(id)arg1 bestHandles:(id*)arg2;
- (id)existingChatForIMHandle:(id)arg1;
- (id)existingChatForIMHandle:(id)arg1 allowRetargeting:(bool)arg2;
- (id)existingChatForIMHandle:(id)arg1 allowRetargeting:(bool)arg2 fixChatHandle:(bool)arg3;
- (id)existingChatForIMHandles:(id)arg1;
- (id)existingChatForIMHandles:(id)arg1 allowRetargeting:(bool)arg2;
- (id)existingChatForIMHandles:(id)arg1 allowRetargeting:(bool)arg2 groupID:(id)arg3;
- (id)existingChatForIMHandles:(id)arg1 allowRetargeting:(bool)arg2 groupID:(id)arg3 displayName:(id)arg4 ignoresDisplayName:(bool)arg5 joinedChatsOnly:(bool)arg6;
- (id)existingChatForIMHandles:(id)arg1 allowRetargeting:(bool)arg2 groupID:(id)arg3 displayName:(id)arg4 joinedChatsOnly:(bool)arg5;
- (id)existingChatForPersonID:(id)arg1;
- (id)existingChatForRoom:(id)arg1 onAccount:(id)arg2;
- (id)existingChatForRoom:(id)arg1 onAccount:(id)arg2 allowRetargeting:(bool)arg3;
- (id)existingChatWithAddresses:(id)arg1 allowAlternativeService:(bool)arg2 bestHandles:(id*)arg3;
- (id)existingChatWithChatIdentifier:(id)arg1;
- (id)existingChatWithContacts:(id)arg1 bestHandles:(id*)arg2;
- (id)existingChatWithDeviceIndependentID:(id)arg1;
- (id)existingChatWithDisplayName:(id)arg1;
- (id)existingChatWithGUID:(id)arg1;
- (id)existingChatWithGroupID:(id)arg1;
- (id)existingChatWithHandle:(id)arg1;
- (id)existingChatWithHandle:(id)arg1 allowAlternativeService:(bool)arg2;
- (id)existingChatWithHandles:(id)arg1;
- (id)existingChatWithHandles:(id)arg1 allowAlternativeService:(bool)arg2;
- (id)existingChatWithHandles:(id)arg1 allowAlternativeService:(bool)arg2 groupID:(id)arg3;
- (id)existingChatWithHandles:(id)arg1 allowAlternativeService:(bool)arg2 groupID:(id)arg3 displayName:(id)arg4 joinedChatsOnly:(bool)arg5;
- (id)existingChatWithPersonID:(id)arg1;
- (id)existingChatWithPinningIdentifier:(id)arg1;
- (id)existingConversationForFaceTimeConversationUUID:(id)arg1;
- (id)existingConversationForTelephonyConversationUUID:(id)arg1;
- (id)filterCategoryToEarliestInitiallyFetchedLastMessageDate;
- (bool)filterediMessageChatsExist;
- (void)finishedDownloadingPurgedAssetsForChatIDs:(id)arg1;
- (void)forcedReloadingChatRegistryWithQueryID:(id)arg1;
- (void)frequentRepliesQuery:(id)arg1 chatID:(id)arg2 services:(id)arg3 finishedWithResult:(id)arg4 limit:(long long)arg5;
- (void)frequentRepliesQuery:(id)arg1 finishedWithResult:(id)arg2 limit:(long long)arg3;
- (id)generateUnusedChatIdentifierForGroupChatWithAccount:(id)arg1;
- (id)groupIDToChatMap;
- (id)groupParticipantToChatsMap;
- (void)groupPhotoUpdatedForChatIdentifier:(id)arg1 style:(unsigned char)arg2 account:(id)arg3 userInfo:(id)arg4;
- (void)historicalMessageGUIDsDeleted:(id)arg1 chatGUIDs:(id)arg2 queryID:(id)arg3;
- (id)historyModificationStamp;
- (void)historyQuery:(id)arg1 chatID:(id)arg2 services:(id)arg3 finishedWithResult:(id)arg4 limit:(long long)arg5;
- (id)init;
- (id)initAsListener:(bool)arg1;
- (void)isDownloadingQuery:(id)arg1 chatID:(id)arg2 services:(id)arg3 finishedWithResult:(bool)arg4;
- (bool)isFirstLoad;
- (bool)isInternalInstall;
- (long long)lastFailedMessageDate;
- (void)lastFailedMessageDateChanged:(long long)arg1;
- (void)leftChat:(id)arg1;
- (id)loadChatFromDaemonWithChatIdentifier:(id)arg1;
- (void)loadedChats:(id)arg1 queryID:(id)arg2;
- (void)loadedRecoverableMessagesMetadata:(id)arg1 queryID:(id)arg2;
- (bool)loading;
- (id)markAsReadTimer;
- (void)markAsSpamQuery:(id)arg1 chatID:(id)arg2 services:(id)arg3 finishedWithResult:(id)arg4;
- (void)markedAsReadForMessageGUID:(id)arg1 success:(bool)arg2 queryID:(id)arg3;
- (id)messagesURLWithChat:(id)arg1;
- (id)messagesURLWithChat:(id)arg1 orHandles:(id)arg2 withMessageText:(id)arg3;
- (id)messagesURLWithMessageGUID:(id)arg1;
- (void)moveMessagesInChatsToRecentlyDeleted:(id)arg1 deleteDate:(id)arg2 synchronously:(bool)arg3 completionHandler:(id /* block */)arg4;
- (void)moveMessagesWithGUIDsToRecentlyDeleted:(id)arg1 deleteDate:(id)arg2 synchronously:(bool)arg3 completionHandler:(id /* block */)arg4;
- (void)movedMessagesToRecentlyDeletedForChatsWithGUIDs:(id)arg1 queryID:(id)arg2;
- (void)movedMessagesToRecentlyDeletedWithQueryID:(id)arg1;
- (unsigned long long)numberOfCachedChats;
- (unsigned long long)numberOfExistingChats;
- (void)pagedHistoryQuery:(id)arg1 chatID:(id)arg2 services:(id)arg3 numberOfMessagesBefore:(long long)arg4 numberOfMessagesAfter:(long long)arg5 finishedWithResult:(id)arg6 hasMessagesBefore:(bool)arg7 hasMessagesAfter:(bool)arg8;
- (id)performanceLogHandle;
- (void)permanentlyDeleteRecoverableMessagesInChats:(id)arg1 synchronously:(bool)arg2 completionHandler:(id /* block */)arg3;
- (void)permanentlyDeletedMessagesInChatsWithDeletedChatGUIDs:(id)arg1;
- (void)permanentlyDeletedMessagesInChatsWithDeletedChatGUIDs:(id)arg1 queryID:(id)arg2;
- (void)permanentlyDeletedRecoverableMessagesForChatsWithGUIDs:(id)arg1 deletedChatGUIDs:(id)arg2;
- (id)preExistingAllChats;
- (void)previouslyBlackholedChatLoadedWithChatIdentifier:(id)arg1 chats:(id)arg2;
- (void)previouslyBlackholedChatLoadedWithHandleIDs:(id)arg1 chat:(id)arg2;
- (bool)processingChatCacheMiss;
- (void)recoverMessagesForChats:(id)arg1 synchronously:(bool)arg2 completionHandler:(id /* block */)arg3;
- (void)recoveredMessagesFromRecentlyDeletedForChatsWithGUIDs:(id)arg1;
- (void)recoveredMessagesWithQueryID:(id)arg1;
- (id)registryChangeHistoryChatsToObserve;
- (id)registryChangeHistoryChatsToUnregister;
- (id)remoteDaemon;
- (void)screenTimeEnablementChanged:(bool)arg1;
- (void)service:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 messagesUpdated:(id)arg4;
- (void)setBlackholedChatsExist:(bool)arg1;
- (void)setChatPersonIDToChatMap:(id)arg1;
- (void)setChatsBeingLoadedMap:(id)arg1;
- (void)setContactStore:(id)arg1;
- (void)setContactStoreQueue:(id)arg1;
- (void)setDaemonHadTerminated:(bool)arg1;
- (void)setFilterCategoryToEarliestInitiallyFetchedLastMessageDate:(id)arg1;
- (void)setFilterediMessageChatsExist:(bool)arg1;
- (void)setFirstLoad:(bool)arg1;
- (void)setHistoryModificationStamp:(id)arg1;
- (void)setIsInternalInstall:(bool)arg1;
- (void)setLastFailedMessageDate:(long long)arg1;
- (void)setLoading:(bool)arg1;
- (void)setMarkAsReadTimer:(id)arg1;
- (void)setPreExistingAllChats:(id)arg1;
- (void)setProcessingChatCacheMiss:(bool)arg1;
- (void)setRegistryChangeHistoryChatsToObserve:(id)arg1;
- (void)setRegistryChangeHistoryChatsToUnregister:(id)arg1;
- (void)setTimerStartTimeInterval:(double)arg1;
- (void)setUnreadCount:(unsigned long long)arg1;
- (void)setUpInitialCallState;
- (void)setUserActivity:(id)arg1;
- (void)setUserActivityForChat:(id)arg1 message:(id)arg2 orHandles:(id)arg3;
- (void)setUserActivityForChat:(id)arg1 orHandles:(id)arg2;
- (void)setWantsHistoryReload:(bool)arg1;
- (void)setupComplete;
- (void)setupComplete:(bool)arg1 info:(id)arg2;
- (id)sharedWithYouManager;
- (id)simulatedChatGUIDToChatMap;
- (id)simulatedChats;
- (id)threadNameToChatMap;
- (double)timerStartTimeInterval;
- (id)unblackholeAndLoadChatWithIMHandles:(id)arg1;
- (id)unblackholeChatWithHandles:(id)arg1;
- (void)uncachedAttachmentCountQuery:(id)arg1 chatID:(id)arg2 services:(id)arg3 finishedWithResult:(id)arg4;
- (unsigned long long)unreadCount;
- (void)unreadCountChanged:(long long)arg1;
- (void)unregisterChat:(id)arg1;
- (void)unregisterChatWithGUID:(id)arg1;
- (void)updateChatDictionaryArray:(id)arg1 createdChat:(id)arg2 joinstate:(long long)arg3 setHasCommunicatedOveriMessage:(bool*)arg4;
- (void)updateEarliestMessageDateForChats:(id)arg1 completion:(id /* block */)arg2;
- (void)updateRecoverableMessagesMetadataSynchronously:(bool)arg1 completionHandler:(id /* block */)arg2;
- (void)updateRecoverableMessagesMetadataSynchronously:(bool)arg1 loadChats:(bool)arg2 completionHandler:(id /* block */)arg3;
- (id)userActivity;
- (void)verifyFilteringForAllChats;
- (bool)wantsHistoryReload;

// Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit

- (id)_ck_chatForHandles:(id)arg1 createIfNecessary:(bool)arg2;
- (id)_ck_chatForHandles:(id)arg1 displayName:(id)arg2 lastAddressedHandle:(id)arg3 lastAddressedSIMID:(id)arg4 joinedChatsOnly:(bool)arg5 createIfNecessary:(bool)arg6;

@end
