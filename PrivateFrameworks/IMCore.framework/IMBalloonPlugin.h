
@interface IMBalloonPlugin : NSObject <CKAppMenuItem> {
    IMBalloonApp * _app;
    NSString * _appIdentifier;
    NSMutableArray * _balloonControllerPool;
    Class  _browserClass;
    long long  _browserGroup;
    NSString * _browserImageName;
    NSString * _browserImagePath;
    Class  _bubbleClass;
    NSBundle * _bundle;
    Class  _customTypingIndicatorLayerClass;
    Class  _dataSourceClass;
    Class  _entryClass;
    NSString * _extensionIdentifier;
    NSMutableDictionary * _messageToBalloonControllerMap;
    NSMutableDictionary * _messageToDatasourceMap;
    <PKPlugIn> * _plugin;
    bool  _pluginLoaded;
}

@property (nonatomic, readonly) NSString *__ck_displayName;
@property (nonatomic, readonly) id __ck_identifier;
@property (nonatomic, retain) IMBalloonApp *app;
@property (nonatomic, readonly, retain) NSBundle *appBundle;
@property (nonatomic, readonly, retain) NSString *appIdentifier;
@property (nonatomic, readonly) NSString *appStoreGenre;
@property (nonatomic, readonly) NSArray *appStoreSubgenres;
@property (nonatomic, retain) NSMutableArray *balloonControllerPool;
@property (getter=isBetaPlugin, nonatomic, readonly) bool betaPlugin;
@property (nonatomic, retain) Class browserClass;
@property (nonatomic, readonly, retain) NSString *browserDisplayName;
@property (nonatomic) long long browserGroup;
@property (nonatomic, retain) NSString *browserImageName;
@property (nonatomic, retain) NSString *browserImagePath;
@property (nonatomic, readonly, retain) NSString *browserShortDisplayName;
@property (nonatomic, retain) Class bubbleClass;
@property (nonatomic, retain) NSBundle *bundle;
@property (nonatomic, retain) Class customTypingIndicatorLayerClass;
@property (nonatomic, retain) Class dataSourceClass;
@property (nonatomic, retain) Class entryClass;
@property (nonatomic, readonly) NSString *extensionBundleIdentifier;
@property (nonatomic, readonly) NSString *extensionIdentifier;
@property (nonatomic, readonly) bool hideAttributionInformation;
@property (nonatomic, readonly, retain) NSString *identifier;
@property (nonatomic, readonly) bool isEnabled;
@property (nonatomic, retain) NSMutableDictionary *messageToBalloonControllerMap;
@property (nonatomic, retain) NSMutableDictionary *messageToDatasourceMap;
@property (nonatomic, retain) <PKPlugIn> *plugin;
@property (nonatomic, readonly, retain) NSBundle *pluginBundle;
@property (nonatomic) bool pluginLoaded;
@property (nonatomic, readonly) unsigned long long presentationContexts;
@property (nonatomic, readonly) bool shouldBalloonHideAppIcon;
@property (nonatomic, readonly) bool shouldBreadcrumbHideAppIcon;
@property (nonatomic, readonly) bool shouldHideAppSwitcher;
@property (nonatomic, readonly) bool showInBrowser;
@property (nonatomic, readonly) bool showInSendMenu;
@property (nonatomic, readonly) bool showableInBrowser;
@property (nonatomic, readonly) unsigned long long stickerSharingLevel;
@property (nonatomic, readonly) NSString *version;

// Image: /System/Library/PrivateFrameworks/IMCore.framework/IMCore

- (void).cxx_destruct;
- (bool)_canRemoveControllerFromCachedDatasource;
- (id)_getControllerFromReusePoolForChatItem:(id)arg1 contextIdentifier:(id)arg2;
- (id)app;
- (id)appBundle;
- (id)appIdentifier;
- (id)appStoreGenre;
- (id)appStoreSubgenres;
- (id)balloonControllerForChatItem:(id)arg1 contextIdentifier:(id)arg2;
- (id)balloonControllerKeyForMessageGUID:(id)arg1 contextIdentifier:(id)arg2;
- (id)balloonControllerPool;
- (Class)browserClass;
- (id)browserDisplayName;
- (long long)browserGroup;
- (id)browserImageName;
- (id)browserImagePath;
- (id)browserShortDisplayName;
- (Class)bubbleClass;
- (id)bundle;
- (Class)customTypingIndicatorLayerClass;
- (Class)dataSourceClass;
- (id)dataSourceForPluginPayload:(id)arg1;
- (void)dealloc;
- (Class)entryClass;
- (id)existingBalloonControllerWithMessageGUID:(id)arg1 contextIdentifier:(id)arg2;
- (id)existingDataSourceForMessageGUID:(id)arg1;
- (id)extensionBundleIdentifier;
- (id)extensionIdentifier;
- (bool)hideAttributionInformation;
- (id)identifier;
- (id)init;
- (id)initWithBundle:(id)arg1;
- (id)initWithBundle:(id)arg1 app:(id)arg2;
- (void)insertDataSource:(id)arg1 forGUID:(id)arg2;
- (bool)isBetaPlugin;
- (bool)isEnabled;
- (bool)isStickerPackOnly;
- (bool)linkedBeforeSDKVersion:(id)arg1;
- (id)messageToBalloonControllerMap;
- (id)messageToDatasourceMap;
- (void)moveController:(id)arg1 toReusePoolFromChatItem:(id)arg2 contextIdentifier:(id)arg3;
- (id)plugin;
- (id)pluginBundle;
- (bool)pluginLoaded;
- (unsigned long long)presentationContexts;
- (void)removeController:(id)arg1 forChatItem:(id)arg2 contextIdentifier:(id)arg3;
- (void)setApp:(id)arg1;
- (void)setBalloonControllerPool:(id)arg1;
- (void)setBrowserClass:(Class)arg1;
- (void)setBrowserGroup:(long long)arg1;
- (void)setBrowserImageName:(id)arg1;
- (void)setBrowserImagePath:(id)arg1;
- (void)setBubbleClass:(Class)arg1;
- (void)setBundle:(id)arg1;
- (void)setCustomTypingIndicatorLayerClass:(Class)arg1;
- (void)setDataSourceClass:(Class)arg1;
- (void)setEntryClass:(Class)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setMessageToBalloonControllerMap:(id)arg1;
- (void)setMessageToDatasourceMap:(id)arg1;
- (void)setPlugin:(id)arg1;
- (void)setPluginLoaded:(bool)arg1;
- (bool)shouldBalloonHideAppIcon;
- (bool)shouldBreadcrumbHideAppIcon;
- (bool)shouldHideAppSwitcher;
- (bool)shouldShowForRecipients:(id)arg1;
- (bool)showInBrowser;
- (bool)showInSendMenu;
- (bool)showableInBrowser;
- (unsigned long long)stickerSharingLevel;
- (bool)supportsControllerReuse;
- (void)unloadBundle;
- (id)version;

// Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit

+ (id)__ck_appIconFromPayloadDictionary:(id)arg1 withCompletionBlock:(id /* block */)arg2;
+ (id)__ck_placeholderImageForInterfaceStyle:(long long)arg1;

- (id)__ckImageForInterfaceStyle:(long long)arg1 generateSynchronously:(bool)arg2 allowPlaceholder:(bool)arg3;
- (id)__ck_attributionInfo;
- (id)__ck_badgeImage;
- (id)__ck_breadcrumbImage;
- (id)__ck_browserImageForInterfaceStyle:(long long)arg1;
- (id)__ck_browserImageGenerateSynchronously:(bool)arg1 interfaceStyle:(long long)arg2 allowPlaceholder:(bool)arg3;
- (id)__ck_browserImageName:(bool*)arg1;
- (id)__ck_cacheKeyForInterfaceStyle:(long long)arg1;
- (id)__ck_cachedAssetCatalogImageForInterfaceStyle:(long long)arg1;
- (id)__ck_displayName;
- (id)__ck_generateAssetCatalogImageForInterfaceStyle:(long long)arg1;
- (id)__ck_generateIconForInterfaceStyle:(long long)arg1 notify:(bool)arg2;
- (void)__ck_generateStatusImage:(id /* block */)arg1;
- (id)__ck_iconServicesBundleIdentifier;
- (id)__ck_iconServicesDescriptor;
- (id)__ck_iconServicesIconForInterfaceStyle:(long long)arg1;
- (id)__ck_identifier;
- (id)__ck_imageForTraitCollection:(id)arg1;
- (void)__ck_postImageUpdateNotificationWithImage:(id)arg1;
- (bool)__ck_preferIconServices;
- (void)__ck_prefetchBrowserImageForInterfaceStyle:(long long)arg1;
- (id)__ck_statusImage;
- (id)__ck_statusImageForTransport;
- (id)__ck_statusJPEGImageDataForTransportWithCompressionFactor:(double)arg1;
- (id)_adamID;
- (id)_scaledImage:(id)arg1 xscale:(double)arg2 yscale:(double)arg3;
- (id)appStoreBadgeIcon;
- (id)description;
- (id)recentsBadgeIcon;

@end
