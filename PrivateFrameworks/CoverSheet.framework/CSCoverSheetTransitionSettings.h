
@interface CSCoverSheetTransitionSettings : PTSettings <BSDescriptionProviding> {
    bool  _alwaysFadesCoverSheetContent;
    double  _behindCoverSheetBlurEnd;
    double  _behindCoverSheetBlurRadius;
    double  _behindCoverSheetBlurStart;
    double  _blurEnd;
    double  _blurEndReducedTransparency;
    double  _blurRadius;
    double  _blurStart;
    bool  _blursBehindCoverSheet;
    bool  _blursPanel;
    double  _contentFadeEnd;
    double  _contentFadeStart;
    double  _darkeningColorAlpha;
    double  _darkeningColorWhite;
    double  _darkeningEnd;
    double  _darkeningStart;
    bool  _darkensContent;
    bool  _fadePanelWallpaper;
    double  _fadePanelWallpaperEnd;
    double  _fadePanelWallpaperStart;
    bool  _fadesContent;
    bool  _fadesCoverSheetContent;
    double  _fadesCoverSheetContentEnd;
    double  _fadesCoverSheetContentStart;
    double  _fixedWallpaperPresentationProgress;
    bool  _floatingLayerAsWallpaperOverlay;
    bool  _iconsFlyIn;
    double  _maxContentAlpha;
    bool  _orientPanelWallpaper;
    bool  _panelWallpaper;
    bool  _revealWallpaper;
    bool  _scaleWallpaper;
    bool  _trackingWallpaper;
    double  _trackingWallpaperParallaxFactor;
    long long  _transitionStyle;
    bool  _usesFixedWallpaperPresentationProgress;
    double  _wallpaperScale;
    SBFFluidBehaviorSettings * _wallpaperScaleSettings;
}

@property (nonatomic) bool alwaysFadesCoverSheetContent;
@property (nonatomic) double behindCoverSheetBlurEnd;
@property (nonatomic) double behindCoverSheetBlurRadius;
@property (nonatomic) double behindCoverSheetBlurStart;
@property (nonatomic) double blurEnd;
@property (nonatomic) double blurEndReducedTransparency;
@property (nonatomic) double blurRadius;
@property (nonatomic) double blurStart;
@property (nonatomic) bool blursBehindCoverSheet;
@property (nonatomic) bool blursPanel;
@property (nonatomic) double contentFadeEnd;
@property (nonatomic) double contentFadeStart;
@property (nonatomic) double darkeningColorAlpha;
@property (nonatomic) double darkeningColorWhite;
@property (nonatomic) double darkeningEnd;
@property (nonatomic) double darkeningStart;
@property (nonatomic) bool darkensContent;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool fadePanelWallpaper;
@property (nonatomic) double fadePanelWallpaperEnd;
@property (nonatomic) double fadePanelWallpaperStart;
@property (nonatomic) bool fadesContent;
@property (nonatomic) bool fadesCoverSheetContent;
@property (nonatomic) double fadesCoverSheetContentEnd;
@property (nonatomic) double fadesCoverSheetContentStart;
@property (nonatomic) double fixedWallpaperPresentationProgress;
@property (nonatomic) bool floatingLayerAsWallpaperOverlay;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool iconsFlyIn;
@property (nonatomic) double maxContentAlpha;
@property (nonatomic) bool orientPanelWallpaper;
@property (nonatomic) bool panelWallpaper;
@property (nonatomic) bool revealWallpaper;
@property (nonatomic) bool scaleWallpaper;
@property (readonly) Class superclass;
@property (nonatomic) bool trackingWallpaper;
@property (nonatomic) double trackingWallpaperParallaxFactor;
@property (nonatomic) long long transitionStyle;
@property (nonatomic) bool usesFixedWallpaperPresentationProgress;
@property (nonatomic) double wallpaperScale;
@property (nonatomic, retain) SBFFluidBehaviorSettings *wallpaperScaleSettings;

+ (id)settingsControllerModule;

- (void).cxx_destruct;
- (bool)_isMaglevActive;
- (bool)alwaysFadesCoverSheetContent;
- (double)behindCoverSheetBlurEnd;
- (double)behindCoverSheetBlurRadius;
- (double)behindCoverSheetBlurStart;
- (double)blurEnd;
- (double)blurEndReducedTransparency;
- (double)blurRadius;
- (double)blurStart;
- (bool)blursBehindCoverSheet;
- (bool)blursPanel;
- (double)contentFadeEnd;
- (double)contentFadeStart;
- (double)darkeningColorAlpha;
- (double)darkeningColorWhite;
- (double)darkeningEnd;
- (double)darkeningStart;
- (bool)darkensContent;
- (id)description;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
- (bool)fadePanelWallpaper;
- (double)fadePanelWallpaperEnd;
- (double)fadePanelWallpaperStart;
- (bool)fadesContent;
- (bool)fadesCoverSheetContent;
- (double)fadesCoverSheetContentEnd;
- (double)fadesCoverSheetContentStart;
- (double)fixedWallpaperPresentationProgress;
- (bool)floatingLayerAsWallpaperOverlay;
- (bool)iconsFlyIn;
- (double)maxContentAlpha;
- (bool)orientPanelWallpaper;
- (bool)panelWallpaper;
- (bool)revealWallpaper;
- (bool)scaleWallpaper;
- (void)setAlwaysFadesCoverSheetContent:(bool)arg1;
- (void)setBehindCoverSheetBlurEnd:(double)arg1;
- (void)setBehindCoverSheetBlurRadius:(double)arg1;
- (void)setBehindCoverSheetBlurStart:(double)arg1;
- (void)setBlurEnd:(double)arg1;
- (void)setBlurEndReducedTransparency:(double)arg1;
- (void)setBlurRadius:(double)arg1;
- (void)setBlurStart:(double)arg1;
- (void)setBlursBehindCoverSheet:(bool)arg1;
- (void)setBlursPanel:(bool)arg1;
- (void)setContentFadeEnd:(double)arg1;
- (void)setContentFadeStart:(double)arg1;
- (void)setDarkeningColorAlpha:(double)arg1;
- (void)setDarkeningColorWhite:(double)arg1;
- (void)setDarkeningEnd:(double)arg1;
- (void)setDarkeningStart:(double)arg1;
- (void)setDarkensContent:(bool)arg1;
- (void)setDefaultValues;
- (void)setFadePanelWallpaper:(bool)arg1;
- (void)setFadePanelWallpaperEnd:(double)arg1;
- (void)setFadePanelWallpaperStart:(double)arg1;
- (void)setFadesContent:(bool)arg1;
- (void)setFadesCoverSheetContent:(bool)arg1;
- (void)setFadesCoverSheetContentEnd:(double)arg1;
- (void)setFadesCoverSheetContentStart:(double)arg1;
- (void)setFixedWallpaperPresentationProgress:(double)arg1;
- (void)setFloatingLayerAsWallpaperOverlay:(bool)arg1;
- (void)setIconsFlyIn:(bool)arg1;
- (void)setMaxContentAlpha:(double)arg1;
- (void)setOrientPanelWallpaper:(bool)arg1;
- (void)setPanelWallpaper:(bool)arg1;
- (void)setRevealWallpaper:(bool)arg1;
- (void)setScaleWallpaper:(bool)arg1;
- (void)setTrackingWallpaper:(bool)arg1;
- (void)setTrackingWallpaperParallaxFactor:(double)arg1;
- (void)setTransitionStyle:(long long)arg1;
- (void)setUsesFixedWallpaperPresentationProgress:(bool)arg1;
- (void)setWallpaperScale:(double)arg1;
- (void)setWallpaperScaleSettings:(id)arg1;
- (id)succinctDescription;
- (id)succinctDescriptionBuilder;
- (bool)trackingWallpaper;
- (double)trackingWallpaperParallaxFactor;
- (long long)transitionStyle;
- (bool)usesFixedWallpaperPresentationProgress;
- (double)wallpaperScale;
- (id)wallpaperScaleSettings;

@end
