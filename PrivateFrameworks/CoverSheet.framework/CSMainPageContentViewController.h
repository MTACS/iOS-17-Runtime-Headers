
@interface CSMainPageContentViewController : CSScrollablePageViewController <CSCombinedListViewControllerDelegate, CSNotificationDestination, CSPageViewControllerProtocol, CSScrollablePageViewControllerProtocol, CSUserPresenceMonitorObserver, PTSettingsKeyObserver> {
    <SBFAuthenticationStatusProvider> * _authenticationProvider;
    CSCombinedListViewController * _combinedListViewController;
    <CSScrollablePageViewControllerDelegate> * _delegate;
    UITapGestureRecognizer * _inlineContentGestureRecognizer;
    <CSMainPageInlineContentViewControllerDelegate><CSAppearanceProviding><CSBehaviorProviding> * _inlineContentViewControllerDelegate;
    CSLayoutStrategy * _layoutStrategy;
    CSLogoutButtonViewController * _logoutButtonViewController;
    <CSMainPageContentViewControllerMediaControlsObserver> * _mediaControlsObserver;
    <CSMainPageContentViewControllerNotificationObserver> * _notificationObserver;
    long long  _smoothestPermittedStrategy;
    CSLockScreenSettings * _testSettings;
    <CSTouchEnvironmentStatusProviding> * _touchEnvironmentStatusProvider;
    bool  _useFakeBlur;
    CSUserPictureViewController * _userPictureViewController;
    CSUserPresenceMonitor * _userPresenceMonitor;
    CSUserPresenceMonitor * _userPresenceMontior;
    <CSUserSessionControlling> * _userSessionController;
    <CSWallpaperColorProvider> * _wallpaperColorProvider;
    <CSWallpaperProviding> * _wallpaperProvider;
    CHSWidgetHost * _widgetHost;
    PRWidgetMetricsProvider * _widgetMetricsProvider;
}

@property (nonatomic, readonly, copy) CSAppearance *activeAppearance;
@property (nonatomic, readonly, copy) CSBehavior *activeBehavior;
@property (nonatomic, readonly, copy) NSString *appearanceIdentifier;
@property (nonatomic, readonly) bool authenticated;
@property (nonatomic, retain) CSCombinedListViewController *combinedListViewController;
@property (nonatomic, readonly, copy) NSSet *components;
@property (nonatomic, readonly, copy) NSString *coverSheetIdentifier;
@property (nonatomic) <CSCoverSheetViewControllerProtocol> *coverSheetViewController;
@property (nonatomic, readonly) double customIdleExpirationTimeout;
@property (nonatomic, readonly) double customIdleWarningTimeout;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CSScrollablePageViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) <CSNotificationDispatcher> *dispatcher;
@property (nonatomic, readonly, copy) CSPresentation *externalPresentation;
@property (nonatomic, readonly) bool hasVisibleBreakthroughContent;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) long long idleTimerDuration;
@property (nonatomic, readonly) long long idleTimerMode;
@property (nonatomic, readonly) long long idleWarnMode;
@property (nonatomic, retain) CSLayoutStrategy *layoutStrategy;
@property (nonatomic, readonly) _UILegibilitySettings *legibilitySettings;
@property (nonatomic) <CSMainPageContentViewControllerMediaControlsObserver> *mediaControlsObserver;
@property (nonatomic, readonly) long long notificationBehavior;
@property (nonatomic) <CSMainPageContentViewControllerNotificationObserver> *notificationObserver;
@property (nonatomic, readonly, copy) NSString *pageRole;
@property (nonatomic, readonly) long long participantState;
@property (nonatomic, readonly) long long presentationAltitude;
@property (nonatomic, readonly) <UICoordinateSpace> *presentationCoordinateSpace;
@property (nonatomic, readonly) unsigned int presentationFrameRateRangeReason;
@property (nonatomic, readonly) struct CAFrameRateRange { float x1; float x2; float x3; } presentationPreferredFrameRateRange;
@property (nonatomic, readonly) long long presentationPriority;
@property (nonatomic, readonly, copy) NSArray *presentationRegions;
@property (nonatomic, readonly) long long presentationStyle;
@property (nonatomic, readonly) long long presentationTransition;
@property (nonatomic, readonly) long long presentationType;
@property (nonatomic) <CSCoverSheetViewPresenting> *presenter;
@property (nonatomic, readonly) long long proximityDetectionMode;
@property (nonatomic, readonly) unsigned long long restrictedCapabilities;
@property (nonatomic, readonly) long long scrollingStrategy;
@property (getter=isShowingMediaControls, nonatomic, readonly) bool showingMediaControls;
@property (readonly) Class superclass;
@property (nonatomic) <CSTouchEnvironmentStatusProviding> *touchEnvironmentStatusProvider;
@property (getter=isTransitioning, nonatomic) bool transitioning;
@property (nonatomic) bool useFakeBlur;
@property (nonatomic, retain) CSUserPresenceMonitor *userPresenceMonitor;
@property (nonatomic) <CSUserSessionControlling> *userSessionController;
@property (nonatomic) <CSWallpaperColorProvider> *wallpaperColorProvider;
@property (nonatomic) <CSWallpaperProviding> *wallpaperProvider;
@property (nonatomic, readonly) <SBSWidgetMetricsProviding> *widgetMetricsProvider;

+ (double)_phoneListWidth;
+ (bool)isAvailableForConfiguration;
+ (unsigned long long)requiredCapabilities;
+ (Class)viewClass;

- (void).cxx_destruct;
- (void)_addOrRemoveLogoutButtonViewController;
- (void)_addOrRemoveNotificationsListIfNecessaryAnimated:(bool)arg1;
- (void)_addOrRemoveUserPictureViewController;
- (void)_addOrRemoveViewsAsAppropriate;
- (void)_inlineContentGestureRecognizerDidTap:(id)arg1;
- (bool)_isPortrait;
- (bool)_listBelowDateTime;
- (id)_mainPageView;
- (bool)_pagingStyleRequiresUserPresenceDetection;
- (void)_removeInlineContentGestureRecognizer;
- (void)_setupInlineContentGestureRecognizer;
- (void)_updateSmoothestPermittedPagingStrategy;
- (void)addInlineContentSupportForDelegate:(id)arg1;
- (void)aggregateAppearance:(id)arg1;
- (void)aggregateBehavior:(id)arg1;
- (id)combinedListViewController;
- (void)combinedListViewController:(id)arg1 hasContent:(bool)arg2;
- (void)combinedListViewController:(id)arg1 isShowingMediaControls:(bool)arg2;
- (void)combinedListViewControllerWillExpandNotificationListCount:(id)arg1;
- (double)customListWidth;
- (double)dateTimeInsetX;
- (unsigned long long)dateTimeLayout;
- (void)dealloc;
- (id)delegate;
- (bool)dismissNotificationInLongLookAnimated:(bool)arg1;
- (id)dispatcher;
- (bool)handleEvent:(id)arg1;
- (bool)hasVisibleBreakthroughContent;
- (id)init;
- (id)initWithAuthenticationProvider:(id)arg1;
- (void)inlineContentDidChange;
- (bool)isNotificationContentExtensionVisible:(id)arg1;
- (bool)isPresentingNotificationInLongLook;
- (bool)isShowingMediaControls;
- (id)layoutStrategy;
- (double)listInsetX;
- (unsigned long long)listLayout;
- (unsigned long long)listWidthStrategy;
- (id)mediaControlsObserver;
- (double)minimumDateToListSpacing;
- (id)notificationObserver;
- (id)notificationSectionSettingsForCombinedListViewController:(id)arg1;
- (void)notificationsLoadedForSectionIdentifier:(id)arg1;
- (void)postNotificationRequest:(id)arg1;
- (void)removeInlineContentSupport;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint { double x1; double x2; })arg2;
- (void)setCombinedListViewController:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDispatcher:(id)arg1;
- (void)setLayoutStrategy:(id)arg1;
- (void)setMediaControlsObserver:(id)arg1;
- (void)setNotificationObserver:(id)arg1;
- (void)setTouchEnvironmentStatusProvider:(id)arg1;
- (void)setUseFakeBlur:(bool)arg1;
- (void)setUserPresenceMonitor:(id)arg1;
- (void)setUserSessionController:(id)arg1;
- (void)setWallpaperColorProvider:(id)arg1;
- (void)setWallpaperProvider:(id)arg1;
- (void)settings:(id)arg1 changedValueForKey:(id)arg2;
- (id)touchEnvironmentStatusProvider;
- (void)updateForPresentation:(id)arg1;
- (void)updateNotificationRequest:(id)arg1;
- (void)updateNotificationSectionSettings:(id)arg1 previousSectionSettings:(id)arg2;
- (void)updateNotificationSystemSettings:(id)arg1 previousSystemSettings:(id)arg2;
- (bool)useFakeBlur;
- (void)userPresenceDetectedSinceWakeDidChange:(id)arg1;
- (id)userPresenceMonitor;
- (id)userSessionController;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillLayoutSubviews;
- (id)wallpaperColorProvider;
- (id)wallpaperProvider;
- (id)widgetMetricsProvider;
- (void)withdrawNotificationRequest:(id)arg1;

@end
