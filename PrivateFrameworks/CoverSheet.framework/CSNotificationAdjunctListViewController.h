
@interface CSNotificationAdjunctListViewController : CSCoverSheetViewControllerBase <CSAdjunctListModelDelegate, CSFocusActivityDelegate> {
    CSContentActionInterpreter * _actionInterpreter;
    CSAdjunctListActionManager * _actionManager;
    bool  _allowsAddRemoveAnimations;
    <SBFActionProviding> * _contentActionProvider;
    <CSNotificationAdjunctListViewControllerDelegate> * _delegate;
    UIViewController * _digestOnboardingSuggestionViewController;
    CSFocusActivityManager * _focusActivityManager;
    NSMutableDictionary * _identifiersToItems;
    bool  _isFocusActivityIndicatorVisible;
    bool  _isNowPlayingVisible;
    CSAdjunctListModel * _model;
    CSNowPlayingController * _nowPlayingController;
    CSRemoteContentInlineManager * _remoteContentInlineManager;
    <CSRemoteContentInlineProviding> * _remoteContentInlineProvider;
    bool  _respondingToSubviewLayoutChange;
    struct CGSize { 
        double width; 
        double height; 
    }  _sizeToMimic;
    PRWidgetMetricsProvider * _widgetMetricsProvider;
}

@property (nonatomic, retain) CSContentActionInterpreter *actionInterpreter;
@property (nonatomic, retain) CSAdjunctListActionManager *actionManager;
@property (nonatomic) bool allowsAddRemoveAnimations;
@property (nonatomic) <SBFActionProviding> *contentActionProvider;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CSNotificationAdjunctListViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) UIViewController *digestOnboardingSuggestionViewController;
@property (nonatomic, retain) CSFocusActivityManager *focusActivityManager;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSMutableDictionary *identifiersToItems;
@property (nonatomic, readonly) double listViewContentAnimationDampingRatio;
@property (nonatomic, readonly) double listViewContentAnimationDuration;
@property (nonatomic, retain) CSNowPlayingController *nowPlayingController;
@property (getter=isPresentingContent, nonatomic, readonly) bool presentingContent;
@property (getter=isPresentingTransientContent, nonatomic, readonly) bool presentingTransientContent;
@property (nonatomic, retain) CSRemoteContentInlineManager *remoteContentInlineManager;
@property (nonatomic) <CSRemoteContentInlineProviding> *remoteContentInlineProvider;
@property (nonatomic) bool respondingToSubviewLayoutChange;
@property (getter=isShowingMediaControls, nonatomic, readonly) bool showingMediaControls;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } sizeToMimic;
@property (readonly) Class superclass;
@property (nonatomic) PRWidgetMetricsProvider *widgetMetricsProvider;

+ (Class)viewClass;

- (void).cxx_destruct;
- (bool)_canAnimate;
- (id)_createItemViewForHost:(id)arg1 recipe:(long long)arg2;
- (void)_didUpdateDisplay;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })_disappearedTransformForContentWithHeight:(double)arg1;
- (id)_groupNameBase;
- (void)_insertItem:(id)arg1 atPreferredIndex:(long long)arg2 animated:(bool)arg3;
- (unsigned long long)_preferredIndexForItem:(id)arg1;
- (void)_removeItem:(id)arg1 animated:(bool)arg2;
- (void)_setIsFocusActivityIndicatorVisible:(bool)arg1;
- (id)_stackView;
- (void)_updateItemsSizeToMimic;
- (id)actionInterpreter;
- (id)actionManager;
- (void)adjunctListModel:(id)arg1 didAddItem:(id)arg2;
- (void)adjunctListModel:(id)arg1 didRemoveItem:(id)arg2;
- (void)adjunctListModel:(id)arg1 didUpdateItem:(id)arg2 withItem:(id)arg3;
- (bool)allowsAddRemoveAnimations;
- (id)contentActionProvider;
- (id)delegate;
- (id)digestOnboardingSuggestionViewController;
- (void)focusActivityIndicatorDidChangeToVisible:(bool)arg1;
- (id)focusActivityManager;
- (bool)handleEvent:(id)arg1;
- (id)identifiersToItems;
- (id)init;
- (bool)isPresentingContent;
- (bool)isPresentingTransientContent;
- (bool)isShowingMediaControls;
- (double)listViewContentAnimationDampingRatio;
- (double)listViewContentAnimationDuration;
- (id)nowPlayingController;
- (void)preferredContentSizeDidChangeForChildContentContainer:(id)arg1;
- (id)remoteContentInlineManager;
- (id)remoteContentInlineProvider;
- (bool)respondingToSubviewLayoutChange;
- (void)setActionInterpreter:(id)arg1;
- (void)setActionManager:(id)arg1;
- (void)setAllowsAddRemoveAnimations:(bool)arg1;
- (void)setContentActionProvider:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDigestOnboardingSuggestionViewController:(id)arg1;
- (void)setFocusActivityManager:(id)arg1;
- (void)setIdentifiersToItems:(id)arg1;
- (void)setNowPlayingController:(id)arg1;
- (void)setRemoteContentInlineManager:(id)arg1;
- (void)setRemoteContentInlineProvider:(id)arg1;
- (void)setRespondingToSubviewLayoutChange:(bool)arg1;
- (void)setWidgetMetricsProvider:(id)arg1;
- (struct CGSize { double x1; double x2; })sizeToMimic;
- (struct CGSize { double x1; double x2; })sizeToMimicForHost:(id)arg1;
- (struct CGSize { double x1; double x2; })stackViewContentSize;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (id)widgetMetricsProvider;

@end
