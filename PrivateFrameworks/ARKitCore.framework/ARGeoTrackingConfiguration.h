
@interface ARGeoTrackingConfiguration : ARConfiguration {
    bool  _alwaysUsePrimaryCameraForTracking;
    bool  _appClipCodeTrackingEnabled;
    bool  _automaticImageScaleEstimationEnabled;
    bool  _depthOptimizedForStaticScene;
    NSSet * _detectionImages;
    NSSet * _detectionObjects;
    long long  _environmentTexturing;
    bool  _ignoreAppClipCodeURLLimitation;
    bool  _lowQosSchedulingEnabled;
    long long  _maximumNumberOfTrackedImages;
    double  _minVergenceAngle;
    bool  _mlModelEnabled;
    unsigned long long  _planeDetection;
    double  _posteriorVisualLocalizationCallInterval;
    bool  _shouldUseUltraWideIfAvailable;
    unsigned long long  _supportEnablementOptions;
    bool  _useLidarIfAvailable;
    double  _visualLocalizationCallInterval;
    bool  _visualLocalizationUpdatesRequested;
    bool  _wantsHDREnvironmentTextures;
}

@property (nonatomic) bool alwaysUsePrimaryCameraForTracking;
@property (nonatomic) bool appClipCodeTrackingEnabled;
@property (nonatomic) bool automaticImageScaleEstimationEnabled;
@property (nonatomic) bool depthOptimizedForStaticScene;
@property (nonatomic, copy) NSSet *detectionImages;
@property (nonatomic, copy) NSSet *detectionObjects;
@property (nonatomic) long long environmentTexturing;
@property (nonatomic) bool ignoreAppClipCodeURLLimitation;
@property (nonatomic, readonly) ARImageSensorSettings *imageSensorSettingsForUltraWide;
@property (getter=isLowQosSchedulingEnabled, nonatomic) bool lowQosSchedulingEnabled;
@property (nonatomic) long long maximumNumberOfTrackedImages;
@property (nonatomic) double minVergenceAngle;
@property (getter=isMLModelEnabled, nonatomic) bool mlModelEnabled;
@property (nonatomic) unsigned long long planeDetection;
@property (nonatomic) bool shouldUseUltraWideIfAvailable;
@property (nonatomic) unsigned long long supportEnablementOptions;
@property (nonatomic) bool useLidarIfAvailable;
@property (nonatomic) double visualLocalizationCallInterval;
@property (nonatomic) bool visualLocalizationUpdatesRequested;
@property (nonatomic) bool wantsHDREnvironmentTextures;
@property (nonatomic) long long worldAlignment;

+ (bool)_verifyLocationPermissionsWithLocationManager:(id)arg1 handler:(id)arg2;
+ (void)checkAvailabilityAtCoordinate:(struct CLLocationCoordinate2D { double x1; double x2; })arg1 completionHandler:(id /* block */)arg2;
+ (void)checkAvailabilityAtCoordinate:(struct CLLocationCoordinate2D { double x1; double x2; })arg1 withOptions:(unsigned long long)arg2 completionHandler:(id /* block */)arg3;
+ (id)checkAvailabilityQueue;
+ (void)checkAvailabilityWithCompletionHandler:(id /* block */)arg1;
+ (void)checkAvailabilityWithOptions:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
+ (bool)isSupported;
+ (bool)isSupportedWithOptions:(unsigned long long)arg1;
+ (id)locationManagerQueue;
+ (id)new;
+ (id)recommendedVideoFormatFor4KResolution;
+ (id)recommendedVideoFormatForHighResolutionFrameCapturing;
+ (id)supportedVideoFormats;
+ (id)supportedVideoFormatsForUltraWide;
+ (bool)supportsAppClipCodeTracking;
+ (bool)supportsFrameSemantics:(unsigned long long)arg1;
+ (bool)verifyLocationPermissions;

- (void).cxx_destruct;
- (long long)_depthPrioritization;
- (id)_trackingOptions;
- (bool)alwaysUsePrimaryCameraForTracking;
- (bool)appClipCodeTrackingEnabled;
- (bool)automaticImageScaleEstimationEnabled;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)createTechniques:(id)arg1;
- (bool)depthOptimizedForStaticScene;
- (id)description;
- (id)detectionImages;
- (id)detectionObjects;
- (long long)environmentTexturing;
- (bool)ignoreAppClipCodeURLLimitation;
- (id)imageSensorSettings;
- (id)imageSensorSettingsForUltraWide;
- (id)init;
- (bool)isEqual:(id)arg1;
- (bool)isLowQosSchedulingEnabled;
- (bool)isMLModelEnabled;
- (long long)maximumNumberOfTrackedImages;
- (double)minVergenceAngle;
- (id)parentImageSensorSettings;
- (unsigned long long)planeDetection;
- (void)setAlwaysUsePrimaryCameraForTracking:(bool)arg1;
- (void)setAppClipCodeTrackingEnabled:(bool)arg1;
- (void)setAutomaticImageScaleEstimationEnabled:(bool)arg1;
- (void)setDepthOptimizedForStaticScene:(bool)arg1;
- (void)setDetectionImages:(id)arg1;
- (void)setDetectionObjects:(id)arg1;
- (void)setEnvironmentTexturing:(long long)arg1;
- (void)setIgnoreAppClipCodeURLLimitation:(bool)arg1;
- (void)setLowQosSchedulingEnabled:(bool)arg1;
- (void)setMaximumNumberOfTrackedImages:(long long)arg1;
- (void)setMinVergenceAngle:(double)arg1;
- (void)setMlModelEnabled:(bool)arg1;
- (void)setPlaneDetection:(unsigned long long)arg1;
- (void)setShouldUseUltraWideIfAvailable:(bool)arg1;
- (void)setSupportEnablementOptions:(unsigned long long)arg1;
- (void)setUseLidarIfAvailable:(bool)arg1;
- (void)setVideoFormat:(id)arg1;
- (void)setVisualLocalizationCallInterval:(double)arg1;
- (void)setVisualLocalizationUpdatesRequested:(bool)arg1;
- (void)setWantsHDREnvironmentTextures:(bool)arg1;
- (void)setWorldAlignment:(long long)arg1;
- (bool)shouldEnableVisionDataForImageSensorSettings:(id)arg1;
- (bool)shouldUseJasper;
- (bool)shouldUseUltraWide;
- (bool)shouldUseUltraWideIfAvailable;
- (unsigned long long)supportEnablementOptions;
- (bool)useLidarIfAvailable;
- (double)visualLocalizationCallInterval;
- (bool)visualLocalizationUpdatesRequested;
- (bool)wantsHDREnvironmentTextures;
- (long long)worldAlignment;

@end
