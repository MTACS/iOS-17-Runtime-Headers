
@interface ARSession : NSObject <ARSensorDelegate, ARTechniqueDelegate, ARWorldTrackingTechniqueObserver> {
    NSArray * _availableSensors;
    ARBKSAccelerometer * _bksAccelerometer;
    ARConfiguration * _configurationInternal;
    bool  _configuredForWorldTracking;
    double  _currentTrackingStartingTimestamp;
    struct CV3DLoggingHandle { } * _cv3dLoggingHandle;
    double  _defaultRelocalizationDuration;
    <ARSessionDelegate> * _delegate;
    NSObject<OS_dispatch_queue> * _delegateQueue;
    ARDepthPointCloudCoalescer * _depthPointCloudCoalescer;
    ARParentTechnique * _dontUseDirectlySecondaryTechnique;
    ARParentTechnique * _dontUseDirectlyTechnique;
    AREnvironmentTexturingTechnique * _environmentTexturingTechnique;
    long long  _featurePointAccumulationCount;
    bool  _forceAddSceneReconstructionKeyframePointCloudWithColor;
    bool  _forceEnvironmentTexturingToManualMode;
    ARFrameContextHandler * _frameContextHandler;
    NSObject<OS_dispatch_semaphore> * _frameContextHandlerSemaphore;
    NSMutableDictionary * _geoAnchorToAltitude;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _geoAnchorToAltitudeLock;
    ARRemoteGeoTrackingTechnique * _geoTrackingTechnique;
    NSUUID * _identifier;
    ARImageSensor * _imageSensor;
    bool  _isHiResFrameCaptureInProgress;
    NSObject<OS_dispatch_semaphore> * _lastPredictedFrameSemaphore;
    struct { 
        /* Warning: Unrecognized filer type: ']' using 'void*' */ void*columns[4]; 
    }  _lastPredictedFrameTransform;
    ARFrame * _lastProcessedFrame;
    NSObject<OS_dispatch_semaphore> * _lastProcessedFrameSemaphore;
    ARDeviceOrientationData * _latestDeviceOrientationData;
    ARLocationData * _latestLocationData;
    ARImageData * _latestUltraWideImageData;
    ARRemoteLocationSensor * _locationSensor;
    ARSessionMetrics * _metrics;
    CMMotionManager * _motionManger;
    NSHashTable * _observers;
    NSObject<OS_dispatch_semaphore> * _observersSemaphore;
    unsigned long long  _pausedSensors;
    unsigned int  _peakPowerPressureLevel;
    int  _peakPowerPressureToken;
    id /* block */  _pendingHiResFrameCaptureCompletionBlock;
    NSObject<OS_dispatch_semaphore> * _pendingHiResFrameCaptureSemaphore;
    unsigned long long  _powerUsage;
    NSObject<OS_dispatch_queue> * _prepareTechniquesQueue;
    ARVideoFormat * _primaryVideoFormat;
    ARRecordingTechniquePublic * _recordingTechnique;
    bool  _relocalizationRequested;
    NSDate * _relocalizationTimeoutDate;
    bool  _relocalizing;
    bool  _renderPersonBoundingBoxesIntoCapturedImage;
    <ARReplaySensorProtocol> * _replaySensor;
    NSObject<OS_dispatch_semaphore> * _resultDataOfSecondaryFrameContextsSemaphore;
    ARRenderSyncScheduler * _resultRequestScheduler;
    unsigned long long  _runningSensors;
    ARRenderSyncScheduler * _secondaryResultRequestScheduler;
    unsigned long long  _state;
    NSObject<OS_dispatch_queue> * _stateQueue;
    bool  _techniquesWantPredictedPoseForWideCam;
    long long  _thermalState;
    id  _thermalStateObserver;
    ARQATracer * _tracer;
    ARTrackedRaycastPostProcessor * _trackedRaycastPostProcessor;
    bool  _vioFusionEnabled;
    NSPointerArray * _weakPixelBuffers;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _weakPixelBuffersLock;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _worldMapSurfaceDataLock;
    ARWorldTrackingTechnique * _worldTrackingTechnique;
    NSArray * resultDatasOfSecondaryFrameContexts;
}

@property (nonatomic, retain) NSArray *availableSensors;
@property (nonatomic, readonly) void cameraPosition;
@property (nonatomic, readonly, copy) ARConfiguration *configuration;
@property (retain) ARConfiguration *configurationInternal;
@property (nonatomic, readonly, copy) ARFrame *currentFrame;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <ARSessionDelegate> *delegate;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *delegateQueue;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool forceAddSceneReconstructionKeyframePointCloudWithColor;
@property (nonatomic, retain) NSMutableDictionary *geoAnchorToAltitude;
@property (nonatomic, retain) ARRemoteGeoTrackingTechnique *geoTrackingTechnique;
@property (readonly) unsigned long long hash;
@property (retain) NSUUID *identifier;
@property (retain) ARDeviceOrientationData *latestDeviceOrientationData;
@property (retain) ARLocationData *latestLocationData;
@property (nonatomic, readonly) ARSessionMetrics *metrics;
@property (nonatomic) unsigned long long pausedSensors;
@property unsigned long long powerUsage;
@property bool relocalizing;
@property (nonatomic) unsigned long long runningSensors;
@property (retain) ARParentTechnique *secondaryTechnique;
@property (nonatomic) unsigned long long state;
@property (readonly) Class superclass;
@property (retain) ARParentTechnique *technique;
@property (nonatomic, retain) ARQATracer *tracer;

// Image: /System/Library/PrivateFrameworks/ARKitCore.framework/ARKitCore

+ (id)_applySessionOverrides:(id)arg1 outError:(id*)arg2;
+ (id)_fullDescription;
+ (id)_runningSessions;
+ (bool)_supportsConfiguration:(id)arg1;
+ (void)forceEnvironmentTexturingTechniqueToManualMode:(id)arg1;
+ (void)initialize;
+ (void)setRenderType:(unsigned long long)arg1;

- (void).cxx_destruct;
- (void)_addObserver:(id)arg1;
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })_cameraTransformForResultData:(id)arg1 previousFrame:(id)arg2;
- (void)_changePowerUsage:(unsigned long long)arg1;
- (void)_changePowerUsage:(unsigned long long)arg1 forced:(bool)arg2;
- (void)_configureSensorsForRecording;
- (void)_endInterruption;
- (bool)_exposeInternalDepthData;
- (id)_frameContextByConsumingPendingChanges;
- (id)_fullDescription;
- (id)_getGeoAnchorAltitude:(id)arg1;
- (id)_getObservers;
- (id)_imageSensorForConfiguration:(id)arg1 existingSensor:(id)arg2;
- (void)_interruptSession;
- (void)_lookupAltitudeAtCoordinate:(struct CLLocationCoordinate2D { double x1; double x2; })arg1 completionHandler:(id /* block */)arg2;
- (void)_lookupAltitudeForAnchor:(id)arg1;
- (void)_pauseWaitingForOutstandingCallbacks:(bool)arg1;
- (id)_prepareTechniquesQueue;
- (void)_removeGeoAnchorAltitude:(id)arg1;
- (void)_removeObserver:(id)arg1;
- (void)_replaceOrAddSensor:(id)arg1;
- (void)_saveGraphFileInFileName:(id*)arg1;
- (void)_sessionCameraDidChangeTrackingState:(id)arg1;
- (void)_sessionDidAddAnchors:(id)arg1;
- (void)_sessionDidCaptureHighResolutionFrame:(id)arg1 error:(id)arg2;
- (void)_sessionDidChangeGeoTrackingStatus:(id)arg1;
- (void)_sessionDidFailWithError:(id)arg1;
- (void)_sessionDidOutputAudioData:(id)arg1;
- (void)_sessionDidOutputCollaborationData:(id)arg1;
- (void)_sessionDidRemoveAnchors:(id)arg1;
- (void)_sessionDidUpdateAnchors:(id)arg1;
- (void)_sessionDidUpdateExternalAnchors:(id)arg1;
- (void)_sessionDidUpdateFrame:(id)arg1;
- (void)_sessionDidUpdateSpatialMappingPointClouds:(id)arg1;
- (void)_sessionRequestedRunWithConfiguration:(id)arg1 options:(unsigned long long)arg2;
- (void)_sessionShouldAttemptRelocalization;
- (void)_sessionWillRunWithConfiguration:(id)arg1;
- (void)_setGeoAnchorAltitude:(id)arg1 pair:(id)arg2;
- (void)_setPrimaryTechnique:(id)arg1;
- (void)_setPrimaryTechnique:(id)arg1 secondaryTechnique:(id)arg2;
- (bool)_shouldSkipAnchorCreationForData:(id)arg1;
- (bool)_shouldUpdateLocationSensorForFusion;
- (void)_startSensorsWithRequiredDataTypes:(unsigned long long)arg1 optionalDataTypes:(unsigned long long)arg2;
- (id)_stateQueue;
- (void)_stopAllSensorsWaitingForOutstandingCallbacks:(bool)arg1;
- (void)_stopSensorsWithDataTypes:(unsigned long long)arg1 keepingDataTypes:(unsigned long long)arg2;
- (void)_updateAnchorsForFrame:(id)arg1 resultDatas:(id)arg2 context:(id)arg3 addedAnchors:(id)arg4 updatedAnchors:(id)arg5 removedAnchors:(id)arg6 externalAnchors:(id)arg7;
- (void)_updateFeaturePointsForFrame:(id)arg1 previousFrame:(id)arg2 trackingStateChanged:(bool)arg3 context:(id)arg4;
- (void)_updateOriginTransformForFrame:(id)arg1 previousFrame:(id)arg2 modifiers:(unsigned long long)arg3 context:(id)arg4;
- (void)_updatePowerPressureLevelWithToken:(int)arg1;
- (void)_updatePowerUsage;
- (void)_updatePowerUsageForced:(bool)arg1;
- (void)_updateSensorsWithConfiguration:(id)arg1;
- (void)_updateSessionStateWithConfiguration:(id)arg1 options:(unsigned long long)arg2;
- (void)_updateSessionWithConfiguration:(id)arg1 options:(unsigned long long)arg2;
- (void)_updateThermalState:(id)arg1;
- (id)adPipelineParameters;
- (void)addAnchor:(id)arg1;
- (id)annotateAnchorToRaycastResults:(id)arg1;
- (id)availableSensors;
- (void)captureHighResolutionFrameWithCompletion:(id /* block */)arg1;
- (void)captureHighResolutionFrameWithPhotoSettings:(id)arg1 completion:(id /* block */)arg2;
- (id)configuration;
- (id)configurationInternal;
- (void)createReferenceObjectWithTransform:(void *)arg1 center:(void *)arg2 extent:(void *)arg3 completionHandler:(void *)arg4; // needs 4 arg types, found 2: struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; }, id /* block */
- (id)currentFrame;
- (void)dealloc;
- (id)delegate;
- (id)delegateQueue;
- (id)description;
- (bool)forceAddSceneReconstructionKeyframePointCloudWithColor;
- (void)forceEnvironmentTexturingToManualMode:(bool)arg1;
- (id)frameWithCameraImage;
- (id)geoAnchorToAltitude;
- (id)geoTrackingTechnique;
- (void)getCurrentWorldMapWithCompletionHandler:(id /* block */)arg1;
- (void)getGeoLocationForPoint:(void *)arg1 completionHandler:(void *)arg2; // needs 2 arg types, found 1: id /* block */
- (id)identifier;
- (id)init;
- (bool)is6DofFaceTracking;
- (bool)isPrimaryImageData:(id)arg1;
- (bool)isUserFaceTracking;
- (id)latestDeviceOrientationData;
- (id)latestLocationData;
- (id)metrics;
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })originTransform;
- (void)pause;
- (unsigned long long)pausedSensors;
- (unsigned long long)powerUsage;
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })predictedDeviceTransformAtTimestamp:(double)arg1;
- (bool)querySceneReconstructionOccupancyWithPoints:(id)arg1 callback:(id /* block */)arg2;
- (id)raycast:(id)arg1;
- (bool)relocalizing;
- (void)removeAnchor:(id)arg1;
- (id)replaySensor;
- (void)runWithConfiguration:(id)arg1;
- (void)runWithConfiguration:(id)arg1 options:(unsigned long long)arg2;
- (unsigned long long)runningSensors;
- (id)secondaryTechnique;
- (void)sensor:(id)arg1 didFailWithError:(id)arg2;
- (void)sensor:(id)arg1 didOutputSensorData:(id)arg2;
- (void)sensorDidPause:(id)arg1;
- (void)sensorDidRestart:(id)arg1;
- (void)setAvailableSensors:(id)arg1;
- (void)setConfigurationInternal:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDelegateQueue:(id)arg1;
- (void)setForceAddSceneReconstructionKeyframePointCloudWithColor:(bool)arg1;
- (void)setGeoAnchorToAltitude:(id)arg1;
- (void)setGeoTrackingTechnique:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setLatestDeviceOrientationData:(id)arg1;
- (void)setLatestLocationData:(id)arg1;
- (void)setOriginTransform:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })arg1;
- (void)setPausedSensors:(unsigned long long)arg1;
- (void)setPowerUsage:(unsigned long long)arg1;
- (void)setRelocalizing:(bool)arg1;
- (void)setRunningSensors:(unsigned long long)arg1;
- (void)setSecondaryTechnique:(id)arg1;
- (void)setState:(unsigned long long)arg1;
- (void)setTechnique:(id)arg1;
- (void)setTracer:(id)arg1;
- (void)setWorldOrigin:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })arg1;
- (void)setupResultRequestSyncScheduler:(id)arg1 forTechnique:(id)arg2;
- (void)setupSessionForTechniques:(id)arg1;
- (unsigned long long)state;
- (id)technique;
- (void)technique:(id)arg1 didChangeState:(long long)arg2;
- (void)technique:(id)arg1 didFailWithError:(id)arg2;
- (void)technique:(id)arg1 didOutputCollaborationData:(id)arg2;
- (void)technique:(id)arg1 didOutputResultData:(id)arg2 timestamp:(double)arg3 context:(id)arg4;
- (id)tracer;
- (id)trackedRaycast:(id)arg1 updateHandler:(id /* block */)arg2;
- (void)updateWithCollaborationData:(id)arg1;
- (bool)wantsPredictedAnchorTracking;

// Image: /System/Library/PrivateFrameworks/AssetViewer.framework/AssetViewer

- (void)cameraPosition;
- (float)raycastResultDistanceFromCamera:(id)arg1;
- (id)smartRaycastResultForImagePoint:(void *)arg1 assetPosition:(void *)arg2 maxDistance:(void *)arg3; // needs 3 arg types, found 1: float

@end
