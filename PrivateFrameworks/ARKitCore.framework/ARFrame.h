
@interface ARFrame : NSObject <NSCopying, NSSecureCoding> {
    NSArray * _anchors;
    NSArray * _cachedHorizontalPlaneAnchors;
    NSArray * _cachedPointClouds;
    NSArray * _cachedVerticalPlaneAnchors;
    ARCamera * _camera;
    float  _cameraGrainIntensity;
    <MTLTexture> * _cameraGrainTexture;
    NSDate * _captureDate;
    AVDepthData * _capturedDepthData;
    double  _capturedDepthDataTimestamp;
    struct __CVBuffer { } * _capturedImage;
    ARPointCloud * _capturedPointCloudData;
    struct __CVBuffer { } * _capturedUltraWideImage;
    double  _currentCaptureTimestamp;
    ARVideoFormat * _currentlyActiveVideoFormat;
    struct __CVBuffer { } * _depthConfidenceData;
    struct CGImage { } * _depthMap;
    struct __CVBuffer { } * _depthNormalData;
    NSArray * _detectedBodies;
    NSArray * _detectedPersonMetadata;
    long long  _deviceOrientation;
    struct __CVBuffer { } * _downSampledMattingPixelBuffer;
    struct __CVBuffer { } * _estimatedDepthData;
    double  _estimatedLuminance;
    NSDictionary * _exifData;
    ARFaceData * _faceData;
    ARPointCloud * _featurePoints;
    ARGeoTrackingStatus * _geoTrackingStatus;
    double  _heading;
    bool  _highResolution;
    float  _imageNoiseIntensity;
    <MTLTexture> * _imageNoiseTexture;
    ARLightEstimate * _lightEstimate;
    CLLocation * _location;
    struct __CVBuffer { } * _mattingScaleImagePixelBuffer;
    NSArray * _privateAnchors;
    double  _rawHeading;
    CLLocation * _rawLocation;
    double  _rawLocationTimestamp;
    ARRawSceneUnderstandingData * _rawSceneUnderstandingData;
    ARPointCloud * _referenceFeaturePoints;
    struct { 
        /* Warning: Unrecognized filer type: ']' using 'void*' */ void*columns[4]; 
    }  _referenceOriginDelta;
    struct { 
        /* Warning: Unrecognized filer type: ']' using 'void*' */ void*columns[4]; 
    }  _referenceOriginTransform;
    long long  _renderFramesPerSecond;
    NSArray * _resultDatas;
    ARDepthData * _sceneDepth;
    struct __CVBuffer { } * _segmentationBuffer;
    struct __CVBuffer { } * _semanticSegmentationBuffer;
    struct { 
        /* Warning: Unrecognized filer type: ']' using 'void*' */ void*columns[4]; 
    }  _sessionOriginTransform;
    bool  _shouldRestrictFrameRate;
    ARDepthData * _smoothedSceneDepth;
    NSDictionary * _tiffData;
    double  _timestamp;
    ARFrameTimingData * _timingData;
    unsigned long long  _transformFlags;
    ARCamera * _ultraWideCamera;
    double  _ultraWideImageTimestamp;
    double  _undulation;
    VLLocalizationDebugInfo * _vlDebugInfo;
    ARVLStateData * _vlState;
    long long  _worldAlignment;
    struct { 
        /* Warning: Unrecognized filer type: ']' using 'void*' */ void*columns[4]; 
    }  _worldAlignmentTransform;
    long long  _worldMappingStatus;
    ARWorldTrackingErrorData * _worldTrackingErrorData;
    ARLineCloud * _worldTrackingLineCloud;
    ARWorldTrackingState * _worldTrackingState;
}

@property (nonatomic, copy) NSArray *anchors;
@property (nonatomic, retain) NSArray *cachedPointClouds;
@property (nonatomic, readonly, copy) ARCamera *camera;
@property (nonatomic, readonly) float cameraGrainIntensity;
@property (nonatomic, readonly) <MTLTexture> *cameraGrainTexture;
@property (nonatomic, readonly) void cameraPosition;
@property (nonatomic, retain) NSDate *captureDate;
@property (nonatomic, retain) AVDepthData *capturedDepthData;
@property (nonatomic) double capturedDepthDataTimestamp;
@property (nonatomic) struct __CVBuffer { }*capturedImage;
@property (nonatomic, retain) ARPointCloud *capturedPointCloudData;
@property (nonatomic, readonly) struct __CVBuffer { }*capturedUltraWideImage;
@property (nonatomic, readonly) double currentCaptureTimestamp;
@property (nonatomic, retain) ARVideoFormat *currentlyActiveVideoFormat;
@property (nonatomic) struct __CVBuffer { }*depthConfidenceData;
@property (nonatomic) struct CGImage { }*depthMap;
@property (nonatomic) struct __CVBuffer { }*depthNormalData;
@property (nonatomic, copy) NSArray *detectedBodies;
@property (nonatomic, readonly) ARBody2D *detectedBody;
@property (nonatomic, copy) NSArray *detectedPersonMetadata;
@property (nonatomic) long long deviceOrientation;
@property (nonatomic) struct __CVBuffer { }*downSampledMattingPixelBuffer;
@property (nonatomic) struct __CVBuffer { }*estimatedDepthData;
@property (nonatomic) double estimatedLuminance;
@property (nonatomic, readonly) NSDictionary *exifData;
@property (nonatomic, retain) ARFaceData *faceData;
@property (nonatomic, retain) ARPointCloud *featurePoints;
@property (nonatomic, retain) ARGeoTrackingStatus *geoTrackingStatus;
@property (nonatomic) double heading;
@property (getter=isHighResolution, nonatomic, readonly) bool highResolution;
@property (nonatomic) float imageNoiseIntensity;
@property (nonatomic, retain) <MTLTexture> *imageNoiseTexture;
@property (nonatomic, retain) ARLightEstimate *lightEstimate;
@property (nonatomic, retain) CLLocation *location;
@property (nonatomic) struct __CVBuffer { }*mattingScaleImagePixelBuffer;
@property (nonatomic, copy) NSArray *privateAnchors;
@property (nonatomic, readonly) ARPointCloud *rawFeaturePoints;
@property (nonatomic) double rawHeading;
@property (nonatomic, retain) CLLocation *rawLocation;
@property (nonatomic) double rawLocationTimestamp;
@property (nonatomic, retain) ARRawSceneUnderstandingData *rawSceneUnderstandingData;
@property (nonatomic, retain) ARPointCloud *referenceFeaturePoints;
@property (nonatomic) struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; } referenceOriginDelta;
@property (nonatomic) struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; } referenceOriginTransform;
@property (nonatomic) long long renderFramesPerSecond;
@property (nonatomic, copy) NSArray *resultDatas;
@property (nonatomic, retain) ARDepthData *sceneDepth;
@property (nonatomic) struct __CVBuffer { }*segmentationBuffer;
@property (nonatomic) struct __CVBuffer { }*semanticSegmentationBuffer;
@property (nonatomic) struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; } sessionOriginTransform;
@property (nonatomic) bool shouldRestrictFrameRate;
@property (nonatomic, retain) ARDepthData *smoothedSceneDepth;
@property (nonatomic, readonly) NSDictionary *tiffData;
@property (nonatomic, readonly) double timestamp;
@property (nonatomic, retain) ARFrameTimingData *timingData;
@property (nonatomic, readonly) ARCamera *ultraWideCamera;
@property (nonatomic, readonly) double ultraWideImageTimestamp;
@property (nonatomic) double undulation;
@property (nonatomic, retain) VLLocalizationDebugInfo *vlDebugInfo;
@property (nonatomic, retain) ARVLStateData *vlState;
@property (nonatomic) long long worldAlignment;
@property (nonatomic) struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; } worldAlignmentTransform;
@property (nonatomic) long long worldMappingStatus;
@property (nonatomic, retain) ARWorldTrackingErrorData *worldTrackingErrorData;
@property (nonatomic, retain) ARLineCloud *worldTrackingLineCloud;
@property (nonatomic, retain) ARWorldTrackingState *worldTrackingState;

// Image: /System/Library/PrivateFrameworks/ARKitCore.framework/ARKitCore

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)_hitTestEstimatedPlanesFromOrigin:(void *)arg1 withDirection:(void *)arg2 planeAlignment:(void *)arg3; // needs 3 arg types, found 1: long long
- (id)_hitTestFromOrigin:(void *)arg1 withDirection:(void *)arg2 planeAlignment:(void *)arg3 forPlanes:(void *)arg4 referenceOriginTransform:(void *)arg5; // needs 5 arg types, found 3: long long, id, struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; }
- (id)_hitTestFromOrigin:(void *)arg1 withDirection:(void *)arg2 types:(void *)arg3; // needs 3 arg types, found 1: unsigned long long
- (id)_horizontalPlaneEstimateFromFeaturePointfromOriginwithDirection;
- (id)anchors;
- (id)cachedPointClouds;
- (id)camera;
- (float)cameraGrainIntensity;
- (id)cameraGrainTexture;
- (id)captureDate;
- (id)capturedDepthData;
- (double)capturedDepthDataTimestamp;
- (struct __CVBuffer { }*)capturedImage;
- (id)capturedPointCloudData;
- (struct __CVBuffer { }*)capturedUltraWideImage;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (double)currentCaptureTimestamp;
- (id)currentlyActiveVideoFormat;
- (void)dealloc;
- (struct __CVBuffer { }*)depthConfidenceData;
- (struct CGImage { }*)depthMap;
- (struct __CVBuffer { }*)depthNormalData;
- (id)description;
- (id)detectedBodies;
- (id)detectedBody;
- (id)detectedPersonMetadata;
- (long long)deviceOrientation;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })displayTransformForOrientation:(long long)arg1 viewportSize:(struct CGSize { double x1; double x2; })arg2;
- (struct __CVBuffer { }*)downSampledMattingPixelBuffer;
- (void)encodeWithCoder:(id)arg1;
- (struct __CVBuffer { }*)estimatedDepthData;
- (double)estimatedLuminance;
- (id)exifData;
- (id)faceData;
- (id)featurePoints;
- (id)geoTrackingStatus;
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })gravityAlignedReferenceOriginTransform;
- (unsigned long long)hash;
- (double)heading;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 types:(unsigned long long)arg2;
- (float)imageNoiseIntensity;
- (id)imageNoiseTexture;
- (id)initWithCamera:(id)arg1 timestamp:(double)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithTimestamp:(double)arg1 context:(id)arg2;
- (bool)isEqual:(id)arg1;
- (bool)isHighResolution;
- (id)lightEstimate;
- (id)location;
- (struct __CVBuffer { }*)mattingScaleImagePixelBuffer;
- (id)privateAnchors;
- (id)rawFeaturePoints;
- (double)rawHeading;
- (id)rawLocation;
- (double)rawLocationTimestamp;
- (id)rawSceneUnderstandingData;
- (id)raycastQueryFromPoint:(struct CGPoint { double x1; double x2; })arg1 allowingTarget:(long long)arg2 alignment:(long long)arg3;
- (id)referenceFeaturePoints;
- (bool)referenceOriginChanged;
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })referenceOriginDelta;
- (bool)referenceOriginDeltaAvailable;
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })referenceOriginTransform;
- (bool)referenceOriginTransformAvailable;
- (bool)referenceOriginTransformUpdated;
- (long long)renderFramesPerSecond;
- (id)resultDatas;
- (id)sceneDepth;
- (struct __CVBuffer { }*)segmentationBuffer;
- (struct __CVBuffer { }*)semanticSegmentationBuffer;
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })sessionOriginTransform;
- (bool)sessionOriginTransformAvailable;
- (void)setAnchors:(id)arg1;
- (void)setCachedPointClouds:(id)arg1;
- (void)setCaptureDate:(id)arg1;
- (void)setCapturedDepthData:(id)arg1;
- (void)setCapturedDepthDataTimestamp:(double)arg1;
- (void)setCapturedImage:(struct __CVBuffer { }*)arg1;
- (void)setCapturedPointCloudData:(id)arg1;
- (void)setCurrentlyActiveVideoFormat:(id)arg1;
- (void)setDepthConfidenceData:(struct __CVBuffer { }*)arg1;
- (void)setDepthMap:(struct CGImage { }*)arg1;
- (void)setDepthNormalData:(struct __CVBuffer { }*)arg1;
- (void)setDetectedBodies:(id)arg1;
- (void)setDetectedPersonMetadata:(id)arg1;
- (void)setDeviceOrientation:(long long)arg1;
- (void)setDownSampledMattingPixelBuffer:(struct __CVBuffer { }*)arg1;
- (void)setEstimatedDepthData:(struct __CVBuffer { }*)arg1;
- (void)setEstimatedLuminance:(double)arg1;
- (void)setFaceData:(id)arg1;
- (void)setFeaturePoints:(id)arg1;
- (void)setGeoTrackingStatus:(id)arg1;
- (void)setHeading:(double)arg1;
- (void)setImageNoiseIntensity:(float)arg1;
- (void)setImageNoiseTexture:(id)arg1;
- (void)setLightEstimate:(id)arg1;
- (void)setLocation:(id)arg1;
- (void)setMattingScaleImagePixelBuffer:(struct __CVBuffer { }*)arg1;
- (void)setPrivateAnchors:(id)arg1;
- (void)setRawHeading:(double)arg1;
- (void)setRawLocation:(id)arg1;
- (void)setRawLocationTimestamp:(double)arg1;
- (void)setRawSceneUnderstandingData:(id)arg1;
- (void)setReferenceFeaturePoints:(id)arg1;
- (void)setReferenceOriginChanged:(bool)arg1;
- (void)setReferenceOriginDelta:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })arg1;
- (void)setReferenceOriginTransform:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })arg1;
- (void)setReferenceOriginTransformUpdated:(bool)arg1;
- (void)setRenderFramesPerSecond:(long long)arg1;
- (void)setResultDatas:(id)arg1;
- (void)setSceneDepth:(id)arg1;
- (void)setSegmentationBuffer:(struct __CVBuffer { }*)arg1;
- (void)setSemanticSegmentationBuffer:(struct __CVBuffer { }*)arg1;
- (void)setSessionOriginTransform:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })arg1;
- (void)setShouldRestrictFrameRate:(bool)arg1;
- (void)setSmoothedSceneDepth:(id)arg1;
- (void)setTimingData:(id)arg1;
- (void)setUndulation:(double)arg1;
- (void)setVlDebugInfo:(id)arg1;
- (void)setVlState:(id)arg1;
- (void)setWorldAlignment:(long long)arg1;
- (void)setWorldAlignmentTransform:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })arg1;
- (void)setWorldMappingStatus:(long long)arg1;
- (void)setWorldTrackingErrorData:(id)arg1;
- (void)setWorldTrackingLineCloud:(id)arg1;
- (void)setWorldTrackingState:(id)arg1;
- (bool)shouldRestrictFrameRate;
- (id)smoothedSceneDepth;
- (id)tiffData;
- (double)timestamp;
- (id)timingData;
- (void)transformPointToNDCSpace:(struct CGPoint { double x1; double x2; })arg1;
- (id)ultraWideCamera;
- (double)ultraWideImageTimestamp;
- (double)undulation;
- (bool)useHittestRaycasting;
- (id)vlDebugInfo;
- (id)vlState;
- (long long)worldAlignment;
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })worldAlignmentTransform;
- (bool)worldAlignmentTransformAvailable;
- (long long)worldMappingStatus;
- (id)worldTrackingErrorData;
- (id)worldTrackingLineCloud;
- (id)worldTrackingState;

// Image: /System/Library/PrivateFrameworks/AssetViewer.framework/AssetViewer

- (void)cameraPosition;
- (id)hitTestOnPlaneWithWorldTransform:(void *)arg1 forImagePoint:(void *)arg2 maxDistance:(void *)arg3; // needs 3 arg types, found 2: struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; }, float
- (bool)hitTestResult:(id)arg1 isPlaneOfType:(unsigned long long)arg2;
- (float)hitTestResultDistanceFromCamera:(id)arg1;
- (void)normalizedImagePointForScreenPoint:(void *)arg1 viewportSize:(void *)arg2 orientation:(void *)arg3; // needs 3 arg types, found 2: struct CGSize { double x1; double x2; }, long long
- (id)smartHitTestResultForImagePoint:(void *)arg1 assetPosition:(void *)arg2 maxDistance:(void *)arg3; // needs 3 arg types, found 1: float

@end
