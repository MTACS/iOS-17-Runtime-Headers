
@interface EAPBoringSSLSession : NSObject {
    void * _clientContext;
    NSObject<OS_nw_connection> * _connection;
    NSObject<OS_nw_framer> * _customFramer;
    NSObject<OS_nw_protocol_options> * _customProtocol;
    unsigned int  _eapType;
    int  _handshakeStatus;
    struct { bool x1; struct memoryBuffer_s {} *x2; struct memoryBuffer_s {} *x3; } * _memIO;
    NSData * _msk;
    NSObject<OS_dispatch_queue> * _queue;
    int (* _read;
    NSObject<OS_sec_protocol_metadata> * _secProtocolMetadata;
    id /* block */  _secTrustCompletionHandler;
    struct __SecTrust { } * _serverSecTrust;
    int  _state;
    NSConditionLock * _statusUpdateLock;
    NSObject<OS_nw_protocol_options> * _tlsProtocol;
    int (* _write;
}

@property (nonatomic) void*clientContext;
@property (nonatomic, retain) NSObject<OS_nw_connection> *connection;
@property (nonatomic, retain) NSObject<OS_nw_framer> *customFramer;
@property (nonatomic, retain) NSObject<OS_nw_protocol_options> *customProtocol;
@property (nonatomic) unsigned int eapType;
@property (nonatomic) int handshakeStatus;
@property (nonatomic) struct { bool x1; struct memoryBuffer_s {} *x2; struct memoryBuffer_s {} *x3; }*memIO;
@property (nonatomic, retain) NSData *msk;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic) int (*read;
@property (nonatomic) NSObject<OS_sec_protocol_metadata> *secProtocolMetadata;
@property (copy) id /* block */ secTrustCompletionHandler;
@property (nonatomic) struct __SecTrust { }*serverSecTrust;
@property (nonatomic) int state;
@property (nonatomic, retain) NSConditionLock *statusUpdateLock;
@property (nonatomic, retain) NSObject<OS_nw_protocol_options> *tlsProtocol;
@property (nonatomic) int (*write;

- (void).cxx_destruct;
- (void*)clientContext;
- (bool)configureSecProtocol:(struct EAPBoringSSLSessionParameters_s { struct __SecIdentity {} *x1; struct __CFArray {} *x2; unsigned short x3; unsigned short x4; int (*x5)(); int (*x6)(); unsigned int x7; struct { /* ? */ } *x8; }*)arg1;
- (id)connection;
- (id)customFramer;
- (id)customProtocol;
- (id)customProtocolDefinition;
- (void)dealloc;
- (int)deliverInput;
- (unsigned int)eapType;
- (id)getEAPKeyMaterial;
- (unsigned char)getEAPMethodInUse;
- (unsigned short)getNegotiatedTLSVersion;
- (bool)getSessionResumed;
- (int)handshake;
- (int)handshakeStatus;
- (id)init;
- (struct { bool x1; struct memoryBuffer_s {} *x2; struct memoryBuffer_s {} *x3; }*)memIO;
- (id)msk;
- (id)queue;
- (int (*)read;
- (void)readApplicationData;
- (id)secProtocolMetadata;
- (id /* block */)secTrustCompletionHandler;
- (struct __SecTrust { }*)serverSecTrust;
- (void)setClientContext:(void*)arg1;
- (bool)setClientIdentity:(struct __SecIdentity { }*)arg1 certificates:(id)arg2;
- (void)setConnection:(id)arg1;
- (void)setCustomFramer:(id)arg1;
- (void)setCustomProtocol:(id)arg1;
- (void)setEapType:(unsigned int)arg1;
- (void)setHandshakeStatus:(int)arg1;
- (void)setMemIO:(struct { bool x1; struct memoryBuffer_s {} *x2; struct memoryBuffer_s {} *x3; }*)arg1;
- (void)setMsk:(id)arg1;
- (void)setQueue:(id)arg1;
- (void)setRead:(int (*)arg1;
- (void)setSecProtocolMetadata:(id)arg1;
- (void)setSecTrustCompletionHandler:(id /* block */)arg1;
- (void)setServerSecTrust:(struct __SecTrust { }*)arg1;
- (void)setState:(int)arg1;
- (void)setStatusUpdateLock:(id)arg1;
- (void)setTlsProtocol:(id)arg1;
- (void)setWrite:(int (*)arg1;
- (bool)setup:(struct EAPBoringSSLSessionParameters_s { struct __SecIdentity {} *x1; struct __CFArray {} *x2; unsigned short x3; unsigned short x4; int (*x5)(); int (*x6)(); unsigned int x7; struct { /* ? */ } *x8; }*)arg1 clientContext:(void*)arg2;
- (void)start;
- (int)state;
- (id)statusUpdateLock;
- (void)stop;
- (id)tlsProtocol;
- (void)updateHandshakeStatus:(int)arg1;
- (int (*)write;

@end
