
@interface AVAssetWriter : NSObject <AVIntegrityChecking, AVKeyPathDependencyHost, AVWeakObservable> {
    AVAssetWriterInternal * _internal;
}

@property (nonatomic, readonly) NSArray *availableMediaTypes;
@property (readonly, copy) NSString *debugDescription;
@property (getter=isDefunct, nonatomic, readonly) bool defunct;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) NSURL *directoryForTemporaryFiles;
@property (readonly) NSError *error;
@property (readonly) unsigned long long hash;
@property (getter=_helper, readonly, retain) AVAssetWriterHelper *helper;
@property (nonatomic, readonly) NSArray *inputs;
@property (nonatomic, copy) NSArray *metadata;
@property (nonatomic, readonly, copy) NSString *outputFileType;
@property (nonatomic, readonly, copy) NSURL *outputURL;
@property (nonatomic) bool shouldOptimizeForNetworkUse;
@property (readonly) long long status;
@property (readonly) Class superclass;

+ (id)_errorForOSStatus:(int)arg1;
+ (id)assetWriterWithURL:(id)arg1 fileType:(id)arg2 error:(id*)arg3;
+ (bool)automaticallyNotifiesObserversForKey:(id)arg1;
+ (void)initialize;

- (id)_helper;
- (bool)_initInternalObject;
- (bool)_setHelper:(id)arg1 ifCurrentHelper:(id)arg2;
- (bool)_setHelper:(id)arg1 ifCurrentHelper:(id)arg2 withBlock:(id /* block */)arg3;
- (bool)_supportsSampleReferencesReturningError:(id*)arg1;
- (void)_transitionToFailedStatusWithError:(id)arg1;
- (void)addCallbackToCancelDuringDeallocation:(id)arg1;
- (void)addInput:(id)arg1;
- (void)addInputGroup:(id)arg1;
- (id)availableMediaTypes;
- (bool)canAddInput:(id)arg1;
- (bool)canAddInputGroup:(id)arg1;
- (bool)canApplyOutputSettings:(id)arg1 forMediaType:(id)arg2;
- (void)cancelWriting;
- (void)dealloc;
- (void)declareKeyPathDependenciesWithRegistry:(id)arg1;
- (id)delegate;
- (id)description;
- (id)directoryForTemporaryFiles;
- (void)endSessionAtSourceTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (id)error;
- (bool)finishWriting;
- (id)finishWritingDelegate;
- (void)finishWritingWithCompletionHandler:(id /* block */)arg1;
- (void)flush;
- (void)flushSegment;
- (id)init;
- (id)initWithContentType:(id)arg1;
- (id)initWithFileType:(id)arg1 error:(id*)arg2;
- (id)initWithURL:(id)arg1 fileType:(id)arg2 error:(id*)arg3;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })initialMovieFragmentInterval;
- (long long)initialMovieFragmentSequenceNumber;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })initialSegmentStartTime;
- (id)inputGroups;
- (id)inputs;
- (bool)isDefunct;
- (bool)isVirtualCaptureCardSupported;
- (id)metadata;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })movieFragmentInterval;
- (int)movieTimeScale;
- (id)outputFileType;
- (id)outputFileTypeProfile;
- (id)outputURL;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })overallDurationHint;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })preferredOutputSegmentInterval;
- (float)preferredRate;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })preferredTransform;
- (float)preferredVolume;
- (bool)producesCombinableFragments;
- (bool)requiresInProcessOperation;
- (void)setDelegate:(id)arg1;
- (void)setDirectoryForTemporaryFiles:(id)arg1;
- (void)setFinishWritingDelegate:(id)arg1;
- (void)setInitialMovieFragmentInterval:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setInitialMovieFragmentSequenceNumber:(long long)arg1;
- (void)setInitialSegmentStartTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setMetadata:(id)arg1;
- (void)setMovieFragmentInterval:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setMovieTimeScale:(int)arg1;
- (void)setOutputFileTypeProfile:(id)arg1;
- (void)setOverallDurationHint:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setPreferredOutputSegmentInterval:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setPreferredRate:(float)arg1;
- (void)setPreferredTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1;
- (void)setPreferredVolume:(float)arg1;
- (void)setProducesCombinableFragments:(bool)arg1;
- (void)setRequiresInProcessOperation:(bool)arg1;
- (void)setShouldOptimizeForNetworkUse:(bool)arg1;
- (void)setUsesVirtualCaptureCard:(bool)arg1;
- (void)setWritesSinglePassUsingPredeterminedFileSize:(long long)arg1 mediaDataSize:(long long)arg2;
- (bool)shouldOptimizeForNetworkUse;
- (void)startSessionAtSourceTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (bool)startWriting;
- (long long)status;
- (bool)usesVirtualCaptureCard;

@end
