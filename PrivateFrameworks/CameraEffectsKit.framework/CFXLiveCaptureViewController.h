
@interface CFXLiveCaptureViewController : UIViewController <CFXRendererDelegate, JFXVideoCameraAudioDelegate, JFXVideoCameraVideoDelegate, UIGestureRecognizerDelegate> {
    long long  _captureMode;
    CFXEffectComposition * _composition;
    UIView * _containerView;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _currentRenderPresentationTime_renderImageQ;
    UIView * _debugControlsView;
    <CFXLiveCaptureViewControllerDelegate> * _delegate;
    bool  _isCapturingPhoto_recordingQ;
    bool  _isCapturingVideo_recordingQ;
    JFXOrientationMonitor * _orientationMonitor;
    NSObject<OS_dispatch_queue> * _recordingQ;
    NSMutableArray * _renderFrameCompletionBlocks;
    NSObject<OS_dispatch_queue> * _renderImageQ;
    JFXImageView * _renderImageView;
    NSObject<OS_dispatch_queue> * _renderQ;
    JTImage * _renderedImage_renderImageQ;
    CFXRenderer * _renderer_renderQ;
    CFXThermalPolicyManager * _thermalPolicyManager;
    <JFXAnimojiTrackingLossDelegate> * _trackingLossDelegate;
    UIView * _uncroppedRenderImagePlaceHolderView;
    bool  _useLocalCameraViewfinder;
    JFXVideoWriter * _videoWriter;
}

@property (nonatomic) UIColor *animojiBackgroundColor;
@property (nonatomic) long long captureMode;
@property (nonatomic, retain) CFXEffectComposition *composition;
@property (nonatomic, retain) UIView *containerView;
@property (nonatomic, readonly) struct { long long x1; int x2; unsigned int x3; long long x4; } currentRenderPresentationTime;
@property (nonatomic) struct { long long x1; int x2; unsigned int x3; long long x4; } currentRenderPresentationTime_renderImageQ;
@property (nonatomic) UIView *debugControlsView;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CFXLiveCaptureViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isCapturing;
@property (nonatomic) bool isCapturingPhoto_recordingQ;
@property (nonatomic) bool isCapturingVideo_recordingQ;
@property (nonatomic, readonly) bool livePlayerIsSaturated;
@property (nonatomic, readonly) UIView *localCameraViewfinderView;
@property (nonatomic, readonly) struct { double x1; double x2; } normalizedMinimumHitTestArea;
@property (nonatomic, retain) JFXOrientationMonitor *orientationMonitor;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *recordingQ;
@property (nonatomic, retain) NSMutableArray *renderFrameCompletionBlocks;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *renderImageQ;
@property (nonatomic) JFXImageView *renderImageView;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *renderQ;
@property (nonatomic, readonly) JTImage *renderedImage;
@property (nonatomic, retain) JTImage *renderedImage_renderImageQ;
@property (nonatomic, retain) CFXRenderer *renderer_renderQ;
@property (readonly) Class superclass;
@property (nonatomic, retain) CFXThermalPolicyManager *thermalPolicyManager;
@property (nonatomic) <JFXAnimojiTrackingLossDelegate> *trackingLossDelegate;
@property (nonatomic, readonly) UIView *uncroppedCameraViewfinderPlaceholderView;
@property (nonatomic, retain) UIView *uncroppedRenderImagePlaceHolderView;
@property (nonatomic) bool useLocalCameraViewfinder;
@property (nonatomic, retain) JFXVideoWriter *videoWriter;

+ (id)instantiate;

- (void).cxx_destruct;
- (void)CFX_createUncroppedCameraPlaceholderViewIfNecessary;
- (void)CFX_executeRenderCallbacksQueuedBeforeTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)CFX_installGestures;
- (void)CFX_livePreviewDoubleTapped:(id)arg1;
- (void)CFX_livePreviewPanned:(id)arg1;
- (void)CFX_livePreviewPinched:(id)arg1;
- (void)CFX_livePreviewRotated:(id)arg1;
- (void)CFX_livePreviewTapped:(id)arg1;
- (void)CFX_setAnimationEnabledForOverlays:(bool)arg1;
- (void)CFX_setupVideoWriterWithAudio:(bool)arg1 completion:(id /* block */)arg2;
- (void)CFX_tearDownVideoWriter:(id /* block */)arg1;
- (id)animojiBackgroundColor;
- (void)cancelVideoRecording;
- (long long)captureMode;
- (void)capturePhotoWithFlashMode:(long long)arg1 completion:(id /* block */)arg2;
- (id)composition;
- (id)containerView;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })currentRenderPresentationTime;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })currentRenderPresentationTime_renderImageQ;
- (id)debugControlsView;
- (id)delegate;
- (void)didReceiveMemoryWarning;
- (void)executeAfterNextFrameIsRendered:(id /* block */)arg1;
- (void)flushRenderer;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (bool)isCapturing;
- (bool)isCapturingPhoto_recordingQ;
- (bool)isCapturingVideo_recordingQ;
- (bool)livePlayerIsSaturated;
- (id)localCameraViewfinderView;
- (struct CGPoint { double x1; double x2; })locationInCaptureViewForGestureRecognizer:(id)arg1;
- (struct { double x1; double x2; })normalizedMinimumHitTestArea;
- (id)orientationMonitor;
- (void)pauseRenderingCameraFrames;
- (void)processAudioSample:(struct opaqueCMSampleBuffer { }*)arg1;
- (id)recordingQ;
- (void)removeAllEffects:(id /* block */)arg1;
- (void)removeAllEffectsOfType:(id)arg1 completion:(id /* block */)arg2;
- (id)renderFrameCompletionBlocks;
- (id)renderImageQ;
- (id)renderImageView;
- (id)renderQ;
- (void)renderVideoFrame:(id)arg1;
- (id)renderedImage;
- (id)renderedImage_renderImageQ;
- (void)renderer:(id)arg1 didPrepareToRenderFrameAtPresentationTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (void)renderer:(id)arg1 didRenderFrame:(id)arg2;
- (id)renderer_renderQ;
- (void)resumeRenderingCameraFrames;
- (void)setAnimojiBackgroundColor:(id)arg1;
- (void)setCaptureMode:(long long)arg1;
- (void)setComposition:(id)arg1;
- (void)setContainerView:(id)arg1;
- (void)setCurrentRenderPresentationTime_renderImageQ:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setDebugControlsView:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setIsCapturingPhoto_recordingQ:(bool)arg1;
- (void)setIsCapturingVideo_recordingQ:(bool)arg1;
- (void)setOrientationMonitor:(id)arg1;
- (void)setRecordingQ:(id)arg1;
- (void)setRenderFrameCompletionBlocks:(id)arg1;
- (void)setRenderImageQ:(id)arg1;
- (void)setRenderImageView:(id)arg1;
- (void)setRenderQ:(id)arg1;
- (void)setRenderedImage_renderImageQ:(id)arg1;
- (void)setRenderer_renderQ:(id)arg1;
- (void)setThermalPolicyManager:(id)arg1;
- (void)setTrackingLossDelegate:(id)arg1;
- (void)setUncroppedRenderImagePlaceHolderView:(id)arg1;
- (void)setUseLocalCameraViewfinder:(bool)arg1;
- (void)setVideoWriter:(id)arg1;
- (void)startButtonTouchUpInside:(id)arg1;
- (void)startRenderingCameraFrames;
- (void)startVideoRecordingWithFlashMode:(long long)arg1;
- (void)stopButtonTouchUpInside:(id)arg1;
- (void)stopRenderingCameraFrames;
- (void)stopRenderingCameraFrames:(id /* block */)arg1;
- (void)stopVideoRecording:(id /* block */)arg1;
- (id)thermalPolicyManager;
- (void)toggleDebugControlsView:(id)arg1;
- (id)trackingLossDelegate;
- (id)uncroppedCameraViewfinderPlaceholderView;
- (id)uncroppedRenderImagePlaceHolderView;
- (bool)useLocalCameraViewfinder;
- (id)videoWriter;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)willDropCameraFrame;

@end
