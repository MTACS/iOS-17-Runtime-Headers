
@interface CFXClip : NSObject <JFXPlayableElement, NSCopying> {
    NSMutableArray * _animojis;
    int  _duration;
    NSMutableArray * _filters;
    JFXMediaItem * _mediaItem;
    int  _mediaStartOffset;
    NSURL * _metadataURL;
    NSData * _originalAnimojiDataRepresentation;
    unsigned long long  _originalAnimojiVersionNumber;
    NSMutableArray * _overlays;
    int  _presentationTime;
    PVTransformAnimation * _transformAnimation;
    int  _transformInitialStartOffset;
    NSString * _uuid;
}

@property (nonatomic, retain) NSMutableArray *animojis;
@property (nonatomic, readonly) JFXMediaReaderCreationAVAssetTrackAttributes *arMetadataReaderAssetTrackAttributes;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) JFXMediaReaderCreationAVAssetTrackAttributes *depthDataReaderAssetTrackAttributes;
@property (readonly, copy) NSString *description;
@property (nonatomic) int duration;
@property (nonatomic, retain) NSMutableArray *filters;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isAssetLoaded;
@property (nonatomic, readonly) bool isAssetUnavailable;
@property (nonatomic, readonly) bool isStill;
@property (nonatomic, readonly) bool isVideo;
@property (nonatomic) long long mediaInterfaceOrientationForDisplay;
@property (nonatomic, retain) JFXMediaItem *mediaItem;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } mediaSize;
@property (nonatomic, readonly) int mediaStartOffset;
@property (nonatomic, readonly) long long mediaType;
@property (nonatomic, retain) NSURL *metadataURL;
@property (nonatomic, retain) NSData *originalAnimojiDataRepresentation;
@property (nonatomic) unsigned long long originalAnimojiVersionNumber;
@property (nonatomic, retain) NSMutableArray *overlays;
@property (nonatomic, readonly) long long playableAspectRatio;
@property (nonatomic, readonly) long long playableAspectRatioPreservationMode;
@property (nonatomic, readonly) int playableMediaContentMode;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } playableMediaSizeWithTransform;
@property (nonatomic, readonly) int presentationTime;
@property (nonatomic, readonly) bool shouldRenderVideoAsBlack;
@property (readonly) Class superclass;
@property (nonatomic, retain) PVTransformAnimation *transformAnimation;
@property (nonatomic) int transformInitialStartOffset;
@property (nonatomic, retain) NSString *uuid;

+ (void)cfx_createStillClipPreviewWithLocalURL:(id)arg1 maximumImageDimension:(unsigned long long)arg2 effectStack:(id)arg3 completionHandler:(id /* block */)arg4;
+ (void)cfx_createVideoClipWithLocalURL:(id)arg1 effectStack:(id)arg2 completionHandler:(id /* block */)arg3;
+ (bool)cfx_writeProxyImageToURL:(id)arg1 fromImageAtURL:(id)arg2 maximumImageDimension:(unsigned long long)arg3 outColorSpace:(id*)arg4;
+ (id)createCaptureClip;
+ (void)createClipWithLocalURL:(id)arg1 effectStack:(id)arg2 isVideo:(bool)arg3 maximumImageDimension:(unsigned long long)arg4 completionHandler:(id /* block */)arg5;
+ (id)defaultClip;

- (void).cxx_destruct;
- (void)addEffect:(id)arg1;
- (void)addEffectStack:(id)arg1;
- (id)animojis;
- (id)arMetadataReaderAssetTrackAttributes;
- (void)cfx_addEffect:(id)arg1;
- (id)cfx_clipType;
- (id)cfx_effectsOfType:(int)arg1;
- (bool)cfx_isAssetInTrash;
- (bool)cfx_isAssetMissing;
- (bool)cfx_removeAllEffectsOfType:(int)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)depthDataReaderAssetTrackAttributes;
- (id)description;
- (int)duration;
- (id)effectStack;
- (id)effectStackExcludingType:(int)arg1;
- (id)effectsOfType:(int)arg1;
- (id)filters;
- (bool)hasMetadataAsset;
- (bool)hasPlayableEffectOfType:(int)arg1;
- (unsigned long long)hash;
- (id)init;
- (id)initWithMediaItem:(id)arg1;
- (bool)isAssetLoaded;
- (bool)isAssetUnavailable;
- (bool)isEqual:(id)arg1;
- (bool)isStill;
- (bool)isVideo;
- (long long)mediaInterfaceOrientationForDisplay;
- (id)mediaItem;
- (struct CGSize { double x1; double x2; })mediaSize;
- (int)mediaStartOffset;
- (long long)mediaType;
- (id)metadataURL;
- (id)originalAnimojiDataRepresentation;
- (unsigned long long)originalAnimojiVersionNumber;
- (id)overlays;
- (long long)playableAspectRatio;
- (long long)playableAspectRatioPreservationMode;
- (id)playableEffectStack;
- (id)playableEffectStackExcludingType:(int)arg1;
- (id)playableEffectsOfType:(int)arg1;
- (int)playableMediaContentMode;
- (struct CGSize { double x1; double x2; })playableMediaSizeWithTransform;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })playableRectInOutputSize:(struct CGSize { double x1; double x2; })arg1;
- (double)playableScaleInOutputSize:(struct CGSize { double x1; double x2; })arg1;
- (int)presentationTime;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rectFromNormalizedPlayableRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inOutputSize:(struct CGSize { double x1; double x2; })arg2;
- (void)removeAllEffects;
- (bool)removeAllEffectsOfType:(int)arg1;
- (void)removeEffect:(id)arg1;
- (void)setAnimojis:(id)arg1;
- (void)setDuration:(int)arg1;
- (void)setFilters:(id)arg1;
- (void)setMediaInterfaceOrientationForDisplay:(long long)arg1;
- (void)setMediaItem:(id)arg1;
- (void)setMetadataURL:(id)arg1;
- (void)setOriginalAnimojiDataRepresentation:(id)arg1;
- (void)setOriginalAnimojiVersionNumber:(unsigned long long)arg1;
- (void)setOverlays:(id)arg1;
- (void)setPresentationTime:(int)arg1;
- (void)setTransformAnimation:(id)arg1;
- (void)setTransformInitialStartOffset:(int)arg1;
- (void)setUuid:(id)arg1;
- (bool)shouldRenderVideoAsBlack;
- (id)stringForMediaType:(long long)arg1;
- (id)transformAnimation;
- (int)transformInitialStartOffset;
- (void)updateTransformPresentationTimeRange;
- (id)uuid;

@end
