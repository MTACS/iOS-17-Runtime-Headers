
@interface JFXEffectPreviewManager : NSObject <PVLivePlayerDelegate> {
    NSValue * __defaultPreviewImageDisplayTransformValue_internal;
    NSMapTable * _assetRequestsForPreviewEffects;
    NSObject<OS_dispatch_queue> * _callbackQueue;
    NSObject<OS_dispatch_semaphore> * _concurrentStaticPreviewSemaphore;
    JFXEffectContinousPreviewOptions * _continousPreviewOptions;
    PVLivePlayer * _continousPreviewPlayer;
    struct CGSize { 
        double width; 
        double height; 
    }  _continousPreviewSize;
    bool  _continouslyPreviewing_internal;
    NSSet * _currentContinousPreviewEffects;
    JTImage * _defaultPreviewImage_internal;
    struct { 
        bool updateContinousPreviewsForEffectIds; 
        bool willBeginDownloadingPreviewAssetsForEffect; 
        bool downloadingPreviewAssetsForEffect; 
        bool didFinishDownloadingPreviewAssetsForEffect; 
    }  _delegateAvailability;
    <JFXEffectPreviewManagerDelegate> * _delegate_internal;
    NSMutableSet * _effectsPreparingForPreview;
    bool  _inDealloc;
    NSString * _name;
    NSObject * _pickerPreviewingToken;
    NSMutableSet * _preparedContinousPreviewEffects;
    JFXLRUCache * _previewCache;
    JFXEffectPreviewDiskCache * _previewDiskCache;
    NSObject<OS_dispatch_queue> * _previewQueue;
    JFXEffectsPreviewGenerator * _staticPreviewGenerator;
    NSObject<OS_dispatch_queue> * _synchronizationQueue;
}

@property (nonatomic, retain) NSValue *_defaultPreviewImageDisplayTransformValue_internal;
@property (nonatomic, retain) NSMapTable *assetRequestsForPreviewEffects;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *callbackQueue;
@property (nonatomic, readonly) NSObject<OS_dispatch_semaphore> *concurrentStaticPreviewSemaphore;
@property (nonatomic, copy) NSSet *continousPreviewEffects;
@property (nonatomic, retain) JFXEffectContinousPreviewOptions *continousPreviewOptions;
@property (nonatomic, retain) PVLivePlayer *continousPreviewPlayer;
@property (nonatomic) struct CGSize { double x1; double x2; } continousPreviewSize;
@property (getter=isContinouslyPreviewing, nonatomic, readonly) bool continouslyPreviewing;
@property (nonatomic) bool continouslyPreviewing_internal;
@property (nonatomic, retain) NSSet *currentContinousPreviewEffects;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, retain) JTImage *defaultPreviewImage_internal;
@property (nonatomic) <JFXEffectPreviewManagerDelegate> *delegate;
@property (nonatomic) <JFXEffectPreviewManagerDelegate> *delegate_internal;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSMutableSet *effectsPreparingForPreview;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSString *name;
@property (nonatomic, readonly) NSObject *pickerPreviewingToken;
@property (nonatomic, retain) NSMutableSet *preparedContinousPreviewEffects;
@property (nonatomic, readonly) JFXLRUCache *previewCache;
@property (nonatomic, readonly) JFXEffectPreviewDiskCache *previewDiskCache;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *previewQueue;
@property (nonatomic, retain) JFXEffectsPreviewGenerator *staticPreviewGenerator;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *synchronizationQueue;

+ (id)JFX_createTransparentEmptyImageForPreviewSize:(struct CGSize { double x1; double x2; })arg1;

- (void).cxx_destruct;
- (void)JFX_cancelAssetRequestForAllEffects;
- (void)JFX_configureCommonRenderingPropertiesForEffect:(id)arg1 forPreviewSize:(struct CGSize { double x1; double x2; })arg2 withPreviewOptions:(id)arg3;
- (void)JFX_delegateDidFinishDownloadingPreviewAssetsForEffect:(id)arg1 wasCancelled:(bool)arg2 error:(id)arg3;
- (void)JFX_delegateDownloadingPreviewAssetsForEffect:(id)arg1 progress:(double)arg2;
- (void)JFX_delegateUpdateContinousPreviewsForEffectIDs:(id)arg1;
- (void)JFX_delegateWillBeginDownloadingPreviewAssetsForEffect:(id)arg1;
- (void)JFX_dispatchBlockOnCallbackQueueImmediatelyWhenPossible:(id /* block */)arg1;
- (void)JFX_loadRenderingResourcesForEffect:(id)arg1 completion:(id /* block */)arg2;
- (bool)JFX_lowPriorityScheduling;
- (void)JFX_prepareEffectForContinousPreview:(id)arg1;
- (void)JFX_renderPreviewForEffect:(id)arg1 previewSize:(struct CGSize { double x1; double x2; })arg2 options:(id)arg3 completion:(id /* block */)arg4;
- (bool)JFX_rendersDefaultContinousPreviewImage;
- (void)JFX_requestPreviewAssetsForEffect:(id)arg1 withPriority:(long long)arg2 onlyThumbnailAssetWhenAvailable:(bool)arg3 completion:(id /* block */)arg4;
- (void)JFX_setContinousPreviewEffects:(id)arg1;
- (void)JFX_startPreparingPreviewsContinuouslyAtSize:(struct CGSize { double x1; double x2; })arg1 options:(id)arg2;
- (void)JFX_stopCachingPreviewsContinuously;
- (void)JFX_updateAssetRequestsPriorityAssociatedWithEffects:(id)arg1 toPriority:(long long)arg2;
- (void)JFX_updateAssetRequestsPriorityNotAssociatedWithEffects:(id)arg1 toPriority:(long long)arg2;
- (id)_defaultPreviewImageDisplayTransformValue_internal;
- (id)assetRequestsForPreviewEffects;
- (id)buildRenderRequest:(id)arg1 time:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (void)cachedPreviewForEffect:(id)arg1 completion:(id /* block */)arg2;
- (id)callbackQueue;
- (id)concurrentStaticPreviewSemaphore;
- (id)continousPreviewEffects;
- (id)continousPreviewOptions;
- (id)continousPreviewPlayer;
- (struct CGSize { double x1; double x2; })continousPreviewSize;
- (void)continousPreviewsForEffectIDs:(id)arg1 completion:(id /* block */)arg2;
- (bool)continouslyPreviewing_internal;
- (id)currentContinousPreviewEffects;
- (void)dealloc;
- (id)defaultPreviewImage;
- (id)defaultPreviewImageDisplayTransformValue;
- (id)defaultPreviewImage_internal;
- (id)delegate;
- (id)delegate_internal;
- (id)effectsPreparingForPreview;
- (id)initWithName:(id)arg1 callbackQueue:(id)arg2;
- (bool)isContinouslyPreviewing;
- (id)name;
- (id)pickerPreviewingToken;
- (void)preparePreviewForEffect:(id)arg1 atSize:(struct CGSize { double x1; double x2; })arg2 options:(id)arg3 completion:(id /* block */)arg4;
- (id)preparedContinousPreviewEffects;
- (id)previewCache;
- (id)previewDiskCache;
- (void)previewForEffect:(id)arg1 atSize:(struct CGSize { double x1; double x2; })arg2 options:(id)arg3 completion:(id /* block */)arg4;
- (id)previewQueue;
- (void)purgeCachedPreviewForEffect:(id)arg1;
- (void)purgeCachedPreviewsForAllEffects;
- (void)renderRequestComplete:(id)arg1 results:(id)arg2 completedOutOfOrder:(bool)arg3;
- (void)setAssetRequestsForPreviewEffects:(id)arg1;
- (void)setContinousPreviewEffects:(id)arg1;
- (void)setContinousPreviewOptions:(id)arg1;
- (void)setContinousPreviewPlayer:(id)arg1;
- (void)setContinousPreviewSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setContinouslyPreviewing:(bool)arg1;
- (void)setContinouslyPreviewing_internal:(bool)arg1;
- (void)setCurrentContinousPreviewEffects:(id)arg1;
- (void)setDefaultPreviewImage:(id)arg1 transformValue:(id)arg2;
- (void)setDefaultPreviewImage_internal:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDelegate_internal:(id)arg1;
- (void)setEffectsPreparingForPreview:(id)arg1;
- (void)setPreparedContinousPreviewEffects:(id)arg1;
- (void)setStaticPreviewGenerator:(id)arg1;
- (void)set_defaultPreviewImageDisplayTransformValue_internal:(id)arg1;
- (void)startPreparingPreviewsContinuouslyAtSize:(struct CGSize { double x1; double x2; })arg1 options:(id)arg2;
- (id)staticPreviewGenerator;
- (void)stopCachingPreviewsContinuously;
- (id)synchronizationQueue;

@end
