
@interface TSSinglePlanTransferViewController : TSOBTableWelcomeController <SSSpinnerProtocol, TSSetupFlowItem, UINavigationControllerDelegate, UITableViewDataSource> {
    bool  _animating;
    long long  _backToSelfOption;
    NSArray * _cachedButtons;
    bool  _confirmCellularPlanTransfer;
    SSOBBoldTrayButton * _continueButton;
    CTDisplayPlan * _crossPlatformTransferPlan;
    bool  _crossPlatformTransferPlanSelected;
    <TSSIMSetupFlowDelegate> * _delegate;
    NSString * _deviceName;
    bool  _followDirections;
    bool  _inBuddy;
    bool  _installingTransferPlan;
    bool  _isOtherButtonTapped;
    bool  _isStandaloneProximityFlow;
    CTDisplayPlan * _pendingInstallPlan;
    NSString * _phoneNumber;
    CTRemotePlan * _planItem;
    unsigned long long  _planType;
    bool  _requireDelayBluetoothConnection;
    bool  _showOtherOptions;
    bool  _showSIMSetup;
    bool  _speedBumper;
    SSSpinner * _spinner;
    UIView * _spinnerContainer;
    NSLayoutConstraint * _tableHeightAnchor;
    NSString * _transferBackPhoneNumber;
    NSDictionary * _transferPlan;
}

@property bool animating;
@property long long backToSelfOption;
@property (retain) NSArray *cachedButtons;
@property bool crossPlatformTransferPlanSelected;
@property (readonly, copy) NSString *debugDescription;
@property <TSSIMSetupFlowDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property bool installingTransferPlan;
@property bool isOtherButtonTapped;
@property bool isStandaloneProximityFlow;
@property bool requireDelayBluetoothConnection;
@property bool showSIMSetup;
@property (retain) SSSpinner *spinner;
@property (retain) UIView *spinnerContainer;
@property (readonly) Class superclass;

+ (id)getTitleAndDetailsForPlanType:(unsigned long long)arg1 transferCapability:(unsigned long long)arg2;

- (void).cxx_destruct;
- (void)_cancelButtonTapped;
- (void)_cancelTransferringPlan;
- (void)_continueButtonTapped;
- (double)_heightAnchorConstant;
- (void)_maybeDisplayConsent:(bool)arg1 phoneNumber:(id)arg2 completion:(id /* block */)arg3;
- (void)_maybeLaunchURLForCarrierDirectAuth:(id)arg1;
- (void)_otherButtonTapped;
- (void)_showAlert:(id)arg1;
- (void)_skipButtonTapped;
- (void)_startLocalPlanConversion;
- (void)_startPendingInstall:(id)arg1;
- (void)_startPlanTransfer:(id)arg1;
- (void)_transferConsentOnSource;
- (bool)animating;
- (long long)backOption;
- (long long)backToSelfOption;
- (id)cachedButtons;
- (bool)crossPlatformTransferPlanSelected;
- (bool)customizeSpinner;
- (id)delegate;
- (id)getLocalizedStringIf:(id)arg1 then:(id)arg2 otherwise:(id)arg3;
- (id)getRemoteDeviceDisplayName:(id)arg1;
- (id)initWithCrossPlatformTransferPlan:(id)arg1;
- (id)initWithLocalPhysical:(id)arg1 carrierName:(id)arg2;
- (id)initWithPendingInstallPlan:(id)arg1;
- (id)initWithTransferPlan:(id)arg1 isPhysical:(bool)arg2 isIneligible:(bool)arg3 inBuddy:(bool)arg4 confirmCellularPlanTransfer:(bool)arg5 showOtherOptions:(bool)arg6;
- (id)initWithTransferPlan:(id)arg1 isPhysical:(bool)arg2 isIneligible:(bool)arg3 inBuddy:(bool)arg4 confirmCellularPlanTransfer:(bool)arg5 showOtherOptions:(bool)arg6 isStandaloneProximityFlow:(bool)arg7 transferBackPhoneNumber:(id)arg8;
- (bool)installingTransferPlan;
- (bool)isOtherButtonTapped;
- (bool)isStandaloneProximityFlow;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (bool)requireDelayBluetoothConnection;
- (void)setAnimating:(bool)arg1;
- (void)setBackToSelfOption:(long long)arg1;
- (void)setCachedButtons:(id)arg1;
- (void)setCrossPlatformTransferPlanSelected:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setInstallingTransferPlan:(bool)arg1;
- (void)setIsOtherButtonTapped:(bool)arg1;
- (void)setIsStandaloneProximityFlow:(bool)arg1;
- (void)setRequireDelayBluetoothConnection:(bool)arg1;
- (void)setShowSIMSetup:(bool)arg1;
- (void)setSpinner:(id)arg1;
- (void)setSpinnerContainer:(id)arg1;
- (bool)showSIMSetup;
- (id)spinner;
- (id)spinnerContainer;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLoad;

@end
