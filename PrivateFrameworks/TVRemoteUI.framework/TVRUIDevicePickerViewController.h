
@interface TVRUIDevicePickerViewController : UIViewController <TVRUIRemoteViewProvider, TVRUITipSourceViewProvider, UITableViewDataSource, UITableViewDelegate> {
    double  _baseHeight;
    <_TVRUIEventDelegate> * _buttonEventDelegate;
    NSArray * _buttons;
    NSIndexPath * _connectedDeviceIndex;
    <TVRUIDevicePickerDelegate> * _delegate;
    <TVRUIDevice> * _device;
    bool  _devicePickerShowing;
    NSString * _deviceTitle;
    TVRUITitleView * _deviceTitleView;
    NSArray * _devices;
    bool  _enabled;
    TVREventHaptic * _eventHaptic;
    TVRUICubicSpringAnimator * _hideAnimator;
    TVRUIButton * _muteButton;
    UIView * _nearbySectionTitleView;
    TVRUIButton * _powerButton;
    TVRUICubicSpringAnimator * _showAnimator;
    <TVRUIStyleProvider> * _styleProvider;
    NSArray * _suggestedDevices;
    UITableView * _tableView;
    UIView * _tableViewBottomSeperator;
    UIView * _tableViewTopSeperator;
    UIView * _tableViewWrapper;
    UIButton * _titleButton;
    UIView * _titleView;
}

@property (nonatomic) double baseHeight;
@property (nonatomic) <_TVRUIEventDelegate> *buttonEventDelegate;
@property (nonatomic, retain) NSArray *buttons;
@property (nonatomic, readonly) bool canPresentTip;
@property (nonatomic, copy) NSIndexPath *connectedDeviceIndex;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <TVRUIDevicePickerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) <TVRUIDevice> *device;
@property (getter=isDevicePickerShowing, nonatomic) bool devicePickerShowing;
@property (nonatomic, retain) NSString *deviceTitle;
@property (nonatomic, retain) TVRUITitleView *deviceTitleView;
@property (nonatomic, retain) NSArray *devices;
@property (nonatomic) bool enabled;
@property (nonatomic, retain) TVREventHaptic *eventHaptic;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) TVRUICubicSpringAnimator *hideAnimator;
@property (nonatomic, retain) TVRUIButton *muteButton;
@property (nonatomic, retain) UIView *nearbySectionTitleView;
@property (nonatomic, retain) TVRUIButton *powerButton;
@property (nonatomic, retain) TVRUICubicSpringAnimator *showAnimator;
@property (nonatomic, retain) <TVRUIStyleProvider> *styleProvider;
@property (nonatomic, retain) NSArray *suggestedDevices;
@property (readonly) Class superclass;
@property (nonatomic, retain) UITableView *tableView;
@property (nonatomic, retain) UIView *tableViewBottomSeperator;
@property (nonatomic, retain) UIView *tableViewTopSeperator;
@property (nonatomic, retain) UIView *tableViewWrapper;
@property (nonatomic, readonly) bool tipSourceSupportsSiri;
@property (nonatomic, readonly) UIView *tipSourceView;
@property (nonatomic, retain) UIButton *titleButton;
@property (nonatomic, retain) UIView *titleView;

- (void).cxx_destruct;
- (bool)_accessibilityFontSizesEnabled;
- (void)_buttonPressed:(id)arg1;
- (void)_buttonReleased:(id)arg1;
- (double)_calculatedContentHeight;
- (bool)_canShowWhileLocked;
- (double)_contentHeightForPreferredContentSizeCategory;
- (double)_defaultCalculatedContentHeight;
- (void)_device:(id)arg1 updatedFindMySupported:(bool)arg2;
- (double)_expandedContentHeight;
- (id)_lastVisibleCellSupportingFindMy;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_preferredTableViewFrameWhenExpanded:(bool)arg1;
- (void)_setupAnimators;
- (void)_setupButtons;
- (void)_setupDeviceList;
- (void)_setupDeviceTitleView;
- (void)_setupTitleButtonIfNeeded;
- (void)_sortAndReloadDevices;
- (void)_toggleState;
- (void)_updateButtonsShapes;
- (void)_updateDevice;
- (void)_updateDevicesWithSuggestionsAndReload;
- (void)_updateTableFrame:(bool)arg1;
- (void)_updateTitleViewForDevice:(id)arg1;
- (void)_updateViewState;
- (double)baseHeight;
- (id)buttonEventDelegate;
- (id)buttons;
- (bool)canPresentTip;
- (void)collapseDeviceList;
- (id)connectedDeviceIndex;
- (id)delegate;
- (id)device;
- (id)deviceTitle;
- (id)deviceTitleView;
- (id)devices;
- (void)didChangeToExpanded:(bool)arg1;
- (void)didTapWrapperView:(id)arg1;
- (bool)enabled;
- (id)eventHaptic;
- (void)expandDeviceList;
- (id)hideAnimator;
- (bool)isDevicePickerShowing;
- (void)loadView;
- (id)muteButton;
- (id)nearbySectionTitleView;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)powerButton;
- (void)resetSelectedDevice;
- (void)setBaseHeight:(double)arg1;
- (void)setButtonEventDelegate:(id)arg1;
- (void)setButtons:(id)arg1;
- (void)setConnectedDeviceIndex:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDevice:(id)arg1;
- (void)setDevicePickerShowing:(bool)arg1;
- (void)setDeviceTitle:(id)arg1;
- (void)setDeviceTitleView:(id)arg1;
- (void)setDevices:(id)arg1;
- (void)setEnabled:(bool)arg1;
- (void)setEventHaptic:(id)arg1;
- (void)setHideAnimator:(id)arg1;
- (void)setMuteButton:(id)arg1;
- (void)setNearbySectionTitleView:(id)arg1;
- (void)setPowerButton:(id)arg1;
- (void)setShowAnimator:(id)arg1;
- (void)setStyleProvider:(id)arg1;
- (void)setSuggestedDevices:(id)arg1;
- (void)setTableView:(id)arg1;
- (void)setTableViewBottomSeperator:(id)arg1;
- (void)setTableViewTopSeperator:(id)arg1;
- (void)setTableViewWrapper:(id)arg1;
- (void)setTitleButton:(id)arg1;
- (void)setTitleView:(id)arg1;
- (void)setVolumeControlAvailable:(bool)arg1;
- (id)showAnimator;
- (id)styleProvider;
- (id)suggestedDevices;
- (id)tableView;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 estimatedHeightForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (id)tableViewBottomSeperator;
- (id)tableViewTopSeperator;
- (id)tableViewWrapper;
- (bool)tipSourceSupportsSiri;
- (id)tipSourceView;
- (id)titleButton;
- (id)titleView;
- (void)viewDidLoad;
- (void)viewWillLayoutSubviews;

@end
