
@interface TVRUIRemoteViewController : UIViewController <SBSHardwareButtonEventConsuming, TVRAlertControllerDelegate, TVRUIContentPresenter, TVRUIDeviceDelegate, TVRUIDevicePickerDelegate, TVRUIDeviceSearchDelegate, TVRUITouchpadDelegate, _TVRUIEventDelegate> {
    <TVRUIDevice> * _activeDevice;
    NSString * _activeDeviceIdentifier;
    <TVRUIDevice> * _authenticatingDevice;
    TVRAlertController * _authenticationAlertController;
    UIView * _backgroundView;
    UIView * _blackGradientView;
    bool  _configured;
    TVRUIControlPanelViewController * _controlPanelViewController;
    <TVRUIRemoteViewControllerDelegate> * _delegate;
    <TVRUIDeviceConnectionStatusDelegate> * _deviceConnectionStatusDelegate;
    long long  _deviceIdentifierType;
    TVRUIDevicePickerViewController * _devicePickerViewController;
    <TVRUIDeviceQuery> * _deviceQuery;
    id /* block */  _deviceQueryThresholdBlock;
    bool  _deviceQueryThresholdReached;
    long long  _deviceType;
    bool  _editingSessionActive;
    <TVRUIFindingSessionDelegate> * _findingSessionDelegate;
    bool  _isFindingSessionActive;
    bool  _isInReducedBacklightMode;
    bool  _isInSecureWindow;
    TVRAlertController * _keyboardController;
    TVRKeyboardHaptic * _keyboardHaptic;
    long long  _launchContext;
    NSString * _launchContextDesc;
    TVRUIMediaControlsViewController * _mediaControlsViewController;
    TVRMessageView * _messageView;
    TVRUINetworkObserver * _networkObserver;
    bool  _networkReachable;
    NSString * _preferredDeviceIdentifier;
    TVRCSessionData * _sessionData;
    SFClient * _sharingClient;
    bool  _shouldRestoreVolumeControlSupport;
    bool  _shouldStartFindingSession;
    TVRUISiriManager * _siriManager;
    bool  _siriSessionActive;
    <TVRUIStyleProvider> * _styleProvider;
    bool  _supportsSiri;
    bool  _supportsVolumeControl;
    CUSystemMonitor * _systemMonitor;
    UIButton * _tapToRadarButton;
    UIViewController<TVRUITipSourceViewProvider> * _tipSourceViewProvider;
    TVRUITopButtonPanelViewController * _topButtonPanelViewController;
    TVRUITouchpadViewController * _touchpadViewController;
    <UITraitChangeRegistration> * _traitChangeRegistration;
    NSArray * _viewProviders;
    <BSInvalidatable> * _volumeDecreaseSBSInvalidator;
    <BSInvalidatable> * _volumeIncreaseSBSInvalidator;
}

@property (nonatomic, retain) <TVRUIDevice> *activeDevice;
@property (nonatomic, copy) NSString *activeDeviceIdentifier;
@property (nonatomic, retain) <TVRUIDevice> *authenticatingDevice;
@property (nonatomic, retain) TVRAlertController *authenticationAlertController;
@property (nonatomic) double backgroundCornerRadius;
@property (nonatomic, retain) UIView *backgroundView;
@property (nonatomic, retain) UIView *blackGradientView;
@property (getter=isConfigured, nonatomic) bool configured;
@property (nonatomic, retain) TVRUIControlPanelViewController *controlPanelViewController;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <TVRUIRemoteViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) <TVRUIDeviceConnectionStatusDelegate> *deviceConnectionStatusDelegate;
@property (nonatomic) long long deviceIdentifierType;
@property (nonatomic, retain) TVRUIDevicePickerViewController *devicePickerViewController;
@property (nonatomic, retain) <TVRUIDeviceQuery> *deviceQuery;
@property (nonatomic, copy) id /* block */ deviceQueryThresholdBlock;
@property (nonatomic) bool deviceQueryThresholdReached;
@property (nonatomic) long long deviceType;
@property (getter=isEditingSessionActive, nonatomic) bool editingSessionActive;
@property (nonatomic) <TVRUIFindingSessionDelegate> *findingSessionDelegate;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isFindingSessionActive;
@property (nonatomic) bool isInReducedBacklightMode;
@property (nonatomic) bool isInSecureWindow;
@property (nonatomic, retain) TVRAlertController *keyboardController;
@property (nonatomic, retain) TVRKeyboardHaptic *keyboardHaptic;
@property (nonatomic) long long launchContext;
@property (nonatomic, copy) NSString *launchContextDesc;
@property (nonatomic, retain) TVRUIMediaControlsViewController *mediaControlsViewController;
@property (nonatomic, retain) TVRMessageView *messageView;
@property (nonatomic, retain) TVRUINetworkObserver *networkObserver;
@property (getter=isNetworkReachable, nonatomic) bool networkReachable;
@property (nonatomic, copy) NSString *preferredDeviceIdentifier;
@property (nonatomic, retain) TVRCSessionData *sessionData;
@property (nonatomic, retain) SFClient *sharingClient;
@property (nonatomic, readonly) bool shouldDisconnectAndStopConnections;
@property (nonatomic) bool shouldRestoreVolumeControlSupport;
@property (nonatomic) bool shouldStartFindingSession;
@property (nonatomic, retain) TVRUISiriManager *siriManager;
@property (getter=isSiriSessionActive, nonatomic) bool siriSessionActive;
@property (nonatomic, retain) <TVRUIStyleProvider> *styleProvider;
@property (readonly) Class superclass;
@property (nonatomic) bool supportsSiri;
@property (nonatomic) bool supportsVolumeControl;
@property (nonatomic, retain) CUSystemMonitor *systemMonitor;
@property (nonatomic, retain) UIButton *tapToRadarButton;
@property (nonatomic, readonly) UIViewController<TVRUITipSourceViewProvider> *tipSourceViewProvider;
@property (nonatomic, retain) TVRUITopButtonPanelViewController *topButtonPanelViewController;
@property (nonatomic, retain) TVRUITouchpadViewController *touchpadViewController;
@property (nonatomic, retain) <UITraitChangeRegistration> *traitChangeRegistration;
@property (nonatomic, retain) NSArray *viewProviders;
@property (nonatomic, retain) <BSInvalidatable> *volumeDecreaseSBSInvalidator;
@property (nonatomic, retain) <BSInvalidatable> *volumeIncreaseSBSInvalidator;

- (void).cxx_destruct;
- (void)_activate;
- (bool)_canShowWhileLocked;
- (void)_cancelHideConnectingAndShowDevicePicker;
- (void)_cancelPairing;
- (void)_cancelShowConnectingSpinner;
- (void)_connectToDevice:(id)arg1 connectionContext:(long long)arg2;
- (void)_connectToMostRelevantDevice;
- (void)_connectToPreferredDeviceFromDeviceList:(id)arg1;
- (long long)_connectionContextFromLaunchContext:(long long)arg1;
- (void)_createBlackGradientView;
- (void)_deactivate;
- (void)_disableSearch;
- (void)_disconnect;
- (void)_disconnectSystemInitiated;
- (void)_disconnectUserInitiated;
- (void)_enableGuideButtons:(bool)arg1 animated:(bool)arg2;
- (void)_enableSearch;
- (void)_enableSkipControls:(bool)arg1 animated:(bool)arg2;
- (void)_expandDeviceList;
- (void)_forceShowMediaControls;
- (void)_hideConnectingAndShowDevicePicker;
- (void)_hideMessageContent;
- (void)_initSessionStatistics;
- (void)_installTapToRadarButton;
- (void)_layoutTouchpadExpanded:(bool)arg1;
- (void)_logSessionStatistics;
- (void)_performSiriEffectsWithButtonEvent:(id)arg1;
- (void)_presentAlertWithTitle:(id)arg1 message:(id)arg2;
- (void)_presentKeyboardWithAttributes:(id)arg1 initialText:(id)arg2;
- (void)_presentLegacyPairingAlertWithCode:(id)arg1;
- (void)_presentPairingAlert;
- (void)_presentTextPasswordAlert;
- (void)_resetActiveDevice;
- (void)_selectDevice:(id)arg1 withConnectionContext:(long long)arg2;
- (void)_setupChildViewControllers;
- (void)_setupDevicePickerController;
- (void)_setupNetworkObserverIfNeeded;
- (bool)_shouldAllowKeyboardToBePresented;
- (void)_showBluetoothDisabledAlertWithCompletion:(id /* block */)arg1;
- (void)_showConnectingSpinner;
- (void)_showFindingAlert;
- (void)_showSearchingSpinnerIfNeeded;
- (void)_startDeviceQueryThresholdTimer;
- (void)_startFindingSessionForDevice:(id)arg1;
- (void)_stopDeviceQueryThresholdTimer;
- (void)_stopFindingSessionForDevice:(id)arg1;
- (id)_stringForConnectionContext:(long long)arg1;
- (id)_stringForDeviceDeviceIdentifierType:(long long)arg1;
- (id)_stringForLaunchContextType:(long long)arg1;
- (void)_tapToRadar;
- (void)_toggleControlAvailability;
- (double)_topButtonPanelHeight;
- (void)_turnOnBluetoothIfNeededWithCompletionBlock:(id /* block */)arg1;
- (void)_updateControlsAppearance;
- (void)_updateSecureWindowState;
- (id)activeDevice;
- (id)activeDeviceIdentifier;
- (void)alertController:(id)arg1 enteredText:(id)arg2;
- (void)alertController:(id)arg1 generatedTextInputPayload:(id)arg2;
- (void)alertControllerCancelled:(id)arg1;
- (void)alertControllerHitKeyboardReturnKey:(id)arg1;
- (void)alertControllerPressedDictationButton:(id)arg1;
- (void)alertControllerReleasedDictationButton:(id)arg1;
- (id)animatorForDismissalAsAlert;
- (id)animatorForPresentationAsAlert;
- (id)authenticatingDevice;
- (id)authenticationAlertController;
- (double)backgroundCornerRadius;
- (id)backgroundView;
- (void)backlightLuminanceDidChange;
- (id)blackGradientView;
- (void)bluetoothAvailabilityDidUpdate:(bool)arg1;
- (void)clearMessageContent;
- (void)configureWithContext:(id)arg1;
- (void)configureWithDeviceIdentifier:(id)arg1 identifierType:(long long)arg2 deviceType:(long long)arg3 launchContext:(long long)arg4;
- (void)configureWithDeviceIdentifier:(id)arg1 type:(long long)arg2 showPicker:(bool)arg3;
- (void)connectionServiceDidInvalidate:(id)arg1;
- (void)consumeSinglePressDownForButtonKind:(long long)arg1;
- (id)controlPanelViewController;
- (void)dealloc;
- (id)delegate;
- (void)device:(id)arg1 beganTextEditingWithAttributes:(id)arg2 initialText:(id)arg3;
- (void)device:(id)arg1 didEncounterAuthenticationThrottle:(long long)arg2;
- (void)device:(id)arg1 didUpdateAttributes:(id)arg2;
- (void)device:(id)arg1 didUpdateNowPlayingInfo:(id)arg2;
- (void)device:(id)arg1 didUpdateSiriRemoteFindingSessionState:(long long)arg2;
- (void)device:(id)arg1 didUpdateText:(id)arg2;
- (void)device:(id)arg1 endedTextEditingWithAttributes:(id)arg2 endingText:(id)arg3;
- (void)device:(id)arg1 hasCaptionsEnabled:(bool)arg2;
- (void)device:(id)arg1 hasGuideButtonEnabled:(bool)arg2;
- (void)device:(id)arg1 hidesMediaControls:(id)arg2;
- (void)device:(id)arg1 needsMediaControls:(id)arg2;
- (void)device:(id)arg1 supportsFindMyRemote:(bool)arg2;
- (void)device:(id)arg1 supportsSiri:(bool)arg2 volumeControl:(bool)arg3;
- (void)device:(id)arg1 supportsVolumeControl:(bool)arg2;
- (void)deviceBeganConnecting:(id)arg1;
- (id)deviceConnectionStatusDelegate;
- (void)deviceDidConnect:(id)arg1;
- (void)deviceDidDisconnect:(id)arg1 reason:(long long)arg2 error:(id)arg3;
- (void)deviceDidEncounterAuthenticationChallenge:(id)arg1 passwordType:(unsigned long long)arg2 passcode:(id)arg3;
- (long long)deviceIdentifierType;
- (void)deviceListUpdated:(id)arg1;
- (void)devicePicked:(id)arg1;
- (id)devicePickerViewController;
- (void)devicePickerWillChangeState:(bool)arg1 animated:(bool)arg2;
- (id)deviceQuery;
- (id /* block */)deviceQueryThresholdBlock;
- (bool)deviceQueryThresholdReached;
- (long long)deviceType;
- (void)dismissPresentedContentAnimated:(bool)arg1 completion:(id /* block */)arg2;
- (void)fetchPreferredDeviceIdentifier;
- (void)findButtonTappedForDevice:(id)arg1;
- (id)findingSessionDelegate;
- (void)findingSessionDidEnd;
- (void)findingSessionDidStart;
- (void)generatedButtonEvent:(id)arg1;
- (void)generatedTouchEvent:(id)arg1;
- (bool)hasPresentedContent;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2 forTouchpadView:(id)arg3;
- (id)init;
- (bool)isConfigured;
- (bool)isEditingSessionActive;
- (bool)isFindingSessionActive;
- (bool)isInReducedBacklightMode;
- (bool)isInSecureWindow;
- (bool)isNetworkReachable;
- (bool)isSiriSessionActive;
- (id)keyboardController;
- (id)keyboardHaptic;
- (void)keyboardRequested;
- (long long)launchContext;
- (id)launchContextDesc;
- (id)mediaControlsViewController;
- (id)messageView;
- (id)networkObserver;
- (void)networkReachabilityDidUpdate:(bool)arg1;
- (struct CGSize { double x1; double x2; })preferredContentSize;
- (id)preferredDeviceIdentifier;
- (void)sceneDidActivate:(id)arg1;
- (void)sceneDidEnterBackground:(id)arg1;
- (void)sceneWillDeactivate:(id)arg1;
- (id)sessionData;
- (void)setActiveDevice:(id)arg1;
- (void)setActiveDeviceIdentifier:(id)arg1;
- (void)setAuthenticatingDevice:(id)arg1;
- (void)setAuthenticationAlertController:(id)arg1;
- (void)setBackgroundCornerRadius:(double)arg1;
- (void)setBackgroundView:(id)arg1;
- (void)setBlackGradientView:(id)arg1;
- (void)setConfigured:(bool)arg1;
- (void)setControlPanelViewController:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDeviceConnectionStatusDelegate:(id)arg1;
- (void)setDeviceIdentifierType:(long long)arg1;
- (void)setDevicePickerViewController:(id)arg1;
- (void)setDeviceQuery:(id)arg1;
- (void)setDeviceQueryThresholdBlock:(id /* block */)arg1;
- (void)setDeviceQueryThresholdReached:(bool)arg1;
- (void)setDeviceType:(long long)arg1;
- (void)setEditingSessionActive:(bool)arg1;
- (void)setFindingSessionDelegate:(id)arg1;
- (void)setIsFindingSessionActive:(bool)arg1;
- (void)setIsInReducedBacklightMode:(bool)arg1;
- (void)setIsInSecureWindow:(bool)arg1;
- (void)setKeyboardController:(id)arg1;
- (void)setKeyboardHaptic:(id)arg1;
- (void)setLaunchContext:(long long)arg1;
- (void)setLaunchContextDesc:(id)arg1;
- (void)setMediaControlsViewController:(id)arg1;
- (void)setMessageView:(id)arg1;
- (void)setNetworkObserver:(id)arg1;
- (void)setNetworkReachable:(bool)arg1;
- (void)setPreferredDeviceIdentifier:(id)arg1;
- (void)setSessionData:(id)arg1;
- (void)setSharingClient:(id)arg1;
- (void)setShouldRestoreVolumeControlSupport:(bool)arg1;
- (void)setShouldStartFindingSession:(bool)arg1;
- (void)setSiriManager:(id)arg1;
- (void)setSiriSessionActive:(bool)arg1;
- (void)setStyleProvider:(id)arg1;
- (void)setSupportsSiri:(bool)arg1;
- (void)setSupportsVolumeControl:(bool)arg1;
- (void)setSystemMonitor:(id)arg1;
- (void)setTapToRadarButton:(id)arg1;
- (void)setTopButtonPanelViewController:(id)arg1;
- (void)setTouchpadViewController:(id)arg1;
- (void)setTraitChangeRegistration:(id)arg1;
- (void)setViewProviders:(id)arg1;
- (void)setVolumeDecreaseSBSInvalidator:(id)arg1;
- (void)setVolumeIncreaseSBSInvalidator:(id)arg1;
- (id)sharingClient;
- (bool)shouldDisconnectAndStopConnections;
- (bool)shouldRestoreVolumeControlSupport;
- (bool)shouldStartFindingSession;
- (void)showGenericUnableToConnectMessage;
- (void)showLoadingSpinner;
- (void)showMessageWithError:(id)arg1 andDevice:(id)arg2;
- (void)showMessageWithTitle:(id)arg1 message:(id)arg2;
- (void)showMessageWithTitle:(id)arg1 message:(id)arg2 titleFont:(id)arg3;
- (void)showNoAssociatedNetworkMessage;
- (void)showNoWIFIConnectionMessage;
- (void)showPairingMessageWithCode:(id)arg1;
- (void)showSearchingSpinner;
- (void)showThrottleConnectMessage;
- (id)siriManager;
- (void)startConnections;
- (void)stopConnections;
- (id)styleProvider;
- (void)suggestedDevices:(id)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (bool)supportsSiri;
- (bool)supportsVolumeControl;
- (id)systemMonitor;
- (id)tapToRadarButton;
- (id)tipSourceViewProvider;
- (id)topButtonPanelViewController;
- (id)touchpadViewController;
- (id)traitChangeRegistration;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidLoad;
- (id)viewProviders;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillLayoutSubviews;
- (id)volumeDecreaseSBSInvalidator;
- (void)volumeDownEventGenerated;
- (id)volumeIncreaseSBSInvalidator;
- (void)volumeUpEventGenerated;
- (void)willShowDirectionalControls;

@end
