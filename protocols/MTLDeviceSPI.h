
@protocol MTLDeviceSPI <MTLDevice>

@required

- (MTLGPUBVHBuilder *)GPUBVHBuilder;
- (<MTLDevice> *)_deviceWrapper;
- (void)_setDeviceWrapper:(id <MTLDeviceSPI>)arg1;
- (unsigned int)acceleratorPort;
- (void)allowLibrariesFromOtherPlatforms;
- (bool)areGPUAssertionsEnabled;
- (unsigned long long)bufferRobustnessSupport;
- (unsigned long long)commandBufferErrorOptions;
- (void)compilerPropagatesThreadPriority:(bool)arg1;
- (bool)copyShaderCacheToPath:(NSString *)arg1;
- (long long)currentPerformanceState;
- (unsigned long long)dedicatedMemorySize;
- (long long)defaultTextureWriteRoundingMode;
- (void)deserializeInstanceAccelerationStructure:(id <MTLAccelerationStructure>)arg1 fromBytes:(const void*)arg2 primitiveAccelerationStructures:(NSArray *)arg3 withDescriptor:(MTLAccelerationStructureDescriptor *)arg4;
- (<MTLAccelerationStructure> *)deserializeInstanceAccelerationStructureFromBytes:(void*)arg1 primitiveAccelerationStructures:(NSArray *)arg2 withDescriptor:(MTLAccelerationStructureDescriptor *)arg3;
- (void)deserializePrimitiveAccelerationStructure:(id <MTLAccelerationStructure>)arg1 fromBytes:(const void*)arg2 withDescriptor:(MTLAccelerationStructureDescriptor *)arg3;
- (<MTLAccelerationStructure> *)deserializePrimitiveAccelerationStructureFromBytes:(void*)arg1 withDescriptor:(MTLAccelerationStructureDescriptor *)arg2;
- (unsigned long long)deviceCreationFlags;
- (unsigned long long)deviceLinearReadOnlyTextureAlignmentBytes;
- (unsigned long long)deviceLinearTextureAlignmentBytes;
- (bool)deviceOrFeatureProfileSupportsFeatureSet:(unsigned long long)arg1;
- (bool)deviceSupportsFeatureSet:(unsigned long long)arg1;
- (unsigned long long)doubleFPConfig;
- (NSString *)familyName;
- (unsigned long long)featureProfile;
- (struct MTLCompilerConnectionManager { }*)getCompilerConnectionManager:(int)arg1;
- (MTLArchitecture *)getMostCompatibleArchitecture:(NSArray *)arg1;
- (unsigned long long)halfFPConfig;
- (struct IndirectArgumentBufferCapabilities { unsigned int x1 : 1; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 29; })indirectArgumentBufferCapabilities;
- (unsigned long long)iosurfaceReadOnlyTextureAlignmentBytes;
- (unsigned long long)iosurfaceTextureAlignmentBytes;
- (bool)isAnisoSampleFixSupported;
- (bool)isBCTextureCompressionSupported;
- (bool)isCompatibleWithAccelerationStructure:(struct { unsigned int x1; unsigned int x2; })arg1;
- (bool)isFixedLinePointFillDepthGradientSupported;
- (bool)isFloat32FilteringSupported;
- (bool)isLargeMRTSupported;
- (bool)isMsaa32bSupported;
- (bool)isPlacementHeapSupported;
- (bool)isRTZRoundingSupported;
- (bool)isVendorSliceCompatibleWithDeploymentTarget:(unsigned int)arg1 platform:(unsigned int)arg2 sdkVersion:(unsigned int)arg3 compilerPluginVersion:(unsigned int)arg4;
- (struct { unsigned int x1; unsigned int x2; })libraryCacheStats;
- (const struct { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15; unsigned int x16; unsigned int x17; unsigned int x18; unsigned int x19; unsigned int x20; unsigned int x21; unsigned int x22; unsigned int x23; unsigned int x24; unsigned int x25; unsigned int x26; float x27; float x28; unsigned int x29; unsigned int x30; unsigned int x31; unsigned int x32; unsigned int x33; unsigned int x34; unsigned int x35; unsigned int x36; unsigned int x37; unsigned int x38; unsigned int x39; unsigned int x40; unsigned int x41; unsigned int x42; unsigned int x43; unsigned int x44; unsigned int x45; unsigned int x46; unsigned int x47; unsigned int x48; unsigned int x49; unsigned int x50; unsigned int x51; unsigned int x52; unsigned int x53; unsigned int x54; unsigned int x55; unsigned int x56; unsigned int x57; unsigned int x58; unsigned int x59; }*)limits;
- (unsigned long long)linearTextureAlignmentBytes;
- (unsigned long long)linearTextureArrayAlignmentBytes;
- (unsigned long long)linearTextureArrayAlignmentSlice;
- (NSArray *)loadDynamicLibrariesForComputeDescriptor:(MTLComputePipelineDescriptor *)arg1 error:(id*)arg2;
- (NSArray *)loadDynamicLibrariesForComputeDescriptor:(MTLComputePipelineDescriptor *)arg1 options:(unsigned long long)arg2 error:(id*)arg3;
- (NSArray *)loadDynamicLibrariesForFunction:(MTLFunction *)arg1 insertLibraries:(NSArray *)arg2 error:(id*)arg3;
- (NSArray *)loadDynamicLibrariesForFunction:(MTLFunction *)arg1 insertLibraries:(NSArray *)arg2 options:(unsigned long long)arg3 error:(id*)arg4;
- (unsigned long long)maxAccelerationStructureLevels;
- (unsigned long long)maxAccelerationStructureTraversalDepth;
- (unsigned long long)maxColorAttachments;
- (unsigned long long)maxComputeAttributes;
- (unsigned long long)maxComputeBuffers;
- (unsigned long long)maxComputeInlineDataSize;
- (unsigned long long)maxComputeLocalMemorySizes;
- (unsigned long long)maxComputeSamplers;
- (unsigned long long)maxComputeTextures;
- (unsigned long long)maxComputeThreadgroupMemory;
- (unsigned long long)maxComputeThreadgroupMemoryAlignmentBytes;
- (unsigned long long)maxConstantBufferArguments;
- (unsigned long long)maxCustomSamplePositions;
- (unsigned long long)maxFenceInstances;
- (unsigned long long)maxFragmentBuffers;
- (unsigned long long)maxFragmentInlineDataSize;
- (unsigned long long)maxFragmentSamplers;
- (unsigned long long)maxFragmentTextures;
- (unsigned long long)maxFramebufferStorageBits;
- (unsigned long long)maxFunctionConstantIndices;
- (unsigned long long)maxIOCommandsInFlight;
- (unsigned long long)maxIndirectBuffers;
- (unsigned long long)maxIndirectSamplers;
- (unsigned long long)maxIndirectSamplersPerDevice;
- (unsigned long long)maxIndirectTextures;
- (unsigned long long)maxInterpolants;
- (unsigned long long)maxInterpolatedComponents;
- (float)maxLineWidth;
- (float)maxPointSize;
- (unsigned long long)maxPredicatedNestingDepth;
- (unsigned long long)maxRasterizationRateLayerCount;
- (unsigned long long)maxTessellationFactor;
- (unsigned long long)maxTextureBufferWidth;
- (unsigned long long)maxTextureDepth3D;
- (unsigned long long)maxTextureDimensionCube;
- (unsigned long long)maxTextureHeight2D;
- (unsigned long long)maxTextureHeight3D;
- (unsigned long long)maxTextureLayers;
- (unsigned long long)maxTextureWidth1D;
- (unsigned long long)maxTextureWidth2D;
- (unsigned long long)maxTextureWidth3D;
- (unsigned long long)maxTileBuffers;
- (unsigned long long)maxTileInlineDataSize;
- (unsigned long long)maxTileSamplers;
- (unsigned long long)maxTileTextures;
- (unsigned long long)maxTotalComputeThreadsPerThreadgroup;
- (unsigned long long)maxVertexAmplificationCount;
- (unsigned long long)maxVertexAmplificationFactor;
- (unsigned long long)maxVertexAttributes;
- (unsigned long long)maxVertexBuffers;
- (unsigned long long)maxVertexInlineDataSize;
- (unsigned long long)maxVertexSamplers;
- (unsigned long long)maxVertexTextures;
- (unsigned long long)maxViewportCount;
- (unsigned long long)maxVisibilityQueryOffset;
- (bool)metalAssertionsEnabled;
- (unsigned long long)minBufferNoCopyAlignmentBytes;
- (unsigned long long)minConstantBufferAlignmentBytes;
- (unsigned long long)minLinearTextureAlignmentForPixelFormat:(unsigned long long)arg1;
- (unsigned long long)minTilePixels;
- (<MTLAccelerationStructure> *)newAccelerationStructureWithBuffer:(id <MTLBuffer>)arg1 offset:(unsigned long long)arg2;
- (<MTLAccelerationStructure> *)newAccelerationStructureWithBuffer:(id <MTLBuffer>)arg1 offset:(unsigned long long)arg2 resourceIndex:(unsigned long long)arg3;
- (<MTLAccelerationStructure> *)newAccelerationStructureWithSize:(unsigned long long)arg1 resourceIndex:(unsigned long long)arg2;
- (<MTLAccelerationStructure> *)newAccelerationStructureWithSize:(unsigned long long)arg1 withDescriptor:(MTLAccelerationStructureAllocationDescriptor *)arg2;
- (<MTLArgumentEncoder> *)newArgumentEncoderWithLayout:(_MTLIndirectArgumentBufferLayout *)arg1;
- (<MTLBinaryArchive> *)newBinaryArchiveWithDescriptor:(MTLBinaryArchiveDescriptor *)arg1 error:(id*)arg2;
- (<MTLBinaryArchive> *)newBinaryLibraryWithOptions:(unsigned long long)arg1 url:(NSURL *)arg2 error:(id*)arg3;
- (<MTLBuffer> *)newBufferWithIOSurface:(struct __IOSurface { }*)arg1;
- (<MTLCommandQueue> *)newCommandQueueWithDescriptor:(MTLCommandQueueDescriptor *)arg1;
- (<MTLDynamicLibrary> *)newDynamicLibrary:(id <MTLLibrary>)arg1 computeDescriptor:(MTLComputePipelineDescriptor *)arg2 error:(id*)arg3;
- (<MTLDynamicLibrary> *)newDynamicLibrary:(id <MTLLibrary>)arg1 error:(id*)arg2;
- (<MTLDynamicLibrary> *)newDynamicLibraryFromURL:(NSURL *)arg1 error:(id*)arg2;
- (<MTLDynamicLibrary> *)newDynamicLibraryWithDescriptor:(MTLDynamicLibraryDescriptorSPI *)arg1 error:(id*)arg2;
- (<MTLDynamicLibrary> *)newDynamicLibraryWithURL:(NSURL *)arg1 error:(id*)arg2;
- (<MTLDynamicLibrary> *)newDynamicLibraryWithURL:(NSURL *)arg1 options:(unsigned long long)arg2 error:(id*)arg3;
- (<MTLEvent> *)newEventWithOptions:(long long)arg1;
- (_MTLIndirectArgumentBufferLayout *)newIndirectArgumentBufferLayoutWithStructType:(MTLStructType *)arg1;
- (<MTLBuffer> *)newIndirectCommandBufferWithDescriptor:(MTLIndirectCommandBufferDescriptor *)arg1 maxCount:(unsigned long long)arg2 options:(unsigned long long)arg3;
- (<MTLIndirectComputeCommandEncoder> *)newIndirectComputeCommandEncoderWithBuffer:(id <MTLBuffer>)arg1;
- (<MTLIndirectRenderCommandEncoder> *)newIndirectRenderCommandEncoderWithBuffer:(id <MTLBuffer>)arg1;
- (<MTLIntersectionFunctionTable> *)newIntersectionFunctionTableWithDescriptor:(MTLIntersectionFunctionTableDescriptor *)arg1;
- (<MTLPerformanceStateAssertion> *)newPerformanceStateAssertion:(long long)arg1 error:(id*)arg2;
- (<MTLDeadlineProfile> *)newProfileWithExecutionSize:(unsigned long long)arg1;
- (<MTLRasterizationRateMap> *)newRasterizationRateMapWithDescriptor:(MTLRasterizationRateMapDescriptor *)arg1;
- (void)newRenderPipelineStateWithMeshDescriptor:(void *)arg1 completionHandler:(void *)arg2; // needs 2 arg types, found 8: MTLMeshRenderPipelineDescriptor *, id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, <MTLRenderPipelineState> *, NSError *, void*
- (<MTLRenderPipelineState> *)newRenderPipelineStateWithMeshDescriptor:(MTLMeshRenderPipelineDescriptor *)arg1 error:(id*)arg2;
- (void)newRenderPipelineStateWithMeshDescriptor:(void *)arg1 options:(void *)arg2 completionHandler:(void *)arg3; // needs 3 arg types, found 10: MTLMeshRenderPipelineDescriptor *, unsigned long long, id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, <MTLRenderPipelineState> *, MTLRenderPipelineReflection *, NSError *, void*
- (<MTLRenderPipelineState> *)newRenderPipelineStateWithMeshDescriptor:(MTLMeshRenderPipelineDescriptor *)arg1 options:(unsigned long long)arg2 reflection:(id*)arg3 error:(id*)arg4;
- (<MTLSharedEvent> *)newSharedEventWithMachPort:(unsigned int)arg1;
- (<MTLSharedEvent> *)newSharedEventWithOptions:(long long)arg1;
- (<MTLTexture> *)newTextureWithDescriptor:(MTLTextureDescriptor *)arg1 iosurface:(struct __IOSurface { }*)arg2 plane:(unsigned long long)arg3;
- (<MTLTexture> *)newTextureWithDescriptor:(MTLTextureDescriptor *)arg1 iosurface:(struct __IOSurface { }*)arg2 plane:(unsigned long long)arg3 slice:(unsigned long long)arg4;
- (<MTLVisibleFunctionTable> *)newVisibleFunctionTableWithDescriptor:(MTLVisibleFunctionTableDescriptor *)arg1;
- (struct { unsigned int x1; unsigned int x2; })pipelineCacheStats;
- (NSDictionary *)pluginData;
- (NSString *)productName;
- (bool)requiresBFloat16Emulation;
- (bool)requiresRaytracingEmulation;
- (void)setCommandBufferErrorOptions:(unsigned long long)arg1;
- (bool)setCompilerProcessesCount:(int)arg1;
- (void)setGPUAssertionsEnabled:(bool)arg1;
- (void)setMetalAssertionsEnabled:(bool)arg1;
- (void)setPluginData:(NSDictionary *)arg1;
- (unsigned long long)sharedMemorySize;
- (unsigned long long)singleFPConfig;
- (bool)supportPriorityBand;
- (bool)supports2DLinearTexArraySPI;
- (bool)supports32BitFloatFiltering;
- (bool)supports32BitMSAA;
- (bool)supports32bpcMSAATextures;
- (bool)supports3DASTCTextures;
- (bool)supports3DBCTextures;
- (bool)supportsASTCHDRTextureCompression;
- (bool)supportsASTCTextureCompression;
- (bool)supportsAlphaYUVFormats;
- (bool)supportsAnisoSampleFix;
- (bool)supportsArgumentBuffersTier2;
- (bool)supportsArrayOfSamplers;
- (bool)supportsArrayOfTextures;
- (bool)supportsAtomicUlongVoidMinMax;
- (bool)supportsAtomicWaitNotify;
- (bool)supportsBCTextureCompression;
- (bool)supportsBGR10A2;
- (bool)supportsBaseVertexInstanceDrawing;
- (bool)supportsBfloat16Buffers;
- (bool)supportsBfloat16Format;
- (bool)supportsBinaryArchives;
- (bool)supportsBinaryLibraries;
- (bool)supportsBlackOrWhiteSamplerBorderColors;
- (bool)supportsBufferBoundsChecking;
- (bool)supportsBufferPrefetchStatistics;
- (bool)supportsBufferWithIOSurface;
- (bool)supportsBufferlessClientStorageTexture;
- (bool)supportsCMPIndirectCommandBuffers;
- (bool)supportsColorSpaceConversionMatrixSelection;
- (bool)supportsCombinedMSAAStoreAndResolveAction;
- (bool)supportsCommandBufferJump;
- (bool)supportsCompressedTextureViewSPI;
- (bool)supportsComputeCompressedTextureWrite;
- (bool)supportsComputeMemoryBarrier;
- (bool)supportsConcurrentComputeDispatch;
- (bool)supportsConditionalLoadStore;
- (bool)supportsCountingOcclusionQuery;
- (bool)supportsCustomBorderColor;
- (bool)supportsDeadlineProfile;
- (bool)supportsDepthClipMode;
- (bool)supportsDepthClipModeClampExtended;
- (bool)supportsDevicePartitioning;
- (bool)supportsDynamicAttributeStride;
- (bool)supportsDynamicControlPointCount;
- (bool)supportsDynamicLibraries;
- (bool)supportsExplicitVisibilityGroups;
- (bool)supportsExtendedVertexFormats;
- (bool)supportsExtendedXR10Formats;
- (bool)supportsExtendedYUVFormats;
- (bool)supportsFP32TessFactors;
- (bool)supportsFastMathInfNaNPropagation;
- (bool)supportsFillTexture;
- (bool)supportsFixedLinePointFillDepthGradient;
- (bool)supportsFloat16BCubicFiltering;
- (bool)supportsFloat16InfNanFiltering;
- (bool)supportsForceSeamsOnCubemaps;
- (bool)supportsForkJoin;
- (bool)supportsFragmentBufferWrites;
- (bool)supportsFragmentOnlyEncoders;
- (bool)supportsFunctionPointers;
- (bool)supportsFunctionPointersFromMesh;
- (bool)supportsFunctionPointersFromRender;
- (bool)supportsGFXIndirectCommandBuffers;
- (bool)supportsGPUStatistics;
- (bool)supportsGlobalVariableRelocation;
- (bool)supportsGlobalVariableRelocationCompute;
- (bool)supportsGlobalVariableRelocationRender;
- (bool)supportsHeapAccelerationStructureAllocation;
- (bool)supportsIABHashForTools;
- (bool)supportsImageBlockSampleCoverageControl;
- (bool)supportsImageBlocks;
- (bool)supportsIndirectDrawAndDispatch;
- (bool)supportsIndirectStageInRegion;
- (bool)supportsIndirectTessellation;
- (bool)supportsIndirectTextures;
- (bool)supportsIndirectWritableTextures;
- (bool)supportsInt64;
- (bool)supportsInterchangeTiled;
- (bool)supportsInvariantVertexPosition;
- (bool)supportsLargeFramebufferConfigs;
- (bool)supportsLateEvalEvent;
- (bool)supportsLayeredRendering;
- (bool)supportsLimitedYUVFormats;
- (bool)supportsLinearTexture2DArray;
- (bool)supportsLinearTextureFromSharedBuffer;
- (bool)supportsLossyCompression;
- (bool)supportsMSAADepthResolve;
- (bool)supportsMSAADepthResolveFilter;
- (bool)supportsMSAAStencilResolve;
- (bool)supportsMSAAStencilResolveFilter;
- (bool)supportsMemoryOrderAtomics;
- (bool)supportsMemorylessRenderTargets;
- (bool)supportsMeshShaders;
- (bool)supportsMeshShadersInICB;
- (bool)supportsMipLevelsSmallerThanBlockSize;
- (bool)supportsMirrorClampToEdgeSamplerMode;
- (bool)supportsMutableTier1ArgumentBuffers;
- (bool)supportsNativeHardwareFP16;
- (bool)supportsNonPrivateDepthStencilTextures;
- (bool)supportsNonPrivateMSAATextures;
- (bool)supportsNonSquareTileShaders;
- (bool)supportsNonUniformThreadgroupSize;
- (bool)supportsNonZeroTextureWriteLOD;
- (bool)supportsNorm16BCubicFiltering;
- (bool)supportsOpenCLTextureWriteSwizzles;
- (bool)supportsPacked32TextureBufferWrites;
- (bool)supportsPerPlaneCompression;
- (bool)supportsPerformanceStateAssertion;
- (bool)supportsPipelineLibraries;
- (bool)supportsPlacementHeaps;
- (bool)supportsPostDepthCoverage;
- (bool)supportsPrimitiveMotionBlur;
- (bool)supportsPrimitiveRestartOverride;
- (bool)supportsProgrammableBlending;
- (bool)supportsProgrammableSamplePositions;
- (bool)supportsPublicXR10Formats;
- (bool)supportsPullModelInterpolation;
- (bool)supportsQuadGroup;
- (bool)supportsQuadReduction;
- (bool)supportsQuadShufflesAndBroadcast;
- (bool)supportsQueryTextureLOD;
- (bool)supportsRGBA10A2Gamma;
- (bool)supportsRTZRounding;
- (bool)supportsRasterOrderGroups;
- (bool)supportsRasterOrderGroupsColorAttachment;
- (bool)supportsRasterizationRateMapWithLayerCount:(unsigned long long)arg1;
- (bool)supportsRayTracingAccelerationStructureCPUDeserialization;
- (bool)supportsRayTracingBuffersFromTables;
- (bool)supportsRayTracingCurves;
- (bool)supportsRayTracingExtendedVertexFormats;
- (bool)supportsRayTracingGPUTableUpdateBuffers;
- (bool)supportsRayTracingICBs;
- (bool)supportsRayTracingIndirectInstanceAccelerationStructureBuild;
- (bool)supportsRayTracingMultiLevelInstancing;
- (bool)supportsRayTracingPerPrimitiveData;
- (bool)supportsRayTracingTraversalMetrics;
- (bool)supportsRaytracingFromRender;
- (bool)supportsReadWriteBufferArguments;
- (bool)supportsReadWriteTextureArguments;
- (bool)supportsReadWriteTextureArgumentsTier2;
- (bool)supportsReadWriteTextureCubeArguments;
- (bool)supportsRelaxedTextureViewRequirements;
- (bool)supportsRenderDynamicLibraries;
- (bool)supportsRenderMemoryBarrier;
- (bool)supportsRenderPassWithoutRenderTarget;
- (bool)supportsRenderTargetTextureRotation;
- (bool)supportsRenderTextureWrites;
- (bool)supportsRenderToLinearTextures;
- (bool)supportsSIMDGroup;
- (bool)supportsSIMDGroupMatrix;
- (bool)supportsSIMDReduction;
- (bool)supportsSIMDShuffleAndFill;
- (bool)supportsSIMDShufflesAndBroadcast;
- (bool)supportsSRGBwrites;
- (bool)supportsSampleCount:(unsigned long long)arg1;
- (bool)supportsSamplerAddressModeClampToHalfBorder;
- (bool)supportsSamplerCompareFunction;
- (bool)supportsSeparateDepthStencil;
- (bool)supportsSeparateVisibilityAndShadingRate;
- (bool)supportsSetThreadgroupPackingDisabled;
- (bool)supportsShaderBarycentricCoordinates;
- (bool)supportsShaderLODAverage;
- (bool)supportsShaderMinLODClamp;
- (bool)supportsSharedFunctionTables;
- (bool)supportsSharedStorageHeapResources;
- (bool)supportsSharedStorageTextures;
- (bool)supportsSharedTextureHandles;
- (bool)supportsSparseDepthAttachments;
- (bool)supportsSparseHeaps;
- (bool)supportsSparseTextures;
- (bool)supportsStackOverflowErrorCode;
- (bool)supportsStatefulDynamicLibraries;
- (bool)supportsStencilFeedback;
- (bool)supportsStreamingCodecSignaling;
- (bool)supportsTLS;
- (bool)supportsTessellation;
- (bool)supportsTexture2DMultisampleArray;
- (bool)supportsTextureCubeArray;
- (bool)supportsTextureOutOfBoundsReads;
- (bool)supportsTextureSwizzle;
- (bool)supportsTextureWriteRoundingMode:(long long)arg1;
- (bool)supportsTileShaders;
- (bool)supportsUnalignedVertexFetch;
- (bool)supportsVariableRateRasterization;
- (bool)supportsVertexAmplification;
- (bool)supportsViewportAndScissorArray;
- (bool)supportsVirtualSubstreams;
- (bool)supportsWritableArrayOfTextures;
- (bool)supportsYCBCRFormats;
- (bool)supportsYCBCRFormats12;
- (bool)supportsYCBCRFormatsPQ;
- (bool)supportsYCBCRFormatsXR;
- (bool)supportsYCBCRPackedFormats12;
- (bool)supportsYCBCRPackedFormatsPQ;
- (bool)supportsYCBCRPackedFormatsXR;
- (MTLTargetDeviceArchitecture *)targetDeviceArchitecture;
- (const struct MTLTargetDeviceArch { unsigned long long x1; unsigned int x2; char *x3; }*)targetDeviceInfo;
- (void)unloadShaderCaches;
- (bool)validateDynamicLibrary:(id <MTLLibrary>)arg1 state:(bool)arg2 error:(id*)arg3;
- (bool)validateDynamicLibraryDescriptor:(MTLDynamicLibraryDescriptorSPI *)arg1 error:(id*)arg2;
- (bool)validateDynamicLibraryURL:(NSURL *)arg1 error:(id*)arg2;
- (NSString *)vendorName;

@optional

- (void)compileVisibleFunction:(void *)arg1 withDescriptor:(void *)arg2 completionHandler:(void *)arg3; // needs 3 arg types, found 8: <MTLFunction> *, MTLFunctionDescriptor *, id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, NSError *, void*
- (void)compileVisibleFunction:(id <MTLFunction>)arg1 withDescriptor:(MTLFunctionDescriptor *)arg2 destinationBinaryArchive:(id <MTLBinaryArchive>)arg3 error:(id*)arg4;
- (void)compileVisibleFunction:(id <MTLFunction>)arg1 withDescriptor:(MTLFunctionDescriptor *)arg2 error:(id*)arg3;
- (NSMutableDictionary *)copyIOSurfaceSharedTextureProperties:(MTLTextureDescriptor *)arg1;
- (void)deserializeCompileTimeStats:(NSObject<OS_dispatch_data> *)arg1 addToDictionary:(NSMutableDictionary *)arg2;
- (NSData *)endCollectingPipelineDescriptors;
- (struct os_unfair_lock_s { unsigned int x1; }*)getBVHBuilderLock;
- (MTLGPUBVHBuilder *)getRawBVHBuilderPtr;
- (void*)getShaderCacheKeys;
- (NSObject<OS_dispatch_data> *)indirectArgumentBufferDecodingData;
- (bool)isClampToHalfBorderSupported;
- (bool)isCustomBorderColorSupported;
- (bool)isQuadDataSharingSupported;
- (bool)isRGB10A2GammaSupported;
- (bool)mapShaderSampleBufferWithBuffer:(struct { unsigned int x1; unsigned int x2; unsigned int x3; }*)arg1 capacity:(unsigned long long)arg2 size:(unsigned long long)arg3;
- (unsigned int)maximumComputeSubstreams;
- (<MTLBuffer> *)newBufferWithBytes:(const void*)arg1 length:(unsigned long long)arg2 options:(unsigned long long)arg3 gpuAddress:(unsigned long long)arg4;
- (<MTLBuffer> *)newBufferWithBytesNoCopy:(void *)arg1 length:(void *)arg2 options:(void *)arg3 gpuAddress:(void *)arg4 deallocator:(void *)arg5; // needs 5 arg types, found 11: void*, unsigned long long, unsigned long long, unsigned long long, id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, void*, unsigned long long, void*
- (<MTLBuffer> *)newBufferWithDescriptor:(MTLBufferDescriptor *)arg1;
- (<MTLBuffer> *)newBufferWithLength:(unsigned long long)arg1 options:(unsigned long long)arg2 gpuAddress:(unsigned long long)arg3;
- (MTLComputePipelineDescriptor *)newComputePipelineDescriptorWithSerializedData:(NSObject<OS_dispatch_data> *)arg1 deserializationContext:(id <MTLDeserializationContext>)arg2;
- (void)newComputePipelineStateWithDescriptor:(void *)arg1 completionHandler:(void *)arg2; // needs 2 arg types, found 8: MTLComputePipelineDescriptor *, id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, <MTLComputePipelineState> *, NSError *, void*
- (<MTLComputePipelineState> *)newComputePipelineStateWithDescriptor:(MTLComputePipelineDescriptor *)arg1 error:(id*)arg2;
- (<MTLComputePipelineState> *)newComputePipelineStateWithImageFilterFunctionsSPI:(NSArray *)arg1 imageFilterFunctionInfo:(const struct { bool x1; unsigned long long x2; struct { /* ? */ } *x3; }*)arg2 error:(id*)arg3;
- (NSString *)newDagStringWithGraphs:(NSArray *)arg1;
- (<MTLFunction> *)newFunctionWithGLCoreIR:(void*)arg1 functionType:(unsigned long long)arg2;
- (<MTLFunction> *)newFunctionWithGLCoreIR:(void*)arg1 inputsDescription:(NSObject<OS_dispatch_data> *)arg2 functionType:(unsigned long long)arg3;
- (<MTLFunction> *)newFunctionWithGLESIR:(void*)arg1 functionType:(unsigned long long)arg2;
- (<MTLFunction> *)newFunctionWithGLESIR:(void*)arg1 inputsDescription:(NSObject<OS_dispatch_data> *)arg2 functionType:(unsigned long long)arg3;
- (<MTLFunction> *)newFunctionWithGLIR:(void*)arg1 functionType:(unsigned long long)arg2;
- (<MTLFunction> *)newFunctionWithGLIR:(void*)arg1 inputsDescription:(NSObject<OS_dispatch_data> *)arg2 functionType:(unsigned long long)arg3;
- (<MTLIndirectArgumentEncoder> *)newIndirectArgumentEncoderWithArguments:(NSArray *)arg1;
- (<MTLIndirectArgumentEncoder> *)newIndirectArgumentEncoderWithLayout:(_MTLIndirectArgumentBufferLayout *)arg1;
- (<MTLLateEvalEvent> *)newLateEvalEvent;
- (<MTLLibrary> *)newLibraryWithCIFilters:(NSArray *)arg1 imageFilterFunctionInfo:(const struct { bool x1; unsigned long long x2; struct { /* ? */ } *x3; }*)arg2 error:(id*)arg3;
- (<MTLLibrary> *)newLibraryWithCIFiltersForComputePipeline:(NSArray *)arg1 imageFilterFunctionInfo:(const struct { bool x1; unsigned long long x2; struct { /* ? */ } *x3; }*)arg2 error:(id*)arg3;
- (<MTLLibrary> *)newLibraryWithDAG:(NSString *)arg1 functions:(NSArray *)arg2 error:(id*)arg3;
- (void)newLibraryWithDescriptor:(void *)arg1 completionHandler:(void *)arg2; // needs 2 arg types, found 8: MTLStitchedLibraryDescriptor *, id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, <MTLLibrary> *, NSError *, void*
- (<MTLLibrary> *)newLibraryWithDescriptor:(MTLStitchedLibraryDescriptor *)arg1 error:(id*)arg2;
- (<MTLLibrary> *)newLibraryWithDescriptorSPI:(MTLStitchedLibraryDescriptorSPI *)arg1 error:(id*)arg2;
- (<MTLLibrary> *)newLibraryWithGraphs:(NSArray *)arg1 functions:(NSArray *)arg2 error:(id*)arg3;
- (<MTLLibrary> *)newLibraryWithGraphsSPI:(NSArray *)arg1 functions:(NSArray *)arg2 error:(id*)arg3;
- (<MTLLibrary> *)newLibraryWithImageFilterFunctionsSPI:(NSArray *)arg1 imageFilterFunctionInfo:(const struct { bool x1; unsigned long long x2; struct { /* ? */ } *x3; }*)arg2 error:(id*)arg3;
- (<MTLLibrary> *)newLibraryWithStitchedDescriptorSPI:(MTLStitchedLibraryDescriptorSPI *)arg1 error:(id*)arg2;
- (<MTLPipelineLibrarySPI> *)newPipelineLibraryWithFilePath:(NSString *)arg1 error:(id*)arg2;
- (MTLRenderPipelineDescriptor *)newRenderPipelineDescriptorWithSerializedData:(NSObject<OS_dispatch_data> *)arg1 deserializationContext:(id <MTLDeserializationContext>)arg2;
- (void)newRenderPipelineStateWithTileDescriptor:(void *)arg1 completionHandler:(void *)arg2; // needs 2 arg types, found 8: MTLTileRenderPipelineDescriptor *, id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, <MTLRenderPipelineState> *, NSError *, void*
- (<MTLRenderPipelineState> *)newRenderPipelineStateWithTileDescriptor:(MTLTileRenderPipelineDescriptor *)arg1 error:(id*)arg2;
- (<MTLResourceGroupSPI> *)newResourceGroupFromResources:(const id*)arg1 count:(unsigned long long)arg2;
- (MTLStructType *)newStructTypeWithSerializedData:(NSObject<OS_dispatch_data> *)arg1;
- (<MTLTextureLayout> *)newTextureLayoutWithDescriptor:(MTLTextureDescriptor *)arg1 isHeapOrBufferBacked:(bool)arg2;
- (<MTLTexture> *)newTextureWithBytesNoCopy:(void *)arg1 length:(void *)arg2 descriptor:(void *)arg3 deallocator:(void *)arg4; // needs 4 arg types, found 10: void*, unsigned long long, MTLTextureDescriptor *, id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, void*, unsigned long long, void*
- (MTLTileRenderPipelineDescriptor *)newTileRenderPipelineDescriptorWithSerializedData:(NSObject<OS_dispatch_data> *)arg1 deserializationContext:(id <MTLDeserializationContext>)arg2;
- (bool)reserveGPUAddressRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)reserveResourceIndicesForResourceType:(unsigned long long)arg1 indices:(unsigned long long*)arg2 indexCount:(unsigned long long)arg3;
- (unsigned long long)resourcePatchingTypeForResourceType:(unsigned long long)arg1;
- (NSObject<OS_dispatch_data> *)serializeComputePipelineDescriptor:(MTLComputePipelineDescriptor *)arg1;
- (NSObject<OS_dispatch_data> *)serializeRenderPipelineDescriptor:(MTLRenderPipelineDescriptor *)arg1;
- (NSObject<OS_dispatch_data> *)serializeStructType:(MTLStructType *)arg1;
- (NSObject<OS_dispatch_data> *)serializeStructType:(MTLStructType *)arg1 version:(unsigned int)arg2;
- (NSObject<OS_dispatch_data> *)serializeTileRenderPipelineDescriptor:(MTLTileRenderPipelineDescriptor *)arg1;
- (void)setIndirectArgumentBufferDecodingData:(NSObject<OS_dispatch_data> *)arg1;
- (void)setRawBVHBuilderPtr:(MTLGPUBVHBuilder *)arg1;
- (void)setShaderDebugInfoCaching:(bool)arg1;
- (void)setupMPSFunctionTable:(struct MPSFunctionTable { }*)arg1;
- (bool)shaderDebugInfoCaching;
- (unsigned long long)sparseTexturesSupport;
- (void)startCollectingPipelineDescriptors;
- (void)startCollectingPipelineDescriptorsUsingPrefixForNames:(NSString *)arg1;
- (bool)supportsPrimitiveType:(unsigned long long)arg1;
- (struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; })tileSizeWithSparsePageSize:(long long)arg1 textureType:(unsigned long long)arg2 pixelFormat:(unsigned long long)arg3 sampleCount:(unsigned long long)arg4;
- (void)unmapShaderSampleBuffer;

@end
