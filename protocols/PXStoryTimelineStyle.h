
@protocol PXStoryTimelineStyle

@required

- (NSArray *)allowedClipCompositionsWithStartTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 nextDisplayAssets:(id <PXStoryDisplayAssetFetchResult>)arg2;
- (bool)allowsIncompleteTimelines;
- (bool)allowsMultipartPanoramaForDisplayAsset:(id <PXStoryDisplayAsset>)arg1 startTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (struct { long long x1; long long x2; float x3; double x4; double x5; double x6; double x7; })audioInfoForDisplayAsset:(id <PXStoryDisplayAsset>)arg1;
- (<PXStoryClipComposition> *)clipCompositionForKeyAsset:(id <PXStoryDisplayAsset>)arg1 contentInfo:(const struct { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_5_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_5_1_2; } x5; }*)arg2 finalPlaybackStyle:(long long)arg3;
- (double)composabilityScoreForSegmentWithDisplayAssets:(id <PXStoryDisplayAssetFetchResult>)arg1;
- (struct { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_5_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_5_1_2; } x5; })contentInfoForDisplayAsset:(id <PXStoryDisplayAsset>)arg1;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })defaultDisplayAssetPresentationDuration;
- (PXStoryMultipartPanoramaParameters *)defaultHorizontalMultipartPanoramaParameters;
- (PXStoryMultipartPanoramaParameters *)defaultVerticalMultipartPanoramaParameters;
- (struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; struct { long long x_3_1_1; int x_3_1_2; unsigned int x_3_1_3; long long x_3_1_4; } x3; struct { struct { long long x_1_2_1; int x_1_2_2; unsigned int x_1_2_3; long long x_1_2_4; } x_4_1_1; long long x_4_1_2; } x4; BOOL x5; })durationInfoForSegmentWithDisplayAssets:(id <PXStoryDisplayAssetFetchResult>)arg1 startTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (void)enumerateAllowedKenBurnsEffectParametersForSegmentWithClipComposition:(void *)arg1 displayAssets:(void *)arg2 assetContentInfos:(void *)arg3 finalPlaybackStyles:(void *)arg4 startTime:(void *)arg5 durationInfo:(void *)arg6 separatorEffectParameters:(void *)arg7 separatorEffectContext:(void *)arg8 buffer:(void *)arg9 usingBlock:(void *)arg10; // needs 10 arg types, found 15: <PXStoryClipComposition> *, <PXStoryDisplayAssetFetchResult> *, const struct { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_2_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_5_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_5_1_2; } x5; }*, const long long*, struct { long long x1; int x2; unsigned int x3; long long x4; }, struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; struct { long long x_3_1_1; int x_3_1_2; unsigned int x_3_1_3; long long x_3_1_4; } x3; struct { struct { long long x_1_2_1; int x_1_2_2; unsigned int x_1_2_3; long long x_1_2_4; } x_4_1_1; long long x_4_1_2; } x4; BOOL x5; }, const struct { unsigned int x1; double x2; double x3; }*, long long, struct { struct { struct CGAffineTransform { double x_1_2_1; double x_1_2_2; double x_1_2_3; double x_1_2_4; double x_1_2_5; double x_1_2_6; } x_1_1_1; } x1; struct { struct CGAffineTransform { double x_1_2_1; double x_1_2_2; double x_1_2_3; double x_1_2_4; double x_1_2_5; double x_1_2_6; } x_2_1_1; } x2; }*, id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, struct { struct { struct CGAffineTransform { double x_1_2_1; double x_1_2_2; double x_1_2_3; double x_1_2_4; double x_1_2_5; double x_1_2_6; } x_1_1_1; } x1; struct { struct CGAffineTransform { double x_1_2_1; double x_1_2_2; double x_1_2_3; double x_1_2_4; double x_1_2_5; double x_1_2_6; } x_2_1_1; } x2; }*, void*
- (void)enumerateAllowedSeparatorEffectParametersForSegmentWithClipComposition:(void *)arg1 displayAssets:(void *)arg2 finalPlaybackStyles:(void *)arg3 startTime:(void *)arg4 durationInfo:(void *)arg5 buffer:(void *)arg6 usingBlock:(void *)arg7; // needs 7 arg types, found 13: <PXStoryClipComposition> *, <PXStoryDisplayAssetFetchResult> *, const long long*, struct { long long x1; int x2; unsigned int x3; long long x4; }, struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; struct { long long x_3_1_1; int x_3_1_2; unsigned int x_3_1_3; long long x_3_1_4; } x3; struct { struct { long long x_1_2_1; int x_1_2_2; unsigned int x_1_2_3; long long x_1_2_4; } x_4_1_1; long long x_4_1_2; } x4; BOOL x5; }, struct { unsigned int x1; double x2; double x3; }*, id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, struct { unsigned int x1; double x2; double x3; }*, long long, void*
- (long long)finalNUpPlaybackStyleForOriginalPlaybackStyle:(long long)arg1;
- (long long)finalOneUpPlaybackStyleForDisplayAsset:(id <PXStoryDisplayAsset>)arg1 originalPlaybackStyle:(long long)arg2;
- (bool)isOriginalPlaybackStyleAllowedInNUp:(long long)arg1;
- (NSArray *)sortedCropContentsRectsForMultipartPanoramaWithDisplayAsset:(id <PXStoryDisplayAsset>)arg1 startTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 proposedCropContentsRects:(NSArray *)arg3 axis:(long long)arg4 normalizedKenBurnsEffectParameters:(struct { struct { struct CGAffineTransform { double x_1_2_1; double x_1_2_2; double x_1_2_3; double x_1_2_4; double x_1_2_5; double x_1_2_6; } x_1_1_1; } x1; struct { struct CGAffineTransform { double x_1_2_1; double x_1_2_2; double x_1_2_3; double x_1_2_4; double x_1_2_5; double x_1_2_6; } x_2_1_1; } x2; }*)arg5 durationInfos:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; struct { long long x_3_1_1; int x_3_1_2; unsigned int x_3_1_3; long long x_3_1_4; } x3; struct { struct { long long x_1_2_1; int x_1_2_2; unsigned int x_1_2_3; long long x_1_2_4; } x_4_1_1; long long x_4_1_2; } x4; BOOL x5; }*)arg6 transitionInfos:(struct { BOOL x1; unsigned char x2; struct { long long x_3_1_1; int x_3_1_2; unsigned int x_3_1_3; long long x_3_1_4; } x3; BOOL x4; union { BOOL x_5_1_1; BOOL x_5_1_2; BOOL x_5_1_3; BOOL x_5_1_4; } x5; union { double x_6_1_1; double x_6_1_2; BOOL x_6_1_3; } x6; }*)arg7;
- (struct { BOOL x1; unsigned char x2; struct { long long x_3_1_1; int x_3_1_2; unsigned int x_3_1_3; long long x_3_1_4; } x3; BOOL x4; union { BOOL x_5_1_1; BOOL x_5_1_2; BOOL x_5_1_3; BOOL x_5_1_4; } x5; union { double x_6_1_1; double x_6_1_2; BOOL x_6_1_3; } x6; })transitionInfoForSegmentWithClipComposition:(id <PXStoryClipComposition>)arg1 displayAssets:(id <PXStoryDisplayAssetFetchResult>)arg2;

@end
