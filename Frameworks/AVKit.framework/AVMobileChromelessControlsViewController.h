
@interface AVMobileChromelessControlsViewController : AVMobileControlsViewController <AVControlItemDelegate, AVMediaSelectionMenuDelegate, AVMobileAuxiliaryControlsViewDelegate, AVMobileChromelessControlsViewDelegate, AVMobileChromelessDisplayModeControlsViewDelegate, AVMobileChromelessPlaybackControlsViewDelegate, AVMobileChromelessSliderDelegate, AVMobileChromelessVolumeControlsViewDelegate, AVMobileContentTabSelectionViewDelegate, AVMobileFullscreenControllerDelegate, AVPlayerControllerWebKitDelegate, AVRoutePickerViewDelegate, UIGestureRecognizerDelegate> {
    UIViewController * _activeCustomInfoViewController;
    AVMobileAuxiliaryControl * _analysisControl;
    UIAction * _analysisToggleAction;
    AVMobileAuxiliaryControl * _audibleMediaSelectionControl;
    UIMenu * _audibleMediaSelectionMenu;
    NSArray * _auxiliaryControlsForControlItems;
    NSLayoutConstraint * _auxiliaryControlsViewTopAnchorConstraint;
    double  _contentTabInteractivePresentationInitialFractionComplete;
    UIPanGestureRecognizer * _contentTabPanGestureRecognizer;
    double  _contentTabPanGestureTranslationScaleFactor;
    AVMobileContentTabPresentationContext * _contentTabPresentationContext;
    bool  _contentTabPresented;
    UITapGestureRecognizer * _contentTabTapGestureRecognizer;
    UIViewPropertyAnimator * _contentTabViewPresentationAnimator;
    bool  _controlsExpanded;
    UIAction * _copySubjectAction;
    AVMobileAuxiliaryControl * _copySubjectControl;
    NSLayoutConstraint * _currentTransportControlsTopAnchorConstraint;
    struct AVMobileChromelessControlsVisibilityState { 
        unsigned long long visibleControls; 
        bool backgroundGradientActive; 
        bool liveEdgeMarkContentTagVisible; 
    }  _currentVisibilityState;
    NSArray * _customInfoViewControllers;
    NSDateFormatter * _dateFormatter;
    NSLayoutConstraint * _defaultTopAnchorConstraint;
    UILayoutGuide * _displayModeControlsLayoutGuide;
    AVTimeFormatter * _elapsedTimeFormatter;
    bool  _hasBeenSetUp;
    UIAction * _jumpToLiveAction;
    AVButton * _jumpToLiveButton;
    AVMobileAuxiliaryControl * _jumpToLiveControl;
    UIViewPropertyAnimator * _keyboardUIAvoidanceAnimator;
    AVMobileAuxiliaryControl * _legibleMediaSelectionControl;
    UIMenu * _legibleMediaSelectionMenu;
    AVMobileSliderMark * _liveEdgeSliderMark;
    UIViewPropertyAnimator * _loadingAnimator;
    AVMediaSelectionMenuController * _mediaSelectionMenuController;
    bool  _needsControlsVisibilityStateUpdate;
    bool  _needsTimeResolverUpdate;
    AVObservationController * _observationController;
    NSArray * _pinnedAuxiliaryControls;
    AVMobileAuxiliaryControl * _playbackSpeedControl;
    AVMobilePlaybackRateMenuController * _playbackSpeedMenuController;
    AVTimeFormatter * _remainingTimeFormatter;
    AVMobileAuxiliaryControl * _routePickerControl;
    AVRoutePickerView * _routePickerView;
    bool  _runningLoadingAnimation;
    UIViewController * _selectedCustomInfoViewController;
    bool  _showsAnalysisControl;
    bool  _showsAudioTrackSelectionMenu;
    bool  _showsCopySubjectControl;
    bool  _showsVisualLookupControl;
    AVMobileChromelessControlsStyleSheet * _styleSheet;
    double  _systemKeyboardUIHeight;
    bool  _temporarilyVisibile;
    AVPlayerControllerTimeResolver * _timeResolver;
    UIViewPropertyAnimator * _timelineSliderEmphasisAnimator;
    NSLayoutConstraint * _timelineTopAnchorConstraint;
    NSLayoutConstraint * _titlebarViewTopAnchorConstraint;
    UILayoutGuide * _transportControlsLayoutGuide;
    NSString * _uniqueIdentifier;
    long long  _userInteractionCount;
    AVMobileChromelessControlsView * _view;
    UIViewPropertyAnimator * _visibilityAnimator;
    NSTimer * _visibilityTimer;
    UIAction * _visualLookupAction;
    AVMobileAuxiliaryControl * _visualLookupControl;
    UIViewPropertyAnimator * _volumeControlsEmphasisAnimator;
    UILayoutGuide * _volumeControlsLayoutGuide;
    UIViewPropertyAnimator * _volumeControlsSliderAnimator;
    NSTimer * _volumeEmphasisAnimationDelayTimer;
    bool  _volumeSliderTemporarilyVisibileInFullscreen;
    NSTimer * _volumeSliderTemporarilyVisibleTimer;
    AVObservationController * _webKitExcludedObservationController;
}

@property (nonatomic, readonly) AVMobileContentTabPresentationContext *contentTabPresentationContext;
@property (nonatomic, retain) NSArray *customInfoViewControllers;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <AVMobileChromelessControlsViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool showsAnalysisControl;
@property (nonatomic) bool showsAudioTrackSelectionMenu;
@property (nonatomic) bool showsCopySubjectControl;
@property (nonatomic) bool showsVisualLookupControl;
@property (readonly) Class superclass;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } unobscuredContentArea;

- (void).cxx_destruct;
- (void)_contentTabPanGestureRecognizerTriggered:(id)arg1;
- (void)_contentTabTapGestureRecognizerTriggered:(id)arg1;
- (void)_handleJumpToLiveAction;
- (void)_timelineSliderDidChangeValue:(id)arg1;
- (void)_timelineSliderTrackingStateDidChange;
- (void)_updateControlsVisibilityStateIfNeededAnimated:(id)arg1;
- (void)_updateStyleSheet;
- (id)auxiliaryControlsView:(id)arg1 menuElementForControl:(id)arg2;
- (void)auxiliaryControlsViewDidEndShowingOverflowMenu:(id)arg1;
- (void)auxiliaryControlsViewWillBeginShowingOverflowMenu:(id)arg1;
- (void)chromelessControlsView:(id)arg1 didAttachControlsViews:(id)arg2;
- (void)chromelessControlsView:(id)arg1 didDetachControlsViews:(id)arg2;
- (id)contentTabPresentationContext;
- (void)contentTabSelectionView:(id)arg1 didChangeSelectedTabTo:(id)arg2 withReason:(unsigned long long)arg3;
- (void)controlItemDidUpdateVisualConfiguration:(id)arg1;
- (id)controlsView;
- (id)controlsViewControllerIfChromeless;
- (id)customInfoViewControllers;
- (void)dealloc;
- (void)didBeginIndirectUserInteraction;
- (id)displayModeControlsLayoutItem;
- (void)displayModeControlsViewFullscreenButtonWasPressed:(id)arg1;
- (void)displayModeControlsViewPictureInPictureButtonWasPressed:(id)arg1;
- (void)flashControlsWithDuration:(double)arg1;
- (void)fullscreenControllerDidChangePresentationState:(id)arg1;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)init;
- (void)loadView;
- (void)mediaSelectionMenuController:(id)arg1 didSelectOption:(id)arg2 atIndex:(unsigned long long)arg3;
- (id)mediaSelectionMenuController:(id)arg1 displayNameForMediaSelectionOption:(id)arg2;
- (void)playbackControlsViewBackwardSecondaryControlWasPressed:(id)arg1;
- (void)playbackControlsViewForwardSecondaryControlWasPressed:(id)arg1;
- (void)playbackControlsViewPlayPauseButtonWasPressed:(id)arg1;
- (void)routePickerViewDidEndPresentingRoutes:(id)arg1;
- (void)routePickerViewWillBeginPresentingRoutes:(id)arg1;
- (void)setControlItems:(id)arg1;
- (void)setCustomInfoViewControllers:(id)arg1;
- (void)setExcludedControls:(unsigned long long)arg1;
- (void)setFullscreenController:(id)arg1;
- (void)setIncludedControls:(unsigned long long)arg1;
- (void)setOptimizeForPerformance:(bool)arg1;
- (void)setPlaybackSpeedCollection:(id)arg1;
- (void)setPlayerController:(id)arg1;
- (void)setRequiresLinearPlayback:(bool)arg1;
- (void)setRoutingConfiguration:(id)arg1;
- (void)setSecondaryPlaybackControlsType:(unsigned long long)arg1;
- (void)setShowsAnalysisControl:(bool)arg1;
- (void)setShowsAudioTrackSelectionMenu:(bool)arg1;
- (void)setShowsCopySubjectControl:(bool)arg1;
- (void)setShowsFullScreenControl:(bool)arg1;
- (void)setShowsVisualLookupControl:(bool)arg1;
- (void)setTransportBarCustomMenuItems:(id)arg1;
- (void)setVolumeController:(id)arg1;
- (bool)showsAnalysisControl;
- (bool)showsAudioTrackSelectionMenu;
- (bool)showsCopySubjectControl;
- (bool)showsVisualLookupControl;
- (void)slider:(id)arg1 didUpdateFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 forSliderMark:(id)arg3;
- (void)sliderDidBeginTracking:(id)arg1;
- (void)sliderDidEndTracking:(id)arg1;
- (void)toggleVisibility:(id)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (id)transportControlsLayoutItem;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })unobscuredContentArea;
- (void)updateVisibilityPolicy:(unsigned long long)arg1 animated:(bool)arg2;
- (void)viewDidLayoutSubviews;
- (void)viewDidMoveToWindow:(id)arg1 shouldAppearOrDisappear:(bool)arg2;
- (void)viewSafeAreaInsetsDidChange;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (unsigned long long)visibileControls;
- (id)volumeControlsLayoutItem;
- (void)volumeControlsView:(id)arg1 volumeDidChangeTo:(double)arg2;
- (void)volumeControlsView:(id)arg1 volumeDidChangeTo:(double)arg2 withUpdateSource:(unsigned long long)arg3;
- (void)volumeControlsViewButtonWasTapped:(id)arg1;
- (void)volumeControlsViewInteractionDidBegin:(id)arg1;
- (void)volumeControlsViewInteractionDidEnd:(id)arg1;
- (void)webkitPlayerController:(id)arg1 didChangeScrubbingStateTo:(bool)arg2;
- (void)webkitPlayerController:(id)arg1 didUpdateSeekToTime:(double)arg2;

@end
