
@interface AVPlayerController : NSObject {
    long long  _actionAtItemEnd;
    AVPlayer * _activePlayer;
    double  _activeRate;
    bool  _allowsAudioPlayback;
    bool  _allowsPictureInPicturePlayback;
    AVAsset * _assetBeingPrepared;
    NSObject<OS_dispatch_queue> * _assetInspectionQueue;
    bool  _atLiveEdge;
    bool  _atMaxTime;
    bool  _atMinTime;
    NSArray * _audioMediaSelectionOptions;
    NSArray * _availableMetadataFormats;
    bool  _avkitSettingMuted;
    NSObject<OS_dispatch_queue> * _backgroundQueue;
    AVMediaSelectionOption * _cachedSelectedAudioMediaSelectionOption;
    AVMediaSelectionOption * _cachedSelectedLegibleMediaSelectionOption;
    AVMediaSelectionOption * _cachedSelectedLegibleMediaSelectionOptionAccordingToAVFoundation;
    bool  _canTogglePictureInPicture;
    long long  _canUseNetworkResourcesForLiveStreamingWhilePausedCount;
    bool  _compatibleWithAirPlayVideo;
    bool  _composable;
    NSArray * _contentChapters;
    bool  _coordinatedPlaybackActive;
    AVAsset * _currentAssetIfReady;
    AVAssetTrack * _currentAudioTrack;
    AVAssetTrack * _currentVideoTrack;
    double  _defaultPlaybackRate;
    bool  _didPreventSleepWhenStartingExternalPlayback;
    bool  _disablingAutomaticTermination;
    NSString * _externalPlaybackAirPlayDeviceLocalizedName;
    bool  _forceScanning;
    bool  _handlesAudioSessionInterruptions;
    bool  _hasBegunInspection;
    bool  _hasPendingAtLiveEdgeStateUpdate;
    bool  _hasProtectedContent;
    bool  _hasSetUpSeekableLiveStreamState;
    double  _initialScrubbingTime;
    bool  _inspectionSuspended;
    <AVPlayerControllerDelegate> * _internalDelegate;
    AVInterstitialController * _interstitialController;
    bool  _isDeallocating;
    bool  _isScanningBackward;
    bool  _isScanningForward;
    NSString * _lastKnownPersistedExtendedLanguageTag;
    NSDate * _lastTimePlayingOnMatchPointDeviceWasUpdated;
    NSArray * _legibleMediaSelectionOptions;
    NSTimer * _liveEdgeTimer;
    bool  _liveStreamEventModePossible;
    AVValueTiming * _liveStreamMaxTiming;
    AVValueTiming * _liveStreamMinTiming;
    bool  _looping;
    AVValueTiming * _maxTiming;
    NSDictionary * _metadata;
    AVValueTiming * _minTiming;
    bool  _muted;
    AVObservationController * _observationController;
    void * _observationInfo;
    bool  _pendingSeek;
    AVPlayerItemPhotosensitivityMetadataHandler * _photosensitivityMetadataHandler;
    NSArray * _photosensitivityRegions;
    bool  _pictureInPictureActive;
    bool  _pictureInPictureInterrupted;
    bool  _pictureInPictureSupported;
    NSString * _pipActivitySessionIdentifier;
    bool  _playbackSuspended;
    long long  _playbackSuspensionCount;
    AVPlayer * _player;
    AVPlayerLayer * _playerLayerForReducingResources;
    bool  _playingOnMatchPointDevice;
    bool  _playingOnSecondScreen;
    double  _preScanningRate;
    struct CGSize { 
        double width; 
        double height; 
    }  _presentationSize;
    bool  _preventingIdleDisplaySleep;
    bool  _preventingIdleSystemSleep;
    bool  _previousValueOfCanUseNetworkResourcesForLiveStreamingWhilePaused;
    double  _rateBeforeForceScanning;
    double  _rateBeforeScrubBegan;
    NSNumber * _rateToRestoreAfterAudioSessionInterruptionEnds;
    BSSimpleAssertion * _reduceResourceUsageAssertion;
    id /* block */  _retryPlayingImmediatelyBlock;
    unsigned long long  _scanningCount;
    bool  _scanningTV;
    AVCoordinatedPlaybackSuspension * _scrubCoordinatorSuspension;
    bool  _scrubbing;
    long long  _scrubbingCount;
    NSObject<OS_dispatch_queue> * _seekQueue;
    NSObject<OS_dispatch_source> * _seekTimer;
    double  _seekToTime;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _seekToTimeInternal;
    bool  _seeking;
    bool  _seekingInternal;
    bool  _shouldLoadVisualMediaSelectionOptions;
    bool  _shouldPlayImmediately;
    bool  _shouldPlayWhenLikelyToKeepUp;
    double  _suspendedRate;
    AVTimecodeController * _timecodeController;
    id  _timecodePeriodicObserverToken;
    AVValueTiming * _timing;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _toleranceAfter;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _toleranceBefore;
    bool  _touchBarRequiresLinearPlayback;
    id  _updateAtMinMaxTimePeriodicObserverToken;
    NSTimer * _updatePlayingOnMatchPointDeviceThrottleTimer;
    NSArray * _visualMediaSelectionOptions;
}

@property (nonatomic, retain) AVPlayer *activePlayer;
@property (nonatomic) double activeRate;
@property (nonatomic) bool allowsPictureInPicturePlayback;
@property (nonatomic, retain) AVAsset *assetBeingPrepared;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *assetInspectionQueue;
@property (getter=isAtLiveEdge, nonatomic) bool atLiveEdge;
@property (getter=isAtMaxTime, nonatomic) bool atMaxTime;
@property (getter=isAtMinTime, nonatomic) bool atMinTime;
@property (nonatomic, retain) NSArray *availableMetadataFormats;
@property (nonatomic) bool canTogglePictureInPicture;
@property (getter=isCompatibleWithAirPlayVideo, nonatomic) bool compatibleWithAirPlayVideo;
@property (getter=isComposable, nonatomic) bool composable;
@property (nonatomic, retain) NSArray *contentChapters;
@property (nonatomic) bool coordinatedPlaybackActive;
@property (nonatomic, retain) AVAsset *currentAssetIfReady;
@property (nonatomic, retain) AVAssetTrack *currentAudioTrack;
@property (nonatomic, readonly) NSDate *currentDate;
@property (nonatomic, readonly) NSDate *currentOrEstimatedDate;
@property (nonatomic, retain) AVMediaSelectionOption *currentVideoMediaSelectionOption;
@property (nonatomic, retain) AVAssetTrack *currentVideoTrack;
@property (getter=isDisablingAutomaticTermination, nonatomic) bool disablingAutomaticTermination;
@property (nonatomic, readonly) NSError *error;
@property (nonatomic, retain) NSString *externalPlaybackAirPlayDeviceLocalizedName;
@property (nonatomic) bool handlesAudioSessionInterruptions;
@property (nonatomic) bool hasBegunInspection;
@property (nonatomic) bool hasProtectedContent;
@property (nonatomic, readonly) bool hasReadableTimecodes;
@property (nonatomic) double initialScrubbingTime;
@property (nonatomic) <AVPlayerControllerDelegate> *internalDelegate;
@property (nonatomic, retain) AVInterstitialController *interstitialController;
@property (nonatomic, retain) AVValueTiming *maxTiming;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } maximumVideoResolution;
@property (nonatomic, retain) NSDictionary *metadata;
@property (nonatomic, retain) AVValueTiming *minTiming;
@property (nonatomic, readonly) AVObservationController *observationController;
@property (nonatomic, retain) NSArray *photosensitivityRegions;
@property (getter=isPictureInPictureActive, nonatomic) bool pictureInPictureActive;
@property (getter=isPictureInPictureSupported, nonatomic) bool pictureInPictureSupported;
@property (nonatomic, copy) NSString *pipActivitySessionIdentifier;
@property (getter=isPlaybackSuspended, nonatomic, readonly) bool playbackSuspended;
@property (nonatomic, retain) AVPlayer *player;
@property (nonatomic) AVPlayerLayer *playerLayerForReducingResources;
@property (getter=isPlayingOnMatchPointDevice, nonatomic, readonly) bool playingOnMatchPointDevice;
@property (getter=isPlayingOnMatchPointDevice, nonatomic) bool playingOnMatchPointDevice;
@property (getter=isPlayingOnSecondScreen, nonatomic) bool playingOnSecondScreen;
@property (nonatomic) struct CGSize { double x1; double x2; } presentationSize;
@property (getter=isPreventingIdleDisplaySleep, nonatomic) bool preventingIdleDisplaySleep;
@property (getter=isPreventingIdleSystemSleep, nonatomic) bool preventingIdleSystemSleep;
@property (nonatomic) double rateBeforeScrubBegan;
@property (getter=isReadyToPlay, nonatomic, readonly) bool readyToPlay;
@property (nonatomic, retain) BSSimpleAssertion *reduceResourceUsageAssertion;
@property (getter=_isScanningTV, nonatomic) bool scanningTV;
@property (nonatomic, retain) AVCoordinatedPlaybackSuspension *scrubCoordinatorSuspension;
@property (getter=isScrubbing, nonatomic) bool scrubbing;
@property (nonatomic, readonly) NSObject<OS_dispatch_source> *seekTimer;
@property (nonatomic) double seekToTime;
@property struct { long long x1; int x2; unsigned int x3; long long x4; } seekToTimeInternal;
@property (getter=isSeeking, nonatomic) bool seeking;
@property (getter=isSeekingInternal) bool seekingInternal;
@property (nonatomic) bool shouldLoadVisualMediaSelectionOptions;
@property (nonatomic, readonly) long long status;
@property (nonatomic, readonly) double suspendedRate;
@property (nonatomic, readonly) AVTimecodeController *timecodeController;
@property (nonatomic, retain) AVValueTiming *timing;
@property (nonatomic) bool touchBarRequiresLinearPlayback;
@property (nonatomic, readonly) bool usesExternalPlaybackWhileExternalScreenIsActive;
@property (nonatomic, readonly) NSArray *visualMediaSelectionOptions;

+ (id)_sortedAudibleOption:(id)arg1;
+ (bool)cachedIsPictureInPictureSupported;
+ (id)canonicalLanguageIdentifierFromString:(id)arg1;
+ (void)initialize;
+ (id)keyPathsForValuesAffectingActiveRate;
+ (id)keyPathsForValuesAffectingAllowsExternalPlayback;
+ (id)keyPathsForValuesAffectingCanPause;
+ (id)keyPathsForValuesAffectingCanPlay;
+ (id)keyPathsForValuesAffectingCanScanBackward;
+ (id)keyPathsForValuesAffectingCanScanForward;
+ (id)keyPathsForValuesAffectingCanSeek;
+ (id)keyPathsForValuesAffectingCanSeekChapterBackward;
+ (id)keyPathsForValuesAffectingCanSeekChapterForward;
+ (id)keyPathsForValuesAffectingCanSeekFrameBackward;
+ (id)keyPathsForValuesAffectingCanSeekFrameForward;
+ (id)keyPathsForValuesAffectingCanSeekToBeginning;
+ (id)keyPathsForValuesAffectingCanSeekToEnd;
+ (id)keyPathsForValuesAffectingCanTogglePlayback;
+ (id)keyPathsForValuesAffectingCompletelySeekable;
+ (id)keyPathsForValuesAffectingContentDimensions;
+ (id)keyPathsForValuesAffectingContentDuration;
+ (id)keyPathsForValuesAffectingContentDurationWithinEndTimes;
+ (id)keyPathsForValuesAffectingCurrentAudioMediaSelectionOption;
+ (id)keyPathsForValuesAffectingCurrentLegibleMediaSelectionOption;
+ (id)keyPathsForValuesAffectingCurrentTime;
+ (id)keyPathsForValuesAffectingCurrentTimeWithinEndTimes;
+ (id)keyPathsForValuesAffectingCurrentVideoMediaSelectionOption;
+ (id)keyPathsForValuesAffectingDefaultPlaybackRate;
+ (id)keyPathsForValuesAffectingError;
+ (id)keyPathsForValuesAffectingExternalPlaybackActive;
+ (id)keyPathsForValuesAffectingExternalPlaybackType;
+ (id)keyPathsForValuesAffectingForwardPlaybackEndTime;
+ (id)keyPathsForValuesAffectingHasAudioMediaSelectionOptions;
+ (id)keyPathsForValuesAffectingHasContent;
+ (id)keyPathsForValuesAffectingHasContentChapters;
+ (id)keyPathsForValuesAffectingHasEnabledAudio;
+ (id)keyPathsForValuesAffectingHasEnabledVideo;
+ (id)keyPathsForValuesAffectingHasLegibleMediaSelectionOptions;
+ (id)keyPathsForValuesAffectingHasLiveStreamingContent;
+ (id)keyPathsForValuesAffectingHasMediaSelectionOptions;
+ (id)keyPathsForValuesAffectingHasSeekableLiveStreamingContent;
+ (id)keyPathsForValuesAffectingHasShareableContent;
+ (id)keyPathsForValuesAffectingHasTrimmableContent;
+ (id)keyPathsForValuesAffectingHasVideo;
+ (id)keyPathsForValuesAffectingLoadedTimeRanges;
+ (id)keyPathsForValuesAffectingMaxTime;
+ (id)keyPathsForValuesAffectingMaximumVideoResolution;
+ (id)keyPathsForValuesAffectingMinTime;
+ (id)keyPathsForValuesAffectingPictureInPicturePossible;
+ (id)keyPathsForValuesAffectingPlayableOffline;
+ (id)keyPathsForValuesAffectingPlaying;
+ (id)keyPathsForValuesAffectingPlayingOnExternalScreen;
+ (id)keyPathsForValuesAffectingPreferredDisplayCriteria;
+ (id)keyPathsForValuesAffectingRate;
+ (id)keyPathsForValuesAffectingReadyToPlay;
+ (id)keyPathsForValuesAffectingReversePlaybackEndTime;
+ (id)keyPathsForValuesAffectingSeekableTimeRanges;
+ (id)keyPathsForValuesAffectingStatus;
+ (id)keyPathsForValuesAffectingStreaming;
+ (id)keyPathsForValuesAffectingTimeControlStatus;
+ (id)keyPathsForValuesAffectingUsesExternalPlaybackWhileExternalScreenIsActive;
+ (id)keyPathsForValuesAffectingVolume;
+ (id)keyPathsForValuesAffectingpreferredTransform;
+ (void)setCachedIsPictureInPictureSupported:(bool)arg1;

- (void).cxx_destruct;
- (double)_adjustedSeekTimeFromTime:(double)arg1 toTime:(double)arg2;
- (bool)_assetContainsProResRaw:(id)arg1;
- (bool)_assetIsMarkedNotSerializable:(id)arg1;
- (bool)_assetIsRestrictedFromSaving:(id)arg1;
- (void)_beginPlaybackSuspension_AVFoundationStrategy;
- (void)_cancelOutstandingAtLiveEdgeStateUpdates;
- (void)_cancelPendingSeeksIfNeeded;
- (void)_commonInit;
- (id)_createMetadataDictionaryForCurrentAsset;
- (void)_disableLegibleMediaSelectionOptions:(id)arg1;
- (void)_enableAutoMediaSelection:(id)arg1;
- (void)_endPlaybackSuspension_AVFoundationStrategy;
- (void)_ensureUserCaptionDisplayType:(long long)arg1;
- (bool)_isScanningTV;
- (bool)_mediaSelectionCriteriaCanBeAppliedAutomaticallyToLegibleMediaSelectionGroup;
- (void)_observeValueForKeyPath:(id)arg1 oldValue:(id)arg2 newValue:(id)arg3;
- (id)_optionsForGroup:(id)arg1;
- (id)_outputContext;
- (void)_performAutomaticMediaSelectionForUserCaptionDisplayType:(long long)arg1;
- (id)_photosensitiveDisplayTimes;
- (void)_playAtRate:(double)arg1;
- (void)_prepareAssetForInspectionIfNeeded;
- (id)_queuePlayer;
- (void)_retryPlayImmediatelyIfNeeded;
- (void)_scheduleAtLiveEdgeStateUpdateIfNeeded;
- (void)_scheduleAtLiveEdgeStateUpdateWithTimeInterval:(double)arg1;
- (id)_selectedMediaOptionWithMediaCharacteristic:(id)arg1;
- (void)_setMediaOption:(id)arg1 mediaCharacteristic:(id)arg2;
- (void)_setMinTiming:(id)arg1 maxTiming:(id)arg2;
- (void)_setNeedsAtLiveEdgeStateUpdate;
- (void)_setPlaybackSuspended:(bool)arg1;
- (void)_setRate_AVFoundationStrategy:(double)arg1;
- (void)_setSuspendedRate:(double)arg1;
- (void)_setupInterstitialController;
- (void)_startSuspendingPlayback;
- (void)_stopSuspendingPlayback;
- (void)_throttledUpdatePlayingOnMatchPointDeviceIfNeededWithContext:(id)arg1;
- (id)_timecodeTrack;
- (void)_updateActivePlayer;
- (void)_updateAtLiveEdgeStateAndScheduleTimerIfNeeded;
- (void)_updateAtLiveEdgeStateIfNeeded;
- (void)_updateCoordinatedPlaybackActive;
- (void)_updateCurrentAudioTrackIfNeeded;
- (void)_updateCurrentVideoTrackIfNeeded;
- (void)_updateExternalPlaybackAirPlayDeviceLocalizedNameIfNeeded;
- (void)_updateMetadata;
- (void)_updateMinMaxTimingIfNeeded;
- (void)_updatePhotosensitivityRegions;
- (void)_updatePlayerMutedState;
- (void)_updatePlayingOnMatchPointDeviceIfNeeded;
- (void)_updateRateForScrubbingAndSeeking;
- (void)_updateScanningBackwardRate;
- (void)_updateScanningForwardRate;
- (void)acquireResourceReductionAssertion;
- (id)activePlayer;
- (double)activeRate;
- (void)actuallySeekToTime;
- (bool)allowsAudioPlayback;
- (bool)allowsExternalPlayback;
- (bool)allowsPictureInPicturePlayback;
- (id)assetBeingPrepared;
- (id)assetInspectionQueue;
- (id)audioMediaSelectionOptions;
- (id)audioOptions;
- (id)audioWaveform;
- (void)autoplay:(id)arg1;
- (id)availableMetadataFormats;
- (bool)avkit_isAVPlayerControllerOrSubclass;
- (void)beginPlaybackSuspension;
- (void)beginReducingResourcesForPictureInPicturePlayerLayer:(id)arg1;
- (void)beginScanningBackward:(id)arg1;
- (void)beginScanningForward:(id)arg1;
- (void)beginScrubbing;
- (void)beginScrubbing:(id)arg1;
- (bool)canPause;
- (bool)canPlay;
- (bool)canPlayImmediately;
- (bool)canScanBackward;
- (bool)canScanForward;
- (bool)canSeek;
- (bool)canSeekChapterBackward;
- (bool)canSeekChapterForward;
- (bool)canSeekFrameBackward;
- (bool)canSeekFrameForward;
- (bool)canSeekToBeginning;
- (bool)canSeekToEnd;
- (bool)canTogglePictureInPicture;
- (bool)canTogglePlayback;
- (bool)canUseNetworkResourcesForLiveStreamingWhilePaused;
- (void)changeVolumeToMaximum:(id)arg1;
- (void)changeVolumeToMinimum:(id)arg1;
- (id)contentChapters;
- (struct CGSize { double x1; double x2; })contentDimensions;
- (double)contentDuration;
- (double)contentDurationWithinEndTimes;
- (bool)coordinatedPlaybackActive;
- (id)currentAssetIfReady;
- (id)currentAudioMediaSelectionOption;
- (id)currentAudioTrack;
- (id)currentDate;
- (id)currentEnabledAssetTrackForMediaType:(id)arg1;
- (id)currentLegibleMediaSelectionOption;
- (id)currentOrEstimatedDate;
- (double)currentTime;
- (double)currentTimeWithinEndTimes;
- (id)currentVideoMediaSelectionOption;
- (id)currentVideoTrack;
- (void)dealloc;
- (void)decreaseVolume:(id)arg1;
- (double)defaultPlaybackRate;
- (void)endPlaybackSuspension;
- (void)endReducingResourcesForPictureInPicturePlayerLayer:(id)arg1;
- (void)endScanningBackward:(id)arg1;
- (void)endScanningForward:(id)arg1;
- (void)endScrubbing;
- (void)endScrubbing:(id)arg1;
- (id)error;
- (id)externalPlaybackAirPlayDeviceLocalizedName;
- (long long)externalPlaybackType;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })forwardPlaybackEndTime;
- (long long)frameNumberForCurrentTime;
- (void)gotoEndOfSeekableRanges:(id)arg1;
- (bool)handlesAudioSessionInterruptions;
- (bool)hasAudioMediaSelectionOptions;
- (bool)hasBegunInspection;
- (bool)hasContent;
- (bool)hasContentChapters;
- (bool)hasEnabledAudio;
- (bool)hasEnabledVideo;
- (bool)hasLegibleMediaSelectionOptions;
- (bool)hasLiveStreamingContent;
- (bool)hasMediaSelectionOptions;
- (bool)hasProtectedContent;
- (bool)hasReadableTimecodes;
- (bool)hasSeekableLiveStreamingContent;
- (bool)hasShareableContent;
- (bool)hasTimecodes;
- (bool)hasTrimmableContent;
- (bool)hasVideo;
- (void)increaseVolume:(id)arg1;
- (id)init;
- (id)initWithPlayer:(id)arg1;
- (double)initialScrubbingTime;
- (id)internalDelegate;
- (id)interstitialController;
- (bool)isAtLiveEdge;
- (bool)isAtMaxTime;
- (bool)isAtMinTime;
- (bool)isCompatibleWithAirPlayVideo;
- (bool)isCompletelySeekable;
- (bool)isComposable;
- (bool)isDisablingAutomaticTermination;
- (bool)isExternalPlaybackActive;
- (bool)isInspectionSuspended;
- (bool)isLooping;
- (bool)isMuted;
- (bool)isPictureInPictureActive;
- (bool)isPictureInPictureInterrupted;
- (bool)isPictureInPicturePossible;
- (bool)isPictureInPictureSupported;
- (bool)isPlayableOffline;
- (bool)isPlaybackSuspended;
- (bool)isPlaying;
- (bool)isPlayingOnExternalScreen;
- (bool)isPlayingOnMatchPointDevice;
- (bool)isPlayingOnSecondScreen;
- (bool)isPreventingIdleDisplaySleep;
- (bool)isPreventingIdleSystemSleep;
- (bool)isReadyToPlay;
- (bool)isReducingResourcesForPictureInPicture;
- (bool)isScrubbing;
- (bool)isSeeking;
- (bool)isSeekingInternal;
- (bool)isStreaming;
- (id)legibleMediaSelectionOptions;
- (id)legibleOptions;
- (id)loadTimecodeControllerIfNeeded;
- (id)loadedTimeRanges;
- (id)maxFrameCountString;
- (double)maxTime;
- (id)maxTimecode;
- (id)maxTiming;
- (struct CGSize { double x1; double x2; })maximumVideoResolution;
- (id)mediaSelectionGroupForMediaCharacteristic:(id)arg1;
- (id)metadata;
- (double)minTime;
- (id)minTiming;
- (float)nominalFrameRate;
- (id)observationController;
- (void*)observationInfo;
- (void)pause:(id)arg1;
- (void)pauseForAllCoordinatedPlaybackParticipants:(bool)arg1;
- (id)photosensitivityRegions;
- (id)pipActivitySessionIdentifier;
- (void)play:(id)arg1;
- (id)player;
- (id)playerLayerForReducingResources;
- (id)preferredDisplayCriteria;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })preferredTransform;
- (struct CGSize { double x1; double x2; })presentationSize;
- (double)rate;
- (double)rateBeforeScrubBegan;
- (id)reduceResourceUsageAssertion;
- (void)reloadAudioOptions;
- (void)reloadLegibleOptions;
- (void)reloadOptions;
- (void)reloadOptionsAndCurrentSelections;
- (void)reloadOptionsAssumingMediaOptionsMayHaveChanged:(bool)arg1;
- (void)reloadVisualOptions;
- (void)resumePlaybackCoordinatorIfSuspended;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })reversePlaybackEndTime;
- (void)scanBackward:(id)arg1;
- (void)scanForward:(id)arg1;
- (id)scanningDelays;
- (id)scrubCoordinatorSuspension;
- (void)seekByTimeInterval:(double)arg1;
- (void)seekByTimeInterval:(double)arg1 toleranceBefore:(double)arg2 toleranceAfter:(double)arg3;
- (void)seekChapterBackward:(id)arg1;
- (void)seekChapterForward:(id)arg1;
- (void)seekFrameBackward:(id)arg1;
- (void)seekFrameForward:(id)arg1;
- (void)seekOrStepByFrameCount:(long long)arg1;
- (id)seekTimer;
- (void)seekToBeginning:(id)arg1;
- (void)seekToCMTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 toleranceBefore:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 toleranceAfter:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3;
- (void)seekToChapter:(id)arg1;
- (void)seekToEnd:(id)arg1;
- (void)seekToFrame:(long long)arg1;
- (double)seekToTime;
- (void)seekToTime:(double)arg1;
- (void)seekToTime:(double)arg1 toleranceBefore:(double)arg2 toleranceAfter:(double)arg3;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })seekToTimeInternal;
- (void)seekToTimecode:(id)arg1;
- (id)seekableTimeRanges;
- (void)selectedMediaOptionMayHaveChanged;
- (void)selectedMediaOptionMayHaveChanged:(bool)arg1;
- (void)setActivePlayer:(id)arg1;
- (void)setActiveRate:(double)arg1;
- (void)setAllowsAudioPlayback:(bool)arg1;
- (void)setAllowsExternalPlayback:(bool)arg1;
- (void)setAllowsPictureInPicturePlayback:(bool)arg1;
- (void)setAssetBeingPrepared:(id)arg1;
- (void)setAssetInspectionQueue:(id)arg1;
- (void)setAtLiveEdge:(bool)arg1;
- (void)setAtMaxTime:(bool)arg1;
- (void)setAtMinTime:(bool)arg1;
- (void)setAudioMediaSelectionOptions:(id)arg1;
- (void)setAvailableMetadataFormats:(id)arg1;
- (void)setCanTogglePictureInPicture:(bool)arg1;
- (void)setCanUseNetworkResourcesForLiveStreamingWhilePaused:(bool)arg1;
- (void)setCompatibleWithAirPlayVideo:(bool)arg1;
- (void)setComposable:(bool)arg1;
- (void)setContentChapters:(id)arg1;
- (void)setCoordinatedPlaybackActive:(bool)arg1;
- (void)setCurrentAssetIfReady:(id)arg1;
- (void)setCurrentAudioMediaSelectionOption:(id)arg1;
- (void)setCurrentAudioTrack:(id)arg1;
- (void)setCurrentLegibleMediaSelectionOption:(id)arg1;
- (void)setCurrentVideoTrack:(id)arg1;
- (void)setDefaultPlaybackRate:(double)arg1;
- (void)setDisablingAutomaticTermination:(bool)arg1;
- (void)setExternalPlaybackAirPlayDeviceLocalizedName:(id)arg1;
- (void)setForwardPlaybackEndTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setHandlesAudioSessionInterruptions:(bool)arg1;
- (void)setHasBegunInspection:(bool)arg1;
- (void)setHasProtectedContent:(bool)arg1;
- (void)setInitialScrubbingTime:(double)arg1;
- (void)setInspectionSuspended:(bool)arg1;
- (void)setInternalDelegate:(id)arg1;
- (void)setInterstitialController:(id)arg1;
- (void)setLegibleMediaSelectionOptions:(id)arg1;
- (void)setLegibleMediaSelectionOptions:(id)arg1 audioMediaSelectionOptions:(id)arg2 assumeMediaOptionMayHaveChanged:(bool)arg3;
- (void)setLooping:(bool)arg1;
- (void)setMaxTime:(double)arg1;
- (void)setMaxTiming:(id)arg1;
- (void)setMetadata:(id)arg1;
- (void)setMinTime:(double)arg1;
- (void)setMinTiming:(id)arg1;
- (void)setMuted:(bool)arg1;
- (void)setObservationInfo:(void*)arg1;
- (void)setPhotosensitivityRegions:(id)arg1;
- (void)setPictureInPictureActive:(bool)arg1;
- (void)setPictureInPictureInterrupted:(bool)arg1;
- (void)setPictureInPictureSupported:(bool)arg1;
- (void)setPipActivitySessionIdentifier:(id)arg1;
- (void)setPlayer:(id)arg1;
- (void)setPlayerLayerForReducingResources:(id)arg1;
- (void)setPlaying:(bool)arg1;
- (void)setPlayingOnMatchPointDevice:(bool)arg1;
- (void)setPlayingOnSecondScreen:(bool)arg1;
- (void)setPresentationSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setPreventingIdleDisplaySleep:(bool)arg1;
- (void)setPreventingIdleSystemSleep:(bool)arg1;
- (void)setRate:(double)arg1;
- (void)setRateBeforeScrubBegan:(double)arg1;
- (void)setRateWithForce:(double)arg1;
- (void)setReduceResourceUsageAssertion:(id)arg1;
- (void)setReversePlaybackEndTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setScanningTV:(bool)arg1;
- (void)setScrubCoordinatorSuspension:(id)arg1;
- (void)setScrubbing:(bool)arg1;
- (void)setSeekToTime:(double)arg1;
- (void)setSeekToTimeInternal:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setSeeking:(bool)arg1;
- (void)setSeekingInternal:(bool)arg1;
- (void)setShouldLoadVisualMediaSelectionOptions:(bool)arg1;
- (void)setTiming:(id)arg1;
- (void)setTouchBarRequiresLinearPlayback:(bool)arg1;
- (void)setVisualMediaSelectionOptions:(id)arg1;
- (void)setVolume:(double)arg1;
- (bool)shouldLoadVisualMediaSelectionOptions;
- (void)skipBackwardThirtySeconds:(id)arg1;
- (bool)startGeneratingTimecodesUsingBlock:(id /* block */)arg1;
- (void)startInspectionIfNeeded;
- (void)startKVO;
- (void)startUsingNetworkResourcesForLiveStreamingWhilePaused;
- (long long)status;
- (void)stopGeneratingTimecodes;
- (void)stopUsingNetworkResourcesForLiveStreamingWhilePaused;
- (void)suspendPlaybackCoordinatorWhileActivelySeekingIfNecessary;
- (double)suspendedRate;
- (void)throttledSeekToTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 toleranceBefore:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 toleranceAfter:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3;
- (long long)timeControlStatus;
- (id)timecodeController;
- (id)timecodeForCurrentTime;
- (double)timecodeObservationInterval;
- (id)timing;
- (void)toggleMuted:(id)arg1;
- (void)togglePictureInPicture:(id)arg1;
- (void)togglePlayback:(id)arg1;
- (void)togglePlaybackEvenWhenInBackground:(id)arg1;
- (bool)touchBarRequiresLinearPlayback;
- (void)updateAtMinMaxTime;
- (void)updateMinMaxTiming;
- (void)updateTiming;
- (bool)usesExternalPlaybackWhileExternalScreenIsActive;
- (id)visualMediaSelectionOptions;
- (id)visualOptions;
- (double)volume;

@end
