
@interface AVPlaybackControlsController : NSObject <AVControlOverflowButtonDelegate, AVMediaSelectionMenuDelegate, AVPlayerViewControllerContentViewDelegate_Gen1, AVRoutePickerViewDelegate, AVScrubbing, AVTransportControlsViewDelegate, AVVolumeControlsControllerDelegate> {
    id  _AVRouteDetectorCoordinatorMultipleRoutesDetectedObserver;
    bool  _allowsEnteringFullScreen;
    bool  _canHidePlaybackControls;
    bool  _canIncludePlaybackControlsWhenInline;
    bool  _canIncludeVideoGravityButton;
    UIViewPropertyAnimator * _collapseExpandSliderAnimator;
    id /* block */  _contentTransitionAction;
    bool  _coveringWindow;
    NSArray * _customControlItems;
    AVTimeFormatter * _elapsedTimeFormatter;
    bool  _entersFullScreenWhenPlaybackBegins;
    bool  _forcePlaybackControlsHidden;
    bool  _hasBecomeReadyToPlay;
    bool  _hasBegunObservingPotentiallyUnimplementedPlayerControllerProperties;
    bool  _hasCustomPlaybackControls;
    bool  _hasPlaybackBegunSincePlayerControllerBecameReadyToPlay;
    bool  _hasSeekableLiveStreamingContent;
    bool  _hasStartedUpdates;
    bool  _hidingItemsForTransition;
    NSTimer * _loadingIndicatorTimer;
    double  _loadingIndicatorTimerDelay;
    AVMediaSelectionMenuController * _mediaSelectionMenuController;
    bool  _multipleRoutesDetected;
    AVNowPlayingInfoController * _nowPlayingInfoControllerIfLoaded;
    AVObservationController * _observationController;
    NSNumber * _pendingOrientationChange;
    bool  _pictureInPictureActive;
    AVPictureInPictureController * _pictureInPictureController;
    id /* block */  _playButtonHandlerForLazyPlayerLoading;
    bool  _playbackControlsIncludeDisplayModeControls;
    bool  _playbackControlsIncludeStartContentTransitionButtons;
    bool  _playbackControlsIncludeTransportControls;
    bool  _playbackControlsIncludeVolumeControls;
    AVObservationController * _playbackControlsObservationController;
    AVPlaybackControlsView * _playbackControlsView;
    NSTimer * _playbackControlsVisibilityTimer;
    AVMobilePlaybackRateMenuController * _playbackRateMenuController;
    AVPlaybackSpeedCollection * _playbackSpeedCollection;
    bool  _playbackSuspendedForScrubbing;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _playbackViewFrame;
    AVPlayerController * _playerController;
    NSUUID * _playerMuteFadeAnimationID;
    AVPlayerViewController * _playerViewController;
    bool  _playerViewControllerHasInvalidViewControllerHierarchy;
    bool  _playerViewControllerIsBeingTransitionedWithResizing;
    bool  _playerViewControllerIsPresentedFullScreen;
    bool  _playerViewControllerIsPresentingFullScreen;
    bool  _popoverIsBeingPresented;
    long long  _preferredUnobscuredArea;
    bool  _prefersMuted;
    AVTimeFormatter * _remainingTimeFormatter;
    bool  _requiresLinearPlayback;
    bool  _resumingUpdates;
    AVRouteDetectorCoordinator * _routeDetectorCoordinator;
    UIAlertController * _routePickerAlertController;
    bool  _scrubbingOrSeeking;
    id  _selectedPlaybackSpeedObservationToken;
    bool  _shouldIgnoreTimeResolverUpdates;
    bool  _showingPlaybackControls;
    bool  _showingVolumeControlInTransportBar;
    bool  _showsDoneButtonWhenFullScreen;
    bool  _showsLoadingIndicator;
    bool  _showsMinimalPlaybackControlsWhenEmbeddedInline;
    bool  _showsPictureInPictureButton;
    bool  _showsPlaybackControls;
    bool  _showsPlaybackSpeedButton;
    bool  _showsTimecodes;
    bool  _showsVideoGravityButton;
    bool  _showsVolumeControlsForContentWithNoAudio;
    bool  _startLeftwardContentTransitionButtonEnabled;
    bool  _startRightwardContentTransitionButtonEnabled;
    long long  _timeControlStatus;
    AVPlayerControllerTimeResolver * _timeResolver;
    NSArray * _transportBarCustomMenuItems;
    AVTurboModePlaybackControlsPlaceholderView * _turboModePlaybackControlsPlaceholderView;
    NSString * _uniqueIdentifer;
    unsigned long long  _userInteractingCount;
    long long  _videoGravityButtonType;
    bool  _videoScaled;
    AVPlayerControllerVolumeAnimator * _volumeAnimator;
    <AVVolumeController> * _volumeController;
    bool  _volumeControlsCanShowSlider;
    bool  _wantsExternalPlaybackButtonShown;
    NSString * _windowSceneSessionIdentifier;
}

@property (nonatomic, retain) id AVRouteDetectorCoordinatorMultipleRoutesDetectedObserver;
@property (nonatomic) bool allowsEnteringFullScreen;
@property (nonatomic) bool canHidePlaybackControls;
@property (nonatomic) bool canIncludePlaybackControlsWhenInline;
@property (nonatomic) bool canIncludeVideoGravityButton;
@property (nonatomic, readonly) bool canShowLoadingIndicator;
@property (nonatomic) UIViewPropertyAnimator *collapseExpandSliderAnimator;
@property (nonatomic, copy) id /* block */ contentTransitionAction;
@property (getter=isCoveringWindow, nonatomic) bool coveringWindow;
@property (nonatomic, readonly) double currentTime;
@property (nonatomic, copy) NSArray *customControlItems;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) AVTimeFormatter *elapsedTimeFormatter;
@property (nonatomic) bool entersFullScreenWhenPlaybackBegins;
@property (nonatomic, readonly) bool entersFullScreenWhenTapped;
@property (nonatomic) bool forcePlaybackControlsHidden;
@property (getter=isFullScreen, nonatomic, readonly) bool fullScreen;
@property (nonatomic) bool hasBecomeReadyToPlay;
@property (nonatomic) bool hasBegunObservingPotentiallyUnimplementedPlayerControllerProperties;
@property (nonatomic) bool hasCustomPlaybackControls;
@property (nonatomic) bool hasPlaybackBegunSincePlayerControllerBecameReadyToPlay;
@property (nonatomic) bool hasSeekableLiveStreamingContent;
@property (nonatomic) bool hasStartedUpdates;
@property (readonly) unsigned long long hash;
@property (getter=isHidingItemsForTransition, nonatomic) bool hidingItemsForTransition;
@property (nonatomic) NSTimer *loadingIndicatorTimer;
@property (nonatomic) double loadingIndicatorTimerDelay;
@property (nonatomic, readonly) double maximumTime;
@property (nonatomic, retain) AVMediaSelectionMenuController *mediaSelectionMenuController;
@property (nonatomic, readonly) double minimumTime;
@property (nonatomic) bool multipleRoutesDetected;
@property (nonatomic, readonly) bool needsTimeResolver;
@property (nonatomic, readonly) AVNowPlayingInfoController *nowPlayingInfoControllerIfLoaded;
@property (nonatomic, readonly) AVObservationController *observationController;
@property (nonatomic, retain) NSNumber *pendingOrientationChange;
@property (getter=isPictureInPictureActive, nonatomic) bool pictureInPictureActive;
@property (nonatomic, retain) AVPictureInPictureController *pictureInPictureController;
@property (nonatomic, copy) id /* block */ playButtonHandlerForLazyPlayerLoading;
@property (nonatomic, readonly) bool playButtonsShowPauseGlyph;
@property (nonatomic) bool playbackControlsIncludeDisplayModeControls;
@property (nonatomic) bool playbackControlsIncludeStartContentTransitionButtons;
@property (nonatomic) bool playbackControlsIncludeTransportControls;
@property (nonatomic) bool playbackControlsIncludeVolumeControls;
@property (nonatomic, retain) AVObservationController *playbackControlsObservationController;
@property (nonatomic, retain) AVPlaybackControlsView *playbackControlsView;
@property (nonatomic, retain) NSTimer *playbackControlsVisibilityTimer;
@property (nonatomic, retain) AVMobilePlaybackRateMenuController *playbackRateMenuController;
@property (nonatomic, retain) AVPlaybackSpeedCollection *playbackSpeedCollection;
@property (getter=isPlaybackSuspendedForScrubbing, nonatomic) bool playbackSuspendedForScrubbing;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } playbackViewFrame;
@property (nonatomic) AVPlayerController *playerController;
@property (nonatomic, retain) NSUUID *playerMuteFadeAnimationID;
@property (nonatomic, readonly) AVPlayerViewController *playerViewController;
@property (nonatomic) bool playerViewControllerHasInvalidViewControllerHierarchy;
@property (nonatomic) bool playerViewControllerIsBeingTransitionedWithResizing;
@property (nonatomic) bool playerViewControllerIsPresentedFullScreen;
@property (nonatomic) bool playerViewControllerIsPresentingFullScreen;
@property (getter=isPopoverBeingPresented, nonatomic) bool popoverIsBeingPresented;
@property (nonatomic) long long preferredUnobscuredArea;
@property (nonatomic) bool prefersMuted;
@property (nonatomic, readonly) bool prefersStatusBarHidden;
@property (nonatomic, readonly) bool prominentPlayButtonCanShowPauseGlyph;
@property (nonatomic, readonly) AVTimeFormatter *remainingTimeFormatter;
@property (nonatomic) bool requiresLinearPlayback;
@property (getter=isResumingUpdates, nonatomic) bool resumingUpdates;
@property (nonatomic, retain) AVRouteDetectorCoordinator *routeDetectorCoordinator;
@property (nonatomic) UIAlertController *routePickerAlertController;
@property (getter=isScrubbingOrSeeking, nonatomic) bool scrubbingOrSeeking;
@property (getter=isSeekingEnabled, nonatomic, readonly) bool seekingEnabled;
@property (nonatomic, readonly) bool shouldEnterFullScreenWhenPlaybackBegins;
@property (nonatomic) bool shouldIgnoreTimeResolverUpdates;
@property (getter=isShowingPlaybackControls, nonatomic) bool showingPlaybackControls;
@property (getter=shouldShowVolumeControlInTransportBar, nonatomic) bool showingVolumeControlInTransportBar;
@property (nonatomic) bool showsDoneButtonWhenFullScreen;
@property (nonatomic) bool showsLoadingIndicator;
@property (nonatomic, readonly) bool showsMediaSelectionButton;
@property (nonatomic) bool showsMinimalPlaybackControlsWhenEmbeddedInline;
@property (nonatomic) bool showsPictureInPictureButton;
@property (nonatomic) bool showsPlaybackControls;
@property (nonatomic) bool showsPlaybackSpeedButton;
@property (nonatomic, readonly) bool showsProminentPlayButton;
@property (nonatomic, readonly) bool showsRoutePickerView;
@property (nonatomic, readonly) bool showsSkipButtons;
@property (nonatomic, readonly) bool showsStartContentTransitionButtons;
@property (nonatomic) bool showsTimecodes;
@property (nonatomic, readonly) bool showsTransportControls;
@property (nonatomic) bool showsVideoGravityButton;
@property (nonatomic) bool showsVolumeControlsForContentWithNoAudio;
@property (getter=isStartLeftwardContentTransitionButtonEnabled, nonatomic) bool startLeftwardContentTransitionButtonEnabled;
@property (getter=isStartRightwardContentTransitionButtonEnabled, nonatomic) bool startRightwardContentTransitionButtonEnabled;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool tapGestureRecognizersCanReceiveTouches;
@property (nonatomic, readonly) double targetTime;
@property (nonatomic) long long timeControlStatus;
@property (nonatomic, retain) AVPlayerControllerTimeResolver *timeResolver;
@property (nonatomic, copy) NSArray *transportBarCustomMenuItems;
@property (nonatomic) AVTurboModePlaybackControlsPlaceholderView *turboModePlaybackControlsPlaceholderView;
@property (nonatomic, readonly) NSString *uniqueIdentifer;
@property (getter=isUserInteracting, nonatomic, readonly) bool userInteracting;
@property (nonatomic) unsigned long long userInteractingCount;
@property (nonatomic) long long videoGravityButtonType;
@property (getter=isVideoScaled, nonatomic) bool videoScaled;
@property (nonatomic, retain) AVPlayerControllerVolumeAnimator *volumeAnimator;
@property (nonatomic, retain) <AVVolumeController> *volumeController;
@property (nonatomic) bool volumeControlsCanShowSlider;
@property (nonatomic) bool wantsExternalPlaybackButtonShown;
@property (nonatomic, retain) NSString *windowSceneSessionIdentifier;

+ (id)keyPathsForValuesAffectingCanShowLoadingIndicator;
+ (id)keyPathsForValuesAffectingCurrentTime;
+ (id)keyPathsForValuesAffectingFullScreen;
+ (id)keyPathsForValuesAffectingMaximumTime;
+ (id)keyPathsForValuesAffectingMinimumTime;
+ (id)keyPathsForValuesAffectingNeedsTimeResolver;
+ (id)keyPathsForValuesAffectingPlayButtonsShowPauseGlyph;
+ (id)keyPathsForValuesAffectingProminentPlayButtonCanShowPauseGlyph;
+ (id)keyPathsForValuesAffectingSeekingEnabled;
+ (id)keyPathsForValuesAffectingShouldEnterFullScreenWhenPlaybackBegins;
+ (id)keyPathsForValuesAffectingShowsMediaSelectionButton;
+ (id)keyPathsForValuesAffectingShowsProminentPlayButton;
+ (id)keyPathsForValuesAffectingShowsRoutePickerView;
+ (id)keyPathsForValuesAffectingShowsSkipButtons;
+ (id)keyPathsForValuesAffectingShowsStartContentTransitionButtons;
+ (id)keyPathsForValuesAffectingShowsTransportControls;

- (void).cxx_destruct;
- (id)AVRouteDetectorCoordinatorMultipleRoutesDetectedObserver;
- (void)_autoHideControlsAfterDelay:(double)arg1;
- (void)_bindEnabledStateOfControls:(id)arg1 toKeyPath:(id)arg2;
- (void)_bindInclusionOfControlItems:(id)arg1 toKeyPath:(id)arg2;
- (void)_handlePhotosensitiveRegions;
- (void)_hideContextMenusIfPresented;
- (void)_observeBoolForKeyPath:(id)arg1 usingKeyValueObservationController:(id)arg2 observationHandler:(id /* block */)arg3;
- (bool)_prefersVolumeSliderExpandedAutomatically;
- (void)_seekByTimeInterval:(double)arg1 toleranceBefore:(double)arg2 toleranceAfter:(double)arg3;
- (void)_showOrHideDisplayModeControls;
- (void)_startObservingForPlaybackViewUpdates;
- (void)_startObservingPotentiallyUnimplementedPlayerControllerProperties;
- (void)_updateContainerInclusion;
- (void)_updateControlInclusion;
- (void)_updateHasPlaybackBegunSincePlayerControllerBecameReadyToPlay:(bool)arg1 playing:(bool)arg2 userDidEndTappingProminentPlayButton:(bool)arg3;
- (void)_updateOrCreateTimeResolverIfNeeded;
- (void)_updatePhotosensitivityRegions;
- (void)_updatePlaybackControlsVisibilityWantsPlaybackControlsVisible:(bool)arg1;
- (void)_updatePlaybackControlsVisibleAndObservingUpdates;
- (void)_updatePlaybackSpeedControlInclusion;
- (void)_updateRouteDetectionEnabled;
- (void)_updateScrubberAndTimeLabels;
- (void)_updateSkipButtonsEnableLongPress;
- (void)_updateTransportBarCustomMenuItemsIfNeeded;
- (void)_updateVideoGravityButtonType;
- (void)_updateVolumeButtonGlyph;
- (void)_updateVolumeButtonInclusionAndPrefersVolumeSliderExpandedWithPreferredExpansion:(bool)arg1;
- (void)_updateVolumeControllerView;
- (void)_updateVolumeSliderValueWithSystemVolume:(float)arg1 animated:(bool)arg2;
- (id)_volumeButtonMicaPackageState;
- (bool)_wantsRouteDetectionEnabled;
- (bool)allowsEnteringFullScreen;
- (void)beginChangingVolume;
- (void)beginHidingItemsForTransition;
- (void)beginScrubbing;
- (void)beginShowingItemsDueToIndirectUserInteraction;
- (void)beginUserInteraction;
- (bool)canHidePlaybackControls;
- (bool)canIncludePlaybackControlsWhenInline;
- (bool)canIncludeVideoGravityButton;
- (bool)canShowLoadingIndicator;
- (id)collapseExpandSliderAnimator;
- (id /* block */)contentTransitionAction;
- (double)currentTime;
- (id)customControlItems;
- (void)dealloc;
- (id)elapsedTimeFormatter;
- (void)endChangingVolume;
- (void)endHidingItemsForTransitionAndShowImmediately:(bool)arg1;
- (void)endScrubbing;
- (void)endShowingItemsDueToIndirectUserInteraction;
- (void)endUserInteraction;
- (bool)entersFullScreenWhenPlaybackBegins;
- (bool)entersFullScreenWhenTapped;
- (void)flashPlaybackControlsWithDuration:(double)arg1;
- (void)flashVolumeControlsWithDuration:(double)arg1;
- (bool)forcePlaybackControlsHidden;
- (void)handleCurrentRouteSupportsVolumeControlChanged:(id)arg1;
- (void)handleVolumeChange:(id)arg1;
- (bool)hasBecomeReadyToPlay;
- (bool)hasBegunObservingPotentiallyUnimplementedPlayerControllerProperties;
- (bool)hasCustomPlaybackControls;
- (bool)hasPlaybackBegunSincePlayerControllerBecameReadyToPlay;
- (bool)hasSeekableLiveStreamingContent;
- (bool)hasStartedUpdates;
- (id)initWithPlayerViewController:(id)arg1;
- (bool)isCoveringWindow;
- (bool)isFullScreen;
- (bool)isHidingItemsForTransition;
- (bool)isPictureInPictureActive;
- (bool)isPlaybackSuspendedForScrubbing;
- (bool)isPopoverBeingPresented;
- (bool)isResumingUpdates;
- (bool)isScrubbingOrSeeking;
- (bool)isSeekingEnabled;
- (bool)isShowingPlaybackControls;
- (bool)isStartLeftwardContentTransitionButtonEnabled;
- (bool)isStartRightwardContentTransitionButtonEnabled;
- (bool)isUserInteracting;
- (bool)isVideoScaled;
- (id)loadingIndicatorTimer;
- (double)loadingIndicatorTimerDelay;
- (double)maximumTime;
- (id)mediaSelectionMenuController;
- (void)mediaSelectionMenuController:(id)arg1 didSelectOption:(id)arg2 atIndex:(unsigned long long)arg3;
- (double)minimumTime;
- (bool)multipleRoutesDetected;
- (bool)needsTimeResolver;
- (id)nowPlayingInfoControllerIfLoaded;
- (id)observationController;
- (void)overflowButtonDidHideContextMenu:(id)arg1;
- (void)overflowButtonWillShowContextMenu:(id)arg1;
- (id)overflowMenuItemsForControlOverflowButton:(id)arg1;
- (id)pendingOrientationChange;
- (id)pictureInPictureController;
- (id /* block */)playButtonHandlerForLazyPlayerLoading;
- (bool)playButtonsShowPauseGlyph;
- (bool)playbackControlsIncludeDisplayModeControls;
- (bool)playbackControlsIncludeStartContentTransitionButtons;
- (bool)playbackControlsIncludeTransportControls;
- (bool)playbackControlsIncludeVolumeControls;
- (id)playbackControlsObservationController;
- (id)playbackControlsView;
- (void)playbackControlsViewDidLoad:(id)arg1;
- (id)playbackControlsVisibilityTimer;
- (id)playbackRateMenuController;
- (void)playbackSpeedButtonTapped:(id)arg1;
- (id)playbackSpeedCollection;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })playbackViewFrame;
- (id)playerController;
- (id)playerMuteFadeAnimationID;
- (id)playerViewController;
- (struct CGSize { double x1; double x2; })playerViewControllerContentViewContentDimensions:(id)arg1;
- (void)playerViewControllerContentViewDidChangeSize:(id)arg1;
- (void)playerViewControllerContentViewDidChangeVideoGravity:(id)arg1;
- (void)playerViewControllerContentViewDidLayoutSubviews:(id)arg1;
- (void)playerViewControllerContentViewDidMoveToSuperviewOrWindow:(id)arg1;
- (void)playerViewControllerContentViewDidUpdateScrollingStatus:(id)arg1;
- (bool)playerViewControllerContentViewHasActiveTransition:(id)arg1;
- (bool)playerViewControllerContentViewIsBeingTransitionedFromFullScreen:(id)arg1;
- (id)playerViewControllerContentViewOverrideLayoutClass:(id)arg1;
- (void)playerViewControllerContentViewPlaybackContentContainerViewChanged:(id)arg1;
- (bool)playerViewControllerContentViewShouldApplyAutomaticVideoGravity:(id)arg1;
- (bool)playerViewControllerHasInvalidViewControllerHierarchy;
- (bool)playerViewControllerIsBeingTransitionedWithResizing;
- (bool)playerViewControllerIsPresentedFullScreen;
- (bool)playerViewControllerIsPresentingFullScreen;
- (long long)preferredUnobscuredArea;
- (bool)prefersMuted;
- (bool)prefersStatusBarHidden;
- (bool)prominentPlayButtonCanShowPauseGlyph;
- (void)prominentPlayButtonTouchUpInside:(id)arg1;
- (id)remainingTimeFormatter;
- (bool)requiresLinearPlayback;
- (id)routeDetectorCoordinator;
- (id)routePickerAlertController;
- (void)routePickerViewDidEndPresentingRoutes:(id)arg1;
- (void)routePickerViewWillBeginPresentingRoutes:(id)arg1;
- (void)scrubToTime:(double)arg1 resolution:(double)arg2;
- (void)setAVRouteDetectorCoordinatorMultipleRoutesDetectedObserver:(id)arg1;
- (void)setAllowsEnteringFullScreen:(bool)arg1;
- (void)setCanHidePlaybackControls:(bool)arg1;
- (void)setCanIncludePlaybackControlsWhenInline:(bool)arg1;
- (void)setCanIncludeVideoGravityButton:(bool)arg1;
- (void)setCollapseExpandSliderAnimator:(id)arg1;
- (void)setContentTransitionAction:(id /* block */)arg1;
- (void)setCoveringWindow:(bool)arg1;
- (void)setCustomControlItems:(id)arg1;
- (void)setEntersFullScreenWhenPlaybackBegins:(bool)arg1;
- (void)setForcePlaybackControlsHidden:(bool)arg1;
- (void)setHasBecomeReadyToPlay:(bool)arg1;
- (void)setHasBegunObservingPotentiallyUnimplementedPlayerControllerProperties:(bool)arg1;
- (void)setHasCustomPlaybackControls:(bool)arg1;
- (void)setHasPlaybackBegunSincePlayerControllerBecameReadyToPlay:(bool)arg1;
- (void)setHasSeekableLiveStreamingContent:(bool)arg1;
- (void)setHasStartedUpdates:(bool)arg1;
- (void)setHidingItemsForTransition:(bool)arg1;
- (void)setLoadingIndicatorTimer:(id)arg1;
- (void)setLoadingIndicatorTimerDelay:(double)arg1;
- (void)setMediaSelectionMenuController:(id)arg1;
- (void)setMultipleRoutesDetected:(bool)arg1;
- (void)setPendingOrientationChange:(id)arg1;
- (void)setPictureInPictureActive:(bool)arg1;
- (void)setPictureInPictureController:(id)arg1;
- (void)setPlayButtonHandlerForLazyPlayerLoading:(id /* block */)arg1;
- (void)setPlaybackControlsIncludeDisplayModeControls:(bool)arg1;
- (void)setPlaybackControlsIncludeStartContentTransitionButtons:(bool)arg1;
- (void)setPlaybackControlsIncludeTransportControls:(bool)arg1;
- (void)setPlaybackControlsIncludeVolumeControls:(bool)arg1;
- (void)setPlaybackControlsObservationController:(id)arg1;
- (void)setPlaybackControlsView:(id)arg1;
- (void)setPlaybackControlsVisibilityTimer:(id)arg1;
- (void)setPlaybackRateMenuController:(id)arg1;
- (void)setPlaybackSpeedCollection:(id)arg1;
- (void)setPlaybackSuspendedForScrubbing:(bool)arg1;
- (void)setPlaybackViewFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setPlayerController:(id)arg1;
- (void)setPlayerMuteFadeAnimationID:(id)arg1;
- (void)setPlayerViewControllerHasInvalidViewControllerHierarchy:(bool)arg1;
- (void)setPlayerViewControllerIsBeingTransitionedWithResizing:(bool)arg1;
- (void)setPlayerViewControllerIsPresentedFullScreen:(bool)arg1;
- (void)setPlayerViewControllerIsPresentingFullScreen:(bool)arg1;
- (void)setPopoverIsBeingPresented:(bool)arg1;
- (void)setPreferredUnobscuredArea:(long long)arg1;
- (void)setPrefersMuted:(bool)arg1;
- (void)setRequiresLinearPlayback:(bool)arg1;
- (void)setResumingUpdates:(bool)arg1;
- (void)setRouteDetectorCoordinator:(id)arg1;
- (void)setRoutePickerAlertController:(id)arg1;
- (void)setScrubbingOrSeeking:(bool)arg1;
- (void)setShouldIgnoreTimeResolverUpdates:(bool)arg1;
- (void)setShowingPlaybackControls:(bool)arg1;
- (void)setShowingVolumeControlInTransportBar:(bool)arg1;
- (void)setShowsDoneButtonWhenFullScreen:(bool)arg1;
- (void)setShowsLoadingIndicator:(bool)arg1;
- (void)setShowsMinimalPlaybackControlsWhenEmbeddedInline:(bool)arg1;
- (void)setShowsPictureInPictureButton:(bool)arg1;
- (void)setShowsPlaybackControls:(bool)arg1;
- (void)setShowsPlaybackSpeedButton:(bool)arg1;
- (void)setShowsTimecodes:(bool)arg1;
- (void)setShowsVideoGravityButton:(bool)arg1;
- (void)setShowsVolumeControlsForContentWithNoAudio:(bool)arg1;
- (void)setStartLeftwardContentTransitionButtonEnabled:(bool)arg1;
- (void)setStartRightwardContentTransitionButtonEnabled:(bool)arg1;
- (void)setTimeControlStatus:(long long)arg1;
- (void)setTimeResolver:(id)arg1;
- (void)setTransportBarCustomMenuItems:(id)arg1;
- (void)setTurboModePlaybackControlsPlaceholderView:(id)arg1;
- (void)setUserInteractingCount:(unsigned long long)arg1;
- (void)setVideoGravityButtonType:(long long)arg1;
- (void)setVideoScaled:(bool)arg1;
- (void)setVolumeAnimator:(id)arg1;
- (void)setVolumeController:(id)arg1;
- (void)setVolumeControlsCanShowSlider:(bool)arg1;
- (void)setWantsExternalPlaybackButtonShown:(bool)arg1;
- (void)setWindowSceneSessionIdentifier:(id)arg1;
- (bool)shouldEnterFullScreenWhenPlaybackBegins;
- (bool)shouldIgnoreTimeResolverUpdates;
- (bool)shouldShowVolumeControlInTransportBar;
- (void)showPlaybackControls:(bool)arg1 immediately:(bool)arg2;
- (bool)showsDoneButtonWhenFullScreen;
- (bool)showsLoadingIndicator;
- (bool)showsMediaSelectionButton;
- (bool)showsMinimalPlaybackControlsWhenEmbeddedInline;
- (bool)showsPictureInPictureButton;
- (bool)showsPlaybackControls;
- (bool)showsPlaybackSpeedButton;
- (bool)showsProminentPlayButton;
- (bool)showsRoutePickerView;
- (bool)showsSkipButtons;
- (bool)showsStartContentTransitionButtons;
- (bool)showsTimecodes;
- (bool)showsTransportControls;
- (bool)showsVideoGravityButton;
- (bool)showsVolumeControlsForContentWithNoAudio;
- (void)skipButtonForcePressChanged:(id)arg1;
- (void)skipButtonLongPressEnded:(id)arg1;
- (void)skipButtonLongPressTriggered:(id)arg1;
- (void)skipButtonTouchUpInside:(id)arg1;
- (void)startContentTransitionButtonTouchUpInside:(id)arg1;
- (void)startUpdatesIfNeeded;
- (bool)tapGestureRecognizersCanReceiveTouches;
- (double)targetTime;
- (long long)timeControlStatus;
- (id)timeResolver;
- (void)toggleMuted;
- (void)togglePlaybackControlsVisibility;
- (id)transportBarCustomMenuItems;
- (void)transportControls:(id)arg1 scrubberDidBeginScrubbing:(id)arg2;
- (void)transportControls:(id)arg1 scrubberDidEndScrubbing:(id)arg2;
- (void)transportControls:(id)arg1 scrubberDidScrub:(id)arg2;
- (void)transportControlsNeedsLayoutIfNeeded:(id)arg1;
- (id)turboModePlaybackControlsPlaceholderView;
- (void)turboModePlaybackControlsPlaceholderViewDidLoad:(id)arg1;
- (id)uniqueIdentifer;
- (void)updateVolumeSliderValue:(id)arg1 volumeButtonControl:(id)arg2;
- (unsigned long long)userInteractingCount;
- (long long)videoGravityButtonType;
- (id)volumeAnimator;
- (void)volumeButtonLongPressTriggered:(id)arg1;
- (void)volumeButtonPanChanged:(id)arg1;
- (void)volumeButtonTapTriggered:(id)arg1;
- (id)volumeController;
- (bool)volumeControlsCanShowSlider;
- (id)volumeControlsController:(id)arg1 volumeButtonControl:(id)arg2 viewContainingVolumeSlider:(id)arg3;
- (void)volumeSliderValueDidChange:(id)arg1;
- (bool)wantsExternalPlaybackButtonShown;
- (id)windowSceneSessionIdentifier;

@end
