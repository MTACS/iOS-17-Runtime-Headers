
@interface AVPlayerViewControllerContentView : UIView <AVScrollingObserverDelegate, _UIViewBoundingPathChangeObserver> {
    UIImageView * _audioOnlyIndicatorView;
    NSString * _automaticVideoGravity;
    AVCABackdropLayerView * _backdropLayerView;
    AVCacheLargestInscribedRectInBoundingPath * _cacheLargestInscribedRect;
    bool  _canAutomaticallyZoomLetterboxVideos;
    UIView * _contentOverlayView;
    unsigned long long  _contentOverlayViewPlacement;
    AVMobileControlsViewController * _controlsViewController;
    AVPlayerViewControllerCustomControlsView * _customControlsView;
    NSArray * _customControlsViewLayoutGuideConstraints;
    <AVPlayerViewControllerContentViewDelegate> * _delegate;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _edgeInsetsForLetterboxedContent;
    NSString * _externalPlaybackIndicatorSubtitle;
    NSString * _externalPlaybackIndicatorTitle;
    AVExternalPlaybackIndicatorView * _externalPlaybackIndicatorView;
    <AVPlayerViewControllerContentViewDelegate_Gen1> * _gen1Delegate;
    UIView * _iAdPreRollView;
    UIView * _iAdPreRollViewIfLoaded;
    UIView * _interactiveContentOverlayView;
    bool  _needsInitialLayout;
    UIView<AVPlaybackContentContainer> * _playbackContentContainerView;
    AVScrollingObserver * _scrollingObserver;
    bool  _showsPlaybackControls;
    bool  _styleSheetShouldUseCompactFullScreenItemSize;
    NSMutableDictionary * _targetVideoGravities;
    AVTurboModePlaybackControlsPlaceholderView * _turboModePlaybackControlsPlaceholderView;
    UIImageView * _unsupportedContentIndicatorView;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _videoContentInset;
    bool  _wantsBackdropView;
}

@property (nonatomic, copy) NSString *automaticVideoGravity;
@property (nonatomic, retain) AVCacheLargestInscribedRectInBoundingPath *cacheLargestInscribedRect;
@property (nonatomic) bool canAutomaticallyZoomLetterboxVideos;
@property (nonatomic, retain) UIView *contentOverlayView;
@property (nonatomic) unsigned long long contentOverlayViewPlacement;
@property (nonatomic, retain) AVMobileControlsViewController *controlsViewController;
@property (nonatomic, retain) AVPlayerViewControllerCustomControlsView *customControlsView;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <AVPlayerViewControllerContentViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } edgeInsetsForLetterboxedContent;
@property (nonatomic, copy) NSString *externalPlaybackIndicatorSubtitle;
@property (nonatomic, copy) NSString *externalPlaybackIndicatorTitle;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) UIView *iAdPreRollView;
@property (nonatomic, readonly) UIView *iAdPreRollViewIfLoaded;
@property (nonatomic, retain) UIView *interactiveContentOverlayView;
@property (nonatomic, readonly) bool isCoveringWindow;
@property (nonatomic, readonly) NSNumber *layoutClass;
@property (nonatomic) bool needsInitialLayout;
@property (nonatomic, retain) UIView<AVPlaybackContentContainer> *playbackContentContainerView;
@property (nonatomic, readonly) AVPlaybackControlsView *playbackControlsView;
@property (nonatomic, readonly) AVScrollingObserver *scrollingObserver;
@property (nonatomic) bool showsPlaybackControls;
@property (nonatomic) bool styleSheetShouldUseCompactFullScreenItemSize;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSMutableDictionary *targetVideoGravities;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } videoContentInset;
@property (nonatomic) bool wantsBackdropView;

- (void).cxx_destruct;
- (void)_applyVideoGravityIfNeeded:(long long)arg1;
- (void)_boundingPathMayHaveChangedForView:(id)arg1 relativeToBoundsOriginOnly:(bool)arg2;
- (void)addPlaybackContentContainerViewIfNeeded;
- (id)automaticVideoGravity;
- (id)avkit_backdropGroupLeader;
- (bool)avkit_hasFullScreenLayoutClass;
- (void)avkit_needsUpdateBackdropCaptureViewHidden;
- (id)cacheLargestInscribedRect;
- (bool)canAutomaticallyZoomLetterboxVideos;
- (id)chromeControlsViewController;
- (id)contentOverlayView;
- (unsigned long long)contentOverlayViewPlacement;
- (id)controlsViewController;
- (id)customControlsView;
- (void)dealloc;
- (id)delegate;
- (void)didMoveToSuperview;
- (void)didMoveToWindow;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })edgeInsetsForLetterboxedContent;
- (id)externalPlaybackIndicatorSubtitle;
- (id)externalPlaybackIndicatorTitle;
- (id)gen1Delegate;
- (id)iAdPreRollView;
- (id)iAdPreRollViewIfLoaded;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 playbackContentContainerView:(id)arg2 targetVideoGravities:(id)arg3;
- (id)interactiveContentOverlayView;
- (bool)isCoveringWindow;
- (bool)isViewDescendantOfPlaybackControlsSubview:(id)arg1;
- (id)layoutClass;
- (void)layoutSubviews;
- (void)loadPlaybackControlsViewIfNeeded;
- (bool)needsInitialLayout;
- (id)playbackContentContainerView;
- (id)playbackControlsView;
- (void)removeTurboModePlaybackControlsPlaceholderViewIfNeeded;
- (id)scrollingObserver;
- (void)scrollingObserverDidChangeScrollingState:(id)arg1;
- (void)setAutomaticVideoGravity:(id)arg1;
- (void)setCacheLargestInscribedRect:(id)arg1;
- (void)setCanAutomaticallyZoomLetterboxVideos:(bool)arg1;
- (void)setContentOverlayView:(id)arg1;
- (void)setContentOverlayViewPlacement:(unsigned long long)arg1;
- (void)setControlsViewController:(id)arg1;
- (void)setCustomControlsView:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEdgeInsetsForLetterboxedContent:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setExternalPlaybackIndicatorSubtitle:(id)arg1;
- (void)setExternalPlaybackIndicatorTitle:(id)arg1;
- (void)setExternalPlaybackIndicatorTitle:(id)arg1 subtitle:(id)arg2;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setGen1Delegate:(id)arg1;
- (void)setInteractiveContentOverlayView:(id)arg1;
- (void)setNeedsInitialLayout:(bool)arg1;
- (void)setPlaybackContentContainerView:(id)arg1;
- (void)setShowsAudioOnlyIndicator:(bool)arg1;
- (void)setShowsExternalPlaybackIndicator:(bool)arg1;
- (void)setShowsPlaybackControls:(bool)arg1;
- (void)setShowsUnsupportedContentIndicator:(bool)arg1;
- (void)setStyleSheetShouldUseCompactFullScreenItemSize:(bool)arg1;
- (void)setTargetVideoGravity:(id)arg1 forLayoutClass:(unsigned long long)arg2;
- (void)setVideoContentInset:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setWantsBackdropView:(bool)arg1;
- (bool)showsPlaybackControls;
- (bool)styleSheetShouldUseCompactFullScreenItemSize;
- (id)targetVideoGravities;
- (void)updateCustomControlsViewLayoutGuides;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })videoContentInset;
- (bool)wantsBackdropView;
- (void)willMoveToWindow:(id)arg1;

@end
