
@interface AVInterstitialController : NSObject {
    double  _continuationTimeAfterInterstitial;
    <AVInterstitialControllerDelegateManager> * _delegateManager;
    id /* block */  _didEnterInterstitialTimeRangeBlock;
    id /* block */  _didLeaveInterstitialTimeRangeBlock;
    id /* block */  _didLeaveRequiredInterstitialTimeRangeBlock;
    AVPlayerInterstitialEventController * _eventController;
    AVPlayerInterstitialEventMonitor * _eventMonitor;
    id  _interstitialBoundaryTimeObserver;
    AVPlayer * _interstitialPlayer;
    AVTimeRangeCollection * _interstitialTimeRangeCollection;
    AVTimeRange * _interstitialTimeRangeInProgress;
    AVPlayerTimeController<AVTimeControlling> * _interstitialTimingController;
    AVObservationController * _kvo;
    AVObservationController * _kvoPlayerItem;
    AVPlayer * _player;
    <NSObject> * _playerInterstitialCurrentEventChangedObserver;
    <NSObject> * _playerInterstitialEventsChangedObserver;
    <NSObject> * _playerInterstitialPlayerDidChangeObserver;
    <NSObject> * _playerItemTimeJumpedObserver;
    bool  _shouldAlwaysSkipInterstitials;
    id /* block */  _skipInterstitialTimeRangeBlock;
}

@property (nonatomic, readonly) double continuationTimeAfterInterstitial;
@property (nonatomic, readonly) double currentDisplayTime;
@property (nonatomic, readonly) AVTimeRange *currentInterstitialTimeRange;
@property (nonatomic) <AVInterstitialControllerDelegateManager> *delegateManager;
@property (nonatomic, copy) id /* block */ didEnterInterstitialTimeRangeBlock;
@property (nonatomic, copy) id /* block */ didLeaveInterstitialTimeRangeBlock;
@property (nonatomic, copy) id /* block */ didLeaveRequiredInterstitialTimeRangeBlock;
@property (nonatomic, retain) AVPlayerInterstitialEventController *eventController;
@property (nonatomic, retain) AVPlayerInterstitialEventMonitor *eventMonitor;
@property (nonatomic, retain) id interstitialBoundaryTimeObserver;
@property (nonatomic, retain) AVPlayer *interstitialPlayer;
@property (nonatomic, retain) AVTimeRangeCollection *interstitialTimeRangeCollection;
@property (nonatomic, retain) AVTimeRange *interstitialTimeRangeInProgress;
@property (nonatomic, readonly) AVPlayerTimeController<AVTimeControlling> *interstitialTimingController;
@property (nonatomic, retain) AVObservationController *kvo;
@property (nonatomic, retain) AVObservationController *kvoPlayerItem;
@property (nonatomic, retain) AVPlayer *player;
@property (nonatomic, readonly) AVTimeRange *previousInterstitialTimeRange;
@property (nonatomic, readonly) bool requiresLinearPlayback;
@property (nonatomic) bool shouldAlwaysSkipInterstitials;
@property (nonatomic, readonly) bool shouldEnforceInterstitialPolicy;
@property (nonatomic, copy) id /* block */ skipInterstitialTimeRangeBlock;
@property (nonatomic, readonly) double timeRemainingInCurrentInterstitial;

+ (id)interstitialQueue;
+ (id)newTimeRangeCollectionForPlayerItem:(id)arg1;
+ (id)newTimeRangeCollectionForPlayerItem:(id)arg1 reversePlaybackEndTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 forwardPlaybackEndTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3;

- (void).cxx_destruct;
- (id)_copySynthesizedInterstitialTimeRanges;
- (double)_pendingTimeBoundary;
- (void)_performInterstitialPlayerDependentUpdates;
- (void)_sendInterstitialBoundaryNotificationForInterstitialTimeRange:(id)arg1;
- (void)_sendInterstitialBoundaryNotificationsForEvent:(id)arg1;
- (void)_sendInterstitialBoundaryNotificationsForTime:(double)arg1;
- (void)_setPendingTimeBoundary:(double)arg1;
- (bool)_shouldSkipInterstitialTimeRange:(id)arg1;
- (void)_startObservingInterstitialTimeRanges;
- (void)_stopObservingInterstitialTimeRanges;
- (void)_updateInterstitialTimeRangeCollection;
- (void)cancelCurrentPlayerInterstitialEvent;
- (double)continuationTimeAfterInterstitial;
- (double)currentDisplayTime;
- (id)currentInterstitialTimeRange;
- (id)currentItem;
- (id)currentOrEstimatedDate;
- (double)currentTime;
- (void)dealloc;
- (id)delegateManager;
- (void)didBeginOrResumePlayback;
- (id /* block */)didEnterInterstitialTimeRangeBlock;
- (id /* block */)didLeaveInterstitialTimeRangeBlock;
- (id /* block */)didLeaveRequiredInterstitialTimeRangeBlock;
- (void)didPresentInterstitialTimeRange:(id)arg1;
- (double)displayTimeFromTime:(double)arg1;
- (double)elapsedTimeForInterstitialPlayer;
- (double)elapsedTimeWithinCurrentInterstitial;
- (id)eventController;
- (id)eventMonitor;
- (id)init;
- (id)interstitialBoundaryTimeObserver;
- (id)interstitialPlayer;
- (id)interstitialTimeRangeCollection;
- (id)interstitialTimeRangeForPlayerInterstitialEvent:(id)arg1;
- (id)interstitialTimeRangeInProgress;
- (id)interstitialTimingController;
- (void)invalidate;
- (bool)isLive;
- (id)kvo;
- (id)kvoPlayerItem;
- (bool)loadDurationOfCurrentOrNextInterstitialEvent:(id /* block */)arg1;
- (id)nextInterstitialTimeRange;
- (id)player;
- (id)previousInterstitialTimeRange;
- (bool)requiresLinearPlayback;
- (void)sendInterstitialBoundaryNotificationsForTimeJumpIfNeeded;
- (void)sendPendingInterstitialBoundaryNotificationIfNeeded;
- (void)setDelegateManager:(id)arg1;
- (void)setDidEnterInterstitialTimeRangeBlock:(id /* block */)arg1;
- (void)setDidLeaveInterstitialTimeRangeBlock:(id /* block */)arg1;
- (void)setDidLeaveRequiredInterstitialTimeRangeBlock:(id /* block */)arg1;
- (void)setEventController:(id)arg1;
- (void)setEventMonitor:(id)arg1;
- (void)setInterstitialBoundaryTimeObserver:(id)arg1;
- (void)setInterstitialPlayer:(id)arg1;
- (void)setInterstitialTimeRangeCollection:(id)arg1;
- (void)setInterstitialTimeRangeInProgress:(id)arg1;
- (void)setKvo:(id)arg1;
- (void)setKvoPlayerItem:(id)arg1;
- (void)setPlayer:(id)arg1;
- (void)setShouldAlwaysSkipInterstitials:(bool)arg1;
- (void)setSkipInterstitialTimeRangeBlock:(id /* block */)arg1;
- (void)setupInterstitialObservers;
- (bool)shouldAlwaysSkipInterstitials;
- (bool)shouldEnforceInterstitialPolicy;
- (void)skipInterstitialTimeRange:(id)arg1;
- (id /* block */)skipInterstitialTimeRangeBlock;
- (double)timeFromDisplayTime:(double)arg1;
- (id)timeRangeForPlayerInterstitialEvent:(id)arg1;
- (double)timeRemainingInCurrentInterstitial;
- (double)timeToSeekAfterUserNavigatedFromTime:(double)arg1 toTime:(double)arg2;
- (void)updateSynthesizedInterstitialTimeRanges;
- (void)willPresentInterstitialTimeRange:(id)arg1;

@end
