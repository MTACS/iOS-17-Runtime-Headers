
@interface MTLTextureDescriptorInternal : MTLTextureDescriptor {
    struct MTLTextureDescriptorPrivate { 
        unsigned long long textureType; 
        unsigned long long pixelFormat; 
        unsigned long long width; 
        unsigned long long height; 
        unsigned long long depth; 
        unsigned long long mipmapLevelCount; 
        unsigned long long sampleCount; 
        unsigned long long arrayLength; 
        bool zeroFill; 
        unsigned long long rotation; 
        bool framebufferOnly; 
        bool isDrawable; 
        unsigned int swizzle; 
        bool writeSwizzleEnabled; 
        unsigned long long compressionMode; 
        union { 
            unsigned long long textureUsage; 
            unsigned long long usage; 
        } ; 
        unsigned long long resourceOptions; 
        unsigned long long sparseSurfaceDefaultValue; 
        bool allowGPUOptimizedContents; 
        bool forceResourceIndex; 
        unsigned long long resourceIndex; 
        unsigned long long protectionOptions; 
        unsigned long long compressionFootprint; 
        long long compressionType; 
        unsigned long long colorSpaceConversionMatrix; 
        unsigned long long resolvedUsage; 
        unsigned long long cpuCacheMode; 
        unsigned long long storageMode; 
    }  _private;
}

- (bool)allowGPUOptimizedContents;
- (unsigned long long)arrayLength;
- (unsigned long long)colorSpaceConversionMatrix;
- (unsigned long long)compressionFootprint;
- (unsigned long long)compressionMode;
- (long long)compressionType;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (unsigned long long)cpuCacheMode;
- (unsigned long long)depth;
- (id)description;
- (const struct MTLTextureDescriptorPrivate { unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; unsigned long long x7; unsigned long long x8; bool x9; unsigned long long x10; bool x11; bool x12; unsigned int x13; bool x14; unsigned long long x15; union { unsigned long long x_16_1_1; unsigned long long x_16_1_2; } x16; unsigned long long x17; unsigned long long x18; bool x19; bool x20; unsigned long long x21; unsigned long long x22; unsigned long long x23; long long x24; unsigned long long x25; unsigned long long x26; unsigned long long x27; unsigned long long x28; }*)descriptorPrivate;
- (bool)forceResourceIndex;
- (id)formattedDescription:(unsigned long long)arg1;
- (bool)framebufferOnly;
- (unsigned long long)hash;
- (unsigned long long)hazardTrackingMode;
- (unsigned long long)height;
- (id)init;
- (bool)isDrawable;
- (bool)isEqual:(id)arg1;
- (long long)lossyCompressionMode;
- (unsigned long long)mipmapLevelCount;
- (unsigned long long)pixelFormat;
- (unsigned long long)protectionOptions;
- (unsigned long long)resourceIndex;
- (unsigned long long)resourceOptions;
- (unsigned long long)rotation;
- (unsigned long long)sampleCount;
- (void)setAllowGPUOptimizedContents:(bool)arg1;
- (void)setArrayLength:(unsigned long long)arg1;
- (void)setColorSpaceConversionMatrix:(unsigned long long)arg1;
- (void)setCompressionFootprint:(unsigned long long)arg1;
- (void)setCompressionMode:(unsigned long long)arg1;
- (void)setCompressionType:(long long)arg1;
- (void)setCpuCacheMode:(unsigned long long)arg1;
- (void)setDepth:(unsigned long long)arg1;
- (void)setForceResourceIndex:(bool)arg1;
- (void)setFramebufferOnly:(bool)arg1;
- (void)setHazardTrackingMode:(unsigned long long)arg1;
- (void)setHeight:(unsigned long long)arg1;
- (void)setIsDrawable:(bool)arg1;
- (void)setLossyCompressionMode:(long long)arg1;
- (void)setMipmapLevelCount:(unsigned long long)arg1;
- (void)setPixelFormat:(unsigned long long)arg1;
- (void)setProtectionOptions:(unsigned long long)arg1;
- (void)setResourceIndex:(unsigned long long)arg1;
- (void)setResourceOptions:(unsigned long long)arg1;
- (void)setRotation:(unsigned long long)arg1;
- (void)setSampleCount:(unsigned long long)arg1;
- (void)setSparseSurfaceDefaultValue:(unsigned long long)arg1;
- (void)setStorageMode:(unsigned long long)arg1;
- (void)setSwizzle:(struct { unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; })arg1;
- (void)setSwizzleKey:(unsigned int)arg1;
- (void)setTextureType:(unsigned long long)arg1;
- (void)setTextureUsage:(unsigned long long)arg1;
- (void)setUsage:(unsigned long long)arg1;
- (void)setWidth:(unsigned long long)arg1;
- (void)setWriteSwizzleEnabled:(bool)arg1;
- (unsigned long long)sparseSurfaceDefaultValue;
- (unsigned long long)storageMode;
- (struct { unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; })swizzle;
- (unsigned int)swizzleKey;
- (unsigned long long)textureType;
- (unsigned long long)textureUsage;
- (unsigned long long)usage;
- (bool)validateWithDevice:(id)arg1;
- (unsigned long long)width;
- (bool)writeSwizzleEnabled;

@end
