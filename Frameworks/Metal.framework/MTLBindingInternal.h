
@interface MTLBindingInternal : MTLArgument <MTLArgumentCompat, MTLBinding> {
    unsigned long long  _access;
    bool  _aliasImplicitImageBlock;
    unsigned long long  _aliasImplicitImageBlockRenderTarget;
    bool  _argument;
    unsigned long long  _arrayLength;
    unsigned long long  _builtInDataType;
    unsigned long long  _builtInType;
    unsigned long long  _imageBlockDataSize;
    unsigned long long  _imageBlockKind;
    MTLStructTypeInternal * _imageBlockMasterStructMembers;
    unsigned long long  _index;
    bool  _isUsed;
    NSString * _name;
    unsigned long long  _threadgroupMemoryDataType;
    MTLStructType * _threadgroupMemoryStructType;
    long long  _type;
    MTLType * _typeInfo;
    bool  _vertexDescriptorBuffer;
}

@property (readonly) unsigned long long access;
@property (getter=isActive, readonly) bool active;
@property (readonly) bool aliasImplicitImageBlock;
@property (readonly) unsigned long long aliasImplicitImageBlockRenderTarget;
@property (getter=isArgument, setter=setIsArgument:) bool argument;
@property (readonly) unsigned long long arrayLength;
@property (readonly) unsigned long long bufferALUType;
@property (readonly) unsigned long long bufferAlignment;
@property (readonly) unsigned long long bufferDataSize;
@property (readonly) unsigned long long bufferDataType;
@property (readonly) MTLArgument *bufferIndirectArgumentType;
@property (readonly) unsigned long long bufferPixelFormat;
@property (readonly) MTLPointerType *bufferPointerType;
@property (readonly) MTLStructType *bufferStructType;
@property (readonly) unsigned long long builtInDataType;
@property (readonly) unsigned long long builtInType;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned long long imageBlockDataSize;
@property (readonly) unsigned long long imageBlockKind;
@property (readonly) MTLStructTypeInternal *imageBlockMasterStructMembers;
@property (readonly) unsigned long long index;
@property (readonly) unsigned long long indirectConstantAlignment;
@property (readonly) unsigned long long indirectConstantDataSize;
@property (readonly) unsigned long long indirectConstantDataType;
@property (readonly) bool isDepthTexture;
@property bool isUsed;
@property (readonly) unsigned long long meshPrimitiveCount;
@property (readonly) MTLStructTypeInternal *meshPrimitiveStruct;
@property (readonly) unsigned long long meshTopologyType;
@property (readonly) unsigned long long meshVertexCount;
@property (readonly) MTLStructTypeInternal *meshVertexStruct;
@property (readonly) NSString *name;
@property (readonly) unsigned long long objectPayloadAlignment;
@property (readonly) unsigned long long objectPayloadDataSize;
@property (readonly) MTLStructType *structType;
@property (readonly) Class superclass;
@property (readonly) unsigned long long textureDataType;
@property (readonly) unsigned long long textureType;
@property (readonly) unsigned long long threadgroupMemoryAlignment;
@property (readonly) unsigned long long threadgroupMemoryDataSize;
@property (readonly) unsigned long long threadgroupMemoryDataType;
@property (readonly) MTLStructType *threadgroupMemoryStructType;
@property (readonly) long long type;
@property (getter=isUsed, readonly) bool used;
@property (getter=isVertexDescriptorBuffer, readonly) bool vertexDescriptorBuffer;

- (unsigned long long)access;
- (bool)aliasImplicitImageBlock;
- (unsigned long long)aliasImplicitImageBlockRenderTarget;
- (unsigned long long)arrayLength;
- (unsigned long long)bufferAlignment;
- (unsigned long long)bufferDataSize;
- (unsigned long long)bufferDataType;
- (id)bufferIndirectArgumentType;
- (id)bufferPointerType;
- (id)bufferStructType;
- (unsigned long long)builtInDataType;
- (unsigned long long)builtInType;
- (id)dataTypeDescription;
- (void)dealloc;
- (id)description;
- (id)formattedDescription:(unsigned long long)arg1;
- (unsigned long long)imageBlockDataSize;
- (unsigned long long)imageBlockKind;
- (id)imageBlockMasterStructMembers;
- (unsigned long long)index;
- (unsigned long long)indirectConstantAlignment;
- (unsigned long long)indirectConstantDataSize;
- (unsigned long long)indirectConstantDataType;
- (id)initWithName:(id)arg1 type:(unsigned long long)arg2 access:(unsigned long long)arg3 index:(unsigned long long)arg4 active:(bool)arg5 arrayLength:(unsigned long long)arg6;
- (id)initWithName:(id)arg1 type:(unsigned long long)arg2 access:(unsigned long long)arg3 index:(unsigned long long)arg4 active:(bool)arg5 arrayLength:(unsigned long long)arg6 typeDescription:(id)arg7;
- (bool)isActive;
- (bool)isArgument;
- (bool)isDepthTexture;
- (bool)isEqual:(id)arg1;
- (bool)isUsed;
- (bool)isVertexDescriptorBuffer;
- (unsigned long long)meshPrimitiveCount;
- (id)meshPrimitiveStruct;
- (unsigned long long)meshTopologyType;
- (unsigned long long)meshVertexCount;
- (id)meshVertexStruct;
- (id)name;
- (unsigned long long)objectPayloadAlignment;
- (unsigned long long)objectPayloadDataSize;
- (void)setIsArgument:(bool)arg1;
- (void)setIsUsed:(bool)arg1;
- (id)structType;
- (unsigned long long)textureDataType;
- (unsigned long long)textureType;
- (unsigned long long)threadgroupMemoryAlignment;
- (unsigned long long)threadgroupMemoryDataSize;
- (unsigned long long)threadgroupMemoryDataType;
- (id)threadgroupMemoryStructType;
- (long long)type;

@end
