
@interface MTLIOAccelDevice : _MTLDevice {
    unsigned int  _accelID;
    unsigned int  _acceleratorPort;
    struct MTLIOAccelBufferHeap { 
        MTLIOAccelBuffer *buffers[64]; 
        struct MTLRangeAllocator { 
            struct MTLRangeAllocatorElement {} *elements; 
            unsigned int numElements; 
            unsigned long long capacity; 
            unsigned long long capacityIncrement; 
            unsigned long long defaultAlignmentMask; 
        } allocators[64]; 
        unsigned int allocations[64]; 
        unsigned int count; 
    }  _bufferHeaps;
    struct MTLIOAccelCommandBufferStoragePool { struct storageQueue { struct MTLIOAccelCommandBufferStorage {} *x_1_1_1; struct MTLIOAccelCommandBufferStorage {} **x_1_1_2; } x1; struct os_unfair_lock_s { unsigned int x_2_1_1; } x2; int x3; _Atomic int x4; id x5; } * _commandBufferStoragePool;
    unsigned int  _configBits;
    unsigned int  _deviceBits;
    struct __IOAccelDevice { } * _deviceRef;
    <MTLDeviceSPI> * _deviceWrapper;
    NSObject<OS_dispatch_queue> * _device_dispatch_queue;
    NSObject<OS_dispatch_queue> * _device_pool_cleanup_queue;
    bool  _device_pool_cleanup_scheduled;
    NSObject<OS_dispatch_source> * _device_pool_cleanup_source;
    unsigned int  _fenceAllocatedCount;
    unsigned long long * _fenceAllocationBitmap;
    unsigned int  _fenceBitmapCount;
    unsigned int  _fenceBitmapSearchStart;
    unsigned int  _fenceMaximumCount;
    _Atomic int  _numCommandBuffers;
    unsigned long long  _registryID;
    unsigned long long  _segmentByteThreshold;
    unsigned long long  _sharedMemorySize;
    struct __IOAccelShared { } * _sharedRef;
    /* Warning: unhandled struct encoding: '{?="segmentListShmemPool"@"MTLIOAccelDeviceShmemPool""kernelCommandShmemPool"@"MTLIOAccelDeviceShmemPool""hwResourcePools"^@"hwResourcePoolCount"I"akResourceListPool"@"MTLResourceListPool""akPrivateResourceListPool"@"MTLResourceListPool"}' */ struct { 
        MTLIOAccelDeviceShmemPool *segmentListShmemPool; 
        MTLIOAccelDeviceShmemPool *kernelCommandShmemPool; 
        hwResourcePoolCount **hwResourcePools; 
    }  _storageCreateParams;
    unsigned long long  _textureRam;
    unsigned long long  _videoRam;
}

@property (readonly) unsigned int acceleratorPort;
@property (readonly) unsigned long long currentAllocatedSize;
@property (readonly) unsigned long long dedicatedMemorySize;
@property (readonly) bool hasUnifiedMemory;
@property (readonly) unsigned int hwResourcePoolCount;
@property (readonly) id*hwResourcePools;
@property (readonly) MTLIOMemoryInfo *memoryInfo;
@property (readonly) int numCommandBuffers;
@property (readonly) unsigned long long recommendedMaxWorkingSetSize;
@property (readonly) unsigned long long registryID;
@property (readonly) unsigned long long sharedMemorySize;
@property (readonly) bool supportLazyInitialization;
@property (readonly) bool supportPriorityBand;
@property (readonly) bool supportsVertexAmplification;

- (void).cxx_destruct;
- (void)_addResource:(id)arg1;
- (id)_deviceWrapper;
- (void)_purgeDevice;
- (void)_removeResource:(id)arg1;
- (void)_setDeviceWrapper:(id)arg1;
- (unsigned int)acceleratorPort;
- (id)akPrivateResourceListPool;
- (id)akResourceListPool;
- (id)allocBufferSubDataWithLength:(unsigned long long)arg1 options:(unsigned long long)arg2 alignment:(unsigned long long)arg3 heapIndex:(short*)arg4 bufferIndex:(short*)arg5 bufferOffset:(unsigned long long*)arg6;
- (unsigned long long)currentAllocatedSize;
- (void)dealloc;
- (void)deallocBufferSubData:(id)arg1 heapIndex:(short)arg2 bufferIndex:(short)arg3 bufferOffset:(unsigned long long)arg4 length:(unsigned long long)arg5;
- (unsigned long long)dedicatedMemorySize;
- (struct __IOAccelDevice { }*)deviceRef;
- (bool)hasUnifiedMemory;
- (short)heapIndexWithOptions:(unsigned long long)arg1;
- (unsigned int)hwResourcePoolCount;
- (id*)hwResourcePools;
- (id)indirectArgumentBufferDecodingData;
- (id)initWithAcceleratorPort:(unsigned int)arg1;
- (unsigned int)initialKernelCommandShmemSize;
- (unsigned int)initialSegmentListShmemSize;
- (void)kickCleanupQueue;
- (bool)lazyInitialize;
- (unsigned long long)maxBufferLength;
- (id)memoryInfo;
- (id)newAccelerationStructureWithBuffer:(id)arg1 offset:(unsigned long long)arg2;
- (id)newAccelerationStructureWithBuffer:(id)arg1 offset:(unsigned long long)arg2 resourceIndex:(unsigned long long)arg3;
- (id)newAccelerationStructureWithSize:(unsigned long long)arg1;
- (id)newAccelerationStructureWithSize:(unsigned long long)arg1 resourceIndex:(unsigned long long)arg2;
- (id)newAccelerationStructureWithSize:(unsigned long long)arg1 withDescriptor:(id)arg2;
- (id)newArgumentEncoderWithLayout:(id)arg1;
- (id)newCommandQueueWithDescriptor:(id)arg1;
- (id)newEvent;
- (id)newEventWithOptions:(long long)arg1;
- (id)newFence;
- (id)newIOCommandQueueWithDescriptor:(id)arg1 error:(id*)arg2;
- (id)newIOFileHandleWithURL:(id)arg1 compressionMethod:(long long)arg2 error:(id*)arg3;
- (id)newIOFileHandleWithURL:(id)arg1 error:(id*)arg2;
- (id)newIOHandleWithURL:(id)arg1 compressionMethod:(long long)arg2 error:(id*)arg3;
- (id)newIOHandleWithURL:(id)arg1 compressionType:(long long)arg2 error:(id*)arg3;
- (id)newIOHandleWithURL:(id)arg1 error:(id*)arg2;
- (id)newIndirectArgumentBufferLayoutWithStructType:(id)arg1;
- (id)newIndirectArgumentEncoderWithLayout:(id)arg1;
- (id)newIndirectCommandBufferWithDescriptor:(id)arg1 maxCommandCount:(unsigned long long)arg2 options:(unsigned long long)arg3;
- (id)newIntersectionFunctionTableWithDescriptor:(id)arg1;
- (id)newUncachedIOFileHandleWithURL:(id)arg1 compressionMethod:(long long)arg2 error:(id*)arg3;
- (id)newUncachedIOFileHandleWithURL:(id)arg1 error:(id*)arg2;
- (id)newUncachedIOHandleWithURL:(id)arg1 compressionType:(long long)arg2 error:(id*)arg3;
- (id)newUncachedIOHandleWithURL:(id)arg1 error:(id*)arg2;
- (int)numCommandBuffers;
- (unsigned long long)recommendedMaxWorkingSetSize;
- (unsigned long long)registryID;
- (void)releaseFenceIndex:(unsigned int)arg1;
- (void)setComputePipelineStateCommandShmemSize:(unsigned int)arg1;
- (void)setHwResourcePool:(id*)arg1 count:(int)arg2;
- (void)setIndirectArgumentBufferDecodingData:(id)arg1;
- (void)setSegmentListShmemSize:(unsigned int)arg1;
- (unsigned long long)sharedMemorySize;
- (struct __IOAccelShared { }*)sharedRef;
- (bool)supportLazyInitialization;
- (bool)supportPriorityBand;
- (bool)supportsVertexAmplification;
- (bool)supportsVertexAmplificationCount:(unsigned long long)arg1;
- (void)updateResourcePoolPurgeability;

@end
