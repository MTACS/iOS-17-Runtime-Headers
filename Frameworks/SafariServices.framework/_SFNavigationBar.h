
@interface _SFNavigationBar : UIView <SFNavigationBarItemObserver, UIDragInteractionDelegate_Private, UIDropInteractionDelegate_Private, UIGestureRecognizerDelegate, _SFFluidProgressViewDelegate, _SFNavigationBarCommon, _SFNavigationBarURLButtonDelegate, _UIBasicAnimationFactory, _UIClickInteractionDelegate> {
    NSArray * _URLAccessoryItems;
    UIView * _URLContainer;
    UIView * _URLContainerClipView;
    SFURLLabel * _URLLabel;
    _SFNavigationBarURLButton * _URLOutline;
    SFNavigationBarAccessoryButtonArrangement * _accessoryButtonArrangement;
    NSAttributedString * _attributedTextWhenExpanded;
    id /* block */  _availabilityButtonDeferredAction;
    UILabel * _availabilityLabel;
    NSTimer * _availabilityLabelHideTimer;
    UIVisualEffectView * _backdrop;
    UIBlurEffect * _backdropEffect;
    bool  _backdropGroupDisabled;
    NSString * _backdropGroupName;
    SFNavigationBarMetrics * _barMetrics;
    struct CGSize { 
        double width; 
        double height; 
    }  _cachedSecurityAnnotationLabelFittingSize;
    UIButton * _cancelButton;
    double  _cancelButtonIntrinsicWidth;
    UIButton * _compressedBarButton;
    double  _contentUnderStatusBarHeight;
    UIView * _controlsContainer;
    bool  _controlsHidden;
    <_SFNavigationBarDelegate> * _delegate;
    SFDismissButton * _dismissButton;
    _SFNavigationBarTheme * _effectiveTheme;
    bool  _expanded;
    double  _expandedURLHeight;
    UILabel * _expandedURLLabel;
    double  _expandedURLWidth;
    UIButton * _fakeClearButton;
    double  _fakeSelectionEndOffset;
    double  _fakeSelectionStartOffset;
    UIView * _fakeTextFieldSelectionView;
    long long  _formatButtonTapAction;
    _UIClickInteraction * _formatClickInteraction;
    SFNavigationBarToggleButton * _formatToggleButton;
    UIView * _inputAccessoryView;
    unsigned long long  _inputMode;
    SFNavigationBarItem * _item;
    UIView * _labelScalingContainer;
    _SFNavigationBarLabelsContainer * _labelsContainer;
    _SFToolbar * _leadingToolbar;
    SFToolbarContainer * _leadingToolbarContainer;
    UIVisualEffectView * _lockEffectView;
    UIImageView * _lockView;
    bool  _lockViewNeedsUpdate;
    SFLockdownStatusBar * _lockdownStatusBar;
    double  _maximumHeight;
    UIButton * _mediaStateMuteButton;
    double  _minimumBackdropHeight;
    double  _offsetOfURLInExpandedURL;
    UILabel * _privateBrowsingLabel;
    _SFFluidProgressView * _progressView;
    id /* block */  _readerAvailabilityAnimationBlock;
    _SFDimmingButton * _reloadButton;
    UIImageView * _searchIndicator;
    UIView * _securityAnnotationContainer;
    UILabel * _securityAnnotationLabel;
    bool  _sendingBarMetricsChangeNotification;
    UIView * _separator;
    bool  _shouldAnimateURLMovement;
    bool  _shouldHidePlaceholderURLItemsForPencilInput;
    bool  _showingButtonWithAvailabilityLabel;
    UIVisualEffectView * _squishedLockEffectView;
    UIImageView * _squishedLockView;
    UIImageView * _squishedSearchIndicator;
    UIView * _squishedURLAccessoryItemsContainer;
    _SFDimmingButton * _stopButton;
    bool  _suppressesBlur;
    UITextField * _textField;
    _SFBarTheme * _theme;
    _SFToolbar * _trailingToolbar;
    SFToolbarContainer * _trailingToolbarContainer;
    bool  _unifiedFieldShowsProgressView;
    bool  _usesFaintSeparator;
    bool  _usesLiftedAppearance;
    bool  _usesNarrowLayout;
    long long  _visibleTrailingButtonType;
}

@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } URLOutlineFrameInNavigationBarSpace;
@property (nonatomic, readonly) <_SFPopoverSourceInfo> *URLOutlinePopoverSourceInfo;
@property (nonatomic, readonly) UIBlurEffect *backdropEffect;
@property (getter=isBackdropGroupDisabled, nonatomic) bool backdropGroupDisabled;
@property (nonatomic, copy) NSString *backdropGroupName;
@property (nonatomic) double contentUnderStatusBarHeight;
@property (getter=_controlsAlpha, nonatomic, readonly) double controlsAlpha;
@property (getter=areControlsHidden, nonatomic) bool controlsHidden;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) double defaultHeight;
@property (nonatomic) <_SFNavigationBarDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) double dismissButtonPadding;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } dismissButtonSize;
@property (nonatomic, readonly) _SFNavigationBarTheme *effectiveTheme;
@property (getter=isExpanded, nonatomic) bool expanded;
@property (nonatomic, readonly) <_SFPopoverSourceInfo> *formatMenuButtonPopoverSourceInfo;
@property (nonatomic) bool hasToolbar;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) UIView *inputAccessoryView;
@property (nonatomic, retain) SFNavigationBarItem *item;
@property (nonatomic, retain) SFLockdownStatusBar *lockdownStatusBar;
@property (nonatomic) double maximumHeight;
@property (nonatomic) double minimumBackdropHeight;
@property (nonatomic, readonly) double minimumHeight;
@property (nonatomic, readonly, copy) NSArray *popoverPassthroughViews;
@property (nonatomic, readonly) <_SFPopoverSourceInfo> *reloadButtonPopoverSourceInfo;
@property (getter=isSendingBarMetricsChangeNotification, nonatomic, readonly) bool sendingBarMetricsChangeNotification;
@property (readonly) Class superclass;
@property (nonatomic) bool suppressesBlur;
@property (nonatomic, readonly) UITextField *textField;
@property (nonatomic, retain) _SFBarTheme *theme;
@property (nonatomic) bool unifiedFieldShowsProgressView;
@property (nonatomic) bool usesFaintSeparator;
@property (nonatomic) bool usesNarrowLayout;
@property (nonatomic, readonly) double visualHeight;

+ (long long)_metricsCategory;
+ (double)estimatedDefaultHeightForStatusBarHeight:(double)arg1;
+ (double)estimatedMinimumHeightForStatusBarHeight:(double)arg1;
+ (void)initialize;
+ (double)separatorHeight;

- (void).cxx_destruct;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })URLOutlineFrameInNavigationBarSpace;
- (id)URLOutlinePopoverSourceInfo;
- (void)_URLTapped:(id)arg1;
- (id)_basicAnimationForView:(id)arg1 withKeyPath:(id)arg2;
- (void)_cancelButtonTapped:(id)arg1;
- (void)_compressedBarTapped;
- (double)_controlsAlpha;
- (void)_dismissButtonTapped:(id)arg1;
- (long long)_dragInteraction:(id)arg1 dataOwnerForSession:(id)arg2;
- (id)_dragInteraction:(id)arg1 viewToSnapshotItem:(id)arg2;
- (long long)_dropInteraction:(id)arg1 dataOwnerForSession:(id)arg2;
- (void)_formatToggleButtonTapped:(id)arg1;
- (void)_hideAvailabilityLabelNow;
- (void)_mediaStateMuteButtonTapped:(id)arg1;
- (id)_placeholderText;
- (void)_reloadButtonPressed;
- (void)_stopButtonPressed;
- (id)_timingFunctionForAnimation;
- (void)_updateAvailabilityButtonVisibilityForType:(long long)arg1 animated:(bool)arg2 showAvailabilityText:(bool)arg3 adjustURLLabels:(bool)arg4;
- (void)_updateSecurityWarningsVisibility;
- (void)_updateShowsLockIcon;
- (void)_updateText;
- (void)animateLinkImage:(struct CGImage { }*)arg1 fromRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 inView:(id)arg3 toBarItem:(long long)arg4 afterImageDisappearsBlock:(id /* block */)arg5 afterDestinationLayerBouncesBlock:(id /* block */)arg6;
- (void)animateSafariIconLinkFromPoint:(struct CGPoint { double x1; double x2; })arg1 inView:(id)arg2;
- (bool)areControlsHidden;
- (id)backdropEffect;
- (id)backdropGroupName;
- (bool)canBecomeFirstResponder;
- (void)clearEphemeralUI;
- (void)clickInteractionDidClickDown:(id)arg1;
- (void)clickInteractionDidClickUp:(id)arg1;
- (bool)clickInteractionShouldBegin:(id)arg1;
- (bool)containsBarItem:(long long)arg1;
- (double)contentUnderStatusBarHeight;
- (void)dealloc;
- (double)defaultHeight;
- (id)delegate;
- (double)dismissButtonPadding;
- (struct CGSize { double x1; double x2; })dismissButtonSize;
- (id)dragInteraction:(id)arg1 itemsForBeginningSession:(id)arg2;
- (id)dragInteraction:(id)arg1 previewForLiftingItem:(id)arg2 session:(id)arg3;
- (void)dragInteraction:(id)arg1 sessionWillBegin:(id)arg2;
- (void)dragInteraction:(id)arg1 willAnimateLiftWithAnimator:(id)arg2 session:(id)arg3;
- (bool)dropInteraction:(id)arg1 canHandleSession:(id)arg2;
- (void)dropInteraction:(id)arg1 performDrop:(id)arg2;
- (id)dropInteraction:(id)arg1 sessionDidUpdate:(id)arg2;
- (id)effectiveTheme;
- (void)fluidProgressViewDidShowProgress:(id)arg1;
- (void)fluidProgressViewWillShowProgress:(id)arg1;
- (id)formatMenuButtonPopoverSourceInfo;
- (bool)hasToolbar;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inputMode:(unsigned long long)arg2;
- (id)inputAccessoryView;
- (bool)isBackdropGroupDisabled;
- (bool)isExpanded;
- (bool)isSendingBarMetricsChangeNotification;
- (id)item;
- (void)layoutSubviews;
- (id)lockdownStatusBar;
- (double)maximumHeight;
- (double)minimumBackdropHeight;
- (double)minimumHeight;
- (void)navigationBarItemDidUpdateCustomPlaceholderText:(id)arg1;
- (void)navigationBarItemDidUpdateFormatButtonSelected:(id)arg1;
- (void)navigationBarItemDidUpdateMediaStateIcon:(id)arg1;
- (void)navigationBarItemDidUpdateOverrideBarStyleForSecurityWarning:(id)arg1;
- (void)navigationBarItemDidUpdateSecurityAnnotation:(id)arg1;
- (void)navigationBarItemDidUpdateShowsLockIcon:(id)arg1;
- (void)navigationBarItemDidUpdateShowsPageFormatButton:(id)arg1;
- (void)navigationBarItemDidUpdateShowsReaderButton:(id)arg1;
- (void)navigationBarItemDidUpdateShowsSearchIndicator:(id)arg1;
- (void)navigationBarItemDidUpdateShowsSiriReaderPlayingIcon:(id)arg1;
- (void)navigationBarItemDidUpdateShowsStopReloadButtons:(id)arg1;
- (void)navigationBarItemDidUpdateShowsTranslationButton:(id)arg1;
- (void)navigationBarItemDidUpdateShowsTranslationIcon:(id)arg1;
- (void)navigationBarItemDidUpdateStopReloadButtonShowsStop:(id)arg1;
- (void)navigationBarItemDidUpdateText:(id)arg1;
- (bool)navigationBarURLButton:(id)arg1 canWriteAtLocation:(struct CGPoint { double x1; double x2; })arg2;
- (bool)navigationBarURLButton:(id)arg1 shouldAllowLongPressAtPoint:(struct CGPoint { double x1; double x2; })arg2;
- (bool)navigationBarURLButton:(id)arg1 shouldShowMenuForGestureWithRecognizer:(id)arg2;
- (void)navigationBarURLButtonBeginSuppressingPlaceholder:(id)arg1;
- (void)navigationBarURLButtonDidReceiveCopyCommand:(id)arg1;
- (void)navigationBarURLButtonDidReceivePasteCommand:(id)arg1;
- (void)navigationBarURLButtonDidRequestFocusForPencilInput:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)navigationBarURLButtonEndSuppressingPlaceholder:(id)arg1;
- (bool)navigationBarURLButtonIsUsingNarrowLayout:(id)arg1;
- (bool)navigationBarURLButtonShouldCopy:(id)arg1;
- (bool)navigationBarURLButtonShouldPaste:(id)arg1;
- (id)newTextField;
- (double)placeholderHorizontalInset;
- (id)popoverPassthroughViews;
- (id)popoverSourceInfoForBarItem:(long long)arg1;
- (id)reloadButtonPopoverSourceInfo;
- (void)setBackdropGroupDisabled:(bool)arg1;
- (void)setBackdropGroupName:(id)arg1;
- (void)setContentUnderStatusBarHeight:(double)arg1;
- (void)setControlsHidden:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDismissButtonHidden:(bool)arg1;
- (void)setDismissButtonStyle:(long long)arg1 animated:(bool)arg2;
- (void)setExpanded:(bool)arg1;
- (void)setExpanded:(bool)arg1 completionHandler:(id /* block */)arg2;
- (void)setExpanded:(bool)arg1 textFieldSelectionRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)setExpanded:(bool)arg1 textFieldSelectionRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 completionHandler:(id /* block */)arg3;
- (void)setHasToolbar:(bool)arg1;
- (void)setInputAccessoryView:(id)arg1;
- (void)setItem:(id)arg1;
- (void)setLockdownStatusBar:(id)arg1;
- (void)setMaximumHeight:(double)arg1;
- (void)setMinimumBackdropHeight:(double)arg1;
- (void)setSuppressesBlur:(bool)arg1;
- (void)setTextFieldPlaceHolderColor:(id)arg1;
- (void)setTheme:(id)arg1;
- (void)setUnifiedFieldShowsProgressView:(bool)arg1;
- (void)setUsesFaintSeparator:(bool)arg1;
- (void)setUsesNarrowLayout:(bool)arg1;
- (bool)suppressesBlur;
- (id)textField;
- (id)textFieldForNavigationBarURLButton:(id)arg1;
- (bool)textFieldIsEditableForNavigationBarURLButton:(id)arg1;
- (id)textForNavigationBarURLButton:(id)arg1;
- (id)theme;
- (void)tintColorDidChange;
- (void)traitCollectionDidChange:(id)arg1;
- (bool)unifiedFieldShowsProgressView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })urlOutlineFrameRelativeToView:(id)arg1;
- (bool)usesFaintSeparator;
- (bool)usesNarrowLayout;
- (double)visualHeight;

@end
