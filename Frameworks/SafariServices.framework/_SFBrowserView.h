
@interface _SFBrowserView : UIView {
    SFPinnableBanner * _appBannerPendingFirstPaint;
    UIView * _appInfoOverlay;
    double  _bottomBarOffset;
    UIView * _contentContainerView;
    bool  _contentReadyForDisplay;
    SFCrashBanner * _crashBanner;
    double  _crashBannerOffset;
    WKWebView * _currentWebView;
    <SFBrowserViewDelegate> * _delegate;
    bool  _hasReceivedTouchEvents;
    double  _minimalUITopOffset;
    SFNanoDomainContainerView * _nanoDomainContainerView;
    _SFNavigationBar * _navigationBar;
    unsigned long long  _navigationBarBehavior;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _obscuredInsets;
    SFPinnableBanner * _pinnableBanner;
    struct CGPoint { 
        double x; 
        double y; 
    }  _pinnableBannerOffset;
    _SFLinkPreviewHeader * _previewHeader;
    UIView * _quickLookDocumentView;
    UIView * _scrollToTopView;
    bool  _shouldUseScrollToTopView;
    UIView * _statusBarBackgroundView;
    _SFToolbar * _toolbar;
    double  _topBarHeight;
    double  _unscaledWebViewWidth;
}

@property (nonatomic, retain) SFPinnableBanner *appBannerPendingFirstPaint;
@property (nonatomic, retain) UIView *appInfoOverlay;
@property (nonatomic) double bottomBarOffset;
@property (nonatomic, readonly) UIView *contentContainerView;
@property (nonatomic, retain) SFCrashBanner *crashBanner;
@property (nonatomic) double crashBannerOffset;
@property (nonatomic, readonly) WKWebView *currentWebView;
@property (nonatomic) <SFBrowserViewDelegate> *delegate;
@property (nonatomic, readonly) bool hasReceivedTouchEvents;
@property (nonatomic, readonly) bool isContentReadyForDisplay;
@property (nonatomic) double minimalUITopOffset;
@property (nonatomic, retain) SFNanoDomainContainerView *nanoDomainContainerView;
@property (nonatomic, retain) _SFNavigationBar *navigationBar;
@property (nonatomic) unsigned long long navigationBarBehavior;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } obscuredInsets;
@property (nonatomic, retain) SFPinnableBanner *pinnableBanner;
@property (nonatomic) struct CGPoint { double x1; double x2; } pinnableBannerOffset;
@property (nonatomic, retain) _SFLinkPreviewHeader *previewHeader;
@property (nonatomic, retain) UIView *quickLookDocumentView;
@property (nonatomic, readonly) UIView *scrollToTopView;
@property (nonatomic) bool shouldUseScrollToTopView;
@property (nonatomic, retain) UIView *statusBarBackgroundView;
@property (nonatomic, retain) _SFToolbar *toolbar;
@property (nonatomic) double topBarHeight;
@property (nonatomic) double unscaledWebViewWidth;

- (void).cxx_destruct;
- (void)_scaleContentInset;
- (id)accessibilityIdentifier;
- (void)addWebView:(id)arg1;
- (id)appBannerPendingFirstPaint;
- (id)appInfoOverlay;
- (double)bottomBarOffset;
- (id)contentContainerView;
- (id)crashBanner;
- (double)crashBannerOffset;
- (id)currentWebView;
- (id)delegate;
- (bool)hasReceivedTouchEvents;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isContentReadyForDisplay;
- (void)layoutSubviews;
- (double)minimalUITopOffset;
- (id)nanoDomainContainerView;
- (id)navigationBar;
- (unsigned long long)navigationBarBehavior;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })obscuredInsets;
- (id)pinnableBanner;
- (struct CGPoint { double x1; double x2; })pinnableBannerOffset;
- (id)previewHeader;
- (double)previewScaleFactor;
- (id)quickLookDocumentView;
- (id)scrollToTopView;
- (void)setAppBannerPendingFirstPaint:(id)arg1;
- (void)setAppInfoOverlay:(id)arg1;
- (void)setBottomBarOffset:(double)arg1;
- (void)setContentReadyForDisplay;
- (void)setCrashBanner:(id)arg1;
- (void)setCrashBannerOffset:(double)arg1;
- (void)setDelegate:(id)arg1;
- (void)setMinimalUITopOffset:(double)arg1;
- (void)setNanoDomainContainerView:(id)arg1;
- (void)setNavigationBar:(id)arg1;
- (void)setNavigationBarBehavior:(unsigned long long)arg1;
- (void)setObscuredInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setPinnableBanner:(id)arg1;
- (void)setPinnableBannerOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)setPreviewHeader:(id)arg1;
- (void)setQuickLookDocumentView:(id)arg1;
- (void)setShouldUseScrollToTopView:(bool)arg1;
- (void)setStatusBarBackgroundView:(id)arg1;
- (void)setToolbar:(id)arg1;
- (void)setTopBarHeight:(double)arg1;
- (void)setUnscaledWebViewWidth:(double)arg1;
- (bool)shouldUseScrollToTopView;
- (id)statusBarBackgroundView;
- (id)toolbar;
- (double)topBarHeight;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })unscaledWebViewBounds;
- (double)unscaledWebViewWidth;
- (void)updateDismissButtonStyle:(long long)arg1;
- (void)updatePreviewHeaderWithURLString:(id)arg1;

@end
