
@interface _SFBrowserContentViewController : UIViewController <PKAddPassesViewControllerDelegate, SFAppSuggestionBannerDelegate, SFBrowserKeyCommandSafariViewControllerMethods, SFBrowserViewDelegate, SFOverlayProviderDelegate, SFQuickLookDocumentSource, SFReaderEnabledWebViewControllerDelegate, SFReaderViewControllerDelegate, SFWebExtensionControllerProfileDelegate, UIGestureRecognizerDelegate, UIScrollViewDelegate, WBSDigitalHealthManagerDelegate, WBSFluidProgressControllerWindowDelegate, WBSFluidProgressStateSource, WBSTranslationConsentAlertHelperDelegate, WBSTranslationContextDelegate, _SFActivityItemCustomizationDelegate, _SFActivityViewControllerDelegate, _SFBarManagerDelegate, _SFBrowserContentController, _SFBrowserDocument, _SFBrowserViewProviding, _SFDownloadDelegate, _SFDynamicBarAnimatorDelegate, _SFLinkPreviewHandler, _SFMailContentProviderDataSource, _SFNavigationBarDelegate, _SFPageLoadErrorControllerDelegate, _SFPrintControllerDelegate, _SFSaveToFilesOperationDelegate, _SFSingleBookmarkNavigationControllerDelegate> {
    NSString * _EVOrganizationName;
    bool  _EVOrganizationNameIsValid;
    WBSURLSpoofingMitigator * _URLSpoofingMitigator;
    bool  __isUsedForAuthentication;
    _SFNavigationUtilitiesManager * __navigationUtilitiesManager;
    long long  __persona;
    _WKActivatedElementInfo * _activatedElementInfo;
    _SFDownload * _activeDownload;
    _SFActivityViewController * _activityViewController;
    WBSAutoFillQuirksManager * _autoFillQuirksManager;
    bool  _autoHidingHomeIndicatorPermitted;
    WKBackForwardListItem * _backForwardListItemForCurrentAppLinkBannerCheck;
    _SFBarManager * _barManager;
    _SFToolbar * _bottomToolbar;
    _SFBrowserView * _browserView;
    bool  _browsingModeDidSupportAdvancedPrivacyProtectionsAtPreviousNavigation;
    NSString * _bundleIdentifierForProfileInstallation;
    WBSDigitalHealthManager * _cachedDigitalHealthManager;
    WBSAllowedLegacyTLSHostManager * _cachedLegacyTLSHostManager;
    _SFMailContentProvider * _cachedMailContentProvider;
    unsigned long long  _cachedMediaStateIcon;
    _SFCalendarEventDetector * _calendarEventDetector;
    bool  _canOpenDownloadForInitialLoad;
    long long  _concurrentNavigationActionPolicyDecisions;
    SFSafariViewControllerConfiguration * _configuration;
    SFContentBlockerManager * _contentBlockerManager;
    double  _crashBannerDraggingOffset;
    NSURL * _currentUsageTrackingURL;
    bool  _customActivityButtonIsValid;
    _SFApplicationExtensionActivity * _customButtonUIActivity;
    long long  _customPreferredStatusBarStyle;
    WKWebpagePreferences * _defaultWebpagePreferences;
    <_SFBrowserContentViewControllerDelegate> * _delegate;
    bool  _didNotifyInitialLoadFinish;
    bool  _didReceivePolicyForInitialLoad;
    bool  _didSetUpInterface;
    bool  _disableAdvancedPrivateBrowsingPrivacyProtectionsWhenReloading;
    bool  _disableContentBlockersWhenReloading;
    bool  _disablePrivateRelayWhenReloading;
    long long  _dismissButtonStyle;
    long long  _displayMode;
    _SFDownload * _downloadToShowInQuickLook;
    _SFDynamicBarAnimator * _dynamicBarAnimator;
    unsigned long long  _externalAppRedirectState;
    WBSFluidProgressController * _fluidProgressController;
    WBSFluidProgressState * _fluidProgressState;
    bool  _gestureRequiresGoingBackToOwnerWebView;
    UIPanGestureRecognizer * _hideNavigationBarGestureRecognizer;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _horizontalScrollIndicatorBaseInsets;
    long long  _hostAppModalPresentationStyle;
    bool  _interfaceFillsScreen;
    bool  _isDisplayingTelephonyPrompt;
    bool  _isNavigatingViaNormalReload;
    bool  _isNavigatingViaReloadWithoutPrivateRelay;
    bool  _isShowingHTTPAuthenticationDialog;
    bool  _isSuppressingPreviewProgressAnimation;
    bool  _keepBarsMinimized;
    WKBackForwardListItem * _lastBackFowardListItemOnWhichReaderWasActivated;
    NSError * _lastLoadErrorForFormatMenu;
    unsigned long long  _lastReaderDeactivationMode;
    struct CGSize { 
        double width; 
        double height; 
    }  _lastSizeUsedForBrowserViewLayout;
    _WKUserInitiatedAction * _lastUserInitiatedAction;
    NSArray * _linkActions;
    bool  _loadWasUserDriven;
    SFNanoDomainContainerView * _nanoDomainContainerView;
    _SFNavigationBar * _navigationBar;
    SFNavigationBarItem * _navigationBarItem;
    NSURL * _originalRequestURL;
    _SFPageFormatMenuController * _pageFormatMenuController;
    _SFPageLoadErrorController * _pageLoadErrorController;
    bool  _pageScrollsWithBottomBar;
    id /* block */  _pendingNavigationActionDueToExternalSchemePromptHandler;
    bool  _pendingNavigationWillLoadWithLockdownModeEnabled;
    _SFPerSitePreferencesVendor * _perSitePreferencesVendor;
    double  _pinnableBannerDraggingOffset;
    SFPinnableBanner * _pinnableBannerPendingFirstPaint;
    UIColor * _preferredBarTintColor;
    UIColor * _preferredControlTintColor;
    bool  _prefersHomeIndicatorAutoHidden;
    NSTimer * _previewCloseTimer;
    WKWebView * _previewWebView;
    bool  _previousURLWasLoadedWithAdvancedPrivateBrowsingPrivacyProtections;
    bool  _previousURLWasLoadedWithContentBlockersEnabled;
    bool  _previousURLWasLoadedWithPrivateRelay;
    _SFPrintController * _printController;
    SFQuickLookDocument * _quickLookDocument;
    bool  _quickLookDocumentCheckCompleted;
    SFQuickLookDocumentController * _quickLookDocumentController;
    SFQuickLookDocumentWriter * _quickLookDocumentWriter;
    SFReaderViewController * _readerViewController;
    _SFReloadOptionsController * _reloadOptionsController;
    bool  _remoteSwipeGestureEnabled;
    long long  _safariDataSharingMode;
    _SFSaveToFilesOperation * _saveToFilesOperation;
    SFScreenTimeOverlayViewController * _screenTimeOverlayViewController;
    bool  _scrollViewIsDragging;
    _SFSecIdentityPreferencesController * _secIdentityPreferencesController;
    _SFSafariSharingExtensionController * _sharingExtensionController;
    bool  _shouldAutoHideHomeIndicator;
    bool  _shouldDismissReaderInReponseToSameDocumentNavigation;
    bool  _shouldFillStringForFind;
    bool  _shouldReflectTranslationAsFluidProgress;
    bool  _shouldRevealAppLinkBannerForNextCommit;
    UITapGestureRecognizer * _showBarsFromBottomBarRecognizer;
    bool  _showingCrashBanner;
    bool  _showingPinnableBanner;
    bool  _showingReader;
    unsigned long long  _sizeTransitionCount;
    bool  _storeBannersAreDisabled;
    NSString * _suggestedFilenameForNextCommit;
    _SFTelephonyNavigationMitigationPolicy * _telephonyNavigationPolicy;
    WBSTranslationContext * _translationContext;
    NSTimer * _updateContinuityTimer;
    NSURL * _urlForPendingNavigationToFallbackURLForWellKnownChangePasswordURL;
    NSURL * _urlToReloadEnablingPrivateRelay;
    NSURL * _urlToReloadForAdvancedPrivateBrowsingPrivacyProtections;
    NSURL * _urlToReloadForcingContentBlockers;
    bool  _usesNarrowLayout;
    NSUUID * _uuid;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _verticalScrollIndicatorBaseInsets;
    bool  _viewDidAppearInHostApp;
    bool  _wasLoadedWithAdvancedPrivateBrowsingPrivacyProtections;
    bool  _wasLoadedWithContentBlockersEnabled;
    bool  _wasLoadedWithLockdownModeEnabled;
    bool  _wasLoadedWithPrivateRelay;
    SFWebExtensionsController * _webExtensionsController;
    NSMutableArray * _webViewControllers;
    bool  _webViewIsInFullScreen;
    bool  _webViewLayoutUnderlapsStatusBar;
    WBSWellKnownURLResponseCodeReliabilityChecker * _wellKnownURLResponseCodeReliabilityChecker;
    WKPreferences * _wkPreferences;
    long long  siriReaderPlaybackStateForActiveTab;
}

@property (nonatomic, readonly) NSURL *URLForPerSitePreferences;
@property (nonatomic, readonly) NSString *_hostAppBundleId;
@property (nonatomic, readonly) bool _isUsedForAuthentication;
@property (nonatomic, retain) _SFNavigationUtilitiesManager *_navigationUtilitiesManager;
@property (nonatomic, readonly) long long _persona;
@property (nonatomic, readonly) bool _shouldReloadImmediatelyAfterPageLoadError;
@property (nonatomic, readonly) bool _usesScrollToTopView;
@property (nonatomic, retain) _WKActivatedElementInfo *activatedElementInfo;
@property (nonatomic, readonly) <_SFBrowserDocument> *activeDocument;
@property (nonatomic, readonly) <WBSWebExtensionTab> *activeTabForExtensions;
@property (nonatomic, readonly) _SFWebView *activeWebView;
@property (nonatomic, readonly, copy) NSSet *allBrowserHistories;
@property (nonatomic, readonly, copy) NSSet *allBrowserProfileIdentifiers;
@property (nonatomic, readonly) bool browserHasMultipleProfiles;
@property (nonatomic, readonly) _SFBrowserView *browserView;
@property (nonatomic, readonly) NSString *bundleIdentifierForProfileInstallation;
@property (nonatomic, readonly) bool canHideToolbar;
@property (nonatomic, readonly) bool canPrint;
@property (nonatomic, readonly) bool canReadActiveLanguage;
@property (nonatomic, copy) SFSafariViewControllerConfiguration *configuration;
@property (nonatomic, readonly) SFContentBlockerManager *contentBlockerManager;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <_SFBrowserContentViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) bool didNotifyInitialLoadFinish;
@property (nonatomic) long long dismissButtonStyle;
@property (nonatomic) long long displayMode;
@property (nonatomic, readonly) unsigned long long downloadsCount;
@property (nonatomic, readonly) bool hasDedicatedDownloadsToolbarItem;
@property (nonatomic, readonly) bool hasDedicatedExtensionsButton;
@property (nonatomic, readonly) bool hasDedicatedMediaStateButton;
@property (nonatomic, readonly) bool hasUnviewedDownloads;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long hostAppModalPresentationStyle;
@property (nonatomic, readonly) bool isBlockedByScreenTime;
@property (nonatomic) bool isNavigatingViaReloadWithoutPrivateRelay;
@property (nonatomic, readonly) bool isSecure;
@property (nonatomic, readonly) bool isShowingErrorPage;
@property (nonatomic) bool keepBarsMinimized;
@property (nonatomic, copy) NSArray *linkActions;
@property (nonatomic, readonly) unsigned long long mediaStateIcon;
@property (nonatomic, readonly) _SFPageZoomPreferenceManager *pageZoomManager;
@property (nonatomic, readonly) _SFPerSitePreferencesVendor *perSitePreferencesVendor;
@property (nonatomic, retain) UIColor *preferredBarTintColor;
@property (nonatomic, retain) UIColor *preferredControlTintColor;
@property (nonatomic, readonly) bool privacyReportShouldSeparateBlockedTrackers;
@property (getter=isPrivateBrowsingEnabled, nonatomic, readonly) bool privateBrowsingEnabled;
@property (nonatomic, readonly) <SFReaderContext> *readerContext;
@property (nonatomic, retain) _SFReloadOptionsController *reloadOptionsController;
@property (nonatomic) bool remoteSwipeGestureEnabled;
@property (nonatomic, readonly) SFReaderEnabledWebViewController *rootWebViewController;
@property (nonatomic) long long safariDataSharingMode;
@property (getter=isShowingReader, nonatomic, readonly) bool showingReader;
@property (nonatomic, readonly) long long siriReaderPlaybackStateForActiveTab;
@property (nonatomic) bool storeBannersAreDisabled;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsPrivacyReport;
@property (nonatomic, readonly) SFBrowserDocumentTrackerInfo *trackerInfo;
@property (nonatomic, retain) WBSTranslationContext *translationContext;
@property (nonatomic, copy) NSUUID *uuid;
@property (nonatomic, readonly) UIViewController *viewControllerToPresentFrom;
@property (nonatomic) bool viewDidAppearInHostApp;
@property (nonatomic, readonly) bool wasLoadedWithAdvancedPrivateBrowsingPrivacyProtections;
@property (nonatomic, readonly) bool wasLoadedWithContentBlockersEnabled;
@property (nonatomic, readonly) bool wasLoadedWithPrivateRelay;
@property (nonatomic, readonly) SFWebExtensionsController *webExtensionsController;
@property (nonatomic, readonly) WKWebView *webView;
@property (nonatomic, readonly) SFReaderEnabledWebViewController *webViewController;
@property (nonatomic) bool webViewLayoutUnderlapsStatusBar;
@property (nonatomic, readonly) WKPreferences *wkPreferences;

+ (void)createDefaultWebsiteDataStore;

- (void).cxx_destruct;
- (id)URLForPerSitePreferences;
- (id)_EVOrganizationName;
- (id)_applicationPayloadForOpeningInSafari;
- (bool)_canSaveWebpage;
- (bool)_canSaveWebpageForURL:(id)arg1;
- (bool)_canScrollToTopInView:(id)arg1;
- (bool)_canShowDownloadWithoutPrompting:(id)arg1;
- (bool)_canShowPageFormatMenu;
- (bool)_canTranslateWebpages;
- (void)_cancelPendingUpdateUserActivityTimer;
- (void)_checkForAppLink;
- (void)_cleanUpAfterRedirectToExternalApp;
- (void)_cleanUpWebViewController:(id)arg1;
- (void)_closePreviewDocumentTimerFired:(id)arg1;
- (id)_committedDomainForPreferences;
- (void)_completeRedirectToExternalNavigationResult:(id)arg1 fromOriginalRequest:(id)arg2 dialogResult:(long long)arg3;
- (id)_contextMenuConfigurationForWebView:(id)arg1 element:(id)arg2;
- (id)_contextMenuContentPreviewForWebView:(id)arg1 element:(id)arg2;
- (double)_crashBannerDraggingOffsetForContentOffset:(struct CGPoint { double x1; double x2; })arg1;
- (id)_createPersistentDataStoreWithConfiguration:(id)arg1;
- (id)_currentWebView;
- (bool)_currentlyEditingText;
- (void)_decreasePageZoomSetting;
- (void)_determineResultOfLoadingRequest:(id)arg1 inMainFrame:(bool)arg2 disallowRedirectToExternalApps:(bool)arg3 completionHandler:(id /* block */)arg4;
- (void)_didCompleteScrolling;
- (void)_didCompleteViewSizeTransition;
- (void)_didDecideNavigationPolicy:(long long)arg1 forNavigationAction:(id)arg2;
- (void)_didDecideNavigationPolicy:(long long)arg1 forNavigationResponse:(id)arg2;
- (void)_didLoadWebView;
- (void)_didResolveDestinationURL:(id)arg1 pendingAppLinkCheck:(bool)arg2;
- (id)_digitalHealthManager;
- (void)_dismiss;
- (bool)_dismissTransientUIAnimated:(bool)arg1;
- (bool)_effectiveBarCollapsingEnabled;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_effectiveWebViewSafeAreaInsets;
- (void)_emailCurrentPageWithPreferredContentType:(long long)arg1;
- (id)_fallbackURLForWellKnownChangePasswordURL:(id)arg1;
- (id)_fallbackURLForWellKnownChangePasswordURLFromQuirks:(id)arg1;
- (void)_fetchActivityViewControllerInfoForURL:(id)arg1 title:(id)arg2 completion:(id /* block */)arg3;
- (void)_fetchSharingURLWithCompletionHandler:(id /* block */)arg1;
- (void)_getSafariDataSharingModeWithCompletion:(id /* block */)arg1;
- (void)_goBack;
- (void)_goBackToOwnerWebView;
- (void)_goForward;
- (void)_hideCrashBanner;
- (void)_hideDigitalHealthOverlay;
- (bool)_hideFindOnPage;
- (void)_hideNavigationBarGestureRecognized:(id)arg1;
- (void)_hideQuickLookDocumentView;
- (void)_hideReaderAnimated:(bool)arg1 deactivationMode:(unsigned long long)arg2;
- (id)_homePageForURL:(id)arg1;
- (id)_hostAppBundleId;
- (void)_increasePageZoomSetting;
- (void)_initialLoadFinishedWithSuccess:(bool)arg1;
- (void)_initializeWebKitExperimentalFeatures;
- (void)_internalWebViewController:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(id /* block */)arg3;
- (void)_internalWebViewController:(id)arg1 decidePolicyForNavigationAction:(id)arg2 withResult:(id)arg3 decisionHandler:(id /* block */)arg4;
- (void)_invalidateEVOrganizationName;
- (void)_invalidatePreviewCloseTimer;
- (void)_invalidateUserActivity;
- (void)_invalidateWebViewControllers;
- (void)_invokeCustomActivity;
- (bool)_isPreviewing;
- (bool)_isSplitScreen;
- (bool)_isUsedForAuthentication;
- (id)_itemProviderCollectionForSharingURL:(id)arg1 title:(id)arg2;
- (void)_keyboardWillHide:(id)arg1;
- (void)_layOutBrowserViewForSizeTransition;
- (id)_mailContentProvider;
- (double)_maximumHeightObscuredByBottomBar;
- (id)_navigationUtilitiesManager;
- (bool)_notifyInitialLoadDidFinish:(bool)arg1;
- (double)_offsetForDynamicBarAnimator;
- (bool)_onlyWantsWebAppShortcuts;
- (void)_openCurrentURLInSafari;
- (id)_openNewWebViewIfNeededWithConfiguration:(id)arg1 forNavigationAction:(id)arg2;
- (void)_perSiteAutomaticReaderActivationPreferenceDidChange:(id)arg1;
- (void)_perSiteLockdownModePreferenceDidChange:(id)arg1;
- (void)_perSitePageZoomPreferenceDidChange:(id)arg1;
- (long long)_persona;
- (bool)_personaShouldUseScreenTime;
- (void)_popWebViewController;
- (void)_presentActivityViewController;
- (void)_presentSaveWebpageViewController;
- (void)_presentTranslationConsentAlertWithType:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (void)_pushWebViewController:(id)arg1;
- (void)_queueAlertForRedirectToExternalNavigationResult:(id)arg1 fromOriginalRequest:(id)arg2 isMainFrame:(bool)arg3 promptPolicy:(long long)arg4 userAction:(id)arg5;
- (id)_quickLookDocumentForDownload:(id)arg1;
- (bool)_readerViewControllerNeedsSetUp;
- (void)_redirectToExternalNavigationResult:(id)arg1 fromOriginalRequest:(id)arg2 promptPolicy:(long long)arg3 isMainFrame:(bool)arg4 userAction:(id)arg5;
- (bool)_redirectToHostAppWithExpectedCallbackSchemeIfPossible:(id)arg1;
- (bool)_redirectToHostAppWithNavigationResult:(id)arg1 options:(id)arg2;
- (void)_redirectToNewsIfNeededForRequest:(id)arg1 isMainFrame:(bool)arg2 userAction:(id)arg3 decisionHandler:(id /* block */)arg4;
- (void)_reloadFromOrigin:(bool)arg1;
- (id)_requestBySettingAdvancedPrivacyProtectionsFlag:(id)arg1;
- (void)_resetPageZoomSetting;
- (bool)_safeAreaShouldAffectWebViewObscuredInsets;
- (void)_scrollToTopFromScrollToTopView;
- (void)_setCurrentWebViewController:(id)arg1;
- (void)_setShowingCrashBanner:(bool)arg1 animated:(bool)arg2;
- (void)_setShowingPinnableBanner:(id)arg1 animated:(bool)arg2;
- (void)_setShowingReader:(bool)arg1 deactivationMode:(unsigned long long)arg2 animated:(bool)arg3;
- (void)_setSuppressingPreviewProgressAnimation:(bool)arg1;
- (void)_setUpAnalyticsPersona;
- (void)_setUpCalendarEventDetectorIfNeeded;
- (void)_setUpCookieStoragePolicyForDataStore:(id)arg1;
- (void)_setUpInterfaceIfNeeded;
- (void)_setUpMenu;
- (void)_setUpReaderViewController;
- (void)_setUpReloadOptionsControllerIfNeeded;
- (void)_setUpToolbar;
- (void)_setUpTopBarAndBottomBar;
- (void)_setUpWebViewControllerIfNeeded;
- (void)_setWebView:(id)arg1;
- (bool)_shouldAllowAutomaticReader;
- (bool)_shouldAllowUniversalLinkBanner;
- (bool)_shouldGoBackToOwnerWebView;
- (bool)_shouldReloadImmediatelyAfterPageLoadError;
- (void)_showBars;
- (void)_showBarsFromBottomBarTap:(id)arg1;
- (void)_showCrashBanner:(id)arg1 animated:(bool)arg2;
- (void)_showDigitalHealthOverlayWithPolicy:(long long)arg1;
- (void)_showDownload:(id)arg1;
- (void)_showFinanceKitOrderPreviewControllerWithURL:(id)arg1 dismissalHandler:(id /* block */)arg2;
- (void)_showGenericDownloadAlert;
- (bool)_showICSControllerForPath:(id)arg1 sourceURL:(id)arg2;
- (void)_showPassBookControllerForPasses:(id)arg1;
- (void)_showQuickLookDocumentView;
- (void)_showReaderAnimated:(bool)arg1;
- (void)_translationAvailabilityDidChange:(id)arg1;
- (void)_translationContextStateDidChange:(id)arg1;
- (bool)_updateAppInfoOverlayForBanner:(id)arg1;
- (void)_updateBarItems;
- (void)_updateBarTheme;
- (void)_updateCrashBannerOffset;
- (void)_updateCurrentScrollViewInsets;
- (void)_updateDigitalHealthTracking;
- (void)_updateDynamicBarGeometry;
- (void)_updateHomeIndicatorAutoHideState;
- (void)_updateInterfaceFillsScreen;
- (void)_updateMaxVisibleHeightPercentageUserDriven:(bool)arg1;
- (void)_updateModalInPresentation;
- (void)_updateNavigationBar;
- (void)_updatePageZoomWithPreference;
- (void)_updatePinnableBannerFrame;
- (void)_updatePinnableBannerOffset;
- (void)_updatePreviewLoadingUI;
- (void)_updateRemoteSwipeGestureState;
- (void)_updateScrollIndicatorVerticalInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1 horizontalInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg2;
- (void)_updateScrollToTopView;
- (void)_updateStatusBarStyleForced:(bool)arg1;
- (void)_updateTrackerProtectionPreferences;
- (void)_updateUI;
- (void)_updateUserActivity;
- (void)_updateUserActivitySoon;
- (void)_updateUserActivityTimerFired;
- (void)_updateUsesLockdownStatusBar;
- (void)_updateUsesNarrowLayout;
- (void)_updateWebViewLayoutSize;
- (void)_updateWebViewShrinkToFit;
- (bool)_usesScrollToTopView;
- (void)_willBeginUserInitiatedNavigation;
- (void)_willCommitContextMenuForWebView:(id)arg1 withAnimator:(id)arg2;
- (void)_willPresentContextMenu;
- (bool)_willURLOpenHostApp:(id)arg1;
- (id)activatedElementInfo;
- (id)activeDocument;
- (id)activeTabForExtensions;
- (id)activeWebView;
- (void)activityViewController:(id)arg1 didCompleteActivity:(id)arg2 success:(bool)arg3;
- (void)activityViewController:(id)arg1 prepareActivity:(id)arg2 completion:(id /* block */)arg3;
- (void)addBookmarkNavController:(id)arg1 didFinishWithResult:(bool)arg2 bookmark:(id)arg3;
- (bool)addBookmarkNavControllerCanSaveBookmarkChanges:(id)arg1;
- (void)addPassesViewControllerDidFinish:(id)arg1;
- (void)addTrustedEventAttribution:(id)arg1;
- (void)authenticationChallengeDidNegotiateModernTLS:(id)arg1;
- (void)autoFillFormKeyPressed;
- (void)barManager:(id)arg1 didReceiveTapForBarItem:(long long)arg2;
- (bool)becomeFirstResponder;
- (void)beginDigitalHealthTracking;
- (bool)browserHasMultipleProfiles;
- (long long)browserPersonaForActivityViewController:(id)arg1;
- (long long)browserPersonaForWebViewController:(id)arg1;
- (id)browserView;
- (id)bundleIdentifierForProfileInstallation;
- (bool)canBecomeFirstResponder;
- (bool)canHideToolbar;
- (bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (bool)canPrint;
- (bool)canReadActiveLanguage;
- (void)cancelKeyPressed;
- (void)clearBadgeOnPageFormatMenu;
- (void)clearFluidProgressState;
- (void)compressedNavigationBarWasTapped:(id)arg1;
- (id)configuration;
- (id)contentBlockerManager;
- (void)contextMenuConfigurationForReaderViewController:(id)arg1 element:(id)arg2 completionHandler:(id /* block */)arg3;
- (bool)createFluidProgressState;
- (void)createReaderWebViewForWebViewController:(id)arg1;
- (id)currentFluidProgressStateSource;
- (void)customizationControllerCustomizationsDidChange:(id)arg1;
- (id)dataForQuickLookDocument:(id)arg1;
- (void)dealloc;
- (void)decideDataSharingModeAndSetUpWebViewWithCompletionHandler:(id /* block */)arg1;
- (void)decreaseSize:(id)arg1;
- (id)delegate;
- (void)didMoveToParentViewController:(id)arg1;
- (bool)didNotifyInitialLoadFinish;
- (void)didUpdateNavigationBarItem:(id)arg1;
- (void)dismissAppSuggestionBanner:(id)arg1;
- (long long)dismissButtonStyle;
- (void)dismissSFSafariViewControllerKeyPressed;
- (long long)displayMode;
- (void)downloadDidFail:(id)arg1;
- (void)downloadDidFinish:(id)arg1;
- (void)downloadDidReceiveResponse:(id)arg1;
- (void)downloadDidStart:(id)arg1;
- (unsigned long long)downloadsCount;
- (bool)dynamicBarAnimator:(id)arg1 canTransitionToState:(long long)arg2 byDraggingWithOffset:(double)arg3;
- (double)dynamicBarAnimator:(id)arg1 minimumTopBarHeightForOffset:(double)arg2;
- (void)dynamicBarAnimatorOutputsDidChange:(id)arg1;
- (void)dynamicBarAnimatorStateDidChange:(id)arg1;
- (void)dynamicBarAnimatorWillEnterSteadyState:(id)arg1;
- (void)dynamicBarAnimatorWillLeaveSteadyState:(id)arg1;
- (void)emailCurrentPage;
- (double)estimatedProgress;
- (id)expectedOrCurrentURL;
- (void)find:(id)arg1;
- (void)fluidProgressRocketAnimationDidComplete;
- (bool)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;
- (bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)handoffURL;
- (bool)hasDedicatedDownloadsToolbarItem;
- (bool)hasDedicatedExtensionsButton;
- (bool)hasDedicatedMediaStateButton;
- (bool)hasFailedURL;
- (bool)hasUnviewedDownloads;
- (long long)hostAppModalPresentationStyle;
- (void)increaseSize:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (bool)isBlockedByScreenTime;
- (bool)isContentObscuredByDigitalHealthForCustomizationController:(id)arg1;
- (bool)isDisplayingQuickLookDocumentForCustomizationController:(id)arg1;
- (bool)isNavigatingViaReloadWithoutPrivateRelay;
- (bool)isPageEligibileToShowNotSecureWarning;
- (bool)isPrivate;
- (bool)isPrivateBrowsingEnabled;
- (bool)isReaderAvailableForCustomizationController:(id)arg1;
- (bool)isSafariRestricted;
- (bool)isSecure;
- (bool)isShowingErrorPage;
- (bool)isShowingReader;
- (bool)isShowingReaderForCustomizationController:(id)arg1;
- (bool)keepBarsMinimized;
- (id)legacyTLSHostManager;
- (id)linkActions;
- (void)linkPreviewHelper:(id)arg1 commitPreviewViewControllerForAction:(long long)arg2 withTabOrder:(long long)arg3;
- (void)linkPreviewHelper:(id)arg1 didProduceNavigationIntent:(id)arg2 forAction:(long long)arg3;
- (id)linkPreviewHelper:(id)arg1 previewViewControllerForURL:(id)arg2;
- (void)linkPreviewHelper:(id)arg1 redirectToExternalNavigationResult:(id)arg2;
- (id)linkPreviewHelper:(id)arg1 resultOfLoadingURL:(id)arg2;
- (bool)linkPreviewHelper:(id)arg1 supportsAction:(long long)arg2 forURL:(id)arg3;
- (void)linkPreviewHelperWillDisableLinkPreview;
- (void)linkPreviewHelperWillOpenUniversalLinkLocally:(id)arg1;
- (void)loadRequest:(id)arg1;
- (void)loadView;
- (unsigned long long)mediaStateIcon;
- (void)navigateBackKeyPressed;
- (void)navigateForwardKeyPressed;
- (void)navigationBar:(id)arg1 didCreateLeadingToolbar:(id)arg2 trailingToolbar:(id)arg3;
- (void)navigationBarCancelButtonWasTapped:(id)arg1;
- (void)navigationBarDoneButtonWasTapped:(id)arg1;
- (void)navigationBarFormatMenuButtonBecameUnavailable:(id)arg1;
- (void)navigationBarFormatMenuButtonStartedInteraction:(id)arg1;
- (void)navigationBarFormatMenuButtonWasTapped:(id)arg1;
- (void)navigationBarMediaStateMuteButtonWasTapped:(id)arg1;
- (void)navigationBarMetricsDidChange:(id)arg1;
- (void)navigationBarReaderButtonWasTapped:(id)arg1;
- (void)navigationBarReloadButtonWasTapped:(id)arg1;
- (void)navigationBarStopLoadingButtonWasTapped:(id)arg1;
- (void)navigationBarTranslateButtonWasTapped:(id)arg1;
- (id)navigationBarURLForSharing:(id)arg1;
- (id)newProcessPool;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)overlayDidHide:(id)arg1;
- (id)overrideTraitCollectionForChildViewController:(id)arg1;
- (id)pageFormatMenuController;
- (void)pageLoadErrorController:(id)arg1 allowLegacyTLSConnectionForURL:(id)arg2 navigateToURL:(id)arg3;
- (void)pageLoadErrorController:(id)arg1 loadFailedRequestAfterError:(id)arg2;
- (void)pageLoadErrorController:(id)arg1 presentViewController:(id)arg2;
- (void)pageLoadErrorControllerClosePage:(id)arg1;
- (id)pageLoadErrorControllerGetSecIdentityPreferencesController:(id)arg1;
- (bool)pageLoadErrorControllerIsInPreviewMode:(id)arg1;
- (void)pageLoadErrorControllerReloadWithoutPrivateRelay:(id)arg1;
- (bool)pageLoadErrorControllerShouldHandleCertificateError:(id)arg1;
- (bool)pageLoadErrorControllerShouldPermanentlyAcceptCertificate:(id)arg1;
- (bool)pageLoadErrorControllerShouldReloadAfterError:(id)arg1;
- (id)pageZoomManager;
- (id)perSitePreferencesVendor;
- (void)perSiteSettingsUIPresentSettings;
- (void)policyDidChangeForDigitalHealthManager:(id)arg1;
- (id)preferredBarTintColor;
- (id)preferredControlTintColor;
- (long long)preferredStatusBarStyle;
- (bool)prefersHomeIndicatorAutoHidden;
- (void)presentDownloadsViewController;
- (void)presentModalViewController:(id)arg1 completion:(id /* block */)arg2;
- (void)presentViewController:(id)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (id)presentingViewControllerForPrintController:(id)arg1;
- (id)presentingViewControllerForWebViewController:(id)arg1;
- (void)printController:(id)arg1 didCreatePrintInfo:(id)arg2;
- (bool)printControllerCanPresentPrintUI:(id)arg1;
- (id)printControllerForContentProvider:(id)arg1;
- (bool)printControllerPageIsLoading:(id)arg1;
- (bool)printControllerShouldPrintReader:(id)arg1;
- (bool)privacyReportShouldSeparateBlockedTrackers;
- (id)processPool;
- (id)processPoolConfiguration;
- (id)progressState;
- (id)quickLookDocument;
- (id)quickLookDocumentForCurrentBackForwardListItem;
- (id)readerContext;
- (id)readerControllerForMailContentProvider:(id)arg1;
- (void)readerViewController:(id)arg1 contextMenuDidEndForElement:(id)arg2;
- (void)readerViewController:(id)arg1 contextMenuForElement:(id)arg2 willCommitWithAnimator:(id)arg3;
- (void)readerViewController:(id)arg1 contextMenuWillPresentForElement:(id)arg2;
- (bool)readerViewIsVisibleForMailContentProvider:(id)arg1;
- (void)reload;
- (void)reloadDisablingAdvancedPrivateBrowsingPrivacyProtections:(bool)arg1;
- (void)reloadDisablingContentBlockers:(bool)arg1;
- (void)reloadEnablingDowngradedPrivateRelay:(bool)arg1;
- (void)reloadFromOriginKeyPressed;
- (void)reloadKeyPressed;
- (id)reloadOptionsController;
- (bool)remoteSwipeGestureEnabled;
- (void)resetPageZoomLevelAndFontSize;
- (id)resultOfLoadingRequest:(id)arg1 inMainFrame:(bool)arg2 disallowRedirectToExternalApps:(bool)arg3;
- (id)rootWebViewController;
- (id)safariApplicationVersionForTranslationContext:(id)arg1;
- (long long)safariDataSharingMode;
- (void)saveKeyPressed;
- (void)saveToFilesOperation:(id)arg1 didFinishWithSuccess:(bool)arg2;
- (void)saveToFilesOperation:(id)arg1 presentViewController:(id)arg2;
- (void)saveWebpageAlternativeKeyPressed;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(bool)arg2;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewDidScrollToTop:(id)arg1;
- (bool)scrollViewShouldScrollToTop:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint { double x1; double x2; })arg2 targetContentOffset:(inout struct CGPoint { double x1; double x2; }*)arg3;
- (void)setActivatedElementInfo:(id)arg1;
- (void)setAppSuggestionBanner:(id)arg1 isPinned:(bool)arg2;
- (void)setConfiguration:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDismissButtonStyle:(long long)arg1;
- (void)setDisplayMode:(long long)arg1;
- (void)setHostAppModalPresentationStyle:(long long)arg1;
- (void)setIsNavigatingViaReloadWithoutPrivateRelay:(bool)arg1;
- (void)setKeepBarsMinimized:(bool)arg1;
- (void)setLinkActions:(id)arg1;
- (void)setMediaStateIcon:(unsigned long long)arg1;
- (void)setPreferredBarTintColor:(id)arg1;
- (void)setPreferredControlTintColor:(id)arg1;
- (void)setQuickLookDocumentForCurrentBackForwardListItem:(id)arg1;
- (void)setReloadOptionsController:(id)arg1;
- (void)setRemoteSwipeGestureEnabled:(bool)arg1;
- (void)setSafariDataSharingMode:(long long)arg1;
- (void)setStoreBannersAreDisabled:(bool)arg1;
- (void)setTranslationContext:(id)arg1;
- (void)setUuid:(id)arg1;
- (void)setViewDidAppearInHostApp:(bool)arg1;
- (void)setWebViewLayoutUnderlapsStatusBar:(bool)arg1;
- (void)set_navigationUtilitiesManager:(id)arg1;
- (id)sfWebExtensionsControllersContentBlockerManagersForAllProfiles:(id)arg1;
- (id)sfWebExtensionsControllersForAllProfiles:(id)arg1;
- (bool)shouldBlockAppSuggestionBanner:(id)arg1;
- (void)siriReadThisMenuInvocation;
- (long long)siriReaderPlaybackStateForActiveTab;
- (void)stopDigitalHealthTrackingWithCompletionHandler:(id /* block */)arg1;
- (void)stopLoading;
- (bool)storeBannersAreDisabled;
- (id)suggestedFileExtensionForQuickLookDocument:(id)arg1;
- (id)suggestedFileNameForQuickLookDocument:(id)arg1;
- (bool)supportsAdvancedPrivacyProtectionsForURL:(id)arg1;
- (bool)supportsPrivacyReport;
- (void)takeFindStringKeyPressed;
- (void)toggleMediaStateMuted;
- (void)toggleReaderKeyPressed;
- (void)toggleShowingReaderForUserAction;
- (void)traitCollectionDidChange:(id)arg1;
- (id)translationConsentAlertHelperViewControllerToPresentDetailsFrom:(id)arg1;
- (id)translationContext;
- (void)translationContext:(id)arg1 shouldReportProgressInUnifiedField:(bool)arg2;
- (void)translationContext:(id)arg1 showFeedbackConsentAlertWithCompletionHandler:(id /* block */)arg2;
- (void)translationContext:(id)arg1 showFirstTimeConsentAlertWithCompletionHandler:(id /* block */)arg2;
- (void)translationContext:(id)arg1 showTranslationErrorAlertWithTitle:(id)arg2 message:(id)arg3;
- (void)translationContext:(id)arg1 urlForCurrentPageWithCompletionHandler:(id /* block */)arg2;
- (bool)translationContextIsUsingPrivateBrowsing:(id)arg1;
- (void)translationContextNeedsScrollHeightVisibilityUpdate:(id)arg1;
- (void)translationContextReloadPageInOriginalLanguage:(id)arg1;
- (void)translationContextWillRequestTranslatingWebpage:(id)arg1;
- (void)updateBottombarOffset:(double)arg1 topBarHeight:(double)arg2;
- (id)uuid;
- (void)validateCommand:(id)arg1;
- (id)viewControllerToPresentFrom;
- (void)viewDidAppear:(bool)arg1;
- (bool)viewDidAppearInHostApp;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillLayoutSubviews;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (bool)wasLoadedWithAdvancedPrivateBrowsingPrivacyProtections;
- (bool)wasLoadedWithContentBlockersEnabled;
- (bool)wasLoadedWithPrivateRelay;
- (id)webExtensionsController;
- (id)webView;
- (id)webViewConfiguration;
- (id)webViewController;
- (void)webViewController:(id)arg1 authenticationChallenge:(id)arg2 shouldAllowLegacyTLS:(id /* block */)arg3;
- (void)webViewController:(id)arg1 contextMenuConfigurationForElement:(id)arg2 completionHandler:(id /* block */)arg3;
- (id)webViewController:(id)arg1 contextMenuContentPreviewForElement:(id)arg2;
- (void)webViewController:(id)arg1 contextMenuDidEndForElement:(id)arg2;
- (void)webViewController:(id)arg1 contextMenuForElement:(id)arg2 willCommitWithAnimator:(id)arg3;
- (void)webViewController:(id)arg1 contextMenuWillPresentForElement:(id)arg2;
- (void)webViewController:(id)arg1 createWebViewWithConfiguration:(id)arg2 forNavigationAction:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)webViewController:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(id /* block */)arg3;
- (void)webViewController:(id)arg1 decidePolicyForNavigationResponse:(id)arg2 decisionHandler:(id /* block */)arg3;
- (void)webViewController:(id)arg1 decidePolicyForSOAuthorizationLoadWithCurrentPolicy:(long long)arg2 forExtension:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)webViewController:(id)arg1 didChangeFullScreen:(bool)arg2;
- (void)webViewController:(id)arg1 didClickLinkInReaderWithRequest:(id)arg2;
- (void)webViewController:(id)arg1 didCommitNavigation:(id)arg2;
- (void)webViewController:(id)arg1 didEndNavigationGestureToBackForwardListItem:(id)arg2;
- (void)webViewController:(id)arg1 didExtractTextSamplesForTranslation:(id)arg2;
- (void)webViewController:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webViewController:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webViewController:(id)arg1 didFindAppBannerWithContent:(id)arg2;
- (void)webViewController:(id)arg1 didFinishDocumentLoadForNavigation:(id)arg2;
- (void)webViewController:(id)arg1 didFinishLoadForQuickLookDocumentInMainFrame:(id)arg2;
- (void)webViewController:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webViewController:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)webViewController:(id)arg1 didReceiveServerRedirectForProvisionalNavigation:(id)arg2;
- (void)webViewController:(id)arg1 didSameDocumentNavigation:(id)arg2 ofType:(long long)arg3;
- (id)webViewController:(id)arg1 didStartDownload:(id)arg2;
- (void)webViewController:(id)arg1 didStartLoadForQuickLookDocumentInMainFrameWithFileName:(id)arg2 uti:(id)arg3;
- (void)webViewController:(id)arg1 didStartProvisionalNavigation:(id)arg2;
- (void)webViewController:(id)arg1 mediaCaptureStateDidChange:(unsigned long long)arg2;
- (long long)webViewController:(id)arg1 presentationPolicyForDialog:(id)arg2;
- (void)webViewController:(id)arg1 printFrame:(id)arg2;
- (void)webViewController:(id)arg1 webViewDidClose:(id)arg2;
- (void)webViewController:(id)arg1 willEndNavigationGestureToBackForwardListItem:(id)arg2;
- (void)webViewController:(id)arg1 willGoToBackForwardListItem:(id)arg2 inPageCache:(bool)arg3;
- (void)webViewController:(id)arg1 willPerformClientRedirectToURL:(id)arg2 withDelay:(double)arg3;
- (bool)webViewControllerCanFindNextOrPrevious:(id)arg1;
- (bool)webViewControllerCanPromptForAccountSecurityRecommendation:(id)arg1;
- (void)webViewControllerDidCancelClientRedirect:(id)arg1;
- (void)webViewControllerDidChangeEstimatedProgress:(id)arg1;
- (void)webViewControllerDidChangeHasOnlySecureContent:(id)arg1;
- (void)webViewControllerDidChangeLoadingState:(id)arg1;
- (void)webViewControllerDidChangeSafeAreaInsets:(id)arg1;
- (void)webViewControllerDidChangeSafeAreaShouldAffectObscuredInsets:(id)arg1;
- (void)webViewControllerDidChangeURL:(id)arg1;
- (void)webViewControllerDidDetermineReaderAvailability:(id)arg1 dueTo:(long long)arg2;
- (void)webViewControllerDidFirstPaint:(id)arg1;
- (void)webViewControllerDidFirstVisuallyNonEmptyLayout:(id)arg1;
- (bool)webViewControllerShouldFillStringForFind:(id)arg1;
- (void)webViewControllerUpdateNavigationBar:(id)arg1;
- (void)webViewControllerWebProcessDidBecomeResponsive:(id)arg1;
- (void)webViewControllerWebProcessDidBecomeUnresponsive:(id)arg1;
- (void)webViewControllerWebProcessDidCrash:(id)arg1;
- (void)webViewControllerWillPresentJavaScriptDialog:(id)arg1;
- (id)webViewForCustomizationController:(id)arg1;
- (id)webViewForMailContentProvider:(id)arg1;
- (bool)webViewLayoutUnderlapsStatusBar;
- (id)websiteDataStore;
- (id)websiteDataStoreConfiguration;
- (id)wkPreferences;

@end
