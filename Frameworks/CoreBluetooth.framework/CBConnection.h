
@interface CBConnection : NSObject <CBActivatable, CBCentralManagerDelegate, CBErrorReporting, CBInterruptable, CBLabelable, CBPairable, CBPairingAgentDelegate, CBPeripheralDelegate, CBReadWriteRequestable, CBRemotable, CBStateReporting, CBUseCaseable, CUReadWriteRequestable, CUXPCCodable> {
    bool  _activateCalled;
    id /* block */  _activateCompletion;
    unsigned short  _blePSM;
    NSUUID * _blePeerUUID;
    long long  _bluetoothState;
    id /* block */  _bluetoothStateChangedHandler;
    CBCentralManager * _centralManager;
    NSString * _clientBundleID;
    unsigned int  _clientID;
    long long  _clientUseCase;
    double  _connectTimeoutSeconds;
    NSObject<OS_dispatch_source> * _connectTimeoutTimer;
    double  _connectedTime;
    unsigned int  _connectionFlags;
    long long  _connectionLatency;
    long long  _connectionScanDutyCycle;
    NSObject<OS_dispatch_queue> * _dispatchQueue;
    id /* block */  _errorHandler;
    bool  _guardConnected;
    unsigned int  _internalFlags;
    id /* block */  _interruptionHandler;
    bool  _invalidateCalled;
    bool  _invalidateDone;
    id /* block */  _invalidationHandler;
    CBL2CAPChannel * _l2capChannel;
    NSString * _label;
    id /* block */  _pairingCompletedHandler;
    NSData * _pairingOOBData;
    id /* block */  _pairingPromptHandler;
    long long  _pairingType;
    CBDevice * _peerDevice;
    CBPeripheral * _peripheral;
    CBReadRequest * _readRequestCurrent;
    NSMutableArray * _readRequests;
    NSObject<OS_dispatch_source> * _readSource;
    unsigned char  _readSuspended;
    CBDevice * _remoteDevice;
    CBServer * _server;
    id /* block */  _serverInvalidationHandler;
    unsigned int  _serviceFlags;
    NSArray * _serviceUUIDs;
    int  _socketFD;
    int  _state;
    struct LogCategory { int x1; int x2; char *x3; unsigned int x4; char *x5; char *x6; int x7; struct LogCategory {} *x8; struct LogOutput {} *x9; struct LogOutput {} *x10; unsigned long long x11; unsigned long long x12; unsigned int x13; unsigned int x14; char *x15; struct LogCategoryPrivate {} *x16; } * _ucat;
    unsigned int  _useCase;
    NSArray * _useCaseClientIDs;
    CBWriteRequest * _writeRequestCurrent;
    NSMutableArray * _writeRequests;
    NSObject<OS_dispatch_source> * _writeSource;
    unsigned char  _writeSuspended;
    NSObject<OS_xpc_object> * _xpcCnx;
    id /* block */  _xpcForwardMessageReceiveHandler;
    NSObject<OS_xpc_object> * _xpcListenerEndpoint;
    id /* block */  _xpcSendEventHandler;
}

@property (nonatomic) unsigned short blePSM;
@property (nonatomic, readonly) long long bluetoothState;
@property (nonatomic, copy) id /* block */ bluetoothStateChangedHandler;
@property (nonatomic, copy) NSString *clientBundleID;
@property (nonatomic) unsigned int clientID;
@property (nonatomic) long long clientUseCase;
@property (nonatomic) double connectTimeoutSeconds;
@property (nonatomic) double connectedTime;
@property (nonatomic) unsigned int connectionFlags;
@property (nonatomic) long long connectionLatency;
@property (nonatomic) long long connectionScanDutyCycle;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (nonatomic, copy) id /* block */ errorHandler;
@property (readonly) unsigned long long hash;
@property (nonatomic) unsigned int internalFlags;
@property (nonatomic, copy) id /* block */ interruptionHandler;
@property (nonatomic, copy) id /* block */ invalidationHandler;
@property (nonatomic, retain) CBL2CAPChannel *l2capChannel;
@property (nonatomic, copy) NSString *label;
@property (nonatomic, copy) id /* block */ pairingCompletedHandler;
@property (nonatomic, copy) id /* block */ pairingPromptHandler;
@property (nonatomic, retain) CBDevice *peerDevice;
@property (nonatomic, retain) CBDevice *remoteDevice;
@property (nonatomic, retain) CBServer *server;
@property (nonatomic, copy) id /* block */ serverInvalidationHandler;
@property (nonatomic) unsigned int serviceFlags;
@property (nonatomic, copy) NSArray *serviceUUIDs;
@property (readonly) Class superclass;
@property (nonatomic) unsigned int useCase;
@property (nonatomic, copy) NSArray *useCaseClientIDs;
@property (nonatomic, copy) id /* block */ xpcForwardMessageReceiveHandler;
@property (nonatomic, retain) NSObject<OS_xpc_object> *xpcListenerEndpoint;
@property (nonatomic, copy) id /* block */ xpcSendEventHandler;

- (void).cxx_destruct;
- (void)_abortReadsWithError:(id)arg1;
- (void)_abortWritesWithError:(id)arg1;
- (void)_activateWithCompletion:(id /* block */)arg1;
- (void)_activateXPCCompleted:(id)arg1;
- (void)_activateXPCStart:(bool)arg1;
- (void)_completeReadRequest:(id)arg1 error:(id)arg2;
- (void)_completeWriteRequest:(id)arg1 error:(id)arg2;
- (id)_ensureXPCStarted;
- (void)_interrupted;
- (void)_invalidate;
- (void)_invalidated;
- (void)_pairWithOOBData:(id)arg1;
- (void)_pairingGenerateOOBDataWithCompletionHandler:(id /* block */)arg1;
- (void)_pairingPerformActionBLE:(int)arg1 withOptions:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)_pairingPerformActionClassic:(int)arg1 completionHandler:(id /* block */)arg2;
- (void)_pairingPerformActionClassic:(int)arg1 withOptions:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)_pairingSetOOBEnabled:(bool)arg1 completionHandler:(id /* block */)arg2;
- (void)_prepareReadRequest:(id)arg1;
- (bool)_prepareWriteRequest:(id)arg1 error:(id*)arg2;
- (bool)_processReadStatus;
- (void)_processReads:(bool)arg1;
- (void)_processWrites;
- (void)_reportError:(id)arg1;
- (void)_run;
- (bool)_runConnectStart;
- (bool)_runSetupChannel;
- (bool)_setupIOAndReturnError:(id*)arg1;
- (bool)_startConnectingAndReturnError:(id*)arg1;
- (void)_xpcReceivedMessage:(id)arg1;
- (bool)activateDirectAndReturnError:(id*)arg1;
- (void)activateWithCompletion:(id /* block */)arg1;
- (unsigned short)blePSM;
- (long long)bluetoothState;
- (id /* block */)bluetoothStateChangedHandler;
- (void)centralManager:(id)arg1 didConnectPeripheral:(id)arg2;
- (void)centralManager:(id)arg1 didFailToConnectPeripheral:(id)arg2 error:(id)arg3;
- (void)centralManagerDidUpdateState:(id)arg1;
- (id)clientBundleID;
- (unsigned int)clientID;
- (long long)clientUseCase;
- (double)connectTimeoutSeconds;
- (double)connectedTime;
- (unsigned int)connectionFlags;
- (long long)connectionLatency;
- (long long)connectionScanDutyCycle;
- (void)dealloc;
- (id)description;
- (void)disconnectWithCompletion:(id /* block */)arg1;
- (id)dispatchQueue;
- (void)encodeWithXPCObject:(id)arg1;
- (id /* block */)errorHandler;
- (id)init;
- (id)initWithXPCEventRepresentation:(id)arg1 error:(id*)arg2;
- (id)initWithXPCObject:(id)arg1 error:(id*)arg2;
- (unsigned int)internalFlags;
- (id /* block */)interruptionHandler;
- (void)invalidate;
- (id /* block */)invalidationHandler;
- (id)l2capChannel;
- (id)label;
- (void)pairWithOOBData:(id)arg1;
- (void)pairingAgent:(id)arg1 peerDidCompletePairing:(id)arg2;
- (void)pairingAgent:(id)arg1 peerDidFailToCompletePairing:(id)arg2 error:(id)arg3;
- (void)pairingAgent:(id)arg1 peerDidRequestPairing:(id)arg2 type:(long long)arg3 passkey:(id)arg4;
- (void)pairingAgent:(id)arg1 peerDidUnpair:(id)arg2;
- (id /* block */)pairingCompletedHandler;
- (void)pairingGenerateOOBDataWithCompletionHandler:(id /* block */)arg1;
- (void)pairingPerformAction:(int)arg1 completionHandler:(id /* block */)arg2;
- (void)pairingPerformAction:(int)arg1 withOptions:(id)arg2 completionHandler:(id /* block */)arg3;
- (id /* block */)pairingPromptHandler;
- (void)pairingSetOOBEnabled:(bool)arg1 completionHandler:(id /* block */)arg2;
- (id)peerDevice;
- (void)peripheral:(id)arg1 didOpenL2CAPChannel:(id)arg2 error:(id)arg3;
- (void)readWithCBReadRequest:(id)arg1;
- (void)readWithRequest:(id)arg1;
- (id)remoteDevice;
- (id)server;
- (id /* block */)serverInvalidationHandler;
- (unsigned int)serviceFlags;
- (id)serviceUUIDs;
- (void)setBlePSM:(unsigned short)arg1;
- (void)setBluetoothStateChangedHandler:(id /* block */)arg1;
- (void)setClientBundleID:(id)arg1;
- (void)setClientID:(unsigned int)arg1;
- (void)setClientUseCase:(long long)arg1;
- (void)setConnectTimeoutSeconds:(double)arg1;
- (void)setConnectedTime:(double)arg1;
- (void)setConnectionFlags:(unsigned int)arg1;
- (void)setConnectionLatency:(long long)arg1;
- (void)setConnectionScanDutyCycle:(long long)arg1;
- (void)setDispatchQueue:(id)arg1;
- (void)setErrorHandler:(id /* block */)arg1;
- (void)setInternalFlags:(unsigned int)arg1;
- (void)setInterruptionHandler:(id /* block */)arg1;
- (void)setInvalidationHandler:(id /* block */)arg1;
- (void)setL2capChannel:(id)arg1;
- (void)setLabel:(id)arg1;
- (void)setPairingCompletedHandler:(id /* block */)arg1;
- (void)setPairingPromptHandler:(id /* block */)arg1;
- (void)setPeerDevice:(id)arg1;
- (void)setRemoteDevice:(id)arg1;
- (void)setServer:(id)arg1;
- (void)setServerInvalidationHandler:(id /* block */)arg1;
- (void)setServiceFlags:(unsigned int)arg1;
- (void)setServiceUUIDs:(id)arg1;
- (void)setUseCase:(unsigned int)arg1;
- (void)setUseCaseClientIDs:(id)arg1;
- (void)setXpcForwardMessageReceiveHandler:(id /* block */)arg1;
- (void)setXpcListenerEndpoint:(id)arg1;
- (void)setXpcSendEventHandler:(id /* block */)arg1;
- (bool)updateWithXPCSubscriberInfo:(id)arg1;
- (unsigned int)useCase;
- (id)useCaseClientIDs;
- (void)writeEndOfDataWithCompletion:(id /* block */)arg1;
- (void)writeWithCBWriteRequest:(id)arg1;
- (void)writeWithRequest:(id)arg1;
- (void)xpcForwardMessage:(id)arg1;
- (id /* block */)xpcForwardMessageReceiveHandler;
- (id)xpcListenerEndpoint;
- (void)xpcReceivedForwardedEvent:(id)arg1;
- (void)xpcReceivedMessage:(id)arg1;
- (void)xpcReceivedPairingCompleted:(id)arg1;
- (void)xpcReceivedPairingPrompt:(id)arg1;
- (id /* block */)xpcSendEventHandler;

@end
