
@interface HKWorkoutSession : NSObject <HKStateMachineDelegate, NSSecureCoding, _HKXPCExportable> {
    HKLiveWorkoutBuilder * _associatedWorkoutBuilder;
    NSObject<OS_dispatch_queue> * _clientQueue;
    HKWorkoutSessionTaskConfiguration * _configuration;
    NSMutableArray * _dataUpdateQueue;
    <HKWorkoutSessionDelegate> * _delegate;
    NSError * _disconnectionError;
    NSDate * _endDate;
    HKHealthStore * _healthStore;
    HKWorkoutMirroringDataUpdate * _pendingDataUpdate;
    HKTaskServerProxyProvider * _proxyProvider;
    NSObject<OS_dispatch_queue> * _queue;
    NSDate * _startDate;
    long long  _state;
    <HKWorkoutSessionDelegate> * _strongDelegate;
    HKStateMachine * _targetStateMachine;
}

@property (nonatomic, readonly, copy) NSArray *activityConfigurations;
@property (readonly) unsigned long long activityType;
@property (readonly, copy) HKWorkoutActivity *currentActivity;
@property (readonly, copy) NSString *debugDescription;
@property <HKWorkoutSessionDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) NSDate *endDate;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) HKHealthStore *healthStore;
@property (nonatomic, readonly, copy) NSUUID *identifier;
@property (nonatomic, readonly) bool isGymKitSession;
@property (readonly) long long locationType;
@property (nonatomic) bool shouldStopPreviousSession;
@property (readonly) NSDate *startDate;
@property (readonly) long long state;
@property (readonly) Class superclass;
@property (nonatomic) bool supportsAppRelaunchForRecovery;
@property (readonly) long long type;
@property (readonly, copy) HKWorkoutConfiguration *workoutConfiguration;

+ (bool)_applicationHasRunningWorkout;
+ (void)_unitTest_clearAllRunningWorkouts;
+ (id)clientInterface;
+ (id)serverInterface;
+ (bool)supportsSecureCoding;
+ (id)targetWorkoutSessionStateMachineForSessionUUID:(id)arg1;

- (void).cxx_destruct;
- (void)_dataUpdateWithUUID:(id)arg1 didCompleteWithSuccess:(bool)arg2 error:(id)arg3;
- (void)_enqueueDataUpdate:(id)arg1;
- (id)_initWithHealthStore:(id)arg1 taskConfiguration:(id)arg2 error:(id*)arg3;
- (bool)_isInvalidatedMirroredSession;
- (id)_notMirroringError;
- (id)_privateDelegate;
- (void)_queue_enqueueStateEvent:(long long)arg1 date:(id)arg2 completion:(id /* block */)arg3;
- (bool)_queue_isInvalidatedMirroredSession;
- (void)_queue_markRecoveryRequired;
- (void)_queue_pendingDataUpdateDidCompleteWithSuccess:(bool)arg1 error:(id)arg2;
- (void)_queue_resetStateMachineWithNewState:(long long)arg1;
- (void)_queue_sendPendingDataUpdateToRemoteWorkoutSession;
- (bool)_queue_shouldAttemptRecovery;
- (void)_recoverWithCompletion:(id /* block */)arg1;
- (void)_setAssociatedWorkoutBuilder:(id)arg1;
- (void)_setupMirroredSessionTaskServerWithCompletion:(id /* block */)arg1;
- (void)_setupTaskServerWithCompletion:(id /* block */)arg1;
- (void)_setupWithHealthStore:(id)arg1;
- (void)_unitTest_discardAssociatedWorkoutBuilder;
- (id)activityConfigurations;
- (unsigned long long)activityType;
- (id)associatedWorkoutBuilder;
- (id)associatedWorkoutBuilderWithDevice:(id)arg1 goalType:(unsigned long long)arg2 goal:(id)arg3;
- (void)beginNewActivityWithConfiguration:(id)arg1 date:(id)arg2 metadata:(id)arg3;
- (void)client_didBeginActivity:(id)arg1 date:(id)arg2;
- (void)client_didChangeToState:(long long)arg1 date:(id)arg2;
- (void)client_didDisconnectFromRemoteWithError:(id)arg1 completion:(id /* block */)arg2;
- (void)client_didEndActivity:(id)arg1 date:(id)arg2;
- (void)client_didFailWithError:(id)arg1;
- (void)client_didGenerateEvents:(id)arg1;
- (void)client_didReceiveDataFromRemoteWorkoutSession:(id)arg1 completion:(id /* block */)arg2;
- (void)client_didSuggestWorkoutConfiguration:(id)arg1 date:(id)arg2;
- (void)client_didSyncCurrentActivity:(id)arg1;
- (void)client_didSyncSessionEvent:(long long)arg1 date:(id)arg2;
- (void)client_didUpdateStartDate:(id)arg1 endDate:(id)arg2;
- (void)client_didUpdateWorkoutConfiguration:(id)arg1;
- (void)client_remoteSessionDidRecover;
- (void)client_synchronizeWithCompletion:(id /* block */)arg1;
- (void)connectionInterrupted;
- (void)connectionInvalidated;
- (id)currentActivity;
- (void)dealloc;
- (id)delegate;
- (void)deprecated_sendDataToRemoteWorkoutSession:(id)arg1 completion:(id /* block */)arg2;
- (id)description;
- (void)enableAutomaticDetectionForActivityConfigurations:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)end;
- (void)endCurrentActivityOnDate:(id)arg1;
- (id)endDate;
- (void)endWithCompletion:(id /* block */)arg1;
- (id)exportedInterface;
- (id)healthStore;
- (id)identifier;
- (id)initWithActivityType:(unsigned long long)arg1 locationType:(long long)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithConfiguration:(id)arg1 error:(id*)arg2;
- (id)initWithHealthStore:(id)arg1 configuration:(id)arg2 error:(id*)arg3;
- (bool)isGymKitSession;
- (long long)locationType;
- (void)pause;
- (void)pauseWithCompletion:(id /* block */)arg1;
- (void)pauseWithDate:(id)arg1 completion:(id /* block */)arg2;
- (void)prepare;
- (void)prepareWithCompletion:(id /* block */)arg1;
- (id)remoteInterface;
- (void)resume;
- (void)resumeWithCompletion:(id /* block */)arg1;
- (void)resumeWithDate:(id)arg1 completion:(id /* block */)arg2;
- (void)sendDataToRemoteWorkoutSession:(id)arg1 completion:(id /* block */)arg2;
- (void)setDelegate:(id)arg1;
- (void)setShouldStopPreviousSession:(bool)arg1;
- (void)setSupportsAppRelaunchForRecovery:(bool)arg1;
- (bool)shouldStopPreviousSession;
- (void)startActivity;
- (void)startActivityWithDate:(id)arg1;
- (void)startActivityWithDate:(id)arg1 completion:(id /* block */)arg2;
- (id)startDate;
- (void)startMirroringToCompanionDeviceWithCompletion:(id /* block */)arg1;
- (long long)state;
- (void)stateMachine:(id)arg1 didIgnoreEvent:(long long)arg2 state:(id)arg3;
- (void)stateMachine:(id)arg1 didTransition:(id)arg2 fromState:(id)arg3 toState:(id)arg4 date:(id)arg5 error:(id)arg6;
- (void)stopActivity;
- (void)stopActivityWithDate:(id)arg1;
- (void)stopActivityWithDate:(id)arg1 completion:(id /* block */)arg2;
- (void)stopMirroringToCompanionDeviceWithCompletion:(id /* block */)arg1;
- (bool)supportsAppRelaunchForRecovery;
- (long long)type;
- (id)workoutConfiguration;

@end
