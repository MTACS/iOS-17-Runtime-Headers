
@interface MLCTrainingGraph : MLCGraph {
    bool  _allocateOptimizerData;
    bool  _allocateResultGradientTensors;
    MLCLayer * _dummyLayer;
    unsigned long long  _firstTrainableLayerIndex;
    MLCLayer<MLCLayerCompiling> * _lossLayer;
    NSMutableArray * _lossLayersInTrainingGraph;
    MLCOptimizer * _optimizer;
    NSMutableArray * _optimizerParameterList;
    NSSet * _optimizerUpdateDeviceList;
    NSMutableArray * _optimizerUpdateLayerList;
    NSMutableArray * _rootSourceGradientTensor;
    NSMutableArray * _stopGradientTensorList;
    bool  _updateOptimizerTimeStep;
}

@property (nonatomic) bool allocateOptimizerData;
@property (nonatomic) bool allocateResultGradientTensors;
@property (nonatomic, readonly) unsigned long long deviceMemorySize;
@property (nonatomic, readonly) MLCLayer *dummyLayer;
@property (nonatomic) unsigned long long firstTrainableLayerIndex;
@property (nonatomic, retain) MLCLayer<MLCLayerCompiling> *lossLayer;
@property (nonatomic, retain) NSMutableArray *lossLayersInTrainingGraph;
@property (nonatomic, retain) MLCOptimizer *optimizer;
@property (nonatomic, retain) NSMutableArray *optimizerParameterList;
@property (nonatomic, retain) NSSet *optimizerUpdateDeviceList;
@property (nonatomic, retain) NSMutableArray *optimizerUpdateLayerList;
@property (nonatomic, retain) NSMutableArray *rootSourceGradientTensor;
@property (nonatomic, retain) NSMutableArray *stopGradientTensorList;
@property (nonatomic) bool updateOptimizerTimeStep;

+ (id)graphWithGraphObjects:(id)arg1 lossLayer:(id)arg2 optimizer:(id)arg3;

- (void).cxx_destruct;
- (bool)addInputs:(id)arg1 lossLabels:(id)arg2;
- (bool)addInputs:(id)arg1 lossLabels:(id)arg2 lossLabelWeights:(id)arg3;
- (bool)addOutputs:(id)arg1;
- (void)allocateGradientTensorsForLayersInGraph:(bool)arg1;
- (bool)allocateGradientTensorsForMultipleChildrenOfLayer:(id)arg1 gradientTensorsAreTemporary:(bool)arg2 device:(id)arg3;
- (bool)allocateGradientTensorsForMultipleChildrenOfSplitLayer:(id)arg1 tensor:(id)arg2 gradientTensorsAreTemporary:(bool)arg3 device:(id)arg4;
- (bool)allocateOptimizerData;
- (bool)allocateOptimizerDataForGraph;
- (bool)allocateResultGradientTensors;
- (bool)allocateRootSourceGradientTensors:(id)arg1;
- (id)allocateUserGradientForTensor:(id)arg1;
- (bool)bindOptimizerData:(id)arg1 deviceData:(id)arg2 withTensor:(id)arg3;
- (bool)checkAndSumIfSharedParameterUpdateForNormalizationLayerTensor:(id)arg1 layer:(id)arg2 device:(id)arg3 isBetaTensor:(bool)arg4;
- (bool)compileAndAllocateGradientTensorsForGraph:(bool)arg1;
- (bool)compileOptimizer:(id)arg1;
- (bool)compileWithOptions:(unsigned long long)arg1 device:(id)arg2;
- (bool)compileWithOptions:(unsigned long long)arg1 device:(id)arg2 inputTensors:(id)arg3 inputTensorsData:(id)arg4;
- (void)dealloc;
- (id)description;
- (unsigned long long)deviceMemorySize;
- (unsigned long long)deviceMemorySizeWithDevice:(id)arg1;
- (id)dummyLayer;
- (void)executeForwardToLayerIndex:(unsigned long long)arg1 resultTensor:(id)arg2 resultStateIsTemporary:(bool)arg3 batchSize:(unsigned long long)arg4 forTraining:(bool)arg5 executionOptions:(unsigned long long)arg6;
- (bool)executeForwardWithBatchSize:(unsigned long long)arg1 options:(unsigned long long)arg2 completionHandler:(id /* block */)arg3;
- (bool)executeForwardWithBatchSize:(unsigned long long)arg1 options:(unsigned long long)arg2 outputsData:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)executeGradientFromLayerIndex:(unsigned long long)arg1 resultStateIsTemporary:(bool)arg2 batchSize:(unsigned long long)arg3 executionOptions:(unsigned long long)arg4;
- (bool)executeGradientWithBatchSize:(unsigned long long)arg1 options:(unsigned long long)arg2 completionHandler:(id /* block */)arg3;
- (bool)executeGradientWithBatchSize:(unsigned long long)arg1 options:(unsigned long long)arg2 outputsData:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)executeOptimizerUpdateWithExecutionOptions:(unsigned long long)arg1;
- (bool)executeOptimizerUpdateWithOptions:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (bool)executeWithInputsData:(id)arg1 lossLabelsData:(id)arg2 lossLabelWeightsData:(id)arg3 batchSize:(unsigned long long)arg4 options:(unsigned long long)arg5 completionHandler:(id /* block */)arg6;
- (bool)executeWithInputsData:(id)arg1 lossLabelsData:(id)arg2 lossLabelWeightsData:(id)arg3 outputsData:(id)arg4 batchSize:(unsigned long long)arg5 options:(unsigned long long)arg6 completionHandler:(id /* block */)arg7;
- (unsigned long long)firstTrainableLayerIndex;
- (id)gradientDataForParameter:(id)arg1 layer:(id)arg2;
- (id)gradientTensorForInput:(id)arg1;
- (id)init;
- (id)initWithGraphObjects:(id)arg1 lossLayer:(id)arg2 optimizer:(id)arg3;
- (bool)isSourceTensorSharableWithResultGradientTensor:(id)arg1 layer:(id)arg2;
- (unsigned long long)layerIndexToStoreSummedGradientsForTensor:(id)arg1;
- (void)linkRelatedGradientTensorsForConcatLayer:(id)arg1 device:(id)arg2;
- (bool)linkWithGraphs:(id)arg1;
- (id)lossLayer;
- (id)lossLayersInTrainingGraph;
- (void)markLayersAsTrainable;
- (id)optimizer;
- (id)optimizerParameterList;
- (id)optimizerUpdateDeviceList;
- (id)optimizerUpdateLayerList;
- (bool)recompileWithOptions:(unsigned long long)arg1;
- (id)resultGradientTensorToUseByExecuteGradientForLayer:(id)arg1 sourceIndex:(unsigned long long)arg2 incrementIntermediateIndex:(bool)arg3;
- (id)resultGradientTensorsForLayer:(id)arg1;
- (id)resultGradientTensorsForLayer:(id)arg1 summedGradientForInputTensors:(bool)arg2;
- (id)resultTensorsForLayer:(id)arg1;
- (id)rootSourceGradientTensor;
- (void)setAllocateOptimizerData:(bool)arg1;
- (void)setAllocateResultGradientTensors:(bool)arg1;
- (void)setFirstTrainableLayerIndex:(unsigned long long)arg1;
- (void)setLossLayer:(id)arg1;
- (void)setLossLayersInTrainingGraph:(id)arg1;
- (void)setOptimizer:(id)arg1;
- (void)setOptimizerParameterList:(id)arg1;
- (void)setOptimizerUpdateDeviceList:(id)arg1;
- (void)setOptimizerUpdateLayerList:(id)arg1;
- (void)setRootSourceGradientTensor:(id)arg1;
- (void)setStopGradientTensorList:(id)arg1;
- (bool)setTrainingTensorParameters:(id)arg1;
- (void)setUpdateOptimizerTimeStep:(bool)arg1;
- (id)sourceGradientTensorsForLayer:(id)arg1;
- (id)sourceTensorsForLayer:(id)arg1;
- (bool)stopGradientForTensors:(id)arg1;
- (id)stopGradientTensorList;
- (void)sumAllRootSourceGradientTensors:(id)arg1;
- (void)sumIntermediateGradientTensorsForLayer:(id)arg1;
- (void)sumRootSourceGradientTensor:(id)arg1 device:(id)arg2;
- (void)synchronizeUpdates;
- (void)updateIsTrainableForLayerWithStopGradientTensor:(id)arg1 checkChildLayers:(bool)arg2;
- (bool)updateOptimizerTimeStep;
- (void)updateTrainableLayerList:(bool)arg1;

@end
