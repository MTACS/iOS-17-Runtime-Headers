
@interface MLCTensor : NSObject <NSCopying> {
    NSMutableArray * _broadcastabledeviceMemory;
    NSMutableArray * _childLayers;
    int  _computeFlags;
    unsigned long long  _concatDimension;
    unsigned long long  _concatOffset;
    NSData * _data;
    MLCTensorDescriptor * _descriptor;
    MLCDevice * _device;
    id  _deviceDataSources;
    unsigned long long  _deviceIndex;
    NSMutableArray * _deviceMemory;
    unsigned long long  _interleave;
    MLCLayer * _intermediateSumLayer;
    bool  _isLayerParameter;
    NSString * _label;
    int  _multiDeviceReductionType;
    NSArray * _optimizerData;
    NSArray * _optimizerDeviceData;
    NSMutableArray * _parentLayers;
    unsigned long long  _readCount;
    unsigned long long  _rootSourceGradientTensorCount;
    unsigned long long  _rootSourceGradientTensorIndex;
    unsigned long long  _rootSourceGradientTensorIndexStart;
    MLCTensor * _sharedMemoryTensor;
    bool  _skipWritingToDevice;
    unsigned long long  _splitDimension;
    unsigned long long  _splitOffset;
    unsigned long long  _tensorID;
}

@property (nonatomic, retain) NSMutableArray *broadcastabledeviceMemory;
@property (nonatomic, retain) NSMutableArray *childLayers;
@property (nonatomic) int computeFlags;
@property (nonatomic) unsigned long long concatDimension;
@property (nonatomic) unsigned long long concatOffset;
@property (nonatomic, retain) NSData *data;
@property (nonatomic, copy) MLCTensorDescriptor *descriptor;
@property (nonatomic, retain) MLCDevice *device;
@property (nonatomic, retain) id deviceDataSources;
@property (nonatomic) unsigned long long deviceIndex;
@property (nonatomic, retain) NSMutableArray *deviceMemory;
@property (nonatomic, readonly) bool hasValidNumerics;
@property (nonatomic) unsigned long long interleave;
@property (nonatomic, retain) MLCLayer *intermediateSumLayer;
@property (nonatomic) bool isLayerParameter;
@property (nonatomic, copy) NSString *label;
@property (nonatomic) int multiDeviceReductionType;
@property (nonatomic, copy) NSArray *optimizerData;
@property (nonatomic, copy) NSArray *optimizerDeviceData;
@property (nonatomic, retain) NSMutableArray *parentLayers;
@property (nonatomic) unsigned long long readCount;
@property (nonatomic) unsigned long long rootSourceGradientTensorCount;
@property (nonatomic) unsigned long long rootSourceGradientTensorIndex;
@property (nonatomic) unsigned long long rootSourceGradientTensorIndexStart;
@property (nonatomic, retain) MLCTensor *sharedMemoryTensor;
@property (nonatomic) bool skipWritingToDevice;
@property (nonatomic) unsigned long long splitDimension;
@property (nonatomic) unsigned long long splitOffset;
@property (nonatomic) unsigned long long tensorID;

+ (bool)canConvertValue:(float)arg1 toDataType:(int)arg2;
+ (void)initialize;
+ (id)newDataForTensorDescriptor:(id)arg1 fillWithData:(id)arg2;
+ (id)newRandomDataForWeightTensorDescriptor:(id)arg1 randomInitializerType:(int)arg2;
+ (id)tensorWithDescriptor:(id)arg1;
+ (id)tensorWithDescriptor:(id)arg1 data:(id)arg2;
+ (id)tensorWithDescriptor:(id)arg1 fillWithData:(id)arg2;
+ (id)tensorWithDescriptor:(id)arg1 randomInitializerType:(int)arg2;
+ (id)tensorWithSequenceLength:(unsigned long long)arg1 featureChannelCount:(unsigned long long)arg2 batchSize:(unsigned long long)arg3;
+ (id)tensorWithSequenceLength:(unsigned long long)arg1 featureChannelCount:(unsigned long long)arg2 batchSize:(unsigned long long)arg3 data:(id)arg4;
+ (id)tensorWithSequenceLength:(unsigned long long)arg1 featureChannelCount:(unsigned long long)arg2 batchSize:(unsigned long long)arg3 randomInitializerType:(int)arg4;
+ (id)tensorWithSequenceLengths:(id)arg1 sortedSequences:(bool)arg2 featureChannelCount:(unsigned long long)arg3 batchSize:(unsigned long long)arg4 data:(id)arg5;
+ (id)tensorWithSequenceLengths:(id)arg1 sortedSequences:(bool)arg2 featureChannelCount:(unsigned long long)arg3 batchSize:(unsigned long long)arg4 randomInitializerType:(int)arg5;
+ (id)tensorWithShape:(id)arg1;
+ (id)tensorWithShape:(id)arg1 data:(id)arg2 dataType:(int)arg3;
+ (id)tensorWithShape:(id)arg1 dataType:(int)arg2;
+ (id)tensorWithShape:(id)arg1 fillWithData:(id)arg2 dataType:(int)arg3;
+ (id)tensorWithShape:(id)arg1 randomInitializerType:(int)arg2;
+ (id)tensorWithShape:(id)arg1 randomInitializerType:(int)arg2 dataType:(int)arg3;
+ (id)tensorWithWidth:(unsigned long long)arg1 height:(unsigned long long)arg2 featureChannelCount:(unsigned long long)arg3 batchSize:(unsigned long long)arg4;
+ (id)tensorWithWidth:(unsigned long long)arg1 height:(unsigned long long)arg2 featureChannelCount:(unsigned long long)arg3 batchSize:(unsigned long long)arg4 data:(id)arg5;
+ (id)tensorWithWidth:(unsigned long long)arg1 height:(unsigned long long)arg2 featureChannelCount:(unsigned long long)arg3 batchSize:(unsigned long long)arg4 data:(id)arg5 dataType:(int)arg6;
+ (id)tensorWithWidth:(unsigned long long)arg1 height:(unsigned long long)arg2 featureChannelCount:(unsigned long long)arg3 batchSize:(unsigned long long)arg4 fillWithData:(float)arg5 dataType:(int)arg6;
+ (id)tensorWithWidth:(unsigned long long)arg1 height:(unsigned long long)arg2 featureChannelCount:(unsigned long long)arg3 batchSize:(unsigned long long)arg4 randomInitializerType:(int)arg5;

- (void).cxx_destruct;
- (void)allocateDeviceMemory:(id)arg1;
- (bool)bindAndWriteData:(id)arg1 toDevice:(id)arg2;
- (bool)bindOptimizerData:(id)arg1 deviceData:(id)arg2;
- (id)broadcastabledeviceMemory;
- (unsigned long long)calculateBatchSizeToUse;
- (unsigned long long)calculateBatchSizeToUse:(unsigned long long)arg1;
- (id)childLayers;
- (int)computeFlags;
- (unsigned long long)concatDimension;
- (unsigned long long)concatOffset;
- (id)copyAndReplaceData:(id)arg1;
- (bool)copyDataFromDeviceMemoryToBytes:(void*)arg1 length:(unsigned long long)arg2 synchronizeWithDevice:(bool)arg3;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)data;
- (bool)dataContainsScalarWhere:(id /* block */)arg1;
- (void)deallocateDeviceMemory:(id)arg1;
- (id)description;
- (id)descriptor;
- (id)device;
- (id)deviceDataSources;
- (unsigned long long)deviceIndex;
- (id)deviceMemory;
- (void)dispatchWriteTensorDataToAllDevices:(id)arg1;
- (void)dispatchWriteTensorDataToAllDevices:(id)arg1 batchSize:(unsigned long long)arg2;
- (bool)doesShapeMatchWithTensor:(id)arg1;
- (bool)hasValidNumerics;
- (id)initWithTensorDescriptor:(id)arg1 tensorData:(id)arg2 parentLayers:(id)arg3 childLayers:(id)arg4 device:(id)arg5 deviceMemory:(id)arg6;
- (unsigned long long)interleave;
- (id)intermediateSumLayer;
- (bool)isLayerParameter;
- (bool)isTensorDataTypeInListOfDataTypes:(id)arg1;
- (id)label;
- (int)multiDeviceReductionType;
- (id)optimizerData;
- (id)optimizerDeviceData;
- (id)parentLayers;
- (unsigned long long)readCount;
- (unsigned long long)rootSourceGradientTensorCount;
- (unsigned long long)rootSourceGradientTensorIndex;
- (unsigned long long)rootSourceGradientTensorIndexStart;
- (void)setBroadcastabledeviceMemory:(id)arg1;
- (void)setChildLayers:(id)arg1;
- (void)setComputeFlags:(int)arg1;
- (void)setConcatDimension:(unsigned long long)arg1;
- (void)setConcatOffset:(unsigned long long)arg1;
- (void)setData:(id)arg1;
- (void)setDescriptor:(id)arg1;
- (void)setDevice:(id)arg1;
- (void)setDeviceDataSources:(id)arg1;
- (void)setDeviceIndex:(unsigned long long)arg1;
- (void)setDeviceMemory:(id)arg1;
- (void)setInterleave:(unsigned long long)arg1;
- (void)setIntermediateSumLayer:(id)arg1;
- (void)setIsLayerParameter:(bool)arg1;
- (void)setLabel:(id)arg1;
- (void)setMultiDeviceReductionType:(int)arg1;
- (void)setOptimizerData:(id)arg1;
- (void)setOptimizerDeviceData:(id)arg1;
- (void)setParentLayers:(id)arg1;
- (void)setReadCount:(unsigned long long)arg1;
- (void)setRootSourceGradientTensorCount:(unsigned long long)arg1;
- (void)setRootSourceGradientTensorIndex:(unsigned long long)arg1;
- (void)setRootSourceGradientTensorIndexStart:(unsigned long long)arg1;
- (void)setSharedMemoryTensor:(id)arg1;
- (void)setSkipWritingToDevice:(bool)arg1;
- (void)setSplitDimension:(unsigned long long)arg1;
- (void)setSplitOffset:(unsigned long long)arg1;
- (void)setTensorID:(unsigned long long)arg1;
- (id)sharedMemoryTensor;
- (bool)skipWritingToDevice;
- (unsigned long long)splitDimension;
- (unsigned long long)splitOffset;
- (bool)synchronizeData;
- (bool)synchronizeOptimizerData;
- (unsigned long long)tensorBatchSize;
- (id)tensorByDequantizingToType:(int)arg1 scale:(float)arg2 bias:(long long)arg3;
- (id)tensorByDequantizingToType:(int)arg1 scale:(id)arg2 bias:(id)arg3 axis:(long long)arg4;
- (id)tensorByQuantizingToType:(int)arg1 scale:(float)arg2 bias:(long long)arg3;
- (id)tensorByQuantizingToType:(int)arg1 scale:(id)arg2 bias:(id)arg3 axis:(long long)arg4;
- (unsigned long long)tensorID;
- (void)writeTensorDataToAllDevices:(id)arg1;
- (void)writeTensorDataToAllDevices:(id)arg1 batchSize:(unsigned long long)arg2;

@end
