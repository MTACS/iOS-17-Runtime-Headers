
@interface MLCDeviceGPU : NSObject <MLCEngineDispatch, MLCLayerOperations, MLComputeEngineControl, NSCopying> {
    unsigned long long * _currentEventValue;
    NSArray * _deviceList;
    int  _deviceType;
    double * _executionTimeInterval;
    NSMutableArray * _gpuCommandBufferList;
    NSMutableArray * _gpuCommandQueueList;
    NSMutableArray * _gpuConcurrentEncoderFence;
    NSMutableArray * _gpuHeapTemporaryResourceAllocator;
    NSMutableArray * _gpuLibrary;
    NSArray * _gpuLocalEventList;
    NSMutableArray * _gpuMPSCommandBufferList;
    NSMutableArray * _gpuPipelineStatesArithmeticBinaryForward;
    NSMutableArray * _gpuPipelineStatesArithmeticBinaryGradient;
    NSMutableArray * _gpuPipelineStatesArithmeticReduceGradientAll;
    NSMutableArray * _gpuPipelineStatesArithmeticReduceGradientAny;
    NSMutableArray * _gpuPipelineStatesArithmeticUnaryForward;
    NSMutableArray * _gpuPipelineStatesArithmeticUnaryGradient;
    NSMutableArray * _gpuPipelineStatesCompareLogicalOpForward;
    NSMutableArray * _gpuPipelineStatesCompareRelationalOpForward;
    NSMutableArray * _gpuPipelineStatesConcatBool;
    NSMutableArray * _gpuPipelineStatesConcatFloat;
    NSMutableArray * _gpuPipelineStatesEmbeddingForward;
    NSMutableArray * _gpuPipelineStatesEmbeddingGradient;
    NSMutableArray * _gpuPipelineStatesEmbeddingRenormalizeWeights;
    NSMutableArray * _gpuPipelineStatesForwardConcat2D;
    NSMutableArray * _gpuPipelineStatesForwardConcat2DArray;
    NSMutableArray * _gpuPipelineStatesMemCopy;
    NSMutableArray * _gpuPipelineStatesMemFillFloat;
    NSMutableArray * _gpuPipelineStatesPad2D;
    NSMutableArray * _gpuPipelineStatesPad2DArray;
    NSMutableArray * _gpuPipelineStatesReduceAcrossBatch;
    NSMutableArray * _gpuPipelineStatesReduceAcrossChannel;
    NSMutableArray * _gpuReadTensorKernelList;
    NSArray * _gpuSharedEventList;
    NSMutableArray * _gpuWriteTensorKernelList;
    bool  _isAppleSoCGPU;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _l;
    unsigned long long  _numDevicesToUse;
    unsigned long long  _numDevicesUsedWithFirstBatch;
}

@property (nonatomic, readonly) unsigned long long*currentEventValue;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSArray *deviceList;
@property (nonatomic, readonly) int deviceType;
@property (nonatomic, readonly) double*executionTimeInterval;
@property (nonatomic, readonly) NSMutableArray *gpuCommandBufferList;
@property (nonatomic, readonly) NSMutableArray *gpuCommandQueueList;
@property (nonatomic, retain) NSMutableArray *gpuConcurrentEncoderFence;
@property (nonatomic, retain) NSMutableArray *gpuHeapTemporaryResourceAllocator;
@property (nonatomic, readonly) NSMutableArray *gpuLibrary;
@property (nonatomic, retain) NSArray *gpuLocalEventList;
@property (nonatomic, readonly) NSMutableArray *gpuMPSCommandBufferList;
@property (nonatomic, retain) NSMutableArray *gpuPipelineStatesArithmeticBinaryForward;
@property (nonatomic, retain) NSMutableArray *gpuPipelineStatesArithmeticBinaryGradient;
@property (nonatomic, retain) NSMutableArray *gpuPipelineStatesArithmeticReduceGradientAll;
@property (nonatomic, retain) NSMutableArray *gpuPipelineStatesArithmeticReduceGradientAny;
@property (nonatomic, retain) NSMutableArray *gpuPipelineStatesArithmeticUnaryForward;
@property (nonatomic, retain) NSMutableArray *gpuPipelineStatesArithmeticUnaryGradient;
@property (nonatomic, retain) NSMutableArray *gpuPipelineStatesCompareLogicalOpForward;
@property (nonatomic, retain) NSMutableArray *gpuPipelineStatesCompareRelationalOpForward;
@property (nonatomic, retain) NSMutableArray *gpuPipelineStatesConcatBool;
@property (nonatomic, retain) NSMutableArray *gpuPipelineStatesConcatFloat;
@property (nonatomic, retain) NSMutableArray *gpuPipelineStatesEmbeddingForward;
@property (nonatomic, retain) NSMutableArray *gpuPipelineStatesEmbeddingGradient;
@property (nonatomic, retain) NSMutableArray *gpuPipelineStatesEmbeddingRenormalizeWeights;
@property (nonatomic, retain) NSMutableArray *gpuPipelineStatesForwardConcat2D;
@property (nonatomic, retain) NSMutableArray *gpuPipelineStatesForwardConcat2DArray;
@property (nonatomic, retain) NSMutableArray *gpuPipelineStatesMemCopy;
@property (nonatomic, retain) NSMutableArray *gpuPipelineStatesMemFillFloat;
@property (nonatomic, retain) NSMutableArray *gpuPipelineStatesPad2D;
@property (nonatomic, retain) NSMutableArray *gpuPipelineStatesPad2DArray;
@property (nonatomic, retain) NSMutableArray *gpuPipelineStatesReduceAcrossBatch;
@property (nonatomic, retain) NSMutableArray *gpuPipelineStatesReduceAcrossChannel;
@property (nonatomic, readonly) NSMutableArray *gpuReadTensorKernelList;
@property (nonatomic, retain) NSArray *gpuSharedEventList;
@property (nonatomic, readonly) NSMutableArray *gpuWriteTensorKernelList;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isAppleSoCGPU;
@property (nonatomic) struct os_unfair_lock_s { unsigned int x1; } l;
@property (nonatomic) unsigned long long numDevicesToUse;
@property (nonatomic) unsigned long long numDevicesUsedWithFirstBatch;
@property (readonly) Class superclass;

+ (unsigned long long)calculateImageSizeForTensor:(id)arg1;
+ (id)filteredGPUListIncludingLowPoweredBuiltin:(bool)arg1;
+ (bool)multiGPUNotSupportedInFilteredGPUList:(id)arg1;

- (void).cxx_destruct;
- (void)allReduceOverXGMI:(id)arg1 deviceIndex:(unsigned long long)arg2 stateBuffers:(id)arg3;
- (void)allocateCommandBufferForDeviceAtIndex:(unsigned long long)arg1;
- (void)allocateDeviceDataForGlobalNormClippingWithOptimizer:(id)arg1 updatableParameterCount:(unsigned long long)arg2;
- (void)allocateDeviceHeapForGraph:(id)arg1 forInference:(bool)arg2;
- (void)allocateDeviceMemoryForTensor:(id)arg1;
- (void)allocateDeviceMemoryForTensor:(id)arg1 batchSize:(unsigned long long)arg2;
- (id)allocateDeviceMemoryForTensor:(id)arg1 device:(id)arg2 count:(unsigned long long)arg3;
- (void)allocateParameterGradientsForDeviceOps:(id)arg1 parameters:(id)arg2;
- (void)allocateResultTensor:(id)arg1;
- (unsigned long long)allocatedDeviceDataSizeForTraining:(bool)arg1 layer:(id)arg2;
- (id)arithmeticLayerWithOperation:(int)arg1 activationDescriptor:(id)arg2;
- (id)batchNormalizationLayerWithChannelCount:(unsigned long long)arg1 mean:(id)arg2 variance:(id)arg3 beta:(id)arg4 gamma:(id)arg5 varianceEpsilon:(float)arg6 momentum:(float)arg7;
- (id)betaGradients:(id)arg1;
- (id)biasesGradients:(id)arg1;
- (void)broadcastTensor:(id)arg1;
- (void)broadcastTensor:(id)arg1 batchSize:(unsigned long long)arg2;
- (bool)canFuseConvolutionLayerForInference:(id)arg1;
- (bool)canFuseFullyConnectedLayerForInference:(id)arg1;
- (bool)checkToConvertTensor:(id)arg1 inLayer:(id)arg2;
- (void)commitAndWaitForCompletion:(id /* block */)arg1;
- (void)commitAndWaitForCompletion:(id /* block */)arg1 enableProfiling:(bool)arg2 graphExecutionTime:(id)arg3 graphResultTensor:(id)arg4;
- (void)commitDeviceAtIndex:(unsigned long long)arg1;
- (void)commitWithCompletionHandler:(id /* block */)arg1 enableProfiling:(bool)arg2 graphExecutionTime:(id)arg3 graphResultTensor:(id)arg4;
- (void)commitWithProfiling:(bool)arg1 graphExecutionTime:(id)arg2;
- (id)compareLayerWithOperation:(int)arg1;
- (bool)compileLayerDeviceOps:(id)arg1 sourceTensors:(id)arg2 resultTensor:(id)arg3;
- (bool)compileLayerDeviceOps:(id)arg1 sourceTensors:(id)arg2 resultTensors:(id)arg3;
- (void)convertUpdatesToTensorDataForLayer:(id)arg1;
- (void)convertUpdatesToTensorDataForTensorParameters:(id)arg1;
- (id)convolutionLayerWithDescriptor:(id)arg1 weights:(id)arg2 biasTerms:(id)arg3;
- (id)convolutionTransposeLayerWithDescriptor:(id)arg1 weights:(id)arg2 biasTerms:(id)arg3;
- (void)copyMTLBuffer:(id)arg1 toBytes:(void*)arg2 length:(unsigned long long)arg3;
- (void)copyMTLBuffer:(id)arg1 toNSData:(id)arg2;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)createOptimizerDeviceDataForTensor:(id)arg1 optimizer:(id)arg2 optimizerData:(id)arg3 isVector:(bool)arg4;
- (bool)createPipelineStatesForMissingActivationFunctions;
- (unsigned long long*)currentEventValue;
- (void)dealloc;
- (void)deallocateDeviceMemoryForTensor:(id)arg1;
- (id)description;
- (id)deviceList;
- (unsigned long long)deviceMemorySizeForTensor:(id)arg1;
- (int)deviceType;
- (void)dispatchBroadcastTensor:(id)arg1;
- (void)dispatchBroadcastTensor:(id)arg1 batchSize:(unsigned long long)arg2;
- (void)dispatchFillTensor:(id)arg1 deviceIndex:(unsigned long long)arg2;
- (void)dispatchForwardActivationsKernel:(id)arg1 sourceTensor:(id)arg2 resultTensor:(id)arg3 deviceIndex:(unsigned long long)arg4;
- (void)dispatchForwardAndGradientLossLayer:(id)arg1 sourceTensor:(id)arg2 labelsTensor:(id)arg3 labelsTensorStride:(unsigned long long)arg4 weightsTensor:(id)arg5 resultTensor:(id)arg6 resultGradientTensor:(id)arg7;
- (void)dispatchForwardArithmeticBinaryKernel:(id)arg1 sourceTensor:(id)arg2 sourceSecondaryTensor:(id)arg3 resultTensor:(id)arg4 deviceIndex:(unsigned long long)arg5;
- (void)dispatchForwardArithmeticTertiaryKernel:(id)arg1 sourceTensor:(id)arg2 sourceSecondaryTensor:(id)arg3 sourceTertiaryTensor:(id)arg4 resultTensor:(id)arg5 deviceIndex:(unsigned long long)arg6;
- (void)dispatchForwardArithmeticUnaryKernel:(id)arg1 sourceTensor:(id)arg2 resultTensor:(id)arg3 deviceIndex:(unsigned long long)arg4;
- (void)dispatchForwardBatchNormalizationKernel:(id)arg1 sourceTensor:(id)arg2 resultTensor:(id)arg3 deviceIndex:(unsigned long long)arg4 forTraining:(bool)arg5;
- (void)dispatchForwardCompareLayer:(id)arg1 sourceTensor:(id)arg2 secondaryTensor:(id)arg3 resultTensor:(id)arg4 compareOp:(int)arg5 forTraining:(bool)arg6;
- (void)dispatchForwardConcatLayer:(id)arg1 sourceTensors:(id)arg2 resultTensor:(id)arg3;
- (void)dispatchForwardEmbeddingLayer:(id)arg1 weight:(id)arg2 sourceTensor:(id)arg3 resultTensor:(id)arg4;
- (void)dispatchForwardFullyConnectedLayer:(id)arg1 sourceTensor:(id)arg2 resultTensor:(id)arg3 forTraining:(bool)arg4;
- (void)dispatchForwardFusedArithmeticLayerNormalizationLayer:(id)arg1 sourceTensors:(id)arg2 resultTensor:(id)arg3 forTraining:(bool)arg4;
- (void)dispatchForwardGatherLayer:(id)arg1 sourceTensors:(id)arg2 resultTensor:(id)arg3 forTraining:(bool)arg4;
- (void)dispatchForwardGramMatrixKernel:(id)arg1 sourceTensor:(id)arg2 resultTensor:(id)arg3 deviceIndex:(unsigned long long)arg4 forTraining:(bool)arg5;
- (void)dispatchForwardGroupNormalizationKernel:(id)arg1 sourceTensor:(id)arg2 resultTensor:(id)arg3 deviceIndex:(unsigned long long)arg4 forTraining:(bool)arg5;
- (void)dispatchForwardInstanceNormalizationKernel:(id)arg1 sourceTensor:(id)arg2 resultTensor:(id)arg3 deviceIndex:(unsigned long long)arg4 forTraining:(bool)arg5;
- (void)dispatchForwardLayer:(id)arg1 sourceTensor:(id)arg2 resultTensor:(id)arg3 resultStateIsTemporary:(bool)arg4 forTraining:(bool)arg5;
- (void)dispatchForwardLayer:(id)arg1 sourceTensor:(id)arg2 secondaryTensor:(id)arg3 tertiaryTensor:(id)arg4 resultTensor:(id)arg5 resultStateIsTemporary:(bool)arg6 forTraining:(bool)arg7;
- (void)dispatchForwardLayerNormalizationKernel:(id)arg1 sourceTensors:(id)arg2 resultTensor:(id)arg3 deviceIndex:(unsigned long long)arg4 forTraining:(bool)arg5;
- (void)dispatchForwardLossLayer:(id)arg1 sourceTensor:(id)arg2 labelsTensor:(id)arg3 labelsTensorStride:(unsigned long long)arg4 weightsTensor:(id)arg5 resultTensor:(id)arg6 resultStateIsTemporary:(bool)arg7 forTraining:(bool)arg8;
- (void)dispatchForwardMHALayer:(id)arg1 sourceTensors:(id)arg2 resultTensor:(id)arg3 resultStateIsTemporary:(bool)arg4 forTraining:(bool)arg5;
- (void)dispatchForwardMPSGraphWithDeviceOps:(id)arg1 sourceBuffer:(id)arg2 resultBuffer:(id)arg3 deviceIndex:(unsigned long long)arg4 dataType:(unsigned int)arg5;
- (void)dispatchForwardMatMulLayer:(id)arg1 sourceTensors:(id)arg2 resultTensor:(id)arg3;
- (void)dispatchForwardPaddingKernel:(id)arg1 sourceTensor:(id)arg2 resultTensor:(id)arg3 deviceIndex:(unsigned long long)arg4;
- (void)dispatchForwardPoolingKernel:(id)arg1 sourceTensor:(id)arg2 resultTensor:(id)arg3 deviceIndex:(unsigned long long)arg4 forTraining:(bool)arg5;
- (void)dispatchForwardReduceLayer:(id)arg1 sourceTensor:(id)arg2 resultTensor:(id)arg3 reductionType:(int)arg4 reduceDimensions:(id)arg5 forTraining:(bool)arg6;
- (void)dispatchForwardReshapeLayer:(id)arg1 sourceTensor:(id)arg2 resultTensor:(id)arg3 resultStateIsTemporary:(bool)arg4 forTraining:(bool)arg5;
- (void)dispatchForwardResizeKernel:(id)arg1 sourceTensor:(id)arg2 resultTensor:(id)arg3 deviceIndex:(unsigned long long)arg4;
- (void)dispatchForwardScatterLayer:(id)arg1 sourceTensors:(id)arg2 resultTensor:(id)arg3 forTraining:(bool)arg4;
- (void)dispatchForwardSelectLayer:(id)arg1 conditionTensor:(id)arg2 sourceTensors:(id)arg3 resultTensor:(id)arg4 forTraining:(bool)arg5;
- (void)dispatchForwardSliceLayer:(id)arg1 sourceTensor:(id)arg2 resultTensor:(id)arg3 forTraining:(bool)arg4;
- (void)dispatchForwardSoftmaxKernel:(id)arg1 sourceTensor:(id)arg2 resultTensor:(id)arg3 deviceIndex:(unsigned long long)arg4;
- (void)dispatchForwardSplitLayer:(id)arg1 sourceTensor:(id)arg2 resultTensors:(id)arg3;
- (void)dispatchForwardSplitLayer:(id)arg1 sourceTensor:(id)arg2 resultTensors:(id)arg3 forConcat:(bool)arg4;
- (void)dispatchGradientActivationsKernel:(id)arg1 sourceGradientTensor:(id)arg2 resultGradientTensor:(id)arg3 deviceIndex:(unsigned long long)arg4;
- (void)dispatchGradientArithmeticBinaryKernel:(id)arg1 sourceGradientTensor:(id)arg2 resultGradientTensor:(id)arg3 secondaryResultGradientTensor:(id)arg4 deviceIndex:(unsigned long long)arg5;
- (void)dispatchGradientArithmeticUnaryKernel:(id)arg1 sourceGradientTensor:(id)arg2 resultGradientTensor:(id)arg3 deviceIndex:(unsigned long long)arg4;
- (void)dispatchGradientBatchNormalizationKernel:(id)arg1 sourceGradientTensor:(id)arg2 resultGradientTensor:(id)arg3 deviceIndex:(unsigned long long)arg4;
- (void)dispatchGradientConcatLayer:(id)arg1 sourceGradientTensor:(id)arg2 resultGradientTensors:(id)arg3;
- (void)dispatchGradientEmbeddingLayer:(id)arg1 sourceGradientTensor:(id)arg2;
- (void)dispatchGradientFullyConnectedLayer:(id)arg1 sourceGradientTensor:(id)arg2 resultGradientTensor:(id)arg3 resultStateIsTemporary:(bool)arg4;
- (void)dispatchGradientGramMatrixKernel:(id)arg1 sourceGradientTensor:(id)arg2 resultGradientTensor:(id)arg3 deviceIndex:(unsigned long long)arg4;
- (void)dispatchGradientGroupNormalizationKernel:(id)arg1 sourceGradientTensor:(id)arg2 resultGradientTensor:(id)arg3 deviceIndex:(unsigned long long)arg4;
- (void)dispatchGradientInstanceNormalizationKernel:(id)arg1 sourceGradientTensor:(id)arg2 resultGradientTensor:(id)arg3 deviceIndex:(unsigned long long)arg4;
- (void)dispatchGradientLayer:(id)arg1 sourceGradientTensor:(id)arg2 resultGradientTensor:(id)arg3;
- (void)dispatchGradientLayer:(id)arg1 sourceGradientTensor:(id)arg2 resultGradientTensor:(id)arg3 secondaryResultGradientTensor:(id)arg4;
- (void)dispatchGradientLayerNormalizationKernel:(id)arg1 sourceGradientTensor:(id)arg2 resultGradientTensor:(id)arg3 deviceIndex:(unsigned long long)arg4;
- (void)dispatchGradientLossLayer:(id)arg1 sourceGradientTensor:(id)arg2 labelsTensor:(id)arg3 labelsTensorStride:(unsigned long long)arg4 weightsTensor:(id)arg5 resultGradientTensor:(id)arg6;
- (void)dispatchGradientMHALayer:(id)arg1 sourceGradientTensor:(id)arg2 resultGradientTensors:(id)arg3 resultStateIsTemporary:(bool)arg4;
- (void)dispatchGradientMPSGraphWithDeviceOps:(id)arg1 sourceBuffer:(id)arg2 souceGradientBuffer:(id)arg3 resultGradientBuffer:(id)arg4 deviceIndex:(unsigned long long)arg5 dataType:(unsigned int)arg6;
- (void)dispatchGradientMatMulLayer:(id)arg1 sourceGradientTensor:(id)arg2 resultGradientTensors:(id)arg3;
- (void)dispatchGradientPaddingKernel:(id)arg1 sourceGradientTensor:(id)arg2 resultGradientTensor:(id)arg3 deviceIndex:(unsigned long long)arg4;
- (void)dispatchGradientPoolingKernel:(id)arg1 sourceGradientTensor:(id)arg2 resultGradientTensor:(id)arg3 deviceIndex:(unsigned long long)arg4;
- (void)dispatchGradientReduceLayer:(id)arg1 sourceGradientTensor:(id)arg2 resultGradientTensor:(id)arg3 reductionType:(int)arg4 reduceDimensions:(id)arg5;
- (void)dispatchGradientReshapeLayer:(id)arg1 sourceGradientTensor:(id)arg2 resultGradientTensor:(id)arg3;
- (void)dispatchGradientResizeKernel:(id)arg1 sourceGradientTensor:(id)arg2 resultGradientTensor:(id)arg3 deviceIndex:(unsigned long long)arg4;
- (void)dispatchGradientSelectLayer:(id)arg1 conditionTensor:(id)arg2 sourceGradientTensor:(id)arg3 resultGradientTensors:(id)arg4;
- (void)dispatchGradientSliceLayer:(id)arg1 sourceGradientTensor:(id)arg2 resultGradientTensor:(id)arg3;
- (void)dispatchGradientSoftmaxKernel:(id)arg1 sourceGradientTensor:(id)arg2 resultGradientTensor:(id)arg3 deviceIndex:(unsigned long long)arg4;
- (void)dispatchGradientSplitLayer:(id)arg1 sourceGradientTensors:(id)arg2 resultGradientTensor:(id)arg3;
- (void)dispatchGradientSplitLayer:(id)arg1 sourceGradientTensors:(id)arg2 resultGradientTensor:(id)arg3 forConcat:(bool)arg4;
- (void)dispatchPadChannelsKernel:(id)arg1 sourceImageBatch:(id)arg2 resultImageBatch:(id)arg3 deviceIndex:(unsigned long long)arg4;
- (void)dispatchRNNForwardLayer:(id)arg1 sourceTensors:(id)arg2 resultTensors:(id)arg3;
- (void)dispatchRNNForwardLayer:(id)arg1 sourceTensors:(id)arg2 resultTensors:(id)arg3 resultStateIsTemporary:(bool)arg4 forTraining:(bool)arg5;
- (void)dispatchRNNGradientLayer:(id)arg1 sourceGradientTensors:(id)arg2 resultGradientTensors:(id)arg3;
- (void)dispatchReadTensor:(id)arg1 targetBuffer:(void*)arg2 batchSize:(unsigned long long)arg3;
- (void)dispatchReadTensorFromAllDevices:(id)arg1 targetBuffer:(void*)arg2 batchSize:(unsigned long long)arg3;
- (void)dispatchTransposeKernel:(id)arg1 sourceTensor:(id)arg2 resultTensor:(id)arg3 deviceIndex:(unsigned long long)arg4 forward:(bool)arg5;
- (id)dropoutLayerWithRate:(float)arg1 seed:(unsigned long long)arg2;
- (id)embeddingLayerWithDescriptor:(id)arg1 weights:(id)arg2 inferenceOnly:(bool)arg3;
- (id)embeddingWeightsGradients:(id)arg1 embeddingCount:(unsigned long long)arg2 embeddingDimension:(unsigned long long)arg3;
- (void)encodePrimitiveToCommandBuffer:(id)arg1 gpuDeviceOps:(id)arg2 sourceTensor:(id)arg3 secondaryTensor:(id)arg4 tertiaryTensor:(id)arg5 resultTensor:(id)arg6 params:(struct CompareParams { int x1; struct { int x_2_1_1; int x_2_1_2; int x_2_1_3; int x_2_1_4; } x2[4]; struct { unsigned short x_3_1_1; short x_3_1_2; } x3; int x4; }*)arg7 sizeOfParams:(unsigned long long)arg8 pipelineState:(id)arg9 deviceIndex:(unsigned long long)arg10;
- (double*)executionTimeInterval;
- (id)fullyConnectedLayerWithDescriptor:(id)arg1 weights:(id)arg2 biasTerms:(id)arg3;
- (void)fuseLayersForGraph:(id)arg1 stopGradientTensorList:(id)arg2 startAtLayerIndex:(unsigned long long)arg3 forInference:(bool)arg4;
- (void)fuseLayersForInferenceGraph:(id)arg1 startAtLayerIndex:(unsigned long long)arg2;
- (void)fuseLayersForTrainingGraph:(id)arg1 stopGradientTensorList:(id)arg2;
- (id)fusedBatchNormalizationAndNeuronLayerWithDescriptor:(id)arg1 numOfFeatureChannels:(unsigned long long)arg2 mean:(id)arg3 variance:(id)arg4 beta:(id)arg5 gamma:(id)arg6 varianceEpsilon:(float)arg7 momentum:(float)arg8;
- (id)fusedConvolutionAndNeuronLayerWithDescriptor:(id)arg1 convolutionDescriptor:(id)arg2 weights:(id)arg3 biasTerms:(id)arg4;
- (id)fusedFullyConnectedAndNeuronLayerWithDescriptor:(id)arg1 convolutionDescriptor:(id)arg2 weights:(id)arg3 biasTerms:(id)arg4;
- (id)fusedInstanceNormalizationAndNeuronLayerWithDescriptor:(id)arg1 numOfFeatureChannels:(unsigned long long)arg2 mean:(id)arg3 variance:(id)arg4 beta:(id)arg5 gamma:(id)arg6 varianceEpsilon:(float)arg7 momentum:(float)arg8;
- (id)gammaGradients:(id)arg1;
- (id)gatherLayerWithDimension:(unsigned long long)arg1;
- (id)getGradientBufferForNormalizationState:(id)arg1 layer:(id)arg2 isBetaTensor:(bool)arg3;
- (id)getHostPointerIfUnifiedDeviceMemory:(id)arg1;
- (id)gpuCommandBufferList;
- (id)gpuCommandQueueList;
- (id)gpuConcurrentEncoderFence;
- (id)gpuHeapTemporaryResourceAllocator;
- (id)gpuLibrary;
- (id)gpuLocalEventList;
- (id)gpuMPSCommandBufferList;
- (id)gpuPipelineStatesArithmeticBinaryForward;
- (id)gpuPipelineStatesArithmeticBinaryGradient;
- (id)gpuPipelineStatesArithmeticReduceGradientAll;
- (id)gpuPipelineStatesArithmeticReduceGradientAny;
- (id)gpuPipelineStatesArithmeticUnaryForward;
- (id)gpuPipelineStatesArithmeticUnaryGradient;
- (id)gpuPipelineStatesCompareLogicalOpForward;
- (id)gpuPipelineStatesCompareRelationalOpForward;
- (id)gpuPipelineStatesConcatBool;
- (id)gpuPipelineStatesConcatFloat;
- (id)gpuPipelineStatesEmbeddingForward;
- (id)gpuPipelineStatesEmbeddingGradient;
- (id)gpuPipelineStatesEmbeddingRenormalizeWeights;
- (id)gpuPipelineStatesForwardConcat2D;
- (id)gpuPipelineStatesForwardConcat2DArray;
- (id)gpuPipelineStatesMemCopy;
- (id)gpuPipelineStatesMemFillFloat;
- (id)gpuPipelineStatesPad2D;
- (id)gpuPipelineStatesPad2DArray;
- (id)gpuPipelineStatesReduceAcrossBatch;
- (id)gpuPipelineStatesReduceAcrossChannel;
- (id)gpuReadTensorKernelList;
- (id)gpuSharedEventList;
- (id)gpuWriteTensorKernelList;
- (id)gramMatrixLayerWithScaleFactor:(float)arg1;
- (id)groupNormalizationLayerWithFeatureChannelCount:(unsigned long long)arg1 groupCount:(unsigned long long)arg2 beta:(id)arg3 gamma:(id)arg4 varianceEpsilon:(float)arg5;
- (void)incrementReadCountForGradientState:(id)arg1 increment:(long long)arg2;
- (void)incrementReadCountForTensorDeviceMemory:(id)arg1 increment:(long long)arg2;
- (id)initWithDeviceList:(id)arg1;
- (id)initWithType:(int)arg1 gpuDeviceList:(id)arg2 gpuLocalEventList:(id)arg3 gpuSharedEventList:(id)arg4 currentEventValue:(unsigned long long*)arg5 gpuCommandQueueList:(id)arg6 gpuCommandBufferList:(id)arg7 gpuMPSCommandBufferList:(id)arg8;
- (id)initWithType:(int)arg1 selectsMultipleComputeDevices:(bool)arg2;
- (id)instanceNormalizationLayerWithChannelCount:(unsigned long long)arg1 mean:(id)arg2 variance:(id)arg3 beta:(id)arg4 gamma:(id)arg5 varianceEpsilon:(float)arg6 momentum:(float)arg7;
- (bool)isAppleSoCGPU;
- (bool)isEqual:(id)arg1;
- (bool)isResultTensorUsedForGradientComputationByLayer:(id)arg1;
- (struct os_unfair_lock_s { unsigned int x1; })l;
- (id)layerNormalizationLayerWithNormalizedShape:(id)arg1 beta:(id)arg2 gamma:(id)arg3 varianceEpsilon:(float)arg4 isFusedWithArithmeticLayer:(bool)arg5;
- (id)lossLayerWithDescriptor:(id)arg1;
- (id)lossYOLOLayerWithDescriptor:(id)arg1;
- (id)lstmBiasGradient:(id)arg1 mlcBiasIndex:(unsigned long long)arg2;
- (id)lstmHiddenWeightGradient:(id)arg1 mlcWeightIndex:(unsigned long long)arg2;
- (id)lstmInputWeightGradient:(id)arg1 mlcWeightIndex:(unsigned long long)arg2;
- (id)lstmLayerWithDescriptor:(id)arg1 inputWeights:(id)arg2 hiddenWeights:(id)arg3 peepholeWeights:(id)arg4 biasTerms:(id)arg5 gateActivations:(id)arg6 outputResultActivation:(id)arg7 inferenceOnly:(bool)arg8;
- (id)matMulLayerWithDescriptor:(id)arg1 sourceTensors:(id)arg2 resultTensor:(id)arg3 inferenceOnly:(bool)arg4;
- (id)mhaAttnBiasGradient:(id)arg1 withSize:(unsigned long long)arg2 index:(unsigned long long)arg3;
- (id)mhaBiasGradient:(id)arg1 withSize:(unsigned long long)arg2 index:(unsigned long long)arg3;
- (id)mhaWeightGradient:(id)arg1 withSize:(unsigned long long)arg2 index:(unsigned long long)arg3;
- (void)multiDeviceTensorReduction:(id)arg1 sourceBuffer:(void*)arg2 targetBuffer:(void*)arg3;
- (id)multiheadAttentionLayerWithDescriptor:(id)arg1 weights:(id)arg2 bias:(id)arg3 attnBias:(id)arg4 inferenceOnly:(bool)arg5;
- (bool)needToAllocateDeviceMemoryForTensor:(id)arg1;
- (bool)needToAllocateDeviceMemoryForTensor:(id)arg1 batchSize:(unsigned long long)arg2;
- (id)neuronLayerWithDescriptor:(id)arg1;
- (unsigned long long)numDevices;
- (unsigned long long)numDevicesToUse;
- (unsigned long long)numDevicesUsedWithFirstBatch;
- (void)optimizeComputationForTrainingGraph:(id)arg1;
- (id)optimizerAdamWithDescriptor:(id)arg1 beta1:(float)arg2 beta2:(float)arg3 epsilon:(float)arg4 amsgrad:(bool)arg5 timeStep:(unsigned long long)arg6 isAdamW:(bool)arg7;
- (id)optimizerRMSPropWithDescriptor:(id)arg1 momentumScale:(float)arg2 alpha:(float)arg3 epsilon:(float)arg4 centered:(bool)arg5;
- (id)optimizerSGDWithDescriptor:(id)arg1 momentunScale:(float)arg2 useNesterovMomentum:(bool)arg3;
- (id)paddingLayerWithPaddingType:(int)arg1 paddingLeft:(unsigned long long)arg2 paddingRight:(unsigned long long)arg3 paddingTop:(unsigned long long)arg4 paddingBottom:(unsigned long long)arg5 constantValue:(float)arg6 dataType:(int)arg7;
- (id)poolingLayerWithDescriptor:(id)arg1 paddingSizes:(unsigned long long*)arg2;
- (id)readTensor:(id)arg1;
- (id)readTensor:(id)arg1 fromDeviceIndex:(unsigned long long)arg2;
- (id)readTensor:(id)arg1 fromDeviceIndex:(unsigned long long)arg2 batchSize:(unsigned long long)arg3;
- (void)readTensor:(id)arg1 fromDeviceIndex:(unsigned long long)arg2 targetBuffer:(void*)arg3 batchSize:(unsigned long long)arg4;
- (void)readTensor:(id)arg1 fromDeviceIndex:(unsigned long long)arg2 targetBuffer:(void*)arg3 batchSize:(unsigned long long)arg4 reduceOverBatch:(bool)arg5;
- (void)readTensor:(id)arg1 targetBuffer:(void*)arg2;
- (void)reduceAcrossBatchForSource:(id)arg1 result:(id)arg2 batchSize:(unsigned long long)arg3 batchStride:(unsigned long long)arg4 numEntries:(unsigned long long)arg5 deviceIndex:(unsigned long long)arg6 commandBuffer:(id)arg7;
- (id)reductionLayerWithReduceType:(int)arg1 dimensions:(id)arg2 sourceShapeCount:(unsigned long long)arg3;
- (void)reloadLSTMParameters:(id)arg1 rnnGPUDeviceOps:(id)arg2 mlcParameterIndex:(unsigned long long)arg3 tensor:(id)arg4 isInputWeight:(bool)arg5 isHiddenWeight:(bool)arg6 isBias:(bool)arg7 deviceNumber:(unsigned long long)arg8;
- (void)reloadParameterDataFromHostToDeviceMemoryForTensor:(id)arg1;
- (id)reshapeLayerWithShape:(id)arg1;
- (void)restoreConvolutionParamsWithDeviceOps:(id)arg1;
- (void)restoreRNNParamsWithDeviceOps:(id)arg1 optimizer:(id)arg2 inputWeightsParameter:(id)arg3 hiddenWeightsParameter:(id)arg4 biasesParameter:(id)arg5 arrayOfParams:(id)arg6;
- (void)rotateAndCopyMTLBuffer:(id)arg1 toNSData:(id)arg2 withTensorDescriptor:(id)arg3;
- (void)saveOrRestoreTempMatrixDisableUpdates:(id)arg1 commandBuffer:(id)arg2 auxiliaryWeightsMemory:(id)arg3 auxiliaryMomentumMemory:(id)arg4 auxiliaryVelocityMemory:(id)arg5 auxiliaryCenterWeightMemory:(id)arg6 deviceNumber:(unsigned long long)arg7 kernelNumber:(unsigned long long)arg8 mlcIndex:(unsigned long long)arg9 auxIndex:(unsigned long long)arg10 numOptimizerData:(unsigned long long)arg11 saveToAux:(bool)arg12 isInputWeight:(bool)arg13 isHiddenWeight:(bool)arg14 isBias:(bool)arg15;
- (id)scatterLayerWithDimension:(unsigned long long)arg1 reduceType:(int)arg2;
- (void)selectDevicesWithBatchSize:(unsigned long long)arg1;
- (void)selectDevicesWithBatchSize:(unsigned long long)arg1 calledfromBindAndWrite:(bool)arg2;
- (id)selectLayer;
- (void)setConvolutionGradientComputeWeightsAndBiasOnly:(id)arg1;
- (bool)setConvolutionLayerOptimizerDataForDeviceOps:(id)arg1 weights:(id)arg2 bias:(id)arg3;
- (void)setDeviceMemoryForTensor:(id)arg1 data:(id)arg2;
- (void)setFullyConnectedGradientComputeWeightsAndBiasOnly:(id)arg1;
- (void)setGpuConcurrentEncoderFence:(id)arg1;
- (void)setGpuHeapTemporaryResourceAllocator:(id)arg1;
- (void)setGpuLocalEventList:(id)arg1;
- (void)setGpuPipelineStatesArithmeticBinaryForward:(id)arg1;
- (void)setGpuPipelineStatesArithmeticBinaryGradient:(id)arg1;
- (void)setGpuPipelineStatesArithmeticReduceGradientAll:(id)arg1;
- (void)setGpuPipelineStatesArithmeticReduceGradientAny:(id)arg1;
- (void)setGpuPipelineStatesArithmeticUnaryForward:(id)arg1;
- (void)setGpuPipelineStatesArithmeticUnaryGradient:(id)arg1;
- (void)setGpuPipelineStatesCompareLogicalOpForward:(id)arg1;
- (void)setGpuPipelineStatesCompareRelationalOpForward:(id)arg1;
- (void)setGpuPipelineStatesConcatBool:(id)arg1;
- (void)setGpuPipelineStatesConcatFloat:(id)arg1;
- (void)setGpuPipelineStatesEmbeddingForward:(id)arg1;
- (void)setGpuPipelineStatesEmbeddingGradient:(id)arg1;
- (void)setGpuPipelineStatesEmbeddingRenormalizeWeights:(id)arg1;
- (void)setGpuPipelineStatesForwardConcat2D:(id)arg1;
- (void)setGpuPipelineStatesForwardConcat2DArray:(id)arg1;
- (void)setGpuPipelineStatesMemCopy:(id)arg1;
- (void)setGpuPipelineStatesMemFillFloat:(id)arg1;
- (void)setGpuPipelineStatesPad2D:(id)arg1;
- (void)setGpuPipelineStatesPad2DArray:(id)arg1;
- (void)setGpuPipelineStatesReduceAcrossBatch:(id)arg1;
- (void)setGpuPipelineStatesReduceAcrossChannel:(id)arg1;
- (void)setGpuSharedEventList:(id)arg1;
- (void)setL:(struct os_unfair_lock_s { unsigned int x1; })arg1;
- (bool)setLSTMLayerOptimizerDataForDeviceOps:(id)arg1 inputWeights:(id)arg2 hiddenWeights:(id)arg3 biasTerms:(id)arg4;
- (bool)setMHALayerOptimizerDataForDeviceOps:(id)arg1 optimizerDataForWeights:(id)arg2 optimizerDataForBias:(id)arg3;
- (bool)setNormalizationLayerOptimizerDataForDeviceOps:(id)arg1 beta:(id)arg2 gamma:(id)arg3;
- (void)setNumDevicesToUse:(unsigned long long)arg1;
- (void)setNumDevicesUsedWithFirstBatch:(unsigned long long)arg1;
- (void)setOptimizerLearningRate:(id)arg1 learningRate:(float)arg2;
- (void)setOptimizerTimeStep:(id)arg1 timeStep:(unsigned long long)arg2;
- (bool)shareDeviceMemoryWithResultTensor:(id)arg1 sourceTensor:(id)arg2;
- (void)signalAllDevicesExcludingDevice:(unsigned long long)arg1 eventValue:(unsigned long long)arg2;
- (void)signalNextEvent;
- (id)sliceLayerWithbegin:(id)arg1 end:(id)arg2 stride:(id)arg3 inferenceOnly:(bool)arg4;
- (id)softmaxLayerWithOperation:(int)arg1 dimension:(unsigned long long)arg2 sourceShapeCount:(unsigned long long)arg3;
- (id)splitLayerWithDimension:(unsigned long long)arg1;
- (void)sumSharedGradientsForConvolutionLayerTensorParameter:(id)arg1 layerIndexForSummedGradients:(unsigned long long)arg2;
- (void)sumSharedGradientsForNormalizationLayerTensorParameter:(id)arg1 layerIndexForSummedGradients:(unsigned long long)arg2 isBetaTensor:(bool)arg3;
- (void)synchronizeOptimizerBuffers:(id)arg1 commandBuffer:(id)arg2;
- (void)synchronizeOptimizerUpdatesForTensor:(id)arg1;
- (bool)synchronizeTensor:(id)arg1;
- (bool)synchronizeTensorOnHost:(id)arg1;
- (void)synchronizeUpdatesForLayer:(id)arg1;
- (void)synchronizeWeightMatrixForRNNLayer:(id)arg1 matrixId:(unsigned long long)arg2 parameterType:(unsigned long long)arg3 accumulatorIndex:(unsigned long long)arg4 forLSTMNum:(unsigned long long)arg5 forDeviceNum:(unsigned long long)arg6 forGate:(unsigned long long)arg7;
- (bool)transferTensor:(id)arg1 fromDevice:(id)arg2;
- (id)transposeLayerWithShape:(id)arg1;
- (void)unsafe_signalAllDevicesExcludingDevice:(unsigned long long)arg1 eventValue:(unsigned long long)arg2;
- (void)updateAllParametersWithOptimizer:(id)arg1 arrayOfParameters:(id)arg2;
- (void)updateBatchNormalizationLayer:(id)arg1 optimizer:(id)arg2 betaParameter:(id)arg3 gammaParameter:(id)arg4 meanTensor:(id)arg5 varianceTensor:(id)arg6 arrayOfParams:(id)arg7;
- (void)updateConvolutionLayer:(id)arg1 optimizer:(id)arg2 weightsParameter:(id)arg3 biasesParameter:(id)arg4 arrayOfParams:(id)arg5;
- (bool)updateDeviceMemoryForTensor:(id)arg1;
- (void)updateEmbeddingLayer:(id)arg1 weightsParameter:(id)arg2 optimizer:(id)arg3 arrayOfParams:(id)arg4;
- (void)updateFullyConnectedLayer:(id)arg1 optimizer:(id)arg2 weightsParameter:(id)arg3 biasesParameter:(id)arg4 arrayOfParams:(id)arg5;
- (void)updateGraphExecutionTime:(id)arg1 atIndex:(int)arg2 gpuTime:(double)arg3;
- (void)updateGroupNormalizationLayer:(id)arg1 optimizer:(id)arg2 betaParameter:(id)arg3 gammaParameter:(id)arg4 arrayOfParams:(id)arg5;
- (void)updateInstanceNormalizationLayer:(id)arg1 optimizer:(id)arg2 betaParameter:(id)arg3 gammaParameter:(id)arg4 arrayOfParams:(id)arg5;
- (void)updateLayerNormalizationLayer:(id)arg1 optimizer:(id)arg2 betaParameter:(id)arg3 gammaParameter:(id)arg4 arrayOfParams:(id)arg5;
- (void)updateMultiheadAttentionLayer:(id)arg1 optimizer:(id)arg2 weightsParameter:(id)arg3 biasesParameter:(id)arg4 arrayOfParams:(id)arg5;
- (void)updateRNNLayer:(id)arg1 optimizer:(id)arg2 inputWeightsParameter:(id)arg3 hiddenWeightsParameter:(id)arg4 biasesParameter:(id)arg5 arrayOfParams:(id)arg6;
- (void)updateTensorParameter:(id)arg1 optimizer:(id)arg2 gradient:(id)arg3 arrayOfParams:(id)arg4;
- (void)updateTensorsForFMAFusedLayers:(id)arg1 layerNext:(id)arg2;
- (void)updateTensorsForFusedArithmeticAndLayerNormalizationLayer:(id)arg1 layerNext:(id)arg2;
- (void)updateWithAdamOptimizer:(id)arg1 encoder:(id)arg2 deviceParameter:(id)arg3 source:(id)arg4 gradient:(id)arg5 result:(id)arg6 momentumIndex:(unsigned long long)arg7;
- (void)updateWithOptimizer:(id)arg1 arrayOfParams:(id)arg2 commandBuffer:(id)arg3 deviceParameter:(id)arg4 source:(id)arg5 gradient:(id)arg6 result:(id)arg7 momentumIndex:(unsigned long long)arg8;
- (void)updateWithRMSPropOptimizer:(id)arg1 encoder:(id)arg2 deviceParameter:(id)arg3 source:(id)arg4 gradient:(id)arg5 result:(id)arg6 momentumIndex:(unsigned long long)arg7;
- (void)updateWithSGDOptimizer:(id)arg1 encoder:(id)arg2 deviceParameter:(id)arg3 source:(id)arg4 gradient:(id)arg5 result:(id)arg6 momentumIndex:(unsigned long long)arg7;
- (id)upsampleLayerWithScaleFactorX:(float)arg1 scaleFactorY:(float)arg2 sampleMode:(int)arg3 alignCorners:(bool)arg4;
- (void)waitForAllDevicesExcludingDevice:(unsigned long long)arg1 eventValue:(unsigned long long)arg2;
- (void)waitForOthers;
- (id)weightsGradients:(id)arg1;

@end
