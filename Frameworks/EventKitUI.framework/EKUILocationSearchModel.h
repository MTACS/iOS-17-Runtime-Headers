
@interface EKUILocationSearchModel : NSObject <CLLocationManagerDelegate, MKSearchCompleterDelegate> {
    NSMutableArray * _allPossibleVirtualConferenceRooms;
    MKLocalSearchCompleter * _completer;
    NSMutableDictionary * _conferenceRoomAddressesToConferenceRooms;
    NSOperationQueue * _conferenceRoomOperationQueue;
    NSObject<OS_dispatch_queue> * _conferenceRoomProcessingQueue;
    CNContactStore * _contactStore;
    NSMutableArray * _contactsSearchResults;
    <CNCancelable> * _contactsSearchToken;
    CLLocation * _currentImpreciseLocation;
    EKStructuredLocation * _currentLocation;
    CRSearchQuery * _currentRecentsSearch;
    NSObject<OS_dispatch_queue> * _customConferenceQueue;
    <EKUILocationSearchModelDelegate> * _delegate;
    EKEventStore * _eventStore;
    NSObject<OS_dispatch_queue> * _eventsQueue;
    EKOccurrenceCacheLocationSearch * _eventsSearch;
    NSMutableArray * _eventsSearchResults;
    NSMutableArray * _frequentsSearchResults;
    CLGeocoder * _geocoder;
    MKLocalSearch * _localSearch;
    CLInUseAssertion * _locationAssertion;
    EKStructuredLocationWithImage * _locationFromMapsURL;
    CLLocationManager * _locationManager;
    NSArray * _mapCompletionSearchResults;
    NSMutableArray * _mutableConferenceRoomSearchResults;
    NSObject<OS_dispatch_queue> * _recentsQueue;
    NSMutableArray * _recentsSearchResults;
    unsigned long long  _supportedSearchTypes;
    NSArray * _textualSearchResults;
    NSArray * _virtualConferenceCustomSearchResults;
    NSMutableArray * _virtualConferenceRoomSearchResults;
    NSCharacterSet * _whitespaceAndNewlineCharacterSet;
}

@property (nonatomic, readonly) NSArray *conferenceRoomSearchResults;
@property (nonatomic, readonly) NSArray *contactsSearchResults;
@property (nonatomic, retain) EKStructuredLocation *currentLocation;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <EKUILocationSearchModelDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSArray *eventsSearchResults;
@property (nonatomic, readonly) NSArray *frequentsSearchResults;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) <GEOMapServiceCompletionTicket> *lastTicket;
@property (nonatomic, readonly) EKStructuredLocationWithImage *locationFromMapsURL;
@property (nonatomic, readonly) NSArray *mapCompletionSearchResults;
@property (nonatomic, readonly) NSArray *recentsSearchResults;
@property (readonly) Class superclass;
@property (nonatomic) unsigned long long supportedSearchTypes;
@property (nonatomic, readonly) NSArray *textualSearchResults;
@property (nonatomic, readonly) NSArray *virtualConferenceCustomSearchResults;
@property (nonatomic, readonly) NSArray *virtualConferenceRoomSearchResults;

+ (id)URLsFromSource:(id)arg1;
+ (id)_dataDetector;
+ (id)_linksInSource:(id)arg1;
+ (void)initialize;

- (void).cxx_destruct;
- (void)_addDiscoveredConferenceRooms:(id)arg1;
- (void)_addLocationToRecents:(id)arg1 addressString:(id)arg2 mapItem:(id)arg3;
- (void)_handleAvailabilityResults:(id)arg1 forOperation:(id)arg2;
- (id)_imageForAttributes:(id)arg1;
- (id)_imageForMapHandle:(id)arg1;
- (void)_processDirectorySearchResultSet:(id)arg1 forOperation:(id)arg2;
- (void)_updateAllPossibleVirtualConferenceResultsWithRoomTypes:(id)arg1;
- (void)_updateContactsSearchWithResults:(id)arg1 forToken:(id)arg2;
- (void)_updateMapURL:(id)arg1;
- (void)_updateVirtualConferenceCustomOptions:(id)arg1;
- (void)_updateVirtualConferenceOptions:(id)arg1;
- (void)addConferenceRoomToRecents:(id)arg1 fromSource:(id)arg2;
- (id)availabilityRequestForConferenceRooms:(id)arg1 duringEvent:(id)arg2 resultsBlock:(id /* block */)arg3 completionBlock:(id /* block */)arg4;
- (void)beginSearchForTerm:(id)arg1;
- (void)cancelSearch;
- (void)completerDidFail:(id)arg1 error:(id)arg2;
- (void)completerDidUpdateResults:(id)arg1 finished:(bool)arg2;
- (id)conferenceRoomSearchResults;
- (id)contactsSearchResults;
- (id)currentLocation;
- (void)dealloc;
- (unsigned long long)dedupeResults;
- (id)delegate;
- (id)eventsSearchResults;
- (id)frequentsSearchResults;
- (void)getCurrentLocation;
- (id)initWithEventStore:(id)arg1;
- (id)locationFromMapsURL;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (id)mapCompletionSearchResults;
- (id)recentsSearchResults;
- (bool)removeRecentLocation:(id)arg1;
- (void)resetConferenceRoomSearchResults;
- (void)resetContactsSearchResults;
- (void)resetEventsSearchResults;
- (void)resetRecentsSearchResults;
- (void)resetSearchResults:(bool)arg1;
- (void)searchConferenceRooms:(id)arg1;
- (void)searchFrequentLocations:(id)arg1;
- (void)selectCurrentLocation;
- (void)selectLocation:(id)arg1;
- (void)selectMapSearchCompletion:(id)arg1;
- (void)selectVirtualConferenceRoomType:(id)arg1;
- (void)setCurrentLocation:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setSupportedSearchTypes:(unsigned long long)arg1;
- (id)splitEventLocations:(id)arg1;
- (void)stopUpdatingLocation;
- (unsigned long long)supportedSearchTypes;
- (id)textualSearchResults;
- (void)updateConferenceRoomAvailability:(id)arg1 duringEvent:(id)arg2 completionBlock:(id /* block */)arg3;
- (void)updateContacts:(id)arg1;
- (void)updateEventLocations:(id)arg1;
- (void)updateRecents:(id)arg1;
- (void)updateVirtualConferenceRoomOptions:(id)arg1;
- (id)virtualConferenceCustomSearchResults;
- (id)virtualConferenceRoomSearchResults;

@end
