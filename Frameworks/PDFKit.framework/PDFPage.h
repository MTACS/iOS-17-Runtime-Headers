
@interface PDFPage : NSObject <NSCopying> {
    PDFPagePrivate * _private;
}

@property (nonatomic, readonly) NSArray *annotations;
@property (nonatomic, readonly) NSAttributedString *attributedString;
@property (nonatomic, readonly) NSData *dataRepresentation;
@property (nonatomic) bool displaysAnnotations;
@property (nonatomic, readonly) PDFDocument *document;
@property (nonatomic, readonly) NSString *label;
@property (nonatomic, readonly) unsigned long long numberOfCharacters;
@property (nonatomic, readonly) struct CGPDFPage { }*pageRef;
@property (nonatomic) long long rotation;
@property (nonatomic, readonly) NSString *string;

// Image: /System/Library/Frameworks/PDFKit.framework/PDFKit

+ (struct CGPDFPage { }*)_createPageRefFromImage:(struct CGImage { }*)arg1 andOptions:(id)arg2;
+ (bool)_getBooleanProperty:(id)arg1 forKey:(id)arg2 withDefault:(bool)arg3;
+ (id)displayListCreationQueue;
+ (id)fontWithPDFFont:(struct CGPDFFont { }*)arg1 size:(float)arg2;
+ (bool)isExcludingAKAnnotationRenderingForThisThread;
+ (bool)isNativeRotationDrawingEnabledForThisThread;
+ (void)setExcludingAKAnnotationRenderingForThisThread:(bool)arg1;
+ (void)setNativeRotationDrawingEnabledForThisThread:(bool)arg1;
+ (void)setShouldHideAnnotationsForThisThread:(bool)arg1;
+ (bool)shouldHideAnnotationsForThisThread;
+ (bool)useLegacyImageHandling;

- (void).cxx_destruct;
- (void)_addBox:(int)arg1 toDictionary:(struct __CFDictionary { }*)arg2 offset:(struct CGPoint { double x1; double x2; })arg3;
- (void)_addWidgetAnnotationToLookupDictionary:(id)arg1;
- (void)_buildPageLayout;
- (void)_commonInit;
- (id)_createAttributedString;
- (struct CGDisplayList { }*)_createDisplayListTrackingGlyphs:(bool)arg1;
- (void)_createRetainedDisplayList;
- (unsigned long long)_documentIndex;
- (void)_drawAnnotationsWithBox:(long long)arg1 inContext:(struct CGContext { }*)arg2;
- (void)_drawBookmarkInContext:(struct CGContext { }*)arg1;
- (struct CGImage { }*)_newCGImageWithBox:(long long)arg1 bitmapSize:(struct PDFSizeIntegral { unsigned long long x1; unsigned long long x2; })arg2 scale:(double)arg3 offset:(struct CGPoint { double x1; double x2; })arg4 colorSpace:(struct CGColorSpace { }*)arg5 backgroundColor:(id)arg6 withRotation:(bool)arg7 withAntialiasing:(bool)arg8 withAnnotations:(bool)arg9 withBookmark:(bool)arg10 withDelegate:(id)arg11;
- (void)_postAnnotationsChangedNotificationCoalesced;
- (void)_releaseDisplayList;
- (void)_removeWidgetAnnotationFromLookupDictionary:(id)arg1;
- (id)_rvItemAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)_scanData:(id)arg1;
- (bool)_writeToConsumer:(struct CGDataConsumer { }*)arg1;
- (void)addAnnotation:(id)arg1;
- (void)addAnnotation:(id)arg1 withUndo:(bool)arg2;
- (void)addAnnotationFormField:(id)arg1;
- (void)addDetectedAnnotations:(id)arg1;
- (void)addFormFieldGroup:(id)arg1;
- (void)addRedactionFromRectangularSelectionWithRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)addedAnnotation:(id)arg1 forFormField:(id)arg2;
- (bool)akDidSetupRealPageModelController;
- (id)akPageAdaptor;
- (id)annotationAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)annotationAtRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)annotationChanges;
- (id)annotationForDetectedFormField:(id)arg1;
- (Class)annotationSubclassForSubtype:(id)arg1;
- (id)annotationWithUUID:(id)arg1;
- (id)annotations;
- (id)annotationsForFieldName:(id)arg1;
- (id)annotationsIfAvail;
- (id)applicationDataWithName:(id)arg1;
- (id)attributedString;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })boundsForBox:(long long)arg1;
- (void)changedAnnotation:(id)arg1;
- (id)changedAnnotations;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })characterBoundsAtIndex:(long long)arg1;
- (long long)characterIndexAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (long long)characterIndexNearestPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)clearAnnotationChanges;
- (bool)colorWidgetBackgrounds;
- (bool)columnAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (bool)columnAtPointIfAvailable:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })columnFrameAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (bool)containsDetectedFormFields;
- (bool)containsFormFields;
- (bool)containsFormFieldsWithContentType;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (struct CGDisplayList { }*)createDisplayListForFormDetection;
- (struct CGPath { }*)createRedactionPath;
- (id)dataRepresentation;
- (id)ddScannerResults;
- (void)dealloc;
- (id)debugQuickLookObject;
- (id)description;
- (id)detectedAnnotations;
- (id)detectedForm;
- (id)detectedFormFieldForAnnotation:(id)arg1;
- (unsigned long long)detectedFormFieldsRecognitionConfidence;
- (bool)didChangeBounds;
- (bool)didPerformFormDetection;
- (bool)didPerformOCR;
- (bool)disableUndoManagerForAK;
- (struct CGDisplayList { }*)displayList;
- (bool)displaysAnnotations;
- (id)document;
- (void)drawAnnotationsWithBox:(long long)arg1 inContext:(struct CGContext { }*)arg2 passingTest:(id /* block */)arg3;
- (void)drawWithBox:(long long)arg1 inContext:(struct CGContext { }*)arg2;
- (void)drawWithBox:(long long)arg1 inContext:(struct CGContext { }*)arg2 isThumbnail:(bool)arg3;
- (void)drawWithBox:(long long)arg1 inContext:(struct CGContext { }*)arg2 withOptions:(id)arg3;
- (void)drawWithBox:(long long)arg1 toContext:(struct CGContext { }*)arg2;
- (void)enableUndoManagerForAK:(bool)arg1;
- (void)enumerateApplicationDataUsingBlock:(id /* block */)arg1;
- (void)fetchAnnotationsWithCompletion:(id /* block */)arg1 deliveredOnQueue:(id)arg2;
- (void)fetchPageLayoutWithCompletion:(id /* block */)arg1 deliveredOnQueue:(id)arg2;
- (id)formFieldGroupForAnnotation:(id)arg1;
- (struct __CFDictionary { }*)gcCreateBoxDictionary;
- (void)getAnnotations;
- (struct CGDisplayList { }*)getDisplayListSynchronously;
- (void)getDisplayListWithCompletion:(id /* block */)arg1 onQueue:(id)arg2;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })getDrawingTransformForBox:(long long)arg1;
- (bool)hasArtBox;
- (bool)hasBleedBox;
- (bool)hasCropBox;
- (bool)hasPopups;
- (bool)hasTrimBox;
- (id)imageOfSize:(struct CGSize { double x1; double x2; })arg1 forBox:(long long)arg2 withOptions:(id)arg3;
- (id)init;
- (id)initWithCGImage:(struct CGImage { }*)arg1 options:(id)arg2;
- (id)initWithImage:(id)arg1;
- (id)initWithImage:(id)arg1 options:(id)arg2;
- (id)initWithImageSource:(struct CGImageSource { }*)arg1;
- (id)initWithPageRef:(struct CGPDFPage { }*)arg1;
- (id)initWithRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 andRotation:(long long)arg2;
- (void)insertAnnotation:(id)arg1 atIndex:(long long)arg2;
- (bool)isBookmarked;
- (BOOL)isCandidateForFormDetection;
- (BOOL)isCandidateForOCR;
- (bool)isTextFromOCR;
- (id)label;
- (id)lastAnnotationChange;
- (id)lazilyLoadAnnotations;
- (unsigned long long)numberOfCharacters;
- (struct CGColor { }*)pageBackgroundColorHint;
- (struct CGPDFLayout { }*)pageLayout;
- (struct CGPDFLayout { }*)pageLayoutIfAvail;
- (struct CGPDFPage { }*)pageRef;
- (bool)pathIntersectsWithRedactionPath:(struct CGPath { }*)arg1;
- (id)pdfScannerResultAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)pdfScannerResultAtPoint:(struct CGPoint { double x1; double x2; })arg1 onPageLayer:(id)arg2;
- (void)postAnnotationsChangedNotification;
- (void)postPageDidChangeBoundsNotification;
- (void)postPageDidRotateNotification;
- (void)printActivePageAnnotations;
- (void)purgeAll;
- (void)purgePageLayout;
- (bool)rectIntersectsWithRedactionPath:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)removeAnnotation:(id)arg1;
- (void)removeAnnotation:(id)arg1 atIndex:(long long)arg2;
- (void)removeAnnotation:(id)arg1 withUndo:(bool)arg2;
- (void)removeFromDetectedAnnotations:(id)arg1;
- (void)replaceAnnotation:(id)arg1 withAnnotation:(id)arg2;
- (bool)requestedOCR;
- (void)resetChangedAnnotations;
- (long long)rotation;
- (id)rvItemAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)rvItemAtPoint:(struct CGPoint { double x1; double x2; })arg1 onPageLayer:(id)arg2;
- (id)rvItemWithPDFScannerResult:(id)arg1;
- (id)scannedAnnotationAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)selectionForAll;
- (id)selectionForCharacterAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)selectionForCodeRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)selectionForLineAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)selectionForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)selectionForRangeCommon:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 isCodeRange:(bool)arg2;
- (id)selectionForRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)selectionForWordAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)selectionFromPoint:(struct CGPoint { double x1; double x2; })arg1 toPoint:(struct CGPoint { double x1; double x2; })arg2;
- (id)selectionFromPoint:(struct CGPoint { double x1; double x2; })arg1 toPoint:(struct CGPoint { double x1; double x2; })arg2 type:(int)arg3;
- (id)selectionFromPointToBottom:(struct CGPoint { double x1; double x2; })arg1 type:(int)arg2;
- (id)selectionFromTopToPoint:(struct CGPoint { double x1; double x2; })arg1 type:(int)arg2;
- (void)setAKDidSetupRealPageModelController:(bool)arg1;
- (void)setApplicationData:(id)arg1 withName:(id)arg2;
- (void)setBookmarked:(bool)arg1;
- (void)setBookmarked:(bool)arg1 updateBookmarks:(bool)arg2;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 forBox:(long long)arg2;
- (void)setCandidateForFormDetection:(BOOL)arg1;
- (void)setCandidateForOCR:(BOOL)arg1;
- (void)setColorWidgetBackgrounds:(bool)arg1;
- (void)setDetectedForm:(id)arg1;
- (void)setDetectedFormFieldsRecognitionConfidence:(unsigned long long)arg1;
- (void)setDidPerformFormDetection:(bool)arg1;
- (void)setDidPerformOCR:(bool)arg1;
- (void)setDisplaysAnnotations:(bool)arg1;
- (void)setDisplaysMarkupAnnotations:(bool)arg1;
- (void)setDocument:(id)arg1;
- (void)setExtraContentStream:(struct CGPDFStream { }*)arg1 steamDocument:(struct CGPDFDocument { }*)arg2;
- (bool)setPageRef:(struct CGPDFPage { }*)arg1;
- (void)setRotation:(long long)arg1;
- (void)setView:(id)arg1;
- (void)setupAKPageAdaptorIfNecessary;
- (id)string;
- (id)thumbnailOfSize:(struct CGSize { double x1; double x2; })arg1 forBox:(long long)arg2;
- (id)thumbnailOfSize:(struct CGSize { double x1; double x2; })arg1 forBox:(long long)arg2 withBookmark:(bool)arg3;
- (id)thumbnailOfSize:(struct CGSize { double x1; double x2; })arg1 forBox:(long long)arg2 withBookmark:(bool)arg3 withAnnotations:(bool)arg4;
- (void)transformContext:(struct CGContext { }*)arg1 forBox:(long long)arg2;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })transformForBox:(long long)arg1;
- (id)view;

// Image: /System/Library/PrivateFrameworks/NewsArticles.framework/NewsArticles

- (id)na_thumbnailOfSize:(struct CGSize { double x1; double x2; })arg1 forBox:(long long)arg2;

@end
