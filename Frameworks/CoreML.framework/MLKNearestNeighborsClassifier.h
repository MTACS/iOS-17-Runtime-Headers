
@interface MLKNearestNeighborsClassifier : MLModel <MLCompiledModelLoader, MLSpecificationCompiler, MLUpdatable, NSSecureCoding> {
    bool  _continueWithUpdate;
    NSObject * _defaultLabel;
    <MLNearestNeighborsIndex> * _index;
    long long  _indexType;
    long long  _labelType;
    NSArray * _labelsForDataPoints;
    NSOrderedSet * _labelsSet;
    NSString * _nearestDistancesFeatureName;
    NSString * _nearestLabelsFeatureName;
    unsigned long long  _numberOfDimensions;
    MLParameterContainer * _parameterContainer;
    MLUpdateProgressHandlers * _progressHandlers;
    NSObject<OS_dispatch_queue> * _progressHandlersDispatchQueue;
    NSDictionary * _updateParameters;
    long long  _weightingScheme;
}

@property (nonatomic, readonly) MLModelConfiguration *configuration;
@property (nonatomic) bool continueWithUpdate;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, retain) NSObject *defaultLabel;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) <MLNearestNeighborsIndex> *index;
@property (nonatomic) long long indexType;
@property (nonatomic) long long labelType;
@property (nonatomic, retain) NSArray *labelsForDataPoints;
@property (nonatomic, retain) NSOrderedSet *labelsSet;
@property (readonly) MLModelMetadata *metadata;
@property (nonatomic, readonly) MLModelDescription *modelDescription;
@property (nonatomic, retain) NSString *nearestDistancesFeatureName;
@property (nonatomic, retain) NSString *nearestLabelsFeatureName;
@property (nonatomic) unsigned long long numberOfDimensions;
@property (nonatomic, retain) MLParameterContainer *parameterContainer;
@property (nonatomic, readonly) unsigned long long predictionTypeForKTrace;
@property (nonatomic, retain) MLUpdateProgressHandlers *progressHandlers;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *progressHandlersDispatchQueue;
@property (nonatomic, readonly) bool recordsPredictionEvent;
@property (nonatomic, readonly) unsigned long long signpostID;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsConcurrentSubmissions;
@property (nonatomic, retain) NSDictionary *updateParameters;
@property (nonatomic) long long weightingScheme;

+ (id)compileSpecification:(void*)arg1 toArchive:(void*)arg2 options:(id)arg3 error:(id*)arg4;
+ (id)compiledVersionForSpecification:(void*)arg1 options:(id)arg2 error:(id*)arg3;
+ (id)loadModelFromCompiledArchive:(void*)arg1 modelVersionInfo:(id)arg2 compilerVersionInfo:(id)arg3 configuration:(id)arg4 error:(id*)arg5;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (void)cancelUpdate;
- (void)computeClassProbabilities:(id*)arg1 from:(void*)arg2;
- (struct vector<std::pair<unsigned long, float>, std::allocator<std::pair<unsigned long, float>>> { void *x1; void *x2; struct __compressed_pair<std::pair<unsigned long, float> *, std::allocator<std::pair<unsigned long, float>>> { void *x_3_1_1; } x3; })computeKClosestLabels:(id)arg1;
- (bool)continueWithUpdate;
- (id)defaultLabel;
- (void)encodeWithCoder:(id)arg1;
- (void)extractNearestNeighborLabels:(id*)arg1 distances:(id*)arg2 indices:(id*)arg3 from:(struct vector<std::pair<unsigned long, float>, std::allocator<std::pair<unsigned long, float>>> { void *x1; void *x2; struct __compressed_pair<std::pair<unsigned long, float> *, std::allocator<std::pair<unsigned long, float>>> { void *x_3_1_1; } x3; })arg4;
- (id)index;
- (long long)indexType;
- (id)initWithCoder:(id)arg1;
- (id)initWithDescription:(id)arg1 configuration:(id)arg2 parameters:(id)arg3 dataPoints:(void*)arg4 labels:(id)arg5 error:(id*)arg6;
- (id)inputMultiArray:(id)arg1 error:(id*)arg2;
- (long long)labelType;
- (id)labelsForDataPoints;
- (id)labelsSet;
- (id)nearestDistancesFeatureName;
- (id)nearestLabelsFeatureName;
- (unsigned long long)numberOfDimensions;
- (id)packageOutputWithPredictedLabel:(id)arg1 classProbabilities:(id)arg2 nearestLabels:(id)arg3 nearestDistances:(id)arg4 nearestFeatureIndices:(id)arg5;
- (id)parameterContainer;
- (id)parameterValueForKey:(id)arg1 error:(id*)arg2;
- (id)predictionFromFeatures:(id)arg1 options:(id)arg2 error:(id*)arg3;
- (id)progressHandlers;
- (id)progressHandlersDispatchQueue;
- (void)resumeUpdate;
- (void)resumeUpdateWithParameters:(id)arg1;
- (void)setContinueWithUpdate:(bool)arg1;
- (void)setDefaultLabel:(id)arg1;
- (void)setIndex:(id)arg1;
- (void)setIndexType:(long long)arg1;
- (void)setLabelType:(long long)arg1;
- (void)setLabelsForDataPoints:(id)arg1;
- (void)setLabelsSet:(id)arg1;
- (void)setNearestDistancesFeatureName:(id)arg1;
- (void)setNearestLabelsFeatureName:(id)arg1;
- (void)setNumberOfDimensions:(unsigned long long)arg1;
- (void)setParameterContainer:(id)arg1;
- (void)setProgressHandlers:(id)arg1;
- (void)setProgressHandlersDispatchQueue:(id)arg1;
- (void)setUpdateParameters:(id)arg1;
- (void)setUpdateProgressHandlers:(id)arg1 dispatchQueue:(id)arg2;
- (void)setWeightingScheme:(long long)arg1;
- (void)updateModelWithData:(id)arg1;
- (id)updateParameters;
- (long long)weightingScheme;
- (bool)writeToURL:(id)arg1 error:(id*)arg2;

@end
