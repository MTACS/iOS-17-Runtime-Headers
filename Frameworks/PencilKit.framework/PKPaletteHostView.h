
@interface PKPaletteHostView : UIView <PKPalettePencilInteractionFeedbackHostViewDelegate, PKPaletteTransitionDelegate, PKPaletteViewHosting, PKPaletteViewInternalDelegate, UIGestureRecognizerDelegate, UIPopoverPresentationControllerDelegate, UIScrollViewDelegate> {
    <PKPaletteHostViewDelegate> * _delegate;
    struct CGPoint { 
        double x; 
        double y; 
    }  _draggingInitialPaletteCenterInSelf;
    long long  _draggingPendingPaletteVisualState;
    bool  _effectivePaletteVisible;
    long long  _lastNonCompactPalettePosition;
    NSLayoutConstraint * _paletteBottomConstraint;
    NSLayoutConstraint * _paletteCenterXConstraint;
    NSLayoutConstraint * _paletteCenterYConstraint;
    long long  _paletteDraggingBehavior;
    NSLayoutConstraint * _paletteHeightConstraint;
    NSLayoutConstraint * _paletteLeftConstraint;
    long long  _palettePosition;
    NSLayoutConstraint * _paletteRightConstraint;
    bool  _paletteScrollGestureShouldScroll;
    NSLayoutConstraint * _paletteTopConstraint;
    PKPaletteTransition * _paletteTransition;
    PKPaletteView * _paletteView;
    bool  _paletteVisible;
    long long  _paletteVisualState;
    NSLayoutConstraint * _paletteWidthConstraint;
    bool  _panGestureDidStartInPaletteScrollView;
    UIPanGestureRecognizer * _panGestureRecognizer;
    bool  _panGestureShouldDragPaletteView;
    PKPalettePencilInteractionFeedbackHostView * _pencilInteractionFeedbackHostView;
    UIPointerInteraction * _pointerInteraction;
    UITapGestureRecognizer * _tapToExpandPaletteFromMinimizedGestureRecognizer;
    PKPaletteTooltipPresentationHandle * _tooltipPresentationHandle;
    UILongPressGestureRecognizer * _touchDownFeedbackGestureRecognizer;
}

@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PKPaletteHostViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) struct CGPoint { double x1; double x2; } draggingInitialPaletteCenterInSelf;
@property (nonatomic) long long draggingPendingPaletteVisualState;
@property (getter=isEffectivePaletteVisible, nonatomic) bool effectivePaletteVisible;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) UIView *hostingView;
@property (nonatomic) long long lastNonCompactPalettePosition;
@property (nonatomic, retain) NSLayoutConstraint *paletteBottomConstraint;
@property (nonatomic, retain) NSLayoutConstraint *paletteCenterXConstraint;
@property (nonatomic, retain) NSLayoutConstraint *paletteCenterYConstraint;
@property (getter=isPaletteDragging, nonatomic, readonly) bool paletteDragging;
@property (nonatomic) long long paletteDraggingBehavior;
@property (nonatomic, retain) NSLayoutConstraint *paletteHeightConstraint;
@property (nonatomic, retain) NSLayoutConstraint *paletteLeftConstraint;
@property (nonatomic) long long palettePosition;
@property (nonatomic, retain) NSLayoutConstraint *paletteRightConstraint;
@property (nonatomic) bool paletteScrollGestureShouldScroll;
@property (nonatomic, retain) NSLayoutConstraint *paletteTopConstraint;
@property (nonatomic, retain) PKPaletteTransition *paletteTransition;
@property (nonatomic, retain) PKPaletteView *paletteView;
@property (getter=isPaletteVisible, nonatomic) bool paletteVisible;
@property (setter=_setPaletteVisualState:, nonatomic) long long paletteVisualState;
@property (getter=isPaletteVisualStateMinimized, nonatomic, readonly) bool paletteVisualStateMinimized;
@property (nonatomic, retain) NSLayoutConstraint *paletteWidthConstraint;
@property (nonatomic) bool panGestureDidStartInPaletteScrollView;
@property (nonatomic, retain) UIPanGestureRecognizer *panGestureRecognizer;
@property (nonatomic) bool panGestureShouldDragPaletteView;
@property (nonatomic, retain) PKPalettePencilInteractionFeedbackHostView *pencilInteractionFeedbackHostView;
@property (nonatomic, retain) UIPointerInteraction *pointerInteraction;
@property (readonly) Class superclass;
@property (nonatomic, retain) UITapGestureRecognizer *tapToExpandPaletteFromMinimizedGestureRecognizer;
@property (nonatomic, readonly) PKPaletteTooltipPresentationHandle *tooltipPresentationHandle;
@property (nonatomic, retain) UILongPressGestureRecognizer *touchDownFeedbackGestureRecognizer;

- (void).cxx_destruct;
- (void)_activatePaletteCenterConstraints;
- (double)_bottomEdgeSpacing;
- (void)_cancelPanGestureIfNecessary;
- (void)_deactivatePaletteCenterConstraints;
- (void)_deactivatePaletteEdgeConstraints;
- (void)_dockPaletteToPosition:(long long)arg1 animated:(bool)arg2;
- (void)_dockPaletteToPosition:(long long)arg1 isFromUserReposition:(bool)arg2 animated:(bool)arg3;
- (void)_fixToBottomEdge;
- (void)_installPencilInteractionFeedbackHostViewIfNeeded;
- (bool)_isPaletteAnimating;
- (void)_paletteDidDockToPosition:(long long)arg1 fromUserReposition:(bool)arg2;
- (double)_paletteEdgeMarginForTopEdge:(bool)arg1 isBottomEdge:(bool)arg2 isMinimized:(bool)arg3;
- (struct CGSize { double x1; double x2; })_paletteSizeForVisualState:(long long)arg1;
- (double)_paletteViewCompactHeight;
- (void)_paletteWillDockToPosition:(long long)arg1 prepareForExpansion:(bool)arg2;
- (void)_panGestureHandler:(id)arg1;
- (void)_performAnimated:(bool)arg1 tracking:(bool)arg2 animations:(id /* block */)arg3 completion:(id /* block */)arg4;
- (void)_processPendingDraggingTransition;
- (struct CGPoint { double x1; double x2; })_projectedLandingPointForGestureRecognizerEnd:(id)arg1;
- (void)_scheduleDraggingTransitionToVisualState:(long long)arg1;
- (void)_setPaletteVisualState:(long long)arg1;
- (void)_setPaletteVisualState:(long long)arg1 usingTransition:(bool)arg2;
- (bool)_shouldBeCompact;
- (void)_tapToExpandPaletteFromMinimizedGestureHandler:(id)arg1;
- (void)_touchDownFeedbackGestureHandler:(id)arg1;
- (void)_updateConstraintsToDockPaletteToPosition:(long long)arg1;
- (void)_updateConstraintsToFixToBottomEdge;
- (void)_updatePaletteAppearance;
- (void)_updatePaletteContentAlpha;
- (void)_updatePaletteHeightConstraint;
- (void)_updatePaletteSizeAnimated:(bool)arg1;
- (void)_updatePaletteViewSizeConstraints;
- (void)_updateToolPreviewMinimizedStateAnimated:(bool)arg1;
- (void)_updateToolPreviewRotationAnimated:(bool)arg1;
- (id)delegate;
- (void)didMoveToWindow;
- (struct CGPoint { double x1; double x2; })draggingInitialPaletteCenterInSelf;
- (long long)draggingPendingPaletteVisualState;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (id)hostingView;
- (id)initWithPaletteView:(id)arg1;
- (bool)isEffectivePaletteVisible;
- (bool)isPaletteDragging;
- (bool)isPaletteVisible;
- (bool)isPaletteVisualStateMinimized;
- (long long)lastNonCompactPalettePosition;
- (void)layoutSubviews;
- (id)paletteBorderColor;
- (double)paletteBorderWidth;
- (id)paletteBottomConstraint;
- (id)paletteCenterXConstraint;
- (id)paletteCenterYConstraint;
- (long long)paletteDraggingBehavior;
- (double)paletteEdgeSpacing;
- (double)paletteEdgeSpacingForMinimized;
- (id)paletteHeightConstraint;
- (id)paletteLeftConstraint;
- (long long)palettePosition;
- (id)paletteRightConstraint;
- (bool)paletteScrollGestureShouldScroll;
- (id)paletteShadowColor;
- (struct CGSize { double x1; double x2; })paletteShadowOffset;
- (double)paletteShadowOpacity;
- (double)paletteShadowRadius;
- (double)paletteSpringAnimationDampingRatio;
- (double)paletteSpringAnimationResponse;
- (id)paletteTopConstraint;
- (id)paletteTransition;
- (id)paletteView;
- (void)paletteViewContentSizeDidChange:(id)arg1;
- (void)paletteViewReturnKeyTypeDidChange:(id)arg1;
- (void)paletteViewShowFeedbackForToolChange:(id)arg1;
- (void)paletteViewStateDidChange:(id)arg1;
- (void)paletteViewStateDidChange:(id)arg1 updatePaletteAppearance:(bool)arg2;
- (void)paletteViewStateDidChangeAutoHide:(id)arg1;
- (void)paletteViewStateDidChangeEnableKeyboardButtons:(id)arg1;
- (void)paletteViewStateDidChangeInputAssistantItems:(id)arg1;
- (void)paletteViewStateDidChangeIsVisible:(id)arg1;
- (void)paletteViewStateDidChangeScaleFactor:(id)arg1;
- (void)paletteViewStateDidChangeSelectedTool:(id)arg1;
- (void)paletteViewStateDidChangeShowsHandwritingTool:(id)arg1;
- (long long)paletteVisualState;
- (id)paletteWidthConstraint;
- (bool)panGestureDidStartInPaletteScrollView;
- (id)panGestureRecognizer;
- (bool)panGestureShouldDragPaletteView;
- (id)pencilInteractionFeedbackHostView;
- (bool)pointInside:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (id)pointerInteraction;
- (id)pointerInteraction:(id)arg1 styleForRegion:(id)arg2;
- (void)pointerInteraction:(id)arg1 willEnterRegion:(id)arg2 animator:(id)arg3;
- (void)pointerInteraction:(id)arg1 willExitRegion:(id)arg2 animator:(id)arg3;
- (void)safeAreaInsetsDidChange;
- (void)setDelegate:(id)arg1;
- (void)setDraggingInitialPaletteCenterInSelf:(struct CGPoint { double x1; double x2; })arg1;
- (void)setDraggingPendingPaletteVisualState:(long long)arg1;
- (void)setEffectivePaletteVisible:(bool)arg1;
- (void)setLastNonCompactPalettePosition:(long long)arg1;
- (void)setPaletteBottomConstraint:(id)arg1;
- (void)setPaletteCenterXConstraint:(id)arg1;
- (void)setPaletteCenterYConstraint:(id)arg1;
- (void)setPaletteDraggingBehavior:(long long)arg1;
- (void)setPaletteHeightConstraint:(id)arg1;
- (void)setPaletteLeftConstraint:(id)arg1;
- (void)setPalettePosition:(long long)arg1;
- (void)setPaletteRightConstraint:(id)arg1;
- (void)setPaletteScrollGestureShouldScroll:(bool)arg1;
- (void)setPaletteTopConstraint:(id)arg1;
- (void)setPaletteTransition:(id)arg1;
- (void)setPaletteView:(id)arg1;
- (void)setPaletteVisible:(bool)arg1;
- (void)setPaletteVisible:(bool)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (void)setPaletteWidthConstraint:(id)arg1;
- (void)setPanGestureDidStartInPaletteScrollView:(bool)arg1;
- (void)setPanGestureRecognizer:(id)arg1;
- (void)setPanGestureShouldDragPaletteView:(bool)arg1;
- (void)setPencilInteractionFeedbackHostView:(id)arg1;
- (void)setPointerInteraction:(id)arg1;
- (void)setTapToExpandPaletteFromMinimizedGestureRecognizer:(id)arg1;
- (void)setTouchDownFeedbackGestureRecognizer:(id)arg1;
- (id)tapToExpandPaletteFromMinimizedGestureRecognizer;
- (id)tooltipPresentationHandle;
- (id)touchDownFeedbackGestureRecognizer;
- (void)traitCollectionDidChange:(id)arg1;
- (void)transitionExpandedToCollapsedRatioDidChange:(id)arg1;
- (void)transitionIntermediateVisualStateDidChange:(id)arg1;
- (void)transitionPointingDirectionDidChange:(id)arg1;
- (void)updateKeyboardAvoidanceForPalette:(bool)arg1;

@end
