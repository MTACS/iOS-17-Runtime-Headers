
@interface PKDrawingPaletteView : PKPaletteView <PKDrawingPaletteViewStateSubject, PKPaletteAdditionalOptionsViewDelegate, PKPaletteColorPickerViewDelegate, PKPaletteContentViewDelegate, PKPaletteFloatingKeyboardControllerDelegate, PKPalettePopoverUpdating, PKPaletteToolPickerViewDataSource, PKPaletteToolPickerViewDelegate, PKPaletteToolPreviewDelegate, PKPaletteUndoRedoViewDelegate, PKPaletteViewStateSubject, PKTextInputWindowFirstResponderControllerDelegate, UIPencilInteractionDelegate, UIPopoverPresentationControllerDelegate> {
    <PKPaletteViewAnnotationDelegate> * _annotationDelegate;
    UIView * _bottomLineDividerView;
    bool  _colorSwatchesVisible;
    long long  _colorUserInterfaceStyle;
    NSLayoutConstraint * _compactContentViewHeightConstraint;
    PKPaletteContentView * _contentView;
    NSLayoutConstraint * _contentViewBottomConstraint;
    long long  _contextEditingMode;
    bool  _editingExternalElementsSelection;
    bool  _editingStrokeSelection;
    bool  _editingTextSelection;
    bool  _fingerDrawsOptionEnabled;
    PKTextInputWindowFirstResponderController * _firstResponderController;
    PKPaletteFloatingKeyboardController * _floatingKeyboardController;
    unsigned long long  _indexOfSelectedTool;
    PKPaletteInputAssistantButtonProvider * _inputAssistantButtonProvider;
    double  _interItemToolsSpacingInCompactSize;
    double  _interItemUndoRedoButtonsSpacing;
    double  _interItemUndoRedoButtonsSpacingInCompactSize;
    bool  _isEditingOpacity;
    bool  _isQuickNoteUI;
    NSString * _lassoToolEditingViewIdentifier;
    long long  _numberOfToolsAfterRuler;
    UIView * _opacityEditingView;
    UIPencilInteraction * _pencilInteraction;
    bool  _pencilInteractionEnabledWhenNotVisible;
    UIMenu * _plusButtonMenu;
    UIViewController * _plusButtonViewController;
    bool  _prefersLargeContextualEditingUI;
    UIViewController * _presentedPopoverViewController;
    long long  _selectedAnnotationType;
    UIViewController * _shapeButtonViewController;
    bool  _shouldHideHoverPreviewToggle;
    bool  _showsLassoToolEditingView;
    bool  _showsPlusButton;
    bool  _showsRuler;
    bool  _showsShapeButton;
    bool  _showsTextButton;
    PKPaletteTapToRadarCommand * _tapToRadarCommand;
    UIViewController * _textButtonViewController;
    NSArray * _tools;
    NSUndoManager * _undoManager;
    bool  _useEqualSpacingLayoutInCompactSize;
    bool  _wantsBottomLineDividerVisibleInCompactSize;
    bool  _wantsClearBackgroundColorInCompactSize;
    bool  _wantsEllipsisButtonVisibleInCompactSize;
    bool  _wantsMulticolorSwatchShadowInCompactSize;
    bool  _wantsUndoRedoButtonsShadowInCompactSize;
    bool  _wantsUndoRedoButtonsVisibleInCompactSize;
}

@property (nonatomic, readonly) double _toolsContainerWidth;
@property (nonatomic) <PKPaletteViewAnnotationDelegate> *annotationDelegate;
@property (getter=isAnnotationSupportEnabled, nonatomic, readonly) bool annotationSupportEnabled;
@property (getter=isAutoHideEnabled, nonatomic, readonly) bool autoHideEnabled;
@property (nonatomic, retain) UIView *bottomLineDividerView;
@property (nonatomic) bool colorSwatchesVisible;
@property (nonatomic) long long colorUserInterfaceStyle;
@property (nonatomic, retain) NSLayoutConstraint *compactContentViewHeightConstraint;
@property (nonatomic, retain) PKPaletteContentView *contentView;
@property (nonatomic, retain) NSLayoutConstraint *contentViewBottomConstraint;
@property (nonatomic) long long contextEditingMode;
@property (nonatomic, readonly) UIView *contextualEditingView;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PKDrawingPaletteViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (getter=isEditingExternalElementsSelection, nonatomic) bool editingExternalElementsSelection;
@property (getter=isEditingStrokeSelection, nonatomic) bool editingStrokeSelection;
@property (getter=isEditingTextSelection, nonatomic) bool editingTextSelection;
@property (getter=isEllipsisButtonVisible, nonatomic, readonly) bool ellipsisButtonVisible;
@property (nonatomic, readonly) bool enableKeyboardButtons;
@property (getter=isExtendedColorPickerVisible, nonatomic, readonly) bool extendedColorPickerVisible;
@property (getter=isFingerDrawsOptionEnabled, nonatomic) bool fingerDrawsOptionEnabled;
@property (nonatomic, retain) PKTextInputWindowFirstResponderController *firstResponderController;
@property (nonatomic, retain) PKPaletteFloatingKeyboardController *floatingKeyboardController;
@property (nonatomic, readonly) long long floatingKeyboardType;
@property (nonatomic, readonly) bool hasHandwritingTool;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) unsigned long long indexOfSelectedTool;
@property (nonatomic, retain) PKPaletteInputAssistantButtonProvider *inputAssistantButtonProvider;
@property (nonatomic, readonly) NSArray *inputAssistantItems;
@property (nonatomic) double interItemToolsSpacingInCompactSize;
@property (nonatomic) double interItemUndoRedoButtonsSpacing;
@property (nonatomic) double interItemUndoRedoButtonsSpacingInCompactSize;
@property (nonatomic) bool isEditingOpacity;
@property (nonatomic) bool isQuickNoteUI;
@property (nonatomic, readonly) UIView *lassoToolEditingView;
@property (nonatomic, copy) NSString *lassoToolEditingViewIdentifier;
@property (nonatomic) long long numberOfToolsAfterRuler;
@property (nonatomic, readonly) UIView *opacityEditingView;
@property (nonatomic, retain) UIViewController *palettePopoverPresentingController;
@property (nonatomic, readonly) double paletteScaleFactor;
@property (nonatomic, readonly) UIPencilInteraction *pencilInteraction;
@property (getter=isPencilInteractionEnabledWhenNotVisible, nonatomic) bool pencilInteractionEnabledWhenNotVisible;
@property (nonatomic, retain) UIMenu *plusButtonMenu;
@property (nonatomic, retain) UIViewController *plusButtonViewController;
@property (nonatomic) bool prefersLargeContextualEditingUI;
@property (nonatomic, retain) UIViewController *presentedPopoverViewController;
@property (nonatomic) long long selectedAnnotationType;
@property (nonatomic, readonly) PKTool *selectedTool;
@property (nonatomic, readonly) PKPaletteToolView *selectedToolView;
@property (nonatomic, retain) UIViewController *shapeButtonViewController;
@property (nonatomic) bool shouldHideHoverPreviewToggle;
@property (nonatomic) bool showsLassoToolEditingView;
@property (nonatomic) bool showsPlusButton;
@property (nonatomic) bool showsRuler;
@property (nonatomic) bool showsShapeButton;
@property (nonatomic) bool showsTextButton;
@property (readonly) Class superclass;
@property (nonatomic, retain) PKPaletteTapToRadarCommand *tapToRadarCommand;
@property (nonatomic, retain) UIViewController *textButtonViewController;
@property (nonatomic, copy) NSArray *tools;
@property (nonatomic) bool useEqualSpacingLayoutInCompactSize;
@property (getter=isVisible, nonatomic, readonly) bool visible;
@property (nonatomic) bool wantsBottomLineDividerVisibleInCompactSize;
@property (nonatomic) bool wantsClearBackgroundColorInCompactSize;
@property (nonatomic) bool wantsEllipsisButtonVisibleInCompactSize;
@property (nonatomic) bool wantsMulticolorSwatchShadowInCompactSize;
@property (nonatomic, readonly) bool wantsScrollableTools;
@property (nonatomic) bool wantsUndoRedoButtonsShadowInCompactSize;
@property (nonatomic) bool wantsUndoRedoButtonsVisibleInCompactSize;
@property (nonatomic, readonly) PKTextInputWindowFirstResponder *windowFirstResponder;
@property (nonatomic, readonly) UIWindowScene *windowScene;

- (void).cxx_destruct;
- (bool)_canHandlePencilInteraction;
- (bool)_canReplaceToolAtIndex:(unsigned long long)arg1 withTool:(id)arg2;
- (bool)_canSelectToolAtIndex:(unsigned long long)arg1;
- (bool)_canShowFingerDrawsOption;
- (void)_centerPaletteContainerSubviewToCurrentlySelectedToolForEdge:(unsigned long long)arg1 needsContainerViewLayout:(bool)arg2;
- (void)_changeWasDone:(id)arg1;
- (void)_changeWasRedone:(id)arg1;
- (void)_changeWasUndone:(id)arg1;
- (id)_clippingViewBackgroundColor:(bool)arg1;
- (id)_currentFirstResponder;
- (void)_dictationAvailabilityDidChange:(id)arg1;
- (void)_didTapPlusButton:(id)arg1;
- (void)_didTapShapeButton:(id)arg1;
- (void)_didTapTextButton:(id)arg1;
- (bool)_hasToolWithIdentifier:(id)arg1;
- (void)_installPaletteContentViewInView:(id)arg1;
- (bool)_isPaletteContentViewHidden;
- (double)_paletteHeightForVerticalOrientation;
- (id)_paletteToolViewForTool:(id)arg1;
- (double)_paletteWidthForHorizontalOrientation;
- (void)_performPencilPreferredActionShowColorPalette;
- (void)_performPencilPreferredActionShowInkAttributes;
- (void)_performPencilPreferredActionSwitchEraser;
- (void)_performPencilPreferredActionSwitchPrevious;
- (void)_presentOrDismissFloatingKeyboard;
- (void)_presentViewController:(id)arg1 asPopoverFromView:(id)arg2;
- (void)_releaseUndoManager;
- (void)_replaceToolAtIndex:(unsigned long long)arg1 withTool:(id)arg2;
- (void)_selectToolAtIndex:(unsigned long long)arg1 updateUI:(bool)arg2 notifyDelegate:(bool)arg3;
- (id)_selectedToolViewInToolPicker;
- (void)_setSelectedToolColor:(id)arg1 ignoreColorOpacity:(bool)arg2;
- (void)_setTools:(id)arg1 resetSelectedTool:(bool)arg2 updateUI:(bool)arg3 notifyDelegate:(bool)arg4;
- (bool)_shouldShowFingerDrawsOption;
- (void)_toolViewStateDidChange:(id)arg1;
- (double)_toolsContainerWidth;
- (void)_updateHandwritingAssistantItemsFromResponder:(id)arg1;
- (void)_updateKeyboardSceneDelegateInputAssistantSupressionState;
- (void)_updateToolPreviewContentsAnimated:(bool)arg1;
- (void)_updateToolPreviewPositionForEdge:(unsigned long long)arg1;
- (void)_updateToolsContainerScrollingEnabled;
- (void)_updateUI;
- (void)_updateUIReloadTools:(bool)arg1;
- (bool)_wantsClearBackgroundColor;
- (void)_willDockPaletteToCorner:(unsigned long long)arg1;
- (void)_willDockPaletteToEdge:(unsigned long long)arg1 prepareForExpansion:(bool)arg2 isPaletteChangingOrientation:(bool)arg3;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1 traitCollection:(id)arg2;
- (void)additionalOptionsView:(id)arg1 didToggleAutoHideOption:(bool)arg2;
- (void)additionalOptionsViewDidPressKeyboardButton:(id)arg1;
- (void)additionalOptionsViewDidPressReturnKeyButton:(id)arg1;
- (void)additionalOptionsViewDidPressTapToRadarButton:(id)arg1;
- (id)annotationDelegate;
- (id)borderColorForTraitCollection:(id)arg1;
- (double)borderWidthForTraitCollection:(id)arg1;
- (id)bottomLineDividerView;
- (void)colorPickerDidChangeSelectedColor:(id)arg1 isFromExtendedColorPicker:(bool)arg2;
- (bool)colorPickerShouldDisplayColorSelection:(id)arg1;
- (bool)colorSwatchesVisible;
- (long long)colorUserInterfaceStyle;
- (id)compactContentViewHeightConstraint;
- (double)compactPaletteHeight;
- (void)configureForDockedAtCorner;
- (void)configureForDockedAtEdge:(unsigned long long)arg1;
- (id)contentScrollView;
- (id)contentView;
- (id)contentViewBottomConstraint;
- (void)contentViewDidDismissInputAssistantView:(id)arg1;
- (void)contentViewDidResize:(id)arg1;
- (void)contentViewDidSelectInputAssistantKeyboardItem:(id)arg1;
- (void)contentViewDidSelectInputAssistantReturnKeyItem:(id)arg1;
- (long long)contextEditingMode;
- (id)contextualEditingView;
- (double)dampingRatioForThrowingFromPosition:(long long)arg1 toPosition:(long long)arg2 withVelocity:(struct CGPoint { double x1; double x2; })arg3;
- (void)dealloc;
- (void)didChangePaletteScaleFactor;
- (void)didEndAppearanceAnimation;
- (void)didMoveToWindow;
- (void)dismissPalettePopoverWithCompletion:(id /* block */)arg1;
- (bool)enableKeyboardButtons;
- (void)endOpacityEditing;
- (id)firstResponderController;
- (id)floatingKeyboardController;
- (void)floatingKeyboardController:(id)arg1 didChangeKeyboardType:(long long)arg2;
- (void)floatingKeyboardControllerWillHide:(id)arg1;
- (void)floatingKeyboardControllerWillShow:(id)arg1;
- (long long)floatingKeyboardType;
- (bool)hasHandwritingTool;
- (void)hostView:(id)arg1 didDockPaletteToPosition:(long long)arg2;
- (void)hostView:(id)arg1 willDockPaletteToPosition:(long long)arg2 prepareForExpansion:(bool)arg3;
- (unsigned long long)indexOfSelectedTool;
- (id)init;
- (id)initWithTools:(id)arg1;
- (id)initWithTools:(id)arg1 wantsEllipsisButtonVisibleInCompactSize:(bool)arg2;
- (id)inputAssistantButtonProvider;
- (id)inputAssistantItems;
- (double)interItemToolsSpacingInCompactSize;
- (double)interItemUndoRedoButtonsSpacing;
- (double)interItemUndoRedoButtonsSpacingInCompactSize;
- (bool)isAnnotationSupportEnabled;
- (bool)isEditingExternalElementsSelection;
- (bool)isEditingOpacity;
- (bool)isEditingStrokeSelection;
- (bool)isEditingTextSelection;
- (bool)isEllipsisButtonVisible;
- (bool)isExtendedColorPickerVisible;
- (bool)isFingerDrawsOptionEnabled;
- (bool)isHandwritingToolSelected;
- (bool)isPalettePresentingPopover;
- (bool)isPencilInteractionEnabledWhenNotVisible;
- (bool)isQuickNoteUI;
- (id)keyboardSelectionMenuForAdditionalOptionsView:(id)arg1;
- (id)keyboardSelectionMenuForContentView:(id)arg1;
- (id)lassoToolEditingView;
- (id)lassoToolEditingViewIdentifier;
- (void)layoutSubviews;
- (long long)numberOfToolsAfterRuler;
- (long long)numberOfToolsInToolPickerView:(id)arg1;
- (id)opacityEditingView;
- (struct CGSize { double x1; double x2; })paletteSizeForEdge:(unsigned long long)arg1;
- (unsigned long long)paletteViewType;
- (id)pencilInteraction;
- (void)pencilInteractionDidTap:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })plusButtonFrame;
- (id)plusButtonMenu;
- (id)plusButtonViewController;
- (bool)prefersLargeContextualEditingUI;
- (id)presentedPopoverViewController;
- (id)responderForFloatingKeyboardController:(id)arg1;
- (double)responseForThrowingFromPosition:(long long)arg1 toPosition:(long long)arg2 withVelocity:(struct CGPoint { double x1; double x2; })arg3;
- (void)selectToolAtIndex:(unsigned long long)arg1;
- (long long)selectedAnnotationType;
- (id)selectedTool;
- (id)selectedToolView;
- (void)setAnnotationDelegate:(id)arg1;
- (void)setBottomLineDividerView:(id)arg1;
- (void)setColorSwatchesVisible:(bool)arg1;
- (void)setColorUserInterfaceStyle:(long long)arg1;
- (void)setCompactContentViewHeightConstraint:(id)arg1;
- (void)setContentView:(id)arg1;
- (void)setContentViewBottomConstraint:(id)arg1;
- (void)setContextEditingMode:(long long)arg1;
- (void)setEditingExternalElementsSelection:(bool)arg1;
- (void)setEditingStrokeSelection:(bool)arg1;
- (void)setEditingTextSelection:(bool)arg1;
- (void)setFingerDrawsOptionEnabled:(bool)arg1;
- (void)setFirstResponderController:(id)arg1;
- (void)setFloatingKeyboardController:(id)arg1;
- (void)setInputAssistantButtonProvider:(id)arg1;
- (void)setInterItemToolsSpacingInCompactSize:(double)arg1;
- (void)setInterItemUndoRedoButtonsSpacing:(double)arg1;
- (void)setInterItemUndoRedoButtonsSpacingInCompactSize:(double)arg1;
- (void)setIsEditingOpacity:(bool)arg1;
- (void)setIsQuickNoteUI:(bool)arg1;
- (void)setLassoToolEditingViewIdentifier:(id)arg1;
- (void)setNumberOfToolsAfterRuler:(long long)arg1;
- (void)setPencilInteractionEnabledWhenNotVisible:(bool)arg1;
- (void)setPlusButtonMenu:(id)arg1;
- (void)setPlusButtonViewController:(id)arg1;
- (void)setPrefersLargeContextualEditingUI:(bool)arg1;
- (void)setPresentedPopoverViewController:(id)arg1;
- (void)setSelectedAnnotationType:(long long)arg1;
- (void)setShadowVisible:(bool)arg1;
- (void)setShapeButtonViewController:(id)arg1;
- (void)setShouldHideHoverPreviewToggle:(bool)arg1;
- (void)setShowsLassoToolEditingView:(bool)arg1;
- (void)setShowsPlusButton:(bool)arg1;
- (void)setShowsRuler:(bool)arg1;
- (void)setShowsShapeButton:(bool)arg1;
- (void)setShowsTextButton:(bool)arg1;
- (void)setTapToRadarCommand:(id)arg1;
- (void)setTextButtonViewController:(id)arg1;
- (void)setTools:(id)arg1;
- (void)setUndoManager:(id)arg1;
- (void)setUseEqualSpacingLayoutInCompactSize:(bool)arg1;
- (void)setWantsBottomLineDividerVisibleInCompactSize:(bool)arg1;
- (void)setWantsClearBackgroundColorInCompactSize:(bool)arg1;
- (void)setWantsEllipsisButtonVisibleInCompactSize:(bool)arg1;
- (void)setWantsMulticolorSwatchShadowInCompactSize:(bool)arg1;
- (void)setWantsUndoRedoButtonsShadowInCompactSize:(bool)arg1;
- (void)setWantsUndoRedoButtonsVisibleInCompactSize:(bool)arg1;
- (double)shadowOpacity;
- (double)shadowRadius;
- (id)shapeButtonViewController;
- (bool)shouldAdjustShadowRadiusForMinimized;
- (bool)shouldHideHoverPreviewToggle;
- (bool)showsLassoToolEditingView;
- (bool)showsPlusButton;
- (bool)showsRuler;
- (bool)showsShapeButton;
- (bool)showsTextButton;
- (void)startOpacityEditing;
- (id)tapToRadarCommand;
- (id)textButtonViewController;
- (void)toolPicker:(id)arg1 didSelectTool:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)toolPickerDidToggleRulerTool:(id)arg1;
- (id)toolPickerView:(id)arg1 viewForToolAtIndex:(long long)arg2;
- (double)toolPickerView:(id)arg1 widthForToolAtIndex:(long long)arg2 isCompactSize:(bool)arg3;
- (void)toolPickerViewDidChangeTraitCollectionSizeClass:(id)arg1;
- (void)toolPreviewDidChangeToolColor:(id)arg1;
- (id)tools;
- (void)traitCollectionDidChange:(id)arg1;
- (id)undoManager;
- (void)undoRedoViewDidTapRedo:(id)arg1;
- (void)undoRedoViewDidTapUndo:(id)arg1;
- (void)updateColorPickerSelectedColor;
- (void)updateHandwritingAssistantItems;
- (void)updatePopoverUI;
- (void)updateUndoRedo;
- (bool)useEqualSpacingLayoutInCompactSize;
- (bool)wantsBottomLineDividerVisibleInCompactSize;
- (bool)wantsClearBackgroundColorInCompactSize;
- (bool)wantsEllipsisButtonVisibleInCompactSize;
- (bool)wantsMulticolorSwatchShadowInCompactSize;
- (bool)wantsScrollableTools;
- (bool)wantsUndoRedoButtonsShadowInCompactSize;
- (bool)wantsUndoRedoButtonsVisibleInCompactSize;
- (void)willStartAppearanceAnimation:(bool)arg1;
- (id)windowFirstResponder;
- (void)windowFirstResponderController:(id)arg1 didChangeFirstResponder:(id)arg2;
- (id)windowScene;

@end
