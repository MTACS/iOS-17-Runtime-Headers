
@interface PKPaletteController : NSObject <PKPaletteFloatingKeyboardControllerDelegate, PKPaletteHostingWindowScene, PKPaletteMoreOptionsViewControllerDelegate, UIPopoverPresentationControllerDelegate> {
    PKPaletteHostView * __hostView;
    PKUCBPaletteView * __paletteView;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _adjustedWindowSceneBounds;
    <PKPaletteControllerDelegate> * _delegate;
    PKTextInputWindowFirstResponder * _firstResponder;
    PKPaletteFloatingKeyboardController * _floatingKeyboardController;
    PKPaletteInputAssistantButtonProvider * _inputAssistantButtonProvider;
    PKPaletteKeyboardButton * _keyboardButton;
    NSLayoutConstraint * _paletteHostViewHeightConstraint;
    NSLayoutConstraint * _paletteHostViewWidthConstraint;
    PKPaletteButton * _redoButton;
    PKPaletteButton * _returnKeyButton;
    PKPaletteTapToRadarCommand * _tapToRadarCommand;
    NSArray * _trailingButtonsWithReturnKey;
    NSArray * _trailingButtonsWithoutReturnKey;
    PKPaletteButton * _undoButton;
}

@property (nonatomic, retain) PKPaletteHostView *_hostView;
@property (nonatomic, retain) PKUCBPaletteView *_paletteView;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } adjustedWindowSceneBounds;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PKPaletteControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) PKTextInputWindowFirstResponder *firstResponder;
@property (nonatomic, retain) PKPaletteFloatingKeyboardController *floatingKeyboardController;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) PKPaletteInputAssistantButtonProvider *inputAssistantButtonProvider;
@property (nonatomic, retain) PKPaletteKeyboardButton *keyboardButton;
@property (nonatomic, retain) NSLayoutConstraint *paletteHostViewHeightConstraint;
@property (nonatomic, retain) NSLayoutConstraint *paletteHostViewWidthConstraint;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } paletteHostingWindowSceneBounds;
@property (nonatomic, readonly) long long palettePosition;
@property (getter=isPaletteVisible, nonatomic, readonly) bool paletteVisible;
@property (nonatomic, retain) PKPaletteButton *redoButton;
@property (nonatomic, retain) PKPaletteButton *returnKeyButton;
@property (readonly) Class superclass;
@property (nonatomic, retain) PKPaletteTapToRadarCommand *tapToRadarCommand;
@property (nonatomic, readonly, copy) NSArray *trailingButtonsWithReturnKey;
@property (nonatomic, readonly, copy) NSArray *trailingButtonsWithoutReturnKey;
@property (nonatomic, retain) PKPaletteButton *undoButton;

- (void).cxx_destruct;
- (id)_adjustedHorizontalSizeClassTraitCollection;
- (long long)_adjustedUserInterfaceSizeClass;
- (void)_handleKeyboard;
- (void)_handleMoreButton:(id)arg1;
- (void)_handleRedo;
- (void)_handleReturn;
- (void)_handleTextInputResponderCapabilitiesChanged:(id)arg1;
- (void)_handleTextInputReturnKeyStateChanged:(id)arg1;
- (void)_handleUndo;
- (id)_hostView;
- (void)_openPencilSettings;
- (id)_paletteView;
- (void)_presentMoreOptionsPopoverFromButton:(id)arg1;
- (void)_recognitionLocaleIdentifierDidChange:(id)arg1;
- (bool)_shouldOverridePaletteViewTraitCollectionTo:(id)arg1;
- (bool)_shouldPaletteUseCompactHorizontalSizeClass;
- (void)_updatePaletteUI;
- (void)_updatePaletteViewTraitCollection;
- (void)_updatePaletteWithApplicationSpecificItems;
- (void)_updatePaletteWithDefaultItems;
- (void)_updateReturnKey;
- (void)_updateTrailingBarButtons;
- (void)_updateUndoRedoEnabledState;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1 traitCollection:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })adjustedWindowSceneBounds;
- (void)dealloc;
- (id)delegate;
- (id)firstResponder;
- (id)floatingKeyboardController;
- (void)floatingKeyboardController:(id)arg1 didChangeKeyboardType:(long long)arg2;
- (void)floatingKeyboardControllerWillHide:(id)arg1;
- (void)floatingKeyboardControllerWillShow:(id)arg1;
- (id)init;
- (id)inputAssistantButtonProvider;
- (void)installInView:(id)arg1;
- (bool)isPaletteVisible;
- (id)keyboardButton;
- (void)moreOptionsViewControllerDidSelectOpenPencilSettings:(id)arg1;
- (void)moreOptionsViewControllerDidSelectTapToRadar:(id)arg1;
- (void)moreOptionsViewControllerDidToggleAutoHide:(id)arg1;
- (void)moreOptionsViewControllerDidToggleFingerDraws:(id)arg1;
- (id)paletteHostViewHeightConstraint;
- (id)paletteHostViewWidthConstraint;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })paletteHostingWindowSceneBounds;
- (long long)palettePosition;
- (id)redoButton;
- (id)responderForFloatingKeyboardController:(id)arg1;
- (id)returnKeyButton;
- (void)setAdjustedWindowSceneBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setDelegate:(id)arg1;
- (void)setFirstResponder:(id)arg1;
- (void)setFloatingKeyboardController:(id)arg1;
- (void)setInputAssistantButtonProvider:(id)arg1;
- (void)setKeyboardButton:(id)arg1;
- (void)setPaletteHostViewHeightConstraint:(id)arg1;
- (void)setPaletteHostViewWidthConstraint:(id)arg1;
- (void)setPaletteVisible:(bool)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (void)setRedoButton:(id)arg1;
- (void)setReturnKeyButton:(id)arg1;
- (void)setTapToRadarCommand:(id)arg1;
- (void)setUndoButton:(id)arg1;
- (void)set_hostView:(id)arg1;
- (void)set_paletteView:(id)arg1;
- (id)tapToRadarCommand;
- (void)tearDown;
- (id)trailingButtonsWithReturnKey;
- (id)trailingButtonsWithoutReturnKey;
- (id)undoButton;

@end
