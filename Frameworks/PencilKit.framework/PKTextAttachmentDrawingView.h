
@interface PKTextAttachmentDrawingView : _UITextAttachmentDrawingView <PKLinedPaperLayerDelegate, PKTextAttachmentDrawingViewProviderView, PKTextAttachmentResizeViewDelegate, PKTextAttachmentView, UIGestureRecognizerDelegate, UIPointerInteractionDelegate, UIScrollViewDelegate> {
    PKTextAttachmentResizeView * _bottomResizeView;
    struct CGAffineTransform { 
        double a; 
        double b; 
        double c; 
        double d; 
        double tx; 
        double ty; 
    }  _cachedDrawingTransform;
    double  _cachedDrawingTransformBoundsWidth;
    double  _drawingAspectRatio;
    UITapGestureRecognizer * _eatKeyboardGestureRecognizer;
    UILongPressGestureRecognizer * _hideMenuGestureRecognizer;
    bool  _inserted;
    bool  _isLiveResizing;
    PKLinedPaperLayer * _linesLayer;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _liveResizeAttachmentBounds;
    UIPanGestureRecognizer * _resizeDragGestureRecognizer;
    PKTextAttachmentDrawingViewTouchRecognizer * _resizeHighlightGestureRecognizer;
    bool  _resizeUpper;
    UITapGestureRecognizer * _showMenuGestureRecognizer;
    UITapGestureRecognizer * _tapBelowDrawingGestureRecognizer;
    NSTextAttachment * _textAttachment;
    struct CGPoint { 
        double x; 
        double y; 
    }  _textViewContentOffsetStartLocation;
    UIScrollView * _tileMaskView;
    UIView * _tileScaleView;
    PKTextAttachmentResizeView * _topResizeView;
    double  _zoomScale;
    struct CGPoint { 
        double x; 
        double y; 
    }  _zoomStartLocationInAttachment;
    struct CGPoint { 
        double x; 
        double y; 
    }  _zoomStartLocationInWindow;
    double  _zoomStartScale;
    bool  _zoomingProgramatically;
}

@property (nonatomic, readonly) long long _characterIndex;
@property (nonatomic, retain) PKTextAttachmentResizeView *bottomResizeView;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) double drawingAspectRatio;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } drawingCanvasBounds;
@property (nonatomic, readonly) struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; } drawingTransform;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } drawingVisibleSize;
@property (nonatomic, retain) UITapGestureRecognizer *eatKeyboardGestureRecognizer;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) UILongPressGestureRecognizer *hideMenuGestureRecognizer;
@property (nonatomic) bool inserted;
@property (nonatomic, readonly) bool isAtBeginningOfDocument;
@property (nonatomic) bool isLiveResizing;
@property (nonatomic, retain) PKLinedPaperLayer *linesLayer;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } liveResizeAttachmentBounds;
@property (nonatomic, retain) UIPanGestureRecognizer *resizeDragGestureRecognizer;
@property (nonatomic, retain) PKTextAttachmentDrawingViewTouchRecognizer *resizeHighlightGestureRecognizer;
@property (nonatomic) bool resizeUpper;
@property (nonatomic, retain) UITapGestureRecognizer *showMenuGestureRecognizer;
@property (readonly) Class superclass;
@property (nonatomic, retain) UITapGestureRecognizer *tapBelowDrawingGestureRecognizer;
@property (nonatomic) NSTextAttachment *textAttachment;
@property (nonatomic) struct CGPoint { double x1; double x2; } textViewContentOffsetStartLocation;
@property (nonatomic, readonly) UIView *tileScaleView;
@property (nonatomic, retain) PKTextAttachmentResizeView *topResizeView;
@property (nonatomic) double zoomScale;
@property (nonatomic) struct CGPoint { double x1; double x2; } zoomStartLocationInAttachment;
@property (nonatomic) struct CGPoint { double x1; double x2; } zoomStartLocationInWindow;
@property (nonatomic) double zoomStartScale;
@property (nonatomic) bool zoomingProgramatically;

- (void).cxx_destruct;
- (void)_adjustResizeIndicatorVisibility;
- (void)_adjustResizeIndicatorVisibility:(bool)arg1 highlightBackground:(bool)arg2;
- (void)_adjustResizeIndicatorVisibilityNotification;
- (long long)_characterIndex;
- (id)_drawingGestureRecognizer;
- (void)_noOpForGesture:(id)arg1;
- (void)_sceneDidActivate:(id)arg1;
- (void)_setAdjustResizeIndicatorVisible:(bool)arg1 animated:(bool)arg2 highlightBackground:(bool)arg3;
- (void)_setHeight:(double)arg1 originalHeight:(double)arg2 growFromTop:(bool)arg3;
- (void)_share:(id)arg1;
- (id)_textView;
- (void)_triggerRedraw;
- (void)_updateAfterBackgroundSnapshotting:(id)arg1;
- (void)_updateAttachmentBoundsEnsureLayout:(bool)arg1;
- (void)_updateResizeTouchInsetsFingerDrawingEnabled:(bool)arg1;
- (void)_updateViewHeightIfNecessary;
- (bool)becomeFirstResponder;
- (void)beginLiveResize;
- (id)bottomResizeView;
- (bool)canBecomeFirstResponder;
- (bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (bool)canResignFirstResponder;
- (double)canvasHeightFromDrawingViewHeight:(double)arg1;
- (double)canvasHeightFromDrawingViewHeight:(double)arg1 drawingViewWidth:(double)arg2;
- (void)cleanupViewProviders;
- (void)copy:(id)arg1;
- (void)copyStrokeSelection:(id)arg1;
- (void)cut:(id)arg1;
- (void)cutStrokeSelection:(id)arg1;
- (id)dataForTextAttachment:(id)arg1;
- (void)dealloc;
- (void)delete:(id)arg1;
- (void)deleteStrokeSelection:(id)arg1;
- (double)desiredAttachmentViewWidthForContainerView:(id)arg1;
- (struct CGSize { double x1; double x2; })desiredTextAttachmentSizeForContainerView:(id)arg1;
- (void)didBeginDrawing;
- (void)didMoveToSuperview;
- (void)didMoveToWindow;
- (double)drawingAspectRatio;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })drawingBounds;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })drawingBoundsForViewWidth:(double)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })drawingCanvasBounds;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })drawingContentBounds;
- (void)drawingDataDidChange:(id)arg1;
- (void)drawingDidChangeVisibleStrokes:(bool)arg1;
- (void)drawingDidEraseStrokes:(id)arg1;
- (id)drawingForTextAttachment:(id)arg1 drawingClass:(Class)arg2;
- (double)drawingScaleForViewWidth:(double)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })drawingTextAttachmentBounds;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })drawingTextAttachmentBoundsForContainerView:(id)arg1;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })drawingTransform;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })drawingTransformForViewWidth:(double)arg1;
- (struct CGSize { double x1; double x2; })drawingVisibleSize;
- (id)eatKeyboardGestureRecognizer;
- (void)endLiveResize;
- (void)fingerDrawingEnabledDidChange;
- (bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (bool)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (bool)gestureRecognizerShouldDelayLift:(id)arg1;
- (void)handleDoubleTap:(id)arg1;
- (double)heightFromDrawing:(id)arg1 delta:(double)arg2;
- (void)hideDrawingMenu:(id)arg1;
- (id)hideMenuGestureRecognizer;
- (void)higlightResize:(id)arg1;
- (bool)hitByTouchLocation:(struct CGPoint { double x1; double x2; })arg1 bounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (bool)hitChrome:(struct CGPoint { double x1; double x2; })arg1 isStylus:(bool)arg2;
- (bool)hitTestResizeHandles:(struct CGPoint { double x1; double x2; })arg1 threshold:(double)arg2;
- (id)initWithAttachment:(id)arg1 drawingClass:(Class)arg2 inserted:(bool)arg3;
- (id)initWithCoder:(id)arg1;
- (id)initWithDrawingClass:(Class)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 drawing:(id)arg2;
- (void)insertSpace:(id)arg1;
- (bool)inserted;
- (bool)isAtBeginningOfDocument;
- (bool)isAtEndOfDocument;
- (bool)isLiveResizing;
- (id)keyCommands;
- (void)layoutSubviews;
- (void)layoutTileViews;
- (id)linedPaperLayerAttachmentContainerView:(id)arg1;
- (id)linedPaperLayerLinedPaper:(id)arg1;
- (id)linedPaperLayerTraitCollection:(id)arg1;
- (id)linesLayer;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })liveResizeAttachmentBounds;
- (void)menuDidHide:(id)arg1;
- (void)paste:(id)arg1;
- (void)pixelAlignForContentScale:(double)arg1 enclosingScrollView:(id)arg2;
- (id)pointerInteraction:(id)arg1 regionForRequest:(id)arg2 defaultRegion:(id)arg3;
- (void)resetZoom;
- (bool)resignFirstResponder;
- (id)resizeDragGestureRecognizer;
- (void)resizeDrawing:(id)arg1;
- (id)resizeHighlightGestureRecognizer;
- (bool)resizeUpper;
- (void)resizeView:(id)arg1 finishedWithOriginalDrawingBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 originalViewBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (void)resizeView:(id)arg1 setDrawingHeight:(double)arg2 originalHeight:(double)arg3 growFromTop:(bool)arg4;
- (void)resizeViewDidUpdate:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })resizeViewDrawingBounds:(id)arg1;
- (void)resizeViewLayoutAttachment:(id)arg1;
- (void)resizeViewRemoveAttachment:(id)arg1;
- (id)resizeViewTextView:(id)arg1;
- (void)scaleDrawing:(double)arg1;
- (void)scaleDrawing:(double)arg1 withOffset:(struct CGPoint { double x1; double x2; })arg2 animated:(bool)arg3;
- (void)scrollViewDidEndZooming:(id)arg1 withView:(id)arg2 atScale:(double)arg3;
- (void)scrollViewDidZoom:(id)arg1;
- (void)scrollViewWillBeginZooming:(id)arg1 withView:(id)arg2;
- (void)selectAll:(id)arg1;
- (void)setAttachmentChromeVisible:(bool)arg1 animated:(bool)arg2 highlightBackground:(bool)arg3;
- (void)setBottomResizeView:(id)arg1;
- (void)setContentHidden:(bool)arg1;
- (void)setDrawingCanvasBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setEatKeyboardGestureRecognizer:(id)arg1;
- (void)setHidden:(bool)arg1;
- (void)setHideMenuGestureRecognizer:(id)arg1;
- (void)setInserted:(bool)arg1;
- (void)setIsLiveResizing:(bool)arg1;
- (void)setLinesLayer:(id)arg1;
- (void)setLiveResizeAttachmentBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setResizeDragGestureRecognizer:(id)arg1;
- (void)setResizeHighlightGestureRecognizer:(id)arg1;
- (void)setResizeUpper:(bool)arg1;
- (void)setShowMenuGestureRecognizer:(id)arg1;
- (void)setTapBelowDrawingGestureRecognizer:(id)arg1;
- (void)setTextAttachment:(id)arg1;
- (void)setTextViewContentOffsetStartLocation:(struct CGPoint { double x1; double x2; })arg1;
- (void)setTopResizeView:(id)arg1;
- (void)setZoomScale:(double)arg1;
- (void)setZoomStartLocationInAttachment:(struct CGPoint { double x1; double x2; })arg1;
- (void)setZoomStartLocationInWindow:(struct CGPoint { double x1; double x2; })arg1;
- (void)setZoomStartScale:(double)arg1;
- (void)setZoomingProgramatically:(bool)arg1;
- (void)showDrawingMenu:(id)arg1;
- (id)showMenuGestureRecognizer;
- (void)tapBelowDrawingGesture:(id)arg1;
- (id)tapBelowDrawingGestureRecognizer;
- (id)textAttachment;
- (struct CGPoint { double x1; double x2; })textViewContentOffsetStartLocation;
- (id)tileMaskView;
- (id)tileScaleView;
- (id)tiledView;
- (id)tiledViewAttachmentViews;
- (void)toolPickerDidHide;
- (void)toolPickerDidShow;
- (id)topLevelAttachmentView;
- (id)topResizeView;
- (void)updateDrawingHeight:(double)arg1;
- (void)updateDrawingHeight:(double)arg1 notifyDrawingDidChange:(bool)arg2;
- (void)updateFrameForTextContainer;
- (void)updateTileContainerViewFrame;
- (id)viewForZoomingInScrollView:(id)arg1;
- (void)willMoveToSuperview:(id)arg1;
- (double)zoomScale;
- (struct CGPoint { double x1; double x2; })zoomStartLocationInAttachment;
- (struct CGPoint { double x1; double x2; })zoomStartLocationInWindow;
- (double)zoomStartScale;
- (bool)zoomingProgramatically;

@end
