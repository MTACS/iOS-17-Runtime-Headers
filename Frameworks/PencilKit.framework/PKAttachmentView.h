
@interface PKAttachmentView : UIView <PKHashtagViewDelegate, PKMentionViewDelegate, PKRecognitionSessionManagerDelegate, PKSelectionObserving, PKStrokeSpatialCacheDelegate> {
    NSArray * _additionalStrokes;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _cachedBounds;
    bool  _contentHidden;
    NSMutableArray * _dataDetectorViews;
    bool  _deferMentionUpdate;
    bool  _detectionViewsHidden;
    bool  _didSetTileDrawingTransform;
    PKDrawing * _drawing;
    <PKAttachmentViewHashtagsAndMentionsDelegate> * _hashtagAndMentionsDelegate;
    NSMutableArray * _hashtagViews;
    bool  _hideUntilScroll;
    bool  _ignoreInitialDetectionItemsForStatistics;
    bool  _isDraggingSelection;
    NSUUID * _listenerID;
    NSMutableDictionary * _mentionUUIDtoParticipant;
    NSMutableArray * _mentionViews;
    NSMutableDictionary * _offscreenTiles;
    NSMutableArray * _previousDataDetectorItems;
    NSMutableArray * _previousHashtagItems;
    NSMutableArray * _previousMentionItems;
    NSMutableDictionary * _purgedTiles;
    PKRecognitionSessionManager * _recognitionManager;
    bool  _sixChannelBlending;
    PKStrokeSpatialCache * _strokeSpatialCache;
    UIView * _tileContainerView;
    struct CGAffineTransform { 
        double a; 
        double b; 
        double c; 
        double d; 
        double tx; 
        double ty; 
    }  _tileDrawingTransform;
    NSMutableDictionary * _tiles;
    bool  _toolPickerVisible;
    bool  _wantsDataDetection;
    bool  _wantsHashtagDetection;
    bool  _wantsMentionDetection;
}

@property (nonatomic, retain) NSArray *additionalStrokes;
@property (nonatomic, readonly) UIView *attachmentContainerView;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } cachedBounds;
@property (nonatomic) bool contentHidden;
@property (nonatomic, retain) NSMutableArray *dataDetectorViews;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) bool deferMentionUpdate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool detectionViewsHidden;
@property (nonatomic, copy) PKDrawing *drawing;
@property (nonatomic, readonly) struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; } drawingTransform;
@property (readonly) unsigned long long hash;
@property (nonatomic) <PKAttachmentViewHashtagsAndMentionsDelegate> *hashtagAndMentionsDelegate;
@property (nonatomic, retain) NSMutableArray *hashtagViews;
@property (nonatomic) bool hideUntilScroll;
@property (nonatomic) bool ignoreInitialDetectionItemsForStatistics;
@property (nonatomic, readonly) bool isAtEndOfDocument;
@property (nonatomic) bool isDraggingSelection;
@property (nonatomic, retain) NSMutableDictionary *mentionUUIDtoParticipant;
@property (nonatomic, retain) NSMutableArray *mentionViews;
@property (nonatomic, readonly) NSMutableDictionary *offscreenTiles;
@property (nonatomic, retain) NSMutableArray *previousDataDetectorItems;
@property (nonatomic, retain) NSMutableArray *previousHashtagItems;
@property (nonatomic, retain) NSMutableArray *previousMentionItems;
@property (nonatomic, readonly) NSMutableDictionary *purgedTiles;
@property (nonatomic, retain) PKRecognitionSessionManager *recognitionManager;
@property (nonatomic) bool sixChannelBlending;
@property (nonatomic, readonly) PKStrokeSpatialCache *strokeSpatialCache;
@property (readonly) Class superclass;
@property (nonatomic, retain) UIView *tileContainerView;
@property (nonatomic) struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; } tileDrawingTransform;
@property (nonatomic, readonly) UIView *tileMaskView;
@property (nonatomic, readonly) PKTiledView *tiledView;
@property (nonatomic, readonly) NSMutableDictionary *tiles;
@property (nonatomic) bool toolPickerVisible;
@property (nonatomic, readonly) bool updateHeightAfterDrawing;
@property (nonatomic) bool wantsDataDetection;
@property (nonatomic) bool wantsHashtagDetection;
@property (nonatomic) bool wantsMentionDetection;

- (void).cxx_destruct;
- (id)_accessibilityUserTestingChildren;
- (id)_firstStrokesInSelectedStrokes:(id)arg1;
- (void)_initializeRecognitionForDrawingIfNecessary:(id)arg1;
- (void)_initializeRecognitionForDrawingIfNecessary:(id)arg1 withVisibleOnscreenStrokes:(id)arg2;
- (id)_lastStrokesInSelectedStrokes:(id)arg1;
- (void)_toolPickerDidShowHide:(id)arg1;
- (void)_updateAllPossibleParticipantNameTokens:(id)arg1;
- (id)additionalStrokes;
- (id)allHashtagViews;
- (id)attachmentContainerView;
- (void)beganStroke:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })boundingBoxForHashtagOrMentionWithUUID:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })cachedBounds;
- (void)cancelledStroke:(id)arg1;
- (void)clearTileDrawingTransform;
- (void)containingScrollViewDidScroll;
- (bool)contentHidden;
- (long long)contentTypeForIntersectedStrokes:(id)arg1;
- (id)dataDetectorViews;
- (void)dealloc;
- (bool)deferMentionUpdate;
- (bool)detectionViewsHidden;
- (void)didBeginDrawing;
- (void)didBeginModifyDrawing;
- (void)didEndDrawing;
- (void)didEndModifyDrawing;
- (void)didFinishCalculatingVisibleOnscreenStrokes:(id)arg1;
- (void)didMoveToSuperview;
- (void)didMoveToWindow;
- (bool)disableTileAnimations;
- (id)drawing;
- (void)drawingDidChange;
- (void)drawingDidChangeVisibleStrokes:(bool)arg1;
- (void)drawingDidEraseStrokes:(id)arg1;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })drawingTransform;
- (void)endedStroke:(id)arg1;
- (void)fetchIntersectedStrokesAtPoint:(struct CGPoint { double x1; double x2; })arg1 selectionType:(long long)arg2 inputType:(long long)arg3 visibleOnscreenStrokes:(id)arg4 completion:(id /* block */)arg5;
- (void)fetchIntersectedStrokesBetweenTopPoint:(struct CGPoint { double x1; double x2; })arg1 bottomPoint:(struct CGPoint { double x1; double x2; })arg2 liveScrollOffset:(struct CGPoint { double x1; double x2; })arg3 completion:(id /* block */)arg4;
- (void)fetchStrokesAmbiguouslyBelowAndAboveInsertSpaceHandleWithStrokes:(id)arg1 completion:(id /* block */)arg2;
- (void)fingerDrawingEnabledDidChange;
- (void)fullyRendered;
- (id)hashtagAndMentionsDelegate;
- (void)hashtagView:(id)arg1 registerCommand:(id)arg2;
- (void)hashtagViewDidActivateHashtag:(id)arg1;
- (void)hashtagViewDidDeactivateHashtag:(id)arg1;
- (void)hashtagViewWillDeactivateHashtag:(id)arg1;
- (id)hashtagViews;
- (double)heightFromDrawing:(id)arg1 delta:(double)arg2;
- (bool)hideUntilScroll;
- (bool)hitByTouchLocation:(struct CGPoint { double x1; double x2; })arg1 bounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (bool)hitChrome:(struct CGPoint { double x1; double x2; })arg1 isStylus:(bool)arg2;
- (bool)ignoreInitialDetectionItemsForStatistics;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 drawing:(id)arg2;
- (id)inlineViewAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (bool)isAtEndOfDocument;
- (bool)isDraggingSelection;
- (bool)isRTL;
- (void)layoutInlineViews;
- (void)layoutSubviews;
- (id)mentionUUIDtoParticipant;
- (void)mentionView:(id)arg1 registerCommand:(id)arg2;
- (void)mentionViewDidActivateMention:(id)arg1 withParticpant:(id)arg2;
- (void)mentionViewDidDeactivateMention:(id)arg1;
- (void)mentionViewWillDeactivateMention:(id)arg1;
- (id)mentionViews;
- (id)offscreenTiles;
- (void)pixelAlignForContentScale:(double)arg1 enclosingScrollView:(id)arg2;
- (id)previousDataDetectorItems;
- (id)previousHashtagItems;
- (id)previousMentionItems;
- (id)purgedTiles;
- (id)recognitionManager;
- (void)recognitionSessionManager:(id)arg1 foundDataDetectorItems:(id)arg2;
- (void)recognitionSessionManager:(id)arg1 foundHashtagItems:(id)arg2;
- (void)recognitionSessionManager:(id)arg1 foundMentionItems:(id)arg2;
- (void)removeDetectionViews;
- (void)revealDetectionViews;
- (void)selectionDidChange;
- (void)setAdditionalStrokes:(id)arg1;
- (void)setAttachmentChromeVisible:(bool)arg1 animated:(bool)arg2 highlightBackground:(bool)arg3;
- (void)setCachedBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setContentHidden:(bool)arg1;
- (void)setDataDetectorViews:(id)arg1;
- (void)setDeferMentionUpdate:(bool)arg1;
- (void)setDetectionViewsHidden:(bool)arg1;
- (void)setDrawing:(id)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setHashtagAndMentionsDelegate:(id)arg1;
- (void)setHashtagViews:(id)arg1;
- (void)setHideUntilScroll:(bool)arg1;
- (void)setIgnoreInitialDetectionItemsForStatistics:(bool)arg1;
- (void)setIsDraggingSelection:(bool)arg1;
- (void)setMentionUUIDtoParticipant:(id)arg1;
- (void)setMentionViews:(id)arg1;
- (void)setPreviousDataDetectorItems:(id)arg1;
- (void)setPreviousHashtagItems:(id)arg1;
- (void)setPreviousMentionItems:(id)arg1;
- (void)setRecognitionManager:(id)arg1;
- (void)setSixChannelBlending:(bool)arg1;
- (void)setTileContainerView:(id)arg1;
- (void)setTileDrawingTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1;
- (void)setToolPickerVisible:(bool)arg1;
- (void)setWantsDataDetection:(bool)arg1;
- (void)setWantsHashtagDetection:(bool)arg1;
- (void)setWantsMentionDetection:(bool)arg1;
- (bool)sixChannelBlending;
- (id)strokeSpatialCache;
- (id)tileContainerView;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })tileDrawingTransform;
- (id)tileMaskView;
- (id)tiledView;
- (id)tiles;
- (void)toolPickerDidHide;
- (void)toolPickerDidShow;
- (bool)toolPickerVisible;
- (void)updateAllPossibleParticipantNameTokens;
- (void)updateDataDetectorResults:(id)arg1;
- (void)updateDetectionViewVisibility;
- (void)updateDetectionViews:(id)arg1 withItems:(id)arg2 previousItems:(id)arg3;
- (void)updateDrawingHeight:(double)arg1;
- (void)updateDrawingHeight:(double)arg1 notifyDrawingDidChange:(bool)arg2;
- (void)updateFrameForTextContainer;
- (void)updateHashtagResults:(id)arg1;
- (bool)updateHeightAfterDrawing;
- (void)updateMentionResults:(id)arg1;
- (void)updateTileContainerViewFrame;
- (void)visibleOnscreenBoundsDidChange:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)wantsDataDetection;
- (bool)wantsFullyRendered;
- (bool)wantsHashtagDetection;
- (bool)wantsMentionDetection;
- (void)willMoveToWindow:(id)arg1;

@end
