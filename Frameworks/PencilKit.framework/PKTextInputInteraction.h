
@interface PKTextInputInteraction : NSObject <PKPencilObserverInteractionDelegate, PKTextInputCanvasControllerChangeObserver, PKTextInputCanvasControllerDelegate, PKTextInputContainerViewDelegate, PKTextInputCursorControllerDelegate, PKTextInputDebugStateReporting, PKTextInputDebugViewControllerDelegate, PKTextInputDrawingGestureRecognizerDelegate, PKTextInputElementsControllerDelegate, PKTextInputFeedbackControllerDelegate, PKTextInputHandwritingControllerDelegate, PKTextInputHoverControllerDelegate, PKTextInputLanguageSelectionControllerObserver, PKTextInputPaletteControllerDelegate, PKTextInputReserveSpaceControllerDelegate, PKTextInputTouchDetectionGestureRecognizerDelegate, UIEditingOverlayInteractionWithView, UIInteraction> {
    PKTextInputElement * __beginGestureElement;
    PKTextInputElementContent * __beginGestureElementContentForLineBreak;
    PKTextInputCanvasController * __canvasController;
    PKTContainerView * __containerView;
    PKTextInputCursorController * __cursorController;
    unsigned long long  __debugControllerAnchorCorner;
    PKTextInputDebugLogController * __debugLogController;
    PKTextInputDebugStateIntrospector * __debugStateIntrospector;
    PKTextInputDebugViewController * __debugViewController;
    PKTextInputSingleElementFinder * __drawingGestureElementFinder;
    PKTextInputElementsController * __elementsController;
    PKTextInputFeedbackController * __feedbackController;
    PKTextInputHandwritingController * __handwritingController;
    bool  __handwritingInteractionEnabled;
    PKTextInputHoverController * __hoverController;
    PKTextInputKeyboardSuppressionPolicyDelegate * __keyboardSuppressionPolicyDelegate;
    double  __lastDebugCornerEventTimestamp;
    double  __lastHandwritingEventTimestamp;
    PKTextInputPaletteController * __paletteController;
    PKPencilObserverInteraction * __pencilObserverInteraction;
    PKTextInputReserveSpaceController * __reserveSpaceController;
    PKTextInputTouchDetectionGestureRecognizer * __touchDetectionGestureRecognizer;
    PKTextInputDrawingGestureRecognizer * _drawingGestureRecognizer;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _editingOverlayContainerSceneBounds;
    bool  _replayCancelled;
    bool  _shouldBeActive;
    UIView * _view;
}

@property (nonatomic, retain) PKTextInputElement *_beginGestureElement;
@property (nonatomic, retain) PKTextInputElementContent *_beginGestureElementContentForLineBreak;
@property (nonatomic, readonly) PKTextInputCanvasController *_canvasController;
@property (nonatomic, retain) PKTContainerView *_containerView;
@property (nonatomic, retain) PKTextInputCursorController *_cursorController;
@property (setter=_setDebugControllerAnchorCorner:, nonatomic) unsigned long long _debugControllerAnchorCorner;
@property (nonatomic, retain) PKTextInputDebugLogController *_debugLogController;
@property (nonatomic, retain) PKTextInputDebugStateIntrospector *_debugStateIntrospector;
@property (nonatomic, retain) PKTextInputDebugViewController *_debugViewController;
@property (nonatomic, retain) PKTextInputSingleElementFinder *_drawingGestureElementFinder;
@property (nonatomic, retain) PKTextInputElementsController *_elementsController;
@property (nonatomic, retain) PKTextInputFeedbackController *_feedbackController;
@property (nonatomic, retain) PKTextInputHandwritingController *_handwritingController;
@property (setter=_setHandwritingInteractionEnabled:, nonatomic) bool _handwritingInteractionEnabled;
@property (nonatomic, retain) PKTextInputHoverController *_hoverController;
@property (nonatomic, retain) PKTextInputKeyboardSuppressionPolicyDelegate *_keyboardSuppressionPolicyDelegate;
@property (nonatomic) double _lastDebugCornerEventTimestamp;
@property (setter=_setLastHandwritingEventTimestamp:, nonatomic) double _lastHandwritingEventTimestamp;
@property (nonatomic, retain) PKTextInputPaletteController *_paletteController;
@property (nonatomic, retain) PKPencilObserverInteraction *_pencilObserverInteraction;
@property (nonatomic, retain) PKTextInputReserveSpaceController *_reserveSpaceController;
@property (nonatomic, retain) PKTextInputTouchDetectionGestureRecognizer *_touchDetectionGestureRecognizer;
@property (nonatomic, readonly) PKTextInputCanvasController *canvasController;
@property (nonatomic, readonly) NSString *currentLanguageIdentifier;
@property (nonatomic, readonly) PKTextInputCursorController *cursorController;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) PKTextInputDebugLogController *debugLogController;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) PKTextInputDrawingGestureRecognizer *drawingGestureRecognizer;
@property (nonatomic, retain) PKTextInputDrawingGestureRecognizer *drawingGestureRecognizer;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } editingOverlayContainerSceneBounds;
@property (nonatomic, readonly) PKTextInputElementsController *elementsController;
@property (nonatomic, readonly) NSArray *enabledLanguageIdentifiers;
@property (getter=isFloatingKeyboardVisible, nonatomic, readonly) bool floatingKeyboardVisible;
@property (nonatomic, readonly) PKTextInputHandwritingController *handwritingController;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isCursorWeak;
@property (nonatomic, readonly) PKPencilObserverInteraction *pencilObserverInteraction;
@property (nonatomic, readonly) PKTextInputReserveSpaceController *reserveSpaceController;
@property (readonly) Class superclass;
@property (nonatomic) UIView *view;

+ (id)interactionForScene:(id)arg1;
+ (bool)writeCurrentPencilSharpenerLogsToURL:(id)arg1 fullLogs:(bool)arg2 windowScene:(id)arg3;

- (void).cxx_destruct;
- (id)_beginGestureElement;
- (id)_beginGestureElementContentForLineBreak;
- (bool)_beginGestureIfPossible:(id)arg1;
- (id)_canvasController;
- (id)_containerView;
- (id)_cursorController;
- (unsigned long long)_debugControllerAnchorCorner;
- (id)_debugLogController;
- (id)_debugStateIntrospector;
- (id)_debugViewController;
- (id)_drawingGestureElementFinder;
- (void)_drawingGestureElementFinderDidFinishWithLocationInContainerView:(struct CGPoint { double x1; double x2; })arg1;
- (id)_elementsController;
- (id)_feedbackController;
- (id)_findControlFromHitView:(id)arg1 referenceView:(id)arg2;
- (bool)_handleDrawingGestureTapInElement:(id)arg1 gesture:(id)arg2 touch:(id)arg3;
- (void)_handlePotentialDebugOverlayGestureAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)_handwritingController;
- (bool)_handwritingInteractionEnabled;
- (id)_hoverController;
- (bool)_isTapAwayFromCurrentStrokesAtCanvasViewLocation:(struct CGPoint { double x1; double x2; })arg1;
- (id)_keyboardSuppressionPolicyDelegate;
- (double)_lastDebugCornerEventTimestamp;
- (double)_lastHandwritingEventTimestamp;
- (void)_notifyTargetElementOfTouches:(id)arg1 event:(id)arg2;
- (id)_paletteController;
- (id)_pencilObserverInteraction;
- (id)_reserveSpaceController;
- (void)_setDebugControllerAnchorCorner:(unsigned long long)arg1;
- (void)_setHandwritingInteractionEnabled:(bool)arg1;
- (void)_setLastHandwritingEventTimestamp:(double)arg1;
- (bool)_shouldAvoidStartingDrawingOnView:(id)arg1 location:(struct CGPoint { double x1; double x2; })arg2;
- (id)_topLevelHitViewForContainerViewPosition:(struct CGPoint { double x1; double x2; })arg1;
- (id)_touchDetectionGestureRecognizer;
- (void)_updateCanvasController;
- (void)_updateCanvasStrokeColor;
- (void)_updateContainerView;
- (void)_updateDebugController;
- (void)_updateElementsController;
- (void)_updateGestureRecognizers;
- (void)_updateHandwritingController;
- (void)_updateInteractionEnabled;
- (void)_updateKeyboardSuppressionPolicy;
- (void)_updatePaletteController;
- (void)cancelReplay;
- (id)canvasController;
- (void)canvasController:(id)arg1 drawingDidChange:(id)arg2;
- (void)canvasControllerCanvasDidFinishAnimatingStrokes:(id)arg1;
- (id)canvasControllerContainerView:(id)arg1;
- (void)canvasControllerDidBeginDrawing:(id)arg1;
- (void)canvasControllerDidCancelStroke:(id)arg1 strokeAcceptanceState:(long long)arg2;
- (void)canvasControllerDidEndDrawing:(id)arg1;
- (id)canvasControllerDrawingGestureRecognizer:(id)arg1;
- (void)canvasControllerEndedStroke:(id)arg1;
- (void)canvasControllerHasVisibleStrokesChanged:(id)arg1;
- (void)canvasControllerInProgressStrokeDidChange:(id)arg1;
- (id)canvasControllerPreferredStrokeColor:(id)arg1 animated:(bool*)arg2;
- (id)containerView:(id)arg1 hitTest:(struct CGPoint { double x1; double x2; })arg2 withEvent:(id)arg3;
- (id)currentLanguageIdentifier;
- (id)cursorController;
- (bool)cursorControllerCustomHighlightFeedbackIsVisible:(id)arg1;
- (long long)cursorControllerWritingState:(id)arg1;
- (void)dealloc;
- (id)debugLogController;
- (void)debugViewControllerNeedsDismiss:(id)arg1;
- (void)didMoveToView:(id)arg1;
- (void)dismissFloatingKeyboard;
- (id)drawingGestureRecognizer;
- (bool)drawingGestureRecognizer:(id)arg1 shouldBeginDrawingWithTouches:(id)arg2 event:(id)arg3;
- (bool)drawingGestureRecognizer:(id)arg1 shouldFinishGestureWithTouch:(id)arg2;
- (void)drawingGestureRecognizerDrawingTargetIsDrawingDidChange:(id)arg1;
- (bool)drawingGestureRecognizerLongPressShouldBegin:(id)arg1;
- (void)drawingGestureRecognizerLongPressStateDidChange:(id)arg1;
- (bool)drawingGestureRecognizerRequiresPastTapToBegin:(id)arg1;
- (bool)drawingGestureRecognizerRequiresTargetElementToBegin:(id)arg1;
- (void)drawingGestureStrokeAcceptanceStateDidChange:(id)arg1;
- (void)editingOverlayContainerDidChangeToSceneBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })editingOverlayContainerSceneBounds;
- (id)elementsController;
- (void)elementsControllerLastDiscoveredElementsDidChange:(id)arg1;
- (id)enabledLanguageIdentifiers;
- (id)feedbackControllerContainerView:(id)arg1;
- (void)feedbackControllerShowingCustomFeedbackDidChange:(id)arg1;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (id)handwritingController;
- (void)handwritingControllerDidFinishActiveCommands:(id)arg1;
- (void)handwritingControllerStrokeAlphaOverrideDidChange:(id)arg1;
- (void)handwritingControllerWritingStateDidChange:(id)arg1;
- (id)hoverController:(id)arg1 topLevelHitViewAt:(struct CGPoint { double x1; double x2; })arg2;
- (id)hoverControllerContainerView:(id)arg1;
- (id)hoverControllerCursorController:(id)arg1;
- (void)hoverControllerDidLift:(id)arg1;
- (id)init;
- (bool)isCursorWeak;
- (bool)isFloatingKeyboardVisible;
- (id)paletteControllerContainerView:(id)arg1;
- (id)paletteControllerDebugSharpenerLog:(id)arg1;
- (id)pencilObserverInteraction;
- (void)presentFloatingKeyboard;
- (void)presentProblemReportingView;
- (void)reportDebugStateDescription:(id /* block */)arg1;
- (id)reserveSpaceController;
- (void)reserveSpaceController:(id)arg1 willFocusElement:(id)arg2;
- (void)reserveSpaceControllerIsActiveChanged:(id)arg1;
- (void)reserveSpaceControllerIsPlaceholderVisibleChanged:(id)arg1;
- (void)saveInteractionForScene:(id)arg1;
- (void)setCurrentLanguageIdentifier:(id)arg1;
- (void)setDrawingGestureRecognizer:(id)arg1;
- (void)setEditingOverlayContainerSceneBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setView:(id)arg1;
- (void)set_beginGestureElement:(id)arg1;
- (void)set_beginGestureElementContentForLineBreak:(id)arg1;
- (void)set_containerView:(id)arg1;
- (void)set_cursorController:(id)arg1;
- (void)set_debugLogController:(id)arg1;
- (void)set_debugStateIntrospector:(id)arg1;
- (void)set_debugViewController:(id)arg1;
- (void)set_drawingGestureElementFinder:(id)arg1;
- (void)set_elementsController:(id)arg1;
- (void)set_feedbackController:(id)arg1;
- (void)set_handwritingController:(id)arg1;
- (void)set_hoverController:(id)arg1;
- (void)set_keyboardSuppressionPolicyDelegate:(id)arg1;
- (void)set_lastDebugCornerEventTimestamp:(double)arg1;
- (void)set_paletteController:(id)arg1;
- (void)set_pencilObserverInteraction:(id)arg1;
- (void)set_reserveSpaceController:(id)arg1;
- (void)set_touchDetectionGestureRecognizer:(id)arg1;
- (void)simulateReserveSpaceForTextInputView:(id)arg1 location:(struct CGPoint { double x1; double x2; })arg2 completion:(id /* block */)arg3;
- (id)supportedElementDelegateForHandwritingController:(id)arg1;
- (void)textInputLanguageSelectionControllerDidChangeLanguage:(id)arg1;
- (void)textInputPaletteControllerFloatingKeyboardWillHide:(id)arg1;
- (void)textInputPaletteControllerFloatingKeyboardWillShow:(id)arg1;
- (void)touchesDetected;
- (id)view;
- (void)willMoveToView:(id)arg1;
- (id)windowSceneForController:(id)arg1;

@end
