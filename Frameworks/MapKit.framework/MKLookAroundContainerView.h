
@interface MKLookAroundContainerView : UIView {
    UIActivityIndicatorView * _activityIndicator;
    NSArray * _badgeConstraints;
    bool  _badgeOnLeadingEdge;
    MKLookAroundContainerBadgeView * _badgeView;
    <MKLookAroundContainerViewDelegate> * _delegate;
    unsigned long long  _dimmingState;
    UIView * _dimmingView;
    UIColor * _dimmingViewBackgroundColorBlackOpaque;
    UIColor * _dimmingViewBackgroundColorBlackTranslucent;
    UIColor * _dimmingViewBackgroundColorClear;
    UIColor * _dimmingViewBackgroundColorGreyOpaque;
    UIColor * _dimmingViewBackgroundColorPhotosOpaque;
    bool  _floatingDimmingStyle;
    <NSObject> * _lookAroundViewDidBecomeAdequatelyDrawnObserver;
    <NSObject> * _lookAroundViewDidBecomeFullyDrawnObserver;
    MKMapItem * _mapItem;
    bool  _photosDimmingStyle;
    bool  _pipDimmingStyle;
}

@property (nonatomic, retain) UIActivityIndicatorView *activityIndicator;
@property (getter=isBadgeHidden, nonatomic) bool badgeHidden;
@property (getter=isBadgeOnLeadingEdge, nonatomic) bool badgeOnLeadingEdge;
@property (nonatomic, retain) MKLookAroundContainerBadgeView *badgeView;
@property (nonatomic) <MKLookAroundContainerViewDelegate> *delegate;
@property (nonatomic) unsigned long long dimmingState;
@property (nonatomic, retain) UIView *dimmingView;
@property (nonatomic, readonly) UIColor *dimmingViewBackgroundColorBlackOpaque;
@property (nonatomic, readonly) UIColor *dimmingViewBackgroundColorBlackTranslucent;
@property (nonatomic, readonly) UIColor *dimmingViewBackgroundColorClear;
@property (nonatomic, readonly) UIColor *dimmingViewBackgroundColorGreyOpaque;
@property (nonatomic, readonly) UIColor *dimmingViewBackgroundColorPhotosOpaque;
@property (nonatomic) bool floatingDimmingStyle;
@property (nonatomic, retain) <NSObject> *lookAroundViewDidBecomeAdequatelyDrawnObserver;
@property (nonatomic, retain) <NSObject> *lookAroundViewDidBecomeFullyDrawnObserver;
@property (nonatomic, retain) MKMapItem *mapItem;
@property (nonatomic) bool photosDimmingStyle;
@property (nonatomic) bool pipDimmingStyle;

- (void).cxx_destruct;
- (void)_commonInitWithLookAroundView:(id)arg1;
- (void)_setDimmingViewHidden:(bool)arg1 loading:(bool)arg2 animated:(bool)arg3;
- (void)_updateBadgeConstraints;
- (void)_updateDimmingStateForLookAroundView:(id)arg1 completion:(id /* block */)arg2;
- (void)_updateDimmingViewActivityIndicator;
- (void)_updateDimmingViewBackgroundColor;
- (id)activityIndicator;
- (id)badgeView;
- (void)cancelIfPresent;
- (void)dealloc;
- (id)delegate;
- (void)didAddSubview:(id)arg1;
- (unsigned long long)dimmingState;
- (id)dimmingView;
- (id)dimmingViewBackgroundColorBlackOpaque;
- (id)dimmingViewBackgroundColorBlackTranslucent;
- (id)dimmingViewBackgroundColorClear;
- (id)dimmingViewBackgroundColorGreyOpaque;
- (id)dimmingViewBackgroundColorPhotosOpaque;
- (bool)floatingDimmingStyle;
- (void)infoCardThemeChanged;
- (id)initWithCoder:(id)arg1;
- (id)initWithFloatingDimmingStyle:(bool)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithLookAroundView:(id)arg1;
- (id)initWithPhotosDimmingStyle:(bool)arg1;
- (bool)isBadgeHidden;
- (bool)isBadgeOnLeadingEdge;
- (void)layoutSubviews;
- (id)lookAroundViewDidBecomeAdequatelyDrawnObserver;
- (id)lookAroundViewDidBecomeFullyDrawnObserver;
- (id)lookAroundViewIfPresent;
- (id)mapItem;
- (bool)photosDimmingStyle;
- (bool)pipDimmingStyle;
- (void)setActivityIndicator:(id)arg1;
- (void)setBadgeHidden:(bool)arg1;
- (void)setBadgeHidden:(bool)arg1 animated:(bool)arg2;
- (void)setBadgeOnLeadingEdge:(bool)arg1;
- (void)setBadgeView:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDimmingState:(unsigned long long)arg1;
- (void)setDimmingState:(unsigned long long)arg1 animated:(bool)arg2;
- (void)setDimmingView:(id)arg1;
- (void)setFloatingDimmingStyle:(bool)arg1;
- (void)setLookAroundViewDidBecomeAdequatelyDrawnObserver:(id)arg1;
- (void)setLookAroundViewDidBecomeFullyDrawnObserver:(id)arg1;
- (void)setMapItem:(id)arg1;
- (void)setMapItem:(id)arg1 wantsCloseUpView:(bool)arg2;
- (void)setPhotosDimmingStyle:(bool)arg1;
- (void)setPipDimmingStyle:(bool)arg1;

@end
