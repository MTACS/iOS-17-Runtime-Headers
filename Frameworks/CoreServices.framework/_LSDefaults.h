
@interface _LSDefaults : NSObject {
    bool  _appleInternal;
    NSURL * _baseSystemContainerURL;
    long long  _currentDisplayGamut;
    NSMutableDictionary * _darwinNotificationNames;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _darwinNotificationNamesLock;
    unsigned int  _darwinNotificationNamesUID;
    bool  _hasPersistentPreferences;
    bool  _hasServer;
    NSData * _hmacSecret;
    bool  _inEducationMode;
    bool  _inSyncBubble;
    bool  _inXCTestRigInsecure;
    bool  _isLightweightSystemServer;
    bool  _isServer;
    NSObject<OS_dispatch_queue> * _ivarQueue;
    NSURL * _systemContainerURL;
    NSURL * _systemGroupContainerURL;
    NSURL * _userContainerURL;
    bool  _usingEphemeralStorage;
}

@property (readonly) NSData *HMACSecret;
@property (nonatomic, readonly) bool abortIfMayNotMapDatabase;
@property (nonatomic, readonly) bool allowsAlternateIcons;
@property (readonly) bool allowsUnentitledExtensionPointDeclaration;
@property (readonly) bool alwaysUseDebugOpenWithMenus;
@property (getter=isAppleInternal, nonatomic, readonly) bool appleInternal;
@property (readonly) long long concurrentInstallOperations;
@property (readonly) unsigned int currentSchemaVersion;
@property (readonly) NSURL *databaseContainerDirectoryURL;
@property (readonly) double databaseSaveInterval;
@property (readonly) double databaseSaveLatency;
@property (readonly) unsigned short databaseStoreFileMode;
@property (readonly) NSURL *databaseStoreFileURL;
@property (readonly) NSURL *dbRecoveryFileURL;
@property (readonly) NSURL *dbSentinelFileURL;
@property (readonly) NSURL *dbSyncInterruptedFileURL;
@property (readonly) bool hasPersistentPreferences;
@property bool hasServer;
@property (readonly) NSURL *identifiersFileURL;
@property (getter=isInEducationMode, readonly) bool inEducationMode;
@property (getter=isInSyncBubble, readonly) bool inSyncBubble;
@property (getter=isInXCTestRigInsecure, nonatomic, readonly) bool inXCTestRigInsecure;
@property (readonly) NSURL *installJournalDirectoryURL;
@property (nonatomic, readonly) bool issueSandboxExceptionsIfMayNotMapDatabase;
@property (getter=isLightweightSystemServer) bool lightweightSystemServer;
@property (readonly) bool markLocalizationsStoredInDatabase;
@property (readonly) bool nsExtensionUsesLSSettingsStore;
@property (readonly) NSURL *preSydroFSecurePreferencesFileURL;
@property (readonly) NSURL *preferencesFileURL;
@property (readonly) NSArray *preferredLocalizations;
@property (readonly) NSURL *progressProportionsStateURL;
@property (readonly) NSURL *queriedSchemesMapFileURL;
@property (getter=isRegionChina, readonly) bool regionChina;
@property (readonly) NSURL *securePreferencesFileURL;
@property (getter=isServer) bool server;
@property (readonly) NSURL *settingsStoreFileURL;
@property (readonly) NSURL *systemContainerURL;
@property (readonly) NSURL *systemContentDatabaseStoreFileURL;
@property (readonly) NSURL *systemGroupContainerURL;
@property (getter=isSystemServer, readonly) bool systemServer;
@property (readonly) NSURL *unremappableDatabaseStoreFileURL;
@property (readonly) NSURL *userContainerURL;
@property (getter=isUsingEphemeralStorage, readonly) bool usingEphemeralStorage;

+ (id)sharedInstance;

- (void).cxx_destruct;
- (id)HMACSecret;
- (bool)abortIfMayNotMapDatabase;
- (bool)allowsAlternateIcons;
- (bool)allowsUnentitledExtensionPointDeclaration;
- (bool)alwaysUseDebugOpenWithMenus;
- (id)classesWithNameForXCTests:(const char *)arg1;
- (long long)concurrentInstallOperations;
- (unsigned int)currentSchemaVersion;
- (id)darwinNotificationNameForBaseName:(id)arg1 optionalSessionKey:(struct LSSessionKey { unsigned int x1; bool x2; }*)arg2;
- (id)databaseContainerDirectoryURL;
- (id)databaseContainerURL;
- (id)databaseContainerURLWithUID:(unsigned int)arg1;
- (double)databaseSaveInterval;
- (double)databaseSaveLatency;
- (unsigned short)databaseStoreFileMode;
- (id)databaseStoreFileURL;
- (id)databaseStoreFileURLWithUID:(unsigned int)arg1;
- (id)databaseUpdateNotificationNameForSessionKey:(struct LSSessionKey { unsigned int x1; bool x2; })arg1;
- (id)dbRecoveryFileURL;
- (id)dbSentinelFileURL;
- (id)dbSyncInterruptedFileURL;
- (id)debugDescription;
- (bool)hasPersistentPreferences;
- (bool)hasServer;
- (id)identifiersFileURL;
- (id)init;
- (id)installJournalDirectoryURL;
- (bool)isAppleInternal;
- (bool)isInEducationMode;
- (bool)isInSyncBubble;
- (bool)isInXCTestRigInsecure;
- (bool)isLightweightSystemServer;
- (bool)isRegionChina;
- (bool)isServer;
- (bool)isSystemServer;
- (bool)isUsingEphemeralStorage;
- (bool)issueSandboxExceptionsIfMayNotMapDatabase;
- (bool)markLocalizationsStoredInDatabase;
- (bool)nsExtensionUsesLSSettingsStore;
- (id)preSydroFSecurePreferencesFileURL;
- (id)preferencesFileChangeNotificationName;
- (id)preferencesFileURL;
- (id)preferencesUpdateNotificationName;
- (id)preferredLocalizations;
- (id)progressProportionsStateURL;
- (unsigned int)proxyUIDForCurrentEffectiveUID;
- (unsigned int)proxyUIDForUID:(unsigned int)arg1;
- (id)queriedSchemesMapFileURL;
- (id)securePreferencesFileURL;
- (id)serviceNameForConnectionType:(unsigned short)arg1;
- (id)serviceNameForConnectionType:(unsigned short)arg1 lightweightSystemService:(bool)arg2;
- (void)setHasServer:(bool)arg1;
- (void)setLightweightSystemServer:(bool)arg1;
- (void)setServer:(bool)arg1;
- (id)settingsStoreFileURL;
- (id)settingsUpdateNotificationNameForUserID:(unsigned int)arg1;
- (id)simulatorRootURL;
- (id)simulatorRuntimeBuildVersion;
- (id)simulatorRuntimeVersion;
- (id)systemContainerBaseURL;
- (id)systemContainerURL;
- (id)systemContentDatabaseStoreFileURL;
- (id)systemContentDatabaseStoreFileURLWithUID:(unsigned int)arg1;
- (id)systemGroupContainerURL;
- (id)unremappableDatabaseStoreFileURL;
- (id)userContainerURL;
- (id)userPreferencesURL;

@end
