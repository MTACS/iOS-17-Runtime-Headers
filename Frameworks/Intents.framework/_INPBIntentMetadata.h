
@interface _INPBIntentMetadata : PBCodable <INJSONSerializable, NSCopying, NSSecureCoding, _INPBIntentMetadata> {
    NSArray * _airPlayRouteIds;
    NSData * _auditTokenData;
    bool  _backgroundLaunch;
    NSString * _categoryVerb;
    bool  _confirmed;
    _INPBImageValue * _defaultImageValue;
    NSString * _endpointId;
    bool  _endpointMediaPlaybackEnabled;
    int  _executionContext;
    NSArray * _forceNeedsValueForParameters;
    struct { 
        unsigned int executionContext : 1; 
        unsigned int intentCategory : 1; 
        unsigned int backgroundLaunch : 1; 
        unsigned int confirmed : 1; 
        unsigned int endpointMediaPlaybackEnabled : 1; 
        unsigned int idiom : 1; 
        unsigned int isOwnedByCurrentUser : 1; 
        unsigned int isPrimaryDisplayDisabled : 1; 
        unsigned int msLimitReached : 1; 
        unsigned int showsWhenRun : 1; 
        unsigned int triggerMethod : 1; 
        unsigned int userConfirmationRequired : 1; 
        unsigned int versioningHash : 1; 
    }  _has;
    int  _idiom;
    int  _intentCategory;
    NSString * _intentDescription;
    NSString * _intentId;
    bool  _isOwnedByCurrentUser;
    bool  _isPrimaryDisplayDisabled;
    NSString * _launchId;
    NSString * _mediaRouteId;
    bool  _msLimitReached;
    NSString * _nanoLaunchId;
    NSString * _originatingDeviceIdsIdentifier;
    NSString * _originatingDeviceRapportEffectiveId;
    NSString * _originatingDeviceRapportMediaSystemId;
    NSArray * _parameterImages;
    NSString * _preferredAudioOutputRouteId;
    struct { 
        int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _requiredEntitlements;
    struct { 
        int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _shortcutAvailabilities;
    bool  _showsWhenRun;
    NSString * _suggestedInvocationPhrase;
    NSString * _systemExtensionBundleId;
    NSString * _systemUIExtensionBundleId;
    int  _triggerMethod;
    bool  _userConfirmationRequired;
    _INPBString * _userUtterance;
    unsigned long long  _versioningHash;
}

@property (nonatomic, copy) NSArray *airPlayRouteIds;
@property (nonatomic, readonly) unsigned long long airPlayRouteIdsCount;
@property (nonatomic, copy) NSData *auditTokenData;
@property (nonatomic) bool backgroundLaunch;
@property (nonatomic, copy) NSString *categoryVerb;
@property (nonatomic) bool confirmed;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, retain) _INPBImageValue *defaultImageValue;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) NSString *endpointId;
@property (nonatomic) bool endpointMediaPlaybackEnabled;
@property (nonatomic) int executionContext;
@property (nonatomic, copy) NSArray *forceNeedsValueForParameters;
@property (nonatomic, readonly) unsigned long long forceNeedsValueForParametersCount;
@property (nonatomic, readonly) bool hasAuditTokenData;
@property (nonatomic) bool hasBackgroundLaunch;
@property (nonatomic, readonly) bool hasCategoryVerb;
@property (nonatomic) bool hasConfirmed;
@property (nonatomic, readonly) bool hasDefaultImageValue;
@property (nonatomic, readonly) bool hasEndpointId;
@property (nonatomic) bool hasEndpointMediaPlaybackEnabled;
@property (nonatomic) bool hasExecutionContext;
@property (nonatomic) bool hasIdiom;
@property (nonatomic) bool hasIntentCategory;
@property (nonatomic, readonly) bool hasIntentDescription;
@property (nonatomic, readonly) bool hasIntentId;
@property (nonatomic) bool hasIsOwnedByCurrentUser;
@property (nonatomic) bool hasIsPrimaryDisplayDisabled;
@property (nonatomic, readonly) bool hasLaunchId;
@property (nonatomic, readonly) bool hasMediaRouteId;
@property (nonatomic) bool hasMsLimitReached;
@property (nonatomic, readonly) bool hasNanoLaunchId;
@property (nonatomic, readonly) bool hasOriginatingDeviceIdsIdentifier;
@property (nonatomic, readonly) bool hasOriginatingDeviceRapportEffectiveId;
@property (nonatomic, readonly) bool hasOriginatingDeviceRapportMediaSystemId;
@property (nonatomic, readonly) bool hasPreferredAudioOutputRouteId;
@property (nonatomic) bool hasShowsWhenRun;
@property (nonatomic, readonly) bool hasSuggestedInvocationPhrase;
@property (nonatomic, readonly) bool hasSystemExtensionBundleId;
@property (nonatomic, readonly) bool hasSystemUIExtensionBundleId;
@property (nonatomic) bool hasTriggerMethod;
@property (nonatomic) bool hasUserConfirmationRequired;
@property (nonatomic, readonly) bool hasUserUtterance;
@property (nonatomic) bool hasVersioningHash;
@property (readonly) unsigned long long hash;
@property (nonatomic) int idiom;
@property (nonatomic) int intentCategory;
@property (nonatomic, copy) NSString *intentDescription;
@property (nonatomic, copy) NSString *intentId;
@property (nonatomic) bool isOwnedByCurrentUser;
@property (nonatomic) bool isPrimaryDisplayDisabled;
@property (nonatomic, copy) NSString *launchId;
@property (nonatomic, copy) NSString *mediaRouteId;
@property (nonatomic) bool msLimitReached;
@property (nonatomic, copy) NSString *nanoLaunchId;
@property (nonatomic, copy) NSString *originatingDeviceIdsIdentifier;
@property (nonatomic, copy) NSString *originatingDeviceRapportEffectiveId;
@property (nonatomic, copy) NSString *originatingDeviceRapportMediaSystemId;
@property (nonatomic, copy) NSArray *parameterImages;
@property (nonatomic, readonly) unsigned long long parameterImagesCount;
@property (nonatomic, copy) NSString *preferredAudioOutputRouteId;
@property (nonatomic, readonly) int*requiredEntitlements;
@property (nonatomic, readonly) unsigned long long requiredEntitlementsCount;
@property (nonatomic, readonly) int*shortcutAvailabilities;
@property (nonatomic, readonly) unsigned long long shortcutAvailabilitiesCount;
@property (nonatomic) bool showsWhenRun;
@property (nonatomic, copy) NSString *suggestedInvocationPhrase;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSString *systemExtensionBundleId;
@property (nonatomic, copy) NSString *systemUIExtensionBundleId;
@property (nonatomic) int triggerMethod;
@property (nonatomic) bool userConfirmationRequired;
@property (nonatomic, retain) _INPBString *userUtterance;
@property (nonatomic) unsigned long long versioningHash;

+ (id)_intents_decodeWithJSONDecoder:(id)arg1 codableDescription:(id)arg2 from:(id)arg3;
+ (Class)parameterImagesType;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (int)StringAsExecutionContext:(id)arg1;
- (int)StringAsIdiom:(id)arg1;
- (int)StringAsIntentCategory:(id)arg1;
- (int)StringAsRequiredEntitlements:(id)arg1;
- (int)StringAsShortcutAvailabilities:(id)arg1;
- (int)StringAsTriggerMethod:(id)arg1;
- (void)_intents_decodeWithJSONDecoder:(id)arg1 codableDescription:(id)arg2 from:(id)arg3;
- (id)_intents_encodeWithJSONEncoder:(id)arg1 codableDescription:(id)arg2;
- (void)addAirPlayRouteIds:(id)arg1;
- (void)addForceNeedsValueForParameter:(id)arg1;
- (void)addParameterImages:(id)arg1;
- (void)addRequiredEntitlement:(int)arg1;
- (void)addShortcutAvailability:(int)arg1;
- (id)airPlayRouteIds;
- (id)airPlayRouteIdsAtIndex:(unsigned long long)arg1;
- (unsigned long long)airPlayRouteIdsCount;
- (id)auditTokenData;
- (bool)backgroundLaunch;
- (id)categoryVerb;
- (void)clearAirPlayRouteIds;
- (void)clearForceNeedsValueForParameters;
- (void)clearParameterImages;
- (void)clearRequiredEntitlements;
- (void)clearShortcutAvailabilities;
- (bool)confirmed;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)defaultImageValue;
- (id)dictionaryRepresentation;
- (void)encodeWithCoder:(id)arg1;
- (id)endpointId;
- (bool)endpointMediaPlaybackEnabled;
- (int)executionContext;
- (id)executionContextAsString:(int)arg1;
- (id)forceNeedsValueForParameterAtIndex:(unsigned long long)arg1;
- (id)forceNeedsValueForParameters;
- (unsigned long long)forceNeedsValueForParametersCount;
- (bool)hasAuditTokenData;
- (bool)hasBackgroundLaunch;
- (bool)hasCategoryVerb;
- (bool)hasConfirmed;
- (bool)hasDefaultImageValue;
- (bool)hasEndpointId;
- (bool)hasEndpointMediaPlaybackEnabled;
- (bool)hasExecutionContext;
- (bool)hasIdiom;
- (bool)hasIntentCategory;
- (bool)hasIntentDescription;
- (bool)hasIntentId;
- (bool)hasIsOwnedByCurrentUser;
- (bool)hasIsPrimaryDisplayDisabled;
- (bool)hasLaunchId;
- (bool)hasMediaRouteId;
- (bool)hasMsLimitReached;
- (bool)hasNanoLaunchId;
- (bool)hasOriginatingDeviceIdsIdentifier;
- (bool)hasOriginatingDeviceRapportEffectiveId;
- (bool)hasOriginatingDeviceRapportMediaSystemId;
- (bool)hasPreferredAudioOutputRouteId;
- (bool)hasShowsWhenRun;
- (bool)hasSuggestedInvocationPhrase;
- (bool)hasSystemExtensionBundleId;
- (bool)hasSystemUIExtensionBundleId;
- (bool)hasTriggerMethod;
- (bool)hasUserConfirmationRequired;
- (bool)hasUserUtterance;
- (bool)hasVersioningHash;
- (unsigned long long)hash;
- (int)idiom;
- (id)idiomAsString:(int)arg1;
- (id)initWithCoder:(id)arg1;
- (int)intentCategory;
- (id)intentCategoryAsString:(int)arg1;
- (id)intentDescription;
- (id)intentId;
- (bool)isEqual:(id)arg1;
- (bool)isOwnedByCurrentUser;
- (bool)isPrimaryDisplayDisabled;
- (id)launchId;
- (id)mediaRouteId;
- (bool)msLimitReached;
- (id)nanoLaunchId;
- (id)originatingDeviceIdsIdentifier;
- (id)originatingDeviceRapportEffectiveId;
- (id)originatingDeviceRapportMediaSystemId;
- (id)parameterImages;
- (id)parameterImagesAtIndex:(unsigned long long)arg1;
- (unsigned long long)parameterImagesCount;
- (id)preferredAudioOutputRouteId;
- (bool)readFrom:(id)arg1;
- (int)requiredEntitlementAtIndex:(unsigned long long)arg1;
- (int*)requiredEntitlements;
- (id)requiredEntitlementsAsString:(int)arg1;
- (unsigned long long)requiredEntitlementsCount;
- (void)setAirPlayRouteIds:(id)arg1;
- (void)setAuditTokenData:(id)arg1;
- (void)setBackgroundLaunch:(bool)arg1;
- (void)setCategoryVerb:(id)arg1;
- (void)setConfirmed:(bool)arg1;
- (void)setDefaultImageValue:(id)arg1;
- (void)setEndpointId:(id)arg1;
- (void)setEndpointMediaPlaybackEnabled:(bool)arg1;
- (void)setExecutionContext:(int)arg1;
- (void)setForceNeedsValueForParameters:(id)arg1;
- (void)setHasBackgroundLaunch:(bool)arg1;
- (void)setHasConfirmed:(bool)arg1;
- (void)setHasEndpointMediaPlaybackEnabled:(bool)arg1;
- (void)setHasExecutionContext:(bool)arg1;
- (void)setHasIdiom:(bool)arg1;
- (void)setHasIntentCategory:(bool)arg1;
- (void)setHasIsOwnedByCurrentUser:(bool)arg1;
- (void)setHasIsPrimaryDisplayDisabled:(bool)arg1;
- (void)setHasMsLimitReached:(bool)arg1;
- (void)setHasShowsWhenRun:(bool)arg1;
- (void)setHasTriggerMethod:(bool)arg1;
- (void)setHasUserConfirmationRequired:(bool)arg1;
- (void)setHasVersioningHash:(bool)arg1;
- (void)setIdiom:(int)arg1;
- (void)setIntentCategory:(int)arg1;
- (void)setIntentDescription:(id)arg1;
- (void)setIntentId:(id)arg1;
- (void)setIsOwnedByCurrentUser:(bool)arg1;
- (void)setIsPrimaryDisplayDisabled:(bool)arg1;
- (void)setLaunchId:(id)arg1;
- (void)setMediaRouteId:(id)arg1;
- (void)setMsLimitReached:(bool)arg1;
- (void)setNanoLaunchId:(id)arg1;
- (void)setOriginatingDeviceIdsIdentifier:(id)arg1;
- (void)setOriginatingDeviceRapportEffectiveId:(id)arg1;
- (void)setOriginatingDeviceRapportMediaSystemId:(id)arg1;
- (void)setParameterImages:(id)arg1;
- (void)setPreferredAudioOutputRouteId:(id)arg1;
- (void)setRequiredEntitlements:(int*)arg1 count:(unsigned long long)arg2;
- (void)setShortcutAvailabilities:(int*)arg1 count:(unsigned long long)arg2;
- (void)setShowsWhenRun:(bool)arg1;
- (void)setSuggestedInvocationPhrase:(id)arg1;
- (void)setSystemExtensionBundleId:(id)arg1;
- (void)setSystemUIExtensionBundleId:(id)arg1;
- (void)setTriggerMethod:(int)arg1;
- (void)setUserConfirmationRequired:(bool)arg1;
- (void)setUserUtterance:(id)arg1;
- (void)setVersioningHash:(unsigned long long)arg1;
- (int*)shortcutAvailabilities;
- (id)shortcutAvailabilitiesAsString:(int)arg1;
- (unsigned long long)shortcutAvailabilitiesCount;
- (int)shortcutAvailabilityAtIndex:(unsigned long long)arg1;
- (bool)showsWhenRun;
- (id)suggestedInvocationPhrase;
- (id)systemExtensionBundleId;
- (id)systemUIExtensionBundleId;
- (int)triggerMethod;
- (id)triggerMethodAsString:(int)arg1;
- (bool)userConfirmationRequired;
- (id)userUtterance;
- (unsigned long long)versioningHash;
- (void)writeTo:(id)arg1;

@end
