
@interface _INPBPrivatePlayMediaIntentData : PBCodable <NSCopying, NSSecureCoding, _INPBPrivatePlayMediaIntentData> {
    _INPBString * _alternativeProviderBundleIdentifier;
    _INPBString * _ampPAFDataSetID;
    bool  _appInferred;
    bool  _appSelectionEnabled;
    bool  _appSelectionSignalsEnabled;
    int  _appSelectionSignalsFrequencyDenominator;
    NSArray * _audioSearchResults;
    bool  _entityConfidenceSignalsEnabled;
    int  _entityConfidenceSignalsFrequencyDenominatorInternal;
    int  _entityConfidenceSignalsFrequencyDenominatorProd;
    int  _entityConfidenceSignalsMaxItemsToDisambiguate;
    struct { 
        unsigned int appInferred : 1; 
        unsigned int appSelectionEnabled : 1; 
        unsigned int appSelectionSignalsEnabled : 1; 
        unsigned int appSelectionSignalsFrequencyDenominator : 1; 
        unsigned int entityConfidenceSignalsEnabled : 1; 
        unsigned int entityConfidenceSignalsFrequencyDenominatorInternal : 1; 
        unsigned int entityConfidenceSignalsFrequencyDenominatorProd : 1; 
        unsigned int entityConfidenceSignalsMaxItemsToDisambiguate : 1; 
        unsigned int immediatelyStartPlayback : 1; 
        unsigned int isAmbiguousPlay : 1; 
        unsigned int isPersonalizedRequest : 1; 
        unsigned int shouldSuppressCommonWholeHouseAudioRoutes : 1; 
    }  _has;
    bool  _immediatelyStartPlayback;
    NSArray * _internalSignals;
    bool  _isAmbiguousPlay;
    bool  _isPersonalizedRequest;
    _INPBPrivateMediaIntentData * _privateMediaIntentData;
    bool  _shouldSuppressCommonWholeHouseAudioRoutes;
}

@property (nonatomic, retain) _INPBString *alternativeProviderBundleIdentifier;
@property (nonatomic, retain) _INPBString *ampPAFDataSetID;
@property (nonatomic) bool appInferred;
@property (nonatomic) bool appSelectionEnabled;
@property (nonatomic) bool appSelectionSignalsEnabled;
@property (nonatomic) int appSelectionSignalsFrequencyDenominator;
@property (nonatomic, copy) NSArray *audioSearchResults;
@property (nonatomic, readonly) unsigned long long audioSearchResultsCount;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool entityConfidenceSignalsEnabled;
@property (nonatomic) int entityConfidenceSignalsFrequencyDenominatorInternal;
@property (nonatomic) int entityConfidenceSignalsFrequencyDenominatorProd;
@property (nonatomic) int entityConfidenceSignalsMaxItemsToDisambiguate;
@property (nonatomic, readonly) bool hasAlternativeProviderBundleIdentifier;
@property (nonatomic, readonly) bool hasAmpPAFDataSetID;
@property (nonatomic) bool hasAppInferred;
@property (nonatomic) bool hasAppSelectionEnabled;
@property (nonatomic) bool hasAppSelectionSignalsEnabled;
@property (nonatomic) bool hasAppSelectionSignalsFrequencyDenominator;
@property (nonatomic) bool hasEntityConfidenceSignalsEnabled;
@property (nonatomic) bool hasEntityConfidenceSignalsFrequencyDenominatorInternal;
@property (nonatomic) bool hasEntityConfidenceSignalsFrequencyDenominatorProd;
@property (nonatomic) bool hasEntityConfidenceSignalsMaxItemsToDisambiguate;
@property (nonatomic) bool hasImmediatelyStartPlayback;
@property (nonatomic) bool hasIsAmbiguousPlay;
@property (nonatomic) bool hasIsPersonalizedRequest;
@property (nonatomic, readonly) bool hasPrivateMediaIntentData;
@property (nonatomic) bool hasShouldSuppressCommonWholeHouseAudioRoutes;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool immediatelyStartPlayback;
@property (nonatomic, copy) NSArray *internalSignals;
@property (nonatomic, readonly) unsigned long long internalSignalsCount;
@property (nonatomic) bool isAmbiguousPlay;
@property (nonatomic) bool isPersonalizedRequest;
@property (nonatomic, retain) _INPBPrivateMediaIntentData *privateMediaIntentData;
@property (nonatomic) bool shouldSuppressCommonWholeHouseAudioRoutes;
@property (readonly) Class superclass;

+ (Class)audioSearchResultsType;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (void)addAudioSearchResults:(id)arg1;
- (void)addInternalSignal:(id)arg1;
- (id)alternativeProviderBundleIdentifier;
- (id)ampPAFDataSetID;
- (bool)appInferred;
- (bool)appSelectionEnabled;
- (bool)appSelectionSignalsEnabled;
- (int)appSelectionSignalsFrequencyDenominator;
- (id)audioSearchResults;
- (id)audioSearchResultsAtIndex:(unsigned long long)arg1;
- (unsigned long long)audioSearchResultsCount;
- (void)clearAudioSearchResults;
- (void)clearInternalSignals;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)dictionaryRepresentation;
- (void)encodeWithCoder:(id)arg1;
- (bool)entityConfidenceSignalsEnabled;
- (int)entityConfidenceSignalsFrequencyDenominatorInternal;
- (int)entityConfidenceSignalsFrequencyDenominatorProd;
- (int)entityConfidenceSignalsMaxItemsToDisambiguate;
- (bool)hasAlternativeProviderBundleIdentifier;
- (bool)hasAmpPAFDataSetID;
- (bool)hasAppInferred;
- (bool)hasAppSelectionEnabled;
- (bool)hasAppSelectionSignalsEnabled;
- (bool)hasAppSelectionSignalsFrequencyDenominator;
- (bool)hasEntityConfidenceSignalsEnabled;
- (bool)hasEntityConfidenceSignalsFrequencyDenominatorInternal;
- (bool)hasEntityConfidenceSignalsFrequencyDenominatorProd;
- (bool)hasEntityConfidenceSignalsMaxItemsToDisambiguate;
- (bool)hasImmediatelyStartPlayback;
- (bool)hasIsAmbiguousPlay;
- (bool)hasIsPersonalizedRequest;
- (bool)hasPrivateMediaIntentData;
- (bool)hasShouldSuppressCommonWholeHouseAudioRoutes;
- (unsigned long long)hash;
- (bool)immediatelyStartPlayback;
- (id)initWithCoder:(id)arg1;
- (id)internalSignalAtIndex:(unsigned long long)arg1;
- (id)internalSignals;
- (unsigned long long)internalSignalsCount;
- (bool)isAmbiguousPlay;
- (bool)isEqual:(id)arg1;
- (bool)isPersonalizedRequest;
- (id)privateMediaIntentData;
- (bool)readFrom:(id)arg1;
- (void)setAlternativeProviderBundleIdentifier:(id)arg1;
- (void)setAmpPAFDataSetID:(id)arg1;
- (void)setAppInferred:(bool)arg1;
- (void)setAppSelectionEnabled:(bool)arg1;
- (void)setAppSelectionSignalsEnabled:(bool)arg1;
- (void)setAppSelectionSignalsFrequencyDenominator:(int)arg1;
- (void)setAudioSearchResults:(id)arg1;
- (void)setEntityConfidenceSignalsEnabled:(bool)arg1;
- (void)setEntityConfidenceSignalsFrequencyDenominatorInternal:(int)arg1;
- (void)setEntityConfidenceSignalsFrequencyDenominatorProd:(int)arg1;
- (void)setEntityConfidenceSignalsMaxItemsToDisambiguate:(int)arg1;
- (void)setHasAppInferred:(bool)arg1;
- (void)setHasAppSelectionEnabled:(bool)arg1;
- (void)setHasAppSelectionSignalsEnabled:(bool)arg1;
- (void)setHasAppSelectionSignalsFrequencyDenominator:(bool)arg1;
- (void)setHasEntityConfidenceSignalsEnabled:(bool)arg1;
- (void)setHasEntityConfidenceSignalsFrequencyDenominatorInternal:(bool)arg1;
- (void)setHasEntityConfidenceSignalsFrequencyDenominatorProd:(bool)arg1;
- (void)setHasEntityConfidenceSignalsMaxItemsToDisambiguate:(bool)arg1;
- (void)setHasImmediatelyStartPlayback:(bool)arg1;
- (void)setHasIsAmbiguousPlay:(bool)arg1;
- (void)setHasIsPersonalizedRequest:(bool)arg1;
- (void)setHasShouldSuppressCommonWholeHouseAudioRoutes:(bool)arg1;
- (void)setImmediatelyStartPlayback:(bool)arg1;
- (void)setInternalSignals:(id)arg1;
- (void)setIsAmbiguousPlay:(bool)arg1;
- (void)setIsPersonalizedRequest:(bool)arg1;
- (void)setPrivateMediaIntentData:(id)arg1;
- (void)setShouldSuppressCommonWholeHouseAudioRoutes:(bool)arg1;
- (bool)shouldSuppressCommonWholeHouseAudioRoutes;
- (void)writeTo:(id)arg1;

@end
