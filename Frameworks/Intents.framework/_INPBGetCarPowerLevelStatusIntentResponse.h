
@interface _INPBGetCarPowerLevelStatusIntentResponse : PBCodable <NSCopying, NSSecureCoding, _INPBGetCarPowerLevelStatusIntentResponse> {
    int  _activeConnector;
    NSString * _carIdentifier;
    _INPBDouble * _chargePercentRemaining;
    bool  _charging;
    _INPBJSONDictionary * _chargingFormulaArguments;
    _INPBJSONDictionary * _consumptionFormulaArguments;
    _INPBEnergy * _currentBatteryCapacity;
    _INPBDateTime * _dateOfLastStateUpdate;
    _INPBDistance * _distanceRemaining;
    _INPBDistance * _distanceRemainingElectric;
    _INPBDistance * _distanceRemainingFuel;
    _INPBDouble * _fuelPercentRemaining;
    struct { 
        unsigned int activeConnector : 1; 
        unsigned int charging : 1; 
    }  _has;
    _INPBEnergy * _maximumBatteryCapacity;
    _INPBDistance * _maximumDistance;
    _INPBDistance * _maximumDistanceElectric;
    _INPBDistance * _maximumDistanceFuel;
    _INPBEnergy * _minimumBatteryCapacity;
    _INPBInteger * _minutesToFull;
}

@property (nonatomic) int activeConnector;
@property (nonatomic, copy) NSString *carIdentifier;
@property (nonatomic, retain) _INPBDouble *chargePercentRemaining;
@property (nonatomic) bool charging;
@property (nonatomic, retain) _INPBJSONDictionary *chargingFormulaArguments;
@property (nonatomic, retain) _INPBJSONDictionary *consumptionFormulaArguments;
@property (nonatomic, retain) _INPBEnergy *currentBatteryCapacity;
@property (nonatomic, retain) _INPBDateTime *dateOfLastStateUpdate;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) _INPBDistance *distanceRemaining;
@property (nonatomic, retain) _INPBDistance *distanceRemainingElectric;
@property (nonatomic, retain) _INPBDistance *distanceRemainingFuel;
@property (nonatomic, retain) _INPBDouble *fuelPercentRemaining;
@property (nonatomic) bool hasActiveConnector;
@property (nonatomic, readonly) bool hasCarIdentifier;
@property (nonatomic, readonly) bool hasChargePercentRemaining;
@property (nonatomic) bool hasCharging;
@property (nonatomic, readonly) bool hasChargingFormulaArguments;
@property (nonatomic, readonly) bool hasConsumptionFormulaArguments;
@property (nonatomic, readonly) bool hasCurrentBatteryCapacity;
@property (nonatomic, readonly) bool hasDateOfLastStateUpdate;
@property (nonatomic, readonly) bool hasDistanceRemaining;
@property (nonatomic, readonly) bool hasDistanceRemainingElectric;
@property (nonatomic, readonly) bool hasDistanceRemainingFuel;
@property (nonatomic, readonly) bool hasFuelPercentRemaining;
@property (nonatomic, readonly) bool hasMaximumBatteryCapacity;
@property (nonatomic, readonly) bool hasMaximumDistance;
@property (nonatomic, readonly) bool hasMaximumDistanceElectric;
@property (nonatomic, readonly) bool hasMaximumDistanceFuel;
@property (nonatomic, readonly) bool hasMinimumBatteryCapacity;
@property (nonatomic, readonly) bool hasMinutesToFull;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) _INPBEnergy *maximumBatteryCapacity;
@property (nonatomic, retain) _INPBDistance *maximumDistance;
@property (nonatomic, retain) _INPBDistance *maximumDistanceElectric;
@property (nonatomic, retain) _INPBDistance *maximumDistanceFuel;
@property (nonatomic, retain) _INPBEnergy *minimumBatteryCapacity;
@property (nonatomic, retain) _INPBInteger *minutesToFull;
@property (readonly) Class superclass;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (int)StringAsActiveConnector:(id)arg1;
- (int)activeConnector;
- (id)activeConnectorAsString:(int)arg1;
- (id)carIdentifier;
- (id)chargePercentRemaining;
- (bool)charging;
- (id)chargingFormulaArguments;
- (id)consumptionFormulaArguments;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)currentBatteryCapacity;
- (id)dateOfLastStateUpdate;
- (id)dictionaryRepresentation;
- (id)distanceRemaining;
- (id)distanceRemainingElectric;
- (id)distanceRemainingFuel;
- (void)encodeWithCoder:(id)arg1;
- (id)fuelPercentRemaining;
- (bool)hasActiveConnector;
- (bool)hasCarIdentifier;
- (bool)hasChargePercentRemaining;
- (bool)hasCharging;
- (bool)hasChargingFormulaArguments;
- (bool)hasConsumptionFormulaArguments;
- (bool)hasCurrentBatteryCapacity;
- (bool)hasDateOfLastStateUpdate;
- (bool)hasDistanceRemaining;
- (bool)hasDistanceRemainingElectric;
- (bool)hasDistanceRemainingFuel;
- (bool)hasFuelPercentRemaining;
- (bool)hasMaximumBatteryCapacity;
- (bool)hasMaximumDistance;
- (bool)hasMaximumDistanceElectric;
- (bool)hasMaximumDistanceFuel;
- (bool)hasMinimumBatteryCapacity;
- (bool)hasMinutesToFull;
- (unsigned long long)hash;
- (id)initWithCoder:(id)arg1;
- (bool)isEqual:(id)arg1;
- (id)maximumBatteryCapacity;
- (id)maximumDistance;
- (id)maximumDistanceElectric;
- (id)maximumDistanceFuel;
- (id)minimumBatteryCapacity;
- (id)minutesToFull;
- (bool)readFrom:(id)arg1;
- (void)setActiveConnector:(int)arg1;
- (void)setCarIdentifier:(id)arg1;
- (void)setChargePercentRemaining:(id)arg1;
- (void)setCharging:(bool)arg1;
- (void)setChargingFormulaArguments:(id)arg1;
- (void)setConsumptionFormulaArguments:(id)arg1;
- (void)setCurrentBatteryCapacity:(id)arg1;
- (void)setDateOfLastStateUpdate:(id)arg1;
- (void)setDistanceRemaining:(id)arg1;
- (void)setDistanceRemainingElectric:(id)arg1;
- (void)setDistanceRemainingFuel:(id)arg1;
- (void)setFuelPercentRemaining:(id)arg1;
- (void)setHasActiveConnector:(bool)arg1;
- (void)setHasCharging:(bool)arg1;
- (void)setMaximumBatteryCapacity:(id)arg1;
- (void)setMaximumDistance:(id)arg1;
- (void)setMaximumDistanceElectric:(id)arg1;
- (void)setMaximumDistanceFuel:(id)arg1;
- (void)setMinimumBatteryCapacity:(id)arg1;
- (void)setMinutesToFull:(id)arg1;
- (void)writeTo:(id)arg1;

@end
