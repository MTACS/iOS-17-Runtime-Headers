
@interface NSSQLCore : NSPersistentStore <NSFilePresenter, NSSQLModelProvider> {
    NSSQLiteAdapter * _adapter;
    NSDictionary * _ancillaryModels;
    NSDictionary * _ancillarySQLModels;
    NSObject<OS_dispatch_source> * _cache_event_source;
    NSData * _dbKey;
    NSSQLCoreDispatchManager * _dispatchManager;
    NSString * _externalDataLinksDirectory;
    NSString * _externalDataReferencesDirectory;
    NSString * _fileBackedFuturesPath;
    NSGenerationalRowCache * _generationalRowCache;
    NSDictionary * _historyTrackingOptions;
    bool  _metadataIsClean;
    NSSQLModel * _model;
    _NSSQLCoreConnectionObserver * _observer;
    NSSQLiteConnection * _queryGenerationTrackingConnection;
    int  _remoteNotificationToken;
    bool  _remoteStoresDidChange;
    NSSQLiteConnection * _schemaValidationConnection;
    struct _sqlCoreFlags { 
        unsigned int useSyntaxColoredLogging : 1; 
        unsigned int hasExternalDataReferences : 1; 
        unsigned int fileProtectionType : 3; 
        unsigned int notifyFOKChanges : 1; 
        unsigned int initializationComplete : 1; 
        unsigned int connectionsAreLocal : 1; 
        unsigned int isXPCDelegate : 1; 
        unsigned int queryGenerationInitializationFailed : 1; 
        unsigned int persistentHistoryTracking : 1; 
        unsigned int hasAncillaryModels : 1; 
        unsigned int postRemoteNotify : 1; 
        unsigned int hasFileBackedFutures : 1; 
        unsigned int isInMemory : 1; 
        unsigned int _debugRequestsHandling : 1; 
        unsigned int historyBatchUpdateModProperties : 1; 
        unsigned int indexTracking : 1; 
        unsigned int memoryObserverSuspended : 1; 
        unsigned int _RESERVED : 13; 
    }  _sqlCoreFlags;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _sqlCoreStateLock;
    NSMutableDictionary * _storeMetadata;
    int  _transactionInMemorySequence;
    id  _usedIndexes;
    _PFMutex * _writerSerializationMutex;
}

@property (nonatomic, readonly) NSDictionary *ancillaryModels;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSSQLModel *model;
@property (readonly) NSSet *observedPresentedItemUbiquityAttributes;
@property (readonly, retain) NSOperationQueue *presentedItemOperationQueue;
@property (readonly, copy) NSURL *presentedItemURL;
@property (readonly, copy) NSURL *primaryPresentedItemURL;
@property (readonly) Class superclass;

+ (bool)_destroyPersistentStoreAtURL:(id)arg1 options:(id)arg2 error:(id*)arg3;
+ (id)_figureOutWhereExternalReferencesEndedUpRelativeTo:(id)arg1;
+ (bool)_rekeyPersistentStoreAtURL:(id)arg1 options:(id)arg2 withKey:(id)arg3 error:(id*)arg4;
+ (bool)_replacePersistentStoreAtURL:(id)arg1 destinationOptions:(id)arg2 withPersistentStoreFromURL:(id)arg3 sourceOptions:(id)arg4 error:(id*)arg5;
+ (long long)bufferedAllocationsOverride;
+ (id)cachedModelForPersistentStoreWithURL:(id)arg1 options:(id)arg2 error:(id*)arg3;
+ (bool)coloredLoggingDefault;
+ (int)debugDefault;
+ (bool)dropPersistentHistoryforPersistentStoreWithURL:(id)arg1 options:(id)arg2 error:(id*)arg3;
+ (void)initialize;
+ (id)metadataForPersistentStoreWithURL:(id)arg1 error:(id*)arg2;
+ (id)metadataForPersistentStoreWithURL:(id)arg1 options:(id)arg2 error:(id*)arg3;
+ (Class)migrationManagerClass;
+ (Class)rowCacheClass;
+ (void)setColoredLoggingDefault:(bool)arg1;
+ (void)setDebugDefault:(int)arg1;
+ (bool)setMetadata:(id)arg1 forPersistentStoreWithURL:(id)arg2 error:(id*)arg3;
+ (bool)setMetadata:(id)arg1 forPersistentStoreWithURL:(id)arg2 options:(id)arg3 error:(id*)arg4;
+ (void)setTrackSQLiteDatabaseStatistics:(bool)arg1;
+ (bool)trackSQLiteDatabaseStatistics;
+ (bool)useConcurrentFetching;

- (id)_allOrderKeysForDestination:(id)arg1 inRelationship:(id)arg2 error:(id*)arg3;
- (bool)_hasActiveGenerations;
- (bool)_isCloudKitOptioned;
- (void)_mapsSyncDidUnregisterObjectsWithIDs_112229675:(id)arg1;
- (id)_newObjectIDForEntity:(id)arg1 referenceData64:(unsigned long long)arg2;
- (id)_newOrderedRelationshipInformationForRelationship:(id)arg1 forObjectWithID:(id)arg2 withContext:(id)arg3 error:(id*)arg4;
- (Class)_objectIDClass;
- (bool)_prepareForExecuteRequest:(id)arg1 withContext:(id)arg2 error:(id*)arg3;
- (void)_rebuildIndiciesSynchronously:(bool)arg1;
- (void)_setupObserver;
- (id)_storeInfoForEntityDescription:(id)arg1;
- (bool)_unload:(id*)arg1;
- (void)accommodatePresentedItemDeletionWithCompletionHandler:(id /* block */)arg1;
- (id)adapter;
- (id)ancillaryModels;
- (id)ancillarySQLModels;
- (id)createMapOfEntityNameToPKMaxForEntities:(id)arg1;
- (id)currentChangeToken;
- (id)currentQueryGeneration;
- (void)dealloc;
- (unsigned long long)entityIDForEntityDescription:(id)arg1;
- (id)executeRequest:(id)arg1 withContext:(id)arg2 error:(id*)arg3;
- (id)externalDataReferencesDirectory;
- (id)fileBackedFuturesDirectory;
- (bool)finishDeferredLightweightMigration:(bool)arg1 withError:(id*)arg2;
- (void)freeQueryGenerationWithIdentifier:(id)arg1;
- (bool)hasAncillaryModels;
- (id)identifier;
- (id)initWithPersistentStoreCoordinator:(id)arg1 configurationName:(id)arg2 URL:(id)arg3 options:(id)arg4;
- (bool)load:(id*)arg1;
- (bool)loadMetadata:(id*)arg1;
- (void)managedObjectContextDidRegisterObjectsWithIDs:(id)arg1;
- (void)managedObjectContextDidRegisterObjectsWithIDs:(id)arg1 generation:(id)arg2;
- (void)managedObjectContextDidUnregisterObjectsWithIDs:(id)arg1;
- (void)managedObjectContextDidUnregisterObjectsWithIDs:(id)arg1 generation:(id)arg2;
- (id)metadata;
- (id)model;
- (id)newObjectIDForEntity:(id)arg1 pk:(long long)arg2;
- (id)newValueForRelationship:(id)arg1 forObjectWithID:(id)arg2 withContext:(id)arg3 error:(id*)arg4;
- (id)newValuesForObjectWithID:(id)arg1 withContext:(id)arg2 error:(id*)arg3;
- (Class)objectIDFactoryForEntity:(id)arg1;
- (Class)objectIDFactoryForPersistentHistoryEntity:(id)arg1;
- (Class)objectIDFactoryForSQLEntity:(id)arg1;
- (id)obtainPermanentIDsForObjects:(id)arg1 error:(id*)arg2;
- (id)presentedItemOperationQueue;
- (id)presentedItemURL;
- (id)propertyNamesInHistoryChangeDataForEntityDescription:(id)arg1;
- (id)reopenQueryGenerationWithIdentifier:(id)arg1 error:(id*)arg2;
- (void)setExclusiveLockingMode:(bool)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setMetadata:(id)arg1;
- (void)setURL:(id)arg1;
- (bool)supportsConcurrentRequestHandling;
- (bool)supportsGenerationalQuerying;
- (id)type;
- (void)willRemoveFromPersistentStoreCoordinator:(id)arg1;

@end
