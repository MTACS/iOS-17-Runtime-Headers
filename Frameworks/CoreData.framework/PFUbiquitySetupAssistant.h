
@interface PFUbiquitySetupAssistant : NSObject {
    bool  _abortSetup;
    NSURL * _actualStoreFileURL;
    PFUbiquityBaseline * _baseline;
    bool  _baselineFileExistsInCloud;
    PFUbiquityKnowledgeVector * _baselineKV;
    bool  _cacheFilePresenterForUbiquityRoot;
    PFUbiquityContainerIdentifier * _containerIdentifier;
    bool  _didBaselineCopy;
    bool  _didMigrateBaseline;
    NSMutableDictionary * _entityNameToGidSet;
    PFUbiquitySwitchboardEntry * _entry;
    bool  _failSetup;
    NSError * _failSetupError;
    NSMutableDictionary * _gidToRid;
    bool  _gotAccountChange;
    bool  _gotExportNotification;
    bool  _hasContainerUUID;
    bool  _hasContainerUUIDInStore;
    bool  _hasLocalTransactionLogs;
    bool  _hasMigrationOptions;
    bool  _hasStoreMetadataEntry;
    bool  _hasStoreMetadataFile;
    bool  _hasUploadingBaseline;
    bool  _haveExistingUUIDMappings;
    int  _initialSyncComplete;
    NSObject<OS_dispatch_semaphore> * _initialSyncSemaphore;
    NSString * _localPeerID;
    PFUbiquityPeerReceipt * _localPeerReceipt;
    PFUbiquityPeerState * _localPeerState;
    PFUbiquityLocation * _localRootLocation;
    NSMutableSet * _logLocationsExportedDuringSideLoad;
    PFUbiquityKnowledgeVector * _metaKV;
    PFUbiquityMigrationAssistant * _migrationAssistant;
    PFUbiquityMigrationManager * _migrationManager;
    NSString * _modelVersionHash;
    bool  _monitorUploadingBaselineAsync;
    bool  _needsMetadataRecovery;
    bool  _needsMetadataWrite;
    bool  _notifyAboutSetupProgress;
    long long  _numSetupTries;
    NSMutableDictionary * _options;
    NSString * _preStoreContainerUUID;
    NSString * _previousModelVersionHash;
    NSPersistentStoreCoordinator * _psc;
    NSMutableArray * _queryLocations;
    bool  _reapUbiquitousLogs;
    PFUbiquityKnowledgeVector * _receiptKV;
    bool  _replayLogsSynchronously;
    bool  _respondToBaselineRoll;
    unsigned long long  _retryDelaySec;
    bool  _seedStore;
    NSURL * _seedStoreURL;
    int  _sideLoadLock;
    _PFUbiquityStack * _stack;
    NSPersistentStore * _store;
    bool  _storeFileExists;
    bool  _storeFileIsReadOnly;
    PFUbiquityKnowledgeVector * _storeKV;
    PFUbiquityStoreMetadata * _storeMetadata;
    NSMutableDictionary * _storeMetadataDict;
    NSString * _storeType;
    NSURL * _storeURL;
    bool  _storeWasMigrated;
    NSString * _ubiquityContainerIdentifier;
    bool  _ubiquityEnabled;
    <NSObject><NSCopying><NSCoding> * _ubiquityIdentityToken;
    NSString * _ubiquityName;
    PFUbiquityLocation * _ubiquityRootLocation;
    NSString * _ubiquityRootSubpath;
    NSURL * _ubiquityRootURL;
    bool  _useLocalAccount;
    bool  _usedExistingUUIDMapping;
    bool  _votedOffIsland;
}

- (void)coordinatorWillRemoveStore:(id)arg1;
- (void)dealloc;
- (void)exportedLog:(id)arg1;
- (id)init;
- (id)initWithPersistentStoreCoordinator:(id)arg1 andStoreOptions:(id)arg2 forPersistentStoreOfType:(id)arg3 atURL:(id)arg4;
- (void)ubiquityIdentityTokenChanged:(id)arg1;

@end
