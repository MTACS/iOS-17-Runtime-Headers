
@interface SWHighlightCenter : NSObject <SLDServiceProxyDelegate, SLHighlightCenterAPIAdapting> {
    NSObject<OS_dispatch_queue> * __highlightArrayQueue;
    SLHighlightCenter * __highlightCenterAdapter;
    SLDServiceProxy * _cloudDocsServiceProxy;
    <SWHighlightCenterDelegate> * _delegate;
    NSCache * _fileURLToShareURLCache;
    NSArray * _highlights;
    NSCache * _identifierToCollaborationHighlightCache;
    SLDServiceProxy * _noticeServiceProxy;
    NSCache * _pendingClearCache;
    NSCache * _pendingEventCache;
    NSCache * _supplementaryURLToCollaborationHighlightCache;
    NSCache * _urlToCollaborationHighlightCache;
    NSCache * _urlToHighlightCache;
    NSString * _variant;
}

@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *_highlightArrayQueue;
@property (nonatomic, readonly) SLHighlightCenter *_highlightCenterAdapter;
@property (nonatomic, retain) SLDServiceProxy *cloudDocsServiceProxy;
@property (nonatomic) <SWHighlightCenterDelegate> *delegate;
@property (nonatomic, retain) NSCache *fileURLToShareURLCache;
@property (nonatomic, readonly, copy) NSArray *highlights;
@property (nonatomic, readonly) double highlightsRankingScore;
@property (nonatomic, retain) NSCache *identifierToCollaborationHighlightCache;
@property (nonatomic, retain) SLDServiceProxy *noticeServiceProxy;
@property (nonatomic, retain) NSCache *pendingClearCache;
@property (nonatomic, retain) NSCache *pendingEventCache;
@property (nonatomic, retain) NSCache *supplementaryURLToCollaborationHighlightCache;
@property (nonatomic, retain) NSCache *urlToCollaborationHighlightCache;
@property (nonatomic, retain) NSCache *urlToHighlightCache;
@property (nonatomic, retain) NSString *variant;

+ (id)SWVariantDefault;
+ (id)SWVariantNewsToday;
+ (id)highlightCollectionTitle;
+ (bool)isEnabled;
+ (bool)isSystemCollaborationSupportAvailable;
+ (id)noticeHandlerQueue;
+ (id)shareURLFetchQueue;
+ (id)signingQueue;

- (void).cxx_destruct;
- (id)_attributionIdentifiersForHighlight:(id)arg1;
- (void)_disconnectNoticeServiceConnectionIfNecessary;
- (id)_fetchHighlightFromAnyCacheForURL:(id)arg1;
- (void)_getCollaborationHighlightForShareURL:(id)arg1 fileURL:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)_getShareURLForFileURL:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)_highlightArrayQueue;
- (id)_highlightCenterAdapter;
- (void)_notifyDelegateHighlightsDidChange;
- (void)_postNoticeForHighlightEvent:(id)arg1;
- (void)_processClearNoticesFor:(id)arg1;
- (void)_processPendingHighlightEvent:(id)arg1;
- (id)_sandboxExtensionIssueFileURL:(id)arg1 withAuditToken:(struct { unsigned int x1[8]; })arg2;
- (void)_sendCurrentClearNoticesToDaemonAndDisconnect;
- (void)_sendCurrentNoticesToDaemonAndDisconnect;
- (void)apiAdapterHighlightsDidChange:(id)arg1;
- (void)clearNoticesForHighlight:(id)arg1;
- (id)cloudDocsServiceProxy;
- (id)collaborationHighlightForIdentifier:(id)arg1 error:(id*)arg2;
- (id)collaborationHighlightForURL:(id)arg1 error:(id*)arg2;
- (id)delegate;
- (id)fetchAttributionForAttributionIdentifier:(id)arg1;
- (id)fetchAttributionsForHighlight:(id)arg1;
- (id)fileURLToShareURLCache;
- (void)getCollaborationHighlightForURL:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)getHighlightForURL:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)getShareURLForFileURL:(id)arg1;
- (void)getSignedIdentityProofForCollaborationHighlight:(id)arg1 usingData:(id)arg2 completionHandler:(id /* block */)arg3;
- (id)highlightForURL:(id)arg1 error:(id*)arg2;
- (id)highlights;
- (double)highlightsRankingScore;
- (id)identifierToCollaborationHighlightCache;
- (id)init;
- (id)initWithAppIdentifier:(id)arg1;
- (id)noticeServiceProxy;
- (id)originalSenderForCollaborationHighlight:(id)arg1;
- (id)pendingClearCache;
- (id)pendingEventCache;
- (void)postNoticeForEvent:(id)arg1;
- (void)postNoticeForHighlightEvent:(id)arg1;
- (void)serviceProxyDidConnect:(id)arg1;
- (void)serviceProxyDidDisconnect:(id)arg1;
- (void)setCloudDocsServiceProxy:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setFileURLToShareURLCache:(id)arg1;
- (void)setIdentifierToCollaborationHighlightCache:(id)arg1;
- (void)setNoticeServiceProxy:(id)arg1;
- (void)setPendingClearCache:(id)arg1;
- (void)setPendingEventCache:(id)arg1;
- (void)setSupplementaryURLToCollaborationHighlightCache:(id)arg1;
- (void)setUrlToCollaborationHighlightCache:(id)arg1;
- (void)setUrlToHighlightCache:(id)arg1;
- (void)setVariant:(id)arg1;
- (id)supplementaryURLToCollaborationHighlightCache;
- (id)urlToCollaborationHighlightCache;
- (id)urlToHighlightCache;
- (id)variant;

@end
