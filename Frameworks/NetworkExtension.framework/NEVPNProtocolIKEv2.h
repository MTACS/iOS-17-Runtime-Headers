
@interface NEVPNProtocolIKEv2 : NEVPNProtocolIPSec {
    NEVPNIKEv2SecurityAssociationParameters * _IKESecurityAssociationParameters;
    NSArray * _IKESecurityAssociationParametersArray;
    long long  _certificateType;
    NEVPNIKEv2SecurityAssociationParameters * _childSecurityAssociationParameters;
    NSArray * _childSecurityAssociationParametersArray;
    long long  _deadPeerDetectionRate;
    bool  _disableInitialContact;
    bool  _disableMOBIKE;
    int  _disableMOBIKERetryOnWake;
    bool  _disableRedirect;
    bool  _enableFallback;
    bool  _enablePFS;
    bool  _enableRevocationCheck;
    long long  _maximumTLSVersion;
    long long  _minimumTLSVersion;
    unsigned long long  _mtu;
    int  _natKeepAliveOffloadEnable;
    int  _natKeepAliveOffloadInterval;
    bool  _opportunisticPFS;
    NSString * _pluginType;
    NSString * _providerBundleIdentifier;
    NSString * _serverCertificateCommonName;
    NSString * _serverCertificateIssuerCommonName;
    bool  _strictRevocationCheck;
    long long  _tunnelKind;
    bool  _useConfigurationAttributeInternalIPSubnet;
    bool  _wakeForRekey;
}

@property (readonly) NEVPNIKEv2SecurityAssociationParameters *IKESecurityAssociationParameters;
@property (retain) NSArray *IKESecurityAssociationParametersArray;
@property long long certificateType;
@property (readonly) NEVPNIKEv2SecurityAssociationParameters *childSecurityAssociationParameters;
@property (retain) NSArray *childSecurityAssociationParametersArray;
@property long long deadPeerDetectionRate;
@property bool disableInitialContact;
@property bool disableMOBIKE;
@property int disableMOBIKERetryOnWake;
@property bool disableRedirect;
@property bool enableFallback;
@property bool enablePFS;
@property bool enableRevocationCheck;
@property long long maximumTLSVersion;
@property long long minimumTLSVersion;
@property unsigned long long mtu;
@property int natKeepAliveOffloadEnable;
@property int natKeepAliveOffloadInterval;
@property bool opportunisticPFS;
@property (readonly) NSString *pluginType;
@property (copy) NSString *providerBundleIdentifier;
@property (copy) NSString *serverCertificateCommonName;
@property (copy) NSString *serverCertificateIssuerCommonName;
@property bool strictRevocationCheck;
@property long long tunnelKind;
@property bool useConfigurationAttributeInternalIPSubnet;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)IKESecurityAssociationParameters;
- (id)IKESecurityAssociationParametersArray;
- (long long)certificateType;
- (bool)checkValidityAndCollectErrors:(id)arg1;
- (id)childSecurityAssociationParameters;
- (id)childSecurityAssociationParametersArray;
- (id)copyLegacyDictionary;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (long long)deadPeerDetectionRate;
- (id)descriptionWithIndent:(int)arg1 options:(unsigned long long)arg2;
- (bool)disableInitialContact;
- (bool)disableMOBIKE;
- (int)disableMOBIKERetryOnWake;
- (bool)disableRedirect;
- (bool)enableFallback;
- (bool)enablePFS;
- (bool)enableRevocationCheck;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (long long)maximumTLSVersion;
- (long long)minimumTLSVersion;
- (unsigned long long)mtu;
- (int)natKeepAliveOffloadEnable;
- (int)natKeepAliveOffloadInterval;
- (bool)opportunisticPFS;
- (id)pluginType;
- (id)providerBundleIdentifier;
- (id)serverCertificateCommonName;
- (id)serverCertificateIssuerCommonName;
- (void)setCertificateType:(long long)arg1;
- (void)setChildSecurityAssociationParametersArray:(id)arg1;
- (void)setDeadPeerDetectionRate:(long long)arg1;
- (void)setDisableInitialContact:(bool)arg1;
- (void)setDisableMOBIKE:(bool)arg1;
- (void)setDisableMOBIKERetryOnWake:(int)arg1;
- (void)setDisableRedirect:(bool)arg1;
- (void)setEnableFallback:(bool)arg1;
- (void)setEnablePFS:(bool)arg1;
- (void)setEnableRevocationCheck:(bool)arg1;
- (void)setIKESecurityAssociationParametersArray:(id)arg1;
- (void)setMaximumTLSVersion:(long long)arg1;
- (void)setMinimumTLSVersion:(long long)arg1;
- (void)setMtu:(unsigned long long)arg1;
- (void)setNatKeepAliveOffloadEnable:(int)arg1;
- (void)setNatKeepAliveOffloadInterval:(int)arg1;
- (void)setOpportunisticPFS:(bool)arg1;
- (void)setProviderBundleIdentifier:(id)arg1;
- (void)setServerCertificateCommonName:(id)arg1;
- (void)setServerCertificateIssuerCommonName:(id)arg1;
- (void)setStrictRevocationCheck:(bool)arg1;
- (void)setTunnelKind:(long long)arg1;
- (void)setUseConfigurationAttributeInternalIPSubnet:(bool)arg1;
- (bool)strictRevocationCheck;
- (long long)tunnelKind;
- (bool)useConfigurationAttributeInternalIPSubnet;

@end
