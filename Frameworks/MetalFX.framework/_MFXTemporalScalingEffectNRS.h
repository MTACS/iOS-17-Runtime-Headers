
@interface _MFXTemporalScalingEffectNRS : _MTLFXTemporalScaler <MTLFXTemporalScalerSPI> {
    <MTLTexture> * _colorTexture;
    unsigned long long  _colorTextureFormat;
    unsigned long long  _colorTextureUsage;
    struct { 
        /* Warning: Unrecognized filer type: ']' using 'void*' */ void*columns[4]; 
    }  _currentViewToClipMatrix;
    struct { 
        /* Warning: Unrecognized filer type: ']' using 'void*' */ void*columns[4]; 
    }  _currentWorldToViewMatrix;
    <MTLTexture> * _debugTexture;
    <MTLTexture> * _depthTexture;
    unsigned long long  _depthTextureFormat;
    unsigned long long  _depthTextureUsage;
    <MTLTexture> * _exposureTexture;
    <MTLFence> * _fence;
    unsigned long long  _inputContentHeight;
    float  _inputContentMaxScale;
    float  _inputContentMinScale;
    unsigned long long  _inputContentWidth;
    unsigned long long  _inputHeight;
    unsigned long long  _inputWidth;
    struct { 
        float emaFactor; 
        <MTLBuffer> *prevExposure; 
        <MTLBuffer> *currExposure; 
        <MTLBuffer> *lumaLogSums; 
        <MTLComputePipelineState> *lumaLogSumKernel; 
        <MTLComputePipelineState> *lumaLogSumToExposureKernel; 
        <MTLComputePipelineState> *exposureToBufferKernel; 
    }  _internalExposure;
    struct { 
        <MTLTexture> *prevHistory0; 
        <MTLTexture> *prevHistory1; 
        <MTLTexture> *currHistory0; 
        <MTLTexture> *currHistory1; 
        <MTLComputePipelineState> *kernel; 
        <MTLRenderPipelineState> *tileKernel; 
        bool kernelUsesImageblock; 
        bool emulateSRGB; 
    }  _internalOutputResolution;
    struct { 
        <MTLTexture> *colorRangeReduced; 
        <MTLTexture> *dilatedFlow; 
        <MTLTexture> *pixelData; 
        <MTLTexture> *variance0; 
        <MTLTexture> *variance1; 
        <MTLTexture> *variance2; 
        <MTLComputePipelineState> *kernel; 
        <MTLRenderPipelineState> *tileKernel; 
        bool kernelUsesImageblock; 
    }  _internalRenderResolution;
    <MTLBuffer> * _internal_is_history_invalid;
    void _jitterOffset;
    <MTLTexture> * _motionTexture;
    unsigned long long  _motionTextureFormat;
    unsigned long long  _motionTextureUsage;
    void _motionVectorScale;
    unsigned long long  _outputHeight;
    <MTLTexture> * _outputTexture;
    unsigned long long  _outputTextureFormat;
    unsigned long long  _outputTextureUsage;
    unsigned long long  _outputWidth;
    float  _preExposure;
    struct CGPoint { 
        double x; 
        double y; 
    }  _previousJitterOffset;
    struct { 
        /* Warning: Unrecognized filer type: ']' using 'void*' */ void*columns[4]; 
    }  _previousViewToClipMatrix;
    struct { 
        /* Warning: Unrecognized filer type: ']' using 'void*' */ void*columns[4]; 
    }  _previousWorldToViewMatrix;
    bool  _reset;
    bool  _reversedDepth;
}

@property (nonatomic, retain) <MTLTexture> *colorTexture;
@property (nonatomic, readonly) unsigned long long colorTextureFormat;
@property (nonatomic, readonly) unsigned long long colorTextureUsage;
@property (nonatomic) struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; } currentViewToClipMatrix;
@property (nonatomic) struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; } currentWorldToViewMatrix;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, retain) <MTLTexture> *debugTexture;
@property (getter=isDepthReversed, nonatomic) bool depthReversed;
@property (nonatomic, retain) <MTLTexture> *depthTexture;
@property (nonatomic, readonly) unsigned long long depthTextureFormat;
@property (nonatomic, readonly) unsigned long long depthTextureUsage;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) <MTLTexture> *exposureTexture;
@property (nonatomic, retain) <MTLFence> *fence;
@property (readonly) unsigned long long hash;
@property (nonatomic) unsigned long long inputContentHeight;
@property (nonatomic, readonly) float inputContentMaxScale;
@property (nonatomic, readonly) float inputContentMinScale;
@property (nonatomic) unsigned long long inputContentWidth;
@property (nonatomic, readonly) unsigned long long inputHeight;
@property (nonatomic, readonly) unsigned long long inputWidth;
@property (nonatomic) float jitterOffsetX;
@property (nonatomic) float jitterOffsetY;
@property (nonatomic, retain) <MTLTexture> *motionTexture;
@property (nonatomic, readonly) unsigned long long motionTextureFormat;
@property (nonatomic, readonly) unsigned long long motionTextureUsage;
@property (nonatomic) float motionVectorScaleX;
@property (nonatomic) float motionVectorScaleY;
@property (nonatomic, readonly) unsigned long long outputHeight;
@property (nonatomic, retain) <MTLTexture> *outputTexture;
@property (nonatomic, readonly) unsigned long long outputTextureFormat;
@property (nonatomic, readonly) unsigned long long outputTextureUsage;
@property (nonatomic, readonly) unsigned long long outputWidth;
@property (nonatomic) float preExposure;
@property (nonatomic) struct CGPoint { double x1; double x2; } previousJitterOffset;
@property (nonatomic) struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; } previousViewToClipMatrix;
@property (nonatomic) struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; } previousWorldToViewMatrix;
@property (nonatomic) bool reset;
@property (readonly) Class superclass;

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)colorTexture;
- (unsigned long long)colorTextureFormat;
- (unsigned long long)colorTextureUsage;
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })currentViewToClipMatrix;
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })currentWorldToViewMatrix;
- (id)debugTexture;
- (id)depthTexture;
- (unsigned long long)depthTextureFormat;
- (unsigned long long)depthTextureUsage;
- (void)encodeToCommandBuffer:(id)arg1;
- (void)encodeToCommandQueue:(id)arg1;
- (id)exposureTexture;
- (id)fence;
- (id)initWithDevice:(id)arg1 descriptor:(id)arg2;
- (unsigned long long)inputContentHeight;
- (float)inputContentMaxScale;
- (float)inputContentMinScale;
- (unsigned long long)inputContentWidth;
- (unsigned long long)inputHeight;
- (unsigned long long)inputWidth;
- (bool)isDepthReversed;
- (struct CGPoint { double x1; double x2; })jitterOffset;
- (float)jitterOffsetX;
- (float)jitterOffsetY;
- (id)motionTexture;
- (unsigned long long)motionTextureFormat;
- (unsigned long long)motionTextureUsage;
- (struct CGPoint { double x1; double x2; })motionVectorScale;
- (float)motionVectorScaleX;
- (float)motionVectorScaleY;
- (unsigned long long)outputHeight;
- (id)outputTexture;
- (unsigned long long)outputTextureFormat;
- (unsigned long long)outputTextureUsage;
- (unsigned long long)outputWidth;
- (float)preExposure;
- (struct CGPoint { double x1; double x2; })previousJitterOffset;
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })previousViewToClipMatrix;
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })previousWorldToViewMatrix;
- (bool)reset;
- (bool)reversedDepth;
- (void)setColorTexture:(id)arg1;
- (void)setCurrentViewToClipMatrix:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })arg1;
- (void)setCurrentWorldToViewMatrix:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })arg1;
- (void)setDebugTexture:(id)arg1;
- (void)setDepthReversed:(bool)arg1;
- (void)setDepthTexture:(id)arg1;
- (void)setExposureTexture:(id)arg1;
- (void)setFence:(id)arg1;
- (void)setInputContentHeight:(unsigned long long)arg1;
- (void)setInputContentWidth:(unsigned long long)arg1;
- (void)setJitterOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)setJitterOffsetX:(float)arg1;
- (void)setJitterOffsetY:(float)arg1;
- (void)setMotionTexture:(id)arg1;
- (void)setMotionVectorScale:(struct CGPoint { double x1; double x2; })arg1;
- (void)setMotionVectorScaleX:(float)arg1;
- (void)setMotionVectorScaleY:(float)arg1;
- (void)setOutputTexture:(id)arg1;
- (void)setPreExposure:(float)arg1;
- (void)setPreviousJitterOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)setPreviousViewToClipMatrix:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })arg1;
- (void)setPreviousWorldToViewMatrix:(struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })arg1;
- (void)setReset:(bool)arg1;
- (void)setReversedDepth:(bool)arg1;

@end
