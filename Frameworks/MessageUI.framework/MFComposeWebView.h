
@interface MFComposeWebView : WKWebView <MFComposeBodyFieldObserver, MFMailMenuCommandProvider, WKNavigationDelegate, WKUIDelegatePrivate, _WKInputDelegate> {
    bool  __didReloadInputAssistantItemOnFocus;
    bool  __didUpdateInputAssistantItem;
    NSArray * __leadingInputAssistantItemGroups;
    NSArray * __trailingInputAssistantItemGroups;
    NSMutableDictionary * _attachmentCIDsByIdentifier;
    bool  _attachmentDataMissingAlertDisplayed;
    unsigned long long  _attachmentSequenceNumber;
    NSMutableDictionary * _attachmentsByUniqueIdentifier;
    _WKRemoteObjectInterface * _bodyFieldObserverInterface;
    <MFComposeBodyFieldController> * _bodyFieldProxy;
    <MFComposeWebViewDelegate> * _composeWebViewDelegate;
    NSString * _compositionContextID;
    bool  _dirty;
    unsigned long long  _dirtyChangeIgnoreCount;
    unsigned long long  _imageCount;
    UIView * _inputViewForPreservingFocus;
    bool  _isFinishing;
    bool  _isQuickReply;
    <MFMailComposeViewDelegate> * _mailComposeViewDelegate;
    UIButton * _makeLinkAccessoryButton;
    NSArray * _originalAttachmentWrappers;
    bool  _originalAttachmentsWereRestored;
    UIBarButtonItemGroup * _photoAndCameraGroup;
    NSMutableDictionary * _richLinkActivityIndicators;
    _WKRemoteObjectInterface * _richLinkGeneratorInterface;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _richLinkSourceRect;
    NSArray * _selectedAttachmentIdentifiers;
    bool  _selectionContainsLink;
    bool  _shouldShowStandardButtons;
    <MFMailSignatureController> * _signatureControllerProxy;
    UIBarButtonItem * _textFromCameraButtonItem;
}

@property (nonatomic, retain) NSArray *_leadingInputAssistantItemGroups;
@property (nonatomic, retain) NSArray *_trailingInputAssistantItemGroups;
@property (nonatomic, readonly) bool allowsAttachmentElements;
@property (nonatomic) <MFComposeWebViewDelegate> *composeWebViewDelegate;
@property (nonatomic) NSString *compositionContextID;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (getter=isDirty, nonatomic) bool dirty;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) UIView *inputViewForPreservingFocus;
@property (nonatomic) bool isQuickReply;
@property (nonatomic) <MFMailComposeViewDelegate> *mailComposeViewDelegate;
@property (nonatomic, retain) UIBarButtonItemGroup *photoAndCameraGroup;
@property (nonatomic, retain) NSMutableDictionary *richLinkActivityIndicators;
@property (nonatomic, readonly) <MFMailSignatureController> *signatureControllerProxy;
@property (readonly) Class superclass;
@property (nonatomic, retain) UIBarButtonItem *textFromCameraButtonItem;

+ (id)_basicWebViewConfiguration;
+ (id)_webViewConfiguration:(bool)arg1;
+ (id)menuCommands;
+ (void)setURLCacheBlock:(id /* block */)arg1;

- (void).cxx_destruct;
- (void)_addAttachment:(id)arg1;
- (void)_addContextMenusToBuilder:(id)arg1;
- (id)_addInlineAttachmentWithData:(id)arg1 fileName:(id)arg2 type:(id)arg3 contentID:(id)arg4;
- (id)_attachmentInfoByIdentifier;
- (id)_attachmentInfoByURL;
- (id)_bodyFieldProxy;
- (bool)_canPerformCommandAction:(SEL)arg1 withSender:(id)arg2;
- (void)_captureTextFromCamera;
- (void)_changeQuoteLevelBy:(long long)arg1;
- (void)_close;
- (void)_composeWebView:(id)arg1 composeBodyIsEmpty:(bool)arg2;
- (void)_composeWebView:(id)arg1 didChangeHeight:(double)arg2;
- (void)_decreaseQuoteLevel:(id)arg1;
- (void)_decreaseQuoteLevelKeyCommandInvoked:(id)arg1;
- (void)_didTapAddLink:(id)arg1;
- (void)_didTapCameraButton:(id)arg1;
- (void)_didTapEditLink:(id)arg1;
- (void)_didTapEditTextDescription:(id)arg1;
- (void)_didTapInsertDrawing:(id)arg1;
- (void)_didTapInsertDrawingOrMarkupButton:(id)arg1;
- (void)_didTapInsertPhotoButton:(id)arg1;
- (void)_didTapMarkupButton:(id)arg1;
- (void)_didTapRemoveLink;
- (id)_filenameForVideoAttachmentAtURL:(id)arg1;
- (void)_findInteraction:(id)arg1 navigatorPlacementWillChange:(id)arg2;
- (id)_findInteractionScrollViewForInsetAdjustment:(id)arg1;
- (bool)_getExtensionAndMimeTypeForImageData:(id)arg1 outExtension:(id*)arg2 outMimeType:(id*)arg3;
- (void)_importDocumentCommandInvoked:(id)arg1;
- (void)_increaseQuoteLevel:(id)arg1;
- (void)_increaseQuoteLevelKeyCommandInvoked:(id)arg1;
- (void)_insertDocumentFromData:(id)arg1 isImage:(bool)arg2 contentID:(id)arg3;
- (id)_leadingInputAssistantItemGroups;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_linkAccessoryButtonFrameForSourceRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_mailComposeEditingLeadingInputAssistantGroups;
- (id)_mailComposeEditingTrailingInputAssistantGroups;
- (id)_makeAttachmentDataWithFileURL:(id)arg1 type:(id)arg2;
- (id)_makeRichLinkTemplateButtonWithOrigin:(struct CGPoint { double x1; double x2; })arg1;
- (void)_menuDidHide:(id)arg1;
- (void)_pasteAsQuotationKeyCommandInvoked:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_rectFromMessageDict:(id)arg1;
- (void)_removeAttachment:(id)arg1;
- (void)_removeInlineAttachment:(id)arg1;
- (void)_scanDocumentCommandInvoked:(id)arg1;
- (bool)_shouldShowAddLinkButton;
- (bool)_shouldShowInsertPhotosButton;
- (bool)_shouldShowMarkupButton;
- (void)_showmakeLinkAccessoryButton;
- (bool)_sourceIsManaged;
- (id)_textInputTraits;
- (id)_trailingInputAssistantItemGroups;
- (long long)_webView:(id)arg1 dataOwnerForDragSession:(id)arg2;
- (long long)_webView:(id)arg1 dataOwnerForDropSession:(id)arg2;
- (long long)_webView:(id)arg1 decidePolicyForFocusedElement:(id)arg2;
- (void)_webView:(id)arg1 didChangeFontAttributes:(id)arg2;
- (void)_webView:(id)arg1 didInsertAttachment:(id)arg2 withSource:(id)arg3;
- (void)_webView:(id)arg1 didInvalidateDataForAttachment:(id)arg2;
- (void)_webView:(id)arg1 didRemoveAttachment:(id)arg2;
- (void)_webView:(id)arg1 didStartInputSession:(id)arg2;
- (void)_webView:(id)arg1 takeFocus:(long long)arg2;
- (void)_webView:(id)arg1 willStartInputSession:(id)arg2;
- (void)addMailAttributesBeforeDisplayHidingTrailingEmptyQuotes:(bool)arg1 shouldQuote:(bool)arg2;
- (bool)allowsAttachmentElements;
- (void)appendMarkupString:(id)arg1 quote:(bool)arg2;
- (void)appendOrReplace:(id)arg1 withMarkupString:(id)arg2 quote:(bool)arg3 completion:(id /* block */)arg4;
- (void)attachmentTapped:(id)arg1;
- (bool)becomeFirstResponder;
- (void)buildMenuWithBuilder:(id)arg1;
- (bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)changeQuoteLevel:(long long)arg1;
- (void)composeBodyFieldAddAttachmentWithData:(id)arg1 filename:(id)arg2 mimeType:(id)arg3 uniqueID:(id)arg4;
- (void)composeBodyFieldAddLinkPreviewsEnabled:(id /* block */)arg1;
- (void)composeBodyFieldDidChange;
- (void)composeBodyFieldDidThrowException:(id)arg1;
- (void)composeBodyFieldIsDirtyChanged:(bool)arg1;
- (void)composeBodyFieldQuickReplyEnabled:(id /* block */)arg1;
- (void)composeBodyFieldSelectedLinkTextDidChange;
- (void)composeBodyFieldSelectionContainsLinkStateDidChange:(bool)arg1;
- (void)composeBodyIsEmpty:(bool)arg1;
- (id)composeWebViewDelegate;
- (id)compositionContextID;
- (void)compositionDidFailToFinish;
- (void)compositionWillFinish;
- (id)containsRichText;
- (id)contentIDsForMediaAttachments;
- (void)enableQuickReply:(bool)arg1;
- (void)getHTMLDataObject:(id /* block */)arg1;
- (void)getHTMLDataObjectRemovingSignature:(bool)arg1 completion:(id /* block */)arg2;
- (void)getHTMLDataObjectRemovingSignature:(bool)arg1 removeQuotes:(bool)arg2 completion:(id /* block */)arg3;
- (void)hideMakeLinkAccessoryButton;
- (id)htmlString;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 isQuickReply:(bool)arg2;
- (id)inputView;
- (id)inputViewForPreservingFocus;
- (void)insertDocumentWithData:(id)arg1 fileName:(id)arg2 mimeType:(id)arg3 contentID:(id)arg4;
- (void)insertDocumentWithURL:(id)arg1 isDrawingFile:(bool)arg2;
- (void)insertPhotoOrVideoWithAssetIdentifier:(id)arg1 infoDictionary:(id)arg2 completion:(id /* block */)arg3;
- (void)insertRichLinkWithURL:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)insertScannedDocumentWithData:(id)arg1;
- (bool)isDirty;
- (bool)isQuickReply;
- (id)keyCommands;
- (id)mailComposeViewDelegate;
- (id)makeLinkAccessoryButton;
- (void)makeRichLinkFromSelection;
- (void)markupSelectedAttachment;
- (id)mimeTypeForFilename:(id)arg1;
- (id)nextAttachmentName;
- (void)pasteRichLink;
- (id)photoAndCameraGroup;
- (void)placeCaretAtStartOfBodyField;
- (id)plainTextContent;
- (void)prepareDataForDocumentAtURLForInsertion:(id)arg1 completion:(id /* block */)arg2;
- (void)prependMarkupString:(id)arg1 quote:(bool)arg2;
- (void)prependPreamble:(id)arg1 quote:(bool)arg2;
- (void)prependString:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rectOfElementWithID:(id)arg1;
- (void)releaseFocusAfterDismissing:(bool)arg1;
- (void)removeMediaWithAssetIdentifier:(id)arg1;
- (void)removeRichLinkFromSelection;
- (void)replaceAttachment:(id)arg1 withDocumentAtURL:(id)arg2 completion:(id /* block */)arg3;
- (void)replaceFilenamePlaceholderWithAttachment:(id)arg1 fileName:(id)arg2 mimeType:(id)arg3 contentID:(id)arg4;
- (void)replaceImagesIfNecessary;
- (bool)resignFirstResponder;
- (void)retainFocusAfterPresenting;
- (id)richLinkActivityIndicators;
- (void)richLinkDidFinishLoading:(id)arg1;
- (void)richLinkDidStartLoading:(id)arg1;
- (void)scaleImagesToScale:(unsigned long long)arg1;
- (void)selectedAttachmentIdentifiersDidChange:(id)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })selectedRange;
- (void)setCaretPosition:(unsigned long long)arg1;
- (void)setComposeWebViewDelegate:(id)arg1;
- (void)setCompositionContextID:(id)arg1;
- (void)setDirty:(bool)arg1;
- (void)setInputViewForPreservingFocus:(id)arg1;
- (void)setIsQuickReply:(bool)arg1;
- (void)setMailComposeViewDelegate:(id)arg1;
- (void)setMarkupString:(id)arg1;
- (void)setMarkupString:(id)arg1 quote:(bool)arg2;
- (void)setOriginalAttachmentInfo:(id)arg1;
- (void)setPhotoAndCameraGroup:(id)arg1;
- (void)setPrefersFirstLineSelection;
- (void)setReplacementFilenamesByContentID:(id)arg1;
- (void)setRichLinkActivityIndicators:(id)arg1;
- (void)setTextFromCameraButtonItem:(id)arg1;
- (void)set_leadingInputAssistantItemGroups:(id)arg1;
- (void)set_trailingInputAssistantItemGroups:(id)arg1;
- (void)showOriginalAttachments;
- (void)showRichLinkAccessoryButtonForExistingRichLink:(bool)arg1 message:(id)arg2;
- (id)signatureControllerProxy;
- (void)stripCustomBodyIdentifiers;
- (id)textFromCameraButtonItem;
- (void)unscaleImages;
- (void)updateInputAssistantItem;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(id /* block */)arg3;

@end
