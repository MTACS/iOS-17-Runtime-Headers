
@interface QLTextItemViewController : QLItemViewController <QLPrintingProtocol, UIColorPickerViewControllerDelegate, UIFontPickerViewControllerDelegate, UIPickerViewDataSource, UIPickerViewDelegate, UITextViewDelegate> {
    NSAttributedString * _content;
    bool  _isDocumentOpen;
    NSLayoutConstraint * _leftConstraint;
    UIPrintPageRenderer * _pageRenderer;
    UISimpleTextPrintFormatter * _printFormatter;
    NSLayoutConstraint * _rightConstraint;
    _TtC9QuickLook14QLTextDocument * _textDocument;
    UITextView * _textView;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property bool isDocumentOpen;
@property (readonly) UIPrintPageRenderer *pageRenderer;
@property (readonly) UISimpleTextPrintFormatter *printFormatter;
@property (readonly) Class superclass;
@property (nonatomic, readonly) _TtC9QuickLook14QLTextDocument *textDocument;
@property (nonatomic, readonly) UITextView *textView;

- (void).cxx_destruct;
- (bool)_documentAttributesContainTextColors:(id)arg1;
- (bool)_isContentPotentiallySuspicious:(id)arg1 context:(id)arg2;
- (void)_keyboardWillAppear:(id)arg1;
- (void)_keyboardWillDisappear:(id)arg1;
- (void)_loadDocumentContent;
- (void)_saveDocumentContentIfNeeded;
- (void)_saveTextIfEdited:(bool)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)_saveTextIfEditedWithEditedCopy:(id)arg1 shouldDismissAfterSaving:(bool)arg2 completionHandler:(id /* block */)arg3;
- (void)_setupTextViewColorsWithDocumentAttributes:(id)arg1;
- (void)_setupTextViewMarginsWithDocumentAttributes:(id)arg1;
- (void)_setupTextViewWithDocumentAttributes:(id)arg1;
- (id)_textInputShortcutsBarButtons;
- (void)_updateConstraintConstants:(bool)arg1;
- (void)_updateViewConstraintsFromKeyboardAppearanceInfo:(id)arg1 notificationName:(id)arg2;
- (bool)automaticallyUpdateScrollViewContentInset;
- (bool)automaticallyUpdateScrollViewContentOffset;
- (bool)automaticallyUpdateScrollViewIndicatorInset;
- (id)availableTextSizes;
- (void)buttonPressedWithIdentifier:(id)arg1 completionHandler:(id /* block */)arg2;
- (bool)canClickToToggleFullscreen;
- (bool)canPinchToDismiss;
- (bool)canSwipeToDismiss;
- (bool)canToggleFullScreen;
- (void)closeDocumentWithCompletionHandler:(id /* block */)arg1;
- (void)colorPickerViewController:(id)arg1 didSelectColor:(id)arg2 continuously:(bool)arg3;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })customEdgeInsets;
- (id)displayedDocumentURLForItem:(id)arg1;
- (void)fontPickerViewControllerDidPickFont:(id)arg1;
- (bool)isDocumentOpen;
- (void)loadPreviewControllerWithContents:(id)arg1 context:(id)arg2 completionHandler:(id /* block */)arg3;
- (long long)numberOfComponentsInPickerView:(id)arg1;
- (void)numberOfPagesWithSize:(struct CGSize { double x1; double x2; })arg1 completionHandler:(id /* block */)arg2;
- (void)openDocumentWithCompletionHandler:(id /* block */)arg1;
- (id)pageRenderer;
- (void)pdfDataForPageAtIndex:(long long)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)pickerView:(id)arg1 didSelectRow:(long long)arg2 inComponent:(long long)arg3;
- (long long)pickerView:(id)arg1 numberOfRowsInComponent:(long long)arg2;
- (id)pickerView:(id)arg1 titleForRow:(long long)arg2 forComponent:(long long)arg3;
- (long long)preferredWhitePointAdaptivityStyle;
- (void)prepareForDrawingPages:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 ofSize:(struct CGSize { double x1; double x2; })arg2;
- (void)presentColorPicker;
- (void)presentFontPicker;
- (void)presentTextSizePicker;
- (void)previewDidAppear:(bool)arg1;
- (void)previewWillAppear:(bool)arg1;
- (void)previewWillDisappear:(bool)arg1;
- (id)printFormatter;
- (id)printer;
- (void)provideCurrentPageAndVisibleRectWithCompletionHandler:(id /* block */)arg1;
- (id)registeredKeyCommands;
- (void)savePreviewEditedCopyWithCompletionHandler:(id /* block */)arg1;
- (id)scrollView;
- (void)setAppearance:(id)arg1 animated:(bool)arg2;
- (void)setIsDocumentOpen:(bool)arg1;
- (void)setUpDocumentWithItem:(id)arg1;
- (void)setUpTextInputShortcutsBar;
- (bool)shouldAllowEditingContents;
- (bool)shouldEditByCreatingCopy;
- (bool)shouldRecognizeGestureRecognizer:(id)arg1;
- (id)textDocument;
- (void)textDocumentChangedRemotely:(id)arg1;
- (void)textSizePickerDidCancel;
- (id)textView;
- (bool)textView:(id)arg1 shouldInteractWithURL:(id)arg2 inRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3;
- (id)toolbarButtonsForTraitCollection:(id)arg1;
- (void)updateSelectionAttributesWithColor:(id)arg1 oldColor:(id)arg2 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3 undoable:(bool)arg4;
- (void)updateSelectionAttributesWithFont:(id)arg1 oldFont:(id)arg2 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3 undoable:(bool)arg4;
- (void)updateTextWithColor:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 undoable:(bool)arg3;
- (void)updateTextWithColor:(id)arg1 undoable:(bool)arg2;
- (void)updateTextWithFont:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 undoable:(bool)arg3;
- (void)updateTextWithFont:(id)arg1 undoable:(bool)arg2;
- (void)updateTypingAttributesWithFont:(id)arg1 color:(id)arg2;
- (void)viewDidLoad;

@end
