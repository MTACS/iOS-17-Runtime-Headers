
@interface MPCloudController : NSObject {
    bool  _active;
    long long  _activeCount;
    MSVDistributedNotificationObserver * _addToPlaylistBehaviorChangedObserver;
    bool  _canDefaultMediaLibraryShowCloudContent;
    bool  _canShowCloudDownloadButtons;
    bool  _canShowCloudMusic;
    bool  _canShowCloudVideo;
    NSObject<ICCloudAvailability> * _cloudAvailabilityController;
    ICCloudClient * _cloudClient;
    NSObject<OS_dispatch_queue> * _cloudClientCallbackQueue;
    bool  _cloudEnabled;
    bool  _cloudEnabledValid;
    bool  _cloudLibraryInitialImport;
    bool  _cloudLibraryUpdateInProgress;
    bool  _cloudLockerAccount;
    bool  _initialImport;
    bool  _jaliscoInitialImport;
    bool  _jaliscoUpdateInProgress;
    int  _preferencesChangedNotifyToken;
    bool  _preferencesChangedNotifyTokenIsValid;
    bool  _purchaseHistoryAccount;
    NSObject<OS_dispatch_queue> * _queue;
    NSObject<OS_dispatch_queue> * _serialQueue;
    bool  _updateInProgress;
}

@property (getter=isActive, nonatomic, readonly) bool active;
@property (nonatomic) long long activeCount;
@property (nonatomic, readonly) MSVDistributedNotificationObserver *addToPlaylistBehaviorChangedObserver;
@property (nonatomic) bool canDefaultMediaLibraryShowCloudContent;
@property (nonatomic) bool canShowCloudDownloadButtons;
@property (nonatomic) bool canShowCloudMusic;
@property (nonatomic) bool canShowCloudVideo;
@property (nonatomic, readonly) NSObject<ICCloudAvailability> *cloudAvailabilityController;
@property (nonatomic, readonly) ICCloudClient *cloudClient;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *cloudClientCallbackQueue;
@property (getter=isCloudEnabled, nonatomic) bool cloudEnabled;
@property (getter=isCloudEnabledValid, nonatomic) bool cloudEnabledValid;
@property (getter=isCloudLibraryInitialImport, nonatomic) bool cloudLibraryInitialImport;
@property (getter=isCloudLibraryUpdateInProgress, nonatomic) bool cloudLibraryUpdateInProgress;
@property (getter=hasCloudLockerAccount, nonatomic) bool cloudLockerAccount;
@property (nonatomic, readonly) ICConnectionConfiguration *configuration;
@property (getter=isEnablingCloudLibraryDestructive, nonatomic, readonly) bool enablingCloudLibraryDestructive;
@property (getter=isEnhancedAudioAvailable, nonatomic, readonly) bool enhancedAudioAvailable;
@property (getter=isInitialImport, nonatomic) bool initialImport;
@property (nonatomic, readonly) bool isGeniusEnabled;
@property (getter=isJaliscoInitialImport, nonatomic) bool jaliscoInitialImport;
@property (getter=isJaliscoUpdateInProgress, nonatomic) bool jaliscoUpdateInProgress;
@property (nonatomic) int preferencesChangedNotifyToken;
@property (nonatomic) bool preferencesChangedNotifyTokenIsValid;
@property (getter=hasPurchaseHistoryAccount, nonatomic) bool purchaseHistoryAccount;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *serialQueue;
@property (getter=isUpdateInProgress, nonatomic) bool updateInProgress;
@property (nonatomic, readonly) ICUserIdentity *userIdentity;

+ (id)_controllerWithUserIdentity:(id)arg1 createIfRequired:(bool)arg2;
+ (void)_postNotificationName:(id)arg1 controller:(id)arg2;
+ (void)_postNotificationName:(id)arg1 controller:(id)arg2 userInfo:(id)arg3;
+ (id)controllerWithUserIdentity:(id)arg1;
+ (id)controllers;
+ (id)globalSerialQueue;
+ (bool)isMediaApplication;
+ (void)migrateCellularDataPreferencesIfNeeded;
+ (id)sharedCloudController;

- (void).cxx_destruct;
- (void)_becomeActiveAndWaitUntilDone:(bool)arg1;
- (void)_copyObservationStateFrom:(id)arg1;
- (bool)_handlesSameAccountAs:(id)arg1;
- (long long)_icFavoriteEntityTypeFromMPEntityType:(long long)arg1;
- (id)_initWithUserIdentity:(id)arg1;
- (void)_initializeUpdateInProgressState;
- (void)_loadIsSagaAuthenticatedWithCompletion:(id /* block */)arg1;
- (void)_performBlockOnControllerHandlingTheSameAccount:(id /* block */)arg1;
- (id)_referralForModelObject:(id)arg1;
- (void)_resignActive;
- (void)_setDateModified:(id)arg1 forPlaylistPersistentID:(long long)arg2;
- (long long)activeCount;
- (void)activeUserDidChangeNotification:(id)arg1;
- (void)addGeniusPlaylistWithPersistentID:(unsigned long long)arg1 name:(id)arg2 seedItemSagaIDs:(id)arg3 itemSagaIDs:(id)arg4 completionHandler:(id /* block */)arg5;
- (void)addItemWithSagaID:(unsigned long long)arg1 toPlaylistWithPersistentID:(unsigned long long)arg2 completionHandler:(id /* block */)arg3;
- (void)addStoreItemWithAdamID:(long long)arg1 completionHandler:(id /* block */)arg2;
- (void)addStoreItemWithAdamID:(long long)arg1 referralObject:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)addStoreItemWithAdamID:(long long)arg1 referralObject:(id)arg2 toPlaylistWithPersistentID:(unsigned long long)arg3 completionHandler:(id /* block */)arg4;
- (void)addStoreItemWithAdamID:(long long)arg1 toPlaylistWithPersistentID:(unsigned long long)arg2 completionHandler:(id /* block */)arg3;
- (void)addStorePlaylistWithGlobalID:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)addToPlaylistBehaviorChangedObserver;
- (void)authenticatedDidChangeNotification:(id)arg1;
- (void)becomeActive;
- (void)becomeActiveAndWaitUntilDone:(bool)arg1;
- (void)beginCollaborationUsingPlaylistWithPersistentID:(long long)arg1 sharingMode:(long long)arg2 completion:(id /* block */)arg3;
- (bool)canDefaultMediaLibraryShowCloudContent;
- (bool)canSetItemProperty:(id)arg1;
- (bool)canSetPlaylistProperty:(id)arg1;
- (bool)canShowCloudDownloadButtons;
- (void)canShowCloudDownloadButtonsDidChangeNotification:(id)arg1;
- (bool)canShowCloudMusic;
- (void)canShowCloudTracksDidChangeNotification:(id)arg1;
- (bool)canShowCloudVideo;
- (long long)cloudAddToPlaylistBehavior;
- (id)cloudAvailabilityController;
- (id)cloudClient;
- (id)cloudClientCallbackQueue;
- (id)configuration;
- (void)createPlaylistWithPersistentID:(unsigned long long)arg1 properties:(id)arg2 trackList:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)dealloc;
- (void)deprioritizeArtworkRequestForEntityPersistentID:(long long)arg1 entityType:(long long)arg2 artworkType:(long long)arg3 artworkSourceType:(long long)arg4;
- (id)description;
- (void)disableAutomaticDownloadsWithCompletionHandler:(id /* block */)arg1;
- (void)disableCloudLibraryWithCompletionHandler:(id /* block */)arg1;
- (void)disableCloudLibraryWithReason:(long long)arg1 completionHandler:(id /* block */)arg2;
- (void)editCollaborationWithPersistentID:(long long)arg1 properties:(id)arg2 trackEdits:(id)arg3 completion:(id /* block */)arg4;
- (void)enableAutomaticDownloadsWithCompletionHandler:(id /* block */)arg1;
- (void)enableCloudLibraryWithOptions:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)enableICMLErrorReasonChange:(id)arg1;
- (void)endCollaborationWithPersistentID:(long long)arg1 completion:(id /* block */)arg2;
- (void)favoriteAlbumWithPersistentID:(long long)arg1 cloudLibraryID:(id)arg2 time:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)favoriteArtistWithPersistentID:(long long)arg1 cloudLibraryID:(id)arg2 time:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)favoriteEntityWithPersistentID:(long long)arg1 sagaID:(long long)arg2 entityType:(long long)arg3 time:(id)arg4 completionHandler:(id /* block */)arg5;
- (void)favoriteEntityWithPersistentID:(long long)arg1 storeID:(long long)arg2 entityType:(long long)arg3 time:(id)arg4 completionHandler:(id /* block */)arg5;
- (void)favoritePlaylistWithPersistentID:(long long)arg1 globalID:(id)arg2 time:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)fetchRecommendedContentWithSeedTrackID:(long long)arg1 seedTrackIDType:(long long)arg2 count:(unsigned long long)arg3 completion:(id /* block */)arg4;
- (bool)hasCloudLockerAccount;
- (bool)hasProperNetworkConditionsToPlayMedia;
- (bool)hasProperNetworkConditionsToShowCloudMedia;
- (void)hasProperNetworkConditionsToShowCloudMediaDidChangeNotification:(id)arg1;
- (bool)hasPurchaseHistoryAccount;
- (bool)hasSetPreferenceForAutomaticDownloads;
- (void)hideItemsWithPurchaseHistoryIDs:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)init;
- (bool)isActive;
- (bool)isAutomaticDownloadsEnabled;
- (bool)isCellularDataRestricted;
- (void)isCellularDataRestrictedDidChangeNotification:(id)arg1;
- (bool)isCellularDataRestrictedForMusic;
- (bool)isCellularDataRestrictedForStoreApps;
- (bool)isCellularDataRestrictedForVideos;
- (bool)isCloudEnabled;
- (bool)isCloudEnabledValid;
- (bool)isCloudLibraryEnabled;
- (bool)isCloudLibraryInitialImport;
- (bool)isCloudLibraryUpdateInProgress;
- (bool)isEnablingCloudLibraryDestructive;
- (bool)isEnhancedAudioAvailable;
- (bool)isGeniusEnabled;
- (bool)isInitialImport;
- (bool)isJaliscoInitialImport;
- (bool)isJaliscoUpdateInProgress;
- (bool)isUpdateInProgress;
- (void)joinCollaborationWithGlobalPlaylistID:(id)arg1 invitationURL:(id)arg2 completion:(id /* block */)arg3;
- (void)loadArtworkForEntityPersistentID:(long long)arg1 entityType:(long long)arg2 artworkType:(long long)arg3 artworkSourceType:(long long)arg4 completionHandler:(id /* block */)arg5;
- (void)loadArtworkInfoForEntityPersistentID:(long long)arg1 entityType:(long long)arg2 artworkType:(long long)arg3 artworkSourceType:(long long)arg4 completionHandler:(id /* block */)arg5;
- (void)loadCloudMusicLibraryUpdateProgressWithCompletionHandler:(id /* block */)arg1;
- (void)loadGeniusItemsForSagaID:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (void)loadJaliscoLibraryUpdateProgressWithCompletionHandler:(id /* block */)arg1;
- (void)loadLastKnownEnableICMLErrorStatusWithCompletionHander:(id /* block */)arg1;
- (void)loadUpdateProgressWithCompletionHandler:(id /* block */)arg1;
- (int)preferencesChangedNotifyToken;
- (bool)preferencesChangedNotifyTokenIsValid;
- (void)processPendingKeyInvalidations;
- (void)publishPlaylistWithSagaID:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (id)queue;
- (void)removeCollaborators:(id)arg1 fromCollaborationWithPersistentID:(long long)arg2 completion:(id /* block */)arg3;
- (void)removeItemsWithSagaIDs:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)removePlaylistsWithSagaIDs:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)resetInvitationURLForCollaborationWithPersistentID:(long long)arg1 completion:(id /* block */)arg2;
- (void)resignActive;
- (void)respondToPendingCollaborator:(id)arg1 onCollaborationWithPersistentID:(long long)arg2 withApproval:(bool)arg3 completion:(id /* block */)arg4;
- (void)sdk_addItemWithSagaID:(unsigned long long)arg1 toPlaylistWithPersistentID:(unsigned long long)arg2 completionHandler:(id /* block */)arg3;
- (void)sdk_addStoreItemWithOpaqueID:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)sdk_addStoreItemWithOpaqueID:(id)arg1 toPlaylistWithPersistentID:(unsigned long long)arg2 completionHandler:(id /* block */)arg3;
- (void)sdk_createPlaylistWithPersistenID:(unsigned long long)arg1 properties:(id)arg2 tracklist:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)sdk_setPlaylistProperties:(id)arg1 trackList:(id)arg2 forPlaylistWithPersistentID:(unsigned long long)arg3 completionHandler:(id /* block */)arg4;
- (id)serialQueue;
- (void)setActiveCount:(long long)arg1;
- (void)setAlbumArtistProperties:(id)arg1 forEntityWithPersistentID:(long long)arg2 completionHandler:(id /* block */)arg3;
- (void)setAlbumProperties:(id)arg1 forEntityWithPersistentID:(long long)arg2 cloudLibraryID:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)setCanDefaultMediaLibraryShowCloudContent:(bool)arg1;
- (void)setCanShowCloudDownloadButtons:(bool)arg1;
- (void)setCanShowCloudMusic:(bool)arg1;
- (void)setCanShowCloudVideo:(bool)arg1;
- (void)setCloudAddToPlaylistBehavior:(long long)arg1 completionHandler:(id /* block */)arg2;
- (void)setCloudEnabled:(bool)arg1;
- (void)setCloudEnabledValid:(bool)arg1;
- (void)setCloudLibraryInitialImport:(bool)arg1;
- (void)setCloudLibraryUpdateInProgress:(bool)arg1;
- (void)setCloudLockerAccount:(bool)arg1;
- (void)setCollectionProperties:(id)arg1 forCollectionWithPersistentID:(long long)arg2 groupingType:(long long)arg3 completionHandler:(id /* block */)arg4;
- (void)setInitialImport:(bool)arg1;
- (void)setItemProperties:(id)arg1 forPurchaseHistoryID:(unsigned long long)arg2;
- (void)setItemProperties:(id)arg1 forSagaID:(unsigned long long)arg2;
- (void)setJaliscoInitialImport:(bool)arg1;
- (void)setJaliscoUpdateInProgress:(bool)arg1;
- (void)setLikedState:(long long)arg1 forAlbumWithStoreID:(long long)arg2;
- (void)setLikedState:(long long)arg1 forAlbumWithStoreID:(long long)arg2 completion:(id /* block */)arg3;
- (void)setLikedState:(long long)arg1 forArtistWithStoreID:(long long)arg2;
- (void)setLikedState:(long long)arg1 forArtistWithStoreID:(long long)arg2 completion:(id /* block */)arg3;
- (void)setLikedState:(long long)arg1 forEntityWithStoreID:(long long)arg2 withMediaType:(unsigned long long)arg3 timeStamp:(id)arg4;
- (void)setLikedState:(long long)arg1 forEntityWithStoreID:(long long)arg2 withMediaType:(unsigned long long)arg3 timeStamp:(id)arg4 completion:(id /* block */)arg5;
- (void)setLikedState:(long long)arg1 forPlaylistWithGlobalID:(id)arg2;
- (void)setLikedState:(long long)arg1 forPlaylistWithGlobalID:(id)arg2 completion:(id /* block */)arg3;
- (void)setPlaylistProperties:(id)arg1 trackList:(id)arg2 forPlaylistWithPersistentID:(unsigned long long)arg3 completionHandler:(id /* block */)arg4;
- (void)setPreferencesChangedNotifyToken:(int)arg1;
- (void)setPreferencesChangedNotifyTokenIsValid:(bool)arg1;
- (void)setPurchaseHistoryAccount:(bool)arg1;
- (void)setUpdateInProgress:(bool)arg1;
- (bool)shouldProhibitActionsForCurrentNetworkConditions;
- (bool)shouldProhibitMusicActionForCurrentNetworkConditions;
- (bool)shouldProhibitStoreAppsActionForCurrentNetworkConditions;
- (bool)shouldProhibitVideosActionForCurrentNetworkConditions;
- (void)updateJaliscoMediaLibraryWithReason:(long long)arg1 completionHandler:(id /* block */)arg2;
- (void)updateSharingMode:(long long)arg1 onCollaboratinWithPersistentID:(long long)arg2 completion:(id /* block */)arg3;
- (void)updateSubscribedPlaylistWithSagaID:(unsigned long long)arg1 ignoreMinRefreshInterval:(bool)arg2 completionHandler:(id /* block */)arg3;
- (void)uploadArtworkForPlaylist:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)uploadCloudItemProperties;
- (void)uploadCloudPlaylistProperties;
- (id)userIdentity;

@end
