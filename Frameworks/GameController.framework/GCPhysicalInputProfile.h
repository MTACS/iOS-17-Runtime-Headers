
@interface GCPhysicalInputProfile : NSObject <GCControllerComponent, GCNamedProfile, _GCGamepadEventSink> {
    NSMutableSet * __topLevelButtons;
    NSMutableSet * __topLevelDirectionPads;
    NSMutableSet * __topLevelElements;
    NSMutableSet * __topLevelTouchpads;
    NSMutableSet * _allAxes;
    NSMutableSet * _allButtons;
    NSMutableSet * _allDpads;
    NSMutableSet * _allElements;
    NSMutableSet * _allGestureAwareButtons;
    NSMutableSet * _allTouchpads;
    NSMutableDictionary * _axes;
    NSMutableDictionary * _buttons;
    <GCDevice> * _device;
    NSMutableDictionary * _dpads;
    NSDictionary * _elementAliasToPhysicalInputNames;
    NSMutableDictionary * _elements;
    id  _gamepadEventObservation;
    unsigned long long  _glyphFlags;
    bool  _hasRemappedElements;
    <NSObject><NSCopying><NSSecureCoding> * _identifier;
    long long  _inlineRefcount;
    double  _lastEventTimestamp;
    GCMotion * _motion;
    NSDictionary * _physicalInputNameToElementAlias;
    GCControllerElement * _remappedElements;
    GCSProfile * _settingsProfile;
    id /* block */  _syntheticDeviceElementValueChangedHandler;
    NSObject<OS_dispatch_queue> * _syntheticDeviceHandlerQueue;
    <GCSystemGestureComponent> * _systemGestureComponent;
    NSMutableDictionary * _touchpads;
    id /* block */  _valueDidChangeHandler;
    id /* block */  _valueDidChangedHandler;
    GCObjectPool * pool;
    bool  pooled;
    GCObjectPool * weakPool;
}

@property (retain) GCMotion *_motion;
@property (nonatomic, readonly) NSMutableSet *_topLevelButtons;
@property (nonatomic, readonly) NSMutableSet *_topLevelDirectionPads;
@property (nonatomic, readonly) NSMutableSet *_topLevelElements;
@property (nonatomic, readonly) NSMutableSet *_topLevelTouchpads;
@property (nonatomic, readonly) NSSet *allAxes;
@property (nonatomic, readonly) NSSet *allButtons;
@property (nonatomic, readonly) NSSet *allDpads;
@property (nonatomic, readonly) NSSet *allElements;
@property (nonatomic, readonly) NSSet *allTouchpads;
@property (nonatomic, readonly) NSDictionary *axes;
@property (nonatomic, readonly) NSDictionary *buttons;
@property (nonatomic, readonly) GCController *controller;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) <GCDevice> *device;
@property (nonatomic, readonly) NSDictionary *dpads;
@property (nonatomic, readonly) NSDictionary *elements;
@property (nonatomic) unsigned long long glyphFlags;
@property (readonly) NSObject<OS_dispatch_queue> *handlerQueue;
@property (nonatomic) bool hasRemappedElements;
@property (readonly) unsigned long long hash;
@property (readonly) <NSObject><NSCopying><NSSecureCoding> *identifier;
@property double lastEventTimestamp;
@property (readonly) NSString *name;
@property (nonatomic, retain) GCSProfile *settingsProfile;
@property (readonly) Class superclass;
@property (copy) id /* block */ syntheticDeviceElementValueChangedHandler;
@property (retain) NSObject<OS_dispatch_queue> *syntheticDeviceHandlerQueue;
@property (nonatomic, copy) id /* block */ thumbstickUserIntentHandler;
@property (nonatomic, readonly) NSDictionary *touchpads;
@property (nonatomic, copy) id /* block */ valueDidChangeHandler;

- (void).cxx_destruct;
- (id)_buttonWithDescription:(id)arg1;
- (id)_buttonWithInfo:(struct { id x1; bool x2; bool x3; union { struct { int x_1_2_1; bool x_1_2_2; float x_1_2_3; long long x_1_2_4; } x_4_1_1; struct { int x_2_2_1; int x_2_2_2; int x_2_2_3; int x_2_2_4; } x_4_1_2; } x4; int x5; bool x6; bool x7; bool x8; id x9; id x10; })arg1;
- (id)_cursorWithInfo:(struct { id x1; bool x2; bool x3; union { struct { int x_1_2_1; bool x_1_2_2; float x_1_2_3; long long x_1_2_4; } x_4_1_1; struct { int x_2_2_1; int x_2_2_2; int x_2_2_3; int x_2_2_4; } x_4_1_2; } x4; int x5; bool x6; bool x7; bool x8; id x9; id x10; })arg1;
- (id)_directionPadWithDescription:(id)arg1;
- (id)_directionPadWithInfo:(struct { id x1; bool x2; bool x3; union { struct { int x_1_2_1; bool x_1_2_2; float x_1_2_3; long long x_1_2_4; } x_4_1_1; struct { int x_2_2_1; int x_2_2_2; int x_2_2_3; int x_2_2_4; } x_4_1_2; } x4; int x5; bool x6; bool x7; bool x8; id x9; id x10; })arg1;
- (bool)_isDeallocating;
- (id)_keyboardButtonWithInfo:(struct { id x1; bool x2; bool x3; union { struct { int x_1_2_1; bool x_1_2_2; float x_1_2_3; long long x_1_2_4; } x_4_1_1; struct { int x_2_2_1; int x_2_2_2; int x_2_2_3; int x_2_2_4; } x_4_1_2; } x4; int x5; bool x6; bool x7; bool x8; id x9; id x10; })arg1;
- (void)_legacy_handleEvent:(struct __IOHIDEvent { }*)arg1;
- (id)_motion;
- (void)_receivedEvent;
- (void)_receivedEventWithTimestamp:(unsigned long long)arg1;
- (void)_registerAxis:(id)arg1;
- (void)_registerButton:(id)arg1;
- (void)_registerDirectionPad:(id)arg1;
- (void)_registerTopLevelButton:(id)arg1;
- (void)_registerTopLevelDirectionPad:(id)arg1;
- (void)_registerTopLevelTouchpad:(id)arg1;
- (void)_registerTouchpad:(id)arg1;
- (id)_topLevelButtons;
- (id)_topLevelDirectionPads;
- (id)_topLevelElements;
- (id)_topLevelTouchpads;
- (id)_touchpadWithInfo:(struct { id x1; bool x2; bool x3; union { struct { int x_1_2_1; bool x_1_2_2; float x_1_2_3; long long x_1_2_4; } x_4_1_1; struct { int x_2_2_1; int x_2_2_2; int x_2_2_3; int x_2_2_4; } x_4_1_2; } x4; int x5; bool x6; bool x7; bool x8; id x9; id x10; })arg1;
- (void)_triggerValueChangedHandlerForElement:(id)arg1 queue:(id)arg2;
- (void)_triggerValueChangedHandlerForElements:(id)arg1 queue:(id)arg2;
- (bool)_tryRetain;
- (id)allAxes;
- (id)allButtons;
- (id)allDpads;
- (id)allElements;
- (id)allTouchpads;
- (void)appDidBecomeActive;
- (void)appWillResignActive;
- (void)applyGestureSettingsToButton:(id)arg1 withSettings:(id)arg2;
- (void)applySettingsProfile:(id)arg1;
- (void)applySystemGestureComponent:(id)arg1;
- (id)axes;
- (id)buttons;
- (id)capture;
- (id)controller;
- (id)description;
- (id)device;
- (id)dpads;
- (id)elements;
- (unsigned long long)glyphFlags;
- (id)handlerQueue;
- (bool)hasRemappedElements;
- (id)identifier;
- (id)init;
- (id)initWithController:(id)arg1;
- (id)initWithIdentifier:(id)arg1;
- (id)initWithIdentifier:(id)arg1 andPool:(id)arg2;
- (double)lastEventTimestamp;
- (id)mappedElementAliasForPhysicalInputName:(id)arg1;
- (id)mappedPhysicalInputNamesForElementAlias:(id)arg1;
- (id)name;
- (id)objectForKeyedSubscript:(id)arg1;
- (id)productCategory;
- (void)registerPhysicalInputName:(id)arg1 toElementAlias:(id)arg2 withPhysicalToElementMapping:(id)arg3 withElementToPhysicalMapping:(id)arg4;
- (oneway void)release;
- (id)remappedElementForIndex:(long long)arg1;
- (id)retain;
- (unsigned long long)retainCount;
- (unsigned int)sampleRate;
- (void)setButton:(id)arg1 pressed:(bool)arg2;
- (void)setButton:(id)arg1 value:(double)arg2;
- (void)setController:(id)arg1;
- (void)setDevice:(id)arg1;
- (void)setDpad:(id)arg1 x:(double)arg2 y:(double)arg3;
- (void)setGamepadEventSource:(id)arg1;
- (void)setGlyphFlags:(unsigned long long)arg1;
- (void)setHasRemappedElements:(bool)arg1;
- (void)setLastEventTimestamp:(double)arg1;
- (void)setPlayerIndex:(long long)arg1;
- (void)setSettingsProfile:(id)arg1;
- (void)setStateFromPhysicalInput:(id)arg1;
- (void)setSyntheticDeviceElementValueChangedHandler:(id /* block */)arg1;
- (void)setSyntheticDeviceHandlerQueue:(id)arg1;
- (void)setThumbstickUserIntentHandler:(id /* block */)arg1;
- (void)setThumbstickUserIntentHandler:(id /* block */)arg1 slidingWindowTotalDuration:(double)arg2 slidingWindowSegmentDuration:(double)arg3 deadzone:(double)arg4 sensitivity:(int)arg5;
- (void)setValueDidChangeHandler:(id /* block */)arg1;
- (void)set_motion:(id)arg1;
- (id)settingsProfile;
- (bool)settingsProfile:(id)arg1 differsFrom:(id)arg2;
- (id /* block */)syntheticDeviceElementValueChangedHandler;
- (id)syntheticDeviceHandlerQueue;
- (id /* block */)thumbstickUserIntentHandler;
- (id)touchpads;
- (void)updateElementDeviceReferences;
- (void)updateSystemGesturesState:(id)arg1;
- (id /* block */)valueChangedHandler;
- (id /* block */)valueDidChangeHandler;

@end
