
@interface PHMemoryChangeRequest : PHChangeRequest <PHInsertChangeRequest, PHUpdateChangeRequest> {
    PHMemory * _backingMemory;
    bool  _clientEntitledToMemoryMutation;
    PHRelationshipChangeRequestHelper * _curatedAssetsHelper;
    NSNumber * _customMaximumNumberOfAssetsForUnitTesting;
    PHRelationshipChangeRequestHelper * _customUserAssetsHelper;
    bool  _didSetUserCreated;
    bool  _didUnsetUserFeedback;
    PHRelationshipChangeRequestHelper * _extendedCuratedAssetsHelper;
    bool  _incrementPlayCount;
    bool  _incrementShareCount;
    bool  _incrementViewCount;
    PHRelationshipChangeRequestHelper * _keyAssetHelper;
    NSDictionary * _movieAssetState;
    PHRelationshipChangeRequestHelper * _movieCuratedAssetsHelper;
    PHRelationshipChangeRequestHelper * _representativeAssetsHelper;
    bool  _userCreated;
    PHRelationshipChangeRequestHelper * _userCuratedAssetsHelper;
    PHUserFeedback * _userFeedback;
}

@property (nonatomic, readonly) long long accessScopeOptionsRequirement;
@property (nonatomic, retain) PHMemoryFeature *blacklistedFeature;
@property (nonatomic) unsigned long long category;
@property (getter=isClientEntitled, nonatomic, readonly) bool clientEntitled;
@property (nonatomic, readonly) bool clientEntitledToMemoryMutation;
@property (nonatomic, readonly) NSString *clientName;
@property (nonatomic, retain) NSDate *creationDate;
@property (nonatomic, readonly) PHRelationshipChangeRequestHelper *curatedAssetsHelper;
@property (nonatomic, retain) NSNumber *customMaximumNumberOfAssetsForUnitTesting;
@property (nonatomic, readonly) PHRelationshipChangeRequestHelper *customUserAssetsHelper;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) PHRelationshipChangeRequestHelper *extendedCuratedAssetsHelper;
@property (getter=isFavorite, nonatomic) bool favorite;
@property (nonatomic) long long featuredState;
@property (nonatomic, retain) NSString *graphMemoryIdentifier;
@property (readonly) unsigned long long hash;
@property (readonly) bool isNewRequest;
@property (nonatomic, readonly) PHRelationshipChangeRequestHelper *keyAssetHelper;
@property (nonatomic, retain) NSDate *lastEnrichmentDate;
@property (nonatomic, retain) NSDate *lastMoviePlayedDate;
@property (nonatomic, retain) NSDate *lastViewedDate;
@property (nonatomic, readonly) NSString *managedEntityName;
@property (nonatomic, readonly) NSDictionary *movieAssetState;
@property (nonatomic, readonly) PHRelationshipChangeRequestHelper *movieCuratedAssetsHelper;
@property (nonatomic, retain) NSData *movieData;
@property (getter=isMutated, readonly) bool mutated;
@property (nonatomic) unsigned long long notificationState;
@property (nonatomic, readonly) NSManagedObjectID *objectID;
@property (nonatomic) unsigned short pendingState;
@property (nonatomic, retain) NSData *photosGraphData;
@property (nonatomic) long long photosGraphVersion;
@property (nonatomic, readonly) PHObjectPlaceholder *placeholderForCreatedMemory;
@property (getter=isRejected, nonatomic) bool rejected;
@property (nonatomic, readonly) PHRelationshipChangeRequestHelper *representativeAssetsHelper;
@property (nonatomic) double score;
@property (nonatomic) bool shouldPerformConcurrentWork;
@property (nonatomic) long long storyColorGradeKind;
@property (nonatomic, retain) NSString *storyTitleCategory;
@property (nonatomic, retain) NSString *subtitle;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSString *title;
@property (getter=isUserCreated, nonatomic) bool userCreated;
@property (nonatomic, readonly) PHRelationshipChangeRequestHelper *userCuratedAssetsHelper;
@property (nonatomic, copy) PHUserFeedback *userFeedback;

// Image: /System/Library/Frameworks/Photos.framework/Photos

+ (id)_preferredAttributesForMemoryCreationFromObject:(id)arg1 withSuccess:(bool)arg2 title:(id)arg3 subtitle:(id)arg4 error:(id)arg5 proposedAttributes:(id)arg6;
+ (bool)_shouldAcceptProposedAttributes:(id)arg1;
+ (long long)_titleFormatForProposedAttributes:(id)arg1;
+ (void)blockPerson:(id)arg1;
+ (void)blockPerson:(id)arg1 withAsset:(id)arg2;
+ (id)changeRequestForMemory:(id)arg1;
+ (id)changeRequestForRemotelyViewedMemoryWithLocalIdentifier:(id)arg1;
+ (id)creationRequestForMemoryWithTitle:(id)arg1 subtitle:(id)arg2 creationDate:(id)arg3 category:(unsigned long long)arg4 subcategory:(unsigned long long)arg5 representativeAssetUUIDs:(id)arg6 curatedAssetUUIDs:(id)arg7 extendedCuratedAssetUUIDs:(id)arg8 keyAssetUUID:(id)arg9;
+ (id)creationRequestForMemoryWithTitle:(id)arg1 subtitle:(id)arg2 creationDate:(id)arg3 category:(unsigned long long)arg4 subcategory:(unsigned long long)arg5 representativeAssets:(id)arg6 curatedAssets:(id)arg7 extendedCuratedAssets:(id)arg8 keyAsset:(id)arg9;
+ (void)deleteMemories:(id)arg1;
+ (id)preferredAttributesForMemoryCreationFromAssetCollection:(id)arg1 proposedAttributes:(id)arg2;
+ (id)preferredAttributesForMemoryCreationFromCollectionList:(id)arg1 proposedAttributes:(id)arg2;
+ (id)preferredAttributesForMemoryCreationFromPeople:(id)arg1 proposedAttributes:(id)arg2;
+ (void)unblockPersonsInMemoriesWithBlockedPersonFeature:(id)arg1;
+ (id)validateMemoryTitle:(id)arg1 error:(id*)arg2;

- (void).cxx_destruct;
- (id)_mutableCuratedAssetObjectIDsAndUUIDs;
- (id)_mutableExtendedCuratedAssetObjectIDsAndUUIDs;
- (id)_mutableKeyAssetObjectIDsAndUUIDs;
- (id)_mutableRepresentativeAssetObjectIDsAndUUIDs;
- (void)_prepareAssetIDsIfNeeded;
- (void)_prepareCustomUserAssetIDsIfNeeded;
- (void)_setBackingMemory:(id)arg1;
- (id)_validateAssetCounts;
- (void)addCustomUserAssets:(id)arg1;
- (bool)allowMutationToManagedObject:(id)arg1 propertyKey:(id)arg2 error:(id*)arg3;
- (bool)applyMutationsToManagedObject:(id)arg1 photoLibrary:(id)arg2 error:(id*)arg3;
- (id)blacklistedFeature;
- (unsigned long long)category;
- (bool)clientEntitledToMemoryMutation;
- (id)createManagedObjectForInsertIntoPhotoLibrary:(id)arg1 error:(id*)arg2;
- (id)creationDate;
- (id)curatedAssetsHelper;
- (id)customMaximumNumberOfAssetsForUnitTesting;
- (id)customUserAssetsHelper;
- (id)description;
- (void)encodeToXPCDict:(id)arg1;
- (id)extendedCuratedAssetsHelper;
- (long long)featuredState;
- (id)graphMemoryIdentifier;
- (void)incrementPlayCount;
- (void)incrementShareCount;
- (void)incrementViewCount;
- (id)initForNewObject;
- (id)initWithUUID:(id)arg1 objectID:(id)arg2;
- (id)initWithXPCDict:(id)arg1 request:(id)arg2 clientAuthorization:(id)arg3;
- (void)insertCustomUserAssets:(id)arg1 atIndexes:(id)arg2;
- (bool)isFavorite;
- (bool)isRejected;
- (bool)isUserCreated;
- (id)keyAssetHelper;
- (id)lastEnrichmentDate;
- (id)lastMoviePlayedDate;
- (id)lastViewedDate;
- (id)managedEntityName;
- (void)moveCustomUserAssetsAtIndexes:(id)arg1 toIndex:(unsigned long long)arg2;
- (id)movieAssetState;
- (id)movieCuratedAssetsHelper;
- (id)movieData;
- (unsigned long long)notificationState;
- (unsigned short)pendingState;
- (id)photosGraphData;
- (long long)photosGraphVersion;
- (id)placeholderForCreatedMemory;
- (void)removeCustomUserAssets:(id)arg1;
- (void)removeCustomUserAssetsAtIndexes:(id)arg1;
- (void)replaceCustomUserAssetsAtIndexes:(id)arg1 withAssets:(id)arg2;
- (id)representativeAssetsHelper;
- (double)score;
- (void)setBlacklistedFeature:(id)arg1;
- (void)setCategory:(unsigned long long)arg1;
- (void)setCreationDate:(id)arg1;
- (void)setCustomMaximumNumberOfAssetsForUnitTesting:(id)arg1;
- (void)setCustomUserAssets:(id)arg1;
- (void)setFavorite:(bool)arg1;
- (void)setFeaturedState:(long long)arg1;
- (void)setGraphMemoryIdentifier:(id)arg1;
- (void)setKeyAsset:(id)arg1;
- (void)setKeyAssetUUID:(id)arg1;
- (void)setLastEnrichmentDate:(id)arg1;
- (void)setLastMoviePlayedDate:(id)arg1;
- (void)setLastViewedDate:(id)arg1;
- (void)setMovieCuratedAssets:(id)arg1;
- (void)setMovieData:(id)arg1;
- (void)setMovieStateData:(id)arg1 forAsset:(id)arg2;
- (void)setNotificationState:(unsigned long long)arg1;
- (void)setPendingState:(unsigned short)arg1;
- (void)setPhotosGraphData:(id)arg1;
- (void)setPhotosGraphVersion:(long long)arg1;
- (void)setQueryHintObject:(id)arg1;
- (void)setQueryHintObjects:(id)arg1;
- (void)setRejected:(bool)arg1;
- (void)setRepresentativeAssetUUIDs:(id)arg1 curatedAssetUUIDs:(id)arg2 extendedCuratedAssetUUIDs:(id)arg3 keyAssetUUID:(id)arg4;
- (void)setRepresentativeAssets:(id)arg1 curatedAssets:(id)arg2 extendedCuratedAssets:(id)arg3 keyAsset:(id)arg4;
- (void)setScore:(double)arg1;
- (void)setStoryColorGradeKind:(long long)arg1;
- (void)setStorySerializedTitleCategory:(long long)arg1;
- (void)setStoryTitleCategory:(id)arg1;
- (void)setSubcategory:(unsigned long long)arg1;
- (void)setSubtitle:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setUserCreated:(bool)arg1;
- (void)setUserCuratedAssets:(id)arg1;
- (void)setUserFeedback:(id)arg1;
- (long long)storyColorGradeKind;
- (long long)storySerializedTitleCategory;
- (id)storyTitleCategory;
- (unsigned long long)subcategory;
- (id)subtitle;
- (id)title;
- (id)userCuratedAssetsHelper;
- (id)userFeedback;
- (bool)validateInsertIntoPhotoLibrary:(id)arg1 error:(id*)arg2;
- (bool)validateMutationsToManagedObject:(id)arg1 error:(id*)arg2;

// Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore

+ (bool)_shouldSetCustomUserAssetsForAssetCollection:(id)arg1;
+ (id)px_creationRequestForAssetCollection:(id)arg1;
+ (id)px_creationRequestForAssetCollection:(id)arg1 displayTitleInfo:(id)arg2 people:(id)arg3;
+ (id)px_creationRequestForAssetCollection:(id)arg1 displayTitleInfo:(id)arg2 people:(id)arg3 ignoreCuration:(bool)arg4;

@end
