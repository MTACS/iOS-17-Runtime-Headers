
@interface PHAssetCreationRequest : PHAssetChangeRequest <PHInsertChangeRequest> {
    PHAssetCreationPhotoStreamPublishingRequest * __photoStreamPublishingRequest;
    PHAssetCreationAdjustmentBakeInOptions * _adjustmentBakeInOptions;
    bool  _assetExistingWithSyndicationIdentifierIsTrashed;
    NSNumber * _assetExistsWithSyndicationIdentifier;
    PHAssetResourceBag * _assetResourceBag;
    NSMutableArray * _assetResources;
    unsigned short  _bundleScope;
    PHAssetCreationCameraIngestOptions * _cameraIngestOptions;
    NSString * _conversationID;
    bool  _crashBeforeCreation;
    bool  _createAsCompanionSyncedAsset;
    NSDictionary * _customAssetProperties;
    PHAssetCreationDerivativeContext * _derivativeContext;
    bool  _duplicateAllowsPrivateMetadata;
    bool  _duplicateAsAlternateAsset;
    bool  _duplicateAsOriginal;
    NSString * _duplicateAssetIdentifier;
    unsigned short  _duplicateAssetPhotoLibraryType;
    bool  _duplicateLivePhotoAsStill;
    bool  _duplicateSinglePhotoFromBurst;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _duplicateStillSourceTime;
    PLIndicatorFileCoordinator * _fileCoordinator;
    NSString * _forcePairingIdentifier;
    NSString * _importSessionID;
    long long  _importedBy;
    NSString * _importedByBundleIdentifier;
    NSManagedObjectID * _limitedLibraryFetchFilterObjectID;
    PHAssetCreationMetadataCopyOptions * _metadataCopyOptions;
    PHMomentShare * _momentShare;
    PHRelationshipChangeRequestHelper * _momentShareHelper;
    NSString * _momentShareUUID;
    NSMutableDictionary * _movedFiles;
    NSString * _resourceHoldingDirectoryPath;
    int  _retryCount;
    bool  _shouldCreateScreenshot;
    bool  _shouldUseAutomaticallyGeneratedOriginalFilename;
    NSString * _syndicationIdentifier;
    bool  _useRecoverableStagingDirectory;
}

@property (nonatomic, readonly) NSDictionary *_movedFiles;
@property (setter=_setPhotoStreamPublishingRequest:, nonatomic, retain) PHAssetCreationPhotoStreamPublishingRequest *_photoStreamPublishingRequest;
@property (nonatomic, readonly) long long accessScopeOptionsRequirement;
@property (setter=_setAdjustmentBakeInOptions:, nonatomic, copy) PHAssetCreationAdjustmentBakeInOptions *adjustmentBakeInOptions;
@property (nonatomic) bool assetExistingWithSyndicationIdentifierIsTrashed;
@property (nonatomic, retain) NSNumber *assetExistsWithSyndicationIdentifier;
@property (nonatomic, retain) PHAssetResourceBag *assetResourceBag;
@property (nonatomic) unsigned short bundleScope;
@property (nonatomic, copy) PHAssetCreationCameraIngestOptions *cameraIngestOptions;
@property (getter=isClientEntitled, nonatomic, readonly) bool clientEntitled;
@property (nonatomic, readonly) NSString *clientName;
@property (nonatomic, retain) NSString *conversationID;
@property (nonatomic) bool crashBeforeCreation;
@property (nonatomic) bool createAsCompanionSyncedAsset;
@property (nonatomic, retain) NSDictionary *customAssetProperties;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (setter=_setDuplicateAllowsPrivateMetadata:, nonatomic) bool duplicateAllowsPrivateMetadata;
@property (setter=_setDuplicateAsAlternateAsset:, nonatomic) bool duplicateAsAlternateAsset;
@property (setter=_setDuplicateAsOriginal:, nonatomic) bool duplicateAsOriginal;
@property (setter=_setDuplicateAssetIdentifier:, nonatomic, retain) NSString *duplicateAssetIdentifier;
@property (setter=_setDuplicateAssetPhotoLibraryType:, nonatomic) unsigned short duplicateAssetPhotoLibraryType;
@property (setter=_setDuplicateLivePhotoAsStill:, nonatomic) bool duplicateLivePhotoAsStill;
@property (setter=_setDuplicateSinglePhotoFromBurst:, nonatomic) bool duplicateSinglePhotoFromBurst;
@property (setter=_setDuplicateStillSourceTime:, nonatomic) struct { long long x1; int x2; unsigned int x3; long long x4; } duplicateStillSourceTime;
@property (nonatomic, readonly) NSString *forcePairingIdentifier;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSString *importSessionID;
@property (nonatomic) long long importedBy;
@property (nonatomic, copy) NSString *importedByBundleIdentifier;
@property (readonly) bool isNewRequest;
@property (getter=_limitedLibraryFetchFilterObjectID, setter=_setLimitedLibraryFetchFilterObjectID:, nonatomic, retain) NSManagedObjectID *limitedLibraryFetchFilterObjectID;
@property (nonatomic, readonly) NSString *managedEntityName;
@property (setter=_setMetadataCopyOptions:, nonatomic, copy) PHAssetCreationMetadataCopyOptions *metadataCopyOptions;
@property (nonatomic, retain) PHMomentShare *momentShare;
@property (nonatomic, readonly) PHRelationshipChangeRequestHelper *momentShareHelper;
@property (nonatomic, readonly) NSString *momentShareUUID;
@property (getter=isMutated, readonly) bool mutated;
@property (nonatomic, readonly) NSManagedObjectID *objectID;
@property (nonatomic) int retryCount;
@property (getter=_shouldCreateScreenshot, setter=_setShouldCreateScreenshot:, nonatomic) bool shouldCreateScreenshot;
@property (nonatomic) bool shouldPerformConcurrentWork;
@property (getter=_shouldUseAutomaticallyGeneratedOriginalFilename, setter=_setShouldUseAutomaticallyGeneratedOriginalFilename:, nonatomic) bool shouldUseAutomaticallyGeneratedOriginalFilename;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSString *syndicationIdentifier;
@property (setter=_setUseRecoverableStagingDirectory:, nonatomic) bool useRecoverableStagingDirectory;

+ (id)_creationRequestForAssetUsingUUID:(id)arg1;
+ (id)_imageIOThumbnailCreationOptionsFromDerivativeContext:(id)arg1;
+ (id)_jpegDataFromRAWData:(id)arg1 derivativeContext:(id)arg2;
+ (long long)_originalResourceTypeFromAdjustedResourceType:(long long)arg1 sourceAssetIsLoopingVideo:(bool)arg2;
+ (bool)_shouldGenerateThumbnailsDuringCreationForImageSource:(struct CGImageSource { }*)arg1 contentType:(id)arg2;
+ (id)_uuidForAssetWithSyndicationIdentifier:(id)arg1 inLibrary:(id)arg2 isTrashed:(bool*)arg3;
+ (id)creationRequestForAsset;
+ (id)creationRequestForAssetCopyFromAsset:(id)arg1;
+ (id)creationRequestForAssetCopyFromAsset:(id)arg1 options:(id)arg2;
+ (id)creationRequestForAssetFromAssetBundle:(id)arg1;
+ (id)creationRequestForAssetFromBatchImageJobDictionary:(id)arg1;
+ (id)creationRequestForAssetFromGuestAsset:(id)arg1;
+ (id)creationRequestForAssetFromGuestAsset:(id)arg1 checkForMomentShareAsset:(bool)arg2;
+ (id)creationRequestForAssetFromImage:(id)arg1;
+ (id)creationRequestForAssetFromImageAtFileURL:(id)arg1;
+ (id)creationRequestForAssetFromImageData:(id)arg1;
+ (id)creationRequestForAssetFromImageData:(id)arg1 options:(id)arg2;
+ (id)creationRequestForAssetFromImageData:(id)arg1 usingUUID:(id)arg2;
+ (id)creationRequestForAssetFromImageJobDictionary:(id)arg1 holdingDirectoryPath:(id)arg2;
+ (id)creationRequestForAssetFromScreenshotImage:(id)arg1;
+ (id)creationRequestForAssetFromVideoAtFileURL:(id)arg1;
+ (id)creationRequestForAssetFromVideoComplementBundle:(id)arg1;
+ (id)creationRequestForAssetFromVideoJobDictionary:(id)arg1;
+ (id)creationRequestForAssetWithOptions:(id)arg1;
+ (id)creationRequestForAssetWithSyndicationIdentifier:(id)arg1;
+ (id)creationRequestForAssetWithUUID:(id)arg1;
+ (id)creationRequestForAssetWithUUID:(id)arg1 options:(id)arg2;
+ (bool)setDeferredIdentifierAndCreateDeferredDestinationURLFromCurrentDstURL:(id*)arg1 withMainFileMetadata:(id)arg2 managedAsset:(id)arg3 photoLibrary:(id)arg4 error:(id*)arg5;
+ (bool)setdbgFileWithAsset:(id)arg1 dbgFilePath:(id)arg2 photoFilename:(id)arg3;
+ (bool)supportsAssetResourceTypes:(id)arg1;
+ (bool)supportsImportAssetResourceTypes:(id)arg1;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (bool)_accessWritableURLForUUID:(id)arg1 imageUTI:(id)arg2 originalFilename:(id)arg3 photoLibrary:(id)arg4 withHandler:(id /* block */)arg5;
- (void)_addResourceWithType:(long long)arg1 data:(id)arg2 orFileURL:(id)arg3 options:(id)arg4;
- (void)_copyMediaAnalysisProperties:(id)arg1;
- (void)_copyMetadataFromAsset:(id)arg1;
- (void)_copyUserSpecificMetadataFromAsset:(id)arg1;
- (id)_createAdjustmentsFileFromJobDictionary:(id)arg1;
- (bool)_createAssetAsAdjusted:(id)arg1 fromValidatedResources:(id)arg2 mainFileMetadata:(id)arg3 error:(id*)arg4;
- (bool)_createAssetAsPhotoIris:(id)arg1 fromValidatedResources:(id)arg2 mainFileMetadata:(id)arg3 error:(id*)arg4;
- (id)_createAssetFromValidatedResources:(id)arg1 withUUID:(id)arg2 assetAlreadyExistsAsPlaceholder:(bool)arg3 inPhotoLibrary:(id)arg4 error:(id*)arg5;
- (bool)_createAudioResourceForAsset:(id)arg1 fromValidatedResources:(id)arg2 photoLibrary:(id)arg3 error:(id*)arg4;
- (bool)_createOriginalResourceForAsset:(id)arg1 fromValidatedResource:(id)arg2 resourceType:(unsigned int)arg3 photoLibrary:(id)arg4 destinationURL:(id)arg5 error:(id*)arg6;
- (bool)_createRAWSidecarForAsset:(id)arg1 fromValidatedResources:(id)arg2 mainFileMetadata:(id)arg3 photoLibrary:(id)arg4 error:(id*)arg5;
- (bool)_createSocResourceForAsset:(id)arg1 fromValidatedResources:(id)arg2 photoLibrary:(id)arg3 error:(id*)arg4;
- (bool)_createXmpResourceForAsset:(id)arg1 fromValidatedResources:(id)arg2 photoLibrary:(id)arg3 error:(id*)arg4;
- (void)_didMoveFileFromURL:(id)arg1 toURL:(id)arg2;
- (id)_externalLivePhotoResourceForAsset:(id)arg1;
- (id)_filteredImagePropertiesByConditionallyRemovingLivePhotoIdentifiersFromSourceImageProperties:(id)arg1;
- (struct CGImageSource { }*)_imageSourceForDerivatives;
- (id)_ingestOriginalFromSrcURL:(id)arg1 toDstURL:(id)arg2 useSecureMove:(bool)arg3 resource:(id)arg4 resourceType:(unsigned int)arg5 asset:(id)arg6 error:(id*)arg7;
- (bool)_ingestOriginalInPlaceSrcURL:(id)arg1 dstURL:(id)arg2 asset:(id)arg3 error:(id*)arg4;
- (id)_limitedLibraryFetchFilterObjectID;
- (id)_managedAssetFromPrimaryResourceData:(id)arg1 validatedResources:(id)arg2 withUUID:(id)arg3 photoLibrary:(id)arg4 mainFileMetadata:(id*)arg5 getImageSource:(struct CGImageSource {}**)arg6 imageData:(id*)arg7;
- (long long)_mediaTypeForCreatedAsset;
- (id)_movedFiles;
- (id)_mutableMomentShareObjectIDsAndUUIDs;
- (id)_photoStreamPublishingRequest;
- (bool)_populateDuplicatingAssetCreationRequest:(id)arg1 photoLibrary:(id)arg2 error:(id*)arg3;
- (void)_prepareMomentShareHelperIfNeeded;
- (void)_resetMovedFiles;
- (id)_resolveResourceHoldingDirectoryPath;
- (bool)_restoreMovedFilesOnFailure;
- (short)_savedAssetTypeForAsset;
- (id)_secureMove:(bool)arg1 assetResource:(id)arg2 photoLibrary:(id)arg3 error:(id*)arg4;
- (id)_secureMove:(bool)arg1 fileAtURL:(id)arg2 toURL:(id)arg3 capabilities:(id)arg4 error:(id*)arg5;
- (void)_setAdjustmentBakeInOptions:(id)arg1;
- (void)_setCreatingAssetIsBusy:(bool)arg1;
- (void)_setDuplicateAllowsPrivateMetadata:(bool)arg1;
- (void)_setDuplicateAsAlternateAsset:(bool)arg1;
- (void)_setDuplicateAsOriginal:(bool)arg1;
- (void)_setDuplicateAssetIdentifier:(id)arg1;
- (void)_setDuplicateAssetPhotoLibraryType:(unsigned short)arg1;
- (void)_setDuplicateLivePhotoAsStill:(bool)arg1;
- (void)_setDuplicateSinglePhotoFromBurst:(bool)arg1;
- (void)_setDuplicateStillSourceTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)_setLimitedLibraryFetchFilterObjectID:(id)arg1;
- (void)_setMetadataCopyOptions:(id)arg1;
- (void)_setPhotoStreamPublishingRequest:(id)arg1;
- (void)_setShouldCreateScreenshot:(bool)arg1;
- (void)_setShouldUseAutomaticallyGeneratedOriginalFilename:(bool)arg1;
- (void)_setUseRecoverableStagingDirectory:(bool)arg1;
- (void)_setupDerivativeCreationContextForAsset:(id)arg1 imageSource:(struct CGImageSource { }*)arg2 imageData:(id)arg3;
- (bool)_shouldCreateScreenshot;
- (bool)_shouldUseAutomaticallyGeneratedOriginalFilename;
- (bool)_unTrashAndResetAsset:(id)arg1;
- (void)_updateMutationsForDuplicatingPrivateMetadataFromAsset:(id)arg1;
- (bool)_validateNewObjectUUID:(id)arg1 inPhotoLibrary:(id)arg2 error:(id*)arg3;
- (bool)_writeDataToDisk:(id)arg1 imageUTIType:(id)arg2 exifProperties:(id)arg3 mainFileURL:(id)arg4 thumbnailData:(id)arg5;
- (long long)accessScopeOptionsRequirement;
- (void)addResourceWithType:(long long)arg1 data:(id)arg2 options:(id)arg3;
- (void)addResourceWithType:(long long)arg1 fileURL:(id)arg2 options:(id)arg3;
- (id)adjustmentBakeInOptions;
- (bool)applyMutationsToManagedObject:(id)arg1 photoLibrary:(id)arg2 error:(id*)arg3;
- (bool)assetExistingWithSyndicationIdentifierIsTrashed;
- (id)assetExistsWithSyndicationIdentifier;
- (id)assetResourceBag;
- (unsigned short)bundleScope;
- (id)cameraIngestOptions;
- (id)conversationID;
- (bool)crashBeforeCreation;
- (bool)createAsCompanionSyncedAsset;
- (id)createAssetFromValidatedResources:(id)arg1 withUUID:(id)arg2 assetAlreadyExistsAsPlaceholder:(bool)arg3 inPhotoLibrary:(id)arg4 error:(id*)arg5;
- (id)createManagedObjectForInsertIntoPhotoLibrary:(id)arg1 error:(id*)arg2;
- (id)customAssetProperties;
- (void)didSendChangeToServiceHandlerWithResult:(bool)arg1;
- (bool)duplicateAllowsPrivateMetadata;
- (bool)duplicateAsAlternateAsset;
- (bool)duplicateAsOriginal;
- (id)duplicateAssetIdentifier;
- (unsigned short)duplicateAssetPhotoLibraryType;
- (bool)duplicateLivePhotoAsStill;
- (bool)duplicateSinglePhotoFromBurst;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })duplicateStillSourceTime;
- (id)duplicatedAssetResourcesFromAsset:(id)arg1 stillSourceTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 flattenLivePhotoIntoStillPhoto:(bool)arg3 duplicateAsOriginal:(bool)arg4 duplicateWithAdjustmentsBakedIn:(bool)arg5 duplicatePhotoAsData:(bool)arg6 error:(id*)arg7;
- (void)encodeToXPCDict:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)finalizeRequestWithBatchSuccess:(bool)arg1;
- (id)forcePairingIdentifier;
- (id)importSessionID;
- (long long)importedBy;
- (id)importedByBundleIdentifier;
- (id)initForNewObject;
- (id)initForNewObjectWithUUID:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithHelper:(id)arg1;
- (id)initWithXPCDict:(id)arg1 request:(id)arg2 clientAuthorization:(id)arg3;
- (bool)isDuplicateAssetCreationRequest;
- (bool)isNew;
- (id)makeSubstitueRenderImageFileFromPath:(id)arg1 primaryResource:(id)arg2 fileSuffix:(id)arg3 error:(id*)arg4;
- (id)metadataCopyOptions;
- (id)momentShare;
- (id)momentShareHelper;
- (id)momentShareUUID;
- (void)performConcurrentWork;
- (void)performTransactionCompletionHandlingInPhotoLibrary:(id)arg1;
- (id)placeholderForCreatedAsset;
- (int)retryCount;
- (void)setAssetExistingWithSyndicationIdentifierIsTrashed:(bool)arg1;
- (void)setAssetExistsWithSyndicationIdentifier:(id)arg1;
- (void)setAssetResourceBag:(id)arg1;
- (void)setBundleScope:(unsigned short)arg1;
- (void)setCameraIngestOptions:(id)arg1;
- (void)setConversationID:(id)arg1;
- (void)setCrashBeforeCreation:(bool)arg1;
- (void)setCreateAsCompanionSyncedAsset:(bool)arg1;
- (void)setCustomAssetProperties:(id)arg1;
- (void)setImportSessionID:(id)arg1;
- (void)setImportedBy:(long long)arg1;
- (void)setImportedByBundleIdentifier:(id)arg1;
- (void)setMomentShare:(id)arg1;
- (void)setRetryCount:(int)arg1;
- (void)setSyndicationIdentifier:(id)arg1;
- (id)syndicationIdentifier;
- (bool)useRecoverableStagingDirectory;
- (bool)validateInsertIntoPhotoLibrary:(id)arg1 error:(id*)arg2;

@end
