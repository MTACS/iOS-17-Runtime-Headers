
@interface PHAsset : PHObject <CLSCurationItem, CLSPHAssetSupportProtocol, CLSPHAssetUserBehaviorProtocol, PEAsset, PGShareBackSuggesterInputProtocol, PHResourceChooserAsset, PHThumbnailAsset, PUDisplayAsset, PUEditableAsset, PXDisplayAsset, PXLayoutItemInput, PXMetadataAsset, PXMetadataDetailsContentItem, PXPlacesGeotaggable, PXShareable, PXStoryDisplayAssetResource, _PLImageLoadingAsset> {
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _acceptableCropRect;
    NSDate * _adjustmentTimestamp;
    NSDate * _analysisStateModificationDate;
    bool  _assetDescriptionWasSet;
    int  _avalanchePickType;
    unsigned short  _bundleScope;
    NSString * _burstIdentifier;
    _Atomic bool  _canUseLocationCoordinateForLocation;
    NSString * _cloudAssetGUID;
    bool  _cloudIsDeletable;
    long long  _cloudPlaceholderKind;
    bool  _complete;
    NSDate * _creationDate;
    long long  _creationDateSource;
    double  _curationScore;
    unsigned short  _deferredProcessingNeeded;
    NSString * _directory;
    double  _duration;
    int  _exifOrientation;
    id  _faceAdjustmentVersion;
    short  _faceAnalysisVersion;
    double  _faceAreaMaxX;
    double  _faceAreaMaxY;
    double  _faceAreaMinX;
    double  _faceAreaMinY;
    NSArray * _faceRegions;
    bool  _favorite;
    NSString * _filename;
    bool  _hasAdjustments;
    NSNumber * _hdrGain;
    bool  _hidden;
    double  _highlightPromotionScore;
    double  _highlightVisibilityScore;
    NSData * _imageRequestHints;
    bool  _isPhotoIris;
    PLLazyObject * _lazyCachedLocation;
    NSDate * _localCreationDate;
    struct CLLocationCoordinate2D { 
        double latitude; 
        double longitude; 
    }  _locationCoordinate;
    NSData * _locationData;
    unsigned long long  _mediaSubtypes;
    long long  _mediaType;
    NSDate * _modificationDate;
    NSString * _originalColorSpace;
    float  _overallAestheticScore;
    int  _packedBadgeAttributes;
    bool  _participatesInLibraryScope;
    unsigned long long  _persistenceState;
    unsigned long long  _pixelHeight;
    unsigned long long  _pixelWidth;
    long long  _playbackStyle;
    unsigned short  _playbackVariation;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _preferredCropRect;
    unsigned long long  _reframeVariation;
    short  _savedAssetType;
    bool  _syncFailureHidden;
    unsigned short  _syndicationState;
    unsigned long long  _thumbnailIndex;
    bool  _trashed;
    NSDate * _trashedDate;
    NSString * _uniformTypeIdentifier;
    long long  _videoCpDurationValue;
    unsigned short  _videoCpVisibilityState;
    unsigned short  _videoDeferredProcessingNeeded;
}

@property (nonatomic, readonly) NSURL *ALAssetURL;
@property (nonatomic, readonly) long long RAWBadgeAttributes;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } acceptableCropRect;
@property (nonatomic, readonly, copy) NSString *accessibilityDescription;
@property (getter=isAdjusted, nonatomic, readonly) bool adjusted;
@property (nonatomic, readonly) NSString *adjustmentFormatIdentifier;
@property (nonatomic, readonly) NSDate *adjustmentTimestamp;
@property (readonly, copy) NSSet *allSceneClassifications;
@property (nonatomic, readonly) NSDate *analysisStateModificationDate;
@property (nonatomic, readonly) double aspectRatio;
@property (nonatomic, readonly) PHAsset *asset;
@property (nonatomic) bool assetDescriptionWasSet;
@property (nonatomic, readonly) float audioScore;
@property (nonatomic, readonly) int avalanchePickType;
@property (nonatomic, readonly) NSString *burstIdentifier;
@property (nonatomic, readonly) unsigned long long burstSelectionTypes;
@property (nonatomic, readonly) bool canFlipFullSizeRender;
@property (nonatomic, readonly) bool canPerformSharingAction;
@property (nonatomic, readonly) bool canPlayAutoloop;
@property (nonatomic, readonly) bool canPlayLongExposure;
@property (nonatomic, readonly) bool canPlayLoopingVideo;
@property (nonatomic, readonly) bool canPlayMirror;
@property (nonatomic, readonly) bool canPlayPhotoIris;
@property bool canUseLocationCoordinateForLocation;
@property (nonatomic, readonly, copy) NSString *cloudIdentifier;
@property (nonatomic, readonly) bool cloudIsDeletable;
@property (getter=isCloudPhotoLibraryEnabled, nonatomic, readonly) bool cloudPhotoLibraryEnabled;
@property (nonatomic, readonly) long long cloudPlaceholderKind;
@property (nonatomic, readonly) double clsAestheticScore;
@property (nonatomic, readonly) double clsAutoplaySuggestionScore;
@property (nonatomic, readonly) NSArray *clsConsolidatedPersonLocalIdentifiers;
@property (nonatomic, readonly) double clsContentScore;
@property (nonatomic, readonly) double clsDuration;
@property (nonatomic, readonly) double clsExposureScore;
@property (nonatomic, readonly) CLSAssetFaceInformationSummary *clsFaceInformationSummary;
@property (nonatomic, readonly) double clsFaceScore;
@property (nonatomic, readonly) bool clsHasCustomPlaybackVariation;
@property (nonatomic, readonly) bool clsHasInterestingAudioClassification;
@property (readonly) bool clsHasInterestingScenes;
@property (readonly) bool clsHasPoorResolution;
@property (nonatomic, readonly) double clsHighlightVisibilityScore;
@property (nonatomic, readonly) double clsIconicScore;
@property (nonatomic, readonly) NSString *clsIdentifier;
@property (nonatomic, readonly) bool clsIsAestheticallyPrettyGood;
@property (nonatomic, readonly) bool clsIsBlurry;
@property (nonatomic, readonly) bool clsIsInSharedLibrary;
@property (readonly) bool clsIsInhabited;
@property (nonatomic, readonly) bool clsIsInterestingHDR;
@property (nonatomic, readonly) bool clsIsInterestingLivePhoto;
@property (nonatomic, readonly) bool clsIsInterestingPanorama;
@property (nonatomic, readonly) bool clsIsInterestingReframe;
@property (nonatomic, readonly) bool clsIsInterestingSDOF;
@property (nonatomic, readonly) bool clsIsInterestingVideo;
@property (nonatomic, readonly) bool clsIsLongExposure;
@property (nonatomic, readonly) bool clsIsLoopOrBounce;
@property (nonatomic, readonly) bool clsIsNonMemorable;
@property (nonatomic, readonly) bool clsIsScreenshotOrScreenRecording;
@property (nonatomic, readonly) bool clsIsUtility;
@property (nonatomic, readonly) CLLocation *clsLocation;
@property (nonatomic, readonly) unsigned long long clsPeopleCount;
@property (nonatomic, readonly) NSArray *clsPersonAndPetLocalIdentifiers;
@property (nonatomic, readonly) NSArray *clsPersonLocalIdentifiers;
@property (nonatomic, readonly) NSArray *clsPetLocalIdentifiers;
@property (nonatomic, readonly) long long clsPlayCount;
@property (nonatomic, readonly) CLSAssetProcessedSignals *clsProcessedSignals;
@property (nonatomic, readonly, copy) NSSet *clsSceneClassifications;
@property (nonatomic, readonly) VNSceneprint *clsSceneprint;
@property (nonatomic, readonly) long long clsShareCount;
@property (nonatomic, readonly) double clsSharpnessScore;
@property (readonly) unsigned long long clsSimilarityModelVersion;
@property (nonatomic, readonly) double clsSquareCropScore;
@property (nonatomic, readonly) NSArray *clsUnprefetchedPersonLocalIdentifiers;
@property (nonatomic, readonly) long long clsViewCount;
@property (nonatomic, readonly) NSDate *cls_localDate;
@property (nonatomic, readonly) NSDate *cls_universalDate;
@property (nonatomic, readonly) bool complete;
@property (nonatomic, readonly) bool containsAllMetadata;
@property (getter=isContentAdjustmentAllowed, nonatomic, readonly) bool contentAdjustmentAllowed;
@property (nonatomic, readonly) NSDate *creationDate;
@property (nonatomic, readonly) long long creationDateSource;
@property (nonatomic, readonly) NSString *croppingDebugDescription;
@property (retain) CLSCurationModel *curationModel;
@property (nonatomic, readonly) double curationScore;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) Class defaultImageProviderClass;
@property (nonatomic, readonly) unsigned long long deferredLogInfo;
@property (nonatomic, readonly) unsigned short deferredProcessingNeeded;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSString *directory;
@property (nonatomic, readonly) NSData *distanceIdentity;
@property (nonatomic, readonly) double duration;
@property (nonatomic, readonly) unsigned long long effectiveThumbnailIndex;
@property (nonatomic, readonly) int exifOrientation;
@property (nonatomic, readonly) id faceAdjustmentVersion;
@property (nonatomic, readonly) short faceAnalysisVersion;
@property (nonatomic, readonly) double faceAreaMaxX;
@property (nonatomic, readonly) double faceAreaMaxY;
@property (nonatomic, readonly) double faceAreaMinX;
@property (nonatomic, readonly) double faceAreaMinY;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } faceAreaRect;
@property (nonatomic, readonly) NSArray *faceRegions;
@property (getter=isFavorite, nonatomic, readonly) bool favorite;
@property (nonatomic, readonly) NSData *fetchColorNormalizationData;
@property (nonatomic, readonly) NSString *filename;
@property (nonatomic, readonly) bool hasAdjustments;
@property (readonly) bool hasCurationModel;
@property (nonatomic, readonly) bool hasEditableDepth;
@property (nonatomic, readonly) bool hasKeywords;
@property (nonatomic, readonly) bool hasPhotoColorAdjustments;
@property (nonatomic, readonly) bool hasPhotoStreamTagID;
@property (nonatomic, readonly) bool hasSyndicationInformation;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSNumber *hdrGain;
@property (getter=isHidden, nonatomic, readonly) bool hidden;
@property (getter=isHighFramerateVideo, nonatomic, readonly) bool highFramerateVideo;
@property (nonatomic, readonly) double highlightPromotionScore;
@property (nonatomic, readonly) double highlightVisibilityScore;
@property (nonatomic, readonly) double horizontalAccuracy;
@property (nonatomic, readonly) long long imageOrientation;
@property (nonatomic, readonly) NSDictionary *imageProperties;
@property (nonatomic, readonly) NSData *imageRequestHints;
@property (nonatomic, readonly) NSDate *importDate;
@property (getter=isInPlaceVideoTrimAllowed, nonatomic, readonly) bool inPlaceVideoTrimAllowed;
@property (nonatomic, readonly) bool isAdjusted;
@property (nonatomic, readonly) bool isAnimatedGIF;
@property (nonatomic, readonly) bool isAnimatedImage;
@property (nonatomic, readonly) bool isAudio;
@property (nonatomic, readonly) bool isAutoPlaybackEligibilityEstimated;
@property (nonatomic, readonly) bool isCinematicVideo;
@property (nonatomic, readonly) bool isCloudPhotoLibraryAsset;
@property (nonatomic, readonly) bool isCloudPlaceholder;
@property (nonatomic, readonly) bool isCloudSharedAsset;
@property (nonatomic, readonly) bool isEligibleForAutoPlayback;
@property (nonatomic, readonly) bool isFavorite;
@property (nonatomic, readonly) bool isGuestAsset;
@property (nonatomic, readonly) bool isHDRVideo;
@property (nonatomic, readonly) bool isHDVideo;
@property (nonatomic, readonly) bool isHEICSequence;
@property (nonatomic, readonly) bool isHEIF;
@property (nonatomic, readonly) bool isHighFrameRateVideo;
@property (nonatomic, readonly) bool isInCloud;
@property (nonatomic, readonly) bool isInSharedLibrary;
@property (nonatomic, readonly) bool isIncludedInCloudFeeds;
@property (nonatomic, readonly) bool isIncludedInMoments;
@property (nonatomic, readonly) bool isJPEG;
@property (nonatomic, readonly) bool isJPEG2000;
@property (nonatomic, readonly) bool isLocalVideoKeyFrameValid;
@property (nonatomic, readonly) bool isLoopingVideo;
@property (nonatomic, readonly) bool isMomentSharedAsset;
@property (nonatomic, readonly) bool isOffline;
@property (nonatomic, readonly) bool isPDF;
@property (nonatomic, readonly) bool isPNG;
@property (nonatomic, readonly) bool isPSD;
@property (nonatomic, readonly) bool isPartOfBurst;
@property (nonatomic, readonly) bool isPhoto;
@property (nonatomic, readonly) bool isPhotoIris;
@property (nonatomic, readonly) bool isPhotoIrisPlaceholder;
@property (nonatomic, readonly) bool isPhotoStreamPhoto;
@property (nonatomic, readonly) bool isProRes;
@property (nonatomic, readonly) bool isRAW;
@property (nonatomic, readonly) bool isRAWPlusJPEG;
@property (nonatomic, readonly) bool isReferencedAsset;
@property (nonatomic, readonly) bool isSpatialMedia;
@property (nonatomic, readonly) bool isStreamedVideo;
@property (nonatomic, readonly) bool isSyndicatedAssetSavedToUserLibrary;
@property (nonatomic, readonly) bool isTIFF;
@property (nonatomic, readonly) bool isTemporaryPlaceholder;
@property (nonatomic, readonly) bool isTimelapsePlaceholder;
@property (nonatomic, readonly) bool isVideo;
@property (nonatomic, readonly) bool isWalrusEnabled;
@property (getter=isLivePhoto, nonatomic, readonly) bool livePhoto;
@property (nonatomic, readonly) NSNumber *livePhotoSRLCompensationAmount;
@property (nonatomic, readonly) struct { long long x1; int x2; unsigned int x3; long long x4; } livePhotoVideoDuration;
@property (getter=isLivePhotoVisibilityAdjustmentAllowed, nonatomic, readonly) bool livePhotoVisibilityAdjustmentAllowed;
@property (nonatomic, readonly) unsigned long long livePhotoVisibilityState;
@property (nonatomic, readonly) NSDate *localCreationDate;
@property (nonatomic, readonly) NSString *localIdentifier;
@property (nonatomic, readonly) NSString *localizedGeoDescription;
@property (nonatomic, readonly) CLLocation *location;
@property (nonatomic, readonly) struct CLLocationCoordinate2D { double x1; double x2; } locationCoordinate;
@property (nonatomic, readonly) NSData *locationData;
@property (nonatomic, readonly) NSManagedObjectContext *managedObjectContextForFetchingResources;
@property (nonatomic, readonly) unsigned long long mediaSubtypes;
@property (nonatomic, readonly) long long mediaType;
@property (nonatomic, readonly) unsigned long long mediaType;
@property (nonatomic, readonly) NSString *metadataDebugDescription;
@property (nonatomic, readonly, copy) NSString *mf_localIdentifier;
@property (nonatomic, readonly) NSDate *modificationDate;
@property (nonatomic, readonly) bool needsDeferredProcessing;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } normalizedFaceAreaRect;
@property (nonatomic, readonly) NSManagedObjectID *objectID;
@property (nonatomic, readonly) NSString *originalColorSpace;
@property (nonatomic, readonly) int originalEXIFOrientation;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } originalFaceAreaRect;
@property (nonatomic, readonly) NSValue *originalFaceAreaRectValue;
@property (nonatomic, readonly) long long originalFileSize;
@property (nonatomic, readonly) NSString *originalFilename;
@property (nonatomic, readonly) unsigned long long originalFilesize;
@property (nonatomic, readonly) unsigned long long originalResourceChoice;
@property (nonatomic, readonly) float overallAestheticScore;
@property (nonatomic, readonly) bool participatesInLibraryScope;
@property (nonatomic, readonly, copy) NSString *pathForOriginalImageFile;
@property (nonatomic, readonly, copy) NSString *pathForOriginalVideoFile;
@property (nonatomic, readonly, copy) NSString *pathForTrimmedVideoFile;
@property (nonatomic, readonly) unsigned long long persistenceState;
@property (nonatomic, readonly) struct { long long x1; int x2; unsigned int x3; long long x4; } photoIrisStillDisplayTime;
@property (nonatomic, readonly) struct { long long x1; int x2; unsigned int x3; long long x4; } photoIrisVideoDuration;
@property (nonatomic, readonly) PHPhotoLibrary *photoLibrary;
@property (nonatomic, readonly) unsigned long long pixelHeight;
@property (nonatomic, readonly) unsigned long long pixelWidth;
@property (nonatomic, readonly) struct CLLocationCoordinate2D { double x1; double x2; } pl_coordinate;
@property (nonatomic, readonly) NSDate *pl_date;
@property (nonatomic, readonly) double pl_gpsHorizontalAccuracy;
@property (nonatomic, readonly) NSString *pl_uuid;
@property (nonatomic, readonly) long long playbackStyle;
@property (nonatomic, readonly) unsigned short playbackVariation;
@property (nonatomic, readonly) struct CGPoint { double x1; double x2; } positionOffset;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } preferredCropRect;
@property (nonatomic, readonly) NSNumber *px_FPS;
@property (nonatomic, readonly) NSNumber *px_ISORating;
@property (nonatomic, readonly, copy) NSString *px_adjustmentUuid;
@property (nonatomic, readonly) NSNumber *px_aperture;
@property (nonatomic, readonly) NSString *px_assetDescription;
@property (getter=px_isAudio, nonatomic, readonly) bool px_audio;
@property (nonatomic, readonly) unsigned int px_audioTrackFormat;
@property (nonatomic, readonly) NSNumber *px_bitRate;
@property (nonatomic, readonly) NSString *px_burstUUID;
@property (nonatomic, readonly) bool px_canLoadSyndicationAttributionInfo;
@property (nonatomic, readonly) bool px_canUseLocation;
@property (nonatomic, readonly) NSString *px_codec;
@property (nonatomic, readonly) NSDate *px_creationDate;
@property (nonatomic, readonly) NSAttributedString *px_curationDebugString;
@property (nonatomic, readonly) PXDebugValueList *px_curationDebugValues;
@property (nonatomic, readonly) long long px_currentVariationType;
@property (nonatomic, readonly) NSNumber *px_digitalZoomRatio;
@property (nonatomic, readonly) NSNumber *px_duration;
@property (nonatomic, readonly) NSString *px_exportFilename;
@property (nonatomic, readonly) NSNumber *px_exposureBias;
@property (getter=ipx_isFavorite, nonatomic, readonly) bool px_favorite;
@property (nonatomic, readonly) unsigned short px_fetchCloudLocalState;
@property (nonatomic, readonly) unsigned long long px_fileType;
@property (nonatomic, readonly) NSString *px_filename;
@property (nonatomic, readonly) NSNumber *px_filesize;
@property (nonatomic, readonly) NSNumber *px_flash;
@property (nonatomic, readonly) NSNumber *px_focalLength;
@property (nonatomic, readonly) NSNumber *px_focalLengthIn35mm;
@property (nonatomic, readonly) NSString *px_formattedCameraModel;
@property (nonatomic, readonly) bool px_hasKeywords;
@property (getter=px_isHidden, nonatomic, readonly) bool px_hidden;
@property (getter=px_isImage, nonatomic, readonly) bool px_image;
@property (getter=px_isInTrash, nonatomic, readonly) bool px_inTrash;
@property (nonatomic, readonly) bool px_isActionModeVideo;
@property (nonatomic, readonly) bool px_isCinematicVideo;
@property (nonatomic, readonly) bool px_isDepthEffect;
@property (nonatomic, readonly) bool*px_isExtendedPropertiesProcessed;
@property (nonatomic, readonly) bool px_isH264;
@property (nonatomic, readonly) bool px_isHEVC;
@property (nonatomic, readonly) bool px_isLivePhoto;
@property (nonatomic, readonly) bool px_isMomentSharedAsset;
@property (nonatomic, readonly) bool px_isPanorama;
@property (nonatomic, readonly) bool px_isProRes;
@property (nonatomic, readonly) bool px_isScreenRecording;
@property (nonatomic, readonly) bool px_isScreenshot;
@property (nonatomic, readonly) bool px_isSelfie;
@property (nonatomic, readonly) bool px_isSloMo;
@property (nonatomic, readonly) bool px_isSyndicatedAsset;
@property (nonatomic, readonly) bool px_isSyndicationPhotoLibraryAsset;
@property (nonatomic, readonly) bool px_isTimelapse;
@property (nonatomic, readonly) bool px_isUnsavedSyndicatedAsset;
@property (nonatomic, readonly) NSString *px_lensModel;
@property (nonatomic, readonly) NSString *px_make;
@property (nonatomic, readonly) NSNumber *px_meteringMode;
@property (nonatomic, readonly) NSString *px_model;
@property (nonatomic, readonly) NSDate *px_originalCreationDate;
@property (nonatomic, readonly) unsigned long long px_originalFileType;
@property (nonatomic, readonly) CLLocation *px_originalLocation;
@property (nonatomic, readonly) NSTimeZone *px_originalTimeZone;
@property (nonatomic, readonly) unsigned long long px_originalType;
@property (nonatomic, readonly) bool px_representsBurst;
@property (nonatomic, readonly) struct PXIntSize_st { unsigned long long x1; unsigned long long x2; } px_resolution;
@property (nonatomic, readonly) bool px_reverseLocationDataIsValid;
@property (nonatomic, readonly) NSNumber *px_sampleRate;
@property (nonatomic, readonly) NSNumber *px_semanticStylePreset;
@property (nonatomic, readonly) bool px_shotWithNightMode;
@property (nonatomic, readonly) NSNumber *px_shutterSpeed;
@property (nonatomic, readonly) <PXDisplayAsset> *px_storyResourceDisplayAsset;
@property (nonatomic, readonly) struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; } px_storyResourceFetchBestPlaybackRange;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } px_storyResourceFetchBestPlaybackRect;
@property (nonatomic, readonly) double px_storyResourceFetchCurationScore;
@property (nonatomic, readonly) long long px_storyResourceFetchFaceCount;
@property (nonatomic, readonly) NSData *px_storyResourceFetchNormalizationData;
@property (nonatomic, readonly) NSSet *px_storyResourceFetchSceneClassifications;
@property (nonatomic, readonly) PFVideoAdjustments *px_storyResourceFetchVideoAdjustments;
@property (nonatomic, readonly) NSString *px_storyResourceIdentifier;
@property (nonatomic, readonly) long long px_storyResourceKind;
@property (nonatomic, readonly) bool px_supportsImageProperties;
@property (nonatomic, readonly) NSTimeZone *px_timeZone;
@property (nonatomic, readonly) NSString *px_title;
@property (nonatomic, readonly) unsigned long long px_type;
@property (nonatomic, readonly) NSString *px_uniformTypeIdentifier;
@property (getter=px_isVideo, nonatomic, readonly) bool px_video;
@property (nonatomic, readonly) bool px_wasSavedThroughExternalApp;
@property (nonatomic, readonly) bool px_wasSavedThroughSyndication;
@property (nonatomic, readonly) NSNumber *px_whiteBalance;
@property (nonatomic, readonly) unsigned long long reframeVariation;
@property (nonatomic, readonly) bool representsBurst;
@property (nonatomic, readonly) bool requiresConfidentiality;
@property (getter=isResourceDownloadPossible, nonatomic, readonly) bool resourceDownloadPossible;
@property (nonatomic, readonly) NSString *resourcesDebugDescription;
@property (nonatomic, readonly) short savedAssetType;
@property (readonly, copy) NSSet *sceneClassifications;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } size;
@property (nonatomic, readonly) unsigned long long sourceType;
@property (readonly) Class superclass;
@property (getter=isSyncFailureHidden, nonatomic, readonly) bool syncFailureHidden;
@property (nonatomic, readonly) NSString *syndicatedAppDisplayName;
@property (nonatomic, readonly) long long syndicationEligibility;
@property (nonatomic, readonly) unsigned short syndicationState;
@property (readonly, copy) NSSet *temporalSceneClassifications;
@property (nonatomic, readonly) NSString *thumbnailIdentifier;
@property (nonatomic, readonly) unsigned long long thumbnailIndex;
@property (nonatomic, readonly) unsigned long long thumbnailVersion;
@property (nonatomic, readonly) NSTimeZone *timeZone;
@property (nonatomic, readonly) NSString *title;
@property (nonatomic, readonly) struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; } transform;
@property (getter=isTrashed, nonatomic, readonly) bool trashed;
@property (nonatomic, readonly) NSDate *trashedDate;
@property (getter=isTrimmableType, nonatomic, readonly) bool trimmableType;
@property (nonatomic, readonly) NSString *uniformTypeIdentifier;
@property (nonatomic, readonly) NSString *uuid;
@property (nonatomic, readonly) NSString *variationSuggestionStatesDetails;
@property (nonatomic, readonly) long long videoCpDurationValue;
@property (nonatomic, readonly) unsigned short videoCpVisibilityState;
@property (nonatomic, readonly) unsigned short videoDeferredProcessingNeeded;
@property (nonatomic, readonly) struct { long long x1; int x2; unsigned int x3; long long x4; } videoKeyFrameSourceTime;
@property (nonatomic, readonly) PFVideoAVObjectBuilder *videoObjectBuilder;
@property (nonatomic, readonly) double weight;

// Image: /System/Library/Frameworks/Photos.framework/Photos

+ (id)_assetFetchResultFromAssets:(id)arg1 options:(id)arg2;
+ (void)_batchFetchAdditionalPropertySetsIfNeeded:(id)arg1 forAssets:(id)arg2;
+ (id)_composePropertiesToFetchWithHint:(unsigned long long)arg1;
+ (void)_computeFingerPrintsOfAsset:(id)arg1 completionHandler:(id /* block */)arg2;
+ (id)_currentTimestampString;
+ (id)_descriptionForMediaSubtype:(unsigned long long)arg1;
+ (id)_descriptionForVariationSuggestionStates:(unsigned long long)arg1;
+ (id)_descriptionForVariationSuggestionType:(unsigned long long)arg1;
+ (unsigned long long)_extendedPropertyFetchHintsForPropertySets:(id)arg1;
+ (id)_fetchRepresentativeAssetInAssetCollection:(id)arg1;
+ (id)_imageManagerRequestLoggingQueue;
+ (id)_inq_highestImageManagerRequestIDsObserved;
+ (id)_inq_imageManagerRequestLogsByAssetUUID;
+ (id)_inq_imageManagerRequestMessagesByRequestIDForAssetUUID:(id)arg1 requestID:(long long)arg2;
+ (void)_inq_recordRequestID:(long long)arg1;
+ (void)_inq_trimToMostRecentImageManagerMessages;
+ (bool)_isLibraryScopeExiting:(id)arg1;
+ (bool)_isLivePhotoWithPhotoIris:(bool)arg1 hasAdjustments:(bool)arg2 videoCpDuration:(long long)arg3 videoCPVisibility:(unsigned short)arg4 sourceType:(unsigned long long)arg5;
+ (bool)_libraryScopeAssetContributedByCurrentUser:(id)arg1;
+ (id)_requestCuratedAssetInAssetCollection:(id)arg1 referenceAsset:(id)arg2 referencePersons:(id)arg3 fetchOptions:(id)arg4 onlyKey:(bool)arg5;
+ (id)_transformMediaSubtypeReferences:(id)arg1 inComparisonPredicate:(id)arg2 options:(id)arg3;
+ (id)_unfetchedPropertySetsForAssets:(id)arg1 fromPropertySets:(id)arg2;
+ (id)composabilityScoresOfAssets:(id)arg1 options:(id)arg2 error:(id*)arg3;
+ (id)corePropertiesToFetch;
+ (long long)countOfAssetsWithLocationFromUUIDs:(id)arg1 photoLibrary:(id)arg2;
+ (id)descriptionForMediaSubtypes:(unsigned long long)arg1;
+ (id)descriptionForMediaType:(long long)arg1;
+ (id)descriptionForPlaybackStyle:(long long)arg1;
+ (id)entityKeyMap;
+ (id)faceWorkerPropertiesToFetch;
+ (id)fetchAllAssetsInYearRepresentedByYearHighlight:(id)arg1 options:(id)arg2;
+ (id)fetchAssetsContainingAllPersons:(id)arg1 options:(id)arg2;
+ (id)fetchAssetsForBehavioralCurationWithOptions:(id)arg1;
+ (id)fetchAssetsForFaceGroups:(id)arg1 options:(id)arg2;
+ (id)fetchAssetsForFaces:(id)arg1 options:(id)arg2;
+ (id)fetchAssetsForKeywords:(id)arg1 options:(id)arg2;
+ (id)fetchAssetsForPerson:(id)arg1 faceCount:(unsigned long long)arg2 options:(id)arg3;
+ (id)fetchAssetsForPerson:(id)arg1 options:(id)arg2;
+ (id)fetchAssetsForPersons:(id)arg1 options:(id)arg2;
+ (id)fetchAssetsForReferences:(id)arg1 photoLibrary:(id)arg2;
+ (id)fetchAssetsForSearchLookupIdentifier:(id)arg1 options:(id)arg2;
+ (id)fetchAssetsFromCameraSinceDate:(id)arg1 options:(id)arg2;
+ (id)fetchAssetsGroupedByFaceUUIDForFaces:(id)arg1;
+ (id)fetchAssetsGroupedByFaceUUIDForFaces:(id)arg1 fetchPropertySets:(id)arg2;
+ (id)fetchAssetsInAssetCollection:(id)arg1 options:(id)arg2;
+ (id)fetchAssetsInAssetCollections:(id)arg1 options:(id)arg2;
+ (id)fetchAssetsInBoundingBoxWithTopLeftLocation:(id)arg1 bottomRightLocation:(id)arg2 options:(id)arg3;
+ (id)fetchAssetsInImportSessions:(id)arg1 options:(id)arg2;
+ (id)fetchAssetsInLibraryScope:(id)arg1 fromAssets:(id)arg2;
+ (id)fetchAssetsInLibraryScope:(id)arg1 options:(id)arg2;
+ (id)fetchAssetsInPreviewStateInLibraryScope:(id)arg1 options:(id)arg2;
+ (id)fetchAssetsInPreviewStateWithPhotosOrPhotosDeferredSuggestedByClientTypeWithOptions:(id)arg1;
+ (id)fetchAssetsInPreviewStateWithSuggestedByClientType:(short)arg1 options:(id)arg2;
+ (id)fetchAssetsMatchingAdjustedFingerPrint:(id)arg1 photoLibrary:(id)arg2;
+ (id)fetchAssetsMatchingMasterFingerPrint:(id)arg1 photoLibrary:(id)arg2;
+ (id)fetchAssetsWithALAssetURLs:(id)arg1 options:(id)arg2;
+ (id)fetchAssetsWithBurstIdentifier:(id)arg1 options:(id)arg2;
+ (id)fetchAssetsWithCloudIdentifiers:(id)arg1 options:(id)arg2;
+ (id)fetchAssetsWithCurrentUserAsLibraryScopeContributor:(bool)arg1 inLibraryScope:(id)arg2 options:(id)arg3;
+ (id)fetchAssetsWithLocalIdentifiers:(id)arg1 options:(id)arg2;
+ (id)fetchAssetsWithMediaType:(long long)arg1 options:(id)arg2;
+ (id)fetchAssetsWithObjectIDs:(id)arg1 options:(id)arg2;
+ (id)fetchAssetsWithOptions:(id)arg1;
+ (id)fetchAssetsWithSyndicationIdentifiers:(id)arg1 options:(id)arg2;
+ (id)fetchAssetsWithSyndicationIdentifiers:(id)arg1 options:(id)arg2 includeRejected:(bool)arg3;
+ (id)fetchAssetsWithUUIDs:(id)arg1 options:(id)arg2;
+ (id)fetchAssetsWithoutOriginalsInAssetCollection:(id)arg1 options:(id)arg2;
+ (id)fetchCuratedAssetsForMomentShareCreationWithAssets:(id)arg1 options:(id)arg2;
+ (id)fetchCuratedAssetsInAssetCollection:(id)arg1;
+ (id)fetchCuratedAssetsInAssetCollection:(id)arg1 options:(id)arg2;
+ (id)fetchCustomUserAssetsInMemory:(id)arg1 options:(id)arg2;
+ (id)fetchExtendedCuratedAndRepresentativeAssetsAssociatedWithMemory:(id)arg1 options:(id)arg2;
+ (id)fetchExtendedCuratedAssetsInAssetCollection:(id)arg1 options:(id)arg2;
+ (id)fetchGuestAssetsInCollectionContainingAsset:(id)arg1 options:(id)arg2;
+ (id)fetchGuestAssetsWithOptions:(id)arg1;
+ (id)fetchKeyAssetByHighlightUUIDForHighlights:(id)arg1 options:(id)arg2;
+ (id)fetchKeyAssetByMemoryUUIDForMemories:(id)arg1 options:(id)arg2;
+ (id)fetchKeyAssetBySuggestionUUIDForSuggestions:(id)arg1 options:(id)arg2;
+ (id)fetchKeyAssetForEachSuggestion:(id)arg1 options:(id)arg2;
+ (id)fetchKeyAssetForSceneIdentifier:(unsigned int)arg1 aboveConfidenceThreshold:(double)arg2 minimumSceneAnalysisVersion:(short)arg3 options:(id)arg4;
+ (id)fetchKeyAssetsInAssetCollection:(id)arg1 options:(id)arg2;
+ (id)fetchKeyCuratedAssetInAssetCollection:(id)arg1 referenceAsset:(id)arg2;
+ (id)fetchKeyCuratedAssetInAssetCollection:(id)arg1 referenceAsset:(id)arg2 options:(id)arg3;
+ (id)fetchKeyCuratedAssetInAssetCollection:(id)arg1 referencePersons:(id)arg2;
+ (id)fetchMovieCuratedAssetsInMemory:(id)arg1;
+ (id)fetchPredicateFromComparisonPredicate:(id)arg1 options:(id)arg2;
+ (id)fetchPreviewAssetsForMomentShareCreationWithAssets:(id)arg1 options:(id)arg2;
+ (id)fetchReducedCuratedAssetsInMemory:(id)arg1 options:(id)arg2;
+ (id)fetchReferencedAssetsWithOptions:(id)arg1;
+ (id)fetchRepresentativeAssetsInAssetCollection:(id)arg1;
+ (id)fetchSummaryCurationForHighlight:(id)arg1 fetchOptions:(id)arg2 allowsOnDemand:(bool)arg3 error:(id*)arg4;
+ (id)fetchSyndicatedAssetsWithOptions:(id)arg1;
+ (id)fetchSyndicatedAssetsWithOptions:(id)arg1 includeRejected:(bool)arg2;
+ (id)fetchType;
+ (id)fetchUserCuratedAssetsInMemory:(id)arg1;
+ (id)fetchUserCuratedAssetsInMemory:(id)arg1 options:(id)arg2;
+ (id)filterPredicateForSavedSyndicationAssetsOnly;
+ (id)filterPredicateForUnsavedSyndicationAssets;
+ (id)filterPredicateToExcludeNoSyndicationAssets;
+ (id)filterPredicateToIncludeOnlyReceivedSyndicatedAssets;
+ (id)identifierCode;
+ (id)imageManagerPropertiesToFetch;
+ (bool)isOriginalKnownUnsupportedFormatForAsset:(id)arg1 failureInfo:(id*)arg2;
+ (bool)isOriginalVideoComplementKnownUnsupportedFormatForAsset:(id)arg1 failureInfo:(id*)arg2;
+ (id)locationPropertiesToFetch;
+ (id)managedEntityName;
+ (bool)managedObjectSupportsAllowedForAnalysis;
+ (bool)managedObjectSupportsBursts;
+ (bool)managedObjectSupportsContributor;
+ (bool)managedObjectSupportsDuplicateVisibilityState;
+ (bool)managedObjectSupportsHiddenState;
+ (bool)managedObjectSupportsMontage;
+ (bool)managedObjectSupportsSavedAssetType;
+ (bool)managedObjectSupportsScreenshot;
+ (bool)managedObjectSupportsTrashedState;
+ (bool)managedObjectSupportsVisibilityState;
+ (id)originalUniformTypeIdentifierForAsset:(id)arg1;
+ (id)pl_managedAssetsForAssets:(id)arg1;
+ (id)predicateForSyndicatedAssetIdentifiers:(id)arg1;
+ (id)predicateForSyndicatedAssetIdentifiers:(id)arg1 includeRejected:(bool)arg2;
+ (id)propertiesToFetchWithHint:(unsigned long long)arg1;
+ (unsigned long long)propertyFetchHintsForPropertySets:(id)arg1;
+ (id)propertySetAccessorsByPropertySet;
+ (Class)propertySetClassForPropertySet:(id)arg1;
+ (id)propertySetsForPropertyFetchHints:(unsigned long long)arg1;
+ (id)quickClassificationFaceAdjustmentVersion;
+ (id)requestCuratedAssetsInAssetCollection:(id)arg1 options:(id)arg2;
+ (id)requestCuratedAssetsInAssetCollection:(id)arg1 referencePersons:(id)arg2 options:(id)arg3;
+ (id)senderIdentifierByAssetUUIDForAssets:(id)arg1;
+ (id)transformValueExpression:(id)arg1 forKeyPath:(id)arg2;

- (void).cxx_destruct;
- (id)ALAssetURL;
- (long long)RAWBadgeAttributes;
- (id)__dictionaryWithContentsOfData:(id)arg1;
- (void)_attachPropertyObjectOfClass:(Class)arg1 preFetchedProperties:(id)arg2;
- (long long)_baseVersionForAdjustmentData:(id)arg1 canHandleAdjustmentData:(bool)arg2;
- (bool)_canHandleAdjustmentData:(id)arg1 withOptions:(id)arg2;
- (id)_createAnalysisStatePropertyObject;
- (id)_createCommentPropertyObject;
- (void)_createExtendedPropertySetsIfNeededWithPropertyHint:(unsigned long long)arg1 fetchDictionary:(id)arg2;
- (id)_createKeywordPropertyObject;
- (id)_createPropertyObjectOfClass:(Class)arg1;
- (id)_createPropertyObjectOfClass:(Class)arg1 preFetchedProperties:(id)arg2;
- (id)_imageRequestOptionsForBaseVersion:(long long)arg1 options:(id)arg2 progressEstimateForImageProgress:(id /* block */)arg3;
- (void)_initializeCachedLocation;
- (void)_invalidateCachedLocation;
- (void)_renderTemporaryVideoForObjectBuilder:(id)arg1 resultHandler:(id /* block */)arg2;
- (void)_requestRenderedVideoForVideoURL:(id)arg1 adjustmentData:(id)arg2 canHandleAdjustmentData:(bool)arg3 resultHandler:(id /* block */)arg4;
- (id)_sceneClassificationsWithPredicate:(id)arg1;
- (void)_setupAdjustmentAndDeferredProcessingAttributesFromFetchDictionary:(id)arg1;
- (void)_setupAnalysisScoreAttributesFromFetchDictionary:(id)arg1;
- (void)_setupAuxiliaryIdentifierAttributesFromFetchDictionary:(id)arg1;
- (void)_setupBadgeAttributesFromFetchDictionary:(id)arg1;
- (void)_setupFaceAttributesFromFetchDictionary:(id)arg1;
- (void)_setupFileSystemAttributesFromFetchDictionary:(id)arg1;
- (void)_setupGeometryAttributesFromFetchDictionary:(id)arg1;
- (void)_setupHDRAndDepthMediaSubtypesFromFetchDictionary:(id)arg1;
- (void)_setupKindSubtypeFromFetchDictionary:(id)arg1;
- (void)_setupLocationAndCreationDateAttributesFromFetchDictionary:(id)arg1;
- (void)_setupReframeStatusFromFetchDictionary:(id)arg1;
- (void)_setupSpatialTypeFromFetchDictionary:(id)arg1;
- (void)_setupTypeAndPersistenceStateAttributesFromFetchDictionary:(id)arg1;
- (void)_setupUIStateAndTrashAttributesFromFetchDictionary:(id)arg1;
- (id)_uncachedLocation;
- (id)_unfetchedPropertySetsFromPropertySets:(id)arg1;
- (id)_videoRequestOptionsForBaseVersion:(long long)arg1 options:(id)arg2 progressEstimateForVideoProgress:(id /* block */)arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })acceptableCropRect;
- (id)adjustmentFormatIdentifier;
- (id)adjustmentProperties;
- (id)adjustmentTimestamp;
- (id)adjustmentVersion;
- (id)adjustmentsDebugMetadata;
- (id)aestheticProperties;
- (id)allSceneClassifications;
- (int)analysisStateForWorkerType:(short)arg1 outLastIgnoreDate:(id*)arg2 outIgnoreUntilDate:(id*)arg3;
- (id)analysisStateModificationDate;
- (double)aspectRatio;
- (id)assetAnalysisStateProperties;
- (bool)assetDescriptionWasSet;
- (short)assetSource;
- (id)assetUserActivityProperties;
- (id)assetsLibraryURL;
- (int)avalanchePickType;
- (unsigned short)bundleScope;
- (id)burstIdentifier;
- (unsigned long long)burstSelectionTypes;
- (id)cameraCaptureDeviceProperties;
- (bool)canFlipFullSizeRender;
- (bool)canPerformEditOperation:(long long)arg1;
- (bool)canPerformSharingAction;
- (bool)canPlayAutoloop;
- (bool)canPlayLongExposure;
- (bool)canPlayLoopingVideo;
- (bool)canPlayMirror;
- (bool)canPlayPhotoIris;
- (bool)canUseLocationCoordinateForLocation;
- (void)cancelContentEditingInputRequest:(unsigned long long)arg1;
- (Class)changeRequestClass;
- (id)characterRecognitionProperties;
- (id)cloudAssetGUID;
- (id)cloudIdentifier;
- (bool)cloudIsDeletable;
- (id)cloudLocalStateProperties;
- (long long)cloudPlaceholderKind;
- (long long)cloudSharedAssetPlaceholderKind;
- (id)coarseLocationProperties;
- (id)commentProperties;
- (bool)complete;
- (unsigned long long)contentChangeFromAsset:(id)arg1;
- (id)creationDate;
- (long long)creationDateSource;
- (id)croppingDebugDescription;
- (id)curationProperties;
- (double)curationScore;
- (id)debugFilename;
- (unsigned short)deferredProcessingNeeded;
- (id)description;
- (id)descriptionForAestheticsWithManagedAsset:(id)arg1;
- (id)descriptionForMediaAnalysisWithManagedAsset:(id)arg1;
- (id)descriptionForPhotoAnanlysisWallpaperProeprtiesWithManagedAsset:(id)arg1;
- (id)descriptionProperties;
- (id)destinationAssetCopyProperties;
- (id)detailedDebugDescriptionInLibrary:(id)arg1;
- (id)directory;
- (id)distanceIdentity;
- (double)duration;
- (unsigned long long)effectiveThumbnailIndex;
- (id)evaluationDebugMetadata;
- (int)exifOrientation;
- (id)faceAdjustmentVersion;
- (short)faceAnalysisVersion;
- (double)faceAreaMaxX;
- (double)faceAreaMaxY;
- (double)faceAreaMinX;
- (double)faceAreaMinY;
- (id)faceRegions;
- (id)fileURLForFullsizeRenderImage;
- (id)fileURLForVideoComplementFile;
- (id)fileURLsForDiagnosticFiles;
- (id)filename;
- (id)gatingDebugMetadata;
- (void)generateLargeThumbnailFileIfNecessary;
- (void)getFingerPrintForAssetType:(long long)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)getMasterFingerPrintWithCompletionHandler:(id /* block */)arg1;
- (id)gridMetadataProperties;
- (bool)hasAdjustments;
- (bool)hasContentEqualTo:(id)arg1;
- (bool)hasEditableDepth;
- (bool)hasKeywords;
- (bool)hasLegacyAdjustments;
- (bool)hasPhotoColorAdjustments;
- (bool)hasPhotoStreamTagID;
- (id)hdrGain;
- (double)highlightPromotionScore;
- (double)highlightVisibilityScore;
- (id)iconicScoreProperties;
- (long long)imageOrientation;
- (id)imageRequestHints;
- (struct CGSize { double x1; double x2; })imageSize;
- (id)importProperties;
- (id)initWithFetchDictionary:(id)arg1 propertyHint:(unsigned long long)arg2 photoLibrary:(id)arg3;
- (bool)isAnimatedGIF;
- (bool)isAudio;
- (bool)isCinematicVideo;
- (bool)isCloudPhotoLibraryAsset;
- (bool)isCloudPlaceholder;
- (bool)isCloudSharedAsset;
- (bool)isDeleted;
- (bool)isFavorite;
- (bool)isGuestAsset;
- (bool)isHDRVideo;
- (bool)isHDVideo;
- (bool)isHEICSequence;
- (bool)isHEIF;
- (bool)isHidden;
- (bool)isHighFrameRateVideo;
- (bool)isInFlight;
- (bool)isIncludedInCloudFeeds;
- (bool)isIncludedInMoments;
- (bool)isIncompleteLivePhotoMissingVideoComplement;
- (bool)isJPEG;
- (bool)isJPEG2000;
- (bool)isLocalVideoKeyFrameValid;
- (bool)isLocatedAtCoordinates:(struct CLLocationCoordinate2D { double x1; double x2; })arg1;
- (bool)isLoopingVideo;
- (bool)isMediaSubtype:(unsigned long long)arg1;
- (bool)isMomentSharedAsset;
- (bool)isOffline;
- (bool)isOriginalRaw;
- (bool)isOriginalSRGB;
- (bool)isPDF;
- (bool)isPNG;
- (bool)isPSD;
- (bool)isPartOfBurst;
- (bool)isPhoto;
- (bool)isPhotoIris;
- (bool)isPhotoIrisPlaceholder;
- (bool)isPhotoStreamPhoto;
- (bool)isPrimaryImageFormat;
- (bool)isProRes;
- (bool)isRAW;
- (bool)isRAWPlusJPEG;
- (bool)isReferencedAsset;
- (bool)isScreenRecording;
- (bool)isSpatialMedia;
- (bool)isStreamedVideo;
- (bool)isSyncFailureHidden;
- (bool)isSyndicatedAssetSavedToUserLibrary;
- (bool)isTIFF;
- (bool)isTimelapsePlaceholder;
- (bool)isTrashed;
- (bool)isVariationSuggestionStatesUnknown;
- (bool)isVideo;
- (bool)isWalrusEnabled;
- (id)keywordProperties;
- (short)kind;
- (short)kindSubtype;
- (id)libraryID;
- (id)libraryScopeProperties;
- (id)livePhotoSRLCompensationAmount;
- (id)localCreationDate;
- (id)localDateProperties;
- (id)location;
- (struct CLLocationCoordinate2D { double x1; double x2; })locationCoordinate;
- (id)locationData;
- (id)locationDataProperties;
- (id)mainFileURL;
- (id)managedAssetForPhotoLibrary:(id)arg1;
- (id)managedObjectContextForFetchingResources;
- (id)mediaAnalysisProperties;
- (unsigned long long)mediaSubtypes;
- (long long)mediaType;
- (id)messagesForRecentImageManagerRequests;
- (id)metadataDebugDescription;
- (id)modificationDate;
- (id)montageProperties;
- (bool)needsDeferredProcessing;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })normalizedFaceAreaRect;
- (id)objectReference;
- (int)orientation;
- (id)originalAVAssetCommonMetadata;
- (id)originalAVAssetOrProxy;
- (unsigned long long)originalChoiceToFallbackForUnsupportRAW;
- (id)originalColorSpace;
- (id)originalCreationDateWithTimeZone:(id*)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })originalFaceAreaRect;
- (id)originalFaceAreaRectValue;
- (id)originalFilename;
- (long long)originalImageOrientation;
- (id)originalImageProperties;
- (struct CGSize { double x1; double x2; })originalImageSize;
- (id)originalMetadataProperties;
- (unsigned long long)originalResourceChoice;
- (id)originalUTI;
- (float)overallAestheticScore;
- (bool)participatesInLibraryScope;
- (id)pathForAdjustmentDataFile;
- (id)pathForAdjustmentFile;
- (id)pathForOriginalFile;
- (unsigned long long)persistenceState;
- (id)photoAnalysisWallpaperProperties;
- (id)photoIrisProperties;
- (id)photosInfoPanelExtendedProperties;
- (id)photosInfoPanelLocationProperties;
- (id)photosOneUpProperties;
- (unsigned long long)pixelHeight;
- (unsigned long long)pixelWidth;
- (id)pl_managedAsset;
- (id)pl_managedAssetFromPhotoLibrary:(id)arg1;
- (id)pl_photoLibrary;
- (long long)playbackStyle;
- (unsigned short)playbackVariation;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })preferredCropRect;
- (void)recordImageManagerMessageForRequestID:(int)arg1 message:(id)arg2;
- (unsigned long long)reframeVariation;
- (bool)representsBurst;
- (unsigned long long)requestContentEditingInputWithOptions:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)resourcesDebugDescription;
- (short)savedAssetType;
- (id)sceneAnalysisProperties;
- (id)sceneClassifications;
- (id)sceneClassificationsOfTypes:(id)arg1;
- (id)sceneprintProperties;
- (void)setAssetDescriptionWasSet:(bool)arg1;
- (void)setCanUseLocationCoordinateForLocation:(bool)arg1;
- (bool)shouldUseRAWResourceAsUnadjustedEditBase;
- (bool)shouldUseRAWResourceWithOriginalResourceChoice:(unsigned long long)arg1;
- (unsigned long long)sourceType;
- (id)spatialMediaProperties;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })suggestedCropForTargetSize:(struct CGSize { double x1; double x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })suggestedCropForTargetSize:(struct CGSize { double x1; double x2; })arg1 withFocusRegion:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })suggestedCropForTargetSize:(struct CGSize { double x1; double x2; })arg1 withFocusRegion:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 andOutputCropScore:(double*)arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })suggestedCropForTargetSize:(struct CGSize { double x1; double x2; })arg1 withOcclusionRegion:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 andOutputCropScore:(double*)arg3;
- (id)syndicatedAppDisplayName;
- (long long)syndicationEligibility;
- (unsigned short)syndicationState;
- (id)temporalSceneClassifications;
- (id)thumbnailIdentifier;
- (unsigned long long)thumbnailIndex;
- (id)title;
- (id)trashedDate;
- (id)uniformTypeIdentifier;
- (id)variationSuggestionStatesDetails;
- (unsigned long long)variationSuggestionStatesForVariationType:(unsigned long long)arg1;
- (long long)videoCpDurationValue;
- (unsigned short)videoCpVisibilityState;
- (unsigned short)videoDeferredProcessingNeeded;
- (id)visualSearchProperties;
- (id)wallpaperCroppingDebugKeyValuePairs;

// Image: /System/Library/Frameworks/MessageUI.framework/MessageUI

- (id)mf_localIdentifier;

// Image: /System/Library/PrivateFrameworks/CameraEffectsKit.framework/CameraEffectsKit

- (void)isAssetLocalWithCompletion:(id /* block */)arg1 requiresDerivative:(bool)arg2;

// Image: /System/Library/PrivateFrameworks/MediaAnalysis.framework/MediaAnalysis

+ (bool)enableStickerScore;
+ (id)vcp_fetchAssetsMatchingFingerprint:(id)arg1 forPhotoLibrary:(id)arg2;
+ (id)vcp_fetchOptionsForLibrary:(id)arg1 forTaskID:(unsigned long long)arg2;
+ (unsigned long long)vcp_fullAnalysisTypesForAssetType:(unsigned long long)arg1;
+ (double)vcp_ocrGatingThreshold;
+ (bool)vcp_usePHFace;
+ (bool)vcp_usePHFaceExpression;

- (id)vcp_PHFaces:(id)arg1;
- (unsigned long long)vcp_abnormalImageDimensionForSceneNet;
- (id)vcp_animatedStickerScore;
- (id)vcp_confidenceForSceneIdentifier:(unsigned int)arg1;
- (bool)vcp_eligibleForVideoDownload:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })vcp_faceRectFrom:(id)arg1;
- (id)vcp_fingerprint:(id)arg1;
- (unsigned long long)vcp_flagsForPHFace:(id)arg1 withFaceRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (unsigned long long)vcp_fullAnalysisTypes;
- (unsigned long long)vcp_fullAnalysisTypesForResources:(id)arg1;
- (bool)vcp_hasAdjustments:(id)arg1;
- (bool)vcp_isDownloadGated;
- (bool)vcp_isLivePhoto;
- (bool)vcp_isMontageWithTaskID:(unsigned long long)arg1;
- (bool)vcp_isPano;
- (bool)vcp_isSdofPhoto;
- (bool)vcp_isShortMovie;
- (bool)vcp_isVideoSlowmo;
- (bool)vcp_isVideoTimelapse;
- (unsigned long long)vcp_majorDimensionForResource:(id)arg1 withTargetResolution:(unsigned long long)arg2;
- (id)vcp_modificationDate;
- (bool)vcp_needFaceProcessing;
- (bool)vcp_needSceneProcessing;
- (bool)vcp_needsFullAnalysisProcessing;
- (bool)vcp_needsOCRProcessing;
- (bool)vcp_needsPECProcessing;
- (bool)vcp_needsProcessingForTask:(unsigned long long)arg1;
- (bool)vcp_needsStickerGatingProcessing;
- (bool)vcp_needsVisualSearchProcessing;
- (unsigned long long)vcp_ocrMajorDimensionForResource:(id)arg1;
- (struct CGSize { double x1; double x2; })vcp_originalSize;
- (id)vcp_passedOCRGating;
- (int)vcp_queryPHFaces:(unsigned long long*)arg1 results:(id*)arg2;
- (bool)vcp_quickFaceClassificationDone;
- (unsigned long long)vcp_targetMajorDimensionForImageWithWidth:(unsigned long long)arg1 height:(unsigned long long)arg2 andMinPreferredMinorDimension:(unsigned long long)arg3;
- (id)vcp_typeDescription;

// Image: /System/Library/PrivateFrameworks/MediaMiningKit.framework/MediaMiningKit

- (id)cls_localDateComponents;

// Image: /System/Library/PrivateFrameworks/PhotosGraph.framework/PhotosGraph

- (id)asset;
- (double)horizontalAccuracy;
- (id)timeZone;

// Image: /System/Library/PrivateFrameworks/PhotosIntelligence.framework/PhotosIntelligence

+ (id)_filterPersonUUIDs:(id)arg1 fromPersonUUIDsByAssetUUID:(id)arg2 personUUIDByMergeCandidateUUID:(id)arg3;
+ (id)_personUUIDsByAssetUUIDWithAssetUUIDs:(id)arg1 personUUIDs:(id)arg2 photoLibrary:(id)arg3;
+ (id)_personUUIDsByAssetUUIDWithAssets:(id)arg1 personUUIDs:(id)arg2;
+ (id)_petUUIDsByAssetUUIDWithAssetUUIDs:(id)arg1 photoLibrary:(id)arg2;
+ (void)_populateAsset:(id)arg1 withPersonUUIDs:(id)arg2 consolidatedPersonUUIDs:(id)arg3 petUUIDs:(id)arg4;
+ (id)clsAllAssetsFromFetchResult:(id)arg1 prefetchOptions:(unsigned long long)arg2 curationContext:(id)arg3;
+ (unsigned long long)clsPrefetchOptionsForKeyAsset;
+ (bool)isScore:(double)arg1 closeToValue:(double)arg2;
+ (void)prefetchOnAssets:(id)arg1 options:(unsigned long long)arg2 curationContext:(id)arg3;
+ (void)prefetchScenesOnAssets:(id)arg1;
+ (id)verifiedPersonLocalIdentifiersByAssetUUIDWithAssets:(id)arg1;

- (void)cacheCurationScore:(double)arg1;
- (double)clsActivityScore;
- (double)clsAestheticScore;
- (double)clsAutoplaySuggestionScore;
- (bool)clsAvoidIfPossibleAsKeyItemForMemories:(bool)arg1 allowGuestAsset:(bool)arg2;
- (bool)clsAvoidIfPossibleAsKeyItemForMemories:(bool)arg1 allowGuestAsset:(bool)arg2 reason:(id*)arg3;
- (float)clsBehavioralScore;
- (void)clsCacheIconicSceneScore:(double)arg1;
- (void)clsCacheIsUtility:(bool)arg1;
- (id)clsConsolidatedPersonLocalIdentifiers;
- (double)clsContentScore;
- (double)clsDuration;
- (double)clsExposureScore;
- (bool)clsFaceInformationArePrefetched;
- (id)clsFaceInformationSummary;
- (double)clsFaceScore;
- (bool)clsHasCustomPlaybackVariation;
- (bool)clsHasInterestingAudioClassification;
- (bool)clsHasInterestingScenes;
- (bool)clsHasPoorResolution;
- (double)clsHighlightVisibilityScore;
- (double)clsIconicSceneScoreWithSceneGeography:(id)arg1;
- (double)clsIconicScore;
- (id)clsIdentifier;
- (float)clsInteractionScore;
- (short)clsInterestingAudioClassifications;
- (bool)clsIsAestheticallyPrettyGood;
- (bool)clsIsBlurry;
- (bool)clsIsFaceProcessed;
- (bool)clsIsGuestAsset;
- (bool)clsIsInSharedLibrary;
- (bool)clsIsInhabited;
- (bool)clsIsInterestingHDR;
- (bool)clsIsInterestingLivePhoto;
- (bool)clsIsInterestingPanorama;
- (bool)clsIsInterestingReframe;
- (bool)clsIsInterestingSDOF;
- (bool)clsIsInterestingVideo;
- (bool)clsIsLongExposure;
- (bool)clsIsLoopOrBounce;
- (bool)clsIsNonMemorable;
- (bool)clsIsSceneProcessed;
- (bool)clsIsScreenshotOrScreenRecording;
- (bool)clsIsTragicFailure;
- (bool)clsIsUtility;
- (id)clsLocation;
- (unsigned long long)clsPeopleCount;
- (bool)clsPeopleCountIsPrefetched;
- (id)clsPersonAndPetLocalIdentifiers;
- (id)clsPersonLocalIdentifiers;
- (bool)clsPersonLocalIdentifiersArePrefetched;
- (id)clsPetLocalIdentifiers;
- (long long)clsPlayCount;
- (id)clsProcessedSignals;
- (id)clsSceneClassifications;
- (bool)clsSceneClassificationsArePrefetched;
- (id)clsSceneprint;
- (void)clsSetConsolidatedPersonLocalIdentifiers:(id)arg1;
- (void)clsSetFaceInformationSummary:(id)arg1;
- (void)clsSetPeopleCount:(id)arg1;
- (void)clsSetPersonLocalIdentifiers:(id)arg1;
- (void)clsSetPetLocalIdentifiers:(id)arg1;
- (void)clsSetProcessedSignals:(id)arg1;
- (void)clsSetSceneClassifications:(id)arg1;
- (long long)clsShareCount;
- (double)clsSharpnessScore;
- (unsigned long long)clsSimilarityModelVersion;
- (double)clsSquareCropScore;
- (id)clsUnprefetchedPersonLocalIdentifiers;
- (unsigned long long)clsVideoFaceCount;
- (double)clsVideoScore;
- (long long)clsViewCount;
- (double)clsWallpaperScore;
- (id)cls_localDate;
- (id)cls_universalDate;
- (double)cropScoreForTargetAspectRatio:(double)arg1 forFaces:(bool)arg2;
- (id)curationModel;
- (bool)hasCurationModel;
- (bool)isGold;
- (bool)isRegularGem;
- (bool)isShinyGem;
- (bool)isSubtype:(unsigned long long)arg1;
- (struct CLLocationCoordinate2D { double x1; double x2; })pl_coordinate;
- (id)pl_date;
- (double)pl_gpsHorizontalAccuracy;
- (id)pl_uuid;
- (bool)prepareWithAlternateJunkingHeuristics:(bool)arg1 withContext:(id)arg2 curationContext:(id)arg3;
- (double)scoreInContext:(id)arg1;
- (void)setCurationModel:(id)arg1;

// Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore

+ (id)addressWithoutUnitedStatesZipCode:(id)arg1;
+ (id)px_fetchAssetsInArray:(id)arg1 photoLibrary:(id)arg2;
+ (id)px_fetchPlacesAssetsInAssetCollection:(id)arg1 options:(id)arg2;
+ (void)px_generateResourceFilesForAssets:(id)arg1 completionHandler:(id /* block */)arg2;
+ (id)px_orderedAssetsFromAssets:(id)arg1 sortDescriptors:(id)arg2;

- (id)_deferredProcessingStringWithEnum:(unsigned short)arg1;
- (id)_faceNamesStringForAsset;
- (id)_imageProcessingFlags;
- (id)_junkClassificationStringWithClassifications:(id)arg1;
- (id)_ocrStrings;
- (id)_px_currentRAWResource;
- (id)_sceneClassificationStringWithClassifications:(id)arg1;
- (id)_sdClassificationStringWithClassifications:(id)arg1;
- (id)_userFeedbackScoreInfo;
- (id)_videoDeferredProcessingNeededString:(unsigned short)arg1;
- (float)audioScore;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })bestCropRectForAspectRatio:(double)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })bestCropRectForAspectRatio:(double)arg1 verticalContentMode:(long long)arg2 cropMode:(long long)arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })bestCropRectForAspectRatioV2:(double)arg1 verticalContentMode:(long long)arg2 cropMode:(long long)arg3;
- (Class)defaultImageProviderClass;
- (void)enumerateCropVariantsForTargetSize:(struct CGSize { double x1; double x2; })arg1 preferFaceCrops:(bool)arg2 usingBlock:(id /* block */)arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })faceAreaRect;
- (id)fetchColorNormalizationData;
- (id)importDate;
- (bool)ipx_isFavorite;
- (bool)ipx_isRAWOnTop;
- (bool)isAutoPlaybackEligibilityEstimated;
- (long long)isContentEqualTo:(id)arg1;
- (bool)isEligibleForAutoPlayback;
- (bool)isInCloud;
- (bool)isInSharedLibrary;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })livePhotoVideoDuration;
- (id)localizedDetailedGeoDescriptionForRTL:(bool)arg1;
- (id)localizedGeoDescription;
- (long long)originalFileSize;
- (struct CGPoint { double x1; double x2; })positionOffset;
- (id)px_FPS;
- (id)px_ISORating;
- (id)px_accessibilityLabelForStyles:(unsigned long long)arg1;
- (id)px_adjustmentUuid;
- (id)px_aperture;
- (id)px_assetDescription;
- (unsigned int)px_audioTrackFormat;
- (id)px_bitRate;
- (id)px_burstUUID;
- (bool)px_canLoadSyndicationAttributionInfo;
- (bool)px_canUseLocation;
- (id)px_codec;
- (id)px_coreDataBrowserURL;
- (id)px_creationDate;
- (id)px_curationDebugString;
- (id)px_curationDebugValues;
- (long long)px_currentVariationType;
- (id)px_detailedDebugDescriptionInLibrary:(id)arg1;
- (id)px_digitalZoomRatio;
- (id)px_duration;
- (id)px_exportFilename;
- (id)px_exposureBias;
- (unsigned short)px_fetchCloudLocalState;
- (unsigned long long)px_fileType;
- (id)px_filename;
- (id)px_filesize;
- (id)px_flash;
- (id)px_focalLength;
- (id)px_focalLengthIn35mm;
- (id)px_formattedCameraModel;
- (bool)px_hasKeywords;
- (bool)px_isActionModeVideo;
- (bool)px_isAudio;
- (bool)px_isCinematicVideo;
- (bool)px_isDepthEffect;
- (bool)px_isExtendedPropertiesProcessed;
- (bool)px_isH264;
- (bool)px_isHEVC;
- (bool)px_isHidden;
- (bool)px_isImage;
- (bool)px_isInTrash;
- (bool)px_isLivePhoto;
- (bool)px_isMomentSharedAsset;
- (bool)px_isPanorama;
- (bool)px_isProRes;
- (bool)px_isRecommendationSeenForVariationType:(long long)arg1;
- (bool)px_isScreenRecording;
- (bool)px_isScreenshot;
- (bool)px_isSelfie;
- (bool)px_isSloMo;
- (bool)px_isSupportedApp:(id)arg1;
- (bool)px_isSyndicatedAsset;
- (bool)px_isSyndicationPhotoLibraryAsset;
- (bool)px_isTimelapse;
- (bool)px_isUnsavedSyndicatedAsset;
- (bool)px_isVariationTypeRecommended:(long long)arg1;
- (bool)px_isVideo;
- (id)px_lensModel;
- (id)px_localizedGeoDescriptionForRTL:(bool)arg1;
- (id)px_make;
- (id)px_meteringMode;
- (id)px_model;
- (id)px_navigationURLQueryItemWithPrefix:(id)arg1;
- (id)px_navigationURLWithContainerCollection:(id)arg1;
- (id)px_originalCreationDate;
- (unsigned long long)px_originalFileType;
- (id)px_originalLocation;
- (id)px_originalTimeZone;
- (unsigned long long)px_originalType;
- (float)px_playbackScore;
- (bool)px_representsBurst;
- (struct PXIntSize_st { unsigned long long x1; unsigned long long x2; })px_resolution;
- (bool)px_reverseLocationDataIsValid;
- (id)px_sampleRate;
- (id)px_semanticStylePreset;
- (bool)px_shotWithNightMode;
- (id)px_shutterSpeed;
- (id)px_singleLineMailingAddress;
- (id)px_slHighlightWithError:(id*)arg1;
- (id)px_storyResourceDisplayAsset;
- (struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })px_storyResourceFetchBestPlaybackRange;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })px_storyResourceFetchBestPlaybackRect;
- (double)px_storyResourceFetchCurationScore;
- (long long)px_storyResourceFetchFaceCount;
- (id)px_storyResourceFetchNormalizationData;
- (id)px_storyResourceFetchSceneClassifications;
- (id)px_storyResourceFetchVideoAdjustments;
- (id)px_storyResourceIdentifier;
- (long long)px_storyResourceKind;
- (bool)px_supportsImageProperties;
- (id)px_timeZone;
- (id)px_title;
- (unsigned long long)px_type;
- (id)px_uniformTypeIdentifier;
- (bool)px_wasSavedThroughExternalApp;
- (bool)px_wasSavedThroughSyndication;
- (id)px_whiteBalance;
- (bool)requiresConfidentiality;
- (struct CGSize { double x1; double x2; })size;
- (id)stringMinutesTimeRangeFromTimeRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg1;
- (unsigned long long)thumbnailVersion;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })transform;
- (double)weight;
- (double)weightUsingCriterion:(long long)arg1;
- (double)weightUsingWeightingScheme:(long long)arg1;

// Image: /System/Library/PrivateFrameworks/PhotosUIEdit.framework/PhotosUIEdit

- (bool)containsAllMetadata;
- (id)imageProperties;
- (bool)isAdjusted;
- (bool)isAnimatedImage;
- (bool)isContentAdjustmentAllowed;
- (bool)isHighFramerateVideo;
- (bool)isInPlaceVideoTrimAllowed;
- (bool)isLivePhoto;
- (bool)isLivePhotoVisibilityAdjustmentAllowed;
- (bool)isResourceDownloadPossible;
- (bool)isTemporaryPlaceholder;
- (bool)isTrimmableType;
- (int)originalEXIFOrientation;
- (unsigned long long)originalFilesize;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })photoIrisStillDisplayTime;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })photoIrisVideoDuration;

// Image: /System/Library/PrivateFrameworks/PhotosUIPrivate.framework/PhotosUIPrivate

+ (long long)_pu_mediaTypeForAssets:(id)arg1;
+ (long long)pu_commonMediaTypeForPhotoCount:(long long)arg1 videoCount:(long long)arg2 otherCount:(long long)arg3;
+ (id)pu_typeStringForAssets:(id)arg1;
+ (id)pu_typeStringForMediaType:(long long)arg1;

- (id)accessibilityDescription;
- (bool)containsAllMetadata;
- (unsigned long long)contentChangeFromDisplayAsset:(id)arg1;
- (unsigned long long)deferredLogInfo;
- (bool)hasSyndicationInformation;
- (id)imageProperties;
- (bool)isAdjusted;
- (bool)isAnimatedImage;
- (bool)isCloudPhotoLibraryEnabled;
- (bool)isContentAdjustmentAllowed;
- (unsigned long long)isContentEqualTo:(id)arg1;
- (bool)isHighFramerateVideo;
- (bool)isInPlaceVideoTrimAllowed;
- (bool)isLivePhoto;
- (bool)isLivePhotoVisibilityAdjustmentAllowed;
- (bool)isResourceDownloadPossible;
- (bool)isTemporaryPlaceholder;
- (bool)isTrimmableType;
- (unsigned long long)livePhotoVisibilityState;
- (int)originalEXIFOrientation;
- (unsigned long long)originalFilesize;
- (id)pathForOriginalImageFile;
- (id)pathForOriginalVideoFile;
- (id)pathForTrimmedVideoFile;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })photoIrisStillDisplayTime;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })photoIrisVideoDuration;
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[3]; })pu_vitalityPerspectiveTransform;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })videoKeyFrameSourceTime;
- (id)videoObjectBuilder;

// Image: /System/Library/PrivateFrameworks/PlacesKit.framework/PlacesKit

+ (id)pk_fetchPlacesAssetsInAssetCollection:(id)arg1 shouldMergeOptionFetchPropertySets:(bool)arg2 options:(id)arg3;

- (long long)compareTo:(id)arg1;
- (struct CLLocationCoordinate2D { double x1; double x2; })coordinate;
- (long long)pk_isContentEqualTo:(id)arg1;

@end
