
@interface PHLibraryScope : PHObject <PHShare> {
    short  _autoSharePolicy;
    unsigned long long  _cloudItemCount;
    unsigned long long  _cloudPhotoCount;
    unsigned long long  _cloudVideoCount;
    NSDate * _creationDate;
    long long  _exitState;
    NSDate * _expiryDate;
    bool  _libraryScopeInLocalMode;
    short  _participantCloudUpdateState;
    short  _previewState;
    short  _publicPermission;
    short  _publishState;
    NSData * _rulesData;
    NSString * _scopeIdentifier;
    short  _scopeSyncingState;
    NSURL * _shareURL;
    unsigned short  _status;
    NSString * _title;
    unsigned short  _trashedState;
}

@property (nonatomic, readonly) short autoSharePolicy;
@property (nonatomic, readonly) unsigned long long cloudItemCount;
@property (nonatomic, readonly) unsigned long long cloudPhotoCount;
@property (nonatomic, readonly) unsigned long long cloudVideoCount;
@property (nonatomic, readonly) NSDate *creationDate;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) long long exitState;
@property (nonatomic, readonly) NSDate *expiryDate;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool libraryScopeInLocalMode;
@property (nonatomic, readonly) short participantCloudUpdateState;
@property (nonatomic, readonly) short previewState;
@property (nonatomic, readonly) short publicPermission;
@property (nonatomic, readonly) short publishState;
@property (nonatomic, readonly) NSData *rulesData;
@property (nonatomic, readonly) NSString *scopeIdentifier;
@property (nonatomic, readonly) short scopeSyncingState;
@property (nonatomic, readonly) NSURL *shareURL;
@property (nonatomic, readonly) unsigned short status;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSString *title;
@property (nonatomic, readonly) unsigned short trashedState;

+ (id)_estimatedAssetCountToMoveForExitRetentionPolicyContributedOnly:(bool)arg1 options:(id)arg2 error:(id*)arg3;
+ (id)entityKeyMap;
+ (unsigned long long)estimatedAssetCountToMoveForExitRetentionPolicyContributedOnly:(bool)arg1 imageCount:(unsigned long long*)arg2 videoCount:(unsigned long long*)arg3 audioCount:(unsigned long long*)arg4 itemCount:(unsigned long long*)arg5 options:(id)arg6 error:(id*)arg7;
+ (id)fetchActiveLibraryScopeWithOptions:(id)arg1;
+ (void)fetchLibraryScopeFromShareURL:(id)arg1 ignoreExistingShare:(bool)arg2 photoLibrary:(id)arg3 completionHandler:(id /* block */)arg4;
+ (void)fetchLibraryScopeFromShareURL:(id)arg1 options:(id)arg2 completionHandler:(id /* block */)arg3;
+ (id)fetchLibraryScopesWithLocalIdentifiers:(id)arg1 options:(id)arg2;
+ (id)fetchLibraryScopesWithOptions:(id)arg1;
+ (id)fetchPendingLibraryScopeInvitationWithOptions:(id)arg1;
+ (id)fetchPreviewLibraryScopeWithOptions:(id)arg1;
+ (id)fetchType;
+ (id)identifierCode;
+ (id)localIdentifierWithUUID:(id)arg1;
+ (id)managedEntityName;
+ (bool)managedObjectSupportsShareExitingState;
+ (bool)managedObjectSupportsShareExpiredState;
+ (bool)managedObjectSupportsShareTrashedState;
+ (id)propertiesToFetchWithHint:(unsigned long long)arg1;
+ (bool)removePersonRulesOnActiveLibraryScopeWithPhotoLibrary:(id)arg1 error:(id*)arg2;
+ (void)resetLocalOnlyLibraryScopesAndAllLibraryScopeAssetStatesWithPhotoLibrary:(id)arg1 completion:(id /* block */)arg2;
+ (id)transformValueExpression:(id)arg1 forKeyPath:(id)arg2;

- (void).cxx_destruct;
- (void)acceptLibraryScopeWithCompletion:(id /* block */)arg1;
- (id)activateLibraryScopeWithCompletion:(id /* block */)arg1;
- (short)autoSharePolicy;
- (Class)changeRequestClass;
- (unsigned long long)cloudItemCount;
- (unsigned long long)cloudPhotoCount;
- (unsigned long long)cloudVideoCount;
- (id)creationDate;
- (void)deactivateLibraryScopeWithCompletion:(id /* block */)arg1;
- (long long)exitState;
- (id)expiryDate;
- (void)getCloudStatusCountsWithCompletionHandler:(id /* block */)arg1;
- (id)initWithFetchDictionary:(id)arg1 propertyHint:(unsigned long long)arg2 photoLibrary:(id)arg3;
- (bool)libraryScopeInLocalMode;
- (id)markOnboardingPreviewAssetsByProcessingRulesWithCompletion:(id /* block */)arg1;
- (short)participantCloudUpdateState;
- (short)previewState;
- (short)publicPermission;
- (void)publishLibraryScopeWithCompletionHandler:(id /* block */)arg1;
- (short)publishState;
- (void)refreshLibraryScopeWithCompletion:(id /* block */)arg1;
- (void)removeParticipants:(id)arg1 exitSource:(long long)arg2 completion:(id /* block */)arg3;
- (id)rulesData;
- (id)scopeIdentifier;
- (short)scopeSyncingState;
- (id)shareURL;
- (void)startExitFromLibraryScopeWithRetentionPolicy:(long long)arg1 exitSource:(long long)arg2 completion:(id /* block */)arg3;
- (unsigned short)status;
- (id)title;
- (unsigned short)trashedState;
- (void)unsharePendingAssetsSharedToScope;

@end
