
@interface PHImportDeviceSource : PHImportSource <ICCameraDeviceDelegate> {
    NSMutableDictionary * _assetByCameraFile;
    NSObject<OS_dispatch_queue> * _assetByCameraFileAccess;
    NSObject<OS_dispatch_queue> * _assetDataRequestQueue;
    NSMapTable * _assetDataRequestsByCameraItem;
    NSMutableArray * _assetMetadataRequests;
    NSMutableArray * _assetThumbnailHighPriorityRequests;
    NSMutableArray * _assetThumbnailRequests;
    NSArray * _avchdAssets;
    ICCameraDevice * _camera;
    NSObject<OS_dispatch_queue> * _deleteEjectQueue;
    NSProgress * _deleteProgress;
    bool  _ejectAfterDelete;
    bool  _isEjecting;
    ICCameraDeviceRemovedItemsCoalescer * _removalCoalescer;
    NSMutableSet * _removedCameraFiles;
    bool  _waitingForAssetMetadataRequest;
    bool  _waitingForAssetThumbnailRequest;
}

@property (nonatomic, retain) NSMutableDictionary *assetByCameraFile;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *assetByCameraFileAccess;
@property (nonatomic, retain) NSArray *avchdAssets;
@property (retain) ICCameraDevice *camera;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *deleteEjectQueue;
@property (nonatomic, retain) NSProgress *deleteProgress;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool ejectAfterDelete;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isEjecting;
@property (nonatomic, retain) ICCameraDeviceRemovedItemsCoalescer *removalCoalescer;
@property (nonatomic, retain) NSMutableSet *removedCameraFiles;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_removeCameraFiles:(id)arg1;
- (id)assetByCameraFile;
- (id)assetByCameraFileAccess;
- (id)assetsByProcessingItem:(id)arg1;
- (id)avchdAssets;
- (void)beginProcessingWithCompletion:(id /* block */)arg1;
- (id)camera;
- (void)cameraDevice:(id)arg1 didAddItems:(id)arg2;
- (void)cameraDevice:(id)arg1 didReceiveMetadata:(id)arg2 forItem:(id)arg3 error:(id)arg4;
- (void)cameraDevice:(id)arg1 didReceivePTPEvent:(id)arg2;
- (void)cameraDevice:(id)arg1 didReceiveThumbnail:(struct CGImage { }*)arg2 forItem:(id)arg3 error:(id)arg4;
- (void)cameraDevice:(id)arg1 didRemoveItems:(id)arg2;
- (void)cameraDevice:(id)arg1 didRenameItems:(id)arg2;
- (void)cameraDevice:(id)arg1 setAccessState:(unsigned char)arg2;
- (void)cameraDeviceDidChangeCapability:(id)arg1;
- (void)cameraDeviceDidEnableAccessRestriction:(id)arg1;
- (void)cameraDeviceDidRemoveAccessRestriction:(id)arg1;
- (id)cameraFilesForAssets:(id)arg1;
- (bool)canAutolaunch;
- (bool)canDeleteContent;
- (bool)canEject;
- (bool)canReference;
- (bool)containsSupportedMedia:(id*)arg1;
- (id)deleteEjectQueue;
- (id)deleteImportAssets:(id)arg1 isConfirmed:(bool)arg2 atEnd:(id /* block */)arg3;
- (id)deleteProgress;
- (void)device:(id)arg1 didCloseSessionWithError:(id)arg2;
- (void)device:(id)arg1 didEncounterError:(id)arg2;
- (void)device:(id)arg1 didOpenSessionWithError:(id)arg2;
- (void)deviceDidBecomeReady:(id)arg1;
- (void)deviceDidBecomeReadyWithCompleteContentCatalog:(id)arg1;
- (void)deviceFinishedEnumeratingItems:(id)arg1;
- (void)didRemoveDevice:(id)arg1;
- (void)eject;
- (bool)ejectAfterDelete;
- (void)fetchMetadataForRequest:(id)arg1 importAsset:(id)arg2 completion:(id /* block */)arg3;
- (void)fetchMetadataUsingRequest:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)fetchThumbnailDataUsingRequest:(id)arg1 withCompletion:(id /* block */)arg2;
- (struct CGImage { }*)icon;
- (id)importAssetForCameraFile:(id)arg1 create:(bool)arg2;
- (id)initWithDevice:(id)arg1;
- (bool)isAppleDevice;
- (bool)isAvailable;
- (bool)isCamera;
- (bool)isConnectedDevice;
- (bool)isDeleting;
- (bool)isEjecting;
- (bool)isOptimizedCPLStorage;
- (id)name;
- (id)path;
- (id)productKind;
- (id)removalCoalescer;
- (void)removeAssetForCameraFile:(id)arg1;
- (id)removedCameraFiles;
- (void)sendNextMetadataRequest;
- (void)sendNextThumbnailRequest;
- (void)setAssetByCameraFile:(id)arg1;
- (void)setAssetByCameraFileAccess:(id)arg1;
- (void)setAvchdAssets:(id)arg1;
- (void)setCamera:(id)arg1;
- (void)setDeleteEjectQueue:(id)arg1;
- (void)setDeleteProgress:(id)arg1;
- (void)setEjectAfterDelete:(bool)arg1;
- (void)setIsEjecting:(bool)arg1;
- (void)setRemovalCoalescer:(id)arg1;
- (void)setRemovedCameraFiles:(id)arg1;
- (id)uuid;
- (id)volumePath;

@end
