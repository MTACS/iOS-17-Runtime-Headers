
@interface PHImportSource : PHImportExceptionRecorder {
    long long  _assetLoadOrder;
    double  _assetLoadingStart;
    NSMutableArray * _assets;
    NSMutableDictionary * _assetsByImportIdentifier;
    NSMutableDictionary * _audioByImportIdentifier;
    NSURL * _autolaunchApplicationURL;
    unsigned long long  _batchCount;
    double  _batchInterval;
    NSObject<OS_dispatch_queue> * _batchQueue;
    unsigned long long  _batchSize;
    double  _batchStart;
    bool  _canAutolaunch;
    bool  _canShowProgress;
    unsigned long long  _completedItems;
    id /* block */  _completion;
    NSObject<OS_dispatch_queue> * _controlQueue;
    unsigned long long  _currentItemIndex;
    bool  _deleteContentAllowed;
    NSObject<OS_dispatch_queue> * _dupPathCollectionQueue;
    NSDateFormatter * _dupeDateFormatter;
    NSMutableArray * _duplicateAssets;
    bool  _ejecting;
    NSMutableArray * _errors;
    NSMutableSet * _folders;
    NSMutableDictionary * _importIdentifierToLivePhotoStateMap;
    NSObject<OS_dispatch_queue> * _itemProcessingQueue;
    NSObject<OS_dispatch_queue> * _itemQueue;
    NSMutableArray * _items;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _itemsLock;
    PHPhotoLibrary * _library;
    unsigned long long  _nextItemIndex;
    NSHashTable * _observers;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _observersLock;
    bool  _open;
    PHImportOptions * _options;
    NSMutableDictionary * _pairedSidecarsByImportIdentifier;
    NSString * _prefix;
    NSMutableArray * _processed;
    NSObject<OS_dispatch_queue> * _processingQueue;
    NSProgress * _progress;
    bool  _rampBatchInterval;
    NSMutableArray * _removedSourceFileIdentifiers;
    NSMutableDictionary * _representationsByImportIdentifier;
    unsigned char  _sourceAccessState;
    PFTimeZoneLookup * _timeZoneLookup;
    NSString * _uuid;
}

@property (nonatomic) long long assetLoadOrder;
@property (nonatomic, retain) NSMutableArray *assets;
@property (nonatomic, copy) NSURL *autolaunchApplicationURL;
@property (nonatomic) unsigned long long batchCount;
@property (nonatomic) double batchInterval;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *batchQueue;
@property (nonatomic) unsigned long long batchSize;
@property (nonatomic) double batchStart;
@property (nonatomic, readonly) bool canAutolaunch;
@property (nonatomic, readonly) bool canDeleteContent;
@property (nonatomic, readonly) bool canEject;
@property (readonly) bool canReference;
@property (readonly) bool canShowProgress;
@property (nonatomic) unsigned long long completedItems;
@property (nonatomic, copy) id /* block */ completion;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *controlQueue;
@property (nonatomic) unsigned long long currentItemIndex;
@property (nonatomic) bool deleteContentAllowed;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *dupPathCollectionQueue;
@property (nonatomic, retain) NSDateFormatter *dupeDateFormatter;
@property (nonatomic, retain) NSMutableArray *duplicateAssets;
@property (getter=isEjecting, nonatomic, readonly) bool ejecting;
@property (retain) NSMutableArray *errors;
@property (nonatomic, retain) NSMutableSet *folders;
@property (nonatomic, readonly) struct CGImage { }*icon;
@property (nonatomic, retain) NSMutableDictionary *importIdentifierToLivePhotoStateMap;
@property (nonatomic, readonly) bool isAppleDevice;
@property (nonatomic, readonly) bool isAvailable;
@property (nonatomic, readonly) bool isCamera;
@property (nonatomic, readonly) bool isConnectedDevice;
@property (nonatomic, readonly) bool isLibrary;
@property (nonatomic, readonly) bool isOptimizedCPLStorage;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *itemProcessingQueue;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *itemQueue;
@property (nonatomic, retain) NSMutableArray *items;
@property (nonatomic, readonly) PHPhotoLibrary *library;
@property (nonatomic, readonly) NSString *name;
@property (nonatomic) unsigned long long nextItemIndex;
@property (nonatomic) bool open;
@property (nonatomic, retain) PHImportOptions *options;
@property (nonatomic, retain) NSMutableDictionary *pairedSidecarsByImportIdentifier;
@property (nonatomic, readonly) NSString *path;
@property (nonatomic, retain) NSString *prefix;
@property (nonatomic, retain) NSMutableArray *processed;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *processingQueue;
@property (nonatomic, readonly) NSString *productKind;
@property (nonatomic, retain) NSProgress *progress;
@property (nonatomic, readonly) bool px_shouldShowCPLOptimizedMessage;
@property (nonatomic) bool rampBatchInterval;
@property (nonatomic, readonly) NSMutableArray *removedSourceFileIdentifiers;
@property (nonatomic) unsigned char sourceAccessState;
@property (nonatomic, readonly) bool stalled;
@property (readonly) PFTimeZoneLookup *timeZoneLookup;
@property (nonatomic, retain) NSString *uuid;
@property (nonatomic, readonly) NSString *volumePath;

// Image: /System/Library/Frameworks/Photos.framework/Photos

- (void).cxx_destruct;
- (void)accessItems:(id /* block */)arg1;
- (void)addImportSourceObserver:(id)arg1;
- (void)addItems:(id)arg1;
- (void)addPairedSidecar:(id)arg1;
- (void)addRepresentationsForAsset:(id)arg1;
- (void)addSourceFileIdentifiersForRemovedFiles:(id)arg1;
- (long long)assetLoadOrder;
- (id)assets;
- (id)assetsByProcessingItem:(id)arg1;
- (id)assetsDescription;
- (id)autolaunchApplicationURL;
- (bool)batchComplete;
- (unsigned long long)batchCount;
- (double)batchInterval;
- (id)batchQueue;
- (unsigned long long)batchSize;
- (double)batchStart;
- (void)beginProcessingWithCompletion:(id /* block */)arg1;
- (void)beginWork;
- (bool)canAutolaunch;
- (bool)canDeleteContent;
- (bool)canEject;
- (bool)canReference;
- (bool)canShowProgress;
- (unsigned long long)completedItems;
- (id /* block */)completion;
- (bool)confirmAsset:(id)arg1 isBaseOf:(id)arg2;
- (bool)confirmAsset:(id)arg1 isRenderOf:(id)arg2;
- (bool)confirmAsset:(id)arg1 isSidecarOfAsset:(id)arg2;
- (bool)confirmAsset:(id)arg1 isSocOf:(id)arg2;
- (bool)containsSupportedMediaWithImportExceptions:(id*)arg1;
- (id)controlQueue;
- (unsigned long long)currentItemIndex;
- (bool)date:(id)arg1 matchesDate:(id)arg2;
- (bool)deleteContentAllowed;
- (id)deleteImportAssets:(id)arg1 isConfirmed:(bool)arg2 atEnd:(id /* block */)arg3;
- (id)deleteImportAssets:(id)arg1 isConfirmed:(bool)arg2 isCancelable:(bool)arg3 atEnd:(id /* block */)arg4;
- (id)description;
- (void)dispatchAssetDataRequestAsync:(id)arg1 usingBlock:(id /* block */)arg2;
- (id)dupPathCollectionQueue;
- (id)dupeDateFormatter;
- (id)duplicateAssets;
- (void)eject;
- (void)endBatch;
- (void)endWork;
- (id)errors;
- (void)findDuplicatesOfItems:(id)arg1 considerItemsInTheTrash:(bool)arg2;
- (id)folders;
- (struct CGImage { }*)icon;
- (id)importIdentifierToLivePhotoStateMap;
- (id)init;
- (bool)isAppleDevice;
- (bool)isAvailable;
- (bool)isCamera;
- (bool)isConnectedDevice;
- (bool)isDone;
- (bool)isEjecting;
- (bool)isLibrary;
- (bool)isLivePhotoForImportIdentifier:(id)arg1;
- (bool)isOptimizedCPLStorage;
- (bool)isPairedSidecar:(id)arg1;
- (id)itemProcessingQueue;
- (id)itemQueue;
- (id)items;
- (id)library;
- (id)loadAssetsForLibrary:(id)arg1 allowDuplicates:(bool)arg2 order:(long long)arg3 atEnd:(id /* block */)arg4;
- (id)loadAssetsForLibrary:(id)arg1 allowDuplicates:(bool)arg2 order:(long long)arg3 batchInterval:(double)arg4 atEnd:(id /* block */)arg5;
- (id)loadAssetsForLibrary:(id)arg1 allowDuplicates:(bool)arg2 order:(long long)arg3 batchSize:(unsigned long long)arg4 atEnd:(id /* block */)arg5;
- (id)loadAssetsForLibrary:(id)arg1 allowDuplicates:(bool)arg2 order:(long long)arg3 batchSize:(unsigned long long)arg4 batchInterval:(double)arg5 atEnd:(id /* block */)arg6;
- (void)loadSidecarsFor:(id)arg1;
- (id)name;
- (id)nextItem;
- (unsigned long long)nextItemIndex;
- (void)notifyObserversUsingBlock:(id /* block */)arg1;
- (bool)open;
- (id)options;
- (id)pairedSidecarsByImportIdentifier;
- (id)path;
- (void)pauseAssetLoading;
- (id)prefix;
- (id)processAssets:(id)arg1;
- (void)processNextItems;
- (bool)processPotentialJpegAsset:(id)arg1 plusRawAsset:(id)arg2;
- (void)processRepresentation:(id)arg1;
- (void)processResource:(id)arg1;
- (id)processed;
- (id)processingQueue;
- (id)productKind;
- (id)progress;
- (bool)rampBatchInterval;
- (void)removeAssets:(id)arg1;
- (void)removeImportSourceObserver:(id)arg1;
- (id)removedSourceFileIdentifiers;
- (id)requestDeleteAssetsForRecords:(id)arg1;
- (void)resumeAssetLoading;
- (void)setAssetLoadOrder:(long long)arg1;
- (void)setAssets:(id)arg1;
- (void)setAutolaunchApplicationURL:(id)arg1;
- (void)setBatchCount:(unsigned long long)arg1;
- (void)setBatchInterval:(double)arg1;
- (void)setBatchQueue:(id)arg1;
- (void)setBatchSize:(unsigned long long)arg1;
- (void)setBatchStart:(double)arg1;
- (void)setCompletedItems:(unsigned long long)arg1;
- (void)setCompletion:(id /* block */)arg1;
- (void)setControlQueue:(id)arg1;
- (void)setCurrentItemIndex:(unsigned long long)arg1;
- (void)setDeleteContentAllowed:(bool)arg1;
- (void)setDupPathCollectionQueue:(id)arg1;
- (void)setDupeDateFormatter:(id)arg1;
- (void)setDuplicateAssets:(id)arg1;
- (void)setErrors:(id)arg1;
- (void)setFolders:(id)arg1;
- (void)setImportIdentifierToLivePhotoStateMap:(id)arg1;
- (void)setIsLivePhotoForImportIdentifier:(id)arg1;
- (void)setItemProcessingQueue:(id)arg1;
- (void)setItemQueue:(id)arg1;
- (void)setItems:(id)arg1;
- (void)setNextItemIndex:(unsigned long long)arg1;
- (void)setOpen:(bool)arg1;
- (void)setOptions:(id)arg1;
- (void)setPairedSidecarsByImportIdentifier:(id)arg1;
- (void)setPrefix:(id)arg1;
- (void)setProcessed:(id)arg1;
- (void)setProcessingQueue:(id)arg1;
- (void)setProgress:(id)arg1;
- (void)setRampBatchInterval:(bool)arg1;
- (void)setSourceAccessState:(unsigned char)arg1;
- (void)setUuid:(id)arg1;
- (unsigned char)sourceAccessState;
- (bool)stalled;
- (void)stopAssetLoading;
- (id)timeZoneLookup;
- (id)uuid;
- (id)volumePath;

// Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore

- (id)_cplOptimizedLearnMoreURL;
- (bool)px_shouldShowCPLOptimizedMessage;

@end
