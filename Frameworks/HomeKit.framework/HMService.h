
@interface HMService : NSObject <HFAccessoryLikeObjectRootHomeKitObjectProvider, HFAccessoryLikeObjectVendor, HFAccessoryRepresentable, HFApplicationData, HFFavoritable, HFHomeContainedObject, HFHomeStatusVisible, HFIncludedContextProtocol, HFReorderableHomeKitObject, HFRoomContextProviding, HFServiceNameComponentsProviding, HFShowInHomeDashboard, HFStateDumpBuildable, HFUserNotificationServiceSettingsProviding, HMFLogging, HMMutableApplicationData, HMObjectMerge, HRERecommendableObjectProtocol, NSSecureCoding> {
    HMAccessory * _accessory;
    HMApplicationData * _applicationData;
    NSString * _assistantIdentifier;
    NSString * _associatedServiceType;
    HMBulletinBoardNotification * _bulletinBoardNotificationInternal;
    long long  _configurationState;
    NSString * _configuredName;
    _HMContext * _context;
    HMMutableArray * _currentCharacteristics;
    NSString * _defaultName;
    NSURL * _homeObjectURLInternal;
    NSNumber * _instanceID;
    NSNumber * _lastKnownDiscoveryMode;
    NSNumber * _lastKnownOperatingStateAbnormalReasonsValue;
    NSNumber * _lastKnownOperatingStateValue;
    NSArray * _linkedServiceInstanceIDs;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    NSArray * _mediaSourceDisplayOrder;
    bool  _mediaSourceDisplayOrderModifiable;
    NSNumber * _mediaSourceIdentifier;
    NSString * _name;
    bool  _nameModifiable;
    bool  _primaryService;
    NSString * _serviceSubtype;
    NSString * _serviceType;
    NSUUID * _targetAccessoryUUID;
    NSUUID * _uniqueIdentifier;
    bool  _userInteractive;
    NSUUID * _uuid;
}

@property (nonatomic) HMAccessory *accessory;
@property (nonatomic, readonly, copy) NSUUID *accessoryUUID;
@property (nonatomic, retain) HMApplicationData *applicationData;
@property (readonly, copy) NSUUID *applicationDataIdentifier;
@property (nonatomic, copy) NSString *assistantIdentifier;
@property (nonatomic, copy) NSString *associatedServiceType;
@property (nonatomic, readonly) HMBulletinBoardNotification *bulletinBoardNotificationInternal;
@property (nonatomic, readonly, copy) NSArray *characteristics;
@property (nonatomic) long long configurationState;
@property (nonatomic, copy) NSString *configuredName;
@property (nonatomic, retain) _HMContext *context;
@property (nonatomic, copy) HMMutableArray *currentCharacteristics;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, retain) NSString *defaultName;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) HFAccessoryLikeObject *hf_accessoryLikeObject;
@property (nonatomic, readonly) HFAccessoryType *hf_accessoryType;
@property (nonatomic, readonly) NSSet *hf_associatedAccessories;
@property (nonatomic, readonly) bool hf_canSpanMultipleRooms;
@property (nonatomic, readonly) NSSet *hf_containedCharacteristics;
@property (nonatomic, readonly) NSSet *hf_containedProfiles;
@property (nonatomic, readonly) NSSet *hf_containedServices;
@property (nonatomic, readonly, copy) NSDate *hf_dateAdded;
@property (nonatomic, readonly, copy) NSString *hf_displayName;
@property (nonatomic, readonly) bool hf_effectiveIsFavorite;
@property (nonatomic, readonly) bool hf_effectiveShowInHomeDashboard;
@property (nonatomic, readonly) unsigned long long hf_fallbackProgrammableSwitchIndex;
@property (nonatomic, readonly) bool hf_hasSetFavorite;
@property (nonatomic, readonly) bool hf_hasSetShowInHomeDashboard;
@property (nonatomic, readonly) bool hf_hasSetVisibleInHomeStatus;
@property (nonatomic, readonly) <HFHomeKitObject> *hf_homeKitObject;
@property (nonatomic, readonly) bool hf_isFavorite;
@property (nonatomic, readonly) bool hf_isForcedVisibleInHomeStatus;
@property (nonatomic, readonly) bool hf_isIdentifiable;
@property (nonatomic, readonly) bool hf_isProgrammableSwitch;
@property (nonatomic, readonly) bool hf_isVisibleInHomeStatus;
@property (nonatomic, readonly) Class hf_itemClass;
@property (nonatomic, readonly) HMCharacteristic *hf_labelIndexCharacteristic;
@property (nonatomic, readonly) HMCharacteristic *hf_labelNamespaceCharacteristic;
@property (nonatomic, readonly) HMRoom *hf_parentRoom;
@property (nonatomic, readonly) <HFAccessoryLikeObjectRootHomeKitObjectProvider><HFAccessoryRepresentable><HFFavoritable><HFShowInHomeDashboard><HFIncludedContextProtocol> *hf_rootAccessoryLikeHomeKitObject;
@property (nonatomic, readonly) HMRoom *hf_safeRoom;
@property (nonatomic, readonly) HFServiceNameComponents *hf_serviceNameComponents;
@property (nonatomic, readonly) bool hf_shouldShowInFavorites;
@property (nonatomic, readonly) bool hf_showInHomeDashboard;
@property (nonatomic, readonly) bool hf_supportsHomeStatus;
@property (nonatomic, readonly) NSString *hf_tileSize;
@property (nonatomic, readonly, copy) HFUserNotificationServiceSettings *hf_userNotificationSettings;
@property (nonatomic, readonly) HMHome *home;
@property (nonatomic, readonly) NSURL *homeObjectURLInternal;
@property (nonatomic, readonly) NSSet *hre_actionTypes;
@property (nonatomic, readonly) NSSet *hre_characteristics;
@property (nonatomic, readonly) HMHome *hre_home;
@property (nonatomic, readonly) bool hre_isActionable;
@property (nonatomic, readonly) bool hre_isMediaObject;
@property (nonatomic, readonly) bool hre_isVisible;
@property (nonatomic, readonly) NSSet *hre_matchingTypes;
@property (nonatomic, readonly) HMRoom *hre_parentRoom;
@property (nonatomic, readonly) NSString *hre_primaryType;
@property (nonatomic, readonly) NSNumber *instanceID;
@property (nonatomic, copy) NSNumber *lastKnownDiscoveryMode;
@property (nonatomic, copy) NSNumber *lastKnownOperatingStateAbnormalReasonsValue;
@property (nonatomic, copy) NSNumber *lastKnownOperatingStateValue;
@property (nonatomic, readonly, copy) NSArray *linkedServiceInstanceIDs;
@property (nonatomic, readonly, copy) NSArray *linkedServices;
@property (nonatomic, readonly, copy) NSString *localizedDescription;
@property (nonatomic, retain) NSArray *mediaSourceDisplayOrder;
@property (nonatomic) bool mediaSourceDisplayOrderModifiable;
@property (nonatomic, retain) NSNumber *mediaSourceIdentifier;
@property (nonatomic, copy) NSString *name;
@property bool nameModifiable;
@property (getter=isPrimaryService, nonatomic, readonly) bool primaryService;
@property (readonly, copy) NSDictionary *serializedDictionaryRepresentation;
@property (nonatomic, copy) NSString *serviceSubtype;
@property (nonatomic, copy) NSString *serviceType;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSUUID *targetAccessoryUUID;
@property (nonatomic, readonly, copy) NSUUID *uniqueIdentifier;
@property (getter=isUserInteractive, nonatomic, readonly) bool userInteractive;
@property (nonatomic, readonly, copy) NSUUID *uuid;

// Image: /System/Library/Frameworks/HomeKit.framework/HomeKit

+ (id)__localizedDescriptionForServiceType:(id)arg1;
+ (id)_mapToIsConfiguredValueFromServiceConfigurationState:(long long)arg1;
+ (long long)_mapToServiceConfigurationStateFromIsConfiguredValue:(id)arg1;
+ (id)_serviceTypeAsString:(id)arg1;
+ (id)characteristicBlacklistForShortcutConditions;
+ (id)defaultCharacteristicByServiceDictionary;
+ (void)initializeCharacteristicDictionaries;
+ (id)localizedDescriptionForServiceType:(id)arg1;
+ (id)logCategory;
+ (id)serviceWithSerializedDictionaryRepresentation:(id)arg1 home:(id)arg2;
+ (id)serviceWithServiceReference:(id)arg1 home:(id)arg2;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (void)__configureWithContext:(id)arg1 accessory:(id)arg2;
- (void)_addCharacteristic:(id)arg1;
- (id)_findCharacteristic:(id)arg1;
- (id)_findCharacteristicWithUniqueIdentifier:(id)arg1;
- (void)_handleMarkServiceInteractive:(id)arg1;
- (void)_handleMediaSourceIdentifierUpdated:(id)arg1;
- (void)_handleUpdateAssociatedServiceType:(id)arg1;
- (void)_handleUpdateConfigurationState:(long long)arg1;
- (void)_handleUpdateDefaultName:(id)arg1;
- (void)_handleUpdateName:(id)arg1;
- (void)_handleUpdateServicePrimary:(id)arg1;
- (void)_handleUpdateServiceSubtype:(id)arg1;
- (bool)_hasCharacteristic:(id)arg1;
- (bool)_hasCharacteristicOfType:(id)arg1;
- (void)_recomputeAssistantIdentifier;
- (void)_removeCharacteristic:(id)arg1;
- (id)_serviceTypeDescription;
- (void)_unconfigure;
- (void)_unconfigureContext;
- (void)_updateAssociatedServiceType:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)_updateConfigurationState:(long long)arg1 completionHandler:(id /* block */)arg2;
- (void)_updateName:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)accessory;
- (id)accessoryUUID;
- (id)applicationData;
- (id)applicationDataIdentifier;
- (id)assistantIdentifier;
- (id)associatedServiceType;
- (id)bulletinBoardNotification;
- (id)bulletinBoardNotificationInternal;
- (id)characteristics;
- (id)characteristicsSupportedForShortcutConditions;
- (long long)configurationState;
- (id)configuredName;
- (id)context;
- (id)currentCharacteristics;
- (id)defaultCharacteristic;
- (id)defaultName;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (bool)hasOperatingState;
- (bool)hasOperatingStateAbnormalReasons;
- (bool)hasSleepDiscoveryMode;
- (unsigned long long)hash;
- (id)homeObjectURL;
- (id)homeObjectURLInternal;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)instanceID;
- (bool)isEqual:(id)arg1;
- (bool)isNameModifiable;
- (bool)isPrimaryService;
- (bool)isUserInteractive;
- (id)lastKnownDiscoveryMode;
- (long long)lastKnownOperatingState;
- (unsigned long long)lastKnownOperatingStateAbnormalReasons;
- (id)lastKnownOperatingStateAbnormalReasonsValue;
- (id)lastKnownOperatingStateValue;
- (long long)lastKnownSleepDiscoveryMode;
- (id)linkedServiceInstanceIDs;
- (id)linkedServices;
- (id)localizedDescription;
- (id)logIdentifier;
- (id)mediaSourceDisplayOrder;
- (bool)mediaSourceDisplayOrderModifiable;
- (id)mediaSourceIdentifier;
- (bool)mergeFromNewObject:(id)arg1;
- (id)name;
- (bool)nameModifiable;
- (void)recomputeAssistantIdentifier;
- (id)serializedDictionaryRepresentation;
- (id)serviceSubtype;
- (id)serviceType;
- (void)setAccessory:(id)arg1;
- (void)setApplicationData:(id)arg1;
- (void)setAssistantIdentifier:(id)arg1;
- (void)setAssociatedServiceType:(id)arg1;
- (void)setConfigurationState:(long long)arg1;
- (void)setConfiguredName:(id)arg1;
- (void)setContext:(id)arg1;
- (void)setCurrentCharacteristics:(id)arg1;
- (void)setDefaultName:(id)arg1;
- (void)setLastKnownDiscoveryMode:(id)arg1;
- (void)setLastKnownOperatingStateAbnormalReasonsValue:(id)arg1;
- (void)setLastKnownOperatingStateValue:(id)arg1;
- (void)setMediaSourceDisplayOrder:(id)arg1;
- (void)setMediaSourceDisplayOrderModifiable:(bool)arg1;
- (void)setMediaSourceIdentifier:(id)arg1;
- (void)setName:(id)arg1;
- (void)setNameModifiable:(bool)arg1;
- (void)setServiceSubtype:(id)arg1;
- (void)setServiceType:(id)arg1;
- (void)setTargetAccessoryUUID:(id)arg1;
- (id)targetAccessoryUUID;
- (id)uniqueIdentifier;
- (void)updateApplicationData:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)updateAssociatedServiceType:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)updateConfigurationState:(long long)arg1 completionHandler:(id /* block */)arg2;
- (void)updateName:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)uuid;

// Image: /System/Library/PrivateFrameworks/Home.framework/Home

+ (id)_hf_allowedChildServicesTypeMap;
+ (id)hf_alarmSensorServiceTypes;
+ (id)hf_allRequiredCharacteristicTypesForStandardServices;
+ (id)hf_characteristicsInServices:(id)arg1;
+ (id)hf_defaultServiceSubtypeForServiceType:(id)arg1;
+ (id)hf_descriptionForServiceSubtype:(id)arg1;
+ (id)hf_fanServiceTypes;
+ (id)hf_getUserFriendlyDescriptionKey:(id)arg1;
+ (id)hf_programmableSwitchServiceTypes;
+ (id)hf_requiredCharacteristicTypesForDisplayMetadataWithServiceType:(id)arg1;
+ (id)hf_roomsForServices:(id)arg1;
+ (id)hf_sensorCharacteristicTypeForServiceType:(id)arg1;
+ (id)hf_sensorServiceTypes;
+ (id /* block */)hf_serviceComparator;
+ (id)hf_serviceTypesHiddenFromScenesOrAutomations;
+ (id)hf_standardServiceTypes;
+ (id)hf_userFriendlyLocalizedCapitalizedDescription:(id)arg1;
+ (id)hf_userFriendlyLocalizedLowercaseDescription:(id)arg1;

- (id)_hf_firstLinkedServiceOfType:(id)arg1;
- (bool)_hf_isDirectlyOrIndirectlyLinkedToService:(id)arg1;
- (id)hf_accessoryLikeObject;
- (id)hf_accessoryType;
- (id)hf_associatedAccessories;
- (bool)hf_canGroupWithService:(id)arg1;
- (bool)hf_canSpanMultipleRooms;
- (id)hf_characteristicEqualToType:(id)arg1 forServiceType:(id)arg2;
- (id)hf_characteristicOfType:(id)arg1;
- (id)hf_childServices;
- (id)hf_childServicesOfType:(id)arg1;
- (id)hf_containedCharacteristics;
- (id)hf_containedProfiles;
- (id)hf_containedServices;
- (id)hf_dateAdded;
- (id)hf_displayName;
- (bool)hf_effectiveIsFavorite;
- (id)hf_effectiveServiceSubtype;
- (id)hf_effectiveServiceType;
- (bool)hf_effectiveShowInHomeDashboard;
- (unsigned long long)hf_fallbackProgrammableSwitchIndex;
- (bool)hf_hasSetFavorite;
- (bool)hf_hasSetForContextType:(unsigned long long)arg1;
- (bool)hf_hasSetShowInHomeDashboard;
- (bool)hf_hasSetVisibleInHomeStatus;
- (id)hf_homeKitObject;
- (id)hf_iconDescriptor;
- (bool)hf_isAlarmSensorService;
- (bool)hf_isCameraContainedMotionSensor;
- (bool)hf_isChildService;
- (bool)hf_isDisplayableSensor;
- (bool)hf_isFan;
- (bool)hf_isFavorite;
- (bool)hf_isForcedVisibleInHomeStatus;
- (bool)hf_isIdentifiable;
- (bool)hf_isInGroup;
- (bool)hf_isInRoom:(id)arg1;
- (bool)hf_isLegacyService;
- (bool)hf_isOnForContextType:(unsigned long long)arg1;
- (bool)hf_isProgrammableSwitch;
- (bool)hf_isSensorService;
- (bool)hf_isTelevision;
- (bool)hf_isValidObject;
- (bool)hf_isVisible;
- (bool)hf_isVisibleInHomeStatus;
- (Class)hf_itemClass;
- (id)hf_labelIndexCharacteristic;
- (id)hf_labelNamespaceCharacteristic;
- (id)hf_lightProfiles;
- (id)hf_moveToRoom:(id)arg1;
- (id)hf_parentRoom;
- (id)hf_parentService;
- (void)hf_postUpdateApplicationDataNotification:(id)arg1 needCellReload:(bool)arg2;
- (id)hf_requiredCharacteristicTypesForDisplayMetadata;
- (bool)hf_requiresDeviceUnlock;
- (id)hf_rootAccessoryLikeHomeKitObject;
- (id)hf_safeRoom;
- (id)hf_serviceDescriptor;
- (id)hf_serviceGroup;
- (id)hf_serviceNameComponents;
- (id)hf_setTileSize:(id)arg1;
- (bool)hf_shouldBeOnForContextType:(unsigned long long)arg1;
- (bool)hf_shouldHideForContextType:(unsigned long long)arg1;
- (bool)hf_shouldShowInFavorites;
- (bool)hf_showInHomeDashboard;
- (bool)hf_showsAsServiceInControlCentre;
- (id)hf_stateDumpBuilderWithContext:(id)arg1;
- (bool)hf_supportsGroups;
- (bool)hf_supportsHomeStatus;
- (bool)hf_supportsNaturalLighting;
- (id)hf_tileSize;
- (void)hf_updateApplicationData:(id)arg1 handleError:(bool)arg2 completionHandler:(id /* block */)arg3;
- (void)hf_updateApplicationData:(id)arg1 needCellReload:(bool)arg2 handleError:(bool)arg3 completionHandler:(id /* block */)arg4;
- (id)hf_updateDateAdded:(id)arg1;
- (id)hf_updateIconDescriptor:(id)arg1;
- (id)hf_updateIsFavorite:(bool)arg1;
- (id)hf_updateIsVisibleInHomeStatus:(bool)arg1;
- (id)hf_updateShowInHomeDashboard:(bool)arg1;
- (id)hf_updateUserNotificationSettings:(id)arg1;
- (id)hf_updateValue:(bool)arg1 forContextType:(unsigned long long)arg2;
- (id)hf_userFriendlyLocalizedCapitalizedDescription;
- (id)hf_userFriendlyLocalizedLowercaseDescription;
- (id)hf_userNotificationSettings;
- (id)home;

// Image: /System/Library/PrivateFrameworks/HomeRecommendationEngine.framework/HomeRecommendationEngine

- (id)hre_actionTypes;
- (id)hre_characteristics;
- (id)hre_home;
- (bool)hre_isActionable;
- (bool)hre_isMediaObject;
- (bool)hre_isVisible;
- (id)hre_matchingTypes;
- (id)hre_parentRoom;
- (id)hre_primaryType;

@end
