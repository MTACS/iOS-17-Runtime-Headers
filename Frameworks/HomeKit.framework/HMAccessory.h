
@interface HMAccessory : NSObject <HFAccessoryLikeObjectContainer, HFAccessoryLikeObjectRootHomeKitObjectProvider, HFAccessoryRepresentable, HFApplicationData, HFFavoritable, HFHomeContainedObject, HFHomeStatusVisible, HFIncludedContextProtocol, HFReorderableHomeKitObject, HFRoomContextProviding, HFServiceNameComponentsProviding, HFShowInHomeDashboard, HFStateDumpBuildable, HFSymptomFixableObject, HFUserNotificationServiceSettingsProviding, HMAccessoryInfoDataProviderDelegate, HMAccessorySettingsAdapterDelegate, HMAccessorySettingsContainerInternal, HMApplicationData, HMControllable, HMFLogging, HMFMessageReceiver, HMFObject, HMMediaDestination, HMMediaDestinationControllerDataSource, HMMediaDestinationInternal, HMMutableApplicationData, HMObjectMerge, HRERecommendableObjectProtocol, NSSecureCoding> {
    NSNumber * _accessoryFlags;
    HMAccessoryInfoDataProvider * _accessoryInfoDataProvider;
    HMMutableArray * _accessoryProfiles;
    unsigned long long  _accessoryReprovisionState;
    HMAccessorySettingsController * _accessorySettingsController;
    HMAccessorySettingsDataSource * _accessorySettingsDataSource;
    NSUUID * _accountIdentifier;
    unsigned long long  _additionalSetupStatus;
    HMApplicationData * _applicationData;
    NSString * _assistantIdentifier;
    long long  _associationOptions;
    HMAudioAnalysisEventBulletinBoardNotification * _audioAnalysisEventBulletinBoardNotification;
    HMMediaDestination * _audioDestination;
    HMMediaDestinationController * _audioDestinationController;
    bool  _bridgedAccessory;
    NSString * _bundleID;
    unsigned long long  _calibrationStatus;
    HMAccessoryCategory * _category;
    long long  _certificationStatus;
    NSUUID * _commissioningID;
    NSString * _configuredName;
    _HMContext * _context;
    NSArray * _controlTargetUUIDs;
    bool  _controllable;
    bool  _currentAccessory;
    HMMutableArray * _currentServices;
    <HMAccessoryDelegate> * _delegate;
    HMDevice * _device;
    NSData * _deviceIRKData;
    NSString * _deviceIdentifier;
    NSUUID * _endpointIdentifier;
    bool  _firmwareUpdateAvailable;
    NSString * _firmwareVersion;
    bool  _hasOnboardedForNaturalLighting;
    HMHome * _home;
    unsigned long long  _homePodVariant;
    bool  _knownToSystemCommissioner;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    NSString * _manufacturer;
    NSNumber * _matterNodeID;
    NSString * _model;
    NSString * _name;
    NSUUID * _networkProtectionGroupUUID;
    NSNumber * _nodeID;
    bool  _paired;
    HMFPairingIdentity * _pairingIdentity;
    NSUUID * _peerIdentifier;
    NSString * _pendingConfigurationIdentifier;
    NSUUID * _preferredMediaUserUUID;
    unsigned long long  _preferredUserSelectionType;
    long long  _productColor;
    NSNumber * _productID;
    bool  _reachable;
    long long  _reachableTransports;
    HMRemoteLoginHandler * _remoteLoginHandler;
    HMRoom * _room;
    NSData * _rootPublicKey;
    NSString * _serialNumber;
    HMAccessorySettings * _settings;
    HMAccessorySettingsAdapter * _settingsAdapter;
    HMSoftwareUpdateController * _softwareUpdateController;
    HMFSoftwareVersion * _softwareVersion;
    NSString * _storeID;
    HMSupportedAccessoryDiagnostics * _supportedDiagnostics;
    unsigned long long  _supportedStereoPairVersions;
    bool  _supportsAccessCodes;
    bool  _supportsAnnounce;
    bool  _supportsAudioAnalysis;
    bool  _supportsAudioReturnChannel;
    bool  _supportsCHIP;
    bool  _supportsCompanionInitiatedRestart;
    bool  _supportsCoordinationDoorbellChime;
    bool  _supportsDiagnosticsTransfer;
    bool  _supportsDoorbellChime;
    bool  _supportsDropIn;
    bool  _supportsHomeLevelLocationServiceSetting;
    bool  _supportsIdentify;
    bool  _supportsJustSiri;
    bool  _supportsManagedConfigurationProfile;
    bool  _supportsMediaAccessControl;
    bool  _supportsMediaActions;
    bool  _supportsMessagedHomePodSettings;
    bool  _supportsMultiUser;
    bool  _supportsMusicAlarm;
    bool  _supportsPreferredMediaUser;
    bool  _supportsPrimaryUserInfoSubscription;
    bool  _supportsRMVonAppleTV;
    bool  _supportsSoftwareUpdateV2;
    bool  _supportsTargetControl;
    bool  _supportsTargetController;
    bool  _supportsThirdPartyMusic;
    bool  _supportsUserMediaSettings;
    bool  _supportsWalletKey;
    bool  _suspendCapable;
    unsigned long long  _suspendedState;
    HMSymptomsHandler * _symptomsHandler;
    bool  _targetControllerHardwareSupport;
    unsigned long long  _transportTypes;
    NSUUID * _uniqueIdentifier;
    NSArray * _uniqueIdentifiersForBridgedAccessories;
    NSUUID * _uuid;
    NSNumber * _vendorID;
    HMFWiFiNetworkInfo * _wifiNetworkInfo;
}

@property (nonatomic, readonly) NSSet *accessories;
@property (nonatomic, retain) NSNumber *accessoryFlags;
@property (retain) HMAccessoryInfoDataProvider *accessoryInfoDataProvider;
@property (nonatomic, retain) HMMutableArray *accessoryProfiles;
@property (nonatomic, readonly) unsigned long long accessoryReprovisionState;
@property (nonatomic) unsigned long long accessoryReprovisionState;
@property (nonatomic, retain) HMAccessorySettingsController *accessorySettingsController;
@property (nonatomic, retain) HMAccessorySettingsDataSource *accessorySettingsDataSource;
@property (copy) NSUUID *accountIdentifier;
@property (getter=isAdditionalSetupRequired, nonatomic, readonly) bool additionalSetupRequired;
@property (nonatomic) unsigned long long additionalSetupStatus;
@property (readonly) bool an_isAnnounceAccessory;
@property (nonatomic, readonly) bool an_isAnnounceEnabled;
@property (readonly) bool an_isAppleAnnounceAccessory;
@property (readonly) bool an_isAppleAnnounceHostAccessory;
@property (nonatomic, retain) HMApplicationData *applicationData;
@property (readonly, copy) NSUUID *applicationDataIdentifier;
@property (nonatomic, copy) NSString *assistantIdentifier;
@property (nonatomic, readonly) long long associationOptions;
@property (nonatomic) long long associationOptions;
@property (nonatomic, readonly, copy) NSArray *attributeDescriptions;
@property (readonly) HMAudioAnalysisEventBulletinBoardNotification *audioAnalysisEventBulletinBoardNotification;
@property (retain) HMMediaDestination *audioDestination;
@property (readonly) HMMediaDestinationController *audioDestinationController;
@property (retain) HMMediaDestinationController *audioDestinationController;
@property (readonly, copy) NSUUID *audioDestinationGroupIdentifier;
@property (readonly, copy) NSString *audioDestinationIdentifier;
@property (readonly, copy) NSArray *audioDestinationMediaProfiles;
@property (readonly, copy) NSString *audioDestinationName;
@property (readonly, copy) NSString *audioDestinationParentIdentifier;
@property (readonly) long long audioDestinationType;
@property (getter=isBlocked, nonatomic, readonly) bool blocked;
@property (getter=isBridged, nonatomic, readonly) bool bridged;
@property (nonatomic, readonly) NSArray *bridgedAccessories;
@property (nonatomic) bool bridgedAccessory;
@property (nonatomic, readonly, copy) NSString *bundleID;
@property (copy) NSString *bundleID;
@property (getter=isCalibrating, nonatomic, readonly) bool calibrating;
@property (nonatomic) unsigned long long calibrationStatus;
@property (nonatomic, readonly, copy) NSArray *cameraProfiles;
@property (nonatomic, retain) HMAccessoryCategory *category;
@property (nonatomic, readonly) long long certificationStatus;
@property (nonatomic) long long certificationStatus;
@property (readonly, copy) NSUUID *commissioningID;
@property (copy) NSUUID *commissioningID;
@property (nonatomic, readonly, copy) NSString *configuredName;
@property (nonatomic, copy) NSString *configuredName;
@property (readonly) HMHome *containerHome;
@property (readonly) NSUUID *containerUUID;
@property (retain) _HMContext *context;
@property (nonatomic, copy) NSArray *controlTargetUUIDs;
@property (getter=isControllable, readonly) bool controllable;
@property (getter=isCurrentAccessory, readonly) bool currentAccessory;
@property (getter=isCurrentAccessory) bool currentAccessory;
@property (nonatomic, copy) HMMutableArray *currentServices;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <HMAccessoryDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSString *description;
@property (retain) NSData *deviceIRKData;
@property (nonatomic, readonly, copy) NSString *deviceIdentifier;
@property (nonatomic, copy) NSString *deviceIdentifier;
@property (nonatomic, readonly) bool dic_supportsDropIn;
@property (getter=isFirmwareUpdateAvailable, nonatomic, readonly) bool firmwareUpdateAvailable;
@property (getter=isFirmwareUpdateAvailable, nonatomic) bool firmwareUpdateAvailable;
@property (nonatomic, copy) NSString *firmwareVersion;
@property bool hasOnboardedForNaturalLighting;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSSet *hf_accessoryLikeObjects;
@property (nonatomic, readonly) HFAccessoryType *hf_accessoryType;
@property (nonatomic, readonly) NAFuture *hf_allConnectedHomeToCHIPAccessoryPairingFuture;
@property (nonatomic, readonly) long long hf_appPunchOutReason;
@property (nonatomic, readonly) bool hf_areAllServicesInGroups;
@property (nonatomic, readonly) NSSet *hf_associatedAccessories;
@property (nonatomic, readonly) NSArray *hf_bridgedAccessories;
@property (nonatomic, readonly) bool hf_canShowAsIndividualServices;
@property (nonatomic, readonly) bool hf_canSpanMultipleRooms;
@property (nonatomic, readonly) bool hf_canSyncExternalSettings;
@property (nonatomic, readonly) NSString *hf_categoryOrPrimaryServiceType;
@property (nonatomic, readonly, copy) NSSet *hf_componentServices;
@property (nonatomic, readonly) NSSet *hf_containedCharacteristics;
@property (nonatomic, readonly) NSSet *hf_containedProfiles;
@property (nonatomic, readonly) NSSet *hf_containedServices;
@property (nonatomic, readonly, copy) NSDate *hf_dateAdded;
@property (nonatomic, readonly, copy) NSString *hf_displayName;
@property (nonatomic, readonly, copy) NSSet *hf_displayNamesForVisibleTiles;
@property (nonatomic, readonly) NSString *hf_effectiveCategoryType;
@property (nonatomic, readonly) bool hf_effectiveIsFavorite;
@property (nonatomic, readonly) bool hf_effectiveShowInHomeDashboard;
@property (nonatomic, readonly) bool hf_fake8021xNetworkSymptom;
@property (setter=hf_setFakeCaptiveLeaseRenewalSymptom:, nonatomic) bool hf_fakeCaptiveLeaseRenewalSymptom;
@property (nonatomic, readonly) NSSet *hf_fakeDebugSymptoms;
@property (nonatomic, readonly) bool hf_fakeGeneralFixSymptom;
@property (nonatomic, readonly) bool hf_fakeHardwareFixSymptom;
@property (nonatomic, readonly) bool hf_fakeHomeKitSymptom;
@property (nonatomic, readonly) bool hf_fakeICloudSymptom;
@property (nonatomic, readonly) bool hf_fakeITunesSymptom;
@property (nonatomic, readonly) bool hf_fakeInternetFixSymptom;
@property (nonatomic, readonly) bool hf_fakeNetworkNotShareableSymptom;
@property (nonatomic, readonly) bool hf_fakeNetworkProfileFixSymptom;
@property (nonatomic, readonly) bool hf_fakeNetworkProfileInstallSymptom;
@property (nonatomic, readonly) bool hf_fakeNetworkStrengthError;
@property (nonatomic, readonly) bool hf_fakeShouldDisplayManualFixOption;
@property (nonatomic, readonly) bool hf_fakeUnreachableError;
@property (nonatomic, readonly) bool hf_fakeVPNProfileExpired;
@property (setter=hf_setFakeWiFiMismatchSymptom:, nonatomic) bool hf_fakeWiFiMismatchSymptom;
@property (nonatomic, readonly) bool hf_fakeWiFiPerformanceSymptom;
@property (nonatomic, readonly) bool hf_fakeWiFiSymptom;
@property (nonatomic, readonly) NSSet *hf_groupableServices;
@property (nonatomic, readonly) bool hf_hasInputSourceService;
@property (nonatomic, readonly) bool hf_hasManagedNetworkCredential;
@property (nonatomic, readonly) bool hf_hasSetFavorite;
@property (nonatomic, readonly) bool hf_hasSetShowInHomeDashboard;
@property (nonatomic, readonly) bool hf_hasSetVisibleInHomeStatus;
@property (nonatomic, readonly) <HFHomeKitObject> *hf_homeKitObject;
@property (nonatomic, readonly) NSArray *hf_irrigationSystemServices;
@property (nonatomic, readonly) bool hf_isAirPortExpressSpeaker;
@property (nonatomic, readonly) bool hf_isAppleTV;
@property (nonatomic, readonly) bool hf_isAudioAnalysisSupportedDevice;
@property (nonatomic, readonly) bool hf_isAudioReceiver;
@property (nonatomic, readonly) bool hf_isBridge;
@property (nonatomic, readonly) bool hf_isCamera;
@property (nonatomic, readonly) bool hf_isCategorizedAsBridge;
@property (nonatomic, readonly) bool hf_isCeilingFanWithLight;
@property (nonatomic, readonly) bool hf_isDirectlyReachable;
@property (nonatomic, readonly) bool hf_isDoorbell;
@property (nonatomic, readonly) bool hf_isDumbSpeaker;
@property (nonatomic, readonly) bool hf_isFavorite;
@property (nonatomic, readonly) bool hf_isForcedVisibleInHomeStatus;
@property (nonatomic, readonly) bool hf_isHomePod;
@property (nonatomic, readonly) bool hf_isIdentifiable;
@property (nonatomic, readonly) bool hf_isMediaAccessory;
@property (nonatomic, readonly) bool hf_isMultiSensorAccessory;
@property (nonatomic, readonly) bool hf_isMultiServiceAccessory;
@property (nonatomic, readonly) bool hf_isNetworkRouter;
@property (nonatomic, readonly) bool hf_isNetworkRouterSatellite;
@property (nonatomic, readonly) bool hf_isNonServiceBasedAccessory;
@property (nonatomic, readonly) bool hf_isNotificationSupportedCamera;
@property (nonatomic, readonly) bool hf_isPowerStrip;
@property (nonatomic, readonly) bool hf_isProgrammableSwitch;
@property (nonatomic, readonly) bool hf_isPureBridge;
@property (nonatomic, readonly) bool hf_isPureProgrammableSwitch;
@property (nonatomic, readonly) bool hf_isRemoteControl;
@property (nonatomic, readonly) bool hf_isSensorAccessory;
@property (nonatomic, readonly) bool hf_isSingleSensorAccessory;
@property (nonatomic, readonly) bool hf_isSingleServiceAccessory;
@property (nonatomic, readonly) bool hf_isSingleServiceLikeAccessory;
@property (nonatomic, readonly) bool hf_isSiriEndpoint;
@property (nonatomic, readonly) bool hf_isSpeaker;
@property (nonatomic, readonly) bool hf_isSprinkler;
@property (nonatomic, readonly) bool hf_isSupportedAccessory;
@property (nonatomic, readonly) bool hf_isSuspended;
@property (nonatomic, readonly) bool hf_isTelevision;
@property (nonatomic, readonly) bool hf_isVisibleAccessory;
@property (nonatomic, readonly) bool hf_isVisibleAsBridge;
@property (nonatomic, readonly) bool hf_isVisibleAsBridgedAccessory;
@property (nonatomic, readonly) bool hf_isVisibleInHomeStatus;
@property (nonatomic, readonly) Class hf_itemClass;
@property (nonatomic, readonly) HMResidentDevice *hf_linkedResidentDevice;
@property (nonatomic, readonly) unsigned long long hf_mediaAccessControlCapabilities;
@property (nonatomic, readonly) bool hf_needsReprovisioningCheck;
@property (nonatomic, readonly) bool hf_needsSoftwareUpdateToSupportBeingAddedToMediaSystem;
@property (nonatomic, readonly) NSArray *hf_networkConfigurationProfiles;
@property (nonatomic, readonly) NSArray *hf_networkRouterProfiles;
@property (nonatomic, readonly) unsigned long long hf_numberOfProgrammableSwitches;
@property (nonatomic, readonly) HMAccessory *hf_owningBridgeAccessory;
@property (nonatomic, readonly) HMRoom *hf_parentRoom;
@property (nonatomic, readonly) NSSet *hf_programmableSwitchNamespaceServices;
@property (nonatomic, readonly) NSSet *hf_programmableSwitchServices;
@property (nonatomic, readonly) bool hf_requiresFirmwareUpdate;
@property (nonatomic, readonly) <HFAccessoryLikeObjectRootHomeKitObjectProvider><HFAccessoryRepresentable><HFFavoritable><HFShowInHomeDashboard><HFIncludedContextProtocol> *hf_rootAccessoryLikeHomeKitObject;
@property (nonatomic, readonly) HMRoom *hf_safeRoom;
@property (nonatomic, readonly) HFServiceNameComponents *hf_serviceNameComponents;
@property (nonatomic, readonly) NSSet *hf_servicesBehindBridge;
@property (nonatomic, readonly) bool hf_shouldSeparateAccessoryName;
@property (nonatomic, readonly) bool hf_shouldShowInFavorites;
@property (nonatomic, readonly) bool hf_showAsAccessoryTile;
@property (nonatomic, readonly) bool hf_showAsIndividualServices;
@property (nonatomic, readonly) bool hf_showInHomeDashboard;
@property (nonatomic, readonly) bool hf_showsAsAccessoryInControlCentre;
@property (nonatomic, readonly, copy) NSSet *hf_standardServices;
@property (nonatomic, readonly) bool hf_supportsHomeStatus;
@property (nonatomic, readonly) bool hf_supportsRMVOnAppleTV;
@property (nonatomic, readonly) bool hf_supportsSuspendedState;
@property (nonatomic, readonly) NSString *hf_tileSize;
@property (nonatomic, readonly) NSString *hf_userFriendlyLocalizedCapitalizedDescription;
@property (nonatomic, readonly) NSString *hf_userFriendlyLocalizedLowercaseDescription;
@property (nonatomic, readonly, copy) HFUserNotificationServiceSettings *hf_userNotificationSettings;
@property (nonatomic, readonly, copy) NSSet *hf_visibleServices;
@property (nonatomic, readonly) bool hmu_isAppleTV;
@property (nonatomic, readonly) bool hmu_isEndpoint;
@property (nonatomic, readonly) bool hmu_isHomePod;
@property (nonatomic, readonly) HMHome *home;
@property (nonatomic) HMHome *home;
@property (readonly) unsigned long long homePodVariant;
@property unsigned long long homePodVariant;
@property (nonatomic, readonly) NSSet *hre_actionTypes;
@property (nonatomic, readonly) NSSet *hre_characteristics;
@property (nonatomic, readonly) HMHome *hre_home;
@property (nonatomic, readonly) bool hre_isActionable;
@property (nonatomic, readonly) bool hre_isMediaObject;
@property (nonatomic, readonly) bool hre_isVisible;
@property (nonatomic, readonly) NSSet *hre_matchingTypes;
@property (nonatomic, readonly) HMRoom *hre_parentRoom;
@property (nonatomic, readonly) NSString *hre_primaryType;
@property (nonatomic, readonly, copy) NSUUID *identifier;
@property (nonatomic, readonly, copy) NSArray *identifiersForBridgedAccessories;
@property (readonly) bool knownToSystemCommissioner;
@property bool knownToSystemCommissioner;
@property (nonatomic, copy) NSString *manufacturer;
@property (nonatomic, readonly, copy) NSNumber *matterNodeID;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property (nonatomic, readonly) NSUUID *messageTargetUUID;
@property (nonatomic, copy) NSString *model;
@property (nonatomic, copy) NSString *name;
@property (nonatomic, readonly) HMNetworkConfigurationProfile *networkConfigurationProfile;
@property (readonly, copy) NSUUID *networkProtectionGroupUUID;
@property (nonatomic, readonly, copy) HMNetworkRouterProfile *networkRouterProfile;
@property (readonly) NSNumber *nodeID;
@property (copy) NSNumber *nodeID;
@property (nonatomic) bool paired;
@property (readonly, copy) HMFPairingIdentity *pairingIdentity;
@property (readonly, copy) NSUUID *peerIdentifier;
@property (copy) NSUUID *peerIdentifier;
@property (readonly, copy) NSString *pendingConfigurationIdentifier;
@property (copy) NSString *pendingConfigurationIdentifier;
@property (copy) NSUUID *preferredMediaUserUUID;
@property unsigned long long preferredUserSelectionType;
@property (readonly, copy) NSString *privateDescription;
@property (nonatomic, readonly) long long productColor;
@property (nonatomic) long long productColor;
@property (readonly) NSNumber *productID;
@property (copy) NSNumber *productID;
@property (readonly, copy) NSArray *profiles;
@property (readonly, copy) NSString *propertyDescription;
@property (getter=isReachable, nonatomic) bool reachable;
@property (nonatomic, readonly) long long reachableTransports;
@property (nonatomic) long long reachableTransports;
@property (nonatomic, readonly) HMRemoteLoginHandler *remoteLoginHandler;
@property (retain) HMRemoteLoginHandler *remoteLoginHandler;
@property (nonatomic) HMRoom *room;
@property (readonly) NSData *rootPublicKey;
@property (copy) NSData *rootPublicKey;
@property (nonatomic, readonly, copy) NSString *serialNumber;
@property (copy) NSString *serialNumber;
@property (readonly, copy) NSDictionary *serializedDictionaryRepresentation;
@property (nonatomic, readonly, copy) NSArray *services;
@property (retain) HMAccessorySettings *settings;
@property (retain) HMAccessorySettingsAdapter *settingsAdapter;
@property (readonly, copy) NSString *shortDescription;
@property (copy) HMFSoftwareVersion *softwareVersion;
@property (nonatomic, readonly, copy) NSString *storeID;
@property (copy) NSString *storeID;
@property (readonly) Class superclass;
@property (nonatomic, retain) HMSupportedAccessoryDiagnostics *supportedDiagnostics;
@property unsigned long long supportedStereoPairVersions;
@property (readonly) bool supportsAccessCodes;
@property bool supportsAccessCodes;
@property (nonatomic, readonly) bool supportsAnnounce;
@property (nonatomic) bool supportsAnnounce;
@property (nonatomic, readonly) bool supportsAudioAnalysis;
@property bool supportsAudioAnalysis;
@property (readonly) bool supportsAudioDestination;
@property (nonatomic, readonly) bool supportsAudioGroup;
@property (readonly) bool supportsAudioGroup;
@property (nonatomic, readonly) bool supportsAudioReturnChannel;
@property (nonatomic) bool supportsAudioReturnChannel;
@property (readonly) bool supportsCHIP;
@property bool supportsCHIP;
@property (nonatomic, readonly) bool supportsCompanionInitiatedRestart;
@property (nonatomic) bool supportsCompanionInitiatedRestart;
@property (readonly) bool supportsCoordinationDoorbellChime;
@property bool supportsCoordinationDoorbellChime;
@property (nonatomic) bool supportsDiagnosticsTransfer;
@property (nonatomic, readonly) bool supportsDoorbellChime;
@property bool supportsDoorbellChime;
@property (nonatomic, readonly) bool supportsDropIn;
@property bool supportsDropIn;
@property (readonly) bool supportsHomeLevelLocationServiceSetting;
@property bool supportsHomeLevelLocationServiceSetting;
@property (readonly) bool supportsIdentify;
@property (readonly) bool supportsJustSiri;
@property bool supportsJustSiri;
@property (readonly) bool supportsManagedConfigurationProfile;
@property bool supportsManagedConfigurationProfile;
@property (nonatomic) bool supportsMediaAccessControl;
@property (nonatomic, readonly) bool supportsMediaActions;
@property (nonatomic) bool supportsMediaActions;
@property (readonly) bool supportsMessagedHomePodSettings;
@property bool supportsMessagedHomePodSettings;
@property (nonatomic, readonly) bool supportsMultiUser;
@property (nonatomic) bool supportsMultiUser;
@property (nonatomic, readonly) bool supportsMusicAlarm;
@property (nonatomic) bool supportsMusicAlarm;
@property (readonly) bool supportsPreferredMediaUser;
@property bool supportsPreferredMediaUser;
@property bool supportsPrimaryUserInfoSubscription;
@property (readonly) bool supportsRMVonAppleTV;
@property bool supportsRMVonAppleTV;
@property (readonly) bool supportsSoftwareUpdateV2;
@property bool supportsSoftwareUpdateV2;
@property (nonatomic) bool supportsTargetControl;
@property (nonatomic) bool supportsTargetController;
@property (readonly) bool supportsThirdPartyMusic;
@property bool supportsThirdPartyMusic;
@property (nonatomic, readonly) bool supportsUserMediaSettings;
@property (readonly) bool supportsUserMediaSettings;
@property (nonatomic, readonly) bool supportsWalletKey;
@property (nonatomic) bool supportsWalletKey;
@property (nonatomic, readonly) bool suspendCapable;
@property (nonatomic) bool suspendCapable;
@property (nonatomic, readonly) unsigned long long suspendedState;
@property (nonatomic) unsigned long long suspendedState;
@property (nonatomic, readonly) HMSymptomsHandler *symptomsHandler;
@property (copy) HMSymptomsHandler *symptomsHandler;
@property (nonatomic) bool targetControllerHardwareSupport;
@property (nonatomic, readonly, copy) NSArray *televisionProfiles;
@property (nonatomic, readonly) unsigned long long transportTypes;
@property (nonatomic) unsigned long long transportTypes;
@property (nonatomic, readonly, copy) NSUUID *uniqueIdentifier;
@property (nonatomic, copy) NSArray *uniqueIdentifiersForBridgedAccessories;
@property (nonatomic, readonly, copy) NSUUID *uuid;
@property (readonly) NSNumber *vendorID;
@property (copy) NSNumber *vendorID;
@property (nonatomic, readonly) HMFWiFiNetworkInfo *wifiNetworkInfo;
@property (nonatomic, retain) HMFWiFiNetworkInfo *wifiNetworkInfo;

// Image: /System/Library/Frameworks/HomeKit.framework/HomeKit

+ (id)_cameraProfilesForAccessoryProfiles:(id)arg1;
+ (id)_lightProfilesForAccessoryProfiles:(id)arg1;
+ (id)_mediaProfilesForAccessoryProfiles:(id)arg1;
+ (id)_networkConfigurationProfilesForCoder:(id)arg1 accessoryIdentifier:(id)arg2;
+ (id)_networkRouterProfilesForAccessoryProfiles:(id)arg1;
+ (id)_siriEndpointProfilesForAccessoryProfiles:(id)arg1;
+ (id)_televisionProfilesForAccessoryServices:(id)arg1;
+ (id)accessoryWithAccessoryReference:(id)arg1 home:(id)arg2;
+ (id)accessoryWithSerializedDictionaryRepresentation:(id)arg1 home:(id)arg2;
+ (id)logCategory;
+ (id)shortDescription;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (void)__configureWithContext:(id)arg1 home:(id)arg2;
- (bool)__updateSymptomsHandler:(id)arg1;
- (id)_accessoryInformationService;
- (void)_auditPairingsWithCompletionHandler:(id /* block */)arg1;
- (void)_configureProfilesWithContext:(id)arg1;
- (void)_copyFrom:(id)arg1;
- (void)_deleteSiriHistoryWithCompletion:(id /* block */)arg1;
- (id)_findCharacteristic:(id)arg1 forService:(id)arg2;
- (id)_findService:(id)arg1;
- (id)_findServiceWithUniqueIdentifier:(id)arg1;
- (void)_handleAccessoryCategoryChanged:(id)arg1;
- (void)_handleAccessoryControllableChanged:(id)arg1;
- (void)_handleAccessoryFlagsChanged:(id)arg1;
- (void)_handleAccessoryNotificationsUpdated:(id)arg1;
- (void)_handleCharacteristicValueUpdated:(id)arg1;
- (void)_handleCharacteristicsUpdated:(id)arg1;
- (void)_handleConnectivityChanged:(id)arg1;
- (void)_handleControlTargetsUpdatedMessage:(id)arg1;
- (void)_handleMultiUserSupportUpdatedMessage:(id)arg1;
- (id)_handleMultipleCharacteristicsUpdated:(id)arg1 message:(id)arg2 informDelegate:(bool)arg3;
- (void)_handlePairingIdentityUpdate:(id)arg1;
- (void)_handlePairingStateChanged:(id)arg1;
- (void)_handleRenamed:(id)arg1;
- (void)_handleRootSettingsUpdated:(id)arg1;
- (void)_handleServiceConfigurationState:(id)arg1;
- (void)_handleServiceDefaultNameUpdate:(id)arg1;
- (void)_handleServiceMediaSourceIdentifierUpdated:(id)arg1;
- (void)_handleServiceRenamed:(id)arg1;
- (void)_handleServiceSubtype:(id)arg1;
- (void)_handleSupportsCompanionInitiatedRestartUpdatedMessage:(id)arg1;
- (void)_handleSupportsDiagnosticsTransferUpdateMessage:(id)arg1;
- (void)_handleSymptomsHandlerUpdatedMessage:(id)arg1;
- (void)_handleTargetControlSupportUpdatedMessage:(id)arg1;
- (void)_identifyWithCompletionHandler:(id /* block */)arg1;
- (void)_invokeDidUpdateSupportsWalletKeyDelegate:(bool)arg1;
- (void)_listPairingsWithCompletionHandler:(id /* block */)arg1;
- (bool)_mergeControlTargetUUIDs:(id)arg1;
- (void)_mergeProfiles:(id)arg1;
- (bool)_mergeRemoteLoginHandler:(id)arg1;
- (bool)_mergeServices:(id)arg1;
- (void)_notifyClientsOfDiagnosticsTransferSupportUpdate;
- (void)_notifyClientsOfHomeLevelLocationServiceSettingSupportUpdate;
- (void)_notifyClientsOfMultiUserSupportUpdate;
- (void)_notifyClientsOfSupportsCompanionInitiatedRestartUpdate;
- (void)_notifyClientsOfSupportsMusicAlarmUpdate;
- (void)_notifyClientsOfSymptomsHandlerAddedOrRemoved:(bool)arg1;
- (void)_notifyClientsOfTargetControlSupportUpdate;
- (void)_notifyDelegateOfAddedControlTarget:(id)arg1;
- (void)_notifyDelegateOfAppDataUpdateForService:(id)arg1;
- (void)_notifyDelegateOfRemovedControlTarget:(id)arg1;
- (void)_notifyDelegateOfUpdatedSettings:(id)arg1;
- (void)_notifyDelegatesOfAdditionalSetupRequiredChange;
- (void)_notifyDelegatesOfUpdatedCalibrationStatus;
- (void)_notifyDelegatesOfUpdatedControllable;
- (id)_privateDelegate;
- (void)_readValueForCharacteristic:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)_recomputeAssistantIdentifier;
- (void)_setNotifyValue:(bool)arg1 forCharacteristic:(id)arg2;
- (void)_unconfigure;
- (void)_unconfigureContext;
- (void)_updateApplicationData:(id)arg1 forService:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)_updateAssociatedServiceType:(id)arg1 forService:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)_updateAuthorizationData:(id)arg1 forService:(id)arg2 characteristic:(id)arg3 completionHandler:(id /* block */)arg4;
- (bool)_updateFromAccessory:(id)arg1;
- (void)_updateName:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)_updateName:(id)arg1 forService:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)_updateRoom:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)_valueForCharacteristic:(id)arg1 ofService:(id)arg2;
- (void)_writeValue:(id)arg1 forCharacteristic:(id)arg2 completionHandler:(id /* block */)arg3;
- (id)accessoryFlags;
- (id)accessoryInfoDataProvider;
- (void)accessoryInfoDataProvider:(id)arg1 didReceiveUpdatesForAccessoryWithIdentifier:(id)arg2 primaryUserInfo:(id)arg3;
- (void)accessoryInfoDataProvider:(id)arg1 didReceiveUpdatesForAccessoryWithIdentifier:(id)arg2 wifiNetworkInfo:(id)arg3;
- (id)accessoryProfiles;
- (unsigned long long)accessoryReprovisionState;
- (id)accessorySettingsController;
- (id)accessorySettingsDataSource;
- (id)accountIdentifier;
- (void)activateCHIPPairingModeAndCreateSetupPayloadStringWithCompletion:(id /* block */)arg1;
- (void)activateCHIPPairingModeWithCompletion:(id /* block */)arg1;
- (void)adapter:(id)arg1 didUpdateSettingKeyPaths:(id)arg2;
- (void)adapter:(id)arg1 didUpdateSettings:(id)arg2;
- (void)addControlTarget:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)addControlTargetUUIDs:(id)arg1;
- (unsigned long long)additionalSetupStatus;
- (id)applicationData;
- (id)applicationDataIdentifier;
- (id)assistantIdentifier;
- (long long)associationOptions;
- (id)attributeDescriptions;
- (id)audioAnalysisEventBulletinBoardNotification;
- (id)audioDestination;
- (id)audioDestinationController;
- (id)audioDestinationGroupIdentifier;
- (id)audioDestinationIdentifier;
- (id)audioDestinationMediaProfiles;
- (id)audioDestinationName;
- (id)audioDestinationParentIdentifier;
- (long long)audioDestinationType;
- (id)bridgedAccessories;
- (bool)bridgedAccessory;
- (id)bundleID;
- (unsigned long long)calibrationStatus;
- (void)callCompletionHandler:(id /* block */)arg1;
- (void)callCompletionHandler:(id /* block */)arg1 error:(id)arg2;
- (id)cameraProfiles;
- (id)category;
- (long long)certificationStatus;
- (void)clearUserNotifiedOfSoftwareUpdateWithCompletion:(id /* block */)arg1;
- (id)commissioningID;
- (void)configureInfoDataProviderIfNeededWithOption:(unsigned long long)arg1;
- (void)configureSettingsAdapterIfNeeded;
- (void)configureSettingsAdapterWithCompletionHandler:(id /* block */)arg1;
- (id)configuredName;
- (id)containerHome;
- (id)containerUUID;
- (id)context;
- (id)controlTargetUUIDs;
- (id)controlTargets;
- (void)createSettingsAdapterWithDataSource:(id)arg1 controller:(id)arg2 context:(id)arg3;
- (id)currentServices;
- (id)delegate;
- (void)deleteSiriHistoryWithCompletion:(id /* block */)arg1;
- (id)description;
- (id)device;
- (id)deviceIRKData;
- (id)deviceIdentifier;
- (void)encodeWithCoder:(id)arg1;
- (id)endpointIdentifier;
- (void)fetchCHIPPairingsWithCompletion:(id /* block */)arg1;
- (void)fetchManagedConfigurationProfilesWithCompletionHandler:(id /* block */)arg1;
- (id)firmwareVersion;
- (void)handleRuntimeStateUpdate:(id)arg1 completionHandler:(id /* block */)arg2;
- (bool)hasOnboardedForNaturalLighting;
- (id)home;
- (unsigned long long)homePodVariant;
- (id)identifier;
- (id)identifiersForBridgedAccessories;
- (void)identifyWithCompletionHandler:(id /* block */)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithUUID:(id)arg1;
- (void)initiateDiagnosticsTransferWithCompletionHandler:(id /* block */)arg1;
- (void)initiateDiagnosticsTransferWithOptions:(id)arg1 completionHandler:(id /* block */)arg2;
- (bool)isAdditionalSetupRequired;
- (bool)isBlocked;
- (bool)isBridged;
- (bool)isCalibrating;
- (bool)isControllable;
- (bool)isCurrentAccessory;
- (bool)isFirmwareUpdateAvailable;
- (bool)isReachable;
- (bool)isSuspendCapable;
- (bool)isUserNotifiedOfSoftwareUpdate;
- (bool)knownToSystemCommissioner;
- (id)lightProfiles;
- (id)logIdentifier;
- (id)manufacturer;
- (void)markAsUserNotifiedOfSoftwareUpdateWithCompletion:(id /* block */)arg1;
- (void)markAsUserNotifiedOfSoftwareUpdateWithVersion:(id)arg1 completion:(id /* block */)arg2;
- (id)matterNodeID;
- (id)mediaDestinationController:(id)arg1 destinationWithIdentifier:(id)arg2;
- (id)mediaProfile;
- (bool)mergeFromNewObject:(id)arg1;
- (id)messageReceiveQueue;
- (id)messageTargetUUID;
- (id)model;
- (id)name;
- (id)networkConfigurationProfile;
- (id)networkProtectionGroupUUID;
- (id)networkRouterProfile;
- (id)nodeID;
- (void)notifyClientsOfUpdatedSupportsAudioReturnChannel;
- (void)notifyDelegateOfAppDataUpdateForService:(id)arg1;
- (void)notifyDelegateOfAudioDestinationControllerUpdate;
- (void)notifyDelegateOfAudioDestinationUpdate;
- (void)notifyDelegateUpdatedPreferredMediaUser;
- (void)notifyDelegateUpdatedSupportsJustSiri;
- (void)notifyDelegateUpdatedSupportsPreferredMediaUser;
- (void)notifyDelegateUpdatedSupportsRMVonAppleTV;
- (bool)paired;
- (id)pairingIdentity;
- (void)pairingIdentityWithPrivateKey:(bool)arg1 completionHandler:(id /* block */)arg2;
- (id)peerIdentifier;
- (id)pendingConfigurationIdentifier;
- (void)postConfigure;
- (id)preferredMediaUser;
- (id)preferredMediaUserUUID;
- (unsigned long long)preferredUserSelectionType;
- (id)privateDescription;
- (long long)productColor;
- (id)productID;
- (id)profiles;
- (void)queryAdvertisementInformationWithCompletionHandler:(id /* block */)arg1;
- (void)queryLastSeenStatusWithCompletion:(id /* block */)arg1;
- (void)queryLinkQualityWithCompletion:(id /* block */)arg1;
- (long long)reachableTransports;
- (void)recomputeAssistantIdentifier;
- (id)remoteLoginHandler;
- (void)removeCHIPPairings:(id)arg1 completion:(id /* block */)arg2;
- (void)removeControlTarget:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)removeControlTargetUUIDs:(id)arg1;
- (void)removeCorrespondingSystemCommissionerPairingWithCompletion:(id /* block */)arg1;
- (void)removeManagedConfigurationProfileWithIdentifier:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)resetControlTargetUUIDs;
- (void)resetControlTargetsWithCompletionHandler:(id /* block */)arg1;
- (id)room;
- (id)rootPublicKey;
- (id)serialNumber;
- (id)serializedDictionaryRepresentation;
- (id)services;
- (void)setAccessoryFlags:(id)arg1;
- (void)setAccessoryInfoDataProvider:(id)arg1;
- (void)setAccessoryProfiles:(id)arg1;
- (void)setAccessoryReprovisionState:(unsigned long long)arg1;
- (void)setAccessorySettingsController:(id)arg1;
- (void)setAccessorySettingsDataSource:(id)arg1;
- (void)setAccountIdentifier:(id)arg1;
- (void)setAdditionalSetupStatus:(unsigned long long)arg1;
- (void)setApplicationData:(id)arg1;
- (void)setAssistantIdentifier:(id)arg1;
- (void)setAssociationOptions:(long long)arg1;
- (void)setAudioDestination:(id)arg1;
- (void)setAudioDestinationController:(id)arg1;
- (void)setBridgedAccessory:(bool)arg1;
- (void)setBundleID:(id)arg1;
- (void)setCHIPPairingModeActive:(bool)arg1 withCompletion:(id /* block */)arg2;
- (void)setCalibrationStatus:(unsigned long long)arg1;
- (void)setCategory:(id)arg1;
- (void)setCertificationStatus:(long long)arg1;
- (void)setCommissioningID:(id)arg1;
- (void)setConfiguredName:(id)arg1;
- (void)setContext:(id)arg1;
- (void)setControlTargetUUIDs:(id)arg1;
- (void)setControllable:(bool)arg1;
- (void)setCurrentAccessory:(bool)arg1;
- (void)setCurrentServices:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDevice:(id)arg1;
- (void)setDeviceIRKData:(id)arg1;
- (void)setDeviceIdentifier:(id)arg1;
- (void)setFirmwareUpdateAvailable:(bool)arg1;
- (void)setFirmwareVersion:(id)arg1;
- (void)setHasOnboardedForNaturalLighting:(bool)arg1;
- (void)setHasOnboardedForNaturalLightingWithCompletion:(id /* block */)arg1;
- (void)setHome:(id)arg1;
- (void)setHomePodVariant:(unsigned long long)arg1;
- (void)setKnownToSystemCommissioner:(bool)arg1;
- (void)setManufacturer:(id)arg1;
- (void)setModel:(id)arg1;
- (void)setName:(id)arg1;
- (void)setNetworkProtectionGroupUUID:(id)arg1;
- (void)setNodeID:(id)arg1;
- (void)setPaired:(bool)arg1;
- (void)setPeerIdentifier:(id)arg1;
- (void)setPeerIdentifier:(id)arg1;
- (void)setPendingConfigurationIdentifier:(id)arg1;
- (void)setPreferredMediaUserUUID:(id)arg1;
- (void)setPreferredUserSelectionType:(unsigned long long)arg1;
- (void)setProductColor:(long long)arg1;
- (void)setProductID:(id)arg1;
- (void)setReachable:(bool)arg1;
- (void)setReachableTransports:(long long)arg1;
- (void)setRemoteLoginHandler:(id)arg1;
- (void)setRoom:(id)arg1;
- (void)setRootPublicKey:(id)arg1;
- (void)setSerialNumber:(id)arg1;
- (void)setSettings:(id)arg1;
- (void)setSettingsAdapter:(id)arg1;
- (void)setSoftwareUpdateController:(id)arg1;
- (void)setSoftwareVersion:(id)arg1;
- (void)setStoreID:(id)arg1;
- (void)setSupportedDiagnostics:(id)arg1;
- (void)setSupportedStereoPairVersions:(unsigned long long)arg1;
- (void)setSupportsAccessCodes:(bool)arg1;
- (void)setSupportsAnnounce:(bool)arg1;
- (void)setSupportsAudioAnalysis:(bool)arg1;
- (void)setSupportsAudioReturnChannel:(bool)arg1;
- (void)setSupportsCHIP:(bool)arg1;
- (void)setSupportsCompanionInitiatedRestart:(bool)arg1;
- (void)setSupportsCoordinationDoorbellChime:(bool)arg1;
- (void)setSupportsDiagnosticsTransfer:(bool)arg1;
- (void)setSupportsDoorbellChime:(bool)arg1;
- (void)setSupportsDropIn:(bool)arg1;
- (void)setSupportsHomeLevelLocationServiceSetting:(bool)arg1;
- (void)setSupportsIdentify:(bool)arg1;
- (void)setSupportsJustSiri:(bool)arg1;
- (void)setSupportsManagedConfigurationProfile:(bool)arg1;
- (void)setSupportsMediaAccessControl:(bool)arg1;
- (void)setSupportsMediaActions:(bool)arg1;
- (void)setSupportsMessagedHomePodSettings:(bool)arg1;
- (void)setSupportsMultiUser:(bool)arg1;
- (void)setSupportsMusicAlarm:(bool)arg1;
- (void)setSupportsPreferredMediaUser:(bool)arg1;
- (void)setSupportsPrimaryUserInfoSubscription:(bool)arg1;
- (void)setSupportsRMVonAppleTV:(bool)arg1;
- (void)setSupportsSoftwareUpdateV2:(bool)arg1;
- (void)setSupportsTargetControl:(bool)arg1;
- (void)setSupportsTargetController:(bool)arg1;
- (void)setSupportsThirdPartyMusic:(bool)arg1;
- (void)setSupportsUserMediaSettings:(bool)arg1;
- (void)setSupportsWalletKey:(bool)arg1;
- (void)setSuspendCapable:(bool)arg1;
- (void)setSuspendedState:(unsigned long long)arg1;
- (void)setSymptomsHandler:(id)arg1;
- (void)setTargetControllerHardwareSupport:(bool)arg1;
- (void)setTransportTypes:(unsigned long long)arg1;
- (void)setUniqueIdentifiersForBridgedAccessories:(id)arg1;
- (void)setVendorID:(id)arg1;
- (void)setWifiNetworkInfo:(id)arg1;
- (id)settings;
- (id)settingsAdapter;
- (id)shortDescription;
- (id)siriEndpointIdentifier;
- (id)siriEndpointProfile;
- (id)softwareUpdateController;
- (id)softwareVersion;
- (id)storeID;
- (id)supportedDiagnostics;
- (unsigned long long)supportedStereoPairVersions;
- (bool)supportsAccessCodes;
- (bool)supportsAnnounce;
- (bool)supportsAudioAnalysis;
- (bool)supportsAudioDestination;
- (bool)supportsAudioGroup;
- (bool)supportsAudioReturnChannel;
- (bool)supportsCHIP;
- (bool)supportsCompanionInitiatedRestart;
- (bool)supportsCoordinationDoorbellChime;
- (bool)supportsDiagnosticsTransfer;
- (bool)supportsDoorbellChime;
- (bool)supportsDropIn;
- (bool)supportsHomeLevelLocationServiceSetting;
- (bool)supportsIdentify;
- (bool)supportsJustSiri;
- (bool)supportsManagedConfigurationProfile;
- (bool)supportsMediaAccessControl;
- (bool)supportsMediaActions;
- (bool)supportsMessagedHomePodSettings;
- (bool)supportsMultiUser;
- (bool)supportsMusicAlarm;
- (bool)supportsPreferredMediaUser;
- (bool)supportsPrimaryUserInfoSubscription;
- (bool)supportsRMVonAppleTV;
- (bool)supportsSoftwareUpdateV2;
- (bool)supportsTargetControl;
- (bool)supportsTargetController;
- (bool)supportsThirdPartyMusic;
- (bool)supportsUserMediaSettings;
- (bool)supportsWalletKey;
- (bool)suspendCapable;
- (unsigned long long)suspendedState;
- (id)symptomsHandler;
- (bool)targetControllerHardwareSupport;
- (id)targetControllers;
- (id)televisionProfiles;
- (unsigned long long)transportTypes;
- (void)unconfigureInfoDataProviderWithOptions:(unsigned long long)arg1;
- (id)uniqueIdentifier;
- (id)uniqueIdentifiersForBridgedAccessories;
- (void)updateAccessoryInfo:(id)arg1;
- (void)updateAccessoryName:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)updateApplicationData:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)updateApplicationData:(id)arg1 forService:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)updateAudioDestinationSupportedOptions:(unsigned long long)arg1 completion:(id /* block */)arg2;
- (void)updateName:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)updatePendingConfigurationIdentifier:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)updatePreferredMediaUser:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)updatePreferredMediaUserSelectionType:(unsigned long long)arg1 user:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)updateSettingWithKeyPath:(id)arg1 value:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)updateSettingsAdapterSettingReflected:(bool)arg1;
- (void)updateShouldProcessTransactionRemovalWithValue:(bool)arg1 completion:(id /* block */)arg2;
- (id)uuid;
- (void)validatePairingAuthMethodWithCompletion:(id /* block */)arg1;
- (id)vendorID;
- (void)wakeSuspendedAccessoryWithWakeType:(unsigned long long)arg1 completion:(id /* block */)arg2;
- (id)wifiNetworkInfo;

// Image: /System/Library/Frameworks/MediaSetup.framework/MediaSetup

- (bool)isEndpoint;
- (bool)isHomePod;
- (bool)isPartOfHome:(id)arg1;

// Image: /System/Library/PrivateFrameworks/AnnounceDaemon.framework/AnnounceDaemon

+ (id)accessoriesWithAnnounceEnabledFromAccessories:(id)arg1;
+ (id)announceAccessoriesFromAccessories:(id)arg1;
+ (id)announceAccessoriesWithAnnounceEnabledFromAccessories:(id)arg1;
+ (id)appleAnnounceAccessoriesFromAccessories:(id)arg1;
+ (id)appleAnnounceHostAccessoriesFromAccessories:(id)arg1;

- (bool)an_isAnnounceAccessory;
- (bool)an_isAnnounceEnabled;
- (bool)an_isAppleAnnounceAccessory;
- (bool)an_isAppleAnnounceHostAccessory;

// Image: /System/Library/PrivateFrameworks/DropInCore.framework/DropInCore

- (id)description;
- (bool)dic_supportsDropIn;

// Image: /System/Library/PrivateFrameworks/Home.framework/Home

+ (id)hf_getUserFriendlyDescriptionKey:(id)arg1;
+ (bool)hf_isSuspendedStateSupported:(unsigned long long)arg1;
+ (bool)hf_isSuspendedStateSuspended:(unsigned long long)arg1;
+ (id /* block */)hf_softwareUpdateComparator;
+ (id)hf_userFriendlyLocalizedCapitalizedDescription:(id)arg1;
+ (id)hf_userFriendlyLocalizedLowercaseDescription:(id)arg1;

- (bool)_areAllSensorServices;
- (id)_hf_audioAnalysisEventBulletinBoardNotification;
- (id)_hf_categoryType;
- (void)_pushSymptomUpdate;
- (id)accessories;
- (id)hf_accessoryLikeObjects;
- (id)hf_accessoryType;
- (id)hf_allConnectedHomeToCHIPAccessoryPairingFuture;
- (bool)hf_anyNonSensorServiceIsOnForContextType:(unsigned long long)arg1;
- (long long)hf_appPunchOutReason;
- (bool)hf_areAllServicesInGroups;
- (id)hf_associatedAccessories;
- (id)hf_bridgedAccessories;
- (id)hf_bulletinNotifications;
- (bool)hf_canShowAsIndividualServices;
- (bool)hf_canSpanMultipleRooms;
- (bool)hf_canSyncExternalSettings;
- (id)hf_categoryOrPrimaryServiceType;
- (id)hf_componentServices;
- (id)hf_containedCharacteristics;
- (id)hf_containedProfiles;
- (id)hf_containedServices;
- (id)hf_dateAdded;
- (id)hf_displayName;
- (id)hf_displayNamesForVisibleTiles;
- (id)hf_effectiveCategoryType;
- (bool)hf_effectiveIsFavorite;
- (bool)hf_effectiveShowInHomeDashboard;
- (id)hf_errorForCurrentSessionState;
- (bool)hf_fake8021xNetworkSymptom;
- (bool)hf_fakeCaptiveLeaseRenewalSymptom;
- (id)hf_fakeDebugSymptoms;
- (bool)hf_fakeGeneralFixSymptom;
- (bool)hf_fakeHardwareFixSymptom;
- (bool)hf_fakeHomeKitSymptom;
- (bool)hf_fakeICloudSymptom;
- (bool)hf_fakeITunesSymptom;
- (bool)hf_fakeInternetFixSymptom;
- (bool)hf_fakeNetworkNotShareableSymptom;
- (bool)hf_fakeNetworkProfileFixSymptom;
- (bool)hf_fakeNetworkProfileInstallSymptom;
- (bool)hf_fakeNetworkStrengthError;
- (bool)hf_fakeShouldDisplayManualFixOption;
- (bool)hf_fakeUnreachableError;
- (bool)hf_fakeVPNProfileExpired;
- (bool)hf_fakeWiFiMismatchSymptom;
- (bool)hf_fakeWiFiPerformanceSymptom;
- (bool)hf_fakeWiFiSymptom;
- (id)hf_fetchAvailableSoftwareUpdateWithOptions:(unsigned long long)arg1;
- (id)hf_groupableServices;
- (bool)hf_hasInputSourceService;
- (bool)hf_hasManagedNetworkCredential;
- (bool)hf_hasNewValidSoftwareOrFirmwareUpdate;
- (bool)hf_hasNewValidSoftwareUpdate;
- (bool)hf_hasRequestedSoftwareUpdate;
- (bool)hf_hasSetFavorite;
- (bool)hf_hasSetForContextType:(unsigned long long)arg1;
- (bool)hf_hasSetShowInHomeDashboard;
- (bool)hf_hasSetVisibleInHomeStatus;
- (bool)hf_hasSoftwareUpdate;
- (bool)hf_hasValidSoftwareOrFirmwareUpdate;
- (bool)hf_hasValidSoftwareUpdate;
- (id)hf_homeKitObject;
- (id)hf_identifyHomePod;
- (id)hf_irrigationSystemServices;
- (bool)hf_isAirPortExpressSpeaker;
- (bool)hf_isAppleTV;
- (bool)hf_isAudioAnalysisSupportedDevice;
- (bool)hf_isAudioReceiver;
- (bool)hf_isBridge;
- (bool)hf_isCamera;
- (bool)hf_isCategorizedAsBridge;
- (bool)hf_isCategorizedAsMediaAccessory;
- (bool)hf_isCeilingFanWithLight;
- (bool)hf_isDirectlyReachable;
- (bool)hf_isDoorbell;
- (bool)hf_isDownloadingSoftwareUpdate;
- (bool)hf_isDumbSpeaker;
- (bool)hf_isFavorite;
- (bool)hf_isForcedVisibleInHomeStatus;
- (bool)hf_isHomePod;
- (bool)hf_isIdentifiable;
- (bool)hf_isIdentifiable;
- (bool)hf_isInRoom:(id)arg1;
- (bool)hf_isInstallingSoftwareUpdate;
- (bool)hf_isMediaAccessory;
- (bool)hf_isMultiSensorAccessory;
- (bool)hf_isMultiServiceAccessory;
- (bool)hf_isNetworkRouter;
- (bool)hf_isNetworkRouterSatellite;
- (bool)hf_isNonServiceBasedAccessory;
- (bool)hf_isNotificationSupportedCamera;
- (bool)hf_isOnForContextType:(unsigned long long)arg1;
- (bool)hf_isPowerStrip;
- (bool)hf_isProgrammableSwitch;
- (bool)hf_isPureBridge;
- (bool)hf_isPureProgrammableSwitch;
- (bool)hf_isReadyToInstallSoftwareUpdate;
- (bool)hf_isRemoteControl;
- (bool)hf_isSensorAccessory;
- (bool)hf_isSingleSensorAccessory;
- (bool)hf_isSingleServiceAccessory;
- (bool)hf_isSingleServiceLikeAccessory;
- (bool)hf_isSiriEndpoint;
- (bool)hf_isSoftwareUpdateInProgress;
- (bool)hf_isSoftwareUpdateInstalled;
- (bool)hf_isSpeaker;
- (bool)hf_isSprinkler;
- (bool)hf_isSupportedAccessory;
- (bool)hf_isSuspended;
- (bool)hf_isTelevision;
- (bool)hf_isValidObject;
- (bool)hf_isVisibleAccessory;
- (bool)hf_isVisibleAsBridge;
- (bool)hf_isVisibleAsBridgedAccessory;
- (bool)hf_isVisibleInHomeStatus;
- (Class)hf_itemClass;
- (id)hf_linkedResidentDevice;
- (unsigned long long)hf_mediaAccessControlCapabilities;
- (id)hf_moveToRoom:(id)arg1;
- (bool)hf_needsOnboarding;
- (bool)hf_needsReprovisioningCheck;
- (bool)hf_needsSoftwareUpdateToSupportBeingAddedToMediaSystem;
- (id)hf_networkConfigurationProfiles;
- (id)hf_networkRouterProfiles;
- (unsigned long long)hf_numberOfProgrammableSwitches;
- (void)hf_onboardSiriEndpointIfNeededWithSettingKeyPath:(id)arg1 settingValue:(id)arg2;
- (id)hf_owningBridgeAccessory;
- (id)hf_parentRoom;
- (void)hf_postUpdateApplicationDataNotification:(id)arg1 needCellReload:(bool)arg2;
- (id)hf_primaryService;
- (id)hf_programmableSwitchNamespaceServices;
- (id)hf_programmableSwitchServices;
- (bool)hf_requiresFirmwareUpdate;
- (id)hf_rootAccessoryLikeHomeKitObject;
- (id)hf_safeRoom;
- (id)hf_serviceNameComponents;
- (id)hf_serviceOfType:(id)arg1;
- (id)hf_servicesBehindBridge;
- (void)hf_setFakeCaptiveLeaseRenewalSymptom:(bool)arg1;
- (void)hf_setFakeWiFiMismatchSymptom:(bool)arg1;
- (id)hf_setShowAsIndividualServices:(bool)arg1;
- (id)hf_setTileSize:(id)arg1;
- (bool)hf_shouldBeOnForContextType:(unsigned long long)arg1;
- (bool)hf_shouldDisplayManualFixOptionForSymptom:(long long)arg1;
- (bool)hf_shouldHideForContextType:(unsigned long long)arg1;
- (bool)hf_shouldHideNearbyAccessoryService:(id)arg1;
- (bool)hf_shouldSeparateAccessoryName;
- (bool)hf_shouldShowInFavorites;
- (bool)hf_shouldShowSoftwareUpdateInfo;
- (bool)hf_showAsAccessoryTile;
- (bool)hf_showAsIndividualServices;
- (bool)hf_showInHomeDashboard;
- (bool)hf_showsAsAccessoryInControlCentre;
- (id)hf_siriEndpointProfile;
- (id)hf_softwareUpdateDependentClasses;
- (id)hf_softwareUpdateDependentObjects;
- (id)hf_softwareUpdateDocumentation;
- (unsigned long long)hf_softwareUpdateDownloadSize;
- (id)hf_softwareUpdateHash;
- (id)hf_softwareUpdatePortionComplete;
- (bool)hf_softwareUpdatePossessesNecessaryDocumentation;
- (id)hf_softwareUpdateReleaseDate;
- (id)hf_softwareUpdateVersion;
- (id)hf_standardServices;
- (id)hf_startSoftwareUpdate;
- (id)hf_stateDumpBuilderWithContext:(id)arg1;
- (bool)hf_supportsHomeStatus;
- (bool)hf_supportsMultiUserLanguage:(id)arg1;
- (bool)hf_supportsRMVOnAppleTV;
- (bool)hf_supportsSoftwareUpdate;
- (bool)hf_supportsSuspendedState;
- (bool)hf_supportsUserLevelUpdateListeningHistorySetting;
- (id)hf_tileSize;
- (void)hf_updateApplicationData:(id)arg1 handleError:(bool)arg2 completionHandler:(id /* block */)arg3;
- (void)hf_updateApplicationData:(id)arg1 needCellReload:(bool)arg2 handleError:(bool)arg3 completionHandler:(id /* block */)arg4;
- (id)hf_updateDateAdded:(id)arg1;
- (id)hf_updateIsFavorite:(bool)arg1;
- (id)hf_updateIsVisibleInHomeStatus:(bool)arg1;
- (id)hf_updateShowInHomeDashboard:(bool)arg1;
- (id)hf_updateUserNotificationSettings:(id)arg1;
- (id)hf_updateValue:(bool)arg1 forContextType:(unsigned long long)arg2;
- (id)hf_updateValueForCurrentObjectOnly:(bool)arg1 forContextType:(unsigned long long)arg2;
- (id)hf_userFriendlyLocalizedCapitalizedDescription;
- (id)hf_userFriendlyLocalizedLowercaseDescription;
- (id)hf_userNotificationSettings;
- (id)hf_visibleServices;

// Image: /System/Library/PrivateFrameworks/HomeMessagingUtils.framework/HomeMessagingUtils

+ (id)hmu_accessoriesExcludingCurrentAccessoryFromAccessories:(id)arg1;
+ (id)hmu_accessoriesFromAccessories:(id)arg1 excludingStereoCompanionForAccessory:(id)arg2;
+ (id)hmu_announceAccessoriesFromAccessories:(id)arg1;

- (id)hmu_destinationForService:(id)arg1;
- (bool)hmu_isAppleTV;
- (bool)hmu_isEndpoint;
- (bool)hmu_isHomePod;
- (bool)hmu_isPartOfHome:(id)arg1;

// Image: /System/Library/PrivateFrameworks/HomeRecommendationEngine.framework/HomeRecommendationEngine

- (id)_containedRecommendableObjects;
- (id)hre_actionTypes;
- (id)hre_characteristics;
- (id)hre_home;
- (bool)hre_isActionable;
- (bool)hre_isMediaObject;
- (bool)hre_isVisible;
- (id)hre_matchingTypes;
- (id)hre_parentRoom;
- (id)hre_primaryType;

@end
