
@interface WKPreferences : NSObject <NSCopying, NSSecureCoding, WKObject> {
    struct ObjectStorage<WebKit::WebPreferences> { 
        struct type { 
            unsigned char __lx[112]; 
        } data; 
    }  _preferences;
}

@property (setter=_setAcceleratedCompositingEnabled:, nonatomic) bool _acceleratedCompositingEnabled;
@property (setter=_setAcceleratedDrawingEnabled:, nonatomic) bool _acceleratedDrawingEnabled;
@property (setter=_setAccessHandleEnabled:, nonatomic) bool _accessHandleEnabled;
@property (setter=_setAccessibilityIsolatedTreeEnabled:, nonatomic) bool _accessibilityIsolatedTreeEnabled;
@property (setter=_setAllowFileAccessFromFileURLs:, nonatomic) bool _allowFileAccessFromFileURLs;
@property (setter=_setAllowsPictureInPictureMediaPlayback:, nonatomic) bool _allowsPictureInPictureMediaPlayback;
@property (setter=_setAnimatedImageAsyncDecodingEnabled:, nonatomic) bool _animatedImageAsyncDecodingEnabled;
@property (readonly) struct Object { int (**x1)(); void *x2; }*_apiObject;
@property (setter=_setAppBadgeEnabled:, nonatomic) bool _appBadgeEnabled;
@property (setter=_setApplePayCapabilityDisclosureAllowed:, nonatomic) bool _applePayCapabilityDisclosureAllowed;
@property (setter=_setAVFoundationEnabled:, nonatomic) bool _avFoundationEnabled;
@property (setter=_setClientBadgeEnabled:, nonatomic) bool _clientBadgeEnabled;
@property (setter=_setColorFilterEnabled:, nonatomic) bool _colorFilterEnabled;
@property (setter=_setCompositingBordersVisible:, nonatomic) bool _compositingBordersVisible;
@property (setter=_setCompositingRepaintCountersVisible:, nonatomic) bool _compositingRepaintCountersVisible;
@property (setter=_setContentChangeObserverEnabled:, nonatomic) bool _contentChangeObserverEnabled;
@property (setter=_setDefaultFixedPitchFontSize:, nonatomic) unsigned long long _defaultFixedPitchFontSize;
@property (setter=_setDefaultFontSize:, nonatomic) unsigned long long _defaultFontSize;
@property (setter=_setDeveloperExtrasEnabled:, nonatomic) bool _developerExtrasEnabled;
@property (setter=_setDeviceOrientationEventEnabled:, nonatomic) bool _deviceOrientationEventEnabled;
@property (setter=_setDiagnosticLoggingEnabled:, nonatomic) bool _diagnosticLoggingEnabled;
@property (setter=_setDisplayListDrawingEnabled:, nonatomic) bool _displayListDrawingEnabled;
@property (setter=_setDOMPasteAllowed:, nonatomic) bool _domPasteAllowed;
@property (setter=_setEditableLinkBehavior:, nonatomic) long long _editableLinkBehavior;
@property (setter=_setEnumeratingAllNetworkInterfacesEnabled:, nonatomic) bool _enumeratingAllNetworkInterfacesEnabled;
@property (getter=_isExtensibleSSOEnabled, setter=_setExtensibleSSOEnabled:, nonatomic) bool _extensibleSSOEnabled;
@property (setter=_setFileSystemAccessEnabled:, nonatomic) bool _fileSystemAccessEnabled;
@property (setter=_setFixedPitchFontFamily:, nonatomic, copy) NSString *_fixedPitchFontFamily;
@property (setter=_setFullScreenEnabled:, nonatomic) bool _fullScreenEnabled;
@property (setter=_setGetUserMediaRequiresFocus:, nonatomic) bool _getUserMediaRequiresFocus;
@property (setter=_setHiddenPageDOMTimerThrottlingAutoIncreases:, nonatomic) bool _hiddenPageDOMTimerThrottlingAutoIncreases;
@property (setter=_setHiddenPageDOMTimerThrottlingEnabled:, nonatomic) bool _hiddenPageDOMTimerThrottlingEnabled;
@property (setter=_setICECandidateFilteringEnabled:, nonatomic) bool _iceCandidateFilteringEnabled;
@property (setter=_setInactiveMediaCaptureSteamRepromptIntervalInMinutes:, nonatomic) double _inactiveMediaCaptureSteamRepromptIntervalInMinutes;
@property (setter=_setInteractionRegionInlinePadding:, nonatomic) double _interactionRegionInlinePadding;
@property (setter=_setInteractionRegionMinimumCornerRadius:, nonatomic) double _interactionRegionMinimumCornerRadius;
@property (setter=_setInterruptAudioOnPageVisibilityChangeEnabled:, nonatomic) bool _interruptAudioOnPageVisibilityChangeEnabled;
@property (setter=_setItpDebugModeEnabled:, nonatomic) bool _itpDebugModeEnabled;
@property (setter=_setJavaScriptCanAccessClipboard:, nonatomic) bool _javaScriptCanAccessClipboard;
@property (setter=_setJavaScriptRuntimeFlags:, nonatomic) unsigned long long _javaScriptRuntimeFlags;
@property (setter=_setLargeImageAsyncDecodingEnabled:, nonatomic) bool _largeImageAsyncDecodingEnabled;
@property (setter=_setLegacyLineLayoutVisualCoverageEnabled:, nonatomic) bool _legacyLineLayoutVisualCoverageEnabled;
@property (setter=_setLoadsImagesAutomatically:, nonatomic) bool _loadsImagesAutomatically;
@property (setter=_setLogsPageMessagesToSystemConsoleEnabled:, nonatomic) bool _logsPageMessagesToSystemConsoleEnabled;
@property (setter=_setLowPowerVideoAudioBufferSizeEnabled:, nonatomic) bool _lowPowerVideoAudioBufferSizeEnabled;
@property (setter=_setManagedMediaSourceEnabled:, nonatomic) bool _managedMediaSourceEnabled;
@property (setter=_setManagedMediaSourceHighThreshold:, nonatomic) double _managedMediaSourceHighThreshold;
@property (setter=_setManagedMediaSourceLowThreshold:, nonatomic) double _managedMediaSourceLowThreshold;
@property (setter=_setMediaCaptureRequiresSecureConnection:, nonatomic) bool _mediaCaptureRequiresSecureConnection;
@property (setter=_setMediaDevicesEnabled:, nonatomic) bool _mediaDevicesEnabled;
@property (setter=_setMediaPreferredFullscreenWidth:, nonatomic) double _mediaPreferredFullscreenWidth;
@property (setter=_setMediaSessionEnabled:, nonatomic) bool _mediaSessionEnabled;
@property (setter=_setMediaSourceEnabled:, nonatomic) bool _mediaSourceEnabled;
@property (setter=_setMockCaptureDevicesEnabled:, nonatomic) bool _mockCaptureDevicesEnabled;
@property (setter=_setMockCaptureDevicesPromptEnabled:, nonatomic) bool _mockCaptureDevicesPromptEnabled;
@property (setter=_setModelDocumentEnabled:, nonatomic) bool _modelDocumentEnabled;
@property (setter=_setNeedsInAppBrowserPrivacyQuirks:, nonatomic) bool _needsInAppBrowserPrivacyQuirks;
@property (setter=_setNeedsSiteSpecificQuirks:, nonatomic) bool _needsSiteSpecificQuirks;
@property (setter=_setNotificationEventEnabled:, nonatomic) bool _notificationEventEnabled;
@property (setter=_setNotificationsEnabled:, nonatomic) bool _notificationsEnabled;
@property (setter=_setOfflineApplicationCacheIsEnabled:, nonatomic) bool _offlineApplicationCacheIsEnabled;
@property (setter=_setPageVisibilityBasedProcessSuppressionEnabled:, nonatomic) bool _pageVisibilityBasedProcessSuppressionEnabled;
@property (setter=_setPeerConnectionEnabled:, nonatomic) bool _peerConnectionEnabled;
@property (setter=_setPitchCorrectionAlgorithm:, nonatomic) long long _pitchCorrectionAlgorithm;
@property (setter=_setPrivateClickMeasurementDebugModeEnabled:, nonatomic) bool _privateClickMeasurementDebugModeEnabled;
@property (setter=_setPrivateClickMeasurementEnabled:, nonatomic) bool _privateClickMeasurementEnabled;
@property (setter=_setPunchOutWhiteBackgroundsInDarkMode:, nonatomic) bool _punchOutWhiteBackgroundsInDarkMode;
@property (setter=_setPushAPIEnabled:, nonatomic) bool _pushAPIEnabled;
@property (setter=_setRemotePlaybackEnabled:, nonatomic) bool _remotePlaybackEnabled;
@property (setter=_setRequestAnimationFrameEnabled:, nonatomic) bool _requestAnimationFrameEnabled;
@property (setter=_setRequiresFullscreenToLockScreenOrientation:, nonatomic) bool _requiresFullscreenToLockScreenOrientation;
@property (setter=_setRequiresPageVisibilityToPlayAudio:, nonatomic) bool _requiresPageVisibilityToPlayAudio;
@property (setter=_setResourceUsageOverlayVisible:, nonatomic) bool _resourceUsageOverlayVisible;
@property (getter=_isSafeBrowsingEnabled, setter=_setSafeBrowsingEnabled:, nonatomic) bool _safeBrowsingEnabled;
@property (setter=_setScreenCaptureEnabled:, nonatomic) bool _screenCaptureEnabled;
@property (setter=_setSecureContextChecksEnabled:, nonatomic) bool _secureContextChecksEnabled;
@property (setter=_setServiceWorkerEntitlementDisabledForTesting:, nonatomic) bool _serviceWorkerEntitlementDisabledForTesting;
@property (setter=_setShouldAllowDesignSystemUIFonts:, nonatomic) bool _shouldAllowDesignSystemUIFonts;
@property (setter=_setShouldAllowUserInstalledFonts:, nonatomic) bool _shouldAllowUserInstalledFonts;
@property (setter=_setShouldEnableTextAutosizingBoost:, nonatomic) bool _shouldEnableTextAutosizingBoost;
@property (setter=_setShouldIgnoreMetaViewport:, nonatomic) bool _shouldIgnoreMetaViewport;
@property (setter=_setShouldSuppressKeyboardInputDuringProvisionalNavigation:, nonatomic) bool _shouldSuppressKeyboardInputDuringProvisionalNavigation;
@property (setter=_setSpeechRecognitionEnabled:, nonatomic) bool _speechRecognitionEnabled;
@property (getter=_isStandalone, setter=_setStandalone:, nonatomic) bool _standalone;
@property (setter=_setStorageAPIEnabled:, nonatomic) bool _storageAPIEnabled;
@property (setter=_setStorageBlockingPolicy:, nonatomic) long long _storageBlockingPolicy;
@property (setter=_setSubpixelAntialiasedLayerTextEnabled:, nonatomic) bool _subpixelAntialiasedLayerTextEnabled;
@property (setter=_setTelephoneNumberDetectionIsEnabled:, nonatomic) bool _telephoneNumberDetectionIsEnabled;
@property (setter=_setTextAutosizingEnabled:, nonatomic) bool _textAutosizingEnabled;
@property (setter=_setTiledScrollingIndicatorVisible:, nonatomic) bool _tiledScrollingIndicatorVisible;
@property (setter=_setVerifyWindowOpenUserGestureFromUIProcess:, nonatomic) bool _verifyWindowOpenUserGestureFromUIProcess;
@property (setter=_setVideoQualityIncludesDisplayCompositingEnabled:, nonatomic) bool _videoQualityIncludesDisplayCompositingEnabled;
@property (setter=_setVisibleDebugOverlayRegions:, nonatomic) unsigned long long _visibleDebugOverlayRegions;
@property (setter=_setWebAudioEnabled:, nonatomic) bool _webAudioEnabled;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (getter=isElementFullscreenEnabled, nonatomic) bool elementFullscreenEnabled;
@property (getter=isFraudulentWebsiteWarningEnabled, nonatomic) bool fraudulentWebsiteWarningEnabled;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long inactiveSchedulingPolicy;
@property (nonatomic) bool javaScriptCanOpenWindowsAutomatically;
@property (nonatomic) bool javaScriptEnabled;
@property (nonatomic) double minimumFontSize;
@property (nonatomic) bool shouldPrintBackgrounds;
@property (getter=isSiteSpecificQuirksModeEnabled, nonatomic) bool siteSpecificQuirksModeEnabled;
@property (readonly) Class superclass;
@property (getter=isTextInteractionEnabled, nonatomic) bool textInteractionEnabled;

// Image: /System/Library/Frameworks/WebKit.framework/WebKit

+ (id)_experimentalFeatures;
+ (id)_features;
+ (id)_internalDebugFeatures;
+ (bool)supportsSecureCoding;

- (bool)_acceleratedCompositingEnabled;
- (bool)_acceleratedDrawingEnabled;
- (bool)_accessHandleEnabled;
- (bool)_accessibilityIsolatedTreeEnabled;
- (bool)_allowFileAccessFromFileURLs;
- (bool)_allowsPictureInPictureMediaPlayback;
- (bool)_animatedImageAsyncDecodingEnabled;
- (struct Object { int (**x1)(); void *x2; }*)_apiObject;
- (bool)_appBadgeEnabled;
- (bool)_applePayCapabilityDisclosureAllowed;
- (bool)_avFoundationEnabled;
- (bool)_clientBadgeEnabled;
- (bool)_colorFilterEnabled;
- (bool)_compositingBordersVisible;
- (bool)_compositingRepaintCountersVisible;
- (bool)_contentChangeObserverEnabled;
- (unsigned long long)_defaultFixedPitchFontSize;
- (unsigned long long)_defaultFontSize;
- (bool)_developerExtrasEnabled;
- (bool)_deviceOrientationEventEnabled;
- (bool)_diagnosticLoggingEnabled;
- (bool)_displayListDrawingEnabled;
- (bool)_domPasteAllowed;
- (long long)_editableLinkBehavior;
- (bool)_enumeratingAllNetworkInterfacesEnabled;
- (bool)_fileSystemAccessEnabled;
- (id)_fixedPitchFontFamily;
- (bool)_fullScreenEnabled;
- (bool)_getUserMediaRequiresFocus;
- (bool)_hiddenPageDOMTimerThrottlingAutoIncreases;
- (bool)_hiddenPageDOMTimerThrottlingEnabled;
- (bool)_iceCandidateFilteringEnabled;
- (double)_inactiveMediaCaptureSteamRepromptIntervalInMinutes;
- (double)_interactionRegionInlinePadding;
- (double)_interactionRegionMinimumCornerRadius;
- (bool)_interruptAudioOnPageVisibilityChangeEnabled;
- (bool)_isEnabledForExperimentalFeature:(id)arg1;
- (bool)_isEnabledForFeature:(id)arg1;
- (bool)_isEnabledForInternalDebugFeature:(id)arg1;
- (bool)_isExtensibleSSOEnabled;
- (bool)_isSafeBrowsingEnabled;
- (bool)_isStandalone;
- (bool)_itpDebugModeEnabled;
- (bool)_javaScriptCanAccessClipboard;
- (unsigned long long)_javaScriptRuntimeFlags;
- (bool)_largeImageAsyncDecodingEnabled;
- (bool)_legacyLineLayoutVisualCoverageEnabled;
- (bool)_loadsImagesAutomatically;
- (bool)_logsPageMessagesToSystemConsoleEnabled;
- (bool)_lowPowerVideoAudioBufferSizeEnabled;
- (bool)_managedMediaSourceEnabled;
- (double)_managedMediaSourceHighThreshold;
- (double)_managedMediaSourceLowThreshold;
- (bool)_mediaCaptureRequiresSecureConnection;
- (bool)_mediaDevicesEnabled;
- (double)_mediaPreferredFullscreenWidth;
- (bool)_mediaSessionEnabled;
- (bool)_mediaSourceEnabled;
- (bool)_mockCaptureDevicesEnabled;
- (bool)_mockCaptureDevicesPromptEnabled;
- (bool)_modelDocumentEnabled;
- (bool)_needsInAppBrowserPrivacyQuirks;
- (bool)_needsSiteSpecificQuirks;
- (bool)_notificationEventEnabled;
- (bool)_notificationsEnabled;
- (bool)_offlineApplicationCacheIsEnabled;
- (bool)_pageVisibilityBasedProcessSuppressionEnabled;
- (bool)_peerConnectionEnabled;
- (long long)_pitchCorrectionAlgorithm;
- (bool)_privateClickMeasurementDebugModeEnabled;
- (bool)_privateClickMeasurementEnabled;
- (bool)_punchOutWhiteBackgroundsInDarkMode;
- (bool)_pushAPIEnabled;
- (bool)_remotePlaybackEnabled;
- (bool)_requestAnimationFrameEnabled;
- (bool)_requiresFullscreenToLockScreenOrientation;
- (bool)_requiresPageVisibilityToPlayAudio;
- (bool)_resourceUsageOverlayVisible;
- (bool)_screenCaptureEnabled;
- (bool)_secureContextChecksEnabled;
- (bool)_serviceWorkerEntitlementDisabledForTesting;
- (void)_setAVFoundationEnabled:(bool)arg1;
- (void)_setAcceleratedCompositingEnabled:(bool)arg1;
- (void)_setAcceleratedDrawingEnabled:(bool)arg1;
- (void)_setAccessHandleEnabled:(bool)arg1;
- (void)_setAccessibilityIsolatedTreeEnabled:(bool)arg1;
- (void)_setAllowFileAccessFromFileURLs:(bool)arg1;
- (void)_setAllowsPictureInPictureMediaPlayback:(bool)arg1;
- (void)_setAnimatedImageAsyncDecodingEnabled:(bool)arg1;
- (void)_setAppBadgeEnabled:(bool)arg1;
- (void)_setApplePayCapabilityDisclosureAllowed:(bool)arg1;
- (void)_setClientBadgeEnabled:(bool)arg1;
- (void)_setColorFilterEnabled:(bool)arg1;
- (void)_setCompositingBordersVisible:(bool)arg1;
- (void)_setCompositingRepaintCountersVisible:(bool)arg1;
- (void)_setContentChangeObserverEnabled:(bool)arg1;
- (void)_setDOMPasteAllowed:(bool)arg1;
- (void)_setDefaultFixedPitchFontSize:(unsigned long long)arg1;
- (void)_setDefaultFontSize:(unsigned long long)arg1;
- (void)_setDeveloperExtrasEnabled:(bool)arg1;
- (void)_setDeviceOrientationEventEnabled:(bool)arg1;
- (void)_setDiagnosticLoggingEnabled:(bool)arg1;
- (void)_setDisplayListDrawingEnabled:(bool)arg1;
- (void)_setEditableLinkBehavior:(long long)arg1;
- (void)_setEnabled:(bool)arg1 forExperimentalFeature:(id)arg2;
- (void)_setEnabled:(bool)arg1 forFeature:(id)arg2;
- (void)_setEnabled:(bool)arg1 forInternalDebugFeature:(id)arg2;
- (void)_setEnumeratingAllNetworkInterfacesEnabled:(bool)arg1;
- (void)_setExtensibleSSOEnabled:(bool)arg1;
- (void)_setFileSystemAccessEnabled:(bool)arg1;
- (void)_setFixedPitchFontFamily:(id)arg1;
- (void)_setFullScreenEnabled:(bool)arg1;
- (void)_setGetUserMediaRequiresFocus:(bool)arg1;
- (void)_setHiddenPageDOMTimerThrottlingAutoIncreases:(bool)arg1;
- (void)_setHiddenPageDOMTimerThrottlingEnabled:(bool)arg1;
- (void)_setICECandidateFilteringEnabled:(bool)arg1;
- (void)_setInactiveMediaCaptureSteamRepromptIntervalInMinutes:(double)arg1;
- (void)_setInteractionRegionInlinePadding:(double)arg1;
- (void)_setInteractionRegionMinimumCornerRadius:(double)arg1;
- (void)_setInterruptAudioOnPageVisibilityChangeEnabled:(bool)arg1;
- (void)_setItpDebugModeEnabled:(bool)arg1;
- (void)_setJavaScriptCanAccessClipboard:(bool)arg1;
- (void)_setJavaScriptRuntimeFlags:(unsigned long long)arg1;
- (void)_setLargeImageAsyncDecodingEnabled:(bool)arg1;
- (void)_setLegacyLineLayoutVisualCoverageEnabled:(bool)arg1;
- (void)_setLoadsImagesAutomatically:(bool)arg1;
- (void)_setLogsPageMessagesToSystemConsoleEnabled:(bool)arg1;
- (void)_setLowPowerVideoAudioBufferSizeEnabled:(bool)arg1;
- (void)_setManagedMediaSourceEnabled:(bool)arg1;
- (void)_setManagedMediaSourceHighThreshold:(double)arg1;
- (void)_setManagedMediaSourceLowThreshold:(double)arg1;
- (void)_setMediaCaptureRequiresSecureConnection:(bool)arg1;
- (void)_setMediaDevicesEnabled:(bool)arg1;
- (void)_setMediaPreferredFullscreenWidth:(double)arg1;
- (void)_setMediaSessionEnabled:(bool)arg1;
- (void)_setMediaSourceEnabled:(bool)arg1;
- (void)_setMockCaptureDevicesEnabled:(bool)arg1;
- (void)_setMockCaptureDevicesPromptEnabled:(bool)arg1;
- (void)_setModelDocumentEnabled:(bool)arg1;
- (void)_setNeedsInAppBrowserPrivacyQuirks:(bool)arg1;
- (void)_setNeedsSiteSpecificQuirks:(bool)arg1;
- (void)_setNotificationEventEnabled:(bool)arg1;
- (void)_setNotificationsEnabled:(bool)arg1;
- (void)_setOfflineApplicationCacheIsEnabled:(bool)arg1;
- (void)_setPageVisibilityBasedProcessSuppressionEnabled:(bool)arg1;
- (void)_setPeerConnectionEnabled:(bool)arg1;
- (void)_setPitchCorrectionAlgorithm:(long long)arg1;
- (void)_setPrivateClickMeasurementDebugModeEnabled:(bool)arg1;
- (void)_setPrivateClickMeasurementEnabled:(bool)arg1;
- (void)_setPunchOutWhiteBackgroundsInDarkMode:(bool)arg1;
- (void)_setPushAPIEnabled:(bool)arg1;
- (void)_setRemotePlaybackEnabled:(bool)arg1;
- (void)_setRequestAnimationFrameEnabled:(bool)arg1;
- (void)_setRequiresFullscreenToLockScreenOrientation:(bool)arg1;
- (void)_setRequiresPageVisibilityToPlayAudio:(bool)arg1;
- (void)_setResourceUsageOverlayVisible:(bool)arg1;
- (void)_setSafeBrowsingEnabled:(bool)arg1;
- (void)_setScreenCaptureEnabled:(bool)arg1;
- (void)_setSecureContextChecksEnabled:(bool)arg1;
- (void)_setServiceWorkerEntitlementDisabledForTesting:(bool)arg1;
- (void)_setShouldAllowDesignSystemUIFonts:(bool)arg1;
- (void)_setShouldAllowUserInstalledFonts:(bool)arg1;
- (void)_setShouldEnableTextAutosizingBoost:(bool)arg1;
- (void)_setShouldIgnoreMetaViewport:(bool)arg1;
- (void)_setShouldSuppressKeyboardInputDuringProvisionalNavigation:(bool)arg1;
- (void)_setSpeechRecognitionEnabled:(bool)arg1;
- (void)_setStandalone:(bool)arg1;
- (void)_setStorageAPIEnabled:(bool)arg1;
- (void)_setStorageBlockingPolicy:(long long)arg1;
- (void)_setSubpixelAntialiasedLayerTextEnabled:(bool)arg1;
- (void)_setTelephoneNumberDetectionIsEnabled:(bool)arg1;
- (void)_setTextAutosizingEnabled:(bool)arg1;
- (void)_setTiledScrollingIndicatorVisible:(bool)arg1;
- (void)_setVerifyWindowOpenUserGestureFromUIProcess:(bool)arg1;
- (void)_setVideoQualityIncludesDisplayCompositingEnabled:(bool)arg1;
- (void)_setVisibleDebugOverlayRegions:(unsigned long long)arg1;
- (void)_setWebAudioEnabled:(bool)arg1;
- (bool)_shouldAllowDesignSystemUIFonts;
- (bool)_shouldAllowUserInstalledFonts;
- (bool)_shouldEnableTextAutosizingBoost;
- (bool)_shouldIgnoreMetaViewport;
- (bool)_shouldSuppressKeyboardInputDuringProvisionalNavigation;
- (bool)_speechRecognitionEnabled;
- (bool)_storageAPIEnabled;
- (long long)_storageBlockingPolicy;
- (bool)_subpixelAntialiasedLayerTextEnabled;
- (bool)_telephoneNumberDetectionIsEnabled;
- (bool)_textAutosizingEnabled;
- (bool)_tiledScrollingIndicatorVisible;
- (bool)_verifyWindowOpenUserGestureFromUIProcess;
- (bool)_videoQualityIncludesDisplayCompositingEnabled;
- (unsigned long long)_visibleDebugOverlayRegions;
- (bool)_webAudioEnabled;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (long long)inactiveSchedulingPolicy;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (bool)isElementFullscreenEnabled;
- (bool)isFraudulentWebsiteWarningEnabled;
- (bool)isSiteSpecificQuirksModeEnabled;
- (bool)isTextInteractionEnabled;
- (bool)javaScriptCanOpenWindowsAutomatically;
- (bool)javaScriptEnabled;
- (double)minimumFontSize;
- (void)setElementFullscreenEnabled:(bool)arg1;
- (void)setFraudulentWebsiteWarningEnabled:(bool)arg1;
- (void)setInactiveSchedulingPolicy:(long long)arg1;
- (void)setJavaScriptCanOpenWindowsAutomatically:(bool)arg1;
- (void)setJavaScriptEnabled:(bool)arg1;
- (void)setMinimumFontSize:(double)arg1;
- (void)setShouldPrintBackgrounds:(bool)arg1;
- (void)setSiteSpecificQuirksModeEnabled:(bool)arg1;
- (void)setTextInteractionEnabled:(bool)arg1;
- (bool)shouldPrintBackgrounds;

// Image: /System/Library/Frameworks/SafariServices.framework/SafariServices

- (void)sf_applySafariStorageBlockingPolicy;

@end
