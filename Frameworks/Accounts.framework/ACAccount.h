
@interface ACAccount : NSObject <ACProtobufCoding, AMSHashable, HMDACAccount, NSCoding, NSCopying, NSSecureCoding> {
    bool  _accountAccessAvailable;
    NSString * _accountDescription;
    id /* block */  _accountPropertiesTransformer;
    ACAccountStore * _accountStore;
    ACAccountType * _accountType;
    bool  _active;
    bool  _authenticated;
    NSString * _authenticationType;
    NSArray * _childAccounts;
    NSString * _clientToken;
    ACAccountCredential * _credential;
    NSString * _credentialType;
    <NSObject> * _credentialsDidChangeObserver;
    NSMutableDictionary * _dataclassProperties;
    NSDate * _date;
    NSMutableSet * _dirtyAccountProperties;
    NSMutableSet * _dirtyDataclassProperties;
    NSMutableSet * _dirtyProperties;
    bool  _haveCheckedForChildAccounts;
    bool  _haveCheckedForClientToken;
    NSString * _identifier;
    NSDate * _lastCredentialRenewalRejectionDate;
    NSString * _modificationID;
    NSURL * _objectID;
    NSString * _owningBundleID;
    ACAccount * _parentAccount;
    NSMutableDictionary * _properties;
    bool  _supportsAuthentication;
    ACMutableTrackedSet * _trackedEnabledDataclasses;
    ACMutableTrackedSet * _trackedProvisionedDataclasses;
    NSString * _username;
    bool  _visible;
    bool  _warmingUp;
    bool  _wasEnabledDataclassesReset;
    bool  _wasProvisionedDataclassesReset;
}

@property (setter=_aa_setBenefactorAccount:, nonatomic) bool _aa_benefactorAccount;
@property (nonatomic, copy) NSString *_cn_altDSID;
@property (nonatomic, readonly, copy) NSString *_cn_appleAccountAppleID;
@property (nonatomic, readonly, copy) NSArray *_cn_appleAccountAppleIDAliases;
@property (nonatomic, copy) NSString *_cn_appleID;
@property (nonatomic, copy) NSNumber *_cn_dsid;
@property (nonatomic, copy) NSString *_cn_firstName;
@property (nonatomic, readonly) bool _cn_isAppleDisplayAccount;
@property (nonatomic, readonly) bool _cn_isCardDAV;
@property (nonatomic, readonly) bool _cn_isChildDelegateAccount;
@property (nonatomic, readonly) bool _cn_isLDAP;
@property (nonatomic, readonly) bool _cn_isManaged;
@property (nonatomic, readonly) bool _cn_isPrimaryAccount;
@property (nonatomic, readonly) bool _cn_isPrimaryiCloudAccount;
@property (nonatomic, copy) NSString *_cn_lastName;
@property (nonatomic, copy) NSString *_cn_principalPath;
@property (nonatomic, readonly) NSNumber *_ss_DSID;
@property (nonatomic, readonly) NSString *_ss_altDSID;
@property (nonatomic, readonly) NSString *_ss_hashedDescription;
@property (nonatomic, readonly) bool _ss_isAppleAuthenticationAccount;
@property (nonatomic, readonly) bool _ss_isIDMSAccount;
@property (nonatomic, readonly) bool _ss_isLocalAccount;
@property (nonatomic, readonly) bool _ss_isiCloudAccount;
@property (nonatomic, readonly) bool _ss_isiTunesAccount;
@property (setter=_ss_setSecureToken:, nonatomic, copy) NSString *_ss_secureToken;
@property (setter=aa_setAccountClass:, nonatomic, copy) NSString *aa_accountClass;
@property (nonatomic, readonly) NSDictionary *aa_accountFirstDisplayAlert;
@property (nonatomic, readonly) NSDictionary *aa_accountFooterButton;
@property (nonatomic, readonly) NSString *aa_accountFooterText;
@property (nonatomic, readonly) NSString *aa_accountTypeString;
@property (nonatomic, readonly) NSString *aa_altDSID;
@property (readonly) NSString *aa_altDSID;
@property (nonatomic, readonly) NSArray *aa_appleIDAliases;
@property (nonatomic, readonly) NSString *aa_appleId;
@property (setter=aa_setAuthToken:, nonatomic, copy) NSString *aa_authToken;
@property (nonatomic, readonly) ACAccount *aa_childMailAccount;
@property (nonatomic, readonly) ACAccount *aa_cloudKitAccount;
@property (nonatomic, readonly) NSString *aa_displayName;
@property (setter=aa_setFirstName:, nonatomic, copy) NSString *aa_firstName;
@property (nonatomic, readonly) ACAccount *aa_fmfAccount;
@property (nonatomic, readonly) ACAccount *aa_fmipAccount;
@property (nonatomic, readonly) NSString *aa_fmipToken;
@property (nonatomic, readonly) NSString *aa_formattedUsername;
@property (nonatomic, readonly, copy) NSString *aa_fullName;
@property (nonatomic, readonly) bool aa_hasOptionalTerms;
@property (nonatomic, readonly) bool aa_isAuthKitAccount;
@property (setter=aa_setCloudDocsMigrationComplete:, nonatomic) bool aa_isCloudDocsMigrationComplete;
@property (setter=aa_setIsCloudSubscriber:, nonatomic) bool aa_isCloudSubscriber;
@property (nonatomic, readonly) bool aa_isFamilyEligible;
@property (nonatomic, readonly) bool aa_isManagedAppleID;
@property (nonatomic, readonly) bool aa_isNotesMigrated;
@property (setter=aa_setPrimaryAccount:, nonatomic) bool aa_isPrimaryAccount;
@property (setter=aa_setPrimaryEmailVerified:, nonatomic) bool aa_isPrimaryEmailVerified;
@property (nonatomic, readonly) bool aa_isRemindersAutoMigratableToCK;
@property (nonatomic, readonly) bool aa_isRemindersMigrated;
@property (nonatomic, readonly) bool aa_isRemotelyManaged;
@property (nonatomic, readonly) bool aa_isSandboxAccount;
@property (nonatomic, readonly) bool aa_isSuspended;
@property (setter=aa_setSyncedAccount:, nonatomic) bool aa_isSyncedAccount;
@property (nonatomic, readonly) bool aa_isUnremovableRemotelyManagedAccount;
@property (setter=aa_setUsesCloudDocs:, nonatomic) bool aa_isUsingCloudDocs;
@property (nonatomic, readonly) bool aa_isUsingiCloud;
@property (nonatomic, readonly) NSDictionary *aa_lastAgreedTermsInfo;
@property (setter=aa_setLastKnownQuota:, nonatomic, copy) NSNumber *aa_lastKnownQuota;
@property (setter=aa_setLastName:, nonatomic, copy) NSString *aa_lastName;
@property (nonatomic, readonly) NSString *aa_mapsToken;
@property (nonatomic, readonly) NSString *aa_mdmServerToken;
@property (setter=aa_setMiddleName:, nonatomic, copy) NSString *aa_middleName;
@property (nonatomic, readonly) bool aa_needsEmailConfiguration;
@property (nonatomic, readonly) bool aa_needsRegistration;
@property (setter=aa_setNeedsToVerifyTerms:, nonatomic) bool aa_needsToVerifyTerms;
@property (nonatomic, readonly) NSString *aa_normalizedPersonID;
@property (setter=aa_setPassword:, nonatomic, copy) NSString *aa_password;
@property (nonatomic, readonly) NSString *aa_personID;
@property (readonly) NSString *aa_personID;
@property (nonatomic, readonly) NSString *aa_primaryEmail;
@property (nonatomic, readonly) NSString *aa_protocolVersion;
@property (nonatomic, readonly, copy) AARegionInfo *aa_regionInfo;
@property (setter=aa_setRepairState:, nonatomic) NSNumber *aa_repairState;
@property (nonatomic, readonly) bool aa_serviceUnavailable;
@property (nonatomic, readonly) NSDictionary *aa_serviceUnavailableInfo;
@property (nonatomic, readonly, copy) AASuspensionInfo *aa_suspensionInfo;
@property (nonatomic, readonly) NSString *aa_syncStoreIdentifier;
@property (nonatomic, copy) NSString *accountDescription;
@property (nonatomic, readonly) NSDictionary *accountProperties;
@property (copy) id /* block */ accountPropertiesTransformer;
@property (nonatomic, readonly) ACAccountStore *accountStore;
@property (nonatomic, retain) ACAccountType *accountType;
@property (getter=isActive, nonatomic) bool active;
@property (nonatomic, readonly) NSNumber *ams_DSID;
@property (getter=ams_isHSA2, nonatomic, readonly) bool ams_HSA2;
@property (getter=ams_isIDMSAccount, nonatomic, readonly) bool ams_IDMSAccount;
@property (nonatomic, readonly) AMSAccountIdentity *ams_accountID;
@property (nonatomic, readonly) NSDictionary *ams_allStorefronts;
@property (nonatomic, readonly) NSString *ams_altDSID;
@property (nonatomic, readonly) NSArray *ams_automaticDownloadKinds;
@property (setter=ams_setBiometricsState:, nonatomic) long long ams_biometricsState;
@property (nonatomic, readonly) NSArray *ams_cookies;
@property (nonatomic, readonly) NSString *ams_creditsString;
@property (nonatomic, readonly) NSString *ams_dataMigrationStoragePath;
@property (getter=ams_isDemoAccount, nonatomic, readonly) bool ams_demoAccount;
@property (getter=ams_isDemoAccount, setter=ams_setDemoAccount:, nonatomic) bool ams_demoAccount;
@property (nonatomic, readonly) NSString *ams_firstName;
@property (setter=ams_setFreePasswordPromptSetting:, nonatomic) unsigned long long ams_freePasswordPromptSetting;
@property (nonatomic, readonly) NSString *ams_fullName;
@property (getter=ams_isiCloudAccount, nonatomic, readonly) bool ams_iCloudAccount;
@property (getter=ams_isiTunesAccount, nonatomic, readonly) bool ams_iTunesAccount;
@property (nonatomic, readonly) NSNumber *ams_isBundleOwner;
@property (getter=ams_isBundleOwner, setter=ams_setIsBundleOwner:, nonatomic, retain) NSNumber *ams_isBundleOwner;
@property (getter=ams_isLocalOrSandboxAccount, nonatomic, readonly) bool ams_isLocalOrSandboxAccount;
@property (setter=ams_setLastAuthenticationCredentialSource:, nonatomic) unsigned long long ams_lastAuthenticationCredentialSource;
@property (nonatomic, readonly) NSString *ams_lastName;
@property (setter=ams_setLastRestrictedRegionSyncTimestamp:, nonatomic, retain) NSNumber *ams_lastRestrictedRegionSyncTimestamp;
@property (getter=ams_isLocalAccount, nonatomic, readonly) bool ams_localAccount;
@property (getter=ams_isManagedAppleID, nonatomic, readonly) bool ams_managedAppleID;
@property (setter=ams_setMergedPrivacyAcknowledgement:, nonatomic) bool ams_mergedPrivacyAcknowledgement;
@property (setter=ams_setPaidPasswordPromptSetting:, nonatomic) unsigned long long ams_paidPasswordPromptSetting;
@property (nonatomic, readonly) NSDictionary *ams_privacyAcknowledgement;
@property (getter=ams_isPrivateListeningEnabled, nonatomic, readonly) bool ams_privateListeningEnabled;
@property (nonatomic, readonly) NSDictionary *ams_pushRegistrationThrottleMap;
@property (getter=ams_isSandboxAccount, nonatomic, readonly) bool ams_sandboxAccount;
@property (nonatomic, readonly) unsigned long long ams_securityLevel;
@property (nonatomic, readonly) NSString *ams_storefront;
@property (getter=isAuthenticated, nonatomic) bool authenticated;
@property (nonatomic, readonly) NSString *authenticationType;
@property (readonly) NSString *calAccountFullName;
@property bool calAttachmentDownloadHasTakenPlace;
@property (readonly) NSArray *calCalDAVChildAccounts;
@property (retain) NSString *calCollectionSetName;
@property (readonly) NSURL *calExchangeWebServicesURL;
@property (readonly) NSURL *calExternalExchangeWebServicesURL;
@property (copy) NSURL *calExternalURL;
@property (retain) NSString *calHostname;
@property (copy) NSString *calIdentityEmailAddress;
@property (readonly) bool calIsAutoRefreshed;
@property (readonly) bool calIsCalDAVAccount;
@property (readonly) bool calIsDirty;
@property (readonly) bool calIsEnabled;
@property bool calIsEnabledForCalendar;
@property bool calIsEnabledForReminders;
@property (readonly) bool calIsExchangeAccount;
@property (readonly) bool calIsGenericCalDAVAccount;
@property (readonly) bool calIsMissingParentAccount;
@property (readonly) bool calIsRestrictedForCalendar;
@property (readonly) bool calIsiCloudCalDAVAccount;
@property bool calLocalDataMigrationHasTakenPlace;
@property (copy) NSString *calMainPrincipalUID;
@property (copy) NSNumber *calPort;
@property (readonly, copy) NSDictionary *calPrincipals;
@property bool calPushDisabled;
@property long long calRefreshInterval;
@property (copy) NSString *calRootFolderID;
@property bool calServerSyncHasTakenPlace;
@property (copy) NSURL *calServerURL;
@property bool calSkipCredentialVerification;
@property (readonly) bool calSupportsPush;
@property bool calUseExternalURL;
@property bool calUseKerberos;
@property bool calUseSSL;
@property (copy) NSString *calWebServicesRecordGUID;
@property (nonatomic, readonly) NSString *cal_personaIdentifier;
@property (nonatomic, readonly) NSArray *childAccounts;
@property (nonatomic, readonly) NSDictionary *ck_accountProperties;
@property (nonatomic, readonly) ACAccount *ck_cloudKitAccount;
@property (nonatomic, readonly) NSDictionary *ck_dataclassProperties;
@property (nonatomic, readonly) NSString *ck_identifier;
@property (nonatomic, readonly) NSString *clientToken;
@property (nonatomic, retain) NSDictionary *communicationServiceRules;
@property (nonatomic, retain) NSDate *creationDate;
@property (nonatomic, retain) ACAccountCredential *credential;
@property (nonatomic, readonly) NSString *credentialType;
@property (nonatomic, readonly) NSDictionary *dataclassProperties;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (getter=isDirty, nonatomic, readonly) bool dirty;
@property (nonatomic, readonly) NSSet *dirtyAccountProperties;
@property (nonatomic, readonly) NSSet *dirtyDataclassProperties;
@property (nonatomic, readonly) NSSet *dirtyProperties;
@property (nonatomic, readonly) ACAccount *displayAccount;
@property (setter=dmc_setDSID:, copy) NSNumber *dmc_DSID;
@property (setter=dmc_setAccountScheme:, copy) NSString *dmc_accountScheme;
@property (setter=dmc_setAltDSID:, copy) NSString *dmc_altDSID;
@property (setter=dmc_setBearerReauthParams:, copy) NSDictionary *dmc_bearerReauthParams;
@property (setter=dmc_setBearerReauthURL:, copy) NSString *dmc_bearerReauthURL;
@property (setter=dmc_setBearerToken:, copy) NSString *dmc_bearerToken;
@property (setter=dmc_setEnrollmentMethod:) unsigned long long dmc_enrollmentMethod;
@property (setter=dmc_setEnrollmentToken:, copy) NSString *dmc_enrollmentToken;
@property (setter=dmc_setEnrollmentType:) unsigned long long dmc_enrollmentType;
@property (setter=dmc_setEnrollmentURL:, copy) NSString *dmc_enrollmentURL;
@property (setter=dmc_setManagementProfileIdentifier:, copy) NSString *dmc_managementProfileIdentifier;
@property (getter=dmc_isManagementProfileLocked, setter=dmc_setManagementProfileLocked:) bool dmc_managementProfileLocked;
@property (readonly) NSString *dmc_mdmServerToken;
@property (setter=dmc_setPersonaIdentifier:, copy) NSString *dmc_personaIdentifier;
@property (readonly) ACAccount *dmc_remoteManagementAccount;
@property (setter=dmc_setRemoteManagingAccountIdentifier:, copy) NSString *dmc_remoteManagingAccountIdentifier;
@property (setter=dmc_setSignInUserIdentifier:, copy) NSString *dmc_signInUserIdentifier;
@property (nonatomic, readonly, copy) NSSet *ds_accountEmails;
@property (nonatomic, retain) NSMutableSet *enabledDataclasses;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSString *hashedDescription;
@property (readonly, copy) NSString *hmd_aa_altDSID;
@property (readonly, copy) NSString *hmd_ams_altDSID;
@property (setter=ic_setDSID:, nonatomic, copy) NSNumber *ic_DSID;
@property (getter=ic_isActiveLockerAccount, setter=ic_setActiveLockerAccount:, nonatomic) bool ic_activeLockerAccount;
@property (nonatomic, readonly, copy) NSArray *ic_activeMediaTypes;
@property (setter=ic_setAgeVerificationExpirationDate:, nonatomic, copy) NSDate *ic_ageVerificationExpirationDate;
@property (setter=ic_setAltDSID:, nonatomic, copy) NSString *ic_altDSID;
@property (setter=ic_setAutomaticDownloadKinds:, nonatomic, copy) NSSet *ic_automaticDownloadKinds;
@property (getter=ic_isCloudBackupEnabled, nonatomic, readonly) bool ic_cloudBackupEnabled;
@property (setter=ic_setCloudLibraryStateReason:, nonatomic, copy) NSDictionary *ic_cloudLibraryStateReason;
@property (nonatomic, readonly, copy) NSString *ic_description;
@property (setter=ic_setFirstName:, nonatomic, copy) NSString *ic_firstName;
@property (nonatomic, readonly, copy) NSArray *ic_homeUserIdentifiers;
@property (nonatomic, readonly) bool ic_isITunesAccount;
@property (setter=ic_setLastName:, nonatomic, copy) NSString *ic_lastName;
@property (getter=ic_isLocalAccount, nonatomic, readonly) bool ic_localAccount;
@property (getter=ic_isManageable, nonatomic, readonly) bool ic_manageable;
@property (getter=ic_isManagedAppleID, setter=ic_setManagedAppleID:, nonatomic) bool ic_managedAppleID;
@property (setter=ic_setMergeWithCloudLibraryPreference:, nonatomic, copy) NSNumber *ic_mergeWithCloudLibraryPreference;
@property (nonatomic, readonly, copy) NSDictionary *ic_privacyAcknowledgementVersions;
@property (setter=ic_setPrivateListeningEnabled:, nonatomic, copy) NSNumber *ic_privateListeningEnabled;
@property (setter=ic_setPrivateListeningEnabledForHomeUsers:, nonatomic, copy) NSDictionary *ic_privateListeningEnabledForHomeUsers;
@property (getter=ic_isSandboxed, setter=ic_setSandboxed:, nonatomic) bool ic_sandboxed;
@property (setter=ic_setStorefront:, nonatomic, copy) NSString *ic_storefront;
@property (getter=ic_isSubscriptionStatusEnabled, setter=ic_setSubscriptionStatusEnabled:, nonatomic) bool ic_subscriptionStatusEnabled;
@property (setter=ic_setUniqueIdentifier:, nonatomic, copy) NSNumber *ic_uniqueIdentifier;
@property (nonatomic, readonly) NSString *identifier;
@property (nonatomic, readonly) ACAccountCredential *internalCredential;
@property (nonatomic, retain) NSDate *lastCredentialRenewalRejectionDate;
@property (retain) NSString *managingOwnerIdentifier;
@property (retain) NSString *managingSourceName;
@property (nonatomic, retain) NSString *mcAccountIdentifier;
@property (nonatomic, retain) NSString *mcConfigurationProfileIdentifier;
@property (nonatomic, retain) NSNumber *mcEASAccountEnableNotes;
@property (nonatomic, retain) NSNumber *mcEnableCalendarsUserOverridable;
@property (nonatomic, retain) NSNumber *mcEnableContactsUserOverridable;
@property (nonatomic, retain) NSNumber *mcEnableMailUserOverridable;
@property (nonatomic, retain) NSNumber *mcEnableNotesUserOverridable;
@property (nonatomic, retain) NSNumber *mcEnableRemindersUserOverridable;
@property (nonatomic, retain) NSString *mcPayloadUUID;
@property (nonatomic, retain) NSString *mcProfileUUID;
@property (nonatomic, readonly) NSDictionary *messagePayload;
@property (nonatomic, readonly) NSString *modificationID;
@property (nonatomic, readonly) unsigned long long notifyGenerationID;
@property (nonatomic, readonly) NSURL *objectID;
@property (nonatomic, retain) ACAccount *parentAccount;
@property (nonatomic, readonly) NSString *parentAccountIdentifier;
@property (nonatomic, retain) NSMutableSet *provisionedDataclasses;
@property (setter=rm_setDSID:, copy) NSNumber *rm_DSID;
@property (setter=rm_setAccountScheme:, copy) NSString *rm_accountScheme;
@property (setter=rm_setAltDSID:, copy) NSString *rm_altDSID;
@property (setter=rm_setBearerToken:, copy) NSString *rm_bearerToken;
@property (setter=rm_setEnrollmentToken:, copy) NSString *rm_enrollmentToken;
@property (setter=rm_setEnrollmentURL:, copy) NSString *rm_enrollmentURL;
@property (setter=rm_setmanagedByOlympus:) bool rm_managedByOlympus;
@property (setter=rm_setManagementSourceIdentifier:, copy) NSString *rm_managementSourceIdentifier;
@property (setter=rm_setPersonaIdentifier:, copy) NSString *rm_personaIdentifier;
@property (setter=rm_setRemoteManagingAccountIdentifier:, copy) NSString *rm_remoteManagingAccountIdentifier;
@property (nonatomic, readonly) NSString *shortDebugName;
@property (readonly) Class superclass;
@property (nonatomic) bool supportsAuthentication;
@property (nonatomic, readonly) bool supportsPush;
@property (nonatomic, copy) ACTrackedSet *trackedEnabledDataclasses;
@property (nonatomic, copy) ACTrackedSet *trackedProvisionedDataclasses;
@property (nonatomic, readonly) NSString *userFullName;
@property (readonly) NSString *username;
@property (nonatomic, copy) NSString *username;
@property (getter=isVisible, nonatomic) bool visible;
@property (getter=isWarmingUp, nonatomic) bool warmingUp;
@property (nonatomic, readonly) bool wasEnabledDataclassesReset;
@property (nonatomic, readonly) bool wasProvisionedDataclassesReset;

// Image: /System/Library/Frameworks/Accounts.framework/Accounts

+ (id)keypathsRequiredForInitialization;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (void)_applyDirtyStateFromAccount:(id)arg1;
- (void)_clearCachedChildAccounts;
- (void)_clearCachedCredentials;
- (void)_clearCachedTrackedSets;
- (void)_clearDirtyProperties;
- (id)_encodeProtobuf;
- (id)_encodeProtobufData;
- (id)_initWithProtobuf:(id)arg1;
- (id)_initWithProtobufData:(id)arg1;
- (void)_installCredentialsChangedObserver;
- (bool)_isDifferentFrom:(id)arg1;
- (void)_loadAllCachedProperties;
- (void)_markAccountPropertyDirty:(id)arg1;
- (void)_markCredentialDirty;
- (void)_markDataclassPropertyDirty:(id)arg1;
- (void)_markPropertyDirty:(id)arg1;
- (void)_resetParentAccount:(id)arg1;
- (void)_setAccountStore:(id)arg1;
- (void)_setModID:(id)arg1;
- (void)_setObjectID:(id)arg1;
- (void)_unsafe_markAccountPropertyDirty:(id)arg1;
- (void)_unsafe_markDataclassPropertyDirty:(id)arg1;
- (void)_unsafe_markPropertyDirty:(id)arg1;
- (bool)_useParentForCredentials;
- (id)accountByCleaningThirdPartyTransformations;
- (id)accountDescription;
- (id)accountProperties;
- (id /* block */)accountPropertiesTransformer;
- (id)accountPropertyForKey:(id)arg1;
- (id)accountStore;
- (id)accountType;
- (bool)addClientToken:(id)arg1;
- (bool)authenticated;
- (id)authenticationType;
- (id)childAccounts;
- (id)childAccountsWithAccountTypeIdentifier:(id)arg1;
- (id)childCardDAVAccountIdentifier;
- (id)clientToken;
- (struct __SecIdentity { }*)copySecIdentity;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (bool)correctPersonaScopedForAccount;
- (id)creationDate;
- (id)credential;
- (id)credentialType;
- (id)credentialWithError:(id*)arg1;
- (void)credentialsChanged:(id)arg1;
- (id)dataclassProperties;
- (void)dealloc;
- (id)defaultAutodiscoverDomainForChildType:(id)arg1;
- (id)description;
- (id)dirtyAccountProperties;
- (id)dirtyDataclassProperties;
- (id)dirtyProperties;
- (id)displayAccount;
- (id)enabledDataclasses;
- (void)encodeWithCoder:(id)arg1;
- (id)fullDescription;
- (id)identifier;
- (id)init;
- (id)initWithAccountType:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithManagedAccount:(id)arg1;
- (id)initWithManagedAccount:(id)arg1 accountStore:(id)arg2;
- (id)internalCredential;
- (bool)isActive;
- (bool)isAuthenticated;
- (bool)isDataSeparatedAccount;
- (bool)isDirty;
- (bool)isEnabledForDataclass:(id)arg1;
- (bool)isEnabledToSyncDataclass:(id)arg1;
- (bool)isPropertyDirty:(id)arg1;
- (bool)isProvisionedForDataclass:(id)arg1;
- (bool)isVisible;
- (bool)isWarmingUp;
- (id)lastCredentialRenewalRejectionDate;
- (id)managingOwnerIdentifier;
- (id)managingSourceName;
- (void)markAllPropertiesDirty;
- (id)modificationID;
- (unsigned long long)notifyGenerationID;
- (id)objectForKeyedSubscript:(id)arg1;
- (id)objectID;
- (id)owningBundleID;
- (id)parentAccount;
- (id)parentAccountIdentifier;
- (id)personaIdentifier;
- (id)portableCopy;
- (id)propertiesForDataclass:(id)arg1;
- (id)propertyForKey:(id)arg1;
- (id)provisionedDataclasses;
- (id)qualifiedUsername;
- (void)refresh;
- (void)reload;
- (id)secCertificates;
- (void)setAccountDescription:(id)arg1;
- (void)setAccountProperties:(id)arg1;
- (void)setAccountPropertiesTransformer:(id /* block */)arg1;
- (void)setAccountProperty:(id)arg1 forKey:(id)arg2;
- (void)setAccountType:(id)arg1;
- (void)setActive:(bool)arg1;
- (void)setAuthenticated:(bool)arg1;
- (void)setAuthenticationType:(id)arg1;
- (void)setChildCardDAVAccountIdentifier:(id)arg1;
- (void)setCreationDate:(id)arg1;
- (void)setCredential:(id)arg1;
- (void)setCredentialType:(id)arg1;
- (void)setDataclassProperties:(id)arg1;
- (void)setDirty:(bool)arg1 forProperty:(id)arg2;
- (void)setEnabled:(bool)arg1 forDataclass:(id)arg2;
- (void)setEnabledDataclasses:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setLastCredentialRenewalRejectionDate:(id)arg1;
- (void)setManagingOwnerIdentifier:(id)arg1;
- (void)setManagingSourceName:(id)arg1;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (void)setOwningBundleID:(id)arg1;
- (void)setParentAccount:(id)arg1;
- (void)setProperties:(id)arg1 forDataclass:(id)arg2;
- (void)setProperty:(id)arg1 forKey:(id)arg2;
- (void)setProvisioned:(bool)arg1 forDataclass:(id)arg2;
- (void)setProvisionedDataclasses:(id)arg1;
- (void)setSecCertificates:(id)arg1;
- (void)setSecIdentity:(struct __SecIdentity { }*)arg1;
- (void)setSupportsAuthentication:(bool)arg1;
- (void)setTrackedEnabledDataclasses:(id)arg1;
- (void)setTrackedProvisionedDataclasses:(id)arg1;
- (void)setUsername:(id)arg1;
- (void)setVisible:(bool)arg1;
- (void)setWarmingUp:(bool)arg1;
- (id)shortDebugName;
- (bool)supportsAuthentication;
- (bool)supportsPush;
- (void)takeValuesFromModifiedAccount:(id)arg1;
- (id)trackedEnabledDataclasses;
- (id)trackedProvisionedDataclasses;
- (id)userFullName;
- (id)username;
- (bool)wasEnabledDataclassesReset;
- (bool)wasProvisionedDataclassesReset;

// Image: /System/Library/PrivateFrameworks/AccountsUI.framework/AccountsUI

- (id)displayUsername;

// Image: /System/Library/PrivateFrameworks/AppleAccount.framework/AppleAccount

- (id)_aa_appProvidedContext;
- (bool)_aa_benefactorAccount;
- (void)_aa_clearRawPassword;
- (bool)_aa_isExistingAccount:(id)arg1;
- (id)_aa_primaryAccountUpdaterVersion;
- (id)_aa_rawPassword;
- (void)_aa_setAltDSID:(id)arg1;
- (void)_aa_setAppProvidedContext:(id)arg1;
- (void)_aa_setAppleID:(id)arg1;
- (void)_aa_setBenefactorAccount:(bool)arg1;
- (void)_aa_setDataclassProperties:(id)arg1;
- (void)_aa_setLastAgreedTermsInfo:(id)arg1;
- (void)_aa_setPersonID:(id)arg1;
- (void)_aa_setPrimaryAccountUpdaterVersion:(id)arg1;
- (void)_aa_setPrimaryEmail:(id)arg1;
- (void)_aa_setRawPassword:(id)arg1;
- (bool)_dataclassIsDisabledForProperties:(id)arg1;
- (bool)_hasMailDataclassProperties;
- (id)_registeredBundles;
- (id)aa_accountClass;
- (id)aa_accountFirstDisplayAlert;
- (id)aa_accountFooterButton;
- (id)aa_accountFooterText;
- (id)aa_accountTypeString;
- (id)aa_altDSID;
- (id)aa_appleIDAliases;
- (id)aa_appleId;
- (id)aa_authToken;
- (id)aa_authTokenWithError:(id*)arg1;
- (id)aa_childMailAccount;
- (id)aa_cloudKitAccount;
- (id)aa_displayName;
- (id)aa_firstName;
- (id)aa_fmfAccount;
- (id)aa_fmipAccount;
- (id)aa_fmipToken;
- (id)aa_formattedUsername;
- (id)aa_fullName;
- (bool)aa_hasDuplicateAccount;
- (bool)aa_hasOptionalTerms;
- (id)aa_hsaTokenWithError:(id*)arg1;
- (bool)aa_isAccountClass:(id)arg1;
- (bool)aa_isAuthKitAccount;
- (bool)aa_isCloudDocsMigrationComplete;
- (bool)aa_isCloudSubscriber;
- (bool)aa_isDuplicateAccount:(id)arg1;
- (bool)aa_isFamilyEligible;
- (bool)aa_isManagedAppleID;
- (bool)aa_isNotesMigrated;
- (bool)aa_isPrimaryAccount;
- (bool)aa_isPrimaryEmailVerified;
- (bool)aa_isRemindersAutoMigratableToCK;
- (bool)aa_isRemindersMigrated;
- (bool)aa_isRemotelyManaged;
- (bool)aa_isSandboxAccount;
- (bool)aa_isSuspended;
- (bool)aa_isSyncedAccount;
- (bool)aa_isUnremovableRemotelyManagedAccount;
- (bool)aa_isUsingCloudDocs;
- (bool)aa_isUsingiCloud;
- (id)aa_lastAgreedTermsInfo;
- (id)aa_lastKnownQuota;
- (id)aa_lastName;
- (id)aa_mapsToken;
- (id)aa_mdmServerToken;
- (id)aa_middleName;
- (bool)aa_needsEmailConfiguration;
- (bool)aa_needsRegistration;
- (bool)aa_needsToVerifyTerms;
- (id)aa_normalizedPersonID;
- (id)aa_password;
- (id)aa_personID;
- (id)aa_primaryEmail;
- (id)aa_protocolVersion;
- (id)aa_regionInfo;
- (id)aa_repairState;
- (bool)aa_serverDisabledDataclass:(id)arg1;
- (bool)aa_serviceUnavailable;
- (id)aa_serviceUnavailableInfo;
- (void)aa_setAccountClass:(id)arg1;
- (void)aa_setAuthToken:(id)arg1;
- (void)aa_setCloudDocsMigrationComplete:(bool)arg1;
- (void)aa_setFirstName:(id)arg1;
- (void)aa_setIsCloudSubscriber:(bool)arg1;
- (void)aa_setLastKnownQuota:(id)arg1;
- (void)aa_setLastName:(id)arg1;
- (void)aa_setMDMServerToken:(id)arg1;
- (void)aa_setMapsToken:(id)arg1;
- (void)aa_setMiddleName:(id)arg1;
- (void)aa_setNeedsToVerifyTerms:(bool)arg1;
- (void)aa_setPassword:(id)arg1;
- (void)aa_setPrimaryAccount:(bool)arg1;
- (void)aa_setPrimaryEmailVerified:(bool)arg1;
- (void)aa_setRepairState:(id)arg1;
- (void)aa_setSyncedAccount:(bool)arg1;
- (void)aa_setUseCellular:(bool)arg1 forDataclass:(id)arg2;
- (void)aa_setUsesCloudDocs:(bool)arg1;
- (id)aa_suspensionInfo;
- (id)aa_syncStoreIdentifier;
- (bool)aa_updateAccountClassIfNecessary;
- (bool)aa_updateTokensWithProvisioningResponse:(id)arg1;
- (void)aa_updateWithProvisioningResponse:(id)arg1;
- (bool)aa_useCellularForDataclass:(id)arg1;
- (id)appleID;
- (bool)canRemoveAccount;
- (id)dsid;
- (id)initWithAppleID:(id)arg1 password:(id)arg2;
- (id)normalizedDSID;
- (void)setDSID:(id)arg1;
- (void)storeOriginalUsername;

// Image: /System/Library/PrivateFrameworks/AppleAccountUI.framework/AppleAccountUI

- (id)aaui_compositeName;
- (long long)aaui_compositeNameFormat;

// Image: /System/Library/PrivateFrameworks/AppleIDSSOAuthentication.framework/AppleIDSSOAuthentication

- (id)_expirationCheckedTokenForCredential:(id)arg1;
- (void)_performSilentReauthForAccount:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)aida_alternateDSID;
- (id)aida_deviceProvisioningInfo;
- (id)aida_dsid;
- (id)aida_tokenForService:(id)arg1;
- (void)aida_tokenForService:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)aida_tokenWithExpirationCheck;
- (id)aida_tokenWithExpiryCheckForService:(id)arg1;

// Image: /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices

+ (id)_defaultValueForAccountFlag:(id)arg1;
+ (id)_getSetCookiesForResponse:(id)arg1;
+ (id)_getSetGlobalCookiesForResponse:(id)arg1;
+ (id)_globalCookieAllowlistWithBag:(id)arg1 forURL:(id)arg2;
+ (bool)_isAccountFlagValue:(id)arg1 validForAccountFlag:(id)arg2;
+ (bool)_isAccountFlagWritable:(id)arg1;

- (bool)_accountPropertyBooleanForKey:(id)arg1;
- (id)_accountPropertyForKey:(id)arg1 dataProtectionClass:(unsigned long long)arg2 expectedClasses:(id)arg3 error:(id*)arg4;
- (id)_accountPropertyForKey:(id)arg1 expectedClass:(Class)arg2;
- (id)_accountPropertyForKey:(id)arg1 expectedClassContainedInArray:(Class)arg2;
- (id)_ams_cookieProperties;
- (id)_ams_getAccountFlagsShimmedWithError:(id*)arg1;
- (bool)_ams_migrateCookieProperties:(id)arg1 intoCookies:(id)arg2 error:(id*)arg3;
- (void)_ams_setAccountFlagsShimmed:(id)arg1;
- (bool)_ams_setCookieProperties:(id)arg1;
- (id)_archivedCookieDataAtPath:(id)arg1 error:(id*)arg2;
- (id)_archivedCookiesAtPath:(id)arg1;
- (id)_cookiesMatchingProperties:(id)arg1;
- (id)_hashedActiveState;
- (id)_hashedIdentifiers;
- (id)_hashedMultiUserIdentifiers;
- (id)_hashedStorefront;
- (void)_setAccountProperty:(id)arg1 forKey:(id)arg2 dataProtectionClass:(unsigned long long)arg3 expectedClass:(Class)arg4;
- (void)_setAccountProperty:(id)arg1 forKey:(id)arg2 expectedClass:(Class)arg3;
- (bool)_updateCookiesWithCookiesToAdd:(id)arg1 cookiesToRemove:(id)arg2 error:(id*)arg3;
- (id)ams_DSID;
- (id)ams_accountFlagOverrideValueForAccountFlag:(id)arg1;
- (id)ams_accountFlagValueForAccountFlag:(id)arg1;
- (id)ams_accountFlags;
- (id)ams_accountID;
- (bool)ams_addCookies:(id)arg1;
- (bool)ams_addCookies:(id)arg1 error:(id*)arg2;
- (bool)ams_addCookiesForResponse:(id)arg1;
- (bool)ams_addCookiesForResponse:(id)arg1 error:(id*)arg2;
- (bool)ams_addCookiesForResult:(id)arg1;
- (bool)ams_addGlobalCookiesForResponse:(id)arg1;
- (bool)ams_addGlobalCookiesForResult:(id)arg1;
- (void)ams_addHomeUserIdentifier:(id)arg1;
- (id)ams_allStorefronts;
- (id)ams_altDSID;
- (id)ams_automaticDownloadKinds;
- (long long)ams_biometricsState;
- (bool)ams_bundleOwner;
- (id)ams_cookieDatabasePath;
- (id)ams_cookies;
- (id)ams_cookiesForURL:(id)arg1;
- (id)ams_cookiesForURL:(id)arg1 bag:(id)arg2;
- (id)ams_cookiesForURL:(id)arg1 bag:(id)arg2 cleanupGlobalCookies:(bool)arg3;
- (bool)ams_copyStorefrontFromAccount:(id)arg1;
- (id)ams_creditsString;
- (id)ams_dataMigrationStoragePath;
- (id)ams_delta:(id)arg1;
- (bool)ams_didAgreeToTerms;
- (bool)ams_disableAccountFlagsSync;
- (bool)ams_disablePrivacyAcknowledgementSync;
- (bool)ams_encryptAccountFlags;
- (id)ams_firstName;
- (unsigned long long)ams_freePasswordPromptSetting;
- (id)ams_fullName;
- (id)ams_homeID;
- (id)ams_homeIdentifier;
- (id)ams_homeUserID;
- (id)ams_homeUserIdentifiers;
- (bool)ams_isActiveForMediaType:(id)arg1;
- (id)ams_isBundleOwner;
- (bool)ams_isDemoAccount;
- (bool)ams_isDuplicate:(id)arg1;
- (bool)ams_isHSA2;
- (bool)ams_isIDMSAccount;
- (bool)ams_isInGoodStanding;
- (bool)ams_isInRestrictedRegionWithBag:(id)arg1 shouldWaitForSync:(bool)arg2;
- (id)ams_isInRestrictedRegionWithBag:(id)arg1 waitForSync:(bool)arg2;
- (bool)ams_isLocalAccount;
- (bool)ams_isLocalOrSandboxAccount;
- (bool)ams_isManagedAppleID;
- (bool)ams_isPrivateListeningEnabled;
- (bool)ams_isPrivateListeningEnabledForHomeUserIdentifier:(id)arg1;
- (bool)ams_isSandboxAccount;
- (bool)ams_isValidPayment;
- (bool)ams_isiCloudAccount;
- (bool)ams_isiCloudFamily;
- (bool)ams_isiTunesAccount;
- (unsigned long long)ams_lastAuthenticationCredentialSource;
- (id)ams_lastAuthenticationServerResponse;
- (id)ams_lastName;
- (id)ams_lastRestrictedRegionSyncTimestamp;
- (long long)ams_mergePrivacyAcknowledgement:(id)arg1;
- (bool)ams_mergedPrivacyAcknowledgement;
- (bool)ams_migrateCookiePropertiesWithError:(id*)arg1;
- (unsigned long long)ams_paidPasswordPromptSetting;
- (id)ams_password;
- (bool)ams_postAccountFlagsWithBagContract:(id)arg1;
- (id)ams_privacyAcknowledgement;
- (id)ams_pushRegistrationThrottleMap;
- (id)ams_rawPassword;
- (id)ams_registerSuccessCriteria;
- (bool)ams_removeAllCookies;
- (bool)ams_removeAllCookiesWithError:(id*)arg1;
- (bool)ams_removeCookies:(id)arg1;
- (bool)ams_removeCookies:(id)arg1 error:(id*)arg2;
- (bool)ams_removeCookiesMatchingProperties:(id)arg1;
- (bool)ams_removeCookiesMatchingProperties:(id)arg1 error:(id*)arg2;
- (void)ams_removeHomeUserIdentifier:(id)arg1;
- (bool)ams_requiresAuthKitUpdate;
- (id)ams_secureToken;
- (unsigned long long)ams_securityLevel;
- (bool)ams_setAccountFlagOverrideValue:(id)arg1 forAccountFlag:(id)arg2;
- (void)ams_setAccountFlagValue:(id)arg1 forAccountFlag:(id)arg2;
- (void)ams_setAccountFlags:(id)arg1;
- (void)ams_setActive:(bool)arg1 forMediaType:(id)arg2;
- (void)ams_setAgreedToTerms:(bool)arg1;
- (void)ams_setAltDSID:(id)arg1;
- (void)ams_setBiometricsState:(long long)arg1;
- (void)ams_setCreditsString:(id)arg1;
- (void)ams_setDSID:(id)arg1;
- (void)ams_setDemoAccount:(bool)arg1;
- (void)ams_setDisableAccountFlagsSync:(bool)arg1;
- (void)ams_setDisablePrivacyAcknowledgementSync:(bool)arg1;
- (void)ams_setFirstName:(id)arg1;
- (void)ams_setFreePasswordPromptSetting:(unsigned long long)arg1;
- (void)ams_setHomeID:(id)arg1;
- (void)ams_setHomeIdentifier:(id)arg1;
- (void)ams_setHomeUserID:(id)arg1;
- (void)ams_setInGoodStanding:(bool)arg1;
- (void)ams_setInUse:(bool)arg1;
- (void)ams_setIsBundleOwner:(id)arg1;
- (void)ams_setLastAuthenticationCredentialSource:(unsigned long long)arg1;
- (void)ams_setLastName:(id)arg1;
- (void)ams_setLastRestrictedRegionSyncTimestamp:(id)arg1;
- (void)ams_setManagedAppleID:(bool)arg1;
- (void)ams_setMergedPrivacyAcknowledgement:(bool)arg1;
- (void)ams_setPaidPasswordPromptSetting:(unsigned long long)arg1;
- (void)ams_setPassword:(id)arg1;
- (void)ams_setPrivateListeningEnabled:(bool)arg1 forHomeUserIdentifier:(id)arg2;
- (void)ams_setPushRegistrationThrottleMap:(id)arg1;
- (void)ams_setRawPassword:(id)arg1;
- (void)ams_setRegisterSuccessCriteria:(id)arg1;
- (void)ams_setServerResponse:(id)arg1;
- (void)ams_setStorefront:(id)arg1;
- (void)ams_setStorefront:(id)arg1 forMediaType:(id)arg2;
- (void)ams_setValidPayment:(bool)arg1;
- (void)ams_setValue:(bool)arg1 forAccountFlag:(id)arg2;
- (void)ams_setiCloudFamily:(bool)arg1;
- (id)ams_storefront;
- (id)ams_storefrontForMediaType:(id)arg1;
- (bool)ams_valueForAccountFlag:(id)arg1;
- (id)hashedDescription;

// Image: /System/Library/PrivateFrameworks/AppleMediaServicesUI.framework/AppleMediaServicesUI

- (bool)web_matchAccount:(id)arg1;

// Image: /System/Library/PrivateFrameworks/BookUtility.framework/BookUtility

+ (id)bu_storeAccountWithDSID:(id)arg1;

- (void)bu_removeWithCompletion:(id /* block */)arg1;
- (id)bu_signOut;

// Image: /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation

- (id)_accountPropertiesKeys;
- (id)_calDAVDataclassProperties;
- (id)_createExchangeWebServicesURLFromURL:(id)arg1;
- (bool)_dataclassIsEnabled:(id)arg1;
- (id)_diffAccountPropertiesWithAccount:(id)arg1 firstPropertyOnly:(bool)arg2;
- (id)_diffPropertiesWithAccount:(id)arg1 firstPropertyOnly:(bool)arg2;
- (id)_diffWithAccount:(id)arg1 firstPropertyOnly:(bool)arg2;
- (id)_schemeStringForUseSSL:(bool)arg1;
- (void)_setCalInternalValue:(id)arg1 forAccountPropertyKey:(id)arg2;
- (void)_setIsEnabled:(bool)arg1 forDataclass:(id)arg2;
- (id)_updateURL:(id)arg1 withHost:(id)arg2 port:(id)arg3 useSSL:(id)arg4;
- (bool)_useSSLForSchemeString:(id)arg1;
- (void)addPrincipal:(id)arg1 withUID:(id)arg2;
- (id)calAccountFullName;
- (bool)calAttachmentDownloadHasTakenPlace;
- (id)calCalDAVChildAccounts;
- (id)calCollectionSetName;
- (id)calExchangeWebServicesURL;
- (id)calExternalExchangeWebServicesURL;
- (id)calExternalURL;
- (id)calHostname;
- (id)calIdentityEmailAddress;
- (bool)calIsAutoRefreshed;
- (bool)calIsCalDAVAccount;
- (bool)calIsDirty;
- (bool)calIsEnabled;
- (bool)calIsEnabledForCalendar;
- (bool)calIsEnabledForReminders;
- (bool)calIsExchangeAccount;
- (bool)calIsGenericCalDAVAccount;
- (bool)calIsMissingParentAccount;
- (bool)calIsRestrictedForCalendar;
- (bool)calIsiCloudCalDAVAccount;
- (bool)calLocalDataMigrationHasTakenPlace;
- (id)calMainPrincipalUID;
- (id)calPort;
- (id)calPrincipalURLForMainPrincipal;
- (id)calPrincipalURLForPrincipalWithUID:(id)arg1;
- (id)calPrincipals;
- (bool)calPushDisabled;
- (long long)calRefreshInterval;
- (id)calRootFolderID;
- (bool)calServerSyncHasTakenPlace;
- (id)calServerURL;
- (bool)calSkipCredentialVerification;
- (bool)calSupportsPush;
- (id)calSyncingAccountUsingChildAccounts:(id)arg1;
- (bool)calUseExternalURL;
- (bool)calUseKerberos;
- (bool)calUseSSL;
- (id)calWebServicesRecordGUID;
- (id)cal_personaIdentifier;
- (void)createDictionaryForPrincipalWithUID:(id)arg1;
- (id)diffWithAccount:(id)arg1;
- (id)firstDifferentPropertyWithAccount:(id)arg1;
- (void)removeAccountPropertyForKey:(id)arg1;
- (bool)removePrincipalWithUID:(id)arg1;
- (void)setCalAttachmentDownloadHasTakenPlace:(bool)arg1;
- (void)setCalCollectionSetName:(id)arg1;
- (void)setCalExternalURL:(id)arg1;
- (void)setCalHostname:(id)arg1;
- (void)setCalIdentityEmailAddress:(id)arg1;
- (void)setCalIsEnabledForCalendar:(bool)arg1;
- (void)setCalIsEnabledForReminders:(bool)arg1;
- (void)setCalLocalDataMigrationHasTakenPlace:(bool)arg1;
- (void)setCalMainPrincipalUID:(id)arg1;
- (void)setCalPort:(id)arg1;
- (void)setCalPrincipals:(id)arg1;
- (void)setCalPushDisabled:(bool)arg1;
- (void)setCalRefreshInterval:(long long)arg1;
- (void)setCalRootFolderID:(id)arg1;
- (void)setCalServerSyncHasTakenPlace:(bool)arg1;
- (void)setCalServerURL:(id)arg1;
- (void)setCalSkipCredentialVerification:(bool)arg1;
- (void)setCalUseExternalURL:(bool)arg1;
- (void)setCalUseKerberos:(bool)arg1;
- (void)setCalUseSSL:(bool)arg1;
- (void)setCalWebServicesRecordGUID:(id)arg1;
- (bool)setValue:(id)arg1 forKey:(id)arg2 forPrincipalWithUID:(id)arg3;
- (id)valueForAccountPropertyKey:(id)arg1;
- (id)valueForKey:(id)arg1 forPrincipalWithUID:(id)arg2;

// Image: /System/Library/PrivateFrameworks/CloudDocs.framework/CloudDocs

- (id)br_displayName;
- (id)br_dsid;
- (id)br_firstName;
- (bool)br_hasPersonaIdentifier;
- (bool)br_isCloudDocsMigrated;
- (bool)br_isCloudDocsMigrationComplete;
- (bool)br_isEligibleiCloudAccount;
- (bool)br_isEnabledForCloudDocs;
- (bool)br_isEnabledForDesktopSync;
- (bool)br_isEnabledForUbiquity;
- (bool)br_isEnabledForiCloudDesktop;
- (bool)br_isManagedAppleID;
- (id)br_lastName;
- (id)br_personaIdentifier;
- (id)br_primaryEmail;
- (void)br_setCloudDocsMigrated:(bool)arg1;
- (void)br_setCloudDocsMigrationComplete:(bool)arg1;
- (void)br_setEnabledForiCloudDesktop:(bool)arg1;

// Image: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon

- (id)ck_accountProperties;
- (id)ck_cloudKitAccount;
- (id)ck_dataclassProperties;
- (id)ck_identifier;

// Image: /System/Library/PrivateFrameworks/ContactsFoundation.framework/ContactsFoundation

- (id)_cn_altDSID;
- (id)_cn_appleAccountAppleID;
- (id)_cn_appleAccountAppleIDAliases;
- (id)_cn_appleID;
- (id)_cn_dsid;
- (id)_cn_firstName;
- (bool)_cn_isAppleDisplayAccount;
- (bool)_cn_isCardDAV;
- (bool)_cn_isChildDelegateAccount;
- (bool)_cn_isLDAP;
- (bool)_cn_isManaged;
- (bool)_cn_isPrimaryAccount;
- (bool)_cn_isPrimaryiCloudAccount;
- (id)_cn_lastName;
- (id)_cn_principalPath;
- (void)setPropertiesFromDelegateInfo:(id)arg1;
- (void)set_cn_altDSID:(id)arg1;
- (void)set_cn_appleID:(id)arg1;
- (void)set_cn_dsid:(id)arg1;
- (void)set_cn_firstName:(id)arg1;
- (void)set_cn_lastName:(id)arg1;
- (void)set_cn_principalPath:(id)arg1;

// Image: /System/Library/PrivateFrameworks/DAEASOAuthFramework.framework/DAEASOAuthFramework

- (unsigned long long)migrationStatus;
- (id)migrationStatusString;
- (void)setMigrationStatus:(unsigned long long)arg1;

// Image: /System/Library/PrivateFrameworks/DMCEnrollmentProvider.framework/DMCEnrollmentProvider

- (bool)dmc_isUnremovableRemotelyManagedAccount;

// Image: /System/Library/PrivateFrameworks/DMCUtilities.framework/DMCUtilities

+ (id)dmc_createManagementAccountWithStore:(id)arg1;

- (id)dmc_DSID;
- (id)dmc_accountQuotaString;
- (id)dmc_accountScheme;
- (id)dmc_altDSID;
- (id)dmc_bearerReauthParams;
- (id)dmc_bearerReauthURL;
- (id)dmc_bearerToken;
- (unsigned long long)dmc_enrollmentMethod;
- (id)dmc_enrollmentToken;
- (unsigned long long)dmc_enrollmentType;
- (id)dmc_enrollmentURL;
- (bool)dmc_isAccountSchemeSharediPad;
- (bool)dmc_isManagementProfileLocked;
- (bool)dmc_isPrimaryAccount;
- (bool)dmc_isVisibleRemoteManagementAccount;
- (id)dmc_managementProfileIdentifier;
- (id)dmc_mdmServerToken;
- (id)dmc_personaIdentifier;
- (id)dmc_remoteManagementAccount;
- (id)dmc_remoteManagingAccountIdentifier;
- (void)dmc_setAccountScheme:(id)arg1;
- (void)dmc_setAltDSID:(id)arg1;
- (void)dmc_setBearerReauthParams:(id)arg1;
- (void)dmc_setBearerReauthURL:(id)arg1;
- (void)dmc_setBearerToken:(id)arg1;
- (void)dmc_setDSID:(id)arg1;
- (void)dmc_setEnrollmentMethod:(unsigned long long)arg1;
- (void)dmc_setEnrollmentToken:(id)arg1;
- (void)dmc_setEnrollmentType:(unsigned long long)arg1;
- (void)dmc_setEnrollmentURL:(id)arg1;
- (void)dmc_setManagementProfileIdentifier:(id)arg1;
- (void)dmc_setManagementProfileLocked:(bool)arg1;
- (void)dmc_setPersonaIdentifier:(id)arg1;
- (void)dmc_setRemoteManagingAccountIdentifier:(id)arg1;
- (void)dmc_setSignInUserIdentifier:(id)arg1;
- (id)dmc_signInUserIdentifier;

// Image: /System/Library/PrivateFrameworks/DigitalSeparation.framework/DigitalSeparation

- (id)ds_accountEmails;

// Image: /System/Library/PrivateFrameworks/FamilyCircle.framework/FamilyCircle

+ (id)fa_accountWithEphemeralAuthResults:(id)arg1;

// Image: /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation

- (id)_gkCredentialForEnvironment:(long long)arg1;
- (id)_gkCredentials;
- (id)_gkCredentialsForEnvironment:(long long)arg1;
- (bool)_gkIsPrimaryForEnvironment:(long long)arg1;
- (id)_gkModifiedDateForProperty:(id)arg1 environment:(long long)arg2;
- (id)_gkPerEnvironmentTokens;
- (id)_gkPlayerInternal;
- (id)_gkPropertyForKey:(id)arg1 environment:(long long)arg2;
- (void)_gkSetPlayerInternal:(id)arg1;
- (void)_gkSetProperty:(id)arg1 forKey:(id)arg2 environment:(long long)arg3;
- (void)_gkSetToken:(id)arg1 forEnvironment:(long long)arg2;
- (id)_gkTokenForEnvironment:(long long)arg1;

// Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon

- (id)description;
- (id)hmd_aa_altDSID;
- (id)hmd_ams_altDSID;
- (id)messagePayload;

// Image: /System/Library/PrivateFrameworks/HomeKitDaemonLegacy.framework/HomeKitDaemonLegacy

- (id)description;
- (id)hmd_aa_altDSID;
- (id)hmd_ams_altDSID;
- (id)messagePayload;

// Image: /System/Library/PrivateFrameworks/HomeUI.framework/HomeUI

- (bool)hasSameAppleMusicServiceAltDSID:(id)arg1;

// Image: /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration

- (bool)MCIsManaged;
- (id)communicationServiceRules;
- (id)mcAccountIdentifier;
- (id)mcBackingPayload;
- (id)mcBackingProfile;
- (id)mcConfigurationProfileIdentifier;
- (id)mcEASAccountEnableNotes;
- (id)mcEnableCalendarsUserOverridable;
- (id)mcEnableContactsUserOverridable;
- (id)mcEnableMailUserOverridable;
- (id)mcEnableNotesUserOverridable;
- (id)mcEnableRemindersUserOverridable;
- (id)mcPayloadUUID;
- (id)mcProfileUUID;
- (bool)mc_isUserEnrollmentAccount;
- (void)setCommunicationServiceRules:(id)arg1;
- (void)setMcAccountIdentifier:(id)arg1;
- (void)setMcConfigurationProfileIdentifier:(id)arg1;
- (void)setMcEASAccountEnableNotes:(id)arg1;
- (void)setMcEnableCalendarsUserOverridable:(id)arg1;
- (void)setMcEnableContactsUserOverridable:(id)arg1;
- (void)setMcEnableMailUserOverridable:(id)arg1;
- (void)setMcEnableNotesUserOverridable:(id)arg1;
- (void)setMcEnableRemindersUserOverridable:(id)arg1;
- (void)setMcPayloadUUID:(id)arg1;
- (void)setMcProfileUUID:(id)arg1;
- (void)unenrollAccountWithCompletionHandler:(id /* block */)arg1;

// Image: /System/Library/PrivateFrameworks/MobileSync.framework/MobileSync

- (id)_usernameFromProperties:(id)arg1;
- (void)applySyncProperties:(id)arg1;
- (bool)isMobileMeAccount;
- (void)setPasswordFromSync:(id)arg1;
- (id)syncIdentityString;

// Image: /System/Library/PrivateFrameworks/NotesSupport.framework/NotesSupport

- (bool)ic_hasICloudEmailAddress;
- (bool)ic_hasPersonaIdentifier;
- (bool)ic_isBasicAccountClass;
- (bool)ic_isFullAccountClass;
- (bool)ic_isICloudNotesAccount;
- (bool)ic_isManagedAppleID;
- (bool)ic_isNotesEnabled;
- (bool)ic_isNotesMigrated;
- (bool)ic_isPrimaryAppleAccount;
- (bool)ic_shouldCreateSeparatePersistentStore;
- (bool)ic_supportsHTMLNotes;
- (bool)ic_supportsModernNotes;

// Image: /System/Library/PrivateFrameworks/PreferencesUI.framework/PreferencesUI

- (bool)isSubscriber;

// Image: /System/Library/PrivateFrameworks/ReminderKit.framework/ReminderKit

- (bool)rem_didChooseToMigrate;
- (bool)rem_didFinishMigration;
- (bool)rem_eligibleForAutoCloudKitMigration;
- (bool)rem_isEligibleForCloudKitReminders;
- (bool)rem_isManagedAppleID;
- (bool)rem_isPrimaryAppleAccount;

// Image: /System/Library/PrivateFrameworks/RemoteManagement.framework/RemoteManagement

+ (id)rm_createBearerAccountWithStore:(id)arg1 username:(id)arg2 description:(id)arg3 enrollmentURL:(id)arg4 authToken:(id)arg5;
+ (id)rm_createMAIDAccountWithStore:(id)arg1 username:(id)arg2 description:(id)arg3 dsid:(id)arg4 altDSID:(id)arg5 personaIdentifier:(id)arg6 enrollmentURL:(id)arg7;
+ (id)rm_createTestAccountWithStore:(id)arg1 username:(id)arg2 description:(id)arg3 enrollmentURL:(id)arg4;

- (id)rm_DSID;
- (id)rm_accountScheme;
- (id)rm_altDSID;
- (id)rm_bearerToken;
- (id)rm_enrollmentToken;
- (id)rm_enrollmentURL;
- (bool)rm_isAccountSchemeBearer;
- (bool)rm_isAccountSchemeMAID;
- (bool)rm_isAccountSchemeTest;
- (bool)rm_managedByOlympus;
- (id)rm_managementSourceIdentifier;
- (id)rm_personaIdentifier;
- (id)rm_remoteManagingAccountIdentifier;
- (void)rm_setAccountScheme:(id)arg1;
- (void)rm_setAltDSID:(id)arg1;
- (void)rm_setBearerToken:(id)arg1;
- (void)rm_setDSID:(id)arg1;
- (void)rm_setEnrollmentToken:(id)arg1;
- (void)rm_setEnrollmentURL:(id)arg1;
- (void)rm_setManagementSourceIdentifier:(id)arg1;
- (void)rm_setPersonaIdentifier:(id)arg1;
- (void)rm_setRemoteManagingAccountIdentifier:(id)arg1;
- (void)rm_setmanagedByOlympus:(bool)arg1;

// Image: /System/Library/PrivateFrameworks/StocksCore.framework/StocksCore

- (bool)sc_isEnabledForStocksDataclass;

// Image: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices

- (id)_ss_DSID;
- (id)_ss_altDSID;
- (id)_ss_hashedDescription;
- (bool)_ss_isAppleAuthenticationAccount;
- (bool)_ss_isDuplicate:(id)arg1;
- (bool)_ss_isIDMSAccount;
- (bool)_ss_isLocalAccount;
- (bool)_ss_isiCloudAccount;
- (bool)_ss_isiTunesAccount;
- (id)_ss_secureToken;
- (void)_ss_setSecureToken:(id)arg1;

// Image: /System/Library/PrivateFrameworks/iTunesCloud.framework/iTunesCloud

- (id)ic_DSID;
- (id)ic_activeMediaTypes;
- (id)ic_ageVerificationExpirationDate;
- (id)ic_altDSID;
- (id)ic_automaticDownloadKinds;
- (id)ic_cloudLibraryStateReason;
- (id)ic_description;
- (id)ic_firstName;
- (id)ic_homeUserIdentifiers;
- (bool)ic_isActiveLockerAccount;
- (bool)ic_isAutomaticDownloadsEnabledForMediaKindMusic;
- (bool)ic_isCloudBackupEnabled;
- (bool)ic_isITunesAccount;
- (bool)ic_isLocalAccount;
- (bool)ic_isManageable;
- (bool)ic_isManagedAppleID;
- (bool)ic_isSandboxed;
- (bool)ic_isSubscriptionStatusEnabled;
- (id)ic_lastName;
- (id)ic_mergeWithCloudLibraryPreference;
- (id)ic_privacyAcknowledgementVersions;
- (id)ic_privateListeningEnabled;
- (id)ic_privateListeningEnabledForHomeUsers;
- (void)ic_setActiveLockerAccount:(bool)arg1;
- (void)ic_setAgeVerificationExpirationDate:(id)arg1;
- (void)ic_setAltDSID:(id)arg1;
- (void)ic_setAutomaticDownloadKinds:(id)arg1;
- (void)ic_setCloudLibraryStateReason:(id)arg1;
- (void)ic_setDSID:(id)arg1;
- (void)ic_setFirstName:(id)arg1;
- (void)ic_setLastName:(id)arg1;
- (void)ic_setManagedAppleID:(bool)arg1;
- (void)ic_setMergeWithCloudLibraryPreference:(id)arg1;
- (void)ic_setPrivateListeningEnabled:(id)arg1;
- (void)ic_setPrivateListeningEnabledForHomeUsers:(id)arg1;
- (void)ic_setSandboxed:(bool)arg1;
- (void)ic_setStorefront:(id)arg1;
- (void)ic_setSubscriptionStatusEnabled:(bool)arg1;
- (void)ic_setUniqueIdentifier:(id)arg1;
- (id)ic_storefront;
- (id)ic_uniqueIdentifier;

@end
