
@interface MSStickerView : UIView <CKAnimationTimerObserver, UIDragInteractionDelegate_Private, UIGestureRecognizerDelegate> {
    bool  _animating;
    double  _animationDuration;
    double  _animationOffset;
    _MSStickerDragPreviewContainerView * _container;
    UIDragInteraction * _dragInteraction;
    id /* block */  _dragPreviewLiftContainerProvider;
    VKCStickerEffectView * _effectView;
    NSArray * _frames;
    CKAnimatedImage * _image;
    CKImageData * _imageData;
    UIImageView * _imageView;
    unsigned long long  _initialFrameIndexForCurrentDrag;
    bool  _initialLayoutComplete;
    bool  _isPeeled;
    UILongPressGestureRecognizer * _longPressRecognizer;
    UIImageView * _outlineImageView;
    PXRoundProgressView * _roundProgressView;
    MSSticker * _sticker;
    NSError * _stickerError;
    UIImage * _stickerImage;
    UITapGestureRecognizer * _tapRecognizer;
    bool  _userExplicitlyUnpausedAnimation;
}

@property (nonatomic) bool animating;
@property (nonatomic) double animationDuration;
@property (nonatomic) double animationOffset;
@property (nonatomic) _MSStickerDragPreviewContainerView *container;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) UIDragInteraction *dragInteraction;
@property (nonatomic, copy) id /* block */ dragPreviewLiftContainerProvider;
@property (nonatomic, retain) VKCStickerEffectView *effectView;
@property (nonatomic, retain) NSArray *frames;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) CKAnimatedImage *image;
@property (nonatomic, retain) CKImageData *imageData;
@property (nonatomic, retain) UIImageView *imageView;
@property (nonatomic) unsigned long long initialFrameIndexForCurrentDrag;
@property (nonatomic) bool initialLayoutComplete;
@property (nonatomic, readonly) bool isAnimated;
@property (nonatomic) bool isPeeled;
@property (nonatomic, readonly) UILongPressGestureRecognizer *longPressRecognizer;
@property (nonatomic, retain) UIImageView *outlineImageView;
@property (nonatomic, retain) PXRoundProgressView *roundProgressView;
@property (nonatomic, retain) MSSticker *sticker;
@property (nonatomic, retain) NSError *stickerError;
@property (nonatomic, retain) UIImage *stickerImage;
@property (readonly) Class superclass;
@property (nonatomic, readonly) UITapGestureRecognizer *tapRecognizer;
@property (nonatomic) bool userExplicitlyUnpausedAnimation;

- (void).cxx_destruct;
- (void)_buildEffectView;
- (void)_configureDragAndDrop;
- (void)_configureEffectView;
- (void)_configureStickerView;
- (id)_dragInteraction:(id)arg1 sessionPropertiesForSession:(id)arg2;
- (void)_dragInteractionDidCancelLiftWithoutDragging:(id)arg1;
- (void)_enableEffectView;
- (bool)_isInsideMessagesCamera;
- (void)_loadAnimatedStickerIfNecessary;
- (void)_loadSticker;
- (void)_logStickerUsage;
- (void)_prepareForReuse;
- (void)_registerRepresentationsInItemProvider:(id)arg1;
- (void)_registerStandardRepresentationsInItemProvider:(id)arg1;
- (void)_removeEffectView;
- (void)_resetPeel;
- (void)_setImage:(id)arg1;
- (void)_stickerPreviewCachePreviewDidChange:(id)arg1;
- (id)_stickerSendManager;
- (void)_swapWithOutlineImage;
- (void)_updateStickerView;
- (id)accessibilityLabel;
- (void)addHEICImage:(id)arg1 completion:(id /* block */)arg2;
- (void)addPNGImage:(id)arg1 completion:(id /* block */)arg2;
- (void)animatedStickerCreationProgressChanged:(id)arg1 progress:(double)arg2;
- (bool)animating;
- (double)animationDuration;
- (bool)animationExplicitlyResumed;
- (double)animationOffset;
- (void)animationTimerFired:(double)arg1;
- (void)clearCachedPreviewsForCurrentSticker;
- (id)container;
- (void)dealloc;
- (void)didMoveToWindow;
- (id)dragInteraction;
- (void)dragInteraction:(id)arg1 item:(id)arg2 willAnimateCancelWithAnimator:(id)arg3;
- (id)dragInteraction:(id)arg1 itemsForBeginningSession:(id)arg2;
- (bool)dragInteraction:(id)arg1 prefersFullSizePreviewsForSession:(id)arg2;
- (id)dragInteraction:(id)arg1 previewForLiftingItem:(id)arg2 session:(id)arg3;
- (void)dragInteraction:(id)arg1 session:(id)arg2 didEndWithOperation:(unsigned long long)arg3;
- (void)dragInteraction:(id)arg1 sessionWillBegin:(id)arg2;
- (void)dragInteraction:(id)arg1 willAnimateLiftWithAnimator:(id)arg2 session:(id)arg3;
- (id /* block */)dragPreviewLiftContainerProvider;
- (id)effectView;
- (id)frames;
- (void)handleLongPress:(id)arg1;
- (void)handleTap:(id)arg1;
- (id)image;
- (id)imageData;
- (id)imageView;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 sticker:(id)arg2;
- (unsigned long long)initialFrameIndexForCurrentDrag;
- (bool)initialLayoutComplete;
- (bool)isAnimated;
- (bool)isAnimating;
- (bool)isPeeled;
- (void)layoutSubviews;
- (id)longPressRecognizer;
- (id)outlineImageView;
- (void)pauseVisionKitEffect:(bool)arg1;
- (void)prepareForSnapshotting;
- (id)representationForRole:(id)arg1;
- (id)roundProgressView;
- (void)setAnimating:(bool)arg1;
- (void)setAnimationDuration:(double)arg1;
- (void)setAnimationOffset:(double)arg1;
- (void)setContainer:(id)arg1;
- (void)setDragPreviewLiftContainerProvider:(id /* block */)arg1;
- (void)setEffectView:(id)arg1;
- (void)setFrames:(id)arg1;
- (void)setImage:(id)arg1;
- (void)setImageData:(id)arg1;
- (void)setImageView:(id)arg1;
- (void)setInitialFrameIndexForCurrentDrag:(unsigned long long)arg1;
- (void)setInitialLayoutComplete:(bool)arg1;
- (void)setIsPeeled:(bool)arg1;
- (void)setOutlineImageView:(id)arg1;
- (void)setRoundProgressView:(id)arg1;
- (void)setSticker:(id)arg1;
- (void)setStickerError:(id)arg1;
- (void)setStickerImage:(id)arg1;
- (void)setUserExplicitlyUnpausedAnimation:(bool)arg1;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (void)stageStickerForce:(bool)arg1;
- (void)startAnimating;
- (id)sticker;
- (id)stickerError;
- (id)stickerImage;
- (void)stopAnimating;
- (id)tapRecognizer;
- (void)updateAnimationTimerObserving;
- (bool)userExplicitlyUnpausedAnimation;

@end
