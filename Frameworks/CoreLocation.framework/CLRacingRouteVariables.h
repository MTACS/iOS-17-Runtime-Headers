
@interface CLRacingRouteVariables : NSObject <NSCopying, NSSecureCoding> {
    int  _currentRouteDataPointCounter;
    double  _endOfRaceTimeThreshold;
    int  _inutileDataPointCounter;
    int  _lastMatchedPointIndex;
    int  _lastMatchedPointIndexOnReferenceRoute;
    bool  _locationPointIsOutsideOfAcceptedRange;
    bool  _locationPointNotMatched;
    int  _matchedPointCounter;
    int  _matrixCellIndexForLastMatchedPoint;
    double  _nearestNeighborMaximumAcceptedDistance;
    int  _numberOfRoutePointsToAdd;
    int  _offRouteDataPointCounter;
    int  _offRouteGraceDuration;
    bool  _prematureRaceEndDetected;
    bool  _projectedOnNearestPoint;
    bool  _raceEndPointDetected;
    bool  _raceSessionExpired;
    bool  _raceStartPointDetected;
    bool  _racingRouteAnalyticsSent;
    int  _referenceRouteDataPointCounter;
    double  _referenceRouteTotalLength;
    bool  _referenceRouteTotalLengthDetermined;
    double  _registeredTimeAtThresholdDistance;
    bool  _rollingBufferReachedEndOfReferenceRoute;
    int  _rollingBufferStartIndexOnReferenceRoute;
    int  _rollingBufferUpdateCounter;
    bool  _routeConfigurationSuccessful;
    int  _routePointsBufferSize;
    double  _timestampOfLastMatchedPointOnReferenceRoute;
    bool  _userIsOffRoute;
}

@property (nonatomic, readonly) int currentRouteDataPointCounter;
@property (nonatomic, readonly) double endOfRaceTimeThreshold;
@property (nonatomic, readonly) int inutileDataPointCounter;
@property (nonatomic, readonly) int lastMatchedPointIndex;
@property (nonatomic, readonly) int lastMatchedPointIndexOnReferenceRoute;
@property (nonatomic, readonly) bool locationPointIsOutsideOfAcceptedRange;
@property (nonatomic, readonly) bool locationPointNotMatched;
@property (nonatomic, readonly) int matchedPointCounter;
@property (nonatomic, readonly) int matrixCellIndexForLastMatchedPoint;
@property (nonatomic, readonly) double nearestNeighborMaximumAcceptedDistance;
@property (nonatomic, readonly) int numberOfRoutePointsToAdd;
@property (nonatomic, readonly) int offRouteDataPointCounter;
@property (nonatomic, readonly) int offRouteGraceDuration;
@property (nonatomic, readonly) bool prematureRaceEndDetected;
@property (nonatomic, readonly) bool projectedOnNearestPoint;
@property (nonatomic, readonly) bool raceEndPointDetected;
@property (nonatomic, readonly) bool raceSessionExpired;
@property (nonatomic, readonly) bool raceStartPointDetected;
@property (nonatomic, readonly) bool racingRouteAnalyticsSent;
@property (nonatomic, readonly) int referenceRouteDataPointCounter;
@property (nonatomic, readonly) double referenceRouteTotalLength;
@property (nonatomic, readonly) bool referenceRouteTotalLengthDetermined;
@property (nonatomic, readonly) double registeredTimeAtThresholdDistance;
@property (nonatomic, readonly) bool rollingBufferReachedEndOfReferenceRoute;
@property (nonatomic, readonly) int rollingBufferStartIndexOnReferenceRoute;
@property (nonatomic, readonly) int rollingBufferUpdateCounter;
@property (nonatomic, readonly) bool routeConfigurationSuccessful;
@property (nonatomic, readonly) int routePointsBufferSize;
@property (nonatomic, readonly) double timestampOfLastMatchedPointOnReferenceRoute;
@property (nonatomic, readonly) bool userIsOffRoute;

+ (bool)supportsSecureCoding;

- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (int)currentRouteDataPointCounter;
- (void)encodeWithCoder:(id)arg1;
- (double)endOfRaceTimeThreshold;
- (id)initWithCoder:(id)arg1;
- (id)initWithRaceStartPointDetected:(bool)arg1 raceEndPointDetected:(bool)arg2 userIsOffRoute:(bool)arg3 projectedOnNearestPoint:(bool)arg4 raceSessionExpired:(bool)arg5 rollingBufferReachedEndOfReferenceRoute:(bool)arg6 routeConfigurationSuccessful:(bool)arg7 racingRouteAnalyticsSent:(bool)arg8 prematureRaceEndDetected:(bool)arg9 referenceRouteTotalLengthDetermined:(bool)arg10 locationPointIsOutsideOfAcceptedRange:(bool)arg11 locationPointNotMatched:(bool)arg12 routePointsBufferSize:(int)arg13 numberOfRoutePointsToAdd:(int)arg14 offRouteGraceDuration:(int)arg15 matchedPointCounter:(int)arg16 referenceRouteDataPointCounter:(int)arg17 currentRouteDataPointCounter:(int)arg18 offRouteDataPointCounter:(int)arg19 inutileDataPointCounter:(int)arg20 rollingBufferUpdateCounter:(int)arg21 lastMatchedPointIndex:(int)arg22 lastMatchedPointIndexOnReferenceRoute:(int)arg23 rollingBufferStartIndexOnReferenceRoute:(int)arg24 matrixCellIndexForLastMatchedPoint:(int)arg25 referenceRouteTotalLength:(double)arg26 timestampOfLastMatchedPointOnReferenceRoute:(double)arg27 registeredTimeAtThresholdDistance:(double)arg28 endOfRaceTimeThreshold:(double)arg29 nearestNeighborMaximumAcceptedDistance:(double)arg30;
- (int)inutileDataPointCounter;
- (int)lastMatchedPointIndex;
- (int)lastMatchedPointIndexOnReferenceRoute;
- (bool)locationPointIsOutsideOfAcceptedRange;
- (bool)locationPointNotMatched;
- (int)matchedPointCounter;
- (int)matrixCellIndexForLastMatchedPoint;
- (double)nearestNeighborMaximumAcceptedDistance;
- (int)numberOfRoutePointsToAdd;
- (int)offRouteDataPointCounter;
- (int)offRouteGraceDuration;
- (bool)prematureRaceEndDetected;
- (bool)projectedOnNearestPoint;
- (bool)raceEndPointDetected;
- (bool)raceSessionExpired;
- (bool)raceStartPointDetected;
- (bool)racingRouteAnalyticsSent;
- (int)referenceRouteDataPointCounter;
- (double)referenceRouteTotalLength;
- (bool)referenceRouteTotalLengthDetermined;
- (double)registeredTimeAtThresholdDistance;
- (bool)rollingBufferReachedEndOfReferenceRoute;
- (int)rollingBufferStartIndexOnReferenceRoute;
- (int)rollingBufferUpdateCounter;
- (bool)routeConfigurationSuccessful;
- (int)routePointsBufferSize;
- (double)timestampOfLastMatchedPointOnReferenceRoute;
- (bool)userIsOffRoute;

@end
