
@interface RoomPlan.SettingsManager : _TtCs12_SwiftObject {
    void $__lazy_storage_$_arKitFramerate;
    void $__lazy_storage_$_arViewFramerate;
    void $__lazy_storage_$_arViewResolution;
    void $__lazy_storage_$_isBloomRenderedIn2Passes;
    void animateIncompleteState;
    void arKitFramerateLowerBound;
    void arViewFramerateLowerBound;
    void arViewPixelFormat;
    void arViewResolutionLowerBound;
    void areCurvedWallsEnabled;
    void bloomSigma;
    void cameraDimmingFactor;
    void chairSizeLimitationPercentage;
    void cornerCompletionTimeout;
    void debugIndividualMode;
    void delegate;
    void dollHouseAmbientLightIntensity;
    void dollHouseDirectionalLightDirection;
    void dollHouseDirectionalLightIntensity;
    void dollHouseEmissive;
    void dollHouseGradient;
    void dollHouseHemi;
    void dollHouseMetallic;
    void dollHouseRoughness;
    void dollHouseShadowBias;
    void dollHouseShadowDistance;
    void enableNonUniformWallHeight;
    void exportDoorsWindows;
    void exportOpenings;
    void floorAnimationDuration;
    void framerateVelocityThreshold;
    void hideSelectiveObjects;
    void isARFrameLogEnabled;
    void isARQATracingEnabled;
    void isFramerateLogEnabled;
    void isLightingDebugEnabled;
    void isLiveDumpEnabled;
    void isModelEnabled;
    void isOURGBRefinementEnabled;
    void isOcclusionEnabled;
    void isPerimeterDebugVisualizationEnabled;
    void isPerimeterLogDumpingEnabled;
    void isSmoothedSceneDepthEnabled;
    void isVideoCompositingEnabled;
    void itemColorMode;
    void lineFadeInDuration;
    void lineFadeOutDuration;
    void lineFeatheringMaxDistance;
    void lineWidth;
    void lowConfidenceOcclusionFactor;
    void mediumConfidenceOcclusionFactor;
    void objectAnimationDuration;
    void objectRenderingMode;
    void occlusionAlphaMinValue;
    void occlusionTolerance;
    void openingAnimationDuration;
    void renderARMarkers;
    void renderBloom;
    void renderFloors;
    void renderObjects;
    void renderOpenings;
    void renderWalls;
    void resolutionVelocityThreshold;
    void showStatistics;
    void sinkOverlapPercentage;
    void upscaleDepth;
    void useAlphaOcclusion;
    void useDeterministicFPSMode;
    void useDynamicArViewFormat;
    void wallAlignInWorld;
    void wallAnimationDuration;
    void worldSpaceChairThickness;
    void worldSpaceTableThickness;
}

@end
