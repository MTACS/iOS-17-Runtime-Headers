
@interface CKSyncEngineSendChangesOperation : NSOperation <CKPropertiesDescription> {
    id /* block */  _batchCompletionBlock;
    bool  _continueModifyingPendingChangesAfterFailure;
    CKDatabase * _database;
    NSError * _error;
    NSMutableDictionary * _errorsByRecordID;
    int  _executionState;
    unsigned long long  _maxZoneCountPerBatch;
    id /* block */  _modifyPendingChangesCompletionBlock;
    id /* block */  _modifyRecordZonesCompletionBlock;
    id /* block */  _networkAttributionBundleIDOverrideBlock;
    NSOperationQueue * _operationQueue;
    CKSyncEngineSendChangesOptions * _options;
    id /* block */  _pendingDatabaseChangesBlock;
    id /* block */  _perRecordDeleteBlock;
    id /* block */  _perRecordProgressBlock;
    id /* block */  _perRecordSaveBlock;
    id /* block */  _populateNextBatchBlock;
    bool  _repeatZoneModificationsUntilNoneLeft;
    id /* block */  _willEnqueueOperationBlock;
}

@property (nonatomic, copy) id /* block */ batchCompletionBlock;
@property (nonatomic) bool continueModifyingPendingChangesAfterFailure;
@property (nonatomic, readonly) CKDatabase *database;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSError *error;
@property (nonatomic, retain) NSMutableDictionary *errorsByRecordID;
@property (readonly) unsigned long long hash;
@property (nonatomic) unsigned long long maxZoneCountPerBatch;
@property (nonatomic, copy) id /* block */ modifyPendingChangesCompletionBlock;
@property (nonatomic, copy) id /* block */ modifyRecordZonesCompletionBlock;
@property (nonatomic, copy) id /* block */ networkAttributionBundleIDOverrideBlock;
@property (nonatomic, retain) NSOperationQueue *operationQueue;
@property (nonatomic, readonly) CKSyncEngineSendChangesOptions *options;
@property (nonatomic, copy) id /* block */ pendingDatabaseChangesBlock;
@property (nonatomic, copy) id /* block */ perRecordDeleteBlock;
@property (nonatomic, copy) id /* block */ perRecordProgressBlock;
@property (nonatomic, copy) id /* block */ perRecordSaveBlock;
@property (nonatomic, copy) id /* block */ populateNextBatchBlock;
@property (nonatomic) bool repeatZoneModificationsUntilNoneLeft;
@property (readonly) Class superclass;
@property (nonatomic, copy) id /* block */ willEnqueueOperationBlock;

+ (bool)_removesDependenciesAfterFinish;

- (void).cxx_destruct;
- (void)CKDescribePropertiesUsing:(id)arg1;
- (id)CKDescriptionClassName;
- (void)addNextModifyOperationOrFinishIfNoRemainingWorkIncludingZoneChanges:(bool)arg1;
- (bool)addNextModifyRecordZonesBatch;
- (void)addNextModifyRecordsBatchWithCompletionHandler:(id /* block */)arg1;
- (id /* block */)batchCompletionBlock;
- (void)cancel;
- (id)cancelledError;
- (bool)continueModifyingPendingChangesAfterFailure;
- (id)database;
- (id)description;
- (id)error;
- (id)errorsByRecordID;
- (void)finishWithError:(id)arg1;
- (id)init;
- (id)initWithDatabase:(id)arg1 options:(id)arg2;
- (bool)isAsynchronous;
- (bool)isExecuting;
- (bool)isFinished;
- (unsigned long long)maxZoneCountPerBatch;
- (id /* block */)modifyPendingChangesCompletionBlock;
- (id /* block */)modifyRecordZonesCompletionBlock;
- (id /* block */)networkAttributionBundleIDOverrideBlock;
- (id)operationQueue;
- (id)operationToModifyBatch:(id)arg1;
- (id)options;
- (id /* block */)pendingDatabaseChangesBlock;
- (id /* block */)perRecordDeleteBlock;
- (id /* block */)perRecordProgressBlock;
- (id /* block */)perRecordSaveBlock;
- (id /* block */)populateNextBatchBlock;
- (id)redactedDescription;
- (bool)repeatZoneModificationsUntilNoneLeft;
- (void)setBatchCompletionBlock:(id /* block */)arg1;
- (void)setContinueModifyingPendingChangesAfterFailure:(bool)arg1;
- (void)setError:(id)arg1;
- (void)setErrorsByRecordID:(id)arg1;
- (void)setMaxZoneCountPerBatch:(unsigned long long)arg1;
- (void)setModifyPendingChangesCompletionBlock:(id /* block */)arg1;
- (void)setModifyRecordZonesCompletionBlock:(id /* block */)arg1;
- (void)setNetworkAttributionBundleIDOverrideBlock:(id /* block */)arg1;
- (void)setOperationQueue:(id)arg1;
- (void)setPendingDatabaseChangesBlock:(id /* block */)arg1;
- (void)setPerRecordDeleteBlock:(id /* block */)arg1;
- (void)setPerRecordProgressBlock:(id /* block */)arg1;
- (void)setPerRecordSaveBlock:(id /* block */)arg1;
- (void)setPopulateNextBatchBlock:(id /* block */)arg1;
- (void)setRepeatZoneModificationsUntilNoneLeft:(bool)arg1;
- (void)setWillEnqueueOperationBlock:(id /* block */)arg1;
- (void)start;
- (void)transitionToExecuting;
- (void)transitionToFinished;
- (id /* block */)willEnqueueOperationBlock;

@end
