
@interface CNContactPhotoView : UIControl <CNAvatarViewDelegate, CNPhotoPickerViewControllerDelegate, CNPresenterDelegate, CNVisualIdentityPickerPresenterDelegate, QLPreviewControllerDataSource, QLPreviewControllerDelegate, UIDropInteractionDelegate, UIImagePickerControllerDelegate, UINavigationControllerDelegate> {
    bool  _acceptsImageDrop;
    CNAvatarView * _avatarView;
    NSArray * _contacts;
    PRLikeness * _currentLikeness;
    <CNContactPhotoViewDelegate> * _delegate;
    UIDropInteraction * _dropInteraction;
    UIButton * _editPhotoButton;
    bool  _editing;
    bool  _isAnimatingBounce;
    double  _labelAlpha;
    UILongPressGestureRecognizer * _longPressGestureRecognizer;
    bool  _modified;
    PRLikeness * _originalLikeness;
    CNMutableContact * _pendingEditContact;
    CNPhotoPickerViewController * _photoPicker;
    <CNPresenterDelegate> * _presenterDelegate;
    bool  _prohibitsPersonaFetch;
    bool  _shouldAllowTakePhotoAction;
    bool  _showEditingLabel;
    UITapGestureRecognizer * _tapGestureRecognizer;
    NSArray * _variableConstraints;
}

@property (nonatomic) bool acceptsImageDrop;
@property (nonatomic, retain) CNAvatarView *avatarView;
@property (nonatomic, retain) NSArray *contacts;
@property (nonatomic, retain) PRLikeness *currentLikeness;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CNContactPhotoViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) UIDropInteraction *dropInteraction;
@property (nonatomic, retain) UIButton *editPhotoButton;
@property (getter=isEditing, nonatomic) bool editing;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isAnimatingBounce;
@property (readonly) bool isPresentingModalViewController;
@property (nonatomic) double labelAlpha;
@property (nonatomic, retain) UILongPressGestureRecognizer *longPressGestureRecognizer;
@property (nonatomic) bool modified;
@property (nonatomic, readonly) CNMutableContact *mutableContact;
@property (nonatomic, retain) PRLikeness *originalLikeness;
@property (nonatomic, retain) CNMutableContact *pendingEditContact;
@property (nonatomic, retain) CNPhotoPickerViewController *photoPicker;
@property (nonatomic) <CNPresenterDelegate> *presenterDelegate;
@property (nonatomic) bool prohibitsPersonaFetch;
@property (nonatomic, readonly) bool shouldAllowTakePhotoAction;
@property (nonatomic) bool showEditingLabel;
@property (readonly) Class superclass;
@property (nonatomic, retain) UITapGestureRecognizer *tapGestureRecognizer;
@property (nonatomic, retain) NSArray *variableConstraints;

+ (struct CGSize { double x1; double x2; })defaultSize;
+ (id)descriptorForRequiredKeys;
+ (id)descriptorForRequiredKeysWithThreeDTouchEnabled:(bool)arg1;
+ (bool)requiresConstraintBasedLayout;
+ (id)supportedPasteboardTypes;

- (void).cxx_destruct;
- (void)_bounceSmallPhoto;
- (bool)_isUsingCuratedPhoto;
- (bool)_isUsingSilhouette;
- (void)_presentFullScreenPhoto:(id)arg1;
- (void)_presentPhotoPicker;
- (void)_zoomContactPhoto;
- (bool)acceptsImageDrop;
- (void)avatarTapped:(id)arg1;
- (id)avatarView;
- (bool)canBecomeFirstResponder;
- (bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (id)contact;
- (id)contacts;
- (void)copy:(id)arg1;
- (id)currentImageData;
- (id)currentLikeness;
- (void)dealloc;
- (id)delegate;
- (void)didUpdateContentForAvatarView:(id)arg1;
- (void)disablePhotoTapGesture;
- (id)dropInteraction;
- (bool)dropInteraction:(id)arg1 canHandleSession:(id)arg2;
- (void)dropInteraction:(id)arg1 performDrop:(id)arg2;
- (id)dropInteraction:(id)arg1 sessionDidUpdate:(id)arg2;
- (id)editPhotoButton;
- (bool)hasPhoto;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 shouldAllowTakePhotoAction:(bool)arg2 threeDTouchEnabled:(bool)arg3 contactStore:(id)arg4 allowsImageDrops:(bool)arg5 imageRenderer:(id)arg6;
- (bool)isAnimatingBounce;
- (bool)isEditing;
- (bool)isMeContact;
- (bool)isPresentingModalViewController;
- (double)labelAlpha;
- (void)longPressGesture:(id)arg1;
- (id)longPressGestureRecognizer;
- (void)menuWillHide:(id)arg1;
- (bool)modified;
- (id)mutableContact;
- (id)newPendingContactPreservingChangesFrom:(id)arg1;
- (long long)numberOfPreviewItemsInPreviewController:(id)arg1;
- (id)originalLikeness;
- (void)paste:(id)arg1;
- (id)pendingEditContact;
- (id)photoPicker;
- (void)photoPicker:(id)arg1 didUpdatePhotoForContact:(id)arg2 withContactImage:(id)arg3;
- (void)photoPickerDidCancel:(id)arg1;
- (void)presentPhotoPicker;
- (void)presentPhotoPickerWithImageData:(id)arg1;
- (id)presenterDelegate;
- (id)presentingViewControllerForAvatarView:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })previewController:(id)arg1 frameForPreviewItem:(id)arg2 inSourceView:(id*)arg3;
- (id)previewController:(id)arg1 previewItemAtIndex:(long long)arg2;
- (id)previewController:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg3;
- (id)previewController:(id)arg1 transitionViewForPreviewItem:(id)arg2;
- (void)previewControllerDidDismiss:(id)arg1;
- (id)previewPath;
- (bool)prohibitsPersonaFetch;
- (void)reloadData;
- (void)resetPhoto;
- (void)saveChangesFromPendingContact:(id)arg1 toContact:(id)arg2;
- (void)saveEdits;
- (void)sender:(id)arg1 dismissViewController:(id)arg2;
- (void)sender:(id)arg1 dismissViewController:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)sender:(id)arg1 presentViewController:(id)arg2;
- (void)setAcceptsImageDrop:(bool)arg1;
- (void)setAvatarView:(id)arg1;
- (void)setContacts:(id)arg1;
- (void)setCurrentLikeness:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDropInteraction:(id)arg1;
- (void)setEditPhotoButton:(id)arg1;
- (void)setEditing:(bool)arg1;
- (void)setEditing:(bool)arg1 preservingChanges:(bool)arg2;
- (void)setHighlightedFrame:(bool)arg1;
- (void)setIsAnimatingBounce:(bool)arg1;
- (void)setLabelAlpha:(double)arg1;
- (void)setLongPressGestureRecognizer:(id)arg1;
- (void)setModified:(bool)arg1;
- (void)setOriginalLikeness:(id)arg1;
- (void)setPendingEditContact:(id)arg1;
- (void)setPhotoPicker:(id)arg1;
- (void)setPresenterDelegate:(id)arg1;
- (void)setProhibitsPersonaFetch:(bool)arg1;
- (void)setShowEditingLabel:(bool)arg1;
- (void)setTapGestureRecognizer:(id)arg1;
- (void)setVariableConstraints:(id)arg1;
- (bool)shouldAllowTakePhotoAction;
- (bool)showEditingLabel;
- (id)tapGestureRecognizer;
- (void)updateEditPhotoButton;
- (void)updateFontSizes;
- (void)updatePendingContactWithEditedContact:(id)arg1;
- (void)updatePendingContactWithEditedPropertyItem:(id)arg1;
- (void)updatePhoto;
- (void)updateViewsAndNotifyDelegate:(bool)arg1;
- (id)variableConstraints;
- (void)visualIdentityPicker:(id)arg1 presentationControllerWillDismiss:(id)arg2;
- (void)willBeginPreviewInteractionForAvatarView:(id)arg1;

@end
