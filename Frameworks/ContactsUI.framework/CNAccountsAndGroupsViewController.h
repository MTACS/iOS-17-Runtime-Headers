
@interface CNAccountsAndGroupsViewController : UIViewController <CNAccountsAndGroupsActionsProviderDelegate, CNAccountsAndGroupsCellDelegate, CNContactListActionDelegate, CNUIEditAuthorizationControllerDelegate, UICollectionViewDelegate, UICollectionViewDropDelegate> {
    CNAccountsAndGroupsActionsProvider * _actionsProvider;
    CNUIUserActivityManager * _activityManager;
    UIBarButtonItem * _addGroupBarButtonItem;
    UIKeyCommand * _addGroupKeyCommand;
    bool  _allowsCanceling;
    bool  _allowsDone;
    bool  _allowsEditing;
    long long  _buttonBehavior;
    UIBarButtonItem * _cancelBarButtonItem;
    UICollectionView * _collectionView;
    CNContainerDataSource * _containerDataSource;
    CNAccountsAndGroupsAuthorizationContext * _currentAuthorizationContext;
    CNAccountsAndGroupsDataSource * _dataSource;
    <CNAccountsAndGroupsViewControllerDelegate> * _delegate;
    UICollectionViewDiffableDataSource * _diffableDataSource;
    CNUIEditAuthorizationController * _editAuthorizationController;
    CNUIGroupsAndContainersSaveManager * _groupsAndContainersSaveManager;
    bool  _isVisible;
    CNManagedConfiguration * _managedConfiguration;
    bool  _needsReload;
    UIViewController * _potentiallyPresentedViewController;
    _UIDiffableDataSourceOutlineSectionController * _sectionController;
}

@property (nonatomic, retain) CNAccountsAndGroupsActionsProvider *actionsProvider;
@property (nonatomic, readonly) CNUIUserActivityManager *activityManager;
@property (nonatomic, retain) UIBarButtonItem *addGroupBarButtonItem;
@property (nonatomic, retain) UIKeyCommand *addGroupKeyCommand;
@property (nonatomic) bool allowsCanceling;
@property (nonatomic) bool allowsDone;
@property (nonatomic) bool allowsEditing;
@property (nonatomic) long long buttonBehavior;
@property (nonatomic, retain) UIBarButtonItem *cancelBarButtonItem;
@property (retain) UICollectionView *collectionView;
@property (nonatomic, retain) CNContainerDataSource *containerDataSource;
@property (nonatomic, retain) CNAccountsAndGroupsAuthorizationContext *currentAuthorizationContext;
@property (nonatomic, retain) CNAccountsAndGroupsDataSource *dataSource;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CNAccountsAndGroupsViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (retain) UICollectionViewDiffableDataSource *diffableDataSource;
@property (nonatomic, retain) CNUIEditAuthorizationController *editAuthorizationController;
@property (nonatomic, retain) CNUIGroupsAndContainersSaveManager *groupsAndContainersSaveManager;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isVisible;
@property (nonatomic, retain) CNManagedConfiguration *managedConfiguration;
@property (nonatomic) bool needsReload;
@property (nonatomic, retain) UIViewController *potentiallyPresentedViewController;
@property (retain) _UIDiffableDataSourceOutlineSectionController *sectionController;
@property (readonly) Class superclass;

+ (id)allowedDropTypes;
+ (id)log;

- (void).cxx_destruct;
- (void)_updateUserActivity;
- (void)action:(id)arg1 presentViewController:(id)arg2;
- (void)actionDidFinish:(id)arg1;
- (id)actionsProvider;
- (id)activityManager;
- (void)addDefaultGroup:(id)arg1;
- (id)addGroupBarButtonItem;
- (id)addGroupKeyCommand;
- (bool)allowsCanceling;
- (bool)allowsDone;
- (bool)allowsEditing;
- (void)authorizedAddContacts:(id)arg1 toDestinationItem:(id)arg2;
- (void)authorizedSetCollectionViewEditing:(bool)arg1;
- (void)authorizedSetViewEditing:(bool)arg1 animated:(bool)arg2;
- (long long)buttonBehavior;
- (bool)canBecomeFirstResponder;
- (void)cancel:(id)arg1;
- (id)cancelBarButtonItem;
- (void)cellTextViewDidChangeHeight;
- (void)cleanUpItemIfNeeded:(id)arg1;
- (void)clearNavigationButtonsIfNeeded;
- (id)collectionView;
- (bool)collectionView:(id)arg1 canFocusItemAtIndexPath:(id)arg2;
- (bool)collectionView:(id)arg1 canHandleDropSession:(id)arg2;
- (id)collectionView:(id)arg1 contextMenuConfiguration:(id)arg2 dismissalPreviewForItemAtIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 contextMenuConfiguration:(id)arg2 highlightPreviewForItemAtIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 contextMenuConfigurationForItemsAtIndexPaths:(id)arg2 point:(struct CGPoint { double x1; double x2; })arg3;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 dropSessionDidUpdate:(id)arg2 withDestinationIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 performDropWithCoordinator:(id)arg2;
- (bool)collectionView:(id)arg1 shouldHighlightItemAtIndexPath:(id)arg2;
- (bool)collectionView:(id)arg1 shouldSelectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 willEndContextMenuInteractionWithConfiguration:(id)arg2 animator:(id)arg3;
- (void)configureDataSource;
- (void)contactStoreDidChange:(id)arg1;
- (id)containerDataSource;
- (void)contentSizeCategoryDidChange:(id)arg1;
- (id)currentAuthorizationContext;
- (id)currentlySelectedItem;
- (id)dataSource;
- (void)dealloc;
- (id)delegate;
- (void)deselectAllItems;
- (void)didTapCollectionView:(id)arg1;
- (id)diffableDataSource;
- (void)dismissKeyboard;
- (id)editAuthorizationController;
- (void)editAuthorizationController:(id)arg1 authorizationDidFinishWithResult:(long long)arg2;
- (bool)editingCollectionViewRequiresAuthorization;
- (void)expandSectionForAccountWithIdentifier:(id)arg1;
- (id)groupsAndContainersSaveManager;
- (id)groupsStyle;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (bool)isAnyListCellCurrentlyEditing;
- (bool)isCollectionViewEditing;
- (bool)isNotificationInternalSave:(id)arg1;
- (bool)isVisible;
- (void)item:(id)arg1 didEndEditingWithName:(id)arg2;
- (void)keyboardWillHide:(id)arg1;
- (void)keyboardWillShow:(id)arg1;
- (id)layout;
- (id)managedConfiguration;
- (id)menuForContainers;
- (id)multitaskingDragExclusionRects;
- (bool)needsReload;
- (id)potentiallyPresentedViewController;
- (void)presentController:(id)arg1 animated:(bool)arg2;
- (void)presentErrorAlertWithMessage:(id)arg1 animated:(bool)arg2;
- (void)presentErrorAlertWithTitle:(id)arg1 message:(id)arg2 animated:(bool)arg3;
- (id)presentingViewControllerForActions;
- (void)reloadAddGroupButton;
- (void)reloadCollectionViewAddingPlaceholderItem:(id)arg1 inSectionWithIdentifier:(id)arg2;
- (void)reloadCollectionViewDeletingItem:(id)arg1;
- (void)reloadCollectionViewForSectionWithIdentifier:(id)arg1 settingFilterForEditingItem:(bool)arg2 allowsReloadWhenEditing:(bool)arg3;
- (void)reloadData;
- (void)removePlaceholderCellsIfNeededInSection:(id)arg1 animated:(bool)arg2;
- (void)resignAllFirstRespondersSavingCurrentlyEditing:(bool)arg1;
- (void)restoreCurrentlyEditingGroupIfNeeded;
- (id)sectionController;
- (void)selectAllContacts;
- (void)setActionsProvider:(id)arg1;
- (void)setAddGroupBarButtonItem:(id)arg1;
- (void)setAddGroupKeyCommand:(id)arg1;
- (void)setAllowsCanceling:(bool)arg1;
- (void)setAllowsDone:(bool)arg1;
- (void)setAllowsEditing:(bool)arg1;
- (void)setButtonBehavior:(long long)arg1;
- (void)setCancelBarButtonItem:(id)arg1;
- (void)setCollectionView:(id)arg1;
- (void)setContainerDataSource:(id)arg1;
- (void)setCurrentAuthorizationContext:(id)arg1;
- (void)setDataSource:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDiffableDataSource:(id)arg1;
- (void)setEditAuthorizationController:(id)arg1;
- (void)setEditing:(bool)arg1 animated:(bool)arg2;
- (void)setEditingForGroupItem:(id)arg1;
- (void)setGroupsAndContainersSaveManager:(id)arg1;
- (void)setIsVisible:(bool)arg1;
- (void)setManagedConfiguration:(id)arg1;
- (void)setNeedsReload:(bool)arg1;
- (void)setPotentiallyPresentedViewController:(id)arg1;
- (void)setSectionController:(id)arg1;
- (void)setUpCollectionView;
- (bool)shouldEnableItem:(id)arg1;
- (bool)shouldSetFirstResponder;
- (bool)shouldShowCancelButton;
- (void)showEditAuthorizationPaneWithAuthorizationContext:(id)arg1 animated:(bool)arg2;
- (void)traitCollectionDidChange:(id)arg1;
- (void)updateNavigationButtons;
- (void)updateSelectionIfNeeded;
- (void)updateToolbarVisibility;
- (bool)viewCanReload;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewIsAppearing:(bool)arg1;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;

@end
